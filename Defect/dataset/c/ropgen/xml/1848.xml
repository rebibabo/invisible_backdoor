<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1848.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">curses_setup</name><parameter_list pos:start="1:25" pos:end="1:30">(<parameter pos:start="1:26" pos:end="1:29"><decl pos:start="1:26" pos:end="1:29"><type pos:start="1:26" pos:end="1:29"><name pos:start="1:26" pos:end="1:29">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="125:1">{<block_content pos:start="5:5" pos:end="123:37">

    <decl_stmt pos:start="5:5" pos:end="11:6"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="11:5"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:28"><name pos:start="5:12" pos:end="5:25">colour_default</name><index pos:start="5:26" pos:end="5:28">[<expr pos:start="5:27" pos:end="5:27"><literal type="number" pos:start="5:27" pos:end="5:27">8</literal></expr>]</index></name> <init pos:start="5:30" pos:end="11:5">= <expr pos:start="5:32" pos:end="11:5"><block pos:start="5:32" pos:end="11:5">{

        <expr pos:start="7:9" pos:end="7:19"><name pos:start="7:9" pos:end="7:19">COLOR_BLACK</name></expr>, <expr pos:start="7:22" pos:end="7:31"><name pos:start="7:22" pos:end="7:31">COLOR_BLUE</name></expr>, <expr pos:start="7:34" pos:end="7:44"><name pos:start="7:34" pos:end="7:44">COLOR_GREEN</name></expr>, <expr pos:start="7:47" pos:end="7:56"><name pos:start="7:47" pos:end="7:56">COLOR_CYAN</name></expr>,

        <expr pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:17">COLOR_RED</name></expr>, <expr pos:start="9:20" pos:end="9:32"><name pos:start="9:20" pos:end="9:32">COLOR_MAGENTA</name></expr>, <expr pos:start="9:35" pos:end="9:46"><name pos:start="9:35" pos:end="9:46">COLOR_YELLOW</name></expr>, <expr pos:start="9:49" pos:end="9:59"><name pos:start="9:49" pos:end="9:59">COLOR_WHITE</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="17:29">/* input as raw as possible, let everything be interpreted

     * by the guest system */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:14"><expr pos:start="19:5" pos:end="19:13"><call pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">initscr</name><argument_list pos:start="19:12" pos:end="19:13">()</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="19:16" pos:end="19:24"><expr pos:start="19:16" pos:end="19:23"><call pos:start="19:16" pos:end="19:23"><name pos:start="19:16" pos:end="19:21">noecho</name><argument_list pos:start="19:22" pos:end="19:23">()</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="19:26" pos:end="19:50"><expr pos:start="19:26" pos:end="19:49"><call pos:start="19:26" pos:end="19:49"><name pos:start="19:26" pos:end="19:34">intrflush</name><argument_list pos:start="19:35" pos:end="19:49">(<argument pos:start="19:36" pos:end="19:41"><expr pos:start="19:36" pos:end="19:41"><name pos:start="19:36" pos:end="19:41">stdscr</name></expr></argument>, <argument pos:start="19:44" pos:end="19:48"><expr pos:start="19:44" pos:end="19:48"><name pos:start="19:44" pos:end="19:48">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><call pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:11">nodelay</name><argument_list pos:start="21:12" pos:end="21:25">(<argument pos:start="21:13" pos:end="21:18"><expr pos:start="21:13" pos:end="21:18"><name pos:start="21:13" pos:end="21:18">stdscr</name></expr></argument>, <argument pos:start="21:21" pos:end="21:24"><expr pos:start="21:21" pos:end="21:24"><name pos:start="21:21" pos:end="21:24">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="21:28" pos:end="21:34"><expr pos:start="21:28" pos:end="21:33"><call pos:start="21:28" pos:end="21:33"><name pos:start="21:28" pos:end="21:31">nonl</name><argument_list pos:start="21:32" pos:end="21:33">()</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="21:36" pos:end="21:56"><expr pos:start="21:36" pos:end="21:55"><call pos:start="21:36" pos:end="21:55"><name pos:start="21:36" pos:end="21:41">keypad</name><argument_list pos:start="21:42" pos:end="21:55">(<argument pos:start="21:43" pos:end="21:48"><expr pos:start="21:43" pos:end="21:48"><name pos:start="21:43" pos:end="21:48">stdscr</name></expr></argument>, <argument pos:start="21:51" pos:end="21:54"><expr pos:start="21:51" pos:end="21:54"><name pos:start="21:51" pos:end="21:54">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:18"><expr pos:start="23:5" pos:end="23:17"><call pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:15">start_color</name><argument_list pos:start="23:16" pos:end="23:17">()</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="23:20" pos:end="23:25"><expr pos:start="23:20" pos:end="23:24"><call pos:start="23:20" pos:end="23:24"><name pos:start="23:20" pos:end="23:22">raw</name><argument_list pos:start="23:23" pos:end="23:24">()</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="23:27" pos:end="23:50"><expr pos:start="23:27" pos:end="23:49"><call pos:start="23:27" pos:end="23:49"><name pos:start="23:27" pos:end="23:34">scrollok</name><argument_list pos:start="23:35" pos:end="23:49">(<argument pos:start="23:36" pos:end="23:41"><expr pos:start="23:36" pos:end="23:41"><name pos:start="23:36" pos:end="23:41">stdscr</name></expr></argument>, <argument pos:start="23:44" pos:end="23:48"><expr pos:start="23:44" pos:end="23:48"><name pos:start="23:44" pos:end="23:48">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="27:5" pos:end="31:5">for <control pos:start="27:9" pos:end="27:28">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:23"><expr pos:start="27:17" pos:end="27:22"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <literal type="number" pos:start="27:21" pos:end="27:22">64</literal></expr>;</condition> <incr pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><name pos:start="27:25" pos:end="27:25">i</name><operator pos:start="27:26" pos:end="27:27">++</operator></expr></incr>)</control> <block pos:start="27:30" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:68">

        <expr_stmt pos:start="29:9" pos:end="29:68"><expr pos:start="29:9" pos:end="29:67"><call pos:start="29:9" pos:end="29:67"><name pos:start="29:9" pos:end="29:17">init_pair</name><argument_list pos:start="29:18" pos:end="29:67">(<argument pos:start="29:19" pos:end="29:19"><expr pos:start="29:19" pos:end="29:19"><name pos:start="29:19" pos:end="29:19">i</name></expr></argument>, <argument pos:start="29:22" pos:end="29:42"><expr pos:start="29:22" pos:end="29:42"><name pos:start="29:22" pos:end="29:42"><name pos:start="29:22" pos:end="29:35">colour_default</name><index pos:start="29:36" pos:end="29:42">[<expr pos:start="29:37" pos:end="29:41"><name pos:start="29:37" pos:end="29:37">i</name> <operator pos:start="29:39" pos:end="29:39">&amp;</operator> <literal type="number" pos:start="29:41" pos:end="29:41">7</literal></expr>]</index></name></expr></argument>, <argument pos:start="29:45" pos:end="29:66"><expr pos:start="29:45" pos:end="29:66"><name pos:start="29:45" pos:end="29:66"><name pos:start="29:45" pos:end="29:58">colour_default</name><index pos:start="29:59" pos:end="29:66">[<expr pos:start="29:60" pos:end="29:65"><name pos:start="29:60" pos:end="29:60">i</name> <operator pos:start="29:62" pos:end="29:63">&gt;&gt;</operator> <literal type="number" pos:start="29:65" pos:end="29:65">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="33:5" pos:end="33:79">/* Set default color for more than 64. (monitor uses 0x74xx for example) */</comment>

    <for pos:start="35:5" pos:end="64:0">for <control pos:start="35:9" pos:end="35:38">(<init pos:start="35:10" pos:end="35:16"><expr pos:start="35:10" pos:end="35:15"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:15">64</literal></expr>;</init> <condition pos:start="35:18" pos:end="35:33"><expr pos:start="35:18" pos:end="35:32"><name pos:start="35:18" pos:end="35:18">i</name> <operator pos:start="35:20" pos:end="35:20">&lt;</operator> <name pos:start="35:22" pos:end="35:32">COLOR_PAIRS</name></expr>;</condition> <incr pos:start="35:35" pos:end="35:37"><expr pos:start="35:35" pos:end="35:37"><name pos:start="35:35" pos:end="35:35">i</name><operator pos:start="35:36" pos:end="35:37">++</operator></expr></incr>)</control> <block pos:start="35:40" pos:end="64:0">{<block_content pos:start="37:9" pos:end="37:47">

        <expr_stmt pos:start="37:9" pos:end="37:47"><expr pos:start="37:9" pos:end="37:46"><call pos:start="37:9" pos:end="37:46"><name pos:start="37:9" pos:end="37:17">init_pair</name><argument_list pos:start="37:18" pos:end="37:46">(<argument pos:start="37:19" pos:end="37:19"><expr pos:start="37:19" pos:end="37:19"><name pos:start="37:19" pos:end="37:19">i</name></expr></argument>, <argument pos:start="37:22" pos:end="37:32"><expr pos:start="37:22" pos:end="37:32"><name pos:start="37:22" pos:end="37:32">COLOR_WHITE</name></expr></argument>, <argument pos:start="37:35" pos:end="37:45"><expr pos:start="37:35" pos:end="37:45"><name pos:start="37:35" pos:end="37:45">COLOR_BLACK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="43:5" pos:end="49:7">/*

     * Setup mapping for vga to curses line graphics.

     * FIXME: for better font, have to use ncursesw and setlocale()

     */</comment>

<cpp:if pos:start="51:1" pos:end="51:5">#<cpp:directive pos:start="51:2" pos:end="51:3">if</cpp:directive> <expr pos:start="51:5" pos:end="51:5"><literal type="number" pos:start="51:5" pos:end="51:5">0</literal></expr></cpp:if>

    <comment type="block" pos:start="53:5" pos:end="53:32">/* FIXME: map from where? */</comment>

    ACS_S1;

    ACS_S3;

    ACS_S7;

    ACS_S9;

<cpp:endif pos:start="63:1" pos:end="63:6">#<cpp:directive pos:start="63:2" pos:end="63:6">endif</cpp:directive></cpp:endif>

    <comment type="block" pos:start="65:5" pos:end="65:68">/* ACS_* is not constant. So, we can't initialize statically. */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:30"><expr pos:start="67:5" pos:end="67:29"><name pos:start="67:5" pos:end="67:23"><name pos:start="67:5" pos:end="67:17">vga_to_curses</name><index pos:start="67:18" pos:end="67:23">[<expr pos:start="67:19" pos:end="67:22"><literal type="char" pos:start="67:19" pos:end="67:22">'\0'</literal></expr>]</index></name> <operator pos:start="67:25" pos:end="67:25">=</operator> <literal type="char" pos:start="67:27" pos:end="67:29">' '</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:38"><expr pos:start="69:5" pos:end="69:37"><name pos:start="69:5" pos:end="69:23"><name pos:start="69:5" pos:end="69:17">vga_to_curses</name><index pos:start="69:18" pos:end="69:23">[<expr pos:start="69:19" pos:end="69:22"><literal type="number" pos:start="69:19" pos:end="69:22">0x04</literal></expr>]</index></name> <operator pos:start="69:25" pos:end="69:25">=</operator> <name pos:start="69:27" pos:end="69:37">ACS_DIAMOND</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:37"><expr pos:start="71:5" pos:end="71:36"><name pos:start="71:5" pos:end="71:23"><name pos:start="71:5" pos:end="71:17">vga_to_curses</name><index pos:start="71:18" pos:end="71:23">[<expr pos:start="71:19" pos:end="71:22"><literal type="number" pos:start="71:19" pos:end="71:22">0x0a</literal></expr>]</index></name> <operator pos:start="71:25" pos:end="71:25">=</operator> <name pos:start="71:27" pos:end="71:36">ACS_RARROW</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:37"><expr pos:start="73:5" pos:end="73:36"><name pos:start="73:5" pos:end="73:23"><name pos:start="73:5" pos:end="73:17">vga_to_curses</name><index pos:start="73:18" pos:end="73:23">[<expr pos:start="73:19" pos:end="73:22"><literal type="number" pos:start="73:19" pos:end="73:22">0x0b</literal></expr>]</index></name> <operator pos:start="73:25" pos:end="73:25">=</operator> <name pos:start="73:27" pos:end="73:36">ACS_LARROW</name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:37"><expr pos:start="75:5" pos:end="75:36"><name pos:start="75:5" pos:end="75:23"><name pos:start="75:5" pos:end="75:17">vga_to_curses</name><index pos:start="75:18" pos:end="75:23">[<expr pos:start="75:19" pos:end="75:22"><literal type="number" pos:start="75:19" pos:end="75:22">0x18</literal></expr>]</index></name> <operator pos:start="75:25" pos:end="75:25">=</operator> <name pos:start="75:27" pos:end="75:36">ACS_UARROW</name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:37"><expr pos:start="77:5" pos:end="77:36"><name pos:start="77:5" pos:end="77:23"><name pos:start="77:5" pos:end="77:17">vga_to_curses</name><index pos:start="77:18" pos:end="77:23">[<expr pos:start="77:19" pos:end="77:22"><literal type="number" pos:start="77:19" pos:end="77:22">0x19</literal></expr>]</index></name> <operator pos:start="77:25" pos:end="77:25">=</operator> <name pos:start="77:27" pos:end="77:36">ACS_DARROW</name></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:39"><expr pos:start="79:5" pos:end="79:38"><name pos:start="79:5" pos:end="79:23"><name pos:start="79:5" pos:end="79:17">vga_to_curses</name><index pos:start="79:18" pos:end="79:23">[<expr pos:start="79:19" pos:end="79:22"><literal type="number" pos:start="79:19" pos:end="79:22">0x9c</literal></expr>]</index></name> <operator pos:start="79:25" pos:end="79:25">=</operator> <name pos:start="79:27" pos:end="79:38">ACS_STERLING</name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:36"><expr pos:start="81:5" pos:end="81:35"><name pos:start="81:5" pos:end="81:23"><name pos:start="81:5" pos:end="81:17">vga_to_curses</name><index pos:start="81:18" pos:end="81:23">[<expr pos:start="81:19" pos:end="81:22"><literal type="number" pos:start="81:19" pos:end="81:22">0xb0</literal></expr>]</index></name> <operator pos:start="81:25" pos:end="81:25">=</operator> <name pos:start="81:27" pos:end="81:35">ACS_BOARD</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:38"><expr pos:start="83:5" pos:end="83:37"><name pos:start="83:5" pos:end="83:23"><name pos:start="83:5" pos:end="83:17">vga_to_curses</name><index pos:start="83:18" pos:end="83:23">[<expr pos:start="83:19" pos:end="83:22"><literal type="number" pos:start="83:19" pos:end="83:22">0xb1</literal></expr>]</index></name> <operator pos:start="83:25" pos:end="83:25">=</operator> <name pos:start="83:27" pos:end="83:37">ACS_CKBOARD</name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:36"><expr pos:start="85:5" pos:end="85:35"><name pos:start="85:5" pos:end="85:23"><name pos:start="85:5" pos:end="85:17">vga_to_curses</name><index pos:start="85:18" pos:end="85:23">[<expr pos:start="85:19" pos:end="85:22"><literal type="number" pos:start="85:19" pos:end="85:22">0xb3</literal></expr>]</index></name> <operator pos:start="85:25" pos:end="85:25">=</operator> <name pos:start="85:27" pos:end="85:35">ACS_VLINE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:35"><expr pos:start="87:5" pos:end="87:34"><name pos:start="87:5" pos:end="87:23"><name pos:start="87:5" pos:end="87:17">vga_to_curses</name><index pos:start="87:18" pos:end="87:23">[<expr pos:start="87:19" pos:end="87:22"><literal type="number" pos:start="87:19" pos:end="87:22">0xb4</literal></expr>]</index></name> <operator pos:start="87:25" pos:end="87:25">=</operator> <name pos:start="87:27" pos:end="87:34">ACS_RTEE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:39"><expr pos:start="89:5" pos:end="89:38"><name pos:start="89:5" pos:end="89:23"><name pos:start="89:5" pos:end="89:17">vga_to_curses</name><index pos:start="89:18" pos:end="89:23">[<expr pos:start="89:19" pos:end="89:22"><literal type="number" pos:start="89:19" pos:end="89:22">0xbf</literal></expr>]</index></name> <operator pos:start="89:25" pos:end="89:25">=</operator> <name pos:start="89:27" pos:end="89:38">ACS_URCORNER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:39"><expr pos:start="91:5" pos:end="91:38"><name pos:start="91:5" pos:end="91:23"><name pos:start="91:5" pos:end="91:17">vga_to_curses</name><index pos:start="91:18" pos:end="91:23">[<expr pos:start="91:19" pos:end="91:22"><literal type="number" pos:start="91:19" pos:end="91:22">0xc0</literal></expr>]</index></name> <operator pos:start="91:25" pos:end="91:25">=</operator> <name pos:start="91:27" pos:end="91:38">ACS_LLCORNER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:35"><expr pos:start="93:5" pos:end="93:34"><name pos:start="93:5" pos:end="93:23"><name pos:start="93:5" pos:end="93:17">vga_to_curses</name><index pos:start="93:18" pos:end="93:23">[<expr pos:start="93:19" pos:end="93:22"><literal type="number" pos:start="93:19" pos:end="93:22">0xc1</literal></expr>]</index></name> <operator pos:start="93:25" pos:end="93:25">=</operator> <name pos:start="93:27" pos:end="93:34">ACS_BTEE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:35"><expr pos:start="95:5" pos:end="95:34"><name pos:start="95:5" pos:end="95:23"><name pos:start="95:5" pos:end="95:17">vga_to_curses</name><index pos:start="95:18" pos:end="95:23">[<expr pos:start="95:19" pos:end="95:22"><literal type="number" pos:start="95:19" pos:end="95:22">0xc2</literal></expr>]</index></name> <operator pos:start="95:25" pos:end="95:25">=</operator> <name pos:start="95:27" pos:end="95:34">ACS_TTEE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:35"><expr pos:start="97:5" pos:end="97:34"><name pos:start="97:5" pos:end="97:23"><name pos:start="97:5" pos:end="97:17">vga_to_curses</name><index pos:start="97:18" pos:end="97:23">[<expr pos:start="97:19" pos:end="97:22"><literal type="number" pos:start="97:19" pos:end="97:22">0xc3</literal></expr>]</index></name> <operator pos:start="97:25" pos:end="97:25">=</operator> <name pos:start="97:27" pos:end="97:34">ACS_LTEE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:36"><expr pos:start="99:5" pos:end="99:35"><name pos:start="99:5" pos:end="99:23"><name pos:start="99:5" pos:end="99:17">vga_to_curses</name><index pos:start="99:18" pos:end="99:23">[<expr pos:start="99:19" pos:end="99:22"><literal type="number" pos:start="99:19" pos:end="99:22">0xc4</literal></expr>]</index></name> <operator pos:start="99:25" pos:end="99:25">=</operator> <name pos:start="99:27" pos:end="99:35">ACS_HLINE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:35"><expr pos:start="101:5" pos:end="101:34"><name pos:start="101:5" pos:end="101:23"><name pos:start="101:5" pos:end="101:17">vga_to_curses</name><index pos:start="101:18" pos:end="101:23">[<expr pos:start="101:19" pos:end="101:22"><literal type="number" pos:start="101:19" pos:end="101:22">0xc5</literal></expr>]</index></name> <operator pos:start="101:25" pos:end="101:25">=</operator> <name pos:start="101:27" pos:end="101:34">ACS_PLUS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:38"><expr pos:start="103:5" pos:end="103:37"><name pos:start="103:5" pos:end="103:23"><name pos:start="103:5" pos:end="103:17">vga_to_curses</name><index pos:start="103:18" pos:end="103:23">[<expr pos:start="103:19" pos:end="103:22"><literal type="number" pos:start="103:19" pos:end="103:22">0xce</literal></expr>]</index></name> <operator pos:start="103:25" pos:end="103:25">=</operator> <name pos:start="103:27" pos:end="103:37">ACS_LANTERN</name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:37"><expr pos:start="105:5" pos:end="105:36"><name pos:start="105:5" pos:end="105:23"><name pos:start="105:5" pos:end="105:17">vga_to_curses</name><index pos:start="105:18" pos:end="105:23">[<expr pos:start="105:19" pos:end="105:22"><literal type="number" pos:start="105:19" pos:end="105:22">0xd8</literal></expr>]</index></name> <operator pos:start="105:25" pos:end="105:25">=</operator> <name pos:start="105:27" pos:end="105:36">ACS_NEQUAL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:39"><expr pos:start="107:5" pos:end="107:38"><name pos:start="107:5" pos:end="107:23"><name pos:start="107:5" pos:end="107:17">vga_to_curses</name><index pos:start="107:18" pos:end="107:23">[<expr pos:start="107:19" pos:end="107:22"><literal type="number" pos:start="107:19" pos:end="107:22">0xd9</literal></expr>]</index></name> <operator pos:start="107:25" pos:end="107:25">=</operator> <name pos:start="107:27" pos:end="107:38">ACS_LRCORNER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:39"><expr pos:start="109:5" pos:end="109:38"><name pos:start="109:5" pos:end="109:23"><name pos:start="109:5" pos:end="109:17">vga_to_curses</name><index pos:start="109:18" pos:end="109:23">[<expr pos:start="109:19" pos:end="109:22"><literal type="number" pos:start="109:19" pos:end="109:22">0xda</literal></expr>]</index></name> <operator pos:start="109:25" pos:end="109:25">=</operator> <name pos:start="109:27" pos:end="109:38">ACS_ULCORNER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:36"><expr pos:start="111:5" pos:end="111:35"><name pos:start="111:5" pos:end="111:23"><name pos:start="111:5" pos:end="111:17">vga_to_curses</name><index pos:start="111:18" pos:end="111:23">[<expr pos:start="111:19" pos:end="111:22"><literal type="number" pos:start="111:19" pos:end="111:22">0xdb</literal></expr>]</index></name> <operator pos:start="111:25" pos:end="111:25">=</operator> <name pos:start="111:27" pos:end="111:35">ACS_BLOCK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:33"><expr pos:start="113:5" pos:end="113:32"><name pos:start="113:5" pos:end="113:23"><name pos:start="113:5" pos:end="113:17">vga_to_curses</name><index pos:start="113:18" pos:end="113:23">[<expr pos:start="113:19" pos:end="113:22"><literal type="number" pos:start="113:19" pos:end="113:22">0xe3</literal></expr>]</index></name> <operator pos:start="113:25" pos:end="113:25">=</operator> <name pos:start="113:27" pos:end="113:32">ACS_PI</name></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:38"><expr pos:start="115:5" pos:end="115:37"><name pos:start="115:5" pos:end="115:23"><name pos:start="115:5" pos:end="115:17">vga_to_curses</name><index pos:start="115:18" pos:end="115:23">[<expr pos:start="115:19" pos:end="115:22"><literal type="number" pos:start="115:19" pos:end="115:22">0xf1</literal></expr>]</index></name> <operator pos:start="115:25" pos:end="115:25">=</operator> <name pos:start="115:27" pos:end="115:37">ACS_PLMINUS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:37"><expr pos:start="117:5" pos:end="117:36"><name pos:start="117:5" pos:end="117:23"><name pos:start="117:5" pos:end="117:17">vga_to_curses</name><index pos:start="117:18" pos:end="117:23">[<expr pos:start="117:19" pos:end="117:22"><literal type="number" pos:start="117:19" pos:end="117:22">0xf2</literal></expr>]</index></name> <operator pos:start="117:25" pos:end="117:25">=</operator> <name pos:start="117:27" pos:end="117:36">ACS_GEQUAL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:37"><expr pos:start="119:5" pos:end="119:36"><name pos:start="119:5" pos:end="119:23"><name pos:start="119:5" pos:end="119:17">vga_to_curses</name><index pos:start="119:18" pos:end="119:23">[<expr pos:start="119:19" pos:end="119:22"><literal type="number" pos:start="119:19" pos:end="119:22">0xf3</literal></expr>]</index></name> <operator pos:start="119:25" pos:end="119:25">=</operator> <name pos:start="119:27" pos:end="119:36">ACS_LEQUAL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:37"><expr pos:start="121:5" pos:end="121:36"><name pos:start="121:5" pos:end="121:23"><name pos:start="121:5" pos:end="121:17">vga_to_curses</name><index pos:start="121:18" pos:end="121:23">[<expr pos:start="121:19" pos:end="121:22"><literal type="number" pos:start="121:19" pos:end="121:22">0xf8</literal></expr>]</index></name> <operator pos:start="121:25" pos:end="121:25">=</operator> <name pos:start="121:27" pos:end="121:36">ACS_DEGREE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:37"><expr pos:start="123:5" pos:end="123:36"><name pos:start="123:5" pos:end="123:23"><name pos:start="123:5" pos:end="123:17">vga_to_curses</name><index pos:start="123:18" pos:end="123:23">[<expr pos:start="123:19" pos:end="123:22"><literal type="number" pos:start="123:19" pos:end="123:22">0xfe</literal></expr>]</index></name> <operator pos:start="123:25" pos:end="123:25">=</operator> <name pos:start="123:27" pos:end="123:36">ACS_BULLET</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
