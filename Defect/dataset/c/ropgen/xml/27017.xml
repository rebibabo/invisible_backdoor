<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27017.c" pos:tabs="8"><function pos:start="1:1" pos:end="233:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">vnc_display_get_address</name><parameter_list pos:start="1:35" pos:end="21:48">(<parameter pos:start="1:36" pos:end="1:54"><decl pos:start="1:36" pos:end="1:54"><type pos:start="1:36" pos:end="1:54"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:45">char</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:54">addrstr</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:49"><decl pos:start="3:36" pos:end="3:49"><type pos:start="3:36" pos:end="3:49"><name pos:start="3:36" pos:end="3:39">bool</name></type> <name pos:start="3:41" pos:end="3:49">websocket</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:47"><decl pos:start="5:36" pos:end="5:47"><type pos:start="5:36" pos:end="5:47"><name pos:start="5:36" pos:end="5:39">bool</name></type> <name pos:start="5:41" pos:end="5:47">reverse</name></decl></parameter>,

                                   <parameter pos:start="7:36" pos:end="7:49"><decl pos:start="7:36" pos:end="7:49"><type pos:start="7:36" pos:end="7:49"><name pos:start="7:36" pos:end="7:38">int</name></type> <name pos:start="7:40" pos:end="7:49">displaynum</name></decl></parameter>,

                                   <parameter pos:start="9:36" pos:end="9:41"><decl pos:start="9:36" pos:end="9:41"><type pos:start="9:36" pos:end="9:41"><name pos:start="9:36" pos:end="9:38">int</name></type> <name pos:start="9:40" pos:end="9:41">to</name></decl></parameter>,

                                   <parameter pos:start="11:36" pos:end="11:48"><decl pos:start="11:36" pos:end="11:48"><type pos:start="11:36" pos:end="11:48"><name pos:start="11:36" pos:end="11:39">bool</name></type> <name pos:start="11:41" pos:end="11:48">has_ipv4</name></decl></parameter>,

                                   <parameter pos:start="13:36" pos:end="13:48"><decl pos:start="13:36" pos:end="13:48"><type pos:start="13:36" pos:end="13:48"><name pos:start="13:36" pos:end="13:39">bool</name></type> <name pos:start="13:41" pos:end="13:48">has_ipv6</name></decl></parameter>,

                                   <parameter pos:start="15:36" pos:end="15:44"><decl pos:start="15:36" pos:end="15:44"><type pos:start="15:36" pos:end="15:44"><name pos:start="15:36" pos:end="15:39">bool</name></type> <name pos:start="15:41" pos:end="15:44">ipv4</name></decl></parameter>,

                                   <parameter pos:start="17:36" pos:end="17:44"><decl pos:start="17:36" pos:end="17:44"><type pos:start="17:36" pos:end="17:44"><name pos:start="17:36" pos:end="17:39">bool</name></type> <name pos:start="17:41" pos:end="17:44">ipv6</name></decl></parameter>,

                                   <parameter pos:start="19:36" pos:end="19:64"><decl pos:start="19:36" pos:end="19:64"><type pos:start="19:36" pos:end="19:64"><name pos:start="19:36" pos:end="19:54">SocketAddressLegacy</name> <modifier pos:start="19:56" pos:end="19:56">*</modifier><modifier pos:start="19:57" pos:end="19:57">*</modifier></type><name pos:start="19:58" pos:end="19:64">retaddr</name></decl></parameter>,

                                   <parameter pos:start="21:36" pos:end="21:47"><decl pos:start="21:36" pos:end="21:47"><type pos:start="21:36" pos:end="21:47"><name pos:start="21:36" pos:end="21:40">Error</name> <modifier pos:start="21:42" pos:end="21:42">*</modifier><modifier pos:start="21:43" pos:end="21:43">*</modifier></type><name pos:start="21:44" pos:end="21:47">errp</name></decl></parameter>)</parameter_list>

<block pos:start="23:1" pos:end="233:1">{<block_content pos:start="25:5" pos:end="231:15">

    <decl_stmt pos:start="25:5" pos:end="25:17"><decl pos:start="25:5" pos:end="25:16"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:11">ret</name> <init pos:start="25:13" pos:end="25:16">= <expr pos:start="25:15" pos:end="25:16"><operator pos:start="25:15" pos:end="25:15">-</operator><literal type="number" pos:start="25:16" pos:end="25:16">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:37"><decl pos:start="27:5" pos:end="27:36"><type pos:start="27:5" pos:end="27:25"><name pos:start="27:5" pos:end="27:23">SocketAddressLegacy</name> <modifier pos:start="27:25" pos:end="27:25">*</modifier></type><name pos:start="27:26" pos:end="27:29">addr</name> <init pos:start="27:31" pos:end="27:36">= <expr pos:start="27:33" pos:end="27:36"><name pos:start="27:33" pos:end="27:36">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:42"><expr pos:start="31:5" pos:end="31:41"><name pos:start="31:5" pos:end="31:8">addr</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <call pos:start="31:12" pos:end="31:41"><name pos:start="31:12" pos:end="31:17">g_new0</name><argument_list pos:start="31:18" pos:end="31:41">(<argument pos:start="31:19" pos:end="31:37"><expr pos:start="31:19" pos:end="31:37"><name pos:start="31:19" pos:end="31:37">SocketAddressLegacy</name></expr></argument>, <argument pos:start="31:40" pos:end="31:40"><expr pos:start="31:40" pos:end="31:40"><literal type="number" pos:start="31:40" pos:end="31:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="215:5"><if pos:start="35:5" pos:end="65:5">if <condition pos:start="35:8" pos:end="35:42">(<expr pos:start="35:9" pos:end="35:41"><call pos:start="35:9" pos:end="35:36"><name pos:start="35:9" pos:end="35:15">strncmp</name><argument_list pos:start="35:16" pos:end="35:36">(<argument pos:start="35:17" pos:end="35:23"><expr pos:start="35:17" pos:end="35:23"><name pos:start="35:17" pos:end="35:23">addrstr</name></expr></argument>, <argument pos:start="35:26" pos:end="35:32"><expr pos:start="35:26" pos:end="35:32"><literal type="string" pos:start="35:26" pos:end="35:32">"unix:"</literal></expr></argument>, <argument pos:start="35:35" pos:end="35:35"><expr pos:start="35:35" pos:end="35:35"><literal type="number" pos:start="35:35" pos:end="35:35">5</literal></expr></argument>)</argument_list></call> <operator pos:start="35:38" pos:end="35:39">==</operator> <literal type="number" pos:start="35:41" pos:end="35:41">0</literal></expr>)</condition> <block pos:start="35:44" pos:end="65:5">{<block_content pos:start="37:9" pos:end="63:16">

        <expr_stmt pos:start="37:9" pos:end="37:53"><expr pos:start="37:9" pos:end="37:52"><name pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:12">addr</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:18">type</name></name> <operator pos:start="37:20" pos:end="37:20">=</operator> <name pos:start="37:22" pos:end="37:52">SOCKET_ADDRESS_LEGACY_KIND_UNIX</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:59"><expr pos:start="39:9" pos:end="39:58"><name pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:12">addr</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:15">u</name><operator pos:start="39:16" pos:end="39:16">.</operator><name pos:start="39:17" pos:end="39:22">q_unix</name><operator pos:start="39:23" pos:end="39:23">.</operator><name pos:start="39:24" pos:end="39:27">data</name></name> <operator pos:start="39:29" pos:end="39:29">=</operator> <call pos:start="39:31" pos:end="39:58"><name pos:start="39:31" pos:end="39:36">g_new0</name><argument_list pos:start="39:37" pos:end="39:58">(<argument pos:start="39:38" pos:end="39:54"><expr pos:start="39:38" pos:end="39:54"><name pos:start="39:38" pos:end="39:54">UnixSocketAddress</name></expr></argument>, <argument pos:start="39:57" pos:end="39:57"><expr pos:start="39:57" pos:end="39:57"><literal type="number" pos:start="39:57" pos:end="39:57">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:58"><expr pos:start="41:9" pos:end="41:57"><name pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:12">addr</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:15">u</name><operator pos:start="41:16" pos:end="41:16">.</operator><name pos:start="41:17" pos:end="41:22">q_unix</name><operator pos:start="41:23" pos:end="41:23">.</operator><name pos:start="41:24" pos:end="41:27">data</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:33">path</name></name> <operator pos:start="41:35" pos:end="41:35">=</operator> <call pos:start="41:37" pos:end="41:57"><name pos:start="41:37" pos:end="41:44">g_strdup</name><argument_list pos:start="41:45" pos:end="41:57">(<argument pos:start="41:46" pos:end="41:56"><expr pos:start="41:46" pos:end="41:56"><name pos:start="41:46" pos:end="41:52">addrstr</name> <operator pos:start="41:54" pos:end="41:54">+</operator> <literal type="number" pos:start="41:56" pos:end="41:56">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:22">(<expr pos:start="45:13" pos:end="45:21"><name pos:start="45:13" pos:end="45:21">websocket</name></expr>)</condition> <block pos:start="45:24" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:25">

            <expr_stmt pos:start="47:13" pos:end="47:72"><expr pos:start="47:13" pos:end="47:71"><call pos:start="47:13" pos:end="47:71"><name pos:start="47:13" pos:end="47:22">error_setg</name><argument_list pos:start="47:23" pos:end="47:71">(<argument pos:start="47:24" pos:end="47:27"><expr pos:start="47:24" pos:end="47:27"><name pos:start="47:24" pos:end="47:27">errp</name></expr></argument>, <argument pos:start="47:30" pos:end="47:70"><expr pos:start="47:30" pos:end="47:70"><literal type="string" pos:start="47:30" pos:end="47:70">"UNIX sockets not supported with websock"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="49:13" pos:end="49:25">goto <name pos:start="49:18" pos:end="49:24">cleanup</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="55:9" pos:end="61:9"><if pos:start="55:9" pos:end="61:9">if <condition pos:start="55:12" pos:end="55:15">(<expr pos:start="55:13" pos:end="55:14"><name pos:start="55:13" pos:end="55:14">to</name></expr>)</condition> <block pos:start="55:17" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:25">

            <expr_stmt pos:start="57:13" pos:end="57:72"><expr pos:start="57:13" pos:end="57:71"><call pos:start="57:13" pos:end="57:71"><name pos:start="57:13" pos:end="57:22">error_setg</name><argument_list pos:start="57:23" pos:end="57:71">(<argument pos:start="57:24" pos:end="57:27"><expr pos:start="57:24" pos:end="57:27"><name pos:start="57:24" pos:end="57:27">errp</name></expr></argument>, <argument pos:start="57:30" pos:end="57:70"><expr pos:start="57:30" pos:end="57:70"><literal type="string" pos:start="57:30" pos:end="57:70">"Port range not support with UNIX socket"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="59:13" pos:end="59:25">goto <name pos:start="59:18" pos:end="59:24">cleanup</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:16"><expr pos:start="63:9" pos:end="63:15"><name pos:start="63:9" pos:end="63:11">ret</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <literal type="number" pos:start="63:15" pos:end="63:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="215:5">else <block pos:start="65:12" pos:end="215:5">{<block_content pos:start="67:9" pos:end="213:23">

        <decl_stmt pos:start="67:9" pos:end="67:25"><decl pos:start="67:9" pos:end="67:24"><type pos:start="67:9" pos:end="67:20"><specifier pos:start="67:9" pos:end="67:13">const</specifier> <name pos:start="67:15" pos:end="67:18">char</name> <modifier pos:start="67:20" pos:end="67:20">*</modifier></type><name pos:start="67:21" pos:end="67:24">port</name></decl>;</decl_stmt>

        <decl_stmt pos:start="69:9" pos:end="69:23"><decl pos:start="69:9" pos:end="69:22"><type pos:start="69:9" pos:end="69:14"><name pos:start="69:9" pos:end="69:14">size_t</name></type> <name pos:start="69:16" pos:end="69:22">hostlen</name></decl>;</decl_stmt>

        <decl_stmt pos:start="71:9" pos:end="71:40"><decl pos:start="71:9" pos:end="71:39"><type pos:start="71:9" pos:end="71:26"><name pos:start="71:9" pos:end="71:16">unsigned</name> <name pos:start="71:18" pos:end="71:21">long</name> <name pos:start="71:23" pos:end="71:26">long</name></type> <name pos:start="71:28" pos:end="71:35">baseport</name> <init pos:start="71:37" pos:end="71:39">= <expr pos:start="71:39" pos:end="71:39"><literal type="number" pos:start="71:39" pos:end="71:39">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="73:9" pos:end="73:32"><decl pos:start="73:9" pos:end="73:31"><type pos:start="73:9" pos:end="73:27"><name pos:start="73:9" pos:end="73:25">InetSocketAddress</name> <modifier pos:start="73:27" pos:end="73:27">*</modifier></type><name pos:start="73:28" pos:end="73:31">inet</name></decl>;</decl_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:37"><expr pos:start="77:9" pos:end="77:36"><name pos:start="77:9" pos:end="77:12">port</name> <operator pos:start="77:14" pos:end="77:14">=</operator> <call pos:start="77:16" pos:end="77:36"><name pos:start="77:16" pos:end="77:22">strrchr</name><argument_list pos:start="77:23" pos:end="77:36">(<argument pos:start="77:24" pos:end="77:30"><expr pos:start="77:24" pos:end="77:30"><name pos:start="77:24" pos:end="77:30">addrstr</name></expr></argument>, <argument pos:start="77:33" pos:end="77:35"><expr pos:start="77:33" pos:end="77:35"><literal type="char" pos:start="77:33" pos:end="77:35">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="79:9" pos:end="109:9"><if pos:start="79:9" pos:end="95:9">if <condition pos:start="79:12" pos:end="79:18">(<expr pos:start="79:13" pos:end="79:17"><operator pos:start="79:13" pos:end="79:13">!</operator><name pos:start="79:14" pos:end="79:17">port</name></expr>)</condition> <block pos:start="79:20" pos:end="95:9">{<block_content pos:start="81:13" pos:end="93:13">

            <if_stmt pos:start="81:13" pos:end="93:13"><if pos:start="81:13" pos:end="87:13">if <condition pos:start="81:16" pos:end="81:26">(<expr pos:start="81:17" pos:end="81:25"><name pos:start="81:17" pos:end="81:25">websocket</name></expr>)</condition> <block pos:start="81:28" pos:end="87:13">{<block_content pos:start="83:17" pos:end="85:31">

                <expr_stmt pos:start="83:17" pos:end="83:28"><expr pos:start="83:17" pos:end="83:27"><name pos:start="83:17" pos:end="83:23">hostlen</name> <operator pos:start="83:25" pos:end="83:25">=</operator> <literal type="number" pos:start="83:27" pos:end="83:27">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:31"><expr pos:start="85:17" pos:end="85:30"><name pos:start="85:17" pos:end="85:20">port</name> <operator pos:start="85:22" pos:end="85:22">=</operator> <name pos:start="85:24" pos:end="85:30">addrstr</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="87:15" pos:end="93:13">else <block pos:start="87:20" pos:end="93:13">{<block_content pos:start="89:17" pos:end="91:29">

                <expr_stmt pos:start="89:17" pos:end="89:58"><expr pos:start="89:17" pos:end="89:57"><call pos:start="89:17" pos:end="89:57"><name pos:start="89:17" pos:end="89:26">error_setg</name><argument_list pos:start="89:27" pos:end="89:57">(<argument pos:start="89:28" pos:end="89:31"><expr pos:start="89:28" pos:end="89:31"><name pos:start="89:28" pos:end="89:31">errp</name></expr></argument>, <argument pos:start="89:34" pos:end="89:56"><expr pos:start="89:34" pos:end="89:56"><literal type="string" pos:start="89:34" pos:end="89:56">"no vnc port specified"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="91:17" pos:end="91:29">goto <name pos:start="91:22" pos:end="91:28">cleanup</name>;</goto>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="95:11" pos:end="109:9">else <block pos:start="95:16" pos:end="109:9">{<block_content pos:start="97:13" pos:end="107:13">

            <expr_stmt pos:start="97:13" pos:end="97:37"><expr pos:start="97:13" pos:end="97:36"><name pos:start="97:13" pos:end="97:19">hostlen</name> <operator pos:start="97:21" pos:end="97:21">=</operator> <name pos:start="97:23" pos:end="97:26">port</name> <operator pos:start="97:28" pos:end="97:28">-</operator> <name pos:start="97:30" pos:end="97:36">addrstr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:19"><expr pos:start="99:13" pos:end="99:18"><name pos:start="99:13" pos:end="99:16">port</name><operator pos:start="99:17" pos:end="99:18">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="101:13" pos:end="107:13"><if pos:start="101:13" pos:end="107:13">if <condition pos:start="101:16" pos:end="101:30">(<expr pos:start="101:17" pos:end="101:29"><operator pos:start="101:17" pos:end="101:17">*</operator><name pos:start="101:18" pos:end="101:21">port</name> <operator pos:start="101:23" pos:end="101:24">==</operator> <literal type="char" pos:start="101:26" pos:end="101:29">'\0'</literal></expr>)</condition> <block pos:start="101:32" pos:end="107:13">{<block_content pos:start="103:17" pos:end="105:29">

                <expr_stmt pos:start="103:17" pos:end="103:61"><expr pos:start="103:17" pos:end="103:60"><call pos:start="103:17" pos:end="103:60"><name pos:start="103:17" pos:end="103:26">error_setg</name><argument_list pos:start="103:27" pos:end="103:60">(<argument pos:start="103:28" pos:end="103:31"><expr pos:start="103:28" pos:end="103:31"><name pos:start="103:28" pos:end="103:31">errp</name></expr></argument>, <argument pos:start="103:34" pos:end="103:59"><expr pos:start="103:34" pos:end="103:59"><literal type="string" pos:start="103:34" pos:end="103:59">"vnc port cannot be empty"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="105:17" pos:end="105:29">goto <name pos:start="105:22" pos:end="105:28">cleanup</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="113:9" pos:end="113:53"><expr pos:start="113:9" pos:end="113:52"><name pos:start="113:9" pos:end="113:18"><name pos:start="113:9" pos:end="113:12">addr</name><operator pos:start="113:13" pos:end="113:14">-&gt;</operator><name pos:start="113:15" pos:end="113:18">type</name></name> <operator pos:start="113:20" pos:end="113:20">=</operator> <name pos:start="113:22" pos:end="113:52">SOCKET_ADDRESS_LEGACY_KIND_INET</name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:64"><expr pos:start="115:9" pos:end="115:63"><name pos:start="115:9" pos:end="115:12">inet</name> <operator pos:start="115:14" pos:end="115:14">=</operator> <name pos:start="115:16" pos:end="115:32"><name pos:start="115:16" pos:end="115:19">addr</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:22">u</name><operator pos:start="115:23" pos:end="115:23">.</operator><name pos:start="115:24" pos:end="115:27">inet</name><operator pos:start="115:28" pos:end="115:28">.</operator><name pos:start="115:29" pos:end="115:32">data</name></name> <operator pos:start="115:34" pos:end="115:34">=</operator> <call pos:start="115:36" pos:end="115:63"><name pos:start="115:36" pos:end="115:41">g_new0</name><argument_list pos:start="115:42" pos:end="115:63">(<argument pos:start="115:43" pos:end="115:59"><expr pos:start="115:43" pos:end="115:59"><name pos:start="115:43" pos:end="115:59">InetSocketAddress</name></expr></argument>, <argument pos:start="115:62" pos:end="115:62"><expr pos:start="115:62" pos:end="115:62"><literal type="number" pos:start="115:62" pos:end="115:62">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="117:9" pos:end="125:9"><if pos:start="117:9" pos:end="121:9">if <condition pos:start="117:12" pos:end="117:61">(<expr pos:start="117:13" pos:end="117:60"><name pos:start="117:13" pos:end="117:22"><name pos:start="117:13" pos:end="117:19">addrstr</name><index pos:start="117:20" pos:end="117:22">[<expr pos:start="117:21" pos:end="117:21"><literal type="number" pos:start="117:21" pos:end="117:21">0</literal></expr>]</index></name> <operator pos:start="117:24" pos:end="117:25">==</operator> <literal type="char" pos:start="117:27" pos:end="117:29">'['</literal> <operator pos:start="117:31" pos:end="117:32">&amp;&amp;</operator> <name pos:start="117:34" pos:end="117:53"><name pos:start="117:34" pos:end="117:40">addrstr</name><index pos:start="117:41" pos:end="117:53">[<expr pos:start="117:42" pos:end="117:52"><name pos:start="117:42" pos:end="117:48">hostlen</name> <operator pos:start="117:50" pos:end="117:50">-</operator> <literal type="number" pos:start="117:52" pos:end="117:52">1</literal></expr>]</index></name> <operator pos:start="117:55" pos:end="117:56">==</operator> <literal type="char" pos:start="117:58" pos:end="117:60">']'</literal></expr>)</condition> <block pos:start="117:63" pos:end="121:9">{<block_content pos:start="119:13" pos:end="119:61">

            <expr_stmt pos:start="119:13" pos:end="119:61"><expr pos:start="119:13" pos:end="119:60"><name pos:start="119:13" pos:end="119:22"><name pos:start="119:13" pos:end="119:16">inet</name><operator pos:start="119:17" pos:end="119:18">-&gt;</operator><name pos:start="119:19" pos:end="119:22">host</name></name> <operator pos:start="119:24" pos:end="119:24">=</operator> <call pos:start="119:26" pos:end="119:60"><name pos:start="119:26" pos:end="119:34">g_strndup</name><argument_list pos:start="119:35" pos:end="119:60">(<argument pos:start="119:36" pos:end="119:46"><expr pos:start="119:36" pos:end="119:46"><name pos:start="119:36" pos:end="119:42">addrstr</name> <operator pos:start="119:44" pos:end="119:44">+</operator> <literal type="number" pos:start="119:46" pos:end="119:46">1</literal></expr></argument>, <argument pos:start="119:49" pos:end="119:59"><expr pos:start="119:49" pos:end="119:59"><name pos:start="119:49" pos:end="119:55">hostlen</name> <operator pos:start="119:57" pos:end="119:57">-</operator> <literal type="number" pos:start="119:59" pos:end="119:59">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="121:11" pos:end="125:9">else <block pos:start="121:16" pos:end="125:9">{<block_content pos:start="123:13" pos:end="123:53">

            <expr_stmt pos:start="123:13" pos:end="123:53"><expr pos:start="123:13" pos:end="123:52"><name pos:start="123:13" pos:end="123:22"><name pos:start="123:13" pos:end="123:16">inet</name><operator pos:start="123:17" pos:end="123:18">-&gt;</operator><name pos:start="123:19" pos:end="123:22">host</name></name> <operator pos:start="123:24" pos:end="123:24">=</operator> <call pos:start="123:26" pos:end="123:52"><name pos:start="123:26" pos:end="123:34">g_strndup</name><argument_list pos:start="123:35" pos:end="123:52">(<argument pos:start="123:36" pos:end="123:42"><expr pos:start="123:36" pos:end="123:42"><name pos:start="123:36" pos:end="123:42">addrstr</name></expr></argument>, <argument pos:start="123:45" pos:end="123:51"><expr pos:start="123:45" pos:end="123:51"><name pos:start="123:45" pos:end="123:51">hostlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <comment type="block" pos:start="127:9" pos:end="129:30">/* plain VNC port is just an offset, for websocket

         * port is absolute */</comment>

        <if_stmt pos:start="131:9" pos:end="199:9"><if pos:start="131:9" pos:end="163:9">if <condition pos:start="131:12" pos:end="131:22">(<expr pos:start="131:13" pos:end="131:21"><name pos:start="131:13" pos:end="131:21">websocket</name></expr>)</condition> <block pos:start="131:24" pos:end="163:9">{<block_content pos:start="133:13" pos:end="161:13">

            <if_stmt pos:start="133:13" pos:end="161:13"><if pos:start="133:13" pos:end="157:13">if <condition pos:start="133:16" pos:end="135:43">(<expr pos:start="133:17" pos:end="135:42"><call pos:start="133:17" pos:end="133:40"><name pos:start="133:17" pos:end="133:27">g_str_equal</name><argument_list pos:start="133:28" pos:end="133:40">(<argument pos:start="133:29" pos:end="133:35"><expr pos:start="133:29" pos:end="133:35"><name pos:start="133:29" pos:end="133:35">addrstr</name></expr></argument>, <argument pos:start="133:38" pos:end="133:39"><expr pos:start="133:38" pos:end="133:39"><literal type="string" pos:start="133:38" pos:end="133:39">""</literal></expr></argument>)</argument_list></call> <operator pos:start="133:42" pos:end="133:43">||</operator>

                <call pos:start="135:17" pos:end="135:42"><name pos:start="135:17" pos:end="135:27">g_str_equal</name><argument_list pos:start="135:28" pos:end="135:42">(<argument pos:start="135:29" pos:end="135:35"><expr pos:start="135:29" pos:end="135:35"><name pos:start="135:29" pos:end="135:35">addrstr</name></expr></argument>, <argument pos:start="135:38" pos:end="135:41"><expr pos:start="135:38" pos:end="135:41"><literal type="string" pos:start="135:38" pos:end="135:41">"on"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="135:45" pos:end="157:13">{<block_content pos:start="137:17" pos:end="155:17">

                <if_stmt pos:start="137:17" pos:end="143:17"><if pos:start="137:17" pos:end="143:17">if <condition pos:start="137:20" pos:end="137:37">(<expr pos:start="137:21" pos:end="137:36"><name pos:start="137:21" pos:end="137:30">displaynum</name> <operator pos:start="137:32" pos:end="137:33">==</operator> <operator pos:start="137:35" pos:end="137:35">-</operator><literal type="number" pos:start="137:36" pos:end="137:36">1</literal></expr>)</condition> <block pos:start="137:39" pos:end="143:17">{<block_content pos:start="139:21" pos:end="141:33">

                    <expr_stmt pos:start="139:21" pos:end="139:76"><expr pos:start="139:21" pos:end="139:75"><call pos:start="139:21" pos:end="139:75"><name pos:start="139:21" pos:end="139:30">error_setg</name><argument_list pos:start="139:31" pos:end="139:75">(<argument pos:start="139:32" pos:end="139:35"><expr pos:start="139:32" pos:end="139:35"><name pos:start="139:32" pos:end="139:35">errp</name></expr></argument>, <argument pos:start="139:38" pos:end="139:74"><expr pos:start="139:38" pos:end="139:74"><literal type="string" pos:start="139:38" pos:end="139:74">"explicit websocket port is required"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="141:21" pos:end="141:33">goto <name pos:start="141:26" pos:end="141:32">cleanup</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="145:17" pos:end="147:45"><expr pos:start="145:17" pos:end="147:44"><name pos:start="145:17" pos:end="145:26"><name pos:start="145:17" pos:end="145:20">inet</name><operator pos:start="145:21" pos:end="145:22">-&gt;</operator><name pos:start="145:23" pos:end="145:26">port</name></name> <operator pos:start="145:28" pos:end="145:28">=</operator> <call pos:start="145:30" pos:end="147:44"><name pos:start="145:30" pos:end="145:44">g_strdup_printf</name><argument_list pos:start="145:45" pos:end="147:44">(

                    <argument pos:start="147:21" pos:end="147:24"><expr pos:start="147:21" pos:end="147:24"><literal type="string" pos:start="147:21" pos:end="147:24">"%d"</literal></expr></argument>, <argument pos:start="147:27" pos:end="147:43"><expr pos:start="147:27" pos:end="147:43"><name pos:start="147:27" pos:end="147:36">displaynum</name> <operator pos:start="147:38" pos:end="147:38">+</operator> <literal type="number" pos:start="147:40" pos:end="147:43">5700</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="149:17" pos:end="155:17"><if pos:start="149:17" pos:end="155:17">if <condition pos:start="149:20" pos:end="149:23">(<expr pos:start="149:21" pos:end="149:22"><name pos:start="149:21" pos:end="149:22">to</name></expr>)</condition> <block pos:start="149:25" pos:end="155:17">{<block_content pos:start="151:21" pos:end="153:41">

                    <expr_stmt pos:start="151:21" pos:end="151:40"><expr pos:start="151:21" pos:end="151:39"><name pos:start="151:21" pos:end="151:32"><name pos:start="151:21" pos:end="151:24">inet</name><operator pos:start="151:25" pos:end="151:26">-&gt;</operator><name pos:start="151:27" pos:end="151:32">has_to</name></name> <operator pos:start="151:34" pos:end="151:34">=</operator> <name pos:start="151:36" pos:end="151:39">true</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="153:21" pos:end="153:41"><expr pos:start="153:21" pos:end="153:40"><name pos:start="153:21" pos:end="153:28"><name pos:start="153:21" pos:end="153:24">inet</name><operator pos:start="153:25" pos:end="153:26">-&gt;</operator><name pos:start="153:27" pos:end="153:28">to</name></name> <operator pos:start="153:30" pos:end="153:30">=</operator> <name pos:start="153:32" pos:end="153:33">to</name> <operator pos:start="153:35" pos:end="153:35">+</operator> <literal type="number" pos:start="153:37" pos:end="153:40">5700</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="157:15" pos:end="161:13">else <block pos:start="157:20" pos:end="161:13">{<block_content pos:start="159:17" pos:end="159:44">

                <expr_stmt pos:start="159:17" pos:end="159:44"><expr pos:start="159:17" pos:end="159:43"><name pos:start="159:17" pos:end="159:26"><name pos:start="159:17" pos:end="159:20">inet</name><operator pos:start="159:21" pos:end="159:22">-&gt;</operator><name pos:start="159:23" pos:end="159:26">port</name></name> <operator pos:start="159:28" pos:end="159:28">=</operator> <call pos:start="159:30" pos:end="159:43"><name pos:start="159:30" pos:end="159:37">g_strdup</name><argument_list pos:start="159:38" pos:end="159:43">(<argument pos:start="159:39" pos:end="159:42"><expr pos:start="159:39" pos:end="159:42"><name pos:start="159:39" pos:end="159:42">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="163:11" pos:end="199:9">else <block pos:start="163:16" pos:end="199:9">{<block_content pos:start="165:13" pos:end="197:13">

            <decl_stmt pos:start="165:13" pos:end="165:44"><decl pos:start="165:13" pos:end="165:43"><type pos:start="165:13" pos:end="165:15"><name pos:start="165:13" pos:end="165:15">int</name></type> <name pos:start="165:17" pos:end="165:22">offset</name> <init pos:start="165:24" pos:end="165:43">= <expr pos:start="165:26" pos:end="165:43"><ternary pos:start="165:26" pos:end="165:43"><condition pos:start="165:26" pos:end="165:34"><expr pos:start="165:26" pos:end="165:32"><name pos:start="165:26" pos:end="165:32">reverse</name></expr> ?</condition><then pos:start="165:36" pos:end="165:36"> <expr pos:start="165:36" pos:end="165:36"><literal type="number" pos:start="165:36" pos:end="165:36">0</literal></expr> </then><else pos:start="165:38" pos:end="165:43">: <expr pos:start="165:40" pos:end="165:43"><literal type="number" pos:start="165:40" pos:end="165:43">5900</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="167:13" pos:end="173:13"><if pos:start="167:13" pos:end="173:13">if <condition pos:start="167:16" pos:end="167:57">(<expr pos:start="167:17" pos:end="167:56"><call pos:start="167:17" pos:end="167:52"><name pos:start="167:17" pos:end="167:31">parse_uint_full</name><argument_list pos:start="167:32" pos:end="167:52">(<argument pos:start="167:33" pos:end="167:36"><expr pos:start="167:33" pos:end="167:36"><name pos:start="167:33" pos:end="167:36">port</name></expr></argument>, <argument pos:start="167:39" pos:end="167:47"><expr pos:start="167:39" pos:end="167:47"><operator pos:start="167:39" pos:end="167:39">&amp;</operator><name pos:start="167:40" pos:end="167:47">baseport</name></expr></argument>, <argument pos:start="167:50" pos:end="167:51"><expr pos:start="167:50" pos:end="167:51"><literal type="number" pos:start="167:50" pos:end="167:51">10</literal></expr></argument>)</argument_list></call> <operator pos:start="167:54" pos:end="167:54">&lt;</operator> <literal type="number" pos:start="167:56" pos:end="167:56">0</literal></expr>)</condition> <block pos:start="167:59" pos:end="173:13">{<block_content pos:start="169:17" pos:end="171:29">

                <expr_stmt pos:start="169:17" pos:end="169:72"><expr pos:start="169:17" pos:end="169:71"><call pos:start="169:17" pos:end="169:71"><name pos:start="169:17" pos:end="169:26">error_setg</name><argument_list pos:start="169:27" pos:end="169:71">(<argument pos:start="169:28" pos:end="169:31"><expr pos:start="169:28" pos:end="169:31"><name pos:start="169:28" pos:end="169:31">errp</name></expr></argument>, <argument pos:start="169:34" pos:end="169:64"><expr pos:start="169:34" pos:end="169:64"><literal type="string" pos:start="169:34" pos:end="169:64">"can't convert to a number: %s"</literal></expr></argument>, <argument pos:start="169:67" pos:end="169:70"><expr pos:start="169:67" pos:end="169:70"><name pos:start="169:67" pos:end="169:70">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="171:17" pos:end="171:29">goto <name pos:start="171:22" pos:end="171:28">cleanup</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="175:13" pos:end="183:13"><if pos:start="175:13" pos:end="183:13">if <condition pos:start="175:16" pos:end="177:42">(<expr pos:start="175:17" pos:end="177:41"><name pos:start="175:17" pos:end="175:24">baseport</name> <operator pos:start="175:26" pos:end="175:26">&gt;</operator> <literal type="number" pos:start="175:28" pos:end="175:32">65535</literal> <operator pos:start="175:34" pos:end="175:35">||</operator>

                <name pos:start="177:17" pos:end="177:24">baseport</name> <operator pos:start="177:26" pos:end="177:26">+</operator> <name pos:start="177:28" pos:end="177:33">offset</name> <operator pos:start="177:35" pos:end="177:35">&gt;</operator> <literal type="number" pos:start="177:37" pos:end="177:41">65535</literal></expr>)</condition> <block pos:start="177:44" pos:end="183:13">{<block_content pos:start="179:17" pos:end="181:29">

                <expr_stmt pos:start="179:17" pos:end="179:63"><expr pos:start="179:17" pos:end="179:62"><call pos:start="179:17" pos:end="179:62"><name pos:start="179:17" pos:end="179:26">error_setg</name><argument_list pos:start="179:27" pos:end="179:62">(<argument pos:start="179:28" pos:end="179:31"><expr pos:start="179:28" pos:end="179:31"><name pos:start="179:28" pos:end="179:31">errp</name></expr></argument>, <argument pos:start="179:34" pos:end="179:55"><expr pos:start="179:34" pos:end="179:55"><literal type="string" pos:start="179:34" pos:end="179:55">"port %s out of range"</literal></expr></argument>, <argument pos:start="179:58" pos:end="179:61"><expr pos:start="179:58" pos:end="179:61"><name pos:start="179:58" pos:end="179:61">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="181:17" pos:end="181:29">goto <name pos:start="181:22" pos:end="181:28">cleanup</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="185:13" pos:end="187:46"><expr pos:start="185:13" pos:end="187:45"><name pos:start="185:13" pos:end="185:22"><name pos:start="185:13" pos:end="185:16">inet</name><operator pos:start="185:17" pos:end="185:18">-&gt;</operator><name pos:start="185:19" pos:end="185:22">port</name></name> <operator pos:start="185:24" pos:end="185:24">=</operator> <call pos:start="185:26" pos:end="187:45"><name pos:start="185:26" pos:end="185:40">g_strdup_printf</name><argument_list pos:start="185:41" pos:end="187:45">(

                <argument pos:start="187:17" pos:end="187:20"><expr pos:start="187:17" pos:end="187:20"><literal type="string" pos:start="187:17" pos:end="187:20">"%d"</literal></expr></argument>, <argument pos:start="187:23" pos:end="187:44"><expr pos:start="187:23" pos:end="187:44"><operator pos:start="187:23" pos:end="187:23">(</operator><name pos:start="187:24" pos:end="187:26">int</name><operator pos:start="187:27" pos:end="187:27">)</operator><name pos:start="187:28" pos:end="187:35">baseport</name> <operator pos:start="187:37" pos:end="187:37">+</operator> <name pos:start="187:39" pos:end="187:44">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="191:13" pos:end="197:13"><if pos:start="191:13" pos:end="197:13">if <condition pos:start="191:16" pos:end="191:19">(<expr pos:start="191:17" pos:end="191:18"><name pos:start="191:17" pos:end="191:18">to</name></expr>)</condition> <block pos:start="191:21" pos:end="197:13">{<block_content pos:start="193:17" pos:end="195:39">

                <expr_stmt pos:start="193:17" pos:end="193:36"><expr pos:start="193:17" pos:end="193:35"><name pos:start="193:17" pos:end="193:28"><name pos:start="193:17" pos:end="193:20">inet</name><operator pos:start="193:21" pos:end="193:22">-&gt;</operator><name pos:start="193:23" pos:end="193:28">has_to</name></name> <operator pos:start="193:30" pos:end="193:30">=</operator> <name pos:start="193:32" pos:end="193:35">true</name></expr>;</expr_stmt>

                <expr_stmt pos:start="195:17" pos:end="195:39"><expr pos:start="195:17" pos:end="195:38"><name pos:start="195:17" pos:end="195:24"><name pos:start="195:17" pos:end="195:20">inet</name><operator pos:start="195:21" pos:end="195:22">-&gt;</operator><name pos:start="195:23" pos:end="195:24">to</name></name> <operator pos:start="195:26" pos:end="195:26">=</operator> <name pos:start="195:28" pos:end="195:29">to</name> <operator pos:start="195:31" pos:end="195:31">+</operator> <name pos:start="195:33" pos:end="195:38">offset</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="203:9" pos:end="203:26"><expr pos:start="203:9" pos:end="203:25"><name pos:start="203:9" pos:end="203:18"><name pos:start="203:9" pos:end="203:12">inet</name><operator pos:start="203:13" pos:end="203:14">-&gt;</operator><name pos:start="203:15" pos:end="203:18">ipv4</name></name> <operator pos:start="203:20" pos:end="203:20">=</operator> <name pos:start="203:22" pos:end="203:25">ipv4</name></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:34"><expr pos:start="205:9" pos:end="205:33"><name pos:start="205:9" pos:end="205:22"><name pos:start="205:9" pos:end="205:12">inet</name><operator pos:start="205:13" pos:end="205:14">-&gt;</operator><name pos:start="205:15" pos:end="205:22">has_ipv4</name></name> <operator pos:start="205:24" pos:end="205:24">=</operator> <name pos:start="205:26" pos:end="205:33">has_ipv4</name></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:26"><expr pos:start="207:9" pos:end="207:25"><name pos:start="207:9" pos:end="207:18"><name pos:start="207:9" pos:end="207:12">inet</name><operator pos:start="207:13" pos:end="207:14">-&gt;</operator><name pos:start="207:15" pos:end="207:18">ipv6</name></name> <operator pos:start="207:20" pos:end="207:20">=</operator> <name pos:start="207:22" pos:end="207:25">ipv6</name></expr>;</expr_stmt>

        <expr_stmt pos:start="209:9" pos:end="209:34"><expr pos:start="209:9" pos:end="209:33"><name pos:start="209:9" pos:end="209:22"><name pos:start="209:9" pos:end="209:12">inet</name><operator pos:start="209:13" pos:end="209:14">-&gt;</operator><name pos:start="209:15" pos:end="209:22">has_ipv6</name></name> <operator pos:start="209:24" pos:end="209:24">=</operator> <name pos:start="209:26" pos:end="209:33">has_ipv6</name></expr>;</expr_stmt>



        <expr_stmt pos:start="213:9" pos:end="213:23"><expr pos:start="213:9" pos:end="213:22"><name pos:start="213:9" pos:end="213:11">ret</name> <operator pos:start="213:13" pos:end="213:13">=</operator> <name pos:start="213:15" pos:end="213:22">baseport</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="219:5" pos:end="219:20"><expr pos:start="219:5" pos:end="219:19"><operator pos:start="219:5" pos:end="219:5">*</operator><name pos:start="219:6" pos:end="219:12">retaddr</name> <operator pos:start="219:14" pos:end="219:14">=</operator> <name pos:start="219:16" pos:end="219:19">addr</name></expr>;</expr_stmt>



 <label pos:start="223:2" pos:end="223:9"><name pos:start="223:2" pos:end="223:8">cleanup</name>:</label>

    <if_stmt pos:start="225:5" pos:end="229:5"><if pos:start="225:5" pos:end="229:5">if <condition pos:start="225:8" pos:end="225:16">(<expr pos:start="225:9" pos:end="225:15"><name pos:start="225:9" pos:end="225:11">ret</name> <operator pos:start="225:13" pos:end="225:13">&lt;</operator> <literal type="number" pos:start="225:15" pos:end="225:15">0</literal></expr>)</condition> <block pos:start="225:18" pos:end="229:5">{<block_content pos:start="227:9" pos:end="227:44">

        <expr_stmt pos:start="227:9" pos:end="227:44"><expr pos:start="227:9" pos:end="227:43"><call pos:start="227:9" pos:end="227:43"><name pos:start="227:9" pos:end="227:37">qapi_free_SocketAddressLegacy</name><argument_list pos:start="227:38" pos:end="227:43">(<argument pos:start="227:39" pos:end="227:42"><expr pos:start="227:39" pos:end="227:42"><name pos:start="227:39" pos:end="227:42">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="231:5" pos:end="231:15">return <expr pos:start="231:12" pos:end="231:14"><name pos:start="231:12" pos:end="231:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
