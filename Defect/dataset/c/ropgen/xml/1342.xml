<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1342.c" pos:tabs="8"><function pos:start="1:1" pos:end="481:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">compute_status</name><parameter_list pos:start="1:27" pos:end="1:42">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:38">HTTPContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">c</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="481:1">{<block_content pos:start="5:5" pos:end="479:39">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">HTTPContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">c1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">FFStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:20">stream</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:11">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">time_t</name></type> <name pos:start="11:12" pos:end="11:13">ti</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:14">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:15">AVIOContext</name> <modifier pos:start="15:17" pos:end="15:17">*</modifier></type><name pos:start="15:18" pos:end="15:19">pb</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="29:5"><if pos:start="19:5" pos:end="29:5">if <condition pos:start="19:8" pos:end="19:35">(<expr pos:start="19:9" pos:end="19:34"><call pos:start="19:9" pos:end="19:30"><name pos:start="19:9" pos:end="19:25">avio_open_dyn_buf</name><argument_list pos:start="19:26" pos:end="19:30">(<argument pos:start="19:27" pos:end="19:29"><expr pos:start="19:27" pos:end="19:29"><operator pos:start="19:27" pos:end="19:27">&amp;</operator><name pos:start="19:28" pos:end="19:29">pb</name></expr></argument>)</argument_list></call> <operator pos:start="19:32" pos:end="19:32">&lt;</operator> <literal type="number" pos:start="19:34" pos:end="19:34">0</literal></expr>)</condition> <block pos:start="19:37" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:15">

        <comment type="block" pos:start="21:9" pos:end="21:36">/* XXX: return an error ? */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:34"><expr pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:9">c</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:21">buffer_ptr</name></name> <operator pos:start="23:23" pos:end="23:23">=</operator> <name pos:start="23:25" pos:end="23:33"><name pos:start="23:25" pos:end="23:25">c</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:33">buffer</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:34"><expr pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:9">c</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:21">buffer_end</name></name> <operator pos:start="25:23" pos:end="25:23">=</operator> <name pos:start="25:25" pos:end="25:33"><name pos:start="25:25" pos:end="25:25">c</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:33">buffer</name></name></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:43"><expr pos:start="33:5" pos:end="33:42"><call pos:start="33:5" pos:end="33:42"><name pos:start="33:5" pos:end="33:15">avio_printf</name><argument_list pos:start="33:16" pos:end="33:42">(<argument pos:start="33:17" pos:end="33:18"><expr pos:start="33:17" pos:end="33:18"><name pos:start="33:17" pos:end="33:18">pb</name></expr></argument>, <argument pos:start="33:21" pos:end="33:41"><expr pos:start="33:21" pos:end="33:41"><literal type="string" pos:start="33:21" pos:end="33:41">"HTTP/1.0 200 OK\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:57"><expr pos:start="35:5" pos:end="35:56"><call pos:start="35:5" pos:end="35:56"><name pos:start="35:5" pos:end="35:15">avio_printf</name><argument_list pos:start="35:16" pos:end="35:56">(<argument pos:start="35:17" pos:end="35:18"><expr pos:start="35:17" pos:end="35:18"><name pos:start="35:17" pos:end="35:18">pb</name></expr></argument>, <argument pos:start="35:21" pos:end="35:42"><expr pos:start="35:21" pos:end="35:42"><literal type="string" pos:start="35:21" pos:end="35:42">"Content-type: %s\r\n"</literal></expr></argument>, <argument pos:start="35:45" pos:end="35:55"><expr pos:start="35:45" pos:end="35:55"><literal type="string" pos:start="35:45" pos:end="35:55">"text/html"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:44"><expr pos:start="37:5" pos:end="37:43"><call pos:start="37:5" pos:end="37:43"><name pos:start="37:5" pos:end="37:15">avio_printf</name><argument_list pos:start="37:16" pos:end="37:43">(<argument pos:start="37:17" pos:end="37:18"><expr pos:start="37:17" pos:end="37:18"><name pos:start="37:17" pos:end="37:18">pb</name></expr></argument>, <argument pos:start="37:21" pos:end="37:42"><expr pos:start="37:21" pos:end="37:42"><literal type="string" pos:start="37:21" pos:end="37:42">"Pragma: no-cache\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:28"><expr pos:start="39:5" pos:end="39:27"><call pos:start="39:5" pos:end="39:27"><name pos:start="39:5" pos:end="39:15">avio_printf</name><argument_list pos:start="39:16" pos:end="39:27">(<argument pos:start="39:17" pos:end="39:18"><expr pos:start="39:17" pos:end="39:18"><name pos:start="39:17" pos:end="39:18">pb</name></expr></argument>, <argument pos:start="39:21" pos:end="39:26"><expr pos:start="39:21" pos:end="39:26"><literal type="string" pos:start="39:21" pos:end="39:26">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:76"><expr pos:start="43:5" pos:end="43:75"><call pos:start="43:5" pos:end="43:75"><name pos:start="43:5" pos:end="43:15">avio_printf</name><argument_list pos:start="43:16" pos:end="43:75">(<argument pos:start="43:17" pos:end="43:18"><expr pos:start="43:17" pos:end="43:18"><name pos:start="43:17" pos:end="43:18">pb</name></expr></argument>, <argument pos:start="43:21" pos:end="43:60"><expr pos:start="43:21" pos:end="43:60"><literal type="string" pos:start="43:21" pos:end="43:60">"&lt;html&gt;&lt;head&gt;&lt;title&gt;%s Status&lt;/title&gt;\n"</literal></expr></argument>, <argument pos:start="43:63" pos:end="43:74"><expr pos:start="43:63" pos:end="43:74"><name pos:start="43:63" pos:end="43:74">program_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="47:96"><if pos:start="45:5" pos:end="47:96">if <condition pos:start="45:8" pos:end="45:36">(<expr pos:start="45:9" pos:end="45:35"><name pos:start="45:9" pos:end="45:35"><name pos:start="45:9" pos:end="45:9">c</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:17">stream</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:32">feed_filename</name><index pos:start="45:33" pos:end="45:35">[<expr pos:start="45:34" pos:end="45:34"><literal type="number" pos:start="45:34" pos:end="45:34">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:96"><block_content pos:start="47:9" pos:end="47:96">

        <expr_stmt pos:start="47:9" pos:end="47:96"><expr pos:start="47:9" pos:end="47:95"><call pos:start="47:9" pos:end="47:95"><name pos:start="47:9" pos:end="47:19">avio_printf</name><argument_list pos:start="47:20" pos:end="47:95">(<argument pos:start="47:21" pos:end="47:22"><expr pos:start="47:21" pos:end="47:22"><name pos:start="47:21" pos:end="47:22">pb</name></expr></argument>, <argument pos:start="47:25" pos:end="47:68"><expr pos:start="47:25" pos:end="47:68"><literal type="string" pos:start="47:25" pos:end="47:68">"&lt;link rel=\"shortcut icon\" href=\"%s\"&gt;\n"</literal></expr></argument>, <argument pos:start="47:71" pos:end="47:94"><expr pos:start="47:71" pos:end="47:94"><name pos:start="47:71" pos:end="47:94"><name pos:start="47:71" pos:end="47:71">c</name><operator pos:start="47:72" pos:end="47:73">-&gt;</operator><name pos:start="47:74" pos:end="47:79">stream</name><operator pos:start="47:80" pos:end="47:81">-&gt;</operator><name pos:start="47:82" pos:end="47:94">feed_filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:39"><expr pos:start="49:5" pos:end="49:38"><call pos:start="49:5" pos:end="49:38"><name pos:start="49:5" pos:end="49:15">avio_printf</name><argument_list pos:start="49:16" pos:end="49:38">(<argument pos:start="49:17" pos:end="49:18"><expr pos:start="49:17" pos:end="49:18"><name pos:start="49:17" pos:end="49:18">pb</name></expr></argument>, <argument pos:start="49:21" pos:end="49:37"><expr pos:start="49:21" pos:end="49:37"><literal type="string" pos:start="49:21" pos:end="49:37">"&lt;/head&gt;\n&lt;body&gt;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:58"><expr pos:start="51:5" pos:end="51:57"><call pos:start="51:5" pos:end="51:57"><name pos:start="51:5" pos:end="51:15">avio_printf</name><argument_list pos:start="51:16" pos:end="51:57">(<argument pos:start="51:17" pos:end="51:18"><expr pos:start="51:17" pos:end="51:18"><name pos:start="51:17" pos:end="51:18">pb</name></expr></argument>, <argument pos:start="51:21" pos:end="51:42"><expr pos:start="51:21" pos:end="51:42"><literal type="string" pos:start="51:21" pos:end="51:42">"&lt;h1&gt;%s Status&lt;/h1&gt;\n"</literal></expr></argument>, <argument pos:start="51:45" pos:end="51:56"><expr pos:start="51:45" pos:end="51:56"><name pos:start="51:45" pos:end="51:56">program_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="53:5" pos:end="53:23">/* format status */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:52"><expr pos:start="55:5" pos:end="55:51"><call pos:start="55:5" pos:end="55:51"><name pos:start="55:5" pos:end="55:15">avio_printf</name><argument_list pos:start="55:16" pos:end="55:51">(<argument pos:start="55:17" pos:end="55:18"><expr pos:start="55:17" pos:end="55:18"><name pos:start="55:17" pos:end="55:18">pb</name></expr></argument>, <argument pos:start="55:21" pos:end="55:50"><expr pos:start="55:21" pos:end="55:50"><literal type="string" pos:start="55:21" pos:end="55:50">"&lt;h2&gt;Available Streams&lt;/h2&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:61"><expr pos:start="57:5" pos:end="57:60"><call pos:start="57:5" pos:end="57:60"><name pos:start="57:5" pos:end="57:15">avio_printf</name><argument_list pos:start="57:16" pos:end="57:60">(<argument pos:start="57:17" pos:end="57:18"><expr pos:start="57:17" pos:end="57:18"><name pos:start="57:17" pos:end="57:18">pb</name></expr></argument>, <argument pos:start="57:21" pos:end="57:59"><expr pos:start="57:21" pos:end="57:59"><literal type="string" pos:start="57:21" pos:end="57:59">"&lt;table cellspacing=0 cellpadding=4&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:254"><expr pos:start="59:5" pos:end="59:253"><call pos:start="59:5" pos:end="59:253"><name pos:start="59:5" pos:end="59:15">avio_printf</name><argument_list pos:start="59:16" pos:end="59:253">(<argument pos:start="59:17" pos:end="59:18"><expr pos:start="59:17" pos:end="59:18"><name pos:start="59:17" pos:end="59:18">pb</name></expr></argument>, <argument pos:start="59:21" pos:end="59:252"><expr pos:start="59:21" pos:end="59:252"><literal type="string" pos:start="59:21" pos:end="59:252">"&lt;tr&gt;&lt;th valign=top&gt;Path&lt;th align=left&gt;Served&lt;br&gt;Conns&lt;th&gt;&lt;br&gt;bytes&lt;th valign=top&gt;Format&lt;th&gt;Bit rate&lt;br&gt;kbits/s&lt;th align=left&gt;Video&lt;br&gt;kbits/s&lt;th&gt;&lt;br&gt;Codec&lt;th align=left&gt;Audio&lt;br&gt;kbits/s&lt;th&gt;&lt;br&gt;Codec&lt;th align=left valign=top&gt;Feed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:26"><expr pos:start="61:5" pos:end="61:25"><name pos:start="61:5" pos:end="61:10">stream</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <name pos:start="61:14" pos:end="61:25">first_stream</name></expr>;</expr_stmt>

    <while pos:start="63:5" pos:end="233:5">while <condition pos:start="63:11" pos:end="63:26">(<expr pos:start="63:12" pos:end="63:25"><name pos:start="63:12" pos:end="63:17">stream</name> <operator pos:start="63:19" pos:end="63:20">!=</operator> <name pos:start="63:22" pos:end="63:25">NULL</name></expr>)</condition> <block pos:start="63:28" pos:end="233:5">{<block_content pos:start="65:9" pos:end="231:30">

        <decl_stmt pos:start="65:9" pos:end="65:29"><decl pos:start="65:9" pos:end="65:28"><type pos:start="65:9" pos:end="65:12"><name pos:start="65:9" pos:end="65:12">char</name></type> <name pos:start="65:14" pos:end="65:28"><name pos:start="65:14" pos:end="65:22">sfilename</name><index pos:start="65:23" pos:end="65:28">[<expr pos:start="65:24" pos:end="65:27"><literal type="number" pos:start="65:24" pos:end="65:27">1024</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="67:9" pos:end="67:19"><decl pos:start="67:9" pos:end="67:18"><type pos:start="67:9" pos:end="67:14"><name pos:start="67:9" pos:end="67:12">char</name> <modifier pos:start="67:14" pos:end="67:14">*</modifier></type><name pos:start="67:15" pos:end="67:18">eosf</name></decl>;</decl_stmt>



        <if_stmt pos:start="71:9" pos:end="229:9"><if pos:start="71:9" pos:end="229:9">if <condition pos:start="71:12" pos:end="71:35">(<expr pos:start="71:13" pos:end="71:34"><name pos:start="71:13" pos:end="71:24"><name pos:start="71:13" pos:end="71:18">stream</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:24">feed</name></name> <operator pos:start="71:26" pos:end="71:27">!=</operator> <name pos:start="71:29" pos:end="71:34">stream</name></expr>)</condition> <block pos:start="71:37" pos:end="229:9">{<block_content pos:start="73:13" pos:end="227:13">

            <expr_stmt pos:start="73:13" pos:end="73:76"><expr pos:start="73:13" pos:end="73:75"><call pos:start="73:13" pos:end="73:75"><name pos:start="73:13" pos:end="73:22">av_strlcpy</name><argument_list pos:start="73:23" pos:end="73:75">(<argument pos:start="73:24" pos:end="73:32"><expr pos:start="73:24" pos:end="73:32"><name pos:start="73:24" pos:end="73:32">sfilename</name></expr></argument>, <argument pos:start="73:35" pos:end="73:50"><expr pos:start="73:35" pos:end="73:50"><name pos:start="73:35" pos:end="73:50"><name pos:start="73:35" pos:end="73:40">stream</name><operator pos:start="73:41" pos:end="73:42">-&gt;</operator><name pos:start="73:43" pos:end="73:50">filename</name></name></expr></argument>, <argument pos:start="73:53" pos:end="73:74"><expr pos:start="73:53" pos:end="73:74"><sizeof pos:start="73:53" pos:end="73:69">sizeof<argument_list pos:start="73:59" pos:end="73:69">(<argument pos:start="73:60" pos:end="73:68"><expr pos:start="73:60" pos:end="73:68"><name pos:start="73:60" pos:end="73:68">sfilename</name></expr></argument>)</argument_list></sizeof> <operator pos:start="73:71" pos:end="73:71">-</operator> <literal type="number" pos:start="73:73" pos:end="73:74">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:49"><expr pos:start="75:13" pos:end="75:48"><name pos:start="75:13" pos:end="75:16">eosf</name> <operator pos:start="75:18" pos:end="75:18">=</operator> <name pos:start="75:20" pos:end="75:28">sfilename</name> <operator pos:start="75:30" pos:end="75:30">+</operator> <call pos:start="75:32" pos:end="75:48"><name pos:start="75:32" pos:end="75:37">strlen</name><argument_list pos:start="75:38" pos:end="75:48">(<argument pos:start="75:39" pos:end="75:47"><expr pos:start="75:39" pos:end="75:47"><name pos:start="75:39" pos:end="75:47">sfilename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="77:13" pos:end="111:13"><if pos:start="77:13" pos:end="111:13">if <condition pos:start="77:16" pos:end="77:38">(<expr pos:start="77:17" pos:end="77:37"><name pos:start="77:17" pos:end="77:20">eosf</name> <operator pos:start="77:22" pos:end="77:22">-</operator> <name pos:start="77:24" pos:end="77:32">sfilename</name> <operator pos:start="77:34" pos:end="77:35">&gt;=</operator> <literal type="number" pos:start="77:37" pos:end="77:37">4</literal></expr>)</condition> <block pos:start="77:40" pos:end="111:13">{<block_content pos:start="79:17" pos:end="109:17">

                <if_stmt pos:start="79:17" pos:end="109:17"><if pos:start="79:17" pos:end="81:45">if <condition pos:start="79:20" pos:end="79:50">(<expr pos:start="79:21" pos:end="79:49"><call pos:start="79:21" pos:end="79:44"><name pos:start="79:21" pos:end="79:26">strcmp</name><argument_list pos:start="79:27" pos:end="79:44">(<argument pos:start="79:28" pos:end="79:35"><expr pos:start="79:28" pos:end="79:35"><name pos:start="79:28" pos:end="79:31">eosf</name> <operator pos:start="79:33" pos:end="79:33">-</operator> <literal type="number" pos:start="79:35" pos:end="79:35">4</literal></expr></argument>, <argument pos:start="79:38" pos:end="79:43"><expr pos:start="79:38" pos:end="79:43"><literal type="string" pos:start="79:38" pos:end="79:43">".asf"</literal></expr></argument>)</argument_list></call> <operator pos:start="79:46" pos:end="79:47">==</operator> <literal type="number" pos:start="79:49" pos:end="79:49">0</literal></expr>)</condition><block type="pseudo" pos:start="81:21" pos:end="81:45"><block_content pos:start="81:21" pos:end="81:45">

                    <expr_stmt pos:start="81:21" pos:end="81:45"><expr pos:start="81:21" pos:end="81:44"><call pos:start="81:21" pos:end="81:44"><name pos:start="81:21" pos:end="81:26">strcpy</name><argument_list pos:start="81:27" pos:end="81:44">(<argument pos:start="81:28" pos:end="81:35"><expr pos:start="81:28" pos:end="81:35"><name pos:start="81:28" pos:end="81:31">eosf</name> <operator pos:start="81:33" pos:end="81:33">-</operator> <literal type="number" pos:start="81:35" pos:end="81:35">4</literal></expr></argument>, <argument pos:start="81:38" pos:end="81:43"><expr pos:start="81:38" pos:end="81:43"><literal type="string" pos:start="81:38" pos:end="81:43">".asx"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="83:17" pos:end="85:45">else if <condition pos:start="83:25" pos:end="83:54">(<expr pos:start="83:26" pos:end="83:53"><call pos:start="83:26" pos:end="83:48"><name pos:start="83:26" pos:end="83:31">strcmp</name><argument_list pos:start="83:32" pos:end="83:48">(<argument pos:start="83:33" pos:end="83:40"><expr pos:start="83:33" pos:end="83:40"><name pos:start="83:33" pos:end="83:36">eosf</name> <operator pos:start="83:38" pos:end="83:38">-</operator> <literal type="number" pos:start="83:40" pos:end="83:40">3</literal></expr></argument>, <argument pos:start="83:43" pos:end="83:47"><expr pos:start="83:43" pos:end="83:47"><literal type="string" pos:start="83:43" pos:end="83:47">".rm"</literal></expr></argument>)</argument_list></call> <operator pos:start="83:50" pos:end="83:51">==</operator> <literal type="number" pos:start="83:53" pos:end="83:53">0</literal></expr>)</condition><block type="pseudo" pos:start="85:21" pos:end="85:45"><block_content pos:start="85:21" pos:end="85:45">

                    <expr_stmt pos:start="85:21" pos:end="85:45"><expr pos:start="85:21" pos:end="85:44"><call pos:start="85:21" pos:end="85:44"><name pos:start="85:21" pos:end="85:26">strcpy</name><argument_list pos:start="85:27" pos:end="85:44">(<argument pos:start="85:28" pos:end="85:35"><expr pos:start="85:28" pos:end="85:35"><name pos:start="85:28" pos:end="85:31">eosf</name> <operator pos:start="85:33" pos:end="85:33">-</operator> <literal type="number" pos:start="85:35" pos:end="85:35">3</literal></expr></argument>, <argument pos:start="85:38" pos:end="85:43"><expr pos:start="85:38" pos:end="85:43"><literal type="string" pos:start="85:38" pos:end="85:43">".ram"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="87:17" pos:end="109:17">else if <condition pos:start="87:25" pos:end="87:74">(<expr pos:start="87:26" pos:end="87:73"><name pos:start="87:26" pos:end="87:36"><name pos:start="87:26" pos:end="87:31">stream</name><operator pos:start="87:32" pos:end="87:33">-&gt;</operator><name pos:start="87:34" pos:end="87:36">fmt</name></name> <operator pos:start="87:38" pos:end="87:39">&amp;&amp;</operator> <operator pos:start="87:41" pos:end="87:41">!</operator><call pos:start="87:42" pos:end="87:73"><name pos:start="87:42" pos:end="87:47">strcmp</name><argument_list pos:start="87:48" pos:end="87:73">(<argument pos:start="87:49" pos:end="87:65"><expr pos:start="87:49" pos:end="87:65"><name pos:start="87:49" pos:end="87:65"><name pos:start="87:49" pos:end="87:54">stream</name><operator pos:start="87:55" pos:end="87:56">-&gt;</operator><name pos:start="87:57" pos:end="87:59">fmt</name><operator pos:start="87:60" pos:end="87:61">-&gt;</operator><name pos:start="87:62" pos:end="87:65">name</name></name></expr></argument>, <argument pos:start="87:68" pos:end="87:72"><expr pos:start="87:68" pos:end="87:72"><literal type="string" pos:start="87:68" pos:end="87:72">"rtp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="87:76" pos:end="109:17">{<block_content pos:start="95:21" pos:end="107:46">

                    <comment type="block" pos:start="89:21" pos:end="93:35">/* generate a sample RTSP director if

                       unicast. Generate an SDP redirector if

                       multicast */</comment>

                    <expr_stmt pos:start="95:21" pos:end="95:51"><expr pos:start="95:21" pos:end="95:50"><name pos:start="95:21" pos:end="95:24">eosf</name> <operator pos:start="95:26" pos:end="95:26">=</operator> <call pos:start="95:28" pos:end="95:50"><name pos:start="95:28" pos:end="95:34">strrchr</name><argument_list pos:start="95:35" pos:end="95:50">(<argument pos:start="95:36" pos:end="95:44"><expr pos:start="95:36" pos:end="95:44"><name pos:start="95:36" pos:end="95:44">sfilename</name></expr></argument>, <argument pos:start="95:47" pos:end="95:49"><expr pos:start="95:47" pos:end="95:49"><literal type="char" pos:start="95:47" pos:end="95:49">'.'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="97:21" pos:end="99:61"><if pos:start="97:21" pos:end="99:61">if <condition pos:start="97:24" pos:end="97:30">(<expr pos:start="97:25" pos:end="97:29"><operator pos:start="97:25" pos:end="97:25">!</operator><name pos:start="97:26" pos:end="97:29">eosf</name></expr>)</condition><block type="pseudo" pos:start="99:25" pos:end="99:61"><block_content pos:start="99:25" pos:end="99:61">

                        <expr_stmt pos:start="99:25" pos:end="99:61"><expr pos:start="99:25" pos:end="99:60"><name pos:start="99:25" pos:end="99:28">eosf</name> <operator pos:start="99:30" pos:end="99:30">=</operator> <name pos:start="99:32" pos:end="99:40">sfilename</name> <operator pos:start="99:42" pos:end="99:42">+</operator> <call pos:start="99:44" pos:end="99:60"><name pos:start="99:44" pos:end="99:49">strlen</name><argument_list pos:start="99:50" pos:end="99:60">(<argument pos:start="99:51" pos:end="99:59"><expr pos:start="99:51" pos:end="99:59"><name pos:start="99:51" pos:end="99:59">sfilename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="101:21" pos:end="107:46"><if pos:start="101:21" pos:end="103:45">if <condition pos:start="101:24" pos:end="101:45">(<expr pos:start="101:25" pos:end="101:44"><name pos:start="101:25" pos:end="101:44"><name pos:start="101:25" pos:end="101:30">stream</name><operator pos:start="101:31" pos:end="101:32">-&gt;</operator><name pos:start="101:33" pos:end="101:44">is_multicast</name></name></expr>)</condition><block type="pseudo" pos:start="103:25" pos:end="103:45"><block_content pos:start="103:25" pos:end="103:45">

                        <expr_stmt pos:start="103:25" pos:end="103:45"><expr pos:start="103:25" pos:end="103:44"><call pos:start="103:25" pos:end="103:44"><name pos:start="103:25" pos:end="103:30">strcpy</name><argument_list pos:start="103:31" pos:end="103:44">(<argument pos:start="103:32" pos:end="103:35"><expr pos:start="103:32" pos:end="103:35"><name pos:start="103:32" pos:end="103:35">eosf</name></expr></argument>, <argument pos:start="103:38" pos:end="103:43"><expr pos:start="103:38" pos:end="103:43"><literal type="string" pos:start="103:38" pos:end="103:43">".sdp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="105:21" pos:end="107:46">else<block type="pseudo" pos:start="107:25" pos:end="107:46"><block_content pos:start="107:25" pos:end="107:46">

                        <expr_stmt pos:start="107:25" pos:end="107:46"><expr pos:start="107:25" pos:end="107:45"><call pos:start="107:25" pos:end="107:45"><name pos:start="107:25" pos:end="107:30">strcpy</name><argument_list pos:start="107:31" pos:end="107:45">(<argument pos:start="107:32" pos:end="107:35"><expr pos:start="107:32" pos:end="107:35"><name pos:start="107:32" pos:end="107:35">eosf</name></expr></argument>, <argument pos:start="107:38" pos:end="107:44"><expr pos:start="107:38" pos:end="107:44"><literal type="string" pos:start="107:38" pos:end="107:44">".rtsp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="115:13" pos:end="117:54"><expr pos:start="115:13" pos:end="117:53"><call pos:start="115:13" pos:end="117:53"><name pos:start="115:13" pos:end="115:23">avio_printf</name><argument_list pos:start="115:24" pos:end="117:53">(<argument pos:start="115:25" pos:end="115:26"><expr pos:start="115:25" pos:end="115:26"><name pos:start="115:25" pos:end="115:26">pb</name></expr></argument>, <argument pos:start="115:29" pos:end="115:61"><expr pos:start="115:29" pos:end="115:61"><literal type="string" pos:start="115:29" pos:end="115:61">"&lt;tr&gt;&lt;td&gt;&lt;a href=\"/%s\"&gt;%s&lt;/a&gt; "</literal></expr></argument>,

                         <argument pos:start="117:26" pos:end="117:34"><expr pos:start="117:26" pos:end="117:34"><name pos:start="117:26" pos:end="117:34">sfilename</name></expr></argument>, <argument pos:start="117:37" pos:end="117:52"><expr pos:start="117:37" pos:end="117:52"><name pos:start="117:37" pos:end="117:52"><name pos:start="117:37" pos:end="117:42">stream</name><operator pos:start="117:43" pos:end="117:44">-&gt;</operator><name pos:start="117:45" pos:end="117:52">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="121:46"><expr pos:start="119:13" pos:end="121:45"><call pos:start="119:13" pos:end="121:45"><name pos:start="119:13" pos:end="119:23">avio_printf</name><argument_list pos:start="119:24" pos:end="121:45">(<argument pos:start="119:25" pos:end="119:26"><expr pos:start="119:25" pos:end="119:26"><name pos:start="119:25" pos:end="119:26">pb</name></expr></argument>, <argument pos:start="119:29" pos:end="119:67"><expr pos:start="119:29" pos:end="119:67"><literal type="string" pos:start="119:29" pos:end="119:67">"&lt;td align=right&gt; %d &lt;td align=right&gt; "</literal></expr></argument>,

                        <argument pos:start="121:25" pos:end="121:44"><expr pos:start="121:25" pos:end="121:44"><name pos:start="121:25" pos:end="121:44"><name pos:start="121:25" pos:end="121:30">stream</name><operator pos:start="121:31" pos:end="121:32">-&gt;</operator><name pos:start="121:33" pos:end="121:44">conns_served</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:52"><expr pos:start="123:13" pos:end="123:51"><call pos:start="123:13" pos:end="123:51"><name pos:start="123:13" pos:end="123:25">fmt_bytecount</name><argument_list pos:start="123:26" pos:end="123:51">(<argument pos:start="123:27" pos:end="123:28"><expr pos:start="123:27" pos:end="123:28"><name pos:start="123:27" pos:end="123:28">pb</name></expr></argument>, <argument pos:start="123:31" pos:end="123:50"><expr pos:start="123:31" pos:end="123:50"><name pos:start="123:31" pos:end="123:50"><name pos:start="123:31" pos:end="123:36">stream</name><operator pos:start="123:37" pos:end="123:38">-&gt;</operator><name pos:start="123:39" pos:end="123:50">bytes_served</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="125:13" pos:end="227:13">switch<condition pos:start="125:19" pos:end="125:39">(<expr pos:start="125:20" pos:end="125:38"><name pos:start="125:20" pos:end="125:38"><name pos:start="125:20" pos:end="125:25">stream</name><operator pos:start="125:26" pos:end="125:27">-&gt;</operator><name pos:start="125:28" pos:end="125:38">stream_type</name></name></expr>)</condition> <block pos:start="125:41" pos:end="227:13">{<block_content pos:start="127:13" pos:end="225:22">

            <case pos:start="127:13" pos:end="127:34">case <expr pos:start="127:18" pos:end="127:33"><name pos:start="127:18" pos:end="127:33">STREAM_TYPE_LIVE</name></expr>:</case> <block pos:start="127:36" pos:end="217:17">{<block_content pos:start="129:21" pos:end="215:42">

                    <decl_stmt pos:start="129:21" pos:end="129:43"><decl pos:start="129:21" pos:end="129:42"><type pos:start="129:21" pos:end="129:23"><name pos:start="129:21" pos:end="129:23">int</name></type> <name pos:start="129:25" pos:end="129:38">audio_bit_rate</name> <init pos:start="129:40" pos:end="129:42">= <expr pos:start="129:42" pos:end="129:42"><literal type="number" pos:start="129:42" pos:end="129:42">0</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="131:21" pos:end="131:43"><decl pos:start="131:21" pos:end="131:42"><type pos:start="131:21" pos:end="131:23"><name pos:start="131:21" pos:end="131:23">int</name></type> <name pos:start="131:25" pos:end="131:38">video_bit_rate</name> <init pos:start="131:40" pos:end="131:42">= <expr pos:start="131:42" pos:end="131:42"><literal type="number" pos:start="131:42" pos:end="131:42">0</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="133:21" pos:end="133:54"><decl pos:start="133:21" pos:end="133:53"><type pos:start="133:21" pos:end="133:32"><specifier pos:start="133:21" pos:end="133:25">const</specifier> <name pos:start="133:27" pos:end="133:30">char</name> <modifier pos:start="133:32" pos:end="133:32">*</modifier></type><name pos:start="133:33" pos:end="133:48">audio_codec_name</name> <init pos:start="133:50" pos:end="133:53">= <expr pos:start="133:52" pos:end="133:53"><literal type="string" pos:start="133:52" pos:end="133:53">""</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="135:21" pos:end="135:54"><decl pos:start="135:21" pos:end="135:53"><type pos:start="135:21" pos:end="135:32"><specifier pos:start="135:21" pos:end="135:25">const</specifier> <name pos:start="135:27" pos:end="135:30">char</name> <modifier pos:start="135:32" pos:end="135:32">*</modifier></type><name pos:start="135:33" pos:end="135:48">video_codec_name</name> <init pos:start="135:50" pos:end="135:53">= <expr pos:start="135:52" pos:end="135:53"><literal type="string" pos:start="135:52" pos:end="135:53">""</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="137:21" pos:end="137:60"><decl pos:start="137:21" pos:end="137:59"><type pos:start="137:21" pos:end="137:32"><specifier pos:start="137:21" pos:end="137:25">const</specifier> <name pos:start="137:27" pos:end="137:30">char</name> <modifier pos:start="137:32" pos:end="137:32">*</modifier></type><name pos:start="137:33" pos:end="137:54">audio_codec_name_extra</name> <init pos:start="137:56" pos:end="137:59">= <expr pos:start="137:58" pos:end="137:59"><literal type="string" pos:start="137:58" pos:end="137:59">""</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="139:21" pos:end="139:60"><decl pos:start="139:21" pos:end="139:59"><type pos:start="139:21" pos:end="139:32"><specifier pos:start="139:21" pos:end="139:25">const</specifier> <name pos:start="139:27" pos:end="139:30">char</name> <modifier pos:start="139:32" pos:end="139:32">*</modifier></type><name pos:start="139:33" pos:end="139:54">video_codec_name_extra</name> <init pos:start="139:56" pos:end="139:59">= <expr pos:start="139:58" pos:end="139:59"><literal type="string" pos:start="139:58" pos:end="139:59">""</literal></expr></init></decl>;</decl_stmt>



                    <for pos:start="143:21" pos:end="195:21">for<control pos:start="143:24" pos:end="143:53">(<init pos:start="143:25" pos:end="143:28"><expr pos:start="143:25" pos:end="143:27"><name pos:start="143:25" pos:end="143:25">i</name><operator pos:start="143:26" pos:end="143:26">=</operator><literal type="number" pos:start="143:27" pos:end="143:27">0</literal></expr>;</init><condition pos:start="143:29" pos:end="143:49"><expr pos:start="143:29" pos:end="143:48"><name pos:start="143:29" pos:end="143:29">i</name><operator pos:start="143:30" pos:end="143:30">&lt;</operator><name pos:start="143:31" pos:end="143:48"><name pos:start="143:31" pos:end="143:36">stream</name><operator pos:start="143:37" pos:end="143:38">-&gt;</operator><name pos:start="143:39" pos:end="143:48">nb_streams</name></name></expr>;</condition><incr pos:start="143:50" pos:end="143:52"><expr pos:start="143:50" pos:end="143:52"><name pos:start="143:50" pos:end="143:50">i</name><operator pos:start="143:51" pos:end="143:52">++</operator></expr></incr>)</control> <block pos:start="143:55" pos:end="195:21">{<block_content pos:start="145:25" pos:end="193:25">

                        <decl_stmt pos:start="145:25" pos:end="145:58"><decl pos:start="145:25" pos:end="145:57"><type pos:start="145:25" pos:end="145:34"><name pos:start="145:25" pos:end="145:32">AVStream</name> <modifier pos:start="145:34" pos:end="145:34">*</modifier></type><name pos:start="145:35" pos:end="145:36">st</name> <init pos:start="145:38" pos:end="145:57">= <expr pos:start="145:40" pos:end="145:57"><name pos:start="145:40" pos:end="145:57"><name pos:start="145:40" pos:end="145:45">stream</name><operator pos:start="145:46" pos:end="145:47">-&gt;</operator><name pos:start="145:48" pos:end="145:54">streams</name><index pos:start="145:55" pos:end="145:57">[<expr pos:start="145:56" pos:end="145:56"><name pos:start="145:56" pos:end="145:56">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="147:25" pos:end="147:83"><decl pos:start="147:25" pos:end="147:82"><type pos:start="147:25" pos:end="147:33"><name pos:start="147:25" pos:end="147:31">AVCodec</name> <modifier pos:start="147:33" pos:end="147:33">*</modifier></type><name pos:start="147:34" pos:end="147:38">codec</name> <init pos:start="147:40" pos:end="147:82">= <expr pos:start="147:42" pos:end="147:82"><call pos:start="147:42" pos:end="147:82"><name pos:start="147:42" pos:end="147:61">avcodec_find_encoder</name><argument_list pos:start="147:62" pos:end="147:82">(<argument pos:start="147:63" pos:end="147:81"><expr pos:start="147:63" pos:end="147:81"><name pos:start="147:63" pos:end="147:81"><name pos:start="147:63" pos:end="147:64">st</name><operator pos:start="147:65" pos:end="147:66">-&gt;</operator><name pos:start="147:67" pos:end="147:71">codec</name><operator pos:start="147:72" pos:end="147:73">-&gt;</operator><name pos:start="147:74" pos:end="147:81">codec_id</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <switch pos:start="149:25" pos:end="193:25">switch<condition pos:start="149:31" pos:end="149:53">(<expr pos:start="149:32" pos:end="149:52"><name pos:start="149:32" pos:end="149:52"><name pos:start="149:32" pos:end="149:33">st</name><operator pos:start="149:34" pos:end="149:35">-&gt;</operator><name pos:start="149:36" pos:end="149:40">codec</name><operator pos:start="149:41" pos:end="149:42">-&gt;</operator><name pos:start="149:43" pos:end="149:52">codec_type</name></name></expr>)</condition> <block pos:start="149:55" pos:end="193:25">{<block_content pos:start="151:25" pos:end="191:36">

                        <case pos:start="151:25" pos:end="151:48">case <expr pos:start="151:30" pos:end="151:47"><name pos:start="151:30" pos:end="151:47">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                            <expr_stmt pos:start="153:29" pos:end="153:66"><expr pos:start="153:29" pos:end="153:65"><name pos:start="153:29" pos:end="153:42">audio_bit_rate</name> <operator pos:start="153:44" pos:end="153:45">+=</operator> <name pos:start="153:47" pos:end="153:65"><name pos:start="153:47" pos:end="153:48">st</name><operator pos:start="153:49" pos:end="153:50">-&gt;</operator><name pos:start="153:51" pos:end="153:55">codec</name><operator pos:start="153:56" pos:end="153:57">-&gt;</operator><name pos:start="153:58" pos:end="153:65">bit_rate</name></name></expr>;</expr_stmt>

                            <if_stmt pos:start="155:29" pos:end="163:29"><if pos:start="155:29" pos:end="163:29">if <condition pos:start="155:32" pos:end="155:38">(<expr pos:start="155:33" pos:end="155:37"><name pos:start="155:33" pos:end="155:37">codec</name></expr>)</condition> <block pos:start="155:40" pos:end="163:29">{<block_content pos:start="157:33" pos:end="161:63">

                                <if_stmt pos:start="157:33" pos:end="159:67"><if pos:start="157:33" pos:end="159:67">if <condition pos:start="157:36" pos:end="157:54">(<expr pos:start="157:37" pos:end="157:53"><operator pos:start="157:37" pos:end="157:37">*</operator><name pos:start="157:38" pos:end="157:53">audio_codec_name</name></expr>)</condition><block type="pseudo" pos:start="159:37" pos:end="159:67"><block_content pos:start="159:37" pos:end="159:67">

                                    <expr_stmt pos:start="159:37" pos:end="159:67"><expr pos:start="159:37" pos:end="159:66"><name pos:start="159:37" pos:end="159:58">audio_codec_name_extra</name> <operator pos:start="159:60" pos:end="159:60">=</operator> <literal type="string" pos:start="159:62" pos:end="159:66">"..."</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                                <expr_stmt pos:start="161:33" pos:end="161:63"><expr pos:start="161:33" pos:end="161:62"><name pos:start="161:33" pos:end="161:48">audio_codec_name</name> <operator pos:start="161:50" pos:end="161:50">=</operator> <name pos:start="161:52" pos:end="161:62"><name pos:start="161:52" pos:end="161:56">codec</name><operator pos:start="161:57" pos:end="161:58">-&gt;</operator><name pos:start="161:59" pos:end="161:62">name</name></name></expr>;</expr_stmt>

                            </block_content>}</block></if></if_stmt>

                            <break pos:start="165:29" pos:end="165:34">break;</break>

                        <case pos:start="167:25" pos:end="167:48">case <expr pos:start="167:30" pos:end="167:47"><name pos:start="167:30" pos:end="167:47">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                            <expr_stmt pos:start="169:29" pos:end="169:66"><expr pos:start="169:29" pos:end="169:65"><name pos:start="169:29" pos:end="169:42">video_bit_rate</name> <operator pos:start="169:44" pos:end="169:45">+=</operator> <name pos:start="169:47" pos:end="169:65"><name pos:start="169:47" pos:end="169:48">st</name><operator pos:start="169:49" pos:end="169:50">-&gt;</operator><name pos:start="169:51" pos:end="169:55">codec</name><operator pos:start="169:56" pos:end="169:57">-&gt;</operator><name pos:start="169:58" pos:end="169:65">bit_rate</name></name></expr>;</expr_stmt>

                            <if_stmt pos:start="171:29" pos:end="179:29"><if pos:start="171:29" pos:end="179:29">if <condition pos:start="171:32" pos:end="171:38">(<expr pos:start="171:33" pos:end="171:37"><name pos:start="171:33" pos:end="171:37">codec</name></expr>)</condition> <block pos:start="171:40" pos:end="179:29">{<block_content pos:start="173:33" pos:end="177:63">

                                <if_stmt pos:start="173:33" pos:end="175:67"><if pos:start="173:33" pos:end="175:67">if <condition pos:start="173:36" pos:end="173:54">(<expr pos:start="173:37" pos:end="173:53"><operator pos:start="173:37" pos:end="173:37">*</operator><name pos:start="173:38" pos:end="173:53">video_codec_name</name></expr>)</condition><block type="pseudo" pos:start="175:37" pos:end="175:67"><block_content pos:start="175:37" pos:end="175:67">

                                    <expr_stmt pos:start="175:37" pos:end="175:67"><expr pos:start="175:37" pos:end="175:66"><name pos:start="175:37" pos:end="175:58">video_codec_name_extra</name> <operator pos:start="175:60" pos:end="175:60">=</operator> <literal type="string" pos:start="175:62" pos:end="175:66">"..."</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                                <expr_stmt pos:start="177:33" pos:end="177:63"><expr pos:start="177:33" pos:end="177:62"><name pos:start="177:33" pos:end="177:48">video_codec_name</name> <operator pos:start="177:50" pos:end="177:50">=</operator> <name pos:start="177:52" pos:end="177:62"><name pos:start="177:52" pos:end="177:56">codec</name><operator pos:start="177:57" pos:end="177:58">-&gt;</operator><name pos:start="177:59" pos:end="177:62">name</name></name></expr>;</expr_stmt>

                            </block_content>}</block></if></if_stmt>

                            <break pos:start="181:29" pos:end="181:34">break;</break>

                        <case pos:start="183:25" pos:end="183:47">case <expr pos:start="183:30" pos:end="183:46"><name pos:start="183:30" pos:end="183:46">AVMEDIA_TYPE_DATA</name></expr>:</case>

                            <expr_stmt pos:start="185:29" pos:end="185:66"><expr pos:start="185:29" pos:end="185:65"><name pos:start="185:29" pos:end="185:42">video_bit_rate</name> <operator pos:start="185:44" pos:end="185:45">+=</operator> <name pos:start="185:47" pos:end="185:65"><name pos:start="185:47" pos:end="185:48">st</name><operator pos:start="185:49" pos:end="185:50">-&gt;</operator><name pos:start="185:51" pos:end="185:55">codec</name><operator pos:start="185:56" pos:end="185:57">-&gt;</operator><name pos:start="185:58" pos:end="185:65">bit_rate</name></name></expr>;</expr_stmt>

                            <break pos:start="187:29" pos:end="187:34">break;</break>

                        <default pos:start="189:25" pos:end="189:32">default:</default>

                            <expr_stmt pos:start="191:29" pos:end="191:36"><expr pos:start="191:29" pos:end="191:35"><call pos:start="191:29" pos:end="191:35"><name pos:start="191:29" pos:end="191:33">abort</name><argument_list pos:start="191:34" pos:end="191:35">()</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></switch>

                    </block_content>}</block></for>

                    <expr_stmt pos:start="197:21" pos:end="205:98"><expr pos:start="197:21" pos:end="205:97"><call pos:start="197:21" pos:end="205:97"><name pos:start="197:21" pos:end="197:31">avio_printf</name><argument_list pos:start="197:32" pos:end="205:97">(<argument pos:start="197:33" pos:end="197:34"><expr pos:start="197:33" pos:end="197:34"><name pos:start="197:33" pos:end="197:34">pb</name></expr></argument>, <argument pos:start="197:37" pos:end="197:140"><expr pos:start="197:37" pos:end="197:140"><literal type="string" pos:start="197:37" pos:end="197:140">"&lt;td align=center&gt; %s &lt;td align=right&gt; %d &lt;td align=right&gt; %d &lt;td&gt; %s %s &lt;td align=right&gt; %d &lt;td&gt; %s %s"</literal></expr></argument>,

                                 <argument pos:start="199:34" pos:end="199:50"><expr pos:start="199:34" pos:end="199:50"><name pos:start="199:34" pos:end="199:50"><name pos:start="199:34" pos:end="199:39">stream</name><operator pos:start="199:40" pos:end="199:41">-&gt;</operator><name pos:start="199:42" pos:end="199:44">fmt</name><operator pos:start="199:45" pos:end="199:46">-&gt;</operator><name pos:start="199:47" pos:end="199:50">name</name></name></expr></argument>,

                                 <argument pos:start="201:34" pos:end="201:50"><expr pos:start="201:34" pos:end="201:50"><name pos:start="201:34" pos:end="201:50"><name pos:start="201:34" pos:end="201:39">stream</name><operator pos:start="201:40" pos:end="201:41">-&gt;</operator><name pos:start="201:42" pos:end="201:50">bandwidth</name></name></expr></argument>,

                                 <argument pos:start="203:34" pos:end="203:54"><expr pos:start="203:34" pos:end="203:54"><name pos:start="203:34" pos:end="203:47">video_bit_rate</name> <operator pos:start="203:49" pos:end="203:49">/</operator> <literal type="number" pos:start="203:51" pos:end="203:54">1000</literal></expr></argument>, <argument pos:start="203:57" pos:end="203:72"><expr pos:start="203:57" pos:end="203:72"><name pos:start="203:57" pos:end="203:72">video_codec_name</name></expr></argument>, <argument pos:start="203:75" pos:end="203:96"><expr pos:start="203:75" pos:end="203:96"><name pos:start="203:75" pos:end="203:96">video_codec_name_extra</name></expr></argument>,

                                 <argument pos:start="205:34" pos:end="205:54"><expr pos:start="205:34" pos:end="205:54"><name pos:start="205:34" pos:end="205:47">audio_bit_rate</name> <operator pos:start="205:49" pos:end="205:49">/</operator> <literal type="number" pos:start="205:51" pos:end="205:54">1000</literal></expr></argument>, <argument pos:start="205:57" pos:end="205:72"><expr pos:start="205:57" pos:end="205:72"><name pos:start="205:57" pos:end="205:72">audio_codec_name</name></expr></argument>, <argument pos:start="205:75" pos:end="205:96"><expr pos:start="205:75" pos:end="205:96"><name pos:start="205:75" pos:end="205:96">audio_codec_name_extra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="207:21" pos:end="213:73"><if pos:start="207:21" pos:end="209:74">if <condition pos:start="207:24" pos:end="207:37">(<expr pos:start="207:25" pos:end="207:36"><name pos:start="207:25" pos:end="207:36"><name pos:start="207:25" pos:end="207:30">stream</name><operator pos:start="207:31" pos:end="207:32">-&gt;</operator><name pos:start="207:33" pos:end="207:36">feed</name></name></expr>)</condition><block type="pseudo" pos:start="209:25" pos:end="209:74"><block_content pos:start="209:25" pos:end="209:74">

                        <expr_stmt pos:start="209:25" pos:end="209:74"><expr pos:start="209:25" pos:end="209:73"><call pos:start="209:25" pos:end="209:73"><name pos:start="209:25" pos:end="209:35">avio_printf</name><argument_list pos:start="209:36" pos:end="209:73">(<argument pos:start="209:37" pos:end="209:38"><expr pos:start="209:37" pos:end="209:38"><name pos:start="209:37" pos:end="209:38">pb</name></expr></argument>, <argument pos:start="209:41" pos:end="209:48"><expr pos:start="209:41" pos:end="209:48"><literal type="string" pos:start="209:41" pos:end="209:48">"&lt;td&gt;%s"</literal></expr></argument>, <argument pos:start="209:51" pos:end="209:72"><expr pos:start="209:51" pos:end="209:72"><name pos:start="209:51" pos:end="209:72"><name pos:start="209:51" pos:end="209:56">stream</name><operator pos:start="209:57" pos:end="209:58">-&gt;</operator><name pos:start="209:59" pos:end="209:62">feed</name><operator pos:start="209:63" pos:end="209:64">-&gt;</operator><name pos:start="209:65" pos:end="209:72">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="211:21" pos:end="213:73">else<block type="pseudo" pos:start="213:25" pos:end="213:73"><block_content pos:start="213:25" pos:end="213:73">

                        <expr_stmt pos:start="213:25" pos:end="213:73"><expr pos:start="213:25" pos:end="213:72"><call pos:start="213:25" pos:end="213:72"><name pos:start="213:25" pos:end="213:35">avio_printf</name><argument_list pos:start="213:36" pos:end="213:72">(<argument pos:start="213:37" pos:end="213:38"><expr pos:start="213:37" pos:end="213:38"><name pos:start="213:37" pos:end="213:38">pb</name></expr></argument>, <argument pos:start="213:41" pos:end="213:48"><expr pos:start="213:41" pos:end="213:48"><literal type="string" pos:start="213:41" pos:end="213:48">"&lt;td&gt;%s"</literal></expr></argument>, <argument pos:start="213:51" pos:end="213:71"><expr pos:start="213:51" pos:end="213:71"><name pos:start="213:51" pos:end="213:71"><name pos:start="213:51" pos:end="213:56">stream</name><operator pos:start="213:57" pos:end="213:58">-&gt;</operator><name pos:start="213:59" pos:end="213:71">feed_filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="215:21" pos:end="215:42"><expr pos:start="215:21" pos:end="215:41"><call pos:start="215:21" pos:end="215:41"><name pos:start="215:21" pos:end="215:31">avio_printf</name><argument_list pos:start="215:32" pos:end="215:41">(<argument pos:start="215:33" pos:end="215:34"><expr pos:start="215:33" pos:end="215:34"><name pos:start="215:33" pos:end="215:34">pb</name></expr></argument>, <argument pos:start="215:37" pos:end="215:40"><expr pos:start="215:37" pos:end="215:40"><literal type="string" pos:start="215:37" pos:end="215:40">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="219:17" pos:end="219:22">break;</break>

            <default pos:start="221:13" pos:end="221:20">default:</default>

                <expr_stmt pos:start="223:17" pos:end="223:123"><expr pos:start="223:17" pos:end="223:122"><call pos:start="223:17" pos:end="223:122"><name pos:start="223:17" pos:end="223:27">avio_printf</name><argument_list pos:start="223:28" pos:end="223:122">(<argument pos:start="223:29" pos:end="223:30"><expr pos:start="223:29" pos:end="223:30"><name pos:start="223:29" pos:end="223:30">pb</name></expr></argument>, <argument pos:start="223:33" pos:end="223:121"><expr pos:start="223:33" pos:end="223:121"><literal type="string" pos:start="223:33" pos:end="223:121">"&lt;td align=center&gt; - &lt;td align=right&gt; - &lt;td align=right&gt; - &lt;td&gt;&lt;td align=right&gt; - &lt;td&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="225:17" pos:end="225:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:30"><expr pos:start="231:9" pos:end="231:29"><name pos:start="231:9" pos:end="231:14">stream</name> <operator pos:start="231:16" pos:end="231:16">=</operator> <name pos:start="231:18" pos:end="231:29"><name pos:start="231:18" pos:end="231:23">stream</name><operator pos:start="231:24" pos:end="231:25">-&gt;</operator><name pos:start="231:26" pos:end="231:29">next</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="235:5" pos:end="235:34"><expr pos:start="235:5" pos:end="235:33"><call pos:start="235:5" pos:end="235:33"><name pos:start="235:5" pos:end="235:15">avio_printf</name><argument_list pos:start="235:16" pos:end="235:33">(<argument pos:start="235:17" pos:end="235:18"><expr pos:start="235:17" pos:end="235:18"><name pos:start="235:17" pos:end="235:18">pb</name></expr></argument>, <argument pos:start="235:21" pos:end="235:32"><expr pos:start="235:21" pos:end="235:32"><literal type="string" pos:start="235:21" pos:end="235:32">"&lt;/table&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="239:5" pos:end="239:26"><expr pos:start="239:5" pos:end="239:25"><name pos:start="239:5" pos:end="239:10">stream</name> <operator pos:start="239:12" pos:end="239:12">=</operator> <name pos:start="239:14" pos:end="239:25">first_stream</name></expr>;</expr_stmt>

    <while pos:start="241:5" pos:end="367:5">while <condition pos:start="241:11" pos:end="241:26">(<expr pos:start="241:12" pos:end="241:25"><name pos:start="241:12" pos:end="241:17">stream</name> <operator pos:start="241:19" pos:end="241:20">!=</operator> <name pos:start="241:22" pos:end="241:25">NULL</name></expr>)</condition> <block pos:start="241:28" pos:end="367:5">{<block_content pos:start="243:9" pos:end="365:30">

        <if_stmt pos:start="243:9" pos:end="363:9"><if pos:start="243:9" pos:end="363:9">if <condition pos:start="243:12" pos:end="243:35">(<expr pos:start="243:13" pos:end="243:34"><name pos:start="243:13" pos:end="243:24"><name pos:start="243:13" pos:end="243:18">stream</name><operator pos:start="243:19" pos:end="243:20">-&gt;</operator><name pos:start="243:21" pos:end="243:24">feed</name></name> <operator pos:start="243:26" pos:end="243:27">==</operator> <name pos:start="243:29" pos:end="243:34">stream</name></expr>)</condition> <block pos:start="243:37" pos:end="363:9">{<block_content pos:start="245:13" pos:end="359:42">

            <expr_stmt pos:start="245:13" pos:end="245:66"><expr pos:start="245:13" pos:end="245:65"><call pos:start="245:13" pos:end="245:65"><name pos:start="245:13" pos:end="245:23">avio_printf</name><argument_list pos:start="245:24" pos:end="245:65">(<argument pos:start="245:25" pos:end="245:26"><expr pos:start="245:25" pos:end="245:26"><name pos:start="245:25" pos:end="245:26">pb</name></expr></argument>, <argument pos:start="245:29" pos:end="245:46"><expr pos:start="245:29" pos:end="245:46"><literal type="string" pos:start="245:29" pos:end="245:46">"&lt;h2&gt;Feed %s&lt;/h2&gt;"</literal></expr></argument>, <argument pos:start="245:49" pos:end="245:64"><expr pos:start="245:49" pos:end="245:64"><name pos:start="245:49" pos:end="245:64"><name pos:start="245:49" pos:end="245:54">stream</name><operator pos:start="245:55" pos:end="245:56">-&gt;</operator><name pos:start="245:57" pos:end="245:64">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="247:13" pos:end="305:13"><if pos:start="247:13" pos:end="305:13">if <condition pos:start="247:16" pos:end="247:28">(<expr pos:start="247:17" pos:end="247:27"><name pos:start="247:17" pos:end="247:27"><name pos:start="247:17" pos:end="247:22">stream</name><operator pos:start="247:23" pos:end="247:24">-&gt;</operator><name pos:start="247:25" pos:end="247:27">pid</name></name></expr>)</condition> <block pos:start="247:30" pos:end="305:13">{<block_content pos:start="249:17" pos:end="303:39">

                <expr_stmt pos:start="249:17" pos:end="254:0"><expr pos:start="249:17" pos:end="249:68"><call pos:start="249:17" pos:end="249:68"><name pos:start="249:17" pos:end="249:27">avio_printf</name><argument_list pos:start="249:28" pos:end="249:68">(<argument pos:start="249:29" pos:end="249:30"><expr pos:start="249:29" pos:end="249:30"><name pos:start="249:29" pos:end="249:30">pb</name></expr></argument>, <argument pos:start="249:33" pos:end="249:54"><expr pos:start="249:33" pos:end="249:54"><literal type="string" pos:start="249:33" pos:end="249:54">"Running as pid %d.\n"</literal></expr></argument>, <argument pos:start="249:57" pos:end="249:67"><expr pos:start="249:57" pos:end="249:67"><name pos:start="249:57" pos:end="249:67"><name pos:start="249:57" pos:end="249:62">stream</name><operator pos:start="249:63" pos:end="249:64">-&gt;</operator><name pos:start="249:65" pos:end="249:67">pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="253:1" pos:end="253:47">#<cpp:directive pos:start="253:2" pos:end="253:3">if</cpp:directive> <expr pos:start="253:5" pos:end="253:47"><call pos:start="253:5" pos:end="253:18"><name pos:start="253:5" pos:end="253:11">defined</name><argument_list pos:start="253:12" pos:end="253:18">(<argument pos:start="253:13" pos:end="253:17"><expr pos:start="253:13" pos:end="253:17"><name pos:start="253:13" pos:end="253:17">linux</name></expr></argument>)</argument_list></call> <operator pos:start="253:20" pos:end="253:21">&amp;&amp;</operator> <operator pos:start="253:23" pos:end="253:23">!</operator><call pos:start="253:24" pos:end="253:47"><name pos:start="253:24" pos:end="253:30">defined</name><argument_list pos:start="253:31" pos:end="253:47">(<argument pos:start="253:32" pos:end="253:46"><expr pos:start="253:32" pos:end="253:46"><name pos:start="253:32" pos:end="253:46">CONFIG_NOCUTILS</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <block pos:start="255:17" pos:end="300:0">{<block_content pos:start="257:21" pos:end="295:21">

                    <decl_stmt pos:start="257:21" pos:end="257:35"><decl pos:start="257:21" pos:end="257:34"><type pos:start="257:21" pos:end="257:26"><name pos:start="257:21" pos:end="257:24">FILE</name> <modifier pos:start="257:26" pos:end="257:26">*</modifier></type><name pos:start="257:27" pos:end="257:34">pid_stat</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="259:21" pos:end="259:36"><decl pos:start="259:21" pos:end="259:35"><type pos:start="259:21" pos:end="259:24"><name pos:start="259:21" pos:end="259:24">char</name></type> <name pos:start="259:26" pos:end="259:35"><name pos:start="259:26" pos:end="259:31">ps_cmd</name><index pos:start="259:32" pos:end="259:35">[<expr pos:start="259:33" pos:end="259:34"><literal type="number" pos:start="259:33" pos:end="259:34">64</literal></expr>]</index></name></decl>;</decl_stmt>



                    <comment type="block" pos:start="263:21" pos:end="263:65">/* This is somewhat linux specific I guess */</comment>

                    <expr_stmt pos:start="265:21" pos:end="269:42"><expr pos:start="265:21" pos:end="269:41"><call pos:start="265:21" pos:end="269:41"><name pos:start="265:21" pos:end="265:28">snprintf</name><argument_list pos:start="265:29" pos:end="269:41">(<argument pos:start="265:30" pos:end="265:35"><expr pos:start="265:30" pos:end="265:35"><name pos:start="265:30" pos:end="265:35">ps_cmd</name></expr></argument>, <argument pos:start="265:38" pos:end="265:51"><expr pos:start="265:38" pos:end="265:51"><sizeof pos:start="265:38" pos:end="265:51">sizeof<argument_list pos:start="265:44" pos:end="265:51">(<argument pos:start="265:45" pos:end="265:50"><expr pos:start="265:45" pos:end="265:50"><name pos:start="265:45" pos:end="265:50">ps_cmd</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                             <argument pos:start="267:30" pos:end="267:70"><expr pos:start="267:30" pos:end="267:70"><literal type="string" pos:start="267:30" pos:end="267:70">"ps -o \"%%cpu,cputime\" --no-headers %d"</literal></expr></argument>,

                             <argument pos:start="269:30" pos:end="269:40"><expr pos:start="269:30" pos:end="269:40"><name pos:start="269:30" pos:end="269:40"><name pos:start="269:30" pos:end="269:35">stream</name><operator pos:start="269:36" pos:end="269:37">-&gt;</operator><name pos:start="269:38" pos:end="269:40">pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="273:21" pos:end="273:50"><expr pos:start="273:21" pos:end="273:49"><name pos:start="273:21" pos:end="273:28">pid_stat</name> <operator pos:start="273:30" pos:end="273:30">=</operator> <call pos:start="273:32" pos:end="273:49"><name pos:start="273:32" pos:end="273:36">popen</name><argument_list pos:start="273:37" pos:end="273:49">(<argument pos:start="273:38" pos:end="273:43"><expr pos:start="273:38" pos:end="273:43"><name pos:start="273:38" pos:end="273:43">ps_cmd</name></expr></argument>, <argument pos:start="273:46" pos:end="273:48"><expr pos:start="273:46" pos:end="273:48"><literal type="string" pos:start="273:46" pos:end="273:48">"r"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="275:21" pos:end="295:21"><if pos:start="275:21" pos:end="295:21">if <condition pos:start="275:24" pos:end="275:33">(<expr pos:start="275:25" pos:end="275:32"><name pos:start="275:25" pos:end="275:32">pid_stat</name></expr>)</condition> <block pos:start="275:35" pos:end="295:21">{<block_content pos:start="277:25" pos:end="293:41">

                        <decl_stmt pos:start="277:25" pos:end="277:41"><decl pos:start="277:25" pos:end="277:40"><type pos:start="277:25" pos:end="277:28"><name pos:start="277:25" pos:end="277:28">char</name></type> <name pos:start="277:30" pos:end="277:40"><name pos:start="277:30" pos:end="277:36">cpuperc</name><index pos:start="277:37" pos:end="277:40">[<expr pos:start="277:38" pos:end="277:39"><literal type="number" pos:start="277:38" pos:end="277:39">10</literal></expr>]</index></name></decl>;</decl_stmt>

                        <decl_stmt pos:start="279:25" pos:end="279:41"><decl pos:start="279:25" pos:end="279:40"><type pos:start="279:25" pos:end="279:28"><name pos:start="279:25" pos:end="279:28">char</name></type> <name pos:start="279:30" pos:end="279:40"><name pos:start="279:30" pos:end="279:36">cpuused</name><index pos:start="279:37" pos:end="279:40">[<expr pos:start="279:38" pos:end="279:39"><literal type="number" pos:start="279:38" pos:end="279:39">64</literal></expr>]</index></name></decl>;</decl_stmt>



                        <if_stmt pos:start="283:25" pos:end="291:25"><if pos:start="283:25" pos:end="291:25">if <condition pos:start="283:28" pos:end="285:49">(<expr pos:start="283:29" pos:end="285:48"><call pos:start="283:29" pos:end="285:43"><name pos:start="283:29" pos:end="283:34">fscanf</name><argument_list pos:start="283:35" pos:end="285:43">(<argument pos:start="283:36" pos:end="283:43"><expr pos:start="283:36" pos:end="283:43"><name pos:start="283:36" pos:end="283:43">pid_stat</name></expr></argument>, <argument pos:start="283:46" pos:end="283:56"><expr pos:start="283:46" pos:end="283:56"><literal type="string" pos:start="283:46" pos:end="283:56">"%10s %64s"</literal></expr></argument>, <argument pos:start="283:59" pos:end="283:65"><expr pos:start="283:59" pos:end="283:65"><name pos:start="283:59" pos:end="283:65">cpuperc</name></expr></argument>,

                                   <argument pos:start="285:36" pos:end="285:42"><expr pos:start="285:36" pos:end="285:42"><name pos:start="285:36" pos:end="285:42">cpuused</name></expr></argument>)</argument_list></call> <operator pos:start="285:45" pos:end="285:46">==</operator> <literal type="number" pos:start="285:48" pos:end="285:48">2</literal></expr>)</condition> <block pos:start="285:51" pos:end="291:25">{<block_content pos:start="287:29" pos:end="289:59">

                            <expr_stmt pos:start="287:29" pos:end="289:59"><expr pos:start="287:29" pos:end="289:58"><call pos:start="287:29" pos:end="289:58"><name pos:start="287:29" pos:end="287:39">avio_printf</name><argument_list pos:start="287:40" pos:end="289:58">(<argument pos:start="287:41" pos:end="287:42"><expr pos:start="287:41" pos:end="287:42"><name pos:start="287:41" pos:end="287:42">pb</name></expr></argument>, <argument pos:start="287:45" pos:end="287:100"><expr pos:start="287:45" pos:end="287:100"><literal type="string" pos:start="287:45" pos:end="287:100">"Currently using %s%% of the cpu. Total time used %s.\n"</literal></expr></argument>,

                                         <argument pos:start="289:42" pos:end="289:48"><expr pos:start="289:42" pos:end="289:48"><name pos:start="289:42" pos:end="289:48">cpuperc</name></expr></argument>, <argument pos:start="289:51" pos:end="289:57"><expr pos:start="289:51" pos:end="289:57"><name pos:start="289:51" pos:end="289:57">cpuused</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="293:25" pos:end="293:41"><expr pos:start="293:25" pos:end="293:40"><call pos:start="293:25" pos:end="293:40"><name pos:start="293:25" pos:end="293:30">fclose</name><argument_list pos:start="293:31" pos:end="293:40">(<argument pos:start="293:32" pos:end="293:39"><expr pos:start="293:32" pos:end="293:39"><name pos:start="293:32" pos:end="293:39">pid_stat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block>

<cpp:endif pos:start="299:1" pos:end="299:6">#<cpp:directive pos:start="299:2" pos:end="299:6">endif</cpp:directive></cpp:endif>



                <expr_stmt pos:start="303:17" pos:end="303:39"><expr pos:start="303:17" pos:end="303:38"><call pos:start="303:17" pos:end="303:38"><name pos:start="303:17" pos:end="303:27">avio_printf</name><argument_list pos:start="303:28" pos:end="303:38">(<argument pos:start="303:29" pos:end="303:30"><expr pos:start="303:29" pos:end="303:30"><name pos:start="303:29" pos:end="303:30">pb</name></expr></argument>, <argument pos:start="303:33" pos:end="303:37"><expr pos:start="303:33" pos:end="303:37"><literal type="string" pos:start="303:33" pos:end="303:37">"&lt;p&gt;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="307:13" pos:end="307:147"><expr pos:start="307:13" pos:end="307:146"><call pos:start="307:13" pos:end="307:146"><name pos:start="307:13" pos:end="307:23">avio_printf</name><argument_list pos:start="307:24" pos:end="307:146">(<argument pos:start="307:25" pos:end="307:26"><expr pos:start="307:25" pos:end="307:26"><name pos:start="307:25" pos:end="307:26">pb</name></expr></argument>, <argument pos:start="307:29" pos:end="307:145"><expr pos:start="307:29" pos:end="307:145"><literal type="string" pos:start="307:29" pos:end="307:145">"&lt;table cellspacing=0 cellpadding=4&gt;&lt;tr&gt;&lt;th&gt;Stream&lt;th&gt;type&lt;th&gt;kbits/s&lt;th align=left&gt;codec&lt;th align=left&gt;Parameters\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="311:13" pos:end="357:13">for <control pos:start="311:17" pos:end="311:52">(<init pos:start="311:18" pos:end="311:23"><expr pos:start="311:18" pos:end="311:22"><name pos:start="311:18" pos:end="311:18">i</name> <operator pos:start="311:20" pos:end="311:20">=</operator> <literal type="number" pos:start="311:22" pos:end="311:22">0</literal></expr>;</init> <condition pos:start="311:25" pos:end="311:47"><expr pos:start="311:25" pos:end="311:46"><name pos:start="311:25" pos:end="311:25">i</name> <operator pos:start="311:27" pos:end="311:27">&lt;</operator> <name pos:start="311:29" pos:end="311:46"><name pos:start="311:29" pos:end="311:34">stream</name><operator pos:start="311:35" pos:end="311:36">-&gt;</operator><name pos:start="311:37" pos:end="311:46">nb_streams</name></name></expr>;</condition> <incr pos:start="311:49" pos:end="311:51"><expr pos:start="311:49" pos:end="311:51"><name pos:start="311:49" pos:end="311:49">i</name><operator pos:start="311:50" pos:end="311:51">++</operator></expr></incr>)</control> <block pos:start="311:54" pos:end="357:13">{<block_content pos:start="313:17" pos:end="355:97">

                <decl_stmt pos:start="313:17" pos:end="313:50"><decl pos:start="313:17" pos:end="313:49"><type pos:start="313:17" pos:end="313:26"><name pos:start="313:17" pos:end="313:24">AVStream</name> <modifier pos:start="313:26" pos:end="313:26">*</modifier></type><name pos:start="313:27" pos:end="313:28">st</name> <init pos:start="313:30" pos:end="313:49">= <expr pos:start="313:32" pos:end="313:49"><name pos:start="313:32" pos:end="313:49"><name pos:start="313:32" pos:end="313:37">stream</name><operator pos:start="313:38" pos:end="313:39">-&gt;</operator><name pos:start="313:40" pos:end="313:46">streams</name><index pos:start="313:47" pos:end="313:49">[<expr pos:start="313:48" pos:end="313:48"><name pos:start="313:48" pos:end="313:48">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="315:17" pos:end="315:75"><decl pos:start="315:17" pos:end="315:74"><type pos:start="315:17" pos:end="315:25"><name pos:start="315:17" pos:end="315:23">AVCodec</name> <modifier pos:start="315:25" pos:end="315:25">*</modifier></type><name pos:start="315:26" pos:end="315:30">codec</name> <init pos:start="315:32" pos:end="315:74">= <expr pos:start="315:34" pos:end="315:74"><call pos:start="315:34" pos:end="315:74"><name pos:start="315:34" pos:end="315:53">avcodec_find_encoder</name><argument_list pos:start="315:54" pos:end="315:74">(<argument pos:start="315:55" pos:end="315:73"><expr pos:start="315:55" pos:end="315:73"><name pos:start="315:55" pos:end="315:73"><name pos:start="315:55" pos:end="315:56">st</name><operator pos:start="315:57" pos:end="315:58">-&gt;</operator><name pos:start="315:59" pos:end="315:63">codec</name><operator pos:start="315:64" pos:end="315:65">-&gt;</operator><name pos:start="315:66" pos:end="315:73">codec_id</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="317:17" pos:end="317:45"><decl pos:start="317:17" pos:end="317:44"><type pos:start="317:17" pos:end="317:28"><specifier pos:start="317:17" pos:end="317:21">const</specifier> <name pos:start="317:23" pos:end="317:26">char</name> <modifier pos:start="317:28" pos:end="317:28">*</modifier></type><name pos:start="317:29" pos:end="317:32">type</name> <init pos:start="317:34" pos:end="317:44">= <expr pos:start="317:36" pos:end="317:44"><literal type="string" pos:start="317:36" pos:end="317:44">"unknown"</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="319:17" pos:end="319:36"><decl pos:start="319:17" pos:end="319:35"><type pos:start="319:17" pos:end="319:20"><name pos:start="319:17" pos:end="319:20">char</name></type> <name pos:start="319:22" pos:end="319:35"><name pos:start="319:22" pos:end="319:31">parameters</name><index pos:start="319:32" pos:end="319:35">[<expr pos:start="319:33" pos:end="319:34"><literal type="number" pos:start="319:33" pos:end="319:34">64</literal></expr>]</index></name></decl>;</decl_stmt>



                <expr_stmt pos:start="323:17" pos:end="323:34"><expr pos:start="323:17" pos:end="323:33"><name pos:start="323:17" pos:end="323:29"><name pos:start="323:17" pos:end="323:26">parameters</name><index pos:start="323:27" pos:end="323:29">[<expr pos:start="323:28" pos:end="323:28"><literal type="number" pos:start="323:28" pos:end="323:28">0</literal></expr>]</index></name> <operator pos:start="323:31" pos:end="323:31">=</operator> <literal type="number" pos:start="323:33" pos:end="323:33">0</literal></expr>;</expr_stmt>



                <switch pos:start="327:17" pos:end="351:17">switch<condition pos:start="327:23" pos:end="327:45">(<expr pos:start="327:24" pos:end="327:44"><name pos:start="327:24" pos:end="327:44"><name pos:start="327:24" pos:end="327:25">st</name><operator pos:start="327:26" pos:end="327:27">-&gt;</operator><name pos:start="327:28" pos:end="327:32">codec</name><operator pos:start="327:33" pos:end="327:34">-&gt;</operator><name pos:start="327:35" pos:end="327:44">codec_type</name></name></expr>)</condition> <block pos:start="327:47" pos:end="351:17">{<block_content pos:start="329:17" pos:end="349:28">

                <case pos:start="329:17" pos:end="329:40">case <expr pos:start="329:22" pos:end="329:39"><name pos:start="329:22" pos:end="329:39">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                    <expr_stmt pos:start="331:21" pos:end="331:35"><expr pos:start="331:21" pos:end="331:34"><name pos:start="331:21" pos:end="331:24">type</name> <operator pos:start="331:26" pos:end="331:26">=</operator> <literal type="string" pos:start="331:28" pos:end="331:34">"audio"</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="333:21" pos:end="333:130"><expr pos:start="333:21" pos:end="333:129"><call pos:start="333:21" pos:end="333:129"><name pos:start="333:21" pos:end="333:28">snprintf</name><argument_list pos:start="333:29" pos:end="333:129">(<argument pos:start="333:30" pos:end="333:39"><expr pos:start="333:30" pos:end="333:39"><name pos:start="333:30" pos:end="333:39">parameters</name></expr></argument>, <argument pos:start="333:42" pos:end="333:59"><expr pos:start="333:42" pos:end="333:59"><sizeof pos:start="333:42" pos:end="333:59">sizeof<argument_list pos:start="333:48" pos:end="333:59">(<argument pos:start="333:49" pos:end="333:58"><expr pos:start="333:49" pos:end="333:58"><name pos:start="333:49" pos:end="333:58">parameters</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="333:62" pos:end="333:83"><expr pos:start="333:62" pos:end="333:83"><literal type="string" pos:start="333:62" pos:end="333:83">"%d channel(s), %d Hz"</literal></expr></argument>, <argument pos:start="333:86" pos:end="333:104"><expr pos:start="333:86" pos:end="333:104"><name pos:start="333:86" pos:end="333:104"><name pos:start="333:86" pos:end="333:87">st</name><operator pos:start="333:88" pos:end="333:89">-&gt;</operator><name pos:start="333:90" pos:end="333:94">codec</name><operator pos:start="333:95" pos:end="333:96">-&gt;</operator><name pos:start="333:97" pos:end="333:104">channels</name></name></expr></argument>, <argument pos:start="333:107" pos:end="333:128"><expr pos:start="333:107" pos:end="333:128"><name pos:start="333:107" pos:end="333:128"><name pos:start="333:107" pos:end="333:108">st</name><operator pos:start="333:109" pos:end="333:110">-&gt;</operator><name pos:start="333:111" pos:end="333:115">codec</name><operator pos:start="333:116" pos:end="333:117">-&gt;</operator><name pos:start="333:118" pos:end="333:128">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="335:21" pos:end="335:26">break;</break>

                <case pos:start="337:17" pos:end="337:40">case <expr pos:start="337:22" pos:end="337:39"><name pos:start="337:22" pos:end="337:39">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                    <expr_stmt pos:start="339:21" pos:end="339:35"><expr pos:start="339:21" pos:end="339:34"><name pos:start="339:21" pos:end="339:24">type</name> <operator pos:start="339:26" pos:end="339:26">=</operator> <literal type="string" pos:start="339:28" pos:end="339:34">"video"</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="341:21" pos:end="343:119"><expr pos:start="341:21" pos:end="343:118"><call pos:start="341:21" pos:end="343:118"><name pos:start="341:21" pos:end="341:28">snprintf</name><argument_list pos:start="341:29" pos:end="343:118">(<argument pos:start="341:30" pos:end="341:39"><expr pos:start="341:30" pos:end="341:39"><name pos:start="341:30" pos:end="341:39">parameters</name></expr></argument>, <argument pos:start="341:42" pos:end="341:59"><expr pos:start="341:42" pos:end="341:59"><sizeof pos:start="341:42" pos:end="341:59">sizeof<argument_list pos:start="341:48" pos:end="341:59">(<argument pos:start="341:49" pos:end="341:58"><expr pos:start="341:49" pos:end="341:58"><name pos:start="341:49" pos:end="341:58">parameters</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="341:62" pos:end="341:85"><expr pos:start="341:62" pos:end="341:85"><literal type="string" pos:start="341:62" pos:end="341:85">"%dx%d, q=%d-%d, fps=%d"</literal></expr></argument>, <argument pos:start="341:88" pos:end="341:103"><expr pos:start="341:88" pos:end="341:103"><name pos:start="341:88" pos:end="341:103"><name pos:start="341:88" pos:end="341:89">st</name><operator pos:start="341:90" pos:end="341:91">-&gt;</operator><name pos:start="341:92" pos:end="341:96">codec</name><operator pos:start="341:97" pos:end="341:98">-&gt;</operator><name pos:start="341:99" pos:end="341:103">width</name></name></expr></argument>, <argument pos:start="341:106" pos:end="341:122"><expr pos:start="341:106" pos:end="341:122"><name pos:start="341:106" pos:end="341:122"><name pos:start="341:106" pos:end="341:107">st</name><operator pos:start="341:108" pos:end="341:109">-&gt;</operator><name pos:start="341:110" pos:end="341:114">codec</name><operator pos:start="341:115" pos:end="341:116">-&gt;</operator><name pos:start="341:117" pos:end="341:122">height</name></name></expr></argument>,

                                <argument pos:start="343:33" pos:end="343:47"><expr pos:start="343:33" pos:end="343:47"><name pos:start="343:33" pos:end="343:47"><name pos:start="343:33" pos:end="343:34">st</name><operator pos:start="343:35" pos:end="343:36">-&gt;</operator><name pos:start="343:37" pos:end="343:41">codec</name><operator pos:start="343:42" pos:end="343:43">-&gt;</operator><name pos:start="343:44" pos:end="343:47">qmin</name></name></expr></argument>, <argument pos:start="343:50" pos:end="343:64"><expr pos:start="343:50" pos:end="343:64"><name pos:start="343:50" pos:end="343:64"><name pos:start="343:50" pos:end="343:51">st</name><operator pos:start="343:52" pos:end="343:53">-&gt;</operator><name pos:start="343:54" pos:end="343:58">codec</name><operator pos:start="343:59" pos:end="343:60">-&gt;</operator><name pos:start="343:61" pos:end="343:64">qmax</name></name></expr></argument>, <argument pos:start="343:67" pos:end="343:117"><expr pos:start="343:67" pos:end="343:117"><name pos:start="343:67" pos:end="343:90"><name pos:start="343:67" pos:end="343:68">st</name><operator pos:start="343:69" pos:end="343:70">-&gt;</operator><name pos:start="343:71" pos:end="343:75">codec</name><operator pos:start="343:76" pos:end="343:77">-&gt;</operator><name pos:start="343:78" pos:end="343:86">time_base</name><operator pos:start="343:87" pos:end="343:87">.</operator><name pos:start="343:88" pos:end="343:90">den</name></name> <operator pos:start="343:92" pos:end="343:92">/</operator> <name pos:start="343:94" pos:end="343:117"><name pos:start="343:94" pos:end="343:95">st</name><operator pos:start="343:96" pos:end="343:97">-&gt;</operator><name pos:start="343:98" pos:end="343:102">codec</name><operator pos:start="343:103" pos:end="343:104">-&gt;</operator><name pos:start="343:105" pos:end="343:113">time_base</name><operator pos:start="343:114" pos:end="343:114">.</operator><name pos:start="343:115" pos:end="343:117">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="345:21" pos:end="345:26">break;</break>

                <default pos:start="347:17" pos:end="347:24">default:</default>

                    <expr_stmt pos:start="349:21" pos:end="349:28"><expr pos:start="349:21" pos:end="349:27"><call pos:start="349:21" pos:end="349:27"><name pos:start="349:21" pos:end="349:25">abort</name><argument_list pos:start="349:26" pos:end="349:27">()</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></switch>

                <expr_stmt pos:start="353:17" pos:end="355:97"><expr pos:start="353:17" pos:end="355:96"><call pos:start="353:17" pos:end="355:96"><name pos:start="353:17" pos:end="353:27">avio_printf</name><argument_list pos:start="353:28" pos:end="355:96">(<argument pos:start="353:29" pos:end="353:30"><expr pos:start="353:29" pos:end="353:30"><name pos:start="353:29" pos:end="353:30">pb</name></expr></argument>, <argument pos:start="353:33" pos:end="353:94"><expr pos:start="353:33" pos:end="353:94"><literal type="string" pos:start="353:33" pos:end="353:94">"&lt;tr&gt;&lt;td align=right&gt;%d&lt;td&gt;%s&lt;td align=right&gt;%d&lt;td&gt;%s&lt;td&gt;%s\n"</literal></expr></argument>,

                        <argument pos:start="355:25" pos:end="355:25"><expr pos:start="355:25" pos:end="355:25"><name pos:start="355:25" pos:end="355:25">i</name></expr></argument>, <argument pos:start="355:28" pos:end="355:31"><expr pos:start="355:28" pos:end="355:31"><name pos:start="355:28" pos:end="355:31">type</name></expr></argument>, <argument pos:start="355:34" pos:end="355:57"><expr pos:start="355:34" pos:end="355:57"><name pos:start="355:34" pos:end="355:52"><name pos:start="355:34" pos:end="355:35">st</name><operator pos:start="355:36" pos:end="355:37">-&gt;</operator><name pos:start="355:38" pos:end="355:42">codec</name><operator pos:start="355:43" pos:end="355:44">-&gt;</operator><name pos:start="355:45" pos:end="355:52">bit_rate</name></name><operator pos:start="355:53" pos:end="355:53">/</operator><literal type="number" pos:start="355:54" pos:end="355:57">1000</literal></expr></argument>, <argument pos:start="355:60" pos:end="355:83"><expr pos:start="355:60" pos:end="355:83"><ternary pos:start="355:60" pos:end="355:83"><condition pos:start="355:60" pos:end="355:66"><expr pos:start="355:60" pos:end="355:64"><name pos:start="355:60" pos:end="355:64">codec</name></expr> ?</condition><then pos:start="355:68" pos:end="355:78"> <expr pos:start="355:68" pos:end="355:78"><name pos:start="355:68" pos:end="355:78"><name pos:start="355:68" pos:end="355:72">codec</name><operator pos:start="355:73" pos:end="355:74">-&gt;</operator><name pos:start="355:75" pos:end="355:78">name</name></name></expr> </then><else pos:start="355:80" pos:end="355:83">: <expr pos:start="355:82" pos:end="355:83"><literal type="string" pos:start="355:82" pos:end="355:83">""</literal></expr></else></ternary></expr></argument>, <argument pos:start="355:86" pos:end="355:95"><expr pos:start="355:86" pos:end="355:95"><name pos:start="355:86" pos:end="355:95">parameters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="359:13" pos:end="359:42"><expr pos:start="359:13" pos:end="359:41"><call pos:start="359:13" pos:end="359:41"><name pos:start="359:13" pos:end="359:23">avio_printf</name><argument_list pos:start="359:24" pos:end="359:41">(<argument pos:start="359:25" pos:end="359:26"><expr pos:start="359:25" pos:end="359:26"><name pos:start="359:25" pos:end="359:26">pb</name></expr></argument>, <argument pos:start="359:29" pos:end="359:40"><expr pos:start="359:29" pos:end="359:40"><literal type="string" pos:start="359:29" pos:end="359:40">"&lt;/table&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="365:9" pos:end="365:30"><expr pos:start="365:9" pos:end="365:29"><name pos:start="365:9" pos:end="365:14">stream</name> <operator pos:start="365:16" pos:end="365:16">=</operator> <name pos:start="365:18" pos:end="365:29"><name pos:start="365:18" pos:end="365:23">stream</name><operator pos:start="365:24" pos:end="365:25">-&gt;</operator><name pos:start="365:26" pos:end="365:29">next</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <comment type="block" pos:start="371:5" pos:end="371:27">/* connection status */</comment>

    <expr_stmt pos:start="373:5" pos:end="373:52"><expr pos:start="373:5" pos:end="373:51"><call pos:start="373:5" pos:end="373:51"><name pos:start="373:5" pos:end="373:15">avio_printf</name><argument_list pos:start="373:16" pos:end="373:51">(<argument pos:start="373:17" pos:end="373:18"><expr pos:start="373:17" pos:end="373:18"><name pos:start="373:17" pos:end="373:18">pb</name></expr></argument>, <argument pos:start="373:21" pos:end="373:50"><expr pos:start="373:21" pos:end="373:50"><literal type="string" pos:start="373:21" pos:end="373:50">"&lt;h2&gt;Connection Status&lt;/h2&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="377:5" pos:end="379:53"><expr pos:start="377:5" pos:end="379:52"><call pos:start="377:5" pos:end="379:52"><name pos:start="377:5" pos:end="377:15">avio_printf</name><argument_list pos:start="377:16" pos:end="379:52">(<argument pos:start="377:17" pos:end="377:18"><expr pos:start="377:17" pos:end="377:18"><name pos:start="377:17" pos:end="377:18">pb</name></expr></argument>, <argument pos:start="377:21" pos:end="377:58"><expr pos:start="377:21" pos:end="377:58"><literal type="string" pos:start="377:21" pos:end="377:58">"Number of connections: %d / %d&lt;br&gt;\n"</literal></expr></argument>,

                 <argument pos:start="379:18" pos:end="379:31"><expr pos:start="379:18" pos:end="379:31"><name pos:start="379:18" pos:end="379:31">nb_connections</name></expr></argument>, <argument pos:start="379:34" pos:end="379:51"><expr pos:start="379:34" pos:end="379:51"><name pos:start="379:34" pos:end="379:51">nb_max_connections</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="383:5" pos:end="385:51"><expr pos:start="383:5" pos:end="385:50"><call pos:start="383:5" pos:end="385:50"><name pos:start="383:5" pos:end="383:15">avio_printf</name><argument_list pos:start="383:16" pos:end="385:50">(<argument pos:start="383:17" pos:end="383:18"><expr pos:start="383:17" pos:end="383:18"><name pos:start="383:17" pos:end="383:18">pb</name></expr></argument>, <argument pos:start="383:21" pos:end="383:69"><expr pos:start="383:21" pos:end="383:69"><literal type="string" pos:start="383:21" pos:end="383:41">"Bandwidth in use: %"</literal><name pos:start="383:42" pos:end="383:47">PRIu64</name><literal type="string" pos:start="383:48" pos:end="383:54">"k / %"</literal><name pos:start="383:55" pos:end="383:60">PRIu64</name><literal type="string" pos:start="383:61" pos:end="383:69">"k&lt;br&gt;\n"</literal></expr></argument>,

                 <argument pos:start="385:18" pos:end="385:34"><expr pos:start="385:18" pos:end="385:34"><name pos:start="385:18" pos:end="385:34">current_bandwidth</name></expr></argument>, <argument pos:start="385:37" pos:end="385:49"><expr pos:start="385:37" pos:end="385:49"><name pos:start="385:37" pos:end="385:49">max_bandwidth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="389:5" pos:end="389:33"><expr pos:start="389:5" pos:end="389:32"><call pos:start="389:5" pos:end="389:32"><name pos:start="389:5" pos:end="389:15">avio_printf</name><argument_list pos:start="389:16" pos:end="389:32">(<argument pos:start="389:17" pos:end="389:18"><expr pos:start="389:17" pos:end="389:18"><name pos:start="389:17" pos:end="389:18">pb</name></expr></argument>, <argument pos:start="389:21" pos:end="389:31"><expr pos:start="389:21" pos:end="389:31"><literal type="string" pos:start="389:21" pos:end="389:31">"&lt;table&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="391:5" pos:end="391:126"><expr pos:start="391:5" pos:end="391:125"><call pos:start="391:5" pos:end="391:125"><name pos:start="391:5" pos:end="391:15">avio_printf</name><argument_list pos:start="391:16" pos:end="391:125">(<argument pos:start="391:17" pos:end="391:18"><expr pos:start="391:17" pos:end="391:18"><name pos:start="391:17" pos:end="391:18">pb</name></expr></argument>, <argument pos:start="391:21" pos:end="391:124"><expr pos:start="391:21" pos:end="391:124"><literal type="string" pos:start="391:21" pos:end="391:124">"&lt;tr&gt;&lt;th&gt;#&lt;th&gt;File&lt;th&gt;IP&lt;th&gt;Proto&lt;th&gt;State&lt;th&gt;Target bits/sec&lt;th&gt;Actual bits/sec&lt;th&gt;Bytes transferred\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="393:5" pos:end="393:24"><expr pos:start="393:5" pos:end="393:23"><name pos:start="393:5" pos:end="393:6">c1</name> <operator pos:start="393:8" pos:end="393:8">=</operator> <name pos:start="393:10" pos:end="393:23">first_http_ctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="395:5" pos:end="395:10"><expr pos:start="395:5" pos:end="395:9"><name pos:start="395:5" pos:end="395:5">i</name> <operator pos:start="395:7" pos:end="395:7">=</operator> <literal type="number" pos:start="395:9" pos:end="395:9">0</literal></expr>;</expr_stmt>

    <while pos:start="397:5" pos:end="457:5">while <condition pos:start="397:11" pos:end="397:22">(<expr pos:start="397:12" pos:end="397:21"><name pos:start="397:12" pos:end="397:13">c1</name> <operator pos:start="397:15" pos:end="397:16">!=</operator> <name pos:start="397:18" pos:end="397:21">NULL</name></expr>)</condition> <block pos:start="397:24" pos:end="457:5">{<block_content pos:start="399:9" pos:end="455:22">

        <decl_stmt pos:start="399:9" pos:end="399:20"><decl pos:start="399:9" pos:end="399:19"><type pos:start="399:9" pos:end="399:11"><name pos:start="399:9" pos:end="399:11">int</name></type> <name pos:start="399:13" pos:end="399:19">bitrate</name></decl>;</decl_stmt>

        <decl_stmt pos:start="401:9" pos:end="401:14"><decl pos:start="401:9" pos:end="401:13"><type pos:start="401:9" pos:end="401:11"><name pos:start="401:9" pos:end="401:11">int</name></type> <name pos:start="401:13" pos:end="401:13">j</name></decl>;</decl_stmt>



        <expr_stmt pos:start="405:9" pos:end="405:20"><expr pos:start="405:9" pos:end="405:19"><name pos:start="405:9" pos:end="405:15">bitrate</name> <operator pos:start="405:17" pos:end="405:17">=</operator> <literal type="number" pos:start="405:19" pos:end="405:19">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="407:9" pos:end="421:9"><if pos:start="407:9" pos:end="421:9">if <condition pos:start="407:12" pos:end="407:23">(<expr pos:start="407:13" pos:end="407:22"><name pos:start="407:13" pos:end="407:22"><name pos:start="407:13" pos:end="407:14">c1</name><operator pos:start="407:15" pos:end="407:16">-&gt;</operator><name pos:start="407:17" pos:end="407:22">stream</name></name></expr>)</condition> <block pos:start="407:25" pos:end="421:9">{<block_content pos:start="409:13" pos:end="419:13">

            <for pos:start="409:13" pos:end="419:13">for <control pos:start="409:17" pos:end="409:56">(<init pos:start="409:18" pos:end="409:23"><expr pos:start="409:18" pos:end="409:22"><name pos:start="409:18" pos:end="409:18">j</name> <operator pos:start="409:20" pos:end="409:20">=</operator> <literal type="number" pos:start="409:22" pos:end="409:22">0</literal></expr>;</init> <condition pos:start="409:25" pos:end="409:51"><expr pos:start="409:25" pos:end="409:50"><name pos:start="409:25" pos:end="409:25">j</name> <operator pos:start="409:27" pos:end="409:27">&lt;</operator> <name pos:start="409:29" pos:end="409:50"><name pos:start="409:29" pos:end="409:30">c1</name><operator pos:start="409:31" pos:end="409:32">-&gt;</operator><name pos:start="409:33" pos:end="409:38">stream</name><operator pos:start="409:39" pos:end="409:40">-&gt;</operator><name pos:start="409:41" pos:end="409:50">nb_streams</name></name></expr>;</condition> <incr pos:start="409:53" pos:end="409:55"><expr pos:start="409:53" pos:end="409:55"><name pos:start="409:53" pos:end="409:53">j</name><operator pos:start="409:54" pos:end="409:55">++</operator></expr></incr>)</control> <block pos:start="409:58" pos:end="419:13">{<block_content pos:start="411:17" pos:end="417:95">

                <if_stmt pos:start="411:17" pos:end="417:95"><if pos:start="411:17" pos:end="413:71">if <condition pos:start="411:20" pos:end="411:38">(<expr pos:start="411:21" pos:end="411:37"><operator pos:start="411:21" pos:end="411:21">!</operator><name pos:start="411:22" pos:end="411:37"><name pos:start="411:22" pos:end="411:23">c1</name><operator pos:start="411:24" pos:end="411:25">-&gt;</operator><name pos:start="411:26" pos:end="411:31">stream</name><operator pos:start="411:32" pos:end="411:33">-&gt;</operator><name pos:start="411:34" pos:end="411:37">feed</name></name></expr>)</condition><block type="pseudo" pos:start="413:21" pos:end="413:71"><block_content pos:start="413:21" pos:end="413:71">

                    <expr_stmt pos:start="413:21" pos:end="413:71"><expr pos:start="413:21" pos:end="413:70"><name pos:start="413:21" pos:end="413:27">bitrate</name> <operator pos:start="413:29" pos:end="413:30">+=</operator> <name pos:start="413:32" pos:end="413:53"><name pos:start="413:32" pos:end="413:33">c1</name><operator pos:start="413:34" pos:end="413:35">-&gt;</operator><name pos:start="413:36" pos:end="413:41">stream</name><operator pos:start="413:42" pos:end="413:43">-&gt;</operator><name pos:start="413:44" pos:end="413:50">streams</name><index pos:start="413:51" pos:end="413:53">[<expr pos:start="413:52" pos:end="413:52"><name pos:start="413:52" pos:end="413:52">j</name></expr>]</index></name><operator pos:start="413:54" pos:end="413:55">-&gt;</operator><name pos:start="413:56" pos:end="413:70"><name pos:start="413:56" pos:end="413:60">codec</name><operator pos:start="413:61" pos:end="413:62">-&gt;</operator><name pos:start="413:63" pos:end="413:70">bit_rate</name></name></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="415:17" pos:end="417:95">else if <condition pos:start="415:25" pos:end="415:50">(<expr pos:start="415:26" pos:end="415:49"><name pos:start="415:26" pos:end="415:44"><name pos:start="415:26" pos:end="415:27">c1</name><operator pos:start="415:28" pos:end="415:29">-&gt;</operator><name pos:start="415:30" pos:end="415:41">feed_streams</name><index pos:start="415:42" pos:end="415:44">[<expr pos:start="415:43" pos:end="415:43"><name pos:start="415:43" pos:end="415:43">j</name></expr>]</index></name> <operator pos:start="415:46" pos:end="415:47">&gt;=</operator> <literal type="number" pos:start="415:49" pos:end="415:49">0</literal></expr>)</condition><block type="pseudo" pos:start="417:21" pos:end="417:95"><block_content pos:start="417:21" pos:end="417:95">

                    <expr_stmt pos:start="417:21" pos:end="417:95"><expr pos:start="417:21" pos:end="417:94"><name pos:start="417:21" pos:end="417:27">bitrate</name> <operator pos:start="417:29" pos:end="417:30">+=</operator> <name pos:start="417:32" pos:end="417:77"><name pos:start="417:32" pos:end="417:33">c1</name><operator pos:start="417:34" pos:end="417:35">-&gt;</operator><name pos:start="417:36" pos:end="417:41">stream</name><operator pos:start="417:42" pos:end="417:43">-&gt;</operator><name pos:start="417:44" pos:end="417:47">feed</name><operator pos:start="417:48" pos:end="417:49">-&gt;</operator><name pos:start="417:50" pos:end="417:56">streams</name><index pos:start="417:57" pos:end="417:77">[<expr pos:start="417:58" pos:end="417:76"><name pos:start="417:58" pos:end="417:76"><name pos:start="417:58" pos:end="417:59">c1</name><operator pos:start="417:60" pos:end="417:61">-&gt;</operator><name pos:start="417:62" pos:end="417:73">feed_streams</name><index pos:start="417:74" pos:end="417:76">[<expr pos:start="417:75" pos:end="417:75"><name pos:start="417:75" pos:end="417:75">j</name></expr>]</index></name></expr>]</index></name><operator pos:start="417:78" pos:end="417:79">-&gt;</operator><name pos:start="417:80" pos:end="417:94"><name pos:start="417:80" pos:end="417:84">codec</name><operator pos:start="417:85" pos:end="417:86">-&gt;</operator><name pos:start="417:87" pos:end="417:94">bit_rate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="425:9" pos:end="425:12"><expr pos:start="425:9" pos:end="425:11"><name pos:start="425:9" pos:end="425:9">i</name><operator pos:start="425:10" pos:end="425:11">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="427:9" pos:end="427:46"><expr pos:start="427:9" pos:end="427:45"><name pos:start="427:9" pos:end="427:9">p</name> <operator pos:start="427:11" pos:end="427:11">=</operator> <call pos:start="427:13" pos:end="427:45"><name pos:start="427:13" pos:end="427:21">inet_ntoa</name><argument_list pos:start="427:22" pos:end="427:45">(<argument pos:start="427:23" pos:end="427:44"><expr pos:start="427:23" pos:end="427:44"><name pos:start="427:23" pos:end="427:44"><name pos:start="427:23" pos:end="427:24">c1</name><operator pos:start="427:25" pos:end="427:26">-&gt;</operator><name pos:start="427:27" pos:end="427:35">from_addr</name><operator pos:start="427:36" pos:end="427:36">.</operator><name pos:start="427:37" pos:end="427:44">sin_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="429:9" pos:end="441:43"><expr pos:start="429:9" pos:end="441:42"><call pos:start="429:9" pos:end="441:42"><name pos:start="429:9" pos:end="429:19">avio_printf</name><argument_list pos:start="429:20" pos:end="441:42">(<argument pos:start="429:21" pos:end="429:22"><expr pos:start="429:21" pos:end="429:22"><name pos:start="429:21" pos:end="429:22">pb</name></expr></argument>, <argument pos:start="429:25" pos:end="429:85"><expr pos:start="429:25" pos:end="429:85"><literal type="string" pos:start="429:25" pos:end="429:85">"&lt;tr&gt;&lt;td&gt;&lt;b&gt;%d&lt;/b&gt;&lt;td&gt;%s%s&lt;td&gt;%s&lt;td&gt;%s&lt;td&gt;%s&lt;td align=right&gt;"</literal></expr></argument>,

                    <argument pos:start="431:21" pos:end="431:21"><expr pos:start="431:21" pos:end="431:21"><name pos:start="431:21" pos:end="431:21">i</name></expr></argument>,

                    <argument pos:start="433:21" pos:end="433:58"><expr pos:start="433:21" pos:end="433:58"><ternary pos:start="433:21" pos:end="433:58"><condition pos:start="433:21" pos:end="433:32"><expr pos:start="433:21" pos:end="433:30"><name pos:start="433:21" pos:end="433:30"><name pos:start="433:21" pos:end="433:22">c1</name><operator pos:start="433:23" pos:end="433:24">-&gt;</operator><name pos:start="433:25" pos:end="433:30">stream</name></name></expr> ?</condition><then pos:start="433:34" pos:end="433:53"> <expr pos:start="433:34" pos:end="433:53"><name pos:start="433:34" pos:end="433:53"><name pos:start="433:34" pos:end="433:35">c1</name><operator pos:start="433:36" pos:end="433:37">-&gt;</operator><name pos:start="433:38" pos:end="433:43">stream</name><operator pos:start="433:44" pos:end="433:45">-&gt;</operator><name pos:start="433:46" pos:end="433:53">filename</name></name></expr> </then><else pos:start="433:55" pos:end="433:58">: <expr pos:start="433:57" pos:end="433:58"><literal type="string" pos:start="433:57" pos:end="433:58">""</literal></expr></else></ternary></expr></argument>,

                    <argument pos:start="435:21" pos:end="435:72"><expr pos:start="435:21" pos:end="435:72"><ternary pos:start="435:21" pos:end="435:72"><condition pos:start="435:21" pos:end="435:57"><expr pos:start="435:21" pos:end="435:55"><name pos:start="435:21" pos:end="435:29"><name pos:start="435:21" pos:end="435:22">c1</name><operator pos:start="435:23" pos:end="435:24">-&gt;</operator><name pos:start="435:25" pos:end="435:29">state</name></name> <operator pos:start="435:31" pos:end="435:32">==</operator> <name pos:start="435:34" pos:end="435:55">HTTPSTATE_RECEIVE_DATA</name></expr> ?</condition><then pos:start="435:59" pos:end="435:67"> <expr pos:start="435:59" pos:end="435:67"><literal type="string" pos:start="435:59" pos:end="435:67">"(input)"</literal></expr> </then><else pos:start="435:69" pos:end="435:72">: <expr pos:start="435:71" pos:end="435:72"><literal type="string" pos:start="435:71" pos:end="435:72">""</literal></expr></else></ternary></expr></argument>,

                    <argument pos:start="437:21" pos:end="437:21"><expr pos:start="437:21" pos:end="437:21"><name pos:start="437:21" pos:end="437:21">p</name></expr></argument>,

                    <argument pos:start="439:21" pos:end="439:32"><expr pos:start="439:21" pos:end="439:32"><name pos:start="439:21" pos:end="439:32"><name pos:start="439:21" pos:end="439:22">c1</name><operator pos:start="439:23" pos:end="439:24">-&gt;</operator><name pos:start="439:25" pos:end="439:32">protocol</name></name></expr></argument>,

                    <argument pos:start="441:21" pos:end="441:41"><expr pos:start="441:21" pos:end="441:41"><name pos:start="441:21" pos:end="441:41"><name pos:start="441:21" pos:end="441:30">http_state</name><index pos:start="441:31" pos:end="441:41">[<expr pos:start="441:32" pos:end="441:40"><name pos:start="441:32" pos:end="441:40"><name pos:start="441:32" pos:end="441:33">c1</name><operator pos:start="441:34" pos:end="441:35">-&gt;</operator><name pos:start="441:36" pos:end="441:40">state</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="443:9" pos:end="443:35"><expr pos:start="443:9" pos:end="443:34"><call pos:start="443:9" pos:end="443:34"><name pos:start="443:9" pos:end="443:21">fmt_bytecount</name><argument_list pos:start="443:22" pos:end="443:34">(<argument pos:start="443:23" pos:end="443:24"><expr pos:start="443:23" pos:end="443:24"><name pos:start="443:23" pos:end="443:24">pb</name></expr></argument>, <argument pos:start="443:27" pos:end="443:33"><expr pos:start="443:27" pos:end="443:33"><name pos:start="443:27" pos:end="443:33">bitrate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="445:9" pos:end="445:44"><expr pos:start="445:9" pos:end="445:43"><call pos:start="445:9" pos:end="445:43"><name pos:start="445:9" pos:end="445:19">avio_printf</name><argument_list pos:start="445:20" pos:end="445:43">(<argument pos:start="445:21" pos:end="445:22"><expr pos:start="445:21" pos:end="445:22"><name pos:start="445:21" pos:end="445:22">pb</name></expr></argument>, <argument pos:start="445:25" pos:end="445:42"><expr pos:start="445:25" pos:end="445:42"><literal type="string" pos:start="445:25" pos:end="445:42">"&lt;td align=right&gt;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="447:9" pos:end="447:79"><expr pos:start="447:9" pos:end="447:78"><call pos:start="447:9" pos:end="447:78"><name pos:start="447:9" pos:end="447:21">fmt_bytecount</name><argument_list pos:start="447:22" pos:end="447:78">(<argument pos:start="447:23" pos:end="447:24"><expr pos:start="447:23" pos:end="447:24"><name pos:start="447:23" pos:end="447:24">pb</name></expr></argument>, <argument pos:start="447:27" pos:end="447:77"><expr pos:start="447:27" pos:end="447:77"><call pos:start="447:27" pos:end="447:73"><name pos:start="447:27" pos:end="447:42">compute_datarate</name><argument_list pos:start="447:43" pos:end="447:73">(<argument pos:start="447:44" pos:end="447:56"><expr pos:start="447:44" pos:end="447:56"><operator pos:start="447:44" pos:end="447:44">&amp;</operator><name pos:start="447:45" pos:end="447:56"><name pos:start="447:45" pos:end="447:46">c1</name><operator pos:start="447:47" pos:end="447:48">-&gt;</operator><name pos:start="447:49" pos:end="447:56">datarate</name></name></expr></argument>, <argument pos:start="447:59" pos:end="447:72"><expr pos:start="447:59" pos:end="447:72"><name pos:start="447:59" pos:end="447:72"><name pos:start="447:59" pos:end="447:60">c1</name><operator pos:start="447:61" pos:end="447:62">-&gt;</operator><name pos:start="447:63" pos:end="447:72">data_count</name></name></expr></argument>)</argument_list></call> <operator pos:start="447:75" pos:end="447:75">*</operator> <literal type="number" pos:start="447:77" pos:end="447:77">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="449:9" pos:end="449:44"><expr pos:start="449:9" pos:end="449:43"><call pos:start="449:9" pos:end="449:43"><name pos:start="449:9" pos:end="449:19">avio_printf</name><argument_list pos:start="449:20" pos:end="449:43">(<argument pos:start="449:21" pos:end="449:22"><expr pos:start="449:21" pos:end="449:22"><name pos:start="449:21" pos:end="449:22">pb</name></expr></argument>, <argument pos:start="449:25" pos:end="449:42"><expr pos:start="449:25" pos:end="449:42"><literal type="string" pos:start="449:25" pos:end="449:42">"&lt;td align=right&gt;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="451:9" pos:end="451:42"><expr pos:start="451:9" pos:end="451:41"><call pos:start="451:9" pos:end="451:41"><name pos:start="451:9" pos:end="451:21">fmt_bytecount</name><argument_list pos:start="451:22" pos:end="451:41">(<argument pos:start="451:23" pos:end="451:24"><expr pos:start="451:23" pos:end="451:24"><name pos:start="451:23" pos:end="451:24">pb</name></expr></argument>, <argument pos:start="451:27" pos:end="451:40"><expr pos:start="451:27" pos:end="451:40"><name pos:start="451:27" pos:end="451:40"><name pos:start="451:27" pos:end="451:28">c1</name><operator pos:start="451:29" pos:end="451:30">-&gt;</operator><name pos:start="451:31" pos:end="451:40">data_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="453:9" pos:end="453:30"><expr pos:start="453:9" pos:end="453:29"><call pos:start="453:9" pos:end="453:29"><name pos:start="453:9" pos:end="453:19">avio_printf</name><argument_list pos:start="453:20" pos:end="453:29">(<argument pos:start="453:21" pos:end="453:22"><expr pos:start="453:21" pos:end="453:22"><name pos:start="453:21" pos:end="453:22">pb</name></expr></argument>, <argument pos:start="453:25" pos:end="453:28"><expr pos:start="453:25" pos:end="453:28"><literal type="string" pos:start="453:25" pos:end="453:28">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="455:9" pos:end="455:22"><expr pos:start="455:9" pos:end="455:21"><name pos:start="455:9" pos:end="455:10">c1</name> <operator pos:start="455:12" pos:end="455:12">=</operator> <name pos:start="455:14" pos:end="455:21"><name pos:start="455:14" pos:end="455:15">c1</name><operator pos:start="455:16" pos:end="455:17">-&gt;</operator><name pos:start="455:18" pos:end="455:21">next</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="459:5" pos:end="459:34"><expr pos:start="459:5" pos:end="459:33"><call pos:start="459:5" pos:end="459:33"><name pos:start="459:5" pos:end="459:15">avio_printf</name><argument_list pos:start="459:16" pos:end="459:33">(<argument pos:start="459:17" pos:end="459:18"><expr pos:start="459:17" pos:end="459:18"><name pos:start="459:17" pos:end="459:18">pb</name></expr></argument>, <argument pos:start="459:21" pos:end="459:32"><expr pos:start="459:21" pos:end="459:32"><literal type="string" pos:start="459:21" pos:end="459:32">"&lt;/table&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="463:5" pos:end="463:14">/* date */</comment>

    <expr_stmt pos:start="465:5" pos:end="465:20"><expr pos:start="465:5" pos:end="465:19"><name pos:start="465:5" pos:end="465:6">ti</name> <operator pos:start="465:8" pos:end="465:8">=</operator> <call pos:start="465:10" pos:end="465:19"><name pos:start="465:10" pos:end="465:13">time</name><argument_list pos:start="465:14" pos:end="465:19">(<argument pos:start="465:15" pos:end="465:18"><expr pos:start="465:15" pos:end="465:18"><name pos:start="465:15" pos:end="465:18">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="467:5" pos:end="467:19"><expr pos:start="467:5" pos:end="467:18"><name pos:start="467:5" pos:end="467:5">p</name> <operator pos:start="467:7" pos:end="467:7">=</operator> <call pos:start="467:9" pos:end="467:18"><name pos:start="467:9" pos:end="467:13">ctime</name><argument_list pos:start="467:14" pos:end="467:18">(<argument pos:start="467:15" pos:end="467:17"><expr pos:start="467:15" pos:end="467:17"><operator pos:start="467:15" pos:end="467:15">&amp;</operator><name pos:start="467:16" pos:end="467:17">ti</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="469:5" pos:end="469:61"><expr pos:start="469:5" pos:end="469:60"><call pos:start="469:5" pos:end="469:60"><name pos:start="469:5" pos:end="469:15">avio_printf</name><argument_list pos:start="469:16" pos:end="469:60">(<argument pos:start="469:17" pos:end="469:18"><expr pos:start="469:17" pos:end="469:18"><name pos:start="469:17" pos:end="469:18">pb</name></expr></argument>, <argument pos:start="469:21" pos:end="469:56"><expr pos:start="469:21" pos:end="469:56"><literal type="string" pos:start="469:21" pos:end="469:56">"&lt;hr size=1 noshade&gt;Generated at %s"</literal></expr></argument>, <argument pos:start="469:59" pos:end="469:59"><expr pos:start="469:59" pos:end="469:59"><name pos:start="469:59" pos:end="469:59">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="471:5" pos:end="471:42"><expr pos:start="471:5" pos:end="471:41"><call pos:start="471:5" pos:end="471:41"><name pos:start="471:5" pos:end="471:15">avio_printf</name><argument_list pos:start="471:16" pos:end="471:41">(<argument pos:start="471:17" pos:end="471:18"><expr pos:start="471:17" pos:end="471:18"><name pos:start="471:17" pos:end="471:18">pb</name></expr></argument>, <argument pos:start="471:21" pos:end="471:40"><expr pos:start="471:21" pos:end="471:40"><literal type="string" pos:start="471:21" pos:end="471:40">"&lt;/body&gt;\n&lt;/html&gt;\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="475:5" pos:end="475:48"><expr pos:start="475:5" pos:end="475:47"><name pos:start="475:5" pos:end="475:7">len</name> <operator pos:start="475:9" pos:end="475:9">=</operator> <call pos:start="475:11" pos:end="475:47"><name pos:start="475:11" pos:end="475:28">avio_close_dyn_buf</name><argument_list pos:start="475:29" pos:end="475:47">(<argument pos:start="475:30" pos:end="475:31"><expr pos:start="475:30" pos:end="475:31"><name pos:start="475:30" pos:end="475:31">pb</name></expr></argument>, <argument pos:start="475:34" pos:end="475:46"><expr pos:start="475:34" pos:end="475:46"><operator pos:start="475:34" pos:end="475:34">&amp;</operator><name pos:start="475:35" pos:end="475:46"><name pos:start="475:35" pos:end="475:35">c</name><operator pos:start="475:36" pos:end="475:37">-&gt;</operator><name pos:start="475:38" pos:end="475:46">pb_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="477:5" pos:end="477:33"><expr pos:start="477:5" pos:end="477:32"><name pos:start="477:5" pos:end="477:17"><name pos:start="477:5" pos:end="477:5">c</name><operator pos:start="477:6" pos:end="477:7">-&gt;</operator><name pos:start="477:8" pos:end="477:17">buffer_ptr</name></name> <operator pos:start="477:19" pos:end="477:19">=</operator> <name pos:start="477:21" pos:end="477:32"><name pos:start="477:21" pos:end="477:21">c</name><operator pos:start="477:22" pos:end="477:23">-&gt;</operator><name pos:start="477:24" pos:end="477:32">pb_buffer</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="479:5" pos:end="479:39"><expr pos:start="479:5" pos:end="479:38"><name pos:start="479:5" pos:end="479:17"><name pos:start="479:5" pos:end="479:5">c</name><operator pos:start="479:6" pos:end="479:7">-&gt;</operator><name pos:start="479:8" pos:end="479:17">buffer_end</name></name> <operator pos:start="479:19" pos:end="479:19">=</operator> <name pos:start="479:21" pos:end="479:32"><name pos:start="479:21" pos:end="479:21">c</name><operator pos:start="479:22" pos:end="479:23">-&gt;</operator><name pos:start="479:24" pos:end="479:32">pb_buffer</name></name> <operator pos:start="479:34" pos:end="479:34">+</operator> <name pos:start="479:36" pos:end="479:38">len</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
