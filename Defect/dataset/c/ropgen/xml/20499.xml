<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20499.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:14"><name pos:start="1:1" pos:end="1:12">CPUCRISState</name> <modifier pos:start="1:14" pos:end="1:14">*</modifier></type><name pos:start="1:15" pos:end="1:27">cpu_cris_init</name> <parameter_list pos:start="1:29" pos:end="1:51">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:41"><specifier pos:start="1:30" pos:end="1:34">const</specifier> <name pos:start="1:36" pos:end="1:39">char</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:50">cpu_model</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="153:1">{<block_content pos:start="5:9" pos:end="151:19">

	<decl_stmt pos:start="5:9" pos:end="5:26"><decl pos:start="5:9" pos:end="5:25"><type pos:start="5:9" pos:end="5:22"><name pos:start="5:9" pos:end="5:20">CPUCRISState</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:25">env</name></decl>;</decl_stmt>

	<decl_stmt pos:start="7:9" pos:end="7:39"><decl pos:start="7:9" pos:end="7:38"><type pos:start="7:9" pos:end="7:18"><specifier pos:start="7:9" pos:end="7:14">static</specifier> <name pos:start="7:16" pos:end="7:18">int</name></type> <name pos:start="7:20" pos:end="7:34">tcg_initialized</name> <init pos:start="7:36" pos:end="7:38">= <expr pos:start="7:38" pos:end="7:38"><literal type="number" pos:start="7:38" pos:end="7:38">0</literal></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="9:9" pos:end="9:14"><decl pos:start="9:9" pos:end="9:13"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:13">i</name></decl>;</decl_stmt>



	<expr_stmt pos:start="13:9" pos:end="13:49"><expr pos:start="13:9" pos:end="13:48"><name pos:start="13:9" pos:end="13:11">env</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:48"><name pos:start="13:15" pos:end="13:26">qemu_mallocz</name><argument_list pos:start="13:27" pos:end="13:48">(<argument pos:start="13:28" pos:end="13:47"><expr pos:start="13:28" pos:end="13:47"><sizeof pos:start="13:28" pos:end="13:47">sizeof<argument_list pos:start="13:34" pos:end="13:47">(<argument pos:start="13:35" pos:end="13:46"><expr pos:start="13:35" pos:end="13:46"><name pos:start="13:35" pos:end="13:46">CPUCRISState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="15:9" pos:end="17:28"><if pos:start="15:9" pos:end="17:28">if <condition pos:start="15:12" pos:end="15:17">(<expr pos:start="15:13" pos:end="15:16"><operator pos:start="15:13" pos:end="15:13">!</operator><name pos:start="15:14" pos:end="15:16">env</name></expr>)</condition><block type="pseudo" pos:start="17:17" pos:end="17:28"><block_content pos:start="17:17" pos:end="17:28">

		<return pos:start="17:17" pos:end="17:28">return <expr pos:start="17:24" pos:end="17:27"><name pos:start="17:24" pos:end="17:27">NULL</name></expr>;</return></block_content></block></if></if_stmt>



	<expr_stmt pos:start="21:9" pos:end="21:27"><expr pos:start="21:9" pos:end="21:26"><call pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:21">cpu_exec_init</name><argument_list pos:start="21:22" pos:end="21:26">(<argument pos:start="21:23" pos:end="21:25"><expr pos:start="21:23" pos:end="21:25"><name pos:start="21:23" pos:end="21:25">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="23:9" pos:end="23:23"><expr pos:start="23:9" pos:end="23:22"><call pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:17">cpu_reset</name><argument_list pos:start="23:18" pos:end="23:22">(<argument pos:start="23:19" pos:end="23:21"><expr pos:start="23:19" pos:end="23:21"><name pos:start="23:19" pos:end="23:21">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<if_stmt pos:start="27:9" pos:end="29:27"><if pos:start="27:9" pos:end="29:27">if <condition pos:start="27:12" pos:end="27:28">(<expr pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:27">tcg_initialized</name></expr>)</condition><block type="pseudo" pos:start="29:17" pos:end="29:27"><block_content pos:start="29:17" pos:end="29:27">

		<return pos:start="29:17" pos:end="29:27">return <expr pos:start="29:24" pos:end="29:26"><name pos:start="29:24" pos:end="29:26">env</name></expr>;</return></block_content></block></if></if_stmt>



	<expr_stmt pos:start="33:9" pos:end="33:28"><expr pos:start="33:9" pos:end="33:27"><name pos:start="33:9" pos:end="33:23">tcg_initialized</name> <operator pos:start="33:25" pos:end="33:25">=</operator> <literal type="number" pos:start="33:27" pos:end="33:27">1</literal></expr>;</expr_stmt>



	<expr_stmt pos:start="37:9" pos:end="37:69"><expr pos:start="37:9" pos:end="37:68"><name pos:start="37:9" pos:end="37:15">cpu_env</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="37:68"><name pos:start="37:19" pos:end="37:36">tcg_global_reg_new</name><argument_list pos:start="37:37" pos:end="37:68">(<argument pos:start="37:38" pos:end="37:49"><expr pos:start="37:38" pos:end="37:49"><name pos:start="37:38" pos:end="37:49">TCG_TYPE_PTR</name></expr></argument>, <argument pos:start="37:52" pos:end="37:60"><expr pos:start="37:52" pos:end="37:60"><name pos:start="37:52" pos:end="37:60">TCG_AREG0</name></expr></argument>, <argument pos:start="37:63" pos:end="37:67"><expr pos:start="37:63" pos:end="37:67"><literal type="string" pos:start="37:63" pos:end="37:67">"env"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="39:9" pos:end="41:68"><expr pos:start="39:9" pos:end="41:67"><name pos:start="39:9" pos:end="39:12">cc_x</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="41:67"><name pos:start="39:16" pos:end="39:33">tcg_global_mem_new</name><argument_list pos:start="39:34" pos:end="41:67">(<argument pos:start="39:35" pos:end="39:45"><expr pos:start="39:35" pos:end="39:45"><name pos:start="39:35" pos:end="39:45">TCG_TYPE_TL</name></expr></argument>, <argument pos:start="39:48" pos:end="39:56"><expr pos:start="39:48" pos:end="39:56"><name pos:start="39:48" pos:end="39:56">TCG_AREG0</name></expr></argument>,

				  <argument pos:start="41:35" pos:end="41:58"><expr pos:start="41:35" pos:end="41:58"><call pos:start="41:35" pos:end="41:58"><name pos:start="41:35" pos:end="41:42">offsetof</name><argument_list pos:start="41:43" pos:end="41:58">(<argument pos:start="41:44" pos:end="41:51"><expr pos:start="41:44" pos:end="41:51"><name pos:start="41:44" pos:end="41:51">CPUState</name></expr></argument>, <argument pos:start="41:54" pos:end="41:57"><expr pos:start="41:54" pos:end="41:57"><name pos:start="41:54" pos:end="41:57">cc_x</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:61" pos:end="41:66"><expr pos:start="41:61" pos:end="41:66"><literal type="string" pos:start="41:61" pos:end="41:66">"cc_x"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="43:9" pos:end="45:74"><expr pos:start="43:9" pos:end="45:73"><name pos:start="43:9" pos:end="43:14">cc_src</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <call pos:start="43:18" pos:end="45:73"><name pos:start="43:18" pos:end="43:35">tcg_global_mem_new</name><argument_list pos:start="43:36" pos:end="45:73">(<argument pos:start="43:37" pos:end="43:47"><expr pos:start="43:37" pos:end="43:47"><name pos:start="43:37" pos:end="43:47">TCG_TYPE_TL</name></expr></argument>, <argument pos:start="43:50" pos:end="43:58"><expr pos:start="43:50" pos:end="43:58"><name pos:start="43:50" pos:end="43:58">TCG_AREG0</name></expr></argument>,

				    <argument pos:start="45:37" pos:end="45:62"><expr pos:start="45:37" pos:end="45:62"><call pos:start="45:37" pos:end="45:62"><name pos:start="45:37" pos:end="45:44">offsetof</name><argument_list pos:start="45:45" pos:end="45:62">(<argument pos:start="45:46" pos:end="45:53"><expr pos:start="45:46" pos:end="45:53"><name pos:start="45:46" pos:end="45:53">CPUState</name></expr></argument>, <argument pos:start="45:56" pos:end="45:61"><expr pos:start="45:56" pos:end="45:61"><name pos:start="45:56" pos:end="45:61">cc_src</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="45:65" pos:end="45:72"><expr pos:start="45:65" pos:end="45:72"><literal type="string" pos:start="45:65" pos:end="45:72">"cc_src"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="47:9" pos:end="51:48"><expr pos:start="47:9" pos:end="51:47"><name pos:start="47:9" pos:end="47:15">cc_dest</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <call pos:start="47:19" pos:end="51:47"><name pos:start="47:19" pos:end="47:36">tcg_global_mem_new</name><argument_list pos:start="47:37" pos:end="51:47">(<argument pos:start="47:38" pos:end="47:48"><expr pos:start="47:38" pos:end="47:48"><name pos:start="47:38" pos:end="47:48">TCG_TYPE_TL</name></expr></argument>, <argument pos:start="47:51" pos:end="47:59"><expr pos:start="47:51" pos:end="47:59"><name pos:start="47:51" pos:end="47:59">TCG_AREG0</name></expr></argument>,

				     <argument pos:start="49:38" pos:end="49:64"><expr pos:start="49:38" pos:end="49:64"><call pos:start="49:38" pos:end="49:64"><name pos:start="49:38" pos:end="49:45">offsetof</name><argument_list pos:start="49:46" pos:end="49:64">(<argument pos:start="49:47" pos:end="49:54"><expr pos:start="49:47" pos:end="49:54"><name pos:start="49:47" pos:end="49:54">CPUState</name></expr></argument>, <argument pos:start="49:57" pos:end="49:63"><expr pos:start="49:57" pos:end="49:63"><name pos:start="49:57" pos:end="49:63">cc_dest</name></expr></argument>)</argument_list></call></expr></argument>,

				     <argument pos:start="51:38" pos:end="51:46"><expr pos:start="51:38" pos:end="51:46"><literal type="string" pos:start="51:38" pos:end="51:46">"cc_dest"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="53:9" pos:end="57:52"><expr pos:start="53:9" pos:end="57:51"><name pos:start="53:9" pos:end="53:17">cc_result</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <call pos:start="53:21" pos:end="57:51"><name pos:start="53:21" pos:end="53:38">tcg_global_mem_new</name><argument_list pos:start="53:39" pos:end="57:51">(<argument pos:start="53:40" pos:end="53:50"><expr pos:start="53:40" pos:end="53:50"><name pos:start="53:40" pos:end="53:50">TCG_TYPE_TL</name></expr></argument>, <argument pos:start="53:53" pos:end="53:61"><expr pos:start="53:53" pos:end="53:61"><name pos:start="53:53" pos:end="53:61">TCG_AREG0</name></expr></argument>,

				       <argument pos:start="55:40" pos:end="55:68"><expr pos:start="55:40" pos:end="55:68"><call pos:start="55:40" pos:end="55:68"><name pos:start="55:40" pos:end="55:47">offsetof</name><argument_list pos:start="55:48" pos:end="55:68">(<argument pos:start="55:49" pos:end="55:56"><expr pos:start="55:49" pos:end="55:56"><name pos:start="55:49" pos:end="55:56">CPUState</name></expr></argument>, <argument pos:start="55:59" pos:end="55:67"><expr pos:start="55:59" pos:end="55:67"><name pos:start="55:59" pos:end="55:67">cc_result</name></expr></argument>)</argument_list></call></expr></argument>,

				       <argument pos:start="57:40" pos:end="57:50"><expr pos:start="57:40" pos:end="57:50"><literal type="string" pos:start="57:40" pos:end="57:50">"cc_result"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="59:9" pos:end="61:71"><expr pos:start="59:9" pos:end="61:70"><name pos:start="59:9" pos:end="59:13">cc_op</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <call pos:start="59:17" pos:end="61:70"><name pos:start="59:17" pos:end="59:34">tcg_global_mem_new</name><argument_list pos:start="59:35" pos:end="61:70">(<argument pos:start="59:36" pos:end="59:46"><expr pos:start="59:36" pos:end="59:46"><name pos:start="59:36" pos:end="59:46">TCG_TYPE_TL</name></expr></argument>, <argument pos:start="59:49" pos:end="59:57"><expr pos:start="59:49" pos:end="59:57"><name pos:start="59:49" pos:end="59:57">TCG_AREG0</name></expr></argument>,

				   <argument pos:start="61:36" pos:end="61:60"><expr pos:start="61:36" pos:end="61:60"><call pos:start="61:36" pos:end="61:60"><name pos:start="61:36" pos:end="61:43">offsetof</name><argument_list pos:start="61:44" pos:end="61:60">(<argument pos:start="61:45" pos:end="61:52"><expr pos:start="61:45" pos:end="61:52"><name pos:start="61:45" pos:end="61:52">CPUState</name></expr></argument>, <argument pos:start="61:55" pos:end="61:59"><expr pos:start="61:55" pos:end="61:59"><name pos:start="61:55" pos:end="61:59">cc_op</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="61:63" pos:end="61:69"><expr pos:start="61:63" pos:end="61:69"><literal type="string" pos:start="61:63" pos:end="61:69">"cc_op"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="63:9" pos:end="67:48"><expr pos:start="63:9" pos:end="67:47"><name pos:start="63:9" pos:end="63:15">cc_size</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <call pos:start="63:19" pos:end="67:47"><name pos:start="63:19" pos:end="63:36">tcg_global_mem_new</name><argument_list pos:start="63:37" pos:end="67:47">(<argument pos:start="63:38" pos:end="63:48"><expr pos:start="63:38" pos:end="63:48"><name pos:start="63:38" pos:end="63:48">TCG_TYPE_TL</name></expr></argument>, <argument pos:start="63:51" pos:end="63:59"><expr pos:start="63:51" pos:end="63:59"><name pos:start="63:51" pos:end="63:59">TCG_AREG0</name></expr></argument>,

				     <argument pos:start="65:38" pos:end="65:64"><expr pos:start="65:38" pos:end="65:64"><call pos:start="65:38" pos:end="65:64"><name pos:start="65:38" pos:end="65:45">offsetof</name><argument_list pos:start="65:46" pos:end="65:64">(<argument pos:start="65:47" pos:end="65:54"><expr pos:start="65:47" pos:end="65:54"><name pos:start="65:47" pos:end="65:54">CPUState</name></expr></argument>, <argument pos:start="65:57" pos:end="65:63"><expr pos:start="65:57" pos:end="65:63"><name pos:start="65:57" pos:end="65:63">cc_size</name></expr></argument>)</argument_list></call></expr></argument>,

				     <argument pos:start="67:38" pos:end="67:46"><expr pos:start="67:38" pos:end="67:46"><literal type="string" pos:start="67:38" pos:end="67:46">"cc_size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="69:9" pos:end="73:48"><expr pos:start="69:9" pos:end="73:47"><name pos:start="69:9" pos:end="69:15">cc_mask</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <call pos:start="69:19" pos:end="73:47"><name pos:start="69:19" pos:end="69:36">tcg_global_mem_new</name><argument_list pos:start="69:37" pos:end="73:47">(<argument pos:start="69:38" pos:end="69:48"><expr pos:start="69:38" pos:end="69:48"><name pos:start="69:38" pos:end="69:48">TCG_TYPE_TL</name></expr></argument>, <argument pos:start="69:51" pos:end="69:59"><expr pos:start="69:51" pos:end="69:59"><name pos:start="69:51" pos:end="69:59">TCG_AREG0</name></expr></argument>,

				     <argument pos:start="71:38" pos:end="71:64"><expr pos:start="71:38" pos:end="71:64"><call pos:start="71:38" pos:end="71:64"><name pos:start="71:38" pos:end="71:45">offsetof</name><argument_list pos:start="71:46" pos:end="71:64">(<argument pos:start="71:47" pos:end="71:54"><expr pos:start="71:47" pos:end="71:54"><name pos:start="71:47" pos:end="71:54">CPUState</name></expr></argument>, <argument pos:start="71:57" pos:end="71:63"><expr pos:start="71:57" pos:end="71:63"><name pos:start="71:57" pos:end="71:63">cc_mask</name></expr></argument>)</argument_list></call></expr></argument>,

				     <argument pos:start="73:38" pos:end="73:46"><expr pos:start="73:38" pos:end="73:46"><literal type="string" pos:start="73:38" pos:end="73:46">"cc_mask"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<expr_stmt pos:start="77:9" pos:end="81:42"><expr pos:start="77:9" pos:end="81:41"><name pos:start="77:9" pos:end="77:14">env_pc</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <call pos:start="77:18" pos:end="81:41"><name pos:start="77:18" pos:end="77:35">tcg_global_mem_new</name><argument_list pos:start="77:36" pos:end="81:41">(<argument pos:start="77:37" pos:end="77:47"><expr pos:start="77:37" pos:end="77:47"><name pos:start="77:37" pos:end="77:47">TCG_TYPE_TL</name></expr></argument>, <argument pos:start="77:50" pos:end="77:58"><expr pos:start="77:50" pos:end="77:58"><name pos:start="77:50" pos:end="77:58">TCG_AREG0</name></expr></argument>, 

				    <argument pos:start="79:37" pos:end="79:58"><expr pos:start="79:37" pos:end="79:58"><call pos:start="79:37" pos:end="79:58"><name pos:start="79:37" pos:end="79:44">offsetof</name><argument_list pos:start="79:45" pos:end="79:58">(<argument pos:start="79:46" pos:end="79:53"><expr pos:start="79:46" pos:end="79:53"><name pos:start="79:46" pos:end="79:53">CPUState</name></expr></argument>, <argument pos:start="79:56" pos:end="79:57"><expr pos:start="79:56" pos:end="79:57"><name pos:start="79:56" pos:end="79:57">pc</name></expr></argument>)</argument_list></call></expr></argument>,

				    <argument pos:start="81:37" pos:end="81:40"><expr pos:start="81:37" pos:end="81:40"><literal type="string" pos:start="81:37" pos:end="81:40">"pc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="83:9" pos:end="87:52"><expr pos:start="83:9" pos:end="87:51"><name pos:start="83:9" pos:end="83:19">env_btarget</name> <operator pos:start="83:21" pos:end="83:21">=</operator> <call pos:start="83:23" pos:end="87:51"><name pos:start="83:23" pos:end="83:40">tcg_global_mem_new</name><argument_list pos:start="83:41" pos:end="87:51">(<argument pos:start="83:42" pos:end="83:52"><expr pos:start="83:42" pos:end="83:52"><name pos:start="83:42" pos:end="83:52">TCG_TYPE_TL</name></expr></argument>, <argument pos:start="83:55" pos:end="83:63"><expr pos:start="83:55" pos:end="83:63"><name pos:start="83:55" pos:end="83:63">TCG_AREG0</name></expr></argument>,

					 <argument pos:start="85:42" pos:end="85:68"><expr pos:start="85:42" pos:end="85:68"><call pos:start="85:42" pos:end="85:68"><name pos:start="85:42" pos:end="85:49">offsetof</name><argument_list pos:start="85:50" pos:end="85:68">(<argument pos:start="85:51" pos:end="85:58"><expr pos:start="85:51" pos:end="85:58"><name pos:start="85:51" pos:end="85:58">CPUState</name></expr></argument>, <argument pos:start="85:61" pos:end="85:67"><expr pos:start="85:61" pos:end="85:67"><name pos:start="85:61" pos:end="85:67">btarget</name></expr></argument>)</argument_list></call></expr></argument>,

					 <argument pos:start="87:42" pos:end="87:50"><expr pos:start="87:42" pos:end="87:50"><literal type="string" pos:start="87:42" pos:end="87:50">"btarget"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="89:9" pos:end="93:51"><expr pos:start="89:9" pos:end="93:50"><name pos:start="89:9" pos:end="89:18">env_btaken</name> <operator pos:start="89:20" pos:end="89:20">=</operator> <call pos:start="89:22" pos:end="93:50"><name pos:start="89:22" pos:end="89:39">tcg_global_mem_new</name><argument_list pos:start="89:40" pos:end="93:50">(<argument pos:start="89:41" pos:end="89:51"><expr pos:start="89:41" pos:end="89:51"><name pos:start="89:41" pos:end="89:51">TCG_TYPE_TL</name></expr></argument>, <argument pos:start="89:54" pos:end="89:62"><expr pos:start="89:54" pos:end="89:62"><name pos:start="89:54" pos:end="89:62">TCG_AREG0</name></expr></argument>,

					 <argument pos:start="91:42" pos:end="91:67"><expr pos:start="91:42" pos:end="91:67"><call pos:start="91:42" pos:end="91:67"><name pos:start="91:42" pos:end="91:49">offsetof</name><argument_list pos:start="91:50" pos:end="91:67">(<argument pos:start="91:51" pos:end="91:58"><expr pos:start="91:51" pos:end="91:58"><name pos:start="91:51" pos:end="91:58">CPUState</name></expr></argument>, <argument pos:start="91:61" pos:end="91:66"><expr pos:start="91:61" pos:end="91:66"><name pos:start="91:61" pos:end="91:66">btaken</name></expr></argument>)</argument_list></call></expr></argument>,

					 <argument pos:start="93:42" pos:end="93:49"><expr pos:start="93:42" pos:end="93:49"><literal type="string" pos:start="93:42" pos:end="93:49">"btaken"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<for pos:start="95:9" pos:end="103:9">for <control pos:start="95:13" pos:end="95:32">(<init pos:start="95:14" pos:end="95:19"><expr pos:start="95:14" pos:end="95:18"><name pos:start="95:14" pos:end="95:14">i</name> <operator pos:start="95:16" pos:end="95:16">=</operator> <literal type="number" pos:start="95:18" pos:end="95:18">0</literal></expr>;</init> <condition pos:start="95:21" pos:end="95:27"><expr pos:start="95:21" pos:end="95:26"><name pos:start="95:21" pos:end="95:21">i</name> <operator pos:start="95:23" pos:end="95:23">&lt;</operator> <literal type="number" pos:start="95:25" pos:end="95:26">16</literal></expr>;</condition> <incr pos:start="95:29" pos:end="95:31"><expr pos:start="95:29" pos:end="95:31"><name pos:start="95:29" pos:end="95:29">i</name><operator pos:start="95:30" pos:end="95:31">++</operator></expr></incr>)</control> <block pos:start="95:34" pos:end="103:9">{<block_content pos:start="97:17" pos:end="101:59">

		<expr_stmt pos:start="97:17" pos:end="101:59"><expr pos:start="97:17" pos:end="101:58"><name pos:start="97:17" pos:end="97:24"><name pos:start="97:17" pos:end="97:21">cpu_R</name><index pos:start="97:22" pos:end="97:24">[<expr pos:start="97:23" pos:end="97:23"><name pos:start="97:23" pos:end="97:23">i</name></expr>]</index></name> <operator pos:start="97:26" pos:end="97:26">=</operator> <call pos:start="97:28" pos:end="101:58"><name pos:start="97:28" pos:end="97:45">tcg_global_mem_new</name><argument_list pos:start="97:46" pos:end="101:58">(<argument pos:start="97:47" pos:end="97:57"><expr pos:start="97:47" pos:end="97:57"><name pos:start="97:47" pos:end="97:57">TCG_TYPE_TL</name></expr></argument>, <argument pos:start="97:60" pos:end="97:68"><expr pos:start="97:60" pos:end="97:68"><name pos:start="97:60" pos:end="97:68">TCG_AREG0</name></expr></argument>,

					      <argument pos:start="99:47" pos:end="99:73"><expr pos:start="99:47" pos:end="99:73"><call pos:start="99:47" pos:end="99:73"><name pos:start="99:47" pos:end="99:54">offsetof</name><argument_list pos:start="99:55" pos:end="99:73">(<argument pos:start="99:56" pos:end="99:63"><expr pos:start="99:56" pos:end="99:63"><name pos:start="99:56" pos:end="99:63">CPUState</name></expr></argument>, <argument pos:start="99:66" pos:end="99:72"><expr pos:start="99:66" pos:end="99:72"><name pos:start="99:66" pos:end="99:72"><name pos:start="99:66" pos:end="99:69">regs</name><index pos:start="99:70" pos:end="99:72">[<expr pos:start="99:71" pos:end="99:71"><name pos:start="99:71" pos:end="99:71">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

					      <argument pos:start="101:47" pos:end="101:57"><expr pos:start="101:47" pos:end="101:57"><name pos:start="101:47" pos:end="101:57"><name pos:start="101:47" pos:end="101:54">regnames</name><index pos:start="101:55" pos:end="101:57">[<expr pos:start="101:56" pos:end="101:56"><name pos:start="101:56" pos:end="101:56">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></for>

	<for pos:start="105:9" pos:end="113:9">for <control pos:start="105:13" pos:end="105:32">(<init pos:start="105:14" pos:end="105:19"><expr pos:start="105:14" pos:end="105:18"><name pos:start="105:14" pos:end="105:14">i</name> <operator pos:start="105:16" pos:end="105:16">=</operator> <literal type="number" pos:start="105:18" pos:end="105:18">0</literal></expr>;</init> <condition pos:start="105:21" pos:end="105:27"><expr pos:start="105:21" pos:end="105:26"><name pos:start="105:21" pos:end="105:21">i</name> <operator pos:start="105:23" pos:end="105:23">&lt;</operator> <literal type="number" pos:start="105:25" pos:end="105:26">16</literal></expr>;</condition> <incr pos:start="105:29" pos:end="105:31"><expr pos:start="105:29" pos:end="105:31"><name pos:start="105:29" pos:end="105:29">i</name><operator pos:start="105:30" pos:end="105:31">++</operator></expr></incr>)</control> <block pos:start="105:34" pos:end="113:9">{<block_content pos:start="107:17" pos:end="111:61">

		<expr_stmt pos:start="107:17" pos:end="111:61"><expr pos:start="107:17" pos:end="111:60"><name pos:start="107:17" pos:end="107:25"><name pos:start="107:17" pos:end="107:22">cpu_PR</name><index pos:start="107:23" pos:end="107:25">[<expr pos:start="107:24" pos:end="107:24"><name pos:start="107:24" pos:end="107:24">i</name></expr>]</index></name> <operator pos:start="107:27" pos:end="107:27">=</operator> <call pos:start="107:29" pos:end="111:60"><name pos:start="107:29" pos:end="107:46">tcg_global_mem_new</name><argument_list pos:start="107:47" pos:end="111:60">(<argument pos:start="107:48" pos:end="107:58"><expr pos:start="107:48" pos:end="107:58"><name pos:start="107:48" pos:end="107:58">TCG_TYPE_TL</name></expr></argument>, <argument pos:start="107:61" pos:end="107:69"><expr pos:start="107:61" pos:end="107:69"><name pos:start="107:61" pos:end="107:69">TCG_AREG0</name></expr></argument>,

					       <argument pos:start="109:48" pos:end="109:75"><expr pos:start="109:48" pos:end="109:75"><call pos:start="109:48" pos:end="109:75"><name pos:start="109:48" pos:end="109:55">offsetof</name><argument_list pos:start="109:56" pos:end="109:75">(<argument pos:start="109:57" pos:end="109:64"><expr pos:start="109:57" pos:end="109:64"><name pos:start="109:57" pos:end="109:64">CPUState</name></expr></argument>, <argument pos:start="109:67" pos:end="109:74"><expr pos:start="109:67" pos:end="109:74"><name pos:start="109:67" pos:end="109:74"><name pos:start="109:67" pos:end="109:71">pregs</name><index pos:start="109:72" pos:end="109:74">[<expr pos:start="109:73" pos:end="109:73"><name pos:start="109:73" pos:end="109:73">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

					       <argument pos:start="111:48" pos:end="111:59"><expr pos:start="111:48" pos:end="111:59"><name pos:start="111:48" pos:end="111:59"><name pos:start="111:48" pos:end="111:56">pregnames</name><index pos:start="111:57" pos:end="111:59">[<expr pos:start="111:58" pos:end="111:58"><name pos:start="111:58" pos:end="111:58">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></for>



	<expr_stmt pos:start="117:9" pos:end="117:43"><expr pos:start="117:9" pos:end="117:42"><call pos:start="117:9" pos:end="117:42"><name pos:start="117:9" pos:end="117:18">TCG_HELPER</name><argument_list pos:start="117:19" pos:end="117:42">(<argument pos:start="117:20" pos:end="117:41"><expr pos:start="117:20" pos:end="117:41"><name pos:start="117:20" pos:end="117:41">helper_raise_exception</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="119:9" pos:end="119:32"><expr pos:start="119:9" pos:end="119:31"><call pos:start="119:9" pos:end="119:31"><name pos:start="119:9" pos:end="119:18">TCG_HELPER</name><argument_list pos:start="119:19" pos:end="119:31">(<argument pos:start="119:20" pos:end="119:30"><expr pos:start="119:20" pos:end="119:30"><name pos:start="119:20" pos:end="119:30">helper_dump</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<expr_stmt pos:start="123:9" pos:end="123:41"><expr pos:start="123:9" pos:end="123:40"><call pos:start="123:9" pos:end="123:40"><name pos:start="123:9" pos:end="123:18">TCG_HELPER</name><argument_list pos:start="123:19" pos:end="123:40">(<argument pos:start="123:20" pos:end="123:39"><expr pos:start="123:20" pos:end="123:39"><name pos:start="123:20" pos:end="123:39">helper_tlb_flush_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="125:9" pos:end="125:41"><expr pos:start="125:9" pos:end="125:40"><call pos:start="125:9" pos:end="125:40"><name pos:start="125:9" pos:end="125:18">TCG_HELPER</name><argument_list pos:start="125:19" pos:end="125:40">(<argument pos:start="125:20" pos:end="125:39"><expr pos:start="125:20" pos:end="125:39"><name pos:start="125:20" pos:end="125:39">helper_movl_sreg_reg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="127:9" pos:end="127:41"><expr pos:start="127:9" pos:end="127:40"><call pos:start="127:9" pos:end="127:40"><name pos:start="127:9" pos:end="127:18">TCG_HELPER</name><argument_list pos:start="127:19" pos:end="127:40">(<argument pos:start="127:20" pos:end="127:39"><expr pos:start="127:20" pos:end="127:39"><name pos:start="127:20" pos:end="127:39">helper_movl_reg_sreg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="129:9" pos:end="129:31"><expr pos:start="129:9" pos:end="129:30"><call pos:start="129:9" pos:end="129:30"><name pos:start="129:9" pos:end="129:18">TCG_HELPER</name><argument_list pos:start="129:19" pos:end="129:30">(<argument pos:start="129:20" pos:end="129:29"><expr pos:start="129:20" pos:end="129:29"><name pos:start="129:20" pos:end="129:29">helper_rfe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="131:9" pos:end="131:31"><expr pos:start="131:9" pos:end="131:30"><call pos:start="131:9" pos:end="131:30"><name pos:start="131:9" pos:end="131:18">TCG_HELPER</name><argument_list pos:start="131:19" pos:end="131:30">(<argument pos:start="131:20" pos:end="131:29"><expr pos:start="131:20" pos:end="131:29"><name pos:start="131:20" pos:end="131:29">helper_rfn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<expr_stmt pos:start="135:9" pos:end="135:47"><expr pos:start="135:9" pos:end="135:46"><call pos:start="135:9" pos:end="135:46"><name pos:start="135:9" pos:end="135:18">TCG_HELPER</name><argument_list pos:start="135:19" pos:end="135:46">(<argument pos:start="135:20" pos:end="135:45"><expr pos:start="135:20" pos:end="135:45"><name pos:start="135:20" pos:end="135:45">helper_evaluate_flags_muls</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="137:9" pos:end="137:47"><expr pos:start="137:9" pos:end="137:46"><call pos:start="137:9" pos:end="137:46"><name pos:start="137:9" pos:end="137:18">TCG_HELPER</name><argument_list pos:start="137:19" pos:end="137:46">(<argument pos:start="137:20" pos:end="137:45"><expr pos:start="137:20" pos:end="137:45"><name pos:start="137:20" pos:end="137:45">helper_evaluate_flags_mulu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="139:9" pos:end="139:46"><expr pos:start="139:9" pos:end="139:45"><call pos:start="139:9" pos:end="139:45"><name pos:start="139:9" pos:end="139:18">TCG_HELPER</name><argument_list pos:start="139:19" pos:end="139:45">(<argument pos:start="139:20" pos:end="139:44"><expr pos:start="139:20" pos:end="139:44"><name pos:start="139:20" pos:end="139:44">helper_evaluate_flags_mcp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="141:9" pos:end="141:48"><expr pos:start="141:9" pos:end="141:47"><call pos:start="141:9" pos:end="141:47"><name pos:start="141:9" pos:end="141:18">TCG_HELPER</name><argument_list pos:start="141:19" pos:end="141:47">(<argument pos:start="141:20" pos:end="141:46"><expr pos:start="141:20" pos:end="141:46"><name pos:start="141:20" pos:end="141:46">helper_evaluate_flags_alu_4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="143:9" pos:end="143:49"><expr pos:start="143:9" pos:end="143:48"><call pos:start="143:9" pos:end="143:48"><name pos:start="143:9" pos:end="143:18">TCG_HELPER</name><argument_list pos:start="143:19" pos:end="143:48">(<argument pos:start="143:20" pos:end="143:47"><expr pos:start="143:20" pos:end="143:47"><name pos:start="143:20" pos:end="143:47">helper_evaluate_flags_move_4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="145:9" pos:end="145:49"><expr pos:start="145:9" pos:end="145:48"><call pos:start="145:9" pos:end="145:48"><name pos:start="145:9" pos:end="145:18">TCG_HELPER</name><argument_list pos:start="145:19" pos:end="145:48">(<argument pos:start="145:20" pos:end="145:47"><expr pos:start="145:20" pos:end="145:47"><name pos:start="145:20" pos:end="145:47">helper_evaluate_flags_move_2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="147:9" pos:end="147:42"><expr pos:start="147:9" pos:end="147:41"><call pos:start="147:9" pos:end="147:41"><name pos:start="147:9" pos:end="147:18">TCG_HELPER</name><argument_list pos:start="147:19" pos:end="147:41">(<argument pos:start="147:20" pos:end="147:40"><expr pos:start="147:20" pos:end="147:40"><name pos:start="147:20" pos:end="147:40">helper_evaluate_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="149:9" pos:end="149:46"><expr pos:start="149:9" pos:end="149:45"><call pos:start="149:9" pos:end="149:45"><name pos:start="149:9" pos:end="149:18">TCG_HELPER</name><argument_list pos:start="149:19" pos:end="149:45">(<argument pos:start="149:20" pos:end="149:44"><expr pos:start="149:20" pos:end="149:44"><name pos:start="149:20" pos:end="149:44">helper_top_evaluate_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="151:9" pos:end="151:19">return <expr pos:start="151:16" pos:end="151:18"><name pos:start="151:16" pos:end="151:18">env</name></expr>;</return>

</block_content>}</block></function>
</unit>
