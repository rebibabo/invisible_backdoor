<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24208.c" pos:tabs="8"><function pos:start="1:1" pos:end="331:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:13">bdrv_open</name><parameter_list pos:start="1:14" pos:end="3:31">(<parameter pos:start="1:15" pos:end="1:34"><decl pos:start="1:15" pos:end="1:34"><type pos:start="1:15" pos:end="1:34"><name pos:start="1:15" pos:end="1:30">BlockDriverState</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:34">bs</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:56"><decl pos:start="1:37" pos:end="1:56"><type pos:start="1:37" pos:end="1:56"><specifier pos:start="1:37" pos:end="1:41">const</specifier> <name pos:start="1:43" pos:end="1:46">char</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:56">filename</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:67"><decl pos:start="1:59" pos:end="1:67"><type pos:start="1:59" pos:end="1:67"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:67">flags</name></decl></parameter>,

              <parameter pos:start="3:15" pos:end="3:30"><decl pos:start="3:15" pos:end="3:30"><type pos:start="3:15" pos:end="3:30"><name pos:start="3:15" pos:end="3:25">BlockDriver</name> <modifier pos:start="3:27" pos:end="3:27">*</modifier></type><name pos:start="3:28" pos:end="3:30">drv</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="331:1">{<block_content pos:start="7:5" pos:end="329:15">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:23">open_flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:31"><name pos:start="9:10" pos:end="9:21">tmp_filename</name><index pos:start="9:22" pos:end="9:31">[<expr pos:start="9:23" pos:end="9:30"><name pos:start="9:23" pos:end="9:30">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:35"><name pos:start="11:10" pos:end="11:25">backing_filename</name><index pos:start="11:26" pos:end="11:35">[<expr pos:start="11:27" pos:end="11:34"><name pos:start="11:27" pos:end="11:34">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:25"><expr pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:6">bs</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:20">is_temporary</name></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <literal type="number" pos:start="15:24" pos:end="15:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:6">bs</name><operator pos:start="17:7" pos:end="17:8">-&gt;</operator><name pos:start="17:9" pos:end="17:17">encrypted</name></name> <operator pos:start="17:19" pos:end="17:19">=</operator> <literal type="number" pos:start="17:21" pos:end="17:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:22"><expr pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:6">bs</name><operator pos:start="19:7" pos:end="19:8">-&gt;</operator><name pos:start="19:9" pos:end="19:17">valid_key</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <literal type="number" pos:start="19:21" pos:end="19:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:6">bs</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:18">open_flags</name></name> <operator pos:start="21:20" pos:end="21:20">=</operator> <name pos:start="21:22" pos:end="21:26">flags</name></expr>;</expr_stmt>

    <comment type="block" pos:start="23:5" pos:end="23:74">/* buffer_alignment defaulted to 512, drivers can change this value */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:31"><expr pos:start="25:5" pos:end="25:30"><name pos:start="25:5" pos:end="25:24"><name pos:start="25:5" pos:end="25:6">bs</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:24">buffer_alignment</name></name> <operator pos:start="25:26" pos:end="25:26">=</operator> <literal type="number" pos:start="25:28" pos:end="25:30">512</literal></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="131:5"><if pos:start="29:5" pos:end="131:5">if <condition pos:start="29:8" pos:end="29:32">(<expr pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:13">flags</name> <operator pos:start="29:15" pos:end="29:15">&amp;</operator> <name pos:start="29:17" pos:end="29:31">BDRV_O_SNAPSHOT</name></expr>)</condition> <block pos:start="29:34" pos:end="131:5">{<block_content pos:start="31:9" pos:end="129:29">

        <decl_stmt pos:start="31:9" pos:end="31:30"><decl pos:start="31:9" pos:end="31:29"><type pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:24">BlockDriverState</name> <modifier pos:start="31:26" pos:end="31:26">*</modifier></type><name pos:start="31:27" pos:end="31:29">bs1</name></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:27"><decl pos:start="33:9" pos:end="33:26"><type pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:15">int64_t</name></type> <name pos:start="33:17" pos:end="33:26">total_size</name></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:28"><decl pos:start="35:9" pos:end="35:27"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:23">is_protocol</name> <init pos:start="35:25" pos:end="35:27">= <expr pos:start="35:27" pos:end="35:27"><literal type="number" pos:start="35:27" pos:end="35:27">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:32"><decl pos:start="37:9" pos:end="37:31"><type pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:19">BlockDriver</name> <modifier pos:start="37:21" pos:end="37:21">*</modifier></type><name pos:start="37:22" pos:end="37:31">bdrv_qcow2</name></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:37"><decl pos:start="39:9" pos:end="39:36"><type pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:27">QEMUOptionParameter</name> <modifier pos:start="39:29" pos:end="39:29">*</modifier></type><name pos:start="39:30" pos:end="39:36">options</name></decl>;</decl_stmt>



        <comment type="block" pos:start="43:9" pos:end="45:52">/* if snapshot, we create a temporary backing file and open it

           instead of opening 'filename' directly */</comment>



        <comment type="block" pos:start="49:9" pos:end="49:48">/* if there is a backing file, use it */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:27"><expr pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:11">bs1</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:26"><name pos:start="51:15" pos:end="51:22">bdrv_new</name><argument_list pos:start="51:23" pos:end="51:26">(<argument pos:start="51:24" pos:end="51:25"><expr pos:start="51:24" pos:end="51:25"><literal type="string" pos:start="51:24" pos:end="51:25">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:47"><expr pos:start="53:9" pos:end="53:46"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <call pos:start="53:15" pos:end="53:46"><name pos:start="53:15" pos:end="53:23">bdrv_open</name><argument_list pos:start="53:24" pos:end="53:46">(<argument pos:start="53:25" pos:end="53:27"><expr pos:start="53:25" pos:end="53:27"><name pos:start="53:25" pos:end="53:27">bs1</name></expr></argument>, <argument pos:start="53:30" pos:end="53:37"><expr pos:start="53:30" pos:end="53:37"><name pos:start="53:30" pos:end="53:37">filename</name></expr></argument>, <argument pos:start="53:40" pos:end="53:40"><expr pos:start="53:40" pos:end="53:40"><literal type="number" pos:start="53:40" pos:end="53:40">0</literal></expr></argument>, <argument pos:start="53:43" pos:end="53:45"><expr pos:start="53:43" pos:end="53:45"><name pos:start="53:43" pos:end="53:45">drv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="61:9"><if pos:start="55:9" pos:end="61:9">if <condition pos:start="55:12" pos:end="55:20">(<expr pos:start="55:13" pos:end="55:19"><name pos:start="55:13" pos:end="55:15">ret</name> <operator pos:start="55:17" pos:end="55:17">&lt;</operator> <literal type="number" pos:start="55:19" pos:end="55:19">0</literal></expr>)</condition> <block pos:start="55:22" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:23">

            <expr_stmt pos:start="57:13" pos:end="57:29"><expr pos:start="57:13" pos:end="57:28"><call pos:start="57:13" pos:end="57:28"><name pos:start="57:13" pos:end="57:23">bdrv_delete</name><argument_list pos:start="57:24" pos:end="57:28">(<argument pos:start="57:25" pos:end="57:27"><expr pos:start="57:25" pos:end="57:27"><name pos:start="57:25" pos:end="57:27">bs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="59:13" pos:end="59:23">return <expr pos:start="59:20" pos:end="59:22"><name pos:start="59:20" pos:end="59:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:61"><expr pos:start="63:9" pos:end="63:60"><name pos:start="63:9" pos:end="63:18">total_size</name> <operator pos:start="63:20" pos:end="63:20">=</operator> <call pos:start="63:22" pos:end="63:40"><name pos:start="63:22" pos:end="63:35">bdrv_getlength</name><argument_list pos:start="63:36" pos:end="63:40">(<argument pos:start="63:37" pos:end="63:39"><expr pos:start="63:37" pos:end="63:39"><name pos:start="63:37" pos:end="63:39">bs1</name></expr></argument>)</argument_list></call> <operator pos:start="63:42" pos:end="63:43">&gt;&gt;</operator> <name pos:start="63:45" pos:end="63:60">BDRV_SECTOR_BITS</name></expr>;</expr_stmt>



        <if_stmt pos:start="67:9" pos:end="69:28"><if pos:start="67:9" pos:end="69:28">if <condition pos:start="67:12" pos:end="67:48">(<expr pos:start="67:13" pos:end="67:47"><name pos:start="67:13" pos:end="67:20"><name pos:start="67:13" pos:end="67:15">bs1</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:20">drv</name></name> <operator pos:start="67:22" pos:end="67:23">&amp;&amp;</operator> <name pos:start="67:25" pos:end="67:47"><name pos:start="67:25" pos:end="67:27">bs1</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:32">drv</name><operator pos:start="67:33" pos:end="67:34">-&gt;</operator><name pos:start="67:35" pos:end="67:47">protocol_name</name></name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:28"><block_content pos:start="69:13" pos:end="69:28">

            <expr_stmt pos:start="69:13" pos:end="69:28"><expr pos:start="69:13" pos:end="69:27"><name pos:start="69:13" pos:end="69:23">is_protocol</name> <operator pos:start="69:25" pos:end="69:25">=</operator> <literal type="number" pos:start="69:27" pos:end="69:27">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:25"><expr pos:start="73:9" pos:end="73:24"><call pos:start="73:9" pos:end="73:24"><name pos:start="73:9" pos:end="73:19">bdrv_delete</name><argument_list pos:start="73:20" pos:end="73:24">(<argument pos:start="73:21" pos:end="73:23"><expr pos:start="73:21" pos:end="73:23"><name pos:start="73:21" pos:end="73:23">bs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:61"><expr pos:start="77:9" pos:end="77:60"><call pos:start="77:9" pos:end="77:60"><name pos:start="77:9" pos:end="77:24">get_tmp_filename</name><argument_list pos:start="77:25" pos:end="77:60">(<argument pos:start="77:26" pos:end="77:37"><expr pos:start="77:26" pos:end="77:37"><name pos:start="77:26" pos:end="77:37">tmp_filename</name></expr></argument>, <argument pos:start="77:40" pos:end="77:59"><expr pos:start="77:40" pos:end="77:59"><sizeof pos:start="77:40" pos:end="77:59">sizeof<argument_list pos:start="77:46" pos:end="77:59">(<argument pos:start="77:47" pos:end="77:58"><expr pos:start="77:47" pos:end="77:58"><name pos:start="77:47" pos:end="77:58">tmp_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="81:9" pos:end="81:52">/* Real path is meaningless for protocols */</comment>

        <if_stmt pos:start="83:9" pos:end="91:26"><if pos:start="83:9" pos:end="87:37">if <condition pos:start="83:12" pos:end="83:24">(<expr pos:start="83:13" pos:end="83:23"><name pos:start="83:13" pos:end="83:23">is_protocol</name></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="87:37"><block_content pos:start="85:13" pos:end="87:37">

            <expr_stmt pos:start="85:13" pos:end="87:37"><expr pos:start="85:13" pos:end="87:36"><call pos:start="85:13" pos:end="87:36"><name pos:start="85:13" pos:end="85:20">snprintf</name><argument_list pos:start="85:21" pos:end="87:36">(<argument pos:start="85:22" pos:end="85:37"><expr pos:start="85:22" pos:end="85:37"><name pos:start="85:22" pos:end="85:37">backing_filename</name></expr></argument>, <argument pos:start="85:40" pos:end="85:63"><expr pos:start="85:40" pos:end="85:63"><sizeof pos:start="85:40" pos:end="85:63">sizeof<argument_list pos:start="85:46" pos:end="85:63">(<argument pos:start="85:47" pos:end="85:62"><expr pos:start="85:47" pos:end="85:62"><name pos:start="85:47" pos:end="85:62">backing_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="87:22" pos:end="87:25"><expr pos:start="87:22" pos:end="87:25"><literal type="string" pos:start="87:22" pos:end="87:25">"%s"</literal></expr></argument>, <argument pos:start="87:28" pos:end="87:35"><expr pos:start="87:28" pos:end="87:35"><name pos:start="87:28" pos:end="87:35">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="89:9" pos:end="91:26">else if <condition pos:start="89:17" pos:end="89:55">(<expr pos:start="89:18" pos:end="89:54"><operator pos:start="89:18" pos:end="89:18">!</operator><call pos:start="89:19" pos:end="89:54"><name pos:start="89:19" pos:end="89:26">realpath</name><argument_list pos:start="89:27" pos:end="89:54">(<argument pos:start="89:28" pos:end="89:35"><expr pos:start="89:28" pos:end="89:35"><name pos:start="89:28" pos:end="89:35">filename</name></expr></argument>, <argument pos:start="89:38" pos:end="89:53"><expr pos:start="89:38" pos:end="89:53"><name pos:start="89:38" pos:end="89:53">backing_filename</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:26"><block_content pos:start="91:13" pos:end="91:26">

            <return pos:start="91:13" pos:end="91:26">return <expr pos:start="91:20" pos:end="91:25"><operator pos:start="91:20" pos:end="91:20">-</operator><name pos:start="91:21" pos:end="91:25">errno</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="95:9" pos:end="95:47"><expr pos:start="95:9" pos:end="95:46"><name pos:start="95:9" pos:end="95:18">bdrv_qcow2</name> <operator pos:start="95:20" pos:end="95:20">=</operator> <call pos:start="95:22" pos:end="95:46"><name pos:start="95:22" pos:end="95:37">bdrv_find_format</name><argument_list pos:start="95:38" pos:end="95:46">(<argument pos:start="95:39" pos:end="95:45"><expr pos:start="95:39" pos:end="95:45"><literal type="string" pos:start="95:39" pos:end="95:45">"qcow2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:80"><expr pos:start="97:9" pos:end="97:79"><name pos:start="97:9" pos:end="97:15">options</name> <operator pos:start="97:17" pos:end="97:17">=</operator> <call pos:start="97:19" pos:end="97:79"><name pos:start="97:19" pos:end="97:41">parse_option_parameters</name><argument_list pos:start="97:42" pos:end="97:79">(<argument pos:start="97:43" pos:end="97:44"><expr pos:start="97:43" pos:end="97:44"><literal type="string" pos:start="97:43" pos:end="97:44">""</literal></expr></argument>, <argument pos:start="97:47" pos:end="97:72"><expr pos:start="97:47" pos:end="97:72"><name pos:start="97:47" pos:end="97:72"><name pos:start="97:47" pos:end="97:56">bdrv_qcow2</name><operator pos:start="97:57" pos:end="97:58">-&gt;</operator><name pos:start="97:59" pos:end="97:72">create_options</name></name></expr></argument>, <argument pos:start="97:75" pos:end="97:78"><expr pos:start="97:75" pos:end="97:78"><name pos:start="97:75" pos:end="97:78">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="101:9" pos:end="101:76"><expr pos:start="101:9" pos:end="101:75"><call pos:start="101:9" pos:end="101:75"><name pos:start="101:9" pos:end="101:32">set_option_parameter_int</name><argument_list pos:start="101:33" pos:end="101:75">(<argument pos:start="101:34" pos:end="101:40"><expr pos:start="101:34" pos:end="101:40"><name pos:start="101:34" pos:end="101:40">options</name></expr></argument>, <argument pos:start="101:43" pos:end="101:56"><expr pos:start="101:43" pos:end="101:56"><name pos:start="101:43" pos:end="101:56">BLOCK_OPT_SIZE</name></expr></argument>, <argument pos:start="101:59" pos:end="101:74"><expr pos:start="101:59" pos:end="101:74"><name pos:start="101:59" pos:end="101:68">total_size</name> <operator pos:start="101:70" pos:end="101:70">*</operator> <literal type="number" pos:start="101:72" pos:end="101:74">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:80"><expr pos:start="103:9" pos:end="103:79"><call pos:start="103:9" pos:end="103:79"><name pos:start="103:9" pos:end="103:28">set_option_parameter</name><argument_list pos:start="103:29" pos:end="103:79">(<argument pos:start="103:30" pos:end="103:36"><expr pos:start="103:30" pos:end="103:36"><name pos:start="103:30" pos:end="103:36">options</name></expr></argument>, <argument pos:start="103:39" pos:end="103:60"><expr pos:start="103:39" pos:end="103:60"><name pos:start="103:39" pos:end="103:60">BLOCK_OPT_BACKING_FILE</name></expr></argument>, <argument pos:start="103:63" pos:end="103:78"><expr pos:start="103:63" pos:end="103:78"><name pos:start="103:63" pos:end="103:78">backing_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="105:9" pos:end="111:9"><if pos:start="105:9" pos:end="111:9">if <condition pos:start="105:12" pos:end="105:16">(<expr pos:start="105:13" pos:end="105:15"><name pos:start="105:13" pos:end="105:15">drv</name></expr>)</condition> <block pos:start="105:18" pos:end="111:9">{<block_content pos:start="107:13" pos:end="109:34">

            <expr_stmt pos:start="107:13" pos:end="109:34"><expr pos:start="107:13" pos:end="109:33"><call pos:start="107:13" pos:end="109:33"><name pos:start="107:13" pos:end="107:32">set_option_parameter</name><argument_list pos:start="107:33" pos:end="109:33">(<argument pos:start="107:34" pos:end="107:40"><expr pos:start="107:34" pos:end="107:40"><name pos:start="107:34" pos:end="107:40">options</name></expr></argument>, <argument pos:start="107:43" pos:end="107:63"><expr pos:start="107:43" pos:end="107:63"><name pos:start="107:43" pos:end="107:63">BLOCK_OPT_BACKING_FMT</name></expr></argument>,

                <argument pos:start="109:17" pos:end="109:32"><expr pos:start="109:17" pos:end="109:32"><name pos:start="109:17" pos:end="109:32"><name pos:start="109:17" pos:end="109:19">drv</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:32">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:61"><expr pos:start="115:9" pos:end="115:60"><name pos:start="115:9" pos:end="115:11">ret</name> <operator pos:start="115:13" pos:end="115:13">=</operator> <call pos:start="115:15" pos:end="115:60"><name pos:start="115:15" pos:end="115:25">bdrv_create</name><argument_list pos:start="115:26" pos:end="115:60">(<argument pos:start="115:27" pos:end="115:36"><expr pos:start="115:27" pos:end="115:36"><name pos:start="115:27" pos:end="115:36">bdrv_qcow2</name></expr></argument>, <argument pos:start="115:39" pos:end="115:50"><expr pos:start="115:39" pos:end="115:50"><name pos:start="115:39" pos:end="115:50">tmp_filename</name></expr></argument>, <argument pos:start="115:53" pos:end="115:59"><expr pos:start="115:53" pos:end="115:59"><name pos:start="115:53" pos:end="115:59">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="117:9" pos:end="121:9"><if pos:start="117:9" pos:end="121:9">if <condition pos:start="117:12" pos:end="117:20">(<expr pos:start="117:13" pos:end="117:19"><name pos:start="117:13" pos:end="117:15">ret</name> <operator pos:start="117:17" pos:end="117:17">&lt;</operator> <literal type="number" pos:start="117:19" pos:end="117:19">0</literal></expr>)</condition> <block pos:start="117:22" pos:end="121:9">{<block_content pos:start="119:13" pos:end="119:23">

            <return pos:start="119:13" pos:end="119:23">return <expr pos:start="119:20" pos:end="119:22"><name pos:start="119:20" pos:end="119:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="125:9" pos:end="125:32"><expr pos:start="125:9" pos:end="125:31"><name pos:start="125:9" pos:end="125:16">filename</name> <operator pos:start="125:18" pos:end="125:18">=</operator> <name pos:start="125:20" pos:end="125:31">tmp_filename</name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:25"><expr pos:start="127:9" pos:end="127:24"><name pos:start="127:9" pos:end="127:11">drv</name> <operator pos:start="127:13" pos:end="127:13">=</operator> <name pos:start="127:15" pos:end="127:24">bdrv_qcow2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:29"><expr pos:start="129:9" pos:end="129:28"><name pos:start="129:9" pos:end="129:24"><name pos:start="129:9" pos:end="129:10">bs</name><operator pos:start="129:11" pos:end="129:12">-&gt;</operator><name pos:start="129:13" pos:end="129:24">is_temporary</name></name> <operator pos:start="129:26" pos:end="129:26">=</operator> <literal type="number" pos:start="129:28" pos:end="129:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:58"><expr pos:start="135:5" pos:end="135:57"><call pos:start="135:5" pos:end="135:57"><name pos:start="135:5" pos:end="135:11">pstrcpy</name><argument_list pos:start="135:12" pos:end="135:57">(<argument pos:start="135:13" pos:end="135:24"><expr pos:start="135:13" pos:end="135:24"><name pos:start="135:13" pos:end="135:24"><name pos:start="135:13" pos:end="135:14">bs</name><operator pos:start="135:15" pos:end="135:16">-&gt;</operator><name pos:start="135:17" pos:end="135:24">filename</name></name></expr></argument>, <argument pos:start="135:27" pos:end="135:46"><expr pos:start="135:27" pos:end="135:46"><sizeof pos:start="135:27" pos:end="135:46">sizeof<argument_list pos:start="135:33" pos:end="135:46">(<argument pos:start="135:34" pos:end="135:45"><expr pos:start="135:34" pos:end="135:45"><name pos:start="135:34" pos:end="135:45"><name pos:start="135:34" pos:end="135:35">bs</name><operator pos:start="135:36" pos:end="135:37">-&gt;</operator><name pos:start="135:38" pos:end="135:45">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="135:49" pos:end="135:56"><expr pos:start="135:49" pos:end="135:56"><name pos:start="135:49" pos:end="135:56">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="139:5" pos:end="149:5"><if pos:start="139:5" pos:end="149:5">if <condition pos:start="139:8" pos:end="139:13">(<expr pos:start="139:9" pos:end="139:12"><operator pos:start="139:9" pos:end="139:9">!</operator><name pos:start="139:10" pos:end="139:12">drv</name></expr>)</condition> <block pos:start="139:15" pos:end="149:5">{<block_content pos:start="141:9" pos:end="147:9">

        <expr_stmt pos:start="141:9" pos:end="141:41"><expr pos:start="141:9" pos:end="141:40"><name pos:start="141:9" pos:end="141:11">drv</name> <operator pos:start="141:13" pos:end="141:13">=</operator> <call pos:start="141:15" pos:end="141:40"><name pos:start="141:15" pos:end="141:30">find_hdev_driver</name><argument_list pos:start="141:31" pos:end="141:40">(<argument pos:start="141:32" pos:end="141:39"><expr pos:start="141:32" pos:end="141:39"><name pos:start="141:32" pos:end="141:39">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="143:9" pos:end="147:9"><if pos:start="143:9" pos:end="147:9">if <condition pos:start="143:12" pos:end="143:17">(<expr pos:start="143:13" pos:end="143:16"><operator pos:start="143:13" pos:end="143:13">!</operator><name pos:start="143:14" pos:end="143:16">drv</name></expr>)</condition> <block pos:start="143:19" pos:end="147:9">{<block_content pos:start="145:13" pos:end="145:46">

            <expr_stmt pos:start="145:13" pos:end="145:46"><expr pos:start="145:13" pos:end="145:45"><name pos:start="145:13" pos:end="145:15">drv</name> <operator pos:start="145:17" pos:end="145:17">=</operator> <call pos:start="145:19" pos:end="145:45"><name pos:start="145:19" pos:end="145:35">find_image_format</name><argument_list pos:start="145:36" pos:end="145:45">(<argument pos:start="145:37" pos:end="145:44"><expr pos:start="145:37" pos:end="145:44"><name pos:start="145:37" pos:end="145:44">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="153:5" pos:end="159:5"><if pos:start="153:5" pos:end="159:5">if <condition pos:start="153:8" pos:end="153:13">(<expr pos:start="153:9" pos:end="153:12"><operator pos:start="153:9" pos:end="153:9">!</operator><name pos:start="153:10" pos:end="153:12">drv</name></expr>)</condition> <block pos:start="153:15" pos:end="159:5">{<block_content pos:start="155:9" pos:end="157:29">

        <expr_stmt pos:start="155:9" pos:end="155:22"><expr pos:start="155:9" pos:end="155:21"><name pos:start="155:9" pos:end="155:11">ret</name> <operator pos:start="155:13" pos:end="155:13">=</operator> <operator pos:start="155:15" pos:end="155:15">-</operator><name pos:start="155:16" pos:end="155:21">ENOENT</name></expr>;</expr_stmt>

        <goto pos:start="157:9" pos:end="157:29">goto <name pos:start="157:14" pos:end="157:28">unlink_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="161:5" pos:end="167:5"><if pos:start="161:5" pos:end="167:5">if <condition pos:start="161:8" pos:end="161:56">(<expr pos:start="161:9" pos:end="161:55"><name pos:start="161:9" pos:end="161:26">use_bdrv_whitelist</name> <operator pos:start="161:28" pos:end="161:29">&amp;&amp;</operator> <operator pos:start="161:31" pos:end="161:31">!</operator><call pos:start="161:32" pos:end="161:55"><name pos:start="161:32" pos:end="161:50">bdrv_is_whitelisted</name><argument_list pos:start="161:51" pos:end="161:55">(<argument pos:start="161:52" pos:end="161:54"><expr pos:start="161:52" pos:end="161:54"><name pos:start="161:52" pos:end="161:54">drv</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="161:58" pos:end="167:5">{<block_content pos:start="163:9" pos:end="165:29">

        <expr_stmt pos:start="163:9" pos:end="163:23"><expr pos:start="163:9" pos:end="163:22"><name pos:start="163:9" pos:end="163:11">ret</name> <operator pos:start="163:13" pos:end="163:13">=</operator> <operator pos:start="163:15" pos:end="163:15">-</operator><name pos:start="163:16" pos:end="163:22">ENOTSUP</name></expr>;</expr_stmt>

        <goto pos:start="165:9" pos:end="165:29">goto <name pos:start="165:14" pos:end="165:28">unlink_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="171:5" pos:end="171:18"><expr pos:start="171:5" pos:end="171:17"><name pos:start="171:5" pos:end="171:11"><name pos:start="171:5" pos:end="171:6">bs</name><operator pos:start="171:7" pos:end="171:8">-&gt;</operator><name pos:start="171:9" pos:end="171:11">drv</name></name> <operator pos:start="171:13" pos:end="171:13">=</operator> <name pos:start="171:15" pos:end="171:17">drv</name></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:50"><expr pos:start="173:5" pos:end="173:49"><name pos:start="173:5" pos:end="173:14"><name pos:start="173:5" pos:end="173:6">bs</name><operator pos:start="173:7" pos:end="173:8">-&gt;</operator><name pos:start="173:9" pos:end="173:14">opaque</name></name> <operator pos:start="173:16" pos:end="173:16">=</operator> <call pos:start="173:18" pos:end="173:49"><name pos:start="173:18" pos:end="173:29">qemu_mallocz</name><argument_list pos:start="173:30" pos:end="173:49">(<argument pos:start="173:31" pos:end="173:48"><expr pos:start="173:31" pos:end="173:48"><name pos:start="173:31" pos:end="173:48"><name pos:start="173:31" pos:end="173:33">drv</name><operator pos:start="173:34" pos:end="173:35">-&gt;</operator><name pos:start="173:36" pos:end="173:48">instance_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="177:5" pos:end="187:7">/*

     * Yes, BDRV_O_NOCACHE aka O_DIRECT means we have to present a

     * write cache to the guest.  We do need the fdatasync to flush

     * out transactions for block allocations, and we maybe have a

     * volatile write cache in our backing device to deal with.

     */</comment>

    <if_stmt pos:start="189:5" pos:end="191:35"><if pos:start="189:5" pos:end="191:35">if <condition pos:start="189:8" pos:end="189:49">(<expr pos:start="189:9" pos:end="189:48"><name pos:start="189:9" pos:end="189:13">flags</name> <operator pos:start="189:15" pos:end="189:15">&amp;</operator> <operator pos:start="189:17" pos:end="189:17">(</operator><name pos:start="189:18" pos:end="189:32">BDRV_O_CACHE_WB</name><operator pos:start="189:33" pos:end="189:33">|</operator><name pos:start="189:34" pos:end="189:47">BDRV_O_NOCACHE</name><operator pos:start="189:48" pos:end="189:48">)</operator></expr>)</condition><block type="pseudo" pos:start="191:9" pos:end="191:35"><block_content pos:start="191:9" pos:end="191:35">

        <expr_stmt pos:start="191:9" pos:end="191:35"><expr pos:start="191:9" pos:end="191:34"><name pos:start="191:9" pos:end="191:30"><name pos:start="191:9" pos:end="191:10">bs</name><operator pos:start="191:11" pos:end="191:12">-&gt;</operator><name pos:start="191:13" pos:end="191:30">enable_write_cache</name></name> <operator pos:start="191:32" pos:end="191:32">=</operator> <literal type="number" pos:start="191:34" pos:end="191:34">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="195:5" pos:end="201:7">/*

     * Clear flags that are internal to the block layer before opening the

     * image.

     */</comment>

    <expr_stmt pos:start="203:5" pos:end="203:64"><expr pos:start="203:5" pos:end="203:63"><name pos:start="203:5" pos:end="203:14">open_flags</name> <operator pos:start="203:16" pos:end="203:16">=</operator> <name pos:start="203:18" pos:end="203:22">flags</name> <operator pos:start="203:24" pos:end="203:24">&amp;</operator> <operator pos:start="203:26" pos:end="203:26">~</operator><operator pos:start="203:27" pos:end="203:27">(</operator><name pos:start="203:28" pos:end="203:42">BDRV_O_SNAPSHOT</name> <operator pos:start="203:44" pos:end="203:44">|</operator> <name pos:start="203:46" pos:end="203:62">BDRV_O_NO_BACKING</name><operator pos:start="203:63" pos:end="203:63">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="207:5" pos:end="211:7">/*

     * Snapshots should be writeable.

     */</comment>

    <if_stmt pos:start="213:5" pos:end="217:5"><if pos:start="213:5" pos:end="217:5">if <condition pos:start="213:8" pos:end="213:25">(<expr pos:start="213:9" pos:end="213:24"><name pos:start="213:9" pos:end="213:24"><name pos:start="213:9" pos:end="213:10">bs</name><operator pos:start="213:11" pos:end="213:12">-&gt;</operator><name pos:start="213:13" pos:end="213:24">is_temporary</name></name></expr>)</condition> <block pos:start="213:27" pos:end="217:5">{<block_content pos:start="215:9" pos:end="215:34">

        <expr_stmt pos:start="215:9" pos:end="215:34"><expr pos:start="215:9" pos:end="215:33"><name pos:start="215:9" pos:end="215:18">open_flags</name> <operator pos:start="215:20" pos:end="215:21">|=</operator> <name pos:start="215:23" pos:end="215:33">BDRV_O_RDWR</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="221:5" pos:end="221:51"><expr pos:start="221:5" pos:end="221:50"><name pos:start="221:5" pos:end="221:7">ret</name> <operator pos:start="221:9" pos:end="221:9">=</operator> <call pos:start="221:11" pos:end="221:50"><name pos:start="221:11" pos:end="221:24"><name pos:start="221:11" pos:end="221:13">drv</name><operator pos:start="221:14" pos:end="221:15">-&gt;</operator><name pos:start="221:16" pos:end="221:24">bdrv_open</name></name><argument_list pos:start="221:25" pos:end="221:50">(<argument pos:start="221:26" pos:end="221:27"><expr pos:start="221:26" pos:end="221:27"><name pos:start="221:26" pos:end="221:27">bs</name></expr></argument>, <argument pos:start="221:30" pos:end="221:37"><expr pos:start="221:30" pos:end="221:37"><name pos:start="221:30" pos:end="221:37">filename</name></expr></argument>, <argument pos:start="221:40" pos:end="221:49"><expr pos:start="221:40" pos:end="221:49"><name pos:start="221:40" pos:end="221:49">open_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="223:5" pos:end="227:5"><if pos:start="223:5" pos:end="227:5">if <condition pos:start="223:8" pos:end="223:16">(<expr pos:start="223:9" pos:end="223:15"><name pos:start="223:9" pos:end="223:11">ret</name> <operator pos:start="223:13" pos:end="223:13">&lt;</operator> <literal type="number" pos:start="223:15" pos:end="223:15">0</literal></expr>)</condition> <block pos:start="223:18" pos:end="227:5">{<block_content pos:start="225:9" pos:end="225:27">

        <goto pos:start="225:9" pos:end="225:27">goto <name pos:start="225:14" pos:end="225:26">free_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="231:5" pos:end="231:69"><expr pos:start="231:5" pos:end="231:68"><name pos:start="231:5" pos:end="231:22"><name pos:start="231:5" pos:end="231:6">bs</name><operator pos:start="231:7" pos:end="231:8">-&gt;</operator><name pos:start="231:9" pos:end="231:22">keep_read_only</name></name> <operator pos:start="231:24" pos:end="231:24">=</operator> <name pos:start="231:26" pos:end="231:38"><name pos:start="231:26" pos:end="231:27">bs</name><operator pos:start="231:28" pos:end="231:29">-&gt;</operator><name pos:start="231:30" pos:end="231:38">read_only</name></name> <operator pos:start="231:40" pos:end="231:40">=</operator> <operator pos:start="231:42" pos:end="231:42">!</operator><operator pos:start="231:43" pos:end="231:43">(</operator><name pos:start="231:44" pos:end="231:53">open_flags</name> <operator pos:start="231:55" pos:end="231:55">&amp;</operator> <name pos:start="231:57" pos:end="231:67">BDRV_O_RDWR</name><operator pos:start="231:68" pos:end="231:68">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="233:5" pos:end="240:0"><if pos:start="233:5" pos:end="240:0">if <condition pos:start="233:8" pos:end="233:28">(<expr pos:start="233:9" pos:end="233:27"><name pos:start="233:9" pos:end="233:27"><name pos:start="233:9" pos:end="233:11">drv</name><operator pos:start="233:12" pos:end="233:13">-&gt;</operator><name pos:start="233:14" pos:end="233:27">bdrv_getlength</name></name></expr>)</condition> <block pos:start="233:30" pos:end="240:0">{<block_content pos:start="235:9" pos:end="235:67">

        <expr_stmt pos:start="235:9" pos:end="235:67"><expr pos:start="235:9" pos:end="235:66"><name pos:start="235:9" pos:end="235:25"><name pos:start="235:9" pos:end="235:10">bs</name><operator pos:start="235:11" pos:end="235:12">-&gt;</operator><name pos:start="235:13" pos:end="235:25">total_sectors</name></name> <operator pos:start="235:27" pos:end="235:27">=</operator> <call pos:start="235:29" pos:end="235:46"><name pos:start="235:29" pos:end="235:42">bdrv_getlength</name><argument_list pos:start="235:43" pos:end="235:46">(<argument pos:start="235:44" pos:end="235:45"><expr pos:start="235:44" pos:end="235:45"><name pos:start="235:44" pos:end="235:45">bs</name></expr></argument>)</argument_list></call> <operator pos:start="235:48" pos:end="235:49">&gt;&gt;</operator> <name pos:start="235:51" pos:end="235:66">BDRV_SECTOR_BITS</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:ifndef pos:start="239:1" pos:end="239:14">#<cpp:directive pos:start="239:2" pos:end="239:7">ifndef</cpp:directive> <name pos:start="239:9" pos:end="239:14">_WIN32</name></cpp:ifndef>

    <if_stmt pos:start="241:5" pos:end="248:0"><if pos:start="241:5" pos:end="248:0">if <condition pos:start="241:8" pos:end="241:25">(<expr pos:start="241:9" pos:end="241:24"><name pos:start="241:9" pos:end="241:24"><name pos:start="241:9" pos:end="241:10">bs</name><operator pos:start="241:11" pos:end="241:12">-&gt;</operator><name pos:start="241:13" pos:end="241:24">is_temporary</name></name></expr>)</condition> <block pos:start="241:27" pos:end="248:0">{<block_content pos:start="243:9" pos:end="243:25">

        <expr_stmt pos:start="243:9" pos:end="243:25"><expr pos:start="243:9" pos:end="243:24"><call pos:start="243:9" pos:end="243:24"><name pos:start="243:9" pos:end="243:14">unlink</name><argument_list pos:start="243:15" pos:end="243:24">(<argument pos:start="243:16" pos:end="243:23"><expr pos:start="243:16" pos:end="243:23"><name pos:start="243:16" pos:end="243:23">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="247:1" pos:end="247:6">#<cpp:directive pos:start="247:2" pos:end="247:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="249:5" pos:end="295:5"><if pos:start="249:5" pos:end="295:5">if <condition pos:start="249:8" pos:end="249:72">(<expr pos:start="249:9" pos:end="249:71"><operator pos:start="249:9" pos:end="249:9">(</operator><name pos:start="249:10" pos:end="249:14">flags</name> <operator pos:start="249:16" pos:end="249:16">&amp;</operator> <name pos:start="249:18" pos:end="249:34">BDRV_O_NO_BACKING</name><operator pos:start="249:35" pos:end="249:35">)</operator> <operator pos:start="249:37" pos:end="249:38">==</operator> <literal type="number" pos:start="249:40" pos:end="249:40">0</literal> <operator pos:start="249:42" pos:end="249:43">&amp;&amp;</operator> <name pos:start="249:45" pos:end="249:63"><name pos:start="249:45" pos:end="249:46">bs</name><operator pos:start="249:47" pos:end="249:48">-&gt;</operator><name pos:start="249:49" pos:end="249:60">backing_file</name><index pos:start="249:61" pos:end="249:63">[<expr pos:start="249:62" pos:end="249:62"><literal type="number" pos:start="249:62" pos:end="249:62">0</literal></expr>]</index></name> <operator pos:start="249:65" pos:end="249:66">!=</operator> <literal type="char" pos:start="249:68" pos:end="249:71">'\0'</literal></expr>)</condition> <block pos:start="249:74" pos:end="295:5">{<block_content pos:start="253:9" pos:end="293:9">

        <comment type="block" pos:start="251:9" pos:end="251:48">/* if there is a backing file, use it */</comment>

        <decl_stmt pos:start="253:9" pos:end="253:37"><decl pos:start="253:9" pos:end="253:36"><type pos:start="253:9" pos:end="253:21"><name pos:start="253:9" pos:end="253:19">BlockDriver</name> <modifier pos:start="253:21" pos:end="253:21">*</modifier></type><name pos:start="253:22" pos:end="253:29">back_drv</name> <init pos:start="253:31" pos:end="253:36">= <expr pos:start="253:33" pos:end="253:36"><name pos:start="253:33" pos:end="253:36">NULL</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="255:9" pos:end="255:38"><expr pos:start="255:9" pos:end="255:37"><name pos:start="255:9" pos:end="255:22"><name pos:start="255:9" pos:end="255:10">bs</name><operator pos:start="255:11" pos:end="255:12">-&gt;</operator><name pos:start="255:13" pos:end="255:22">backing_hd</name></name> <operator pos:start="255:24" pos:end="255:24">=</operator> <call pos:start="255:26" pos:end="255:37"><name pos:start="255:26" pos:end="255:33">bdrv_new</name><argument_list pos:start="255:34" pos:end="255:37">(<argument pos:start="255:35" pos:end="255:36"><expr pos:start="255:35" pos:end="255:36"><literal type="string" pos:start="255:35" pos:end="255:36">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="257:9" pos:end="259:49"><expr pos:start="257:9" pos:end="259:48"><call pos:start="257:9" pos:end="259:48"><name pos:start="257:9" pos:end="257:20">path_combine</name><argument_list pos:start="257:21" pos:end="259:48">(<argument pos:start="257:22" pos:end="257:37"><expr pos:start="257:22" pos:end="257:37"><name pos:start="257:22" pos:end="257:37">backing_filename</name></expr></argument>, <argument pos:start="257:40" pos:end="257:63"><expr pos:start="257:40" pos:end="257:63"><sizeof pos:start="257:40" pos:end="257:63">sizeof<argument_list pos:start="257:46" pos:end="257:63">(<argument pos:start="257:47" pos:end="257:62"><expr pos:start="257:47" pos:end="257:62"><name pos:start="257:47" pos:end="257:62">backing_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="259:22" pos:end="259:29"><expr pos:start="259:22" pos:end="259:29"><name pos:start="259:22" pos:end="259:29">filename</name></expr></argument>, <argument pos:start="259:32" pos:end="259:47"><expr pos:start="259:32" pos:end="259:47"><name pos:start="259:32" pos:end="259:47"><name pos:start="259:32" pos:end="259:33">bs</name><operator pos:start="259:34" pos:end="259:35">-&gt;</operator><name pos:start="259:36" pos:end="259:47">backing_file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="261:9" pos:end="263:60"><if pos:start="261:9" pos:end="263:60">if <condition pos:start="261:12" pos:end="261:42">(<expr pos:start="261:13" pos:end="261:41"><name pos:start="261:13" pos:end="261:33"><name pos:start="261:13" pos:end="261:14">bs</name><operator pos:start="261:15" pos:end="261:16">-&gt;</operator><name pos:start="261:17" pos:end="261:30">backing_format</name><index pos:start="261:31" pos:end="261:33">[<expr pos:start="261:32" pos:end="261:32"><literal type="number" pos:start="261:32" pos:end="261:32">0</literal></expr>]</index></name> <operator pos:start="261:35" pos:end="261:36">!=</operator> <literal type="char" pos:start="261:38" pos:end="261:41">'\0'</literal></expr>)</condition><block type="pseudo" pos:start="263:13" pos:end="263:60"><block_content pos:start="263:13" pos:end="263:60">

            <expr_stmt pos:start="263:13" pos:end="263:60"><expr pos:start="263:13" pos:end="263:59"><name pos:start="263:13" pos:end="263:20">back_drv</name> <operator pos:start="263:22" pos:end="263:22">=</operator> <call pos:start="263:24" pos:end="263:59"><name pos:start="263:24" pos:end="263:39">bdrv_find_format</name><argument_list pos:start="263:40" pos:end="263:59">(<argument pos:start="263:41" pos:end="263:58"><expr pos:start="263:41" pos:end="263:58"><name pos:start="263:41" pos:end="263:58"><name pos:start="263:41" pos:end="263:42">bs</name><operator pos:start="263:43" pos:end="263:44">-&gt;</operator><name pos:start="263:45" pos:end="263:58">backing_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="267:9" pos:end="267:51">/* backing files always opened read-only */</comment>

        <expr_stmt pos:start="269:9" pos:end="269:35"><expr pos:start="269:9" pos:end="269:34"><name pos:start="269:9" pos:end="269:18">open_flags</name> <operator pos:start="269:20" pos:end="269:21">&amp;=</operator> <operator pos:start="269:23" pos:end="269:23">~</operator><name pos:start="269:24" pos:end="269:34">BDRV_O_RDWR</name></expr>;</expr_stmt>



        <expr_stmt pos:start="273:9" pos:end="273:80"><expr pos:start="273:9" pos:end="273:79"><name pos:start="273:9" pos:end="273:11">ret</name> <operator pos:start="273:13" pos:end="273:13">=</operator> <call pos:start="273:15" pos:end="273:79"><name pos:start="273:15" pos:end="273:23">bdrv_open</name><argument_list pos:start="273:24" pos:end="273:79">(<argument pos:start="273:25" pos:end="273:38"><expr pos:start="273:25" pos:end="273:38"><name pos:start="273:25" pos:end="273:38"><name pos:start="273:25" pos:end="273:26">bs</name><operator pos:start="273:27" pos:end="273:28">-&gt;</operator><name pos:start="273:29" pos:end="273:38">backing_hd</name></name></expr></argument>, <argument pos:start="273:41" pos:end="273:56"><expr pos:start="273:41" pos:end="273:56"><name pos:start="273:41" pos:end="273:56">backing_filename</name></expr></argument>, <argument pos:start="273:59" pos:end="273:68"><expr pos:start="273:59" pos:end="273:68"><name pos:start="273:59" pos:end="273:68">open_flags</name></expr></argument>, <argument pos:start="273:71" pos:end="273:78"><expr pos:start="273:71" pos:end="273:78"><name pos:start="273:71" pos:end="273:78">back_drv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="275:9" pos:end="281:9"><if pos:start="275:9" pos:end="281:9">if <condition pos:start="275:12" pos:end="275:20">(<expr pos:start="275:13" pos:end="275:19"><name pos:start="275:13" pos:end="275:15">ret</name> <operator pos:start="275:17" pos:end="275:17">&lt;</operator> <literal type="number" pos:start="275:19" pos:end="275:19">0</literal></expr>)</condition> <block pos:start="275:22" pos:end="281:9">{<block_content pos:start="277:13" pos:end="279:23">

            <expr_stmt pos:start="277:13" pos:end="277:27"><expr pos:start="277:13" pos:end="277:26"><call pos:start="277:13" pos:end="277:26"><name pos:start="277:13" pos:end="277:22">bdrv_close</name><argument_list pos:start="277:23" pos:end="277:26">(<argument pos:start="277:24" pos:end="277:25"><expr pos:start="277:24" pos:end="277:25"><name pos:start="277:24" pos:end="277:25">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="279:13" pos:end="279:23">return <expr pos:start="279:20" pos:end="279:22"><name pos:start="279:20" pos:end="279:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="283:9" pos:end="293:9"><if pos:start="283:9" pos:end="287:9">if <condition pos:start="283:12" pos:end="283:29">(<expr pos:start="283:13" pos:end="283:28"><name pos:start="283:13" pos:end="283:28"><name pos:start="283:13" pos:end="283:14">bs</name><operator pos:start="283:15" pos:end="283:16">-&gt;</operator><name pos:start="283:17" pos:end="283:28">is_temporary</name></name></expr>)</condition> <block pos:start="283:31" pos:end="287:9">{<block_content pos:start="285:13" pos:end="285:68">

            <expr_stmt pos:start="285:13" pos:end="285:68"><expr pos:start="285:13" pos:end="285:67"><name pos:start="285:13" pos:end="285:42"><name pos:start="285:13" pos:end="285:14">bs</name><operator pos:start="285:15" pos:end="285:16">-&gt;</operator><name pos:start="285:17" pos:end="285:26">backing_hd</name><operator pos:start="285:27" pos:end="285:28">-&gt;</operator><name pos:start="285:29" pos:end="285:42">keep_read_only</name></name> <operator pos:start="285:44" pos:end="285:44">=</operator> <operator pos:start="285:46" pos:end="285:46">!</operator><operator pos:start="285:47" pos:end="285:47">(</operator><name pos:start="285:48" pos:end="285:52">flags</name> <operator pos:start="285:54" pos:end="285:54">&amp;</operator> <name pos:start="285:56" pos:end="285:66">BDRV_O_RDWR</name><operator pos:start="285:67" pos:end="285:67">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="287:11" pos:end="293:9">else <block pos:start="287:16" pos:end="293:9">{<block_content pos:start="291:13" pos:end="291:64">

            <comment type="block" pos:start="289:13" pos:end="289:51">/* base image inherits from "parent" */</comment>

            <expr_stmt pos:start="291:13" pos:end="291:64"><expr pos:start="291:13" pos:end="291:63"><name pos:start="291:13" pos:end="291:42"><name pos:start="291:13" pos:end="291:14">bs</name><operator pos:start="291:15" pos:end="291:16">-&gt;</operator><name pos:start="291:17" pos:end="291:26">backing_hd</name><operator pos:start="291:27" pos:end="291:28">-&gt;</operator><name pos:start="291:29" pos:end="291:42">keep_read_only</name></name> <operator pos:start="291:44" pos:end="291:44">=</operator> <name pos:start="291:46" pos:end="291:63"><name pos:start="291:46" pos:end="291:47">bs</name><operator pos:start="291:48" pos:end="291:49">-&gt;</operator><name pos:start="291:50" pos:end="291:63">keep_read_only</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="299:5" pos:end="309:5"><if pos:start="299:5" pos:end="309:5">if <condition pos:start="299:8" pos:end="299:31">(<expr pos:start="299:9" pos:end="299:30"><operator pos:start="299:9" pos:end="299:9">!</operator><call pos:start="299:10" pos:end="299:30"><name pos:start="299:10" pos:end="299:26">bdrv_key_required</name><argument_list pos:start="299:27" pos:end="299:30">(<argument pos:start="299:28" pos:end="299:29"><expr pos:start="299:28" pos:end="299:29"><name pos:start="299:28" pos:end="299:29">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="299:33" pos:end="309:5">{<block_content pos:start="303:9" pos:end="307:45">

        <comment type="block" pos:start="301:9" pos:end="301:38">/* call the change callback */</comment>

        <expr_stmt pos:start="303:9" pos:end="303:30"><expr pos:start="303:9" pos:end="303:29"><name pos:start="303:9" pos:end="303:25"><name pos:start="303:9" pos:end="303:10">bs</name><operator pos:start="303:11" pos:end="303:12">-&gt;</operator><name pos:start="303:13" pos:end="303:25">media_changed</name></name> <operator pos:start="303:27" pos:end="303:27">=</operator> <literal type="number" pos:start="303:29" pos:end="303:29">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="305:9" pos:end="307:45"><if pos:start="305:9" pos:end="307:45">if <condition pos:start="305:12" pos:end="305:26">(<expr pos:start="305:13" pos:end="305:25"><name pos:start="305:13" pos:end="305:25"><name pos:start="305:13" pos:end="305:14">bs</name><operator pos:start="305:15" pos:end="305:16">-&gt;</operator><name pos:start="305:17" pos:end="305:25">change_cb</name></name></expr>)</condition><block type="pseudo" pos:start="307:13" pos:end="307:45"><block_content pos:start="307:13" pos:end="307:45">

            <expr_stmt pos:start="307:13" pos:end="307:45"><expr pos:start="307:13" pos:end="307:44"><call pos:start="307:13" pos:end="307:44"><name pos:start="307:13" pos:end="307:25"><name pos:start="307:13" pos:end="307:14">bs</name><operator pos:start="307:15" pos:end="307:16">-&gt;</operator><name pos:start="307:17" pos:end="307:25">change_cb</name></name><argument_list pos:start="307:26" pos:end="307:44">(<argument pos:start="307:27" pos:end="307:43"><expr pos:start="307:27" pos:end="307:43"><name pos:start="307:27" pos:end="307:43"><name pos:start="307:27" pos:end="307:28">bs</name><operator pos:start="307:29" pos:end="307:30">-&gt;</operator><name pos:start="307:31" pos:end="307:43">change_opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="311:5" pos:end="311:13">return <expr pos:start="311:12" pos:end="311:12"><literal type="number" pos:start="311:12" pos:end="311:12">0</literal></expr>;</return>



<label pos:start="315:1" pos:end="315:14"><name pos:start="315:1" pos:end="315:13">free_and_fail</name>:</label>

    <expr_stmt pos:start="317:5" pos:end="317:26"><expr pos:start="317:5" pos:end="317:25"><call pos:start="317:5" pos:end="317:25"><name pos:start="317:5" pos:end="317:13">qemu_free</name><argument_list pos:start="317:14" pos:end="317:25">(<argument pos:start="317:15" pos:end="317:24"><expr pos:start="317:15" pos:end="317:24"><name pos:start="317:15" pos:end="317:24"><name pos:start="317:15" pos:end="317:16">bs</name><operator pos:start="317:17" pos:end="317:18">-&gt;</operator><name pos:start="317:19" pos:end="317:24">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="319:5" pos:end="319:22"><expr pos:start="319:5" pos:end="319:21"><name pos:start="319:5" pos:end="319:14"><name pos:start="319:5" pos:end="319:6">bs</name><operator pos:start="319:7" pos:end="319:8">-&gt;</operator><name pos:start="319:9" pos:end="319:14">opaque</name></name> <operator pos:start="319:16" pos:end="319:16">=</operator> <name pos:start="319:18" pos:end="319:21">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="321:5" pos:end="321:19"><expr pos:start="321:5" pos:end="321:18"><name pos:start="321:5" pos:end="321:11"><name pos:start="321:5" pos:end="321:6">bs</name><operator pos:start="321:7" pos:end="321:8">-&gt;</operator><name pos:start="321:9" pos:end="321:11">drv</name></name> <operator pos:start="321:13" pos:end="321:13">=</operator> <name pos:start="321:15" pos:end="321:18">NULL</name></expr>;</expr_stmt>

<label pos:start="323:1" pos:end="323:16"><name pos:start="323:1" pos:end="323:15">unlink_and_fail</name>:</label>

    <if_stmt pos:start="325:5" pos:end="327:25"><if pos:start="325:5" pos:end="327:25">if <condition pos:start="325:8" pos:end="325:25">(<expr pos:start="325:9" pos:end="325:24"><name pos:start="325:9" pos:end="325:24"><name pos:start="325:9" pos:end="325:10">bs</name><operator pos:start="325:11" pos:end="325:12">-&gt;</operator><name pos:start="325:13" pos:end="325:24">is_temporary</name></name></expr>)</condition><block type="pseudo" pos:start="327:9" pos:end="327:25"><block_content pos:start="327:9" pos:end="327:25">

        <expr_stmt pos:start="327:9" pos:end="327:25"><expr pos:start="327:9" pos:end="327:24"><call pos:start="327:9" pos:end="327:24"><name pos:start="327:9" pos:end="327:14">unlink</name><argument_list pos:start="327:15" pos:end="327:24">(<argument pos:start="327:16" pos:end="327:23"><expr pos:start="327:16" pos:end="327:23"><name pos:start="327:16" pos:end="327:23">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="329:5" pos:end="329:15">return <expr pos:start="329:12" pos:end="329:14"><name pos:start="329:12" pos:end="329:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
