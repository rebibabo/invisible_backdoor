<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22621.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">flashsv_decode_block</name><parameter_list pos:start="1:32" pos:end="7:44">(<parameter pos:start="1:33" pos:end="1:53"><decl pos:start="1:33" pos:end="1:53"><type pos:start="1:33" pos:end="1:53"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">avctx</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:70"><decl pos:start="1:56" pos:end="1:70"><type pos:start="1:56" pos:end="1:70"><name pos:start="1:56" pos:end="1:63">AVPacket</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:70">avpkt</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:49"><decl pos:start="3:33" pos:end="3:49"><type pos:start="3:33" pos:end="3:49"><name pos:start="3:33" pos:end="3:45">GetBitContext</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:49">gb</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:65"><decl pos:start="3:52" pos:end="3:65"><type pos:start="3:52" pos:end="3:65"><name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:65">block_size</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:41"><decl pos:start="5:33" pos:end="5:41"><type pos:start="5:33" pos:end="5:41"><name pos:start="5:33" pos:end="5:35">int</name></type> <name pos:start="5:37" pos:end="5:41">width</name></decl></parameter>, <parameter pos:start="5:44" pos:end="5:53"><decl pos:start="5:44" pos:end="5:53"><type pos:start="5:44" pos:end="5:53"><name pos:start="5:44" pos:end="5:46">int</name></type> <name pos:start="5:48" pos:end="5:53">height</name></decl></parameter>, <parameter pos:start="5:56" pos:end="5:64"><decl pos:start="5:56" pos:end="5:64"><type pos:start="5:56" pos:end="5:64"><name pos:start="5:56" pos:end="5:58">int</name></type> <name pos:start="5:60" pos:end="5:64">x_pos</name></decl></parameter>, <parameter pos:start="5:67" pos:end="5:75"><decl pos:start="5:67" pos:end="5:75"><type pos:start="5:67" pos:end="5:75"><name pos:start="5:67" pos:end="5:69">int</name></type> <name pos:start="5:71" pos:end="5:75">y_pos</name></decl></parameter>,

                                <parameter pos:start="7:33" pos:end="7:43"><decl pos:start="7:33" pos:end="7:43"><type pos:start="7:33" pos:end="7:43"><name pos:start="7:33" pos:end="7:35">int</name></type> <name pos:start="7:37" pos:end="7:43">blk_idx</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="123:1">{<block_content pos:start="11:5" pos:end="121:13">

    <decl_stmt pos:start="11:5" pos:end="11:48"><decl pos:start="11:5" pos:end="11:47"><type pos:start="11:5" pos:end="11:27"><name pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:25">FlashSVContext</name></name> <modifier pos:start="11:27" pos:end="11:27">*</modifier></type><name pos:start="11:28" pos:end="11:28">s</name> <init pos:start="11:30" pos:end="11:47">= <expr pos:start="11:32" pos:end="11:47"><name pos:start="11:32" pos:end="11:47"><name pos:start="11:32" pos:end="11:36">avctx</name><operator pos:start="11:37" pos:end="11:38">-&gt;</operator><name pos:start="11:39" pos:end="11:47">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:17">line</name> <init pos:start="13:19" pos:end="13:31">= <expr pos:start="13:21" pos:end="13:31"><name pos:start="13:21" pos:end="13:31"><name pos:start="13:21" pos:end="13:21">s</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:31">tmpblock</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">k</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:40"><decl pos:start="17:5" pos:end="17:39"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name> <init pos:start="17:13" pos:end="17:39">= <expr pos:start="17:15" pos:end="17:39"><call pos:start="17:15" pos:end="17:39"><name pos:start="17:15" pos:end="17:26">inflateReset</name><argument_list pos:start="17:27" pos:end="17:39">(<argument pos:start="17:28" pos:end="17:38"><expr pos:start="17:28" pos:end="17:38"><operator pos:start="17:28" pos:end="17:28">&amp;</operator><name pos:start="17:29" pos:end="17:38"><name pos:start="17:29" pos:end="17:29">s</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:38">zstream</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:20">(<expr pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:14">!=</operator> <name pos:start="19:16" pos:end="19:19">Z_OK</name></expr>)</condition> <block pos:start="19:22" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:31">

        <expr_stmt pos:start="21:9" pos:end="21:70"><expr pos:start="21:9" pos:end="21:69"><call pos:start="21:9" pos:end="21:69"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:69">(<argument pos:start="21:16" pos:end="21:20"><expr pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:20">avctx</name></expr></argument>, <argument pos:start="21:23" pos:end="21:34"><expr pos:start="21:23" pos:end="21:34"><name pos:start="21:23" pos:end="21:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:37" pos:end="21:63"><expr pos:start="21:37" pos:end="21:63"><literal type="string" pos:start="21:37" pos:end="21:63">"Inflate reset error: %d\n"</literal></expr></argument>, <argument pos:start="21:66" pos:end="21:68"><expr pos:start="21:66" pos:end="21:68"><name pos:start="21:66" pos:end="21:68">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:30">AVERROR_UNKNOWN</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="39:5"><if pos:start="27:5" pos:end="39:5">if <condition pos:start="27:8" pos:end="27:47">(<expr pos:start="27:9" pos:end="27:46"><name pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:25">zlibprime_curr</name></name> <operator pos:start="27:27" pos:end="27:28">||</operator> <name pos:start="27:30" pos:end="27:46"><name pos:start="27:30" pos:end="27:30">s</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:46">zlibprime_prev</name></name></expr>)</condition> <block pos:start="27:49" pos:end="39:5">{<block_content pos:start="29:9" pos:end="37:23">

        <expr_stmt pos:start="29:9" pos:end="33:54"><expr pos:start="29:9" pos:end="33:53"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="33:53"><name pos:start="29:15" pos:end="29:28">flashsv2_prime</name><argument_list pos:start="29:29" pos:end="33:53">(<argument pos:start="29:30" pos:end="29:30"><expr pos:start="29:30" pos:end="29:30"><name pos:start="29:30" pos:end="29:30">s</name></expr></argument>,

                             <argument pos:start="31:30" pos:end="31:51"><expr pos:start="31:30" pos:end="31:51"><name pos:start="31:30" pos:end="31:47"><name pos:start="31:30" pos:end="31:30">s</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:38">blocks</name><index pos:start="31:39" pos:end="31:47">[<expr pos:start="31:40" pos:end="31:46"><name pos:start="31:40" pos:end="31:46">blk_idx</name></expr>]</index></name><operator pos:start="31:48" pos:end="31:48">.</operator><name pos:start="31:49" pos:end="31:51">pos</name></expr></argument>,

                             <argument pos:start="33:30" pos:end="33:52"><expr pos:start="33:30" pos:end="33:52"><name pos:start="33:30" pos:end="33:47"><name pos:start="33:30" pos:end="33:30">s</name><operator pos:start="33:31" pos:end="33:32">-&gt;</operator><name pos:start="33:33" pos:end="33:38">blocks</name><index pos:start="33:39" pos:end="33:47">[<expr pos:start="33:40" pos:end="33:46"><name pos:start="33:40" pos:end="33:46">blk_idx</name></expr>]</index></name><operator pos:start="33:48" pos:end="33:48">.</operator><name pos:start="33:49" pos:end="33:52">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="37:23"><if pos:start="35:9" pos:end="37:23">if <condition pos:start="35:12" pos:end="35:20">(<expr pos:start="35:13" pos:end="35:19"><name pos:start="35:13" pos:end="35:15">ret</name> <operator pos:start="35:17" pos:end="35:17">&lt;</operator> <literal type="number" pos:start="35:19" pos:end="35:19">0</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:23"><block_content pos:start="37:13" pos:end="37:23">

            <return pos:start="37:13" pos:end="37:23">return <expr pos:start="37:20" pos:end="37:22"><name pos:start="37:20" pos:end="37:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:64"><expr pos:start="41:5" pos:end="41:63"><name pos:start="41:5" pos:end="41:22"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:14">zstream</name><operator pos:start="41:15" pos:end="41:15">.</operator><name pos:start="41:16" pos:end="41:22">next_in</name></name>   <operator pos:start="41:26" pos:end="41:26">=</operator> <name pos:start="41:28" pos:end="41:38"><name pos:start="41:28" pos:end="41:32">avpkt</name><operator pos:start="41:33" pos:end="41:34">-&gt;</operator><name pos:start="41:35" pos:end="41:38">data</name></name> <operator pos:start="41:40" pos:end="41:40">+</operator> <call pos:start="41:42" pos:end="41:59"><name pos:start="41:42" pos:end="41:55">get_bits_count</name><argument_list pos:start="41:56" pos:end="41:59">(<argument pos:start="41:57" pos:end="41:58"><expr pos:start="41:57" pos:end="41:58"><name pos:start="41:57" pos:end="41:58">gb</name></expr></argument>)</argument_list></call> <operator pos:start="41:61" pos:end="41:61">/</operator> <literal type="number" pos:start="41:63" pos:end="41:63">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:38"><expr pos:start="43:5" pos:end="43:37"><name pos:start="43:5" pos:end="43:23"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:14">zstream</name><operator pos:start="43:15" pos:end="43:15">.</operator><name pos:start="43:16" pos:end="43:23">avail_in</name></name>  <operator pos:start="43:26" pos:end="43:26">=</operator> <name pos:start="43:28" pos:end="43:37">block_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:39"><expr pos:start="45:5" pos:end="45:38"><name pos:start="45:5" pos:end="45:23"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:14">zstream</name><operator pos:start="45:15" pos:end="45:15">.</operator><name pos:start="45:16" pos:end="45:23">next_out</name></name>  <operator pos:start="45:26" pos:end="45:26">=</operator> <name pos:start="45:28" pos:end="45:38"><name pos:start="45:28" pos:end="45:28">s</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:38">tmpblock</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:45"><expr pos:start="47:5" pos:end="47:44"><name pos:start="47:5" pos:end="47:24"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:14">zstream</name><operator pos:start="47:15" pos:end="47:15">.</operator><name pos:start="47:16" pos:end="47:24">avail_out</name></name> <operator pos:start="47:26" pos:end="47:26">=</operator> <name pos:start="47:28" pos:end="47:40"><name pos:start="47:28" pos:end="47:28">s</name><operator pos:start="47:29" pos:end="47:30">-&gt;</operator><name pos:start="47:31" pos:end="47:40">block_size</name></name> <operator pos:start="47:42" pos:end="47:42">*</operator> <literal type="number" pos:start="47:44" pos:end="47:44">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:41"><expr pos:start="49:5" pos:end="49:40"><name pos:start="49:5" pos:end="49:7">ret</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <call pos:start="49:11" pos:end="49:40"><name pos:start="49:11" pos:end="49:17">inflate</name><argument_list pos:start="49:18" pos:end="49:40">(<argument pos:start="49:19" pos:end="49:29"><expr pos:start="49:19" pos:end="49:29"><operator pos:start="49:19" pos:end="49:19">&amp;</operator><name pos:start="49:20" pos:end="49:29"><name pos:start="49:20" pos:end="49:20">s</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:29">zstream</name></name></expr></argument>, <argument pos:start="49:32" pos:end="49:39"><expr pos:start="49:32" pos:end="49:39"><name pos:start="49:32" pos:end="49:39">Z_FINISH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="51:28">(<expr pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:14">==</operator> <name pos:start="51:16" pos:end="51:27">Z_DATA_ERROR</name></expr>)</condition> <block pos:start="51:30" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:45">

        <expr_stmt pos:start="53:9" pos:end="53:62"><expr pos:start="53:9" pos:end="53:61"><call pos:start="53:9" pos:end="53:61"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="53:61">(<argument pos:start="53:16" pos:end="53:20"><expr pos:start="53:16" pos:end="53:20"><name pos:start="53:16" pos:end="53:20">avctx</name></expr></argument>, <argument pos:start="53:23" pos:end="53:34"><expr pos:start="53:23" pos:end="53:34"><name pos:start="53:23" pos:end="53:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:37" pos:end="53:60"><expr pos:start="53:37" pos:end="53:60"><literal type="string" pos:start="53:37" pos:end="53:60">"Zlib resync occurred\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:33"><expr pos:start="55:9" pos:end="55:32"><call pos:start="55:9" pos:end="55:32"><name pos:start="55:9" pos:end="55:19">inflateSync</name><argument_list pos:start="55:20" pos:end="55:32">(<argument pos:start="55:21" pos:end="55:31"><expr pos:start="55:21" pos:end="55:31"><operator pos:start="55:21" pos:end="55:21">&amp;</operator><name pos:start="55:22" pos:end="55:31"><name pos:start="55:22" pos:end="55:22">s</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:31">zstream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:45"><expr pos:start="57:9" pos:end="57:44"><name pos:start="57:9" pos:end="57:11">ret</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <call pos:start="57:15" pos:end="57:44"><name pos:start="57:15" pos:end="57:21">inflate</name><argument_list pos:start="57:22" pos:end="57:44">(<argument pos:start="57:23" pos:end="57:33"><expr pos:start="57:23" pos:end="57:33"><operator pos:start="57:23" pos:end="57:23">&amp;</operator><name pos:start="57:24" pos:end="57:33"><name pos:start="57:24" pos:end="57:24">s</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:33">zstream</name></name></expr></argument>, <argument pos:start="57:36" pos:end="57:43"><expr pos:start="57:36" pos:end="57:43"><name pos:start="57:36" pos:end="57:43">Z_FINISH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if <condition pos:start="63:8" pos:end="63:43">(<expr pos:start="63:9" pos:end="63:42"><name pos:start="63:9" pos:end="63:11">ret</name> <operator pos:start="63:13" pos:end="63:14">!=</operator> <name pos:start="63:16" pos:end="63:19">Z_OK</name> <operator pos:start="63:21" pos:end="63:22">&amp;&amp;</operator> <name pos:start="63:24" pos:end="63:26">ret</name> <operator pos:start="63:28" pos:end="63:29">!=</operator> <name pos:start="63:31" pos:end="63:42">Z_STREAM_END</name></expr>)</condition> <block pos:start="63:45" pos:end="67:5">{<block_content>

        <comment type="line" pos:start="65:9" pos:end="65:20">//return -1;</comment>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:23">(<expr pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:22">is_keyframe</name></name></expr>)</condition> <block pos:start="71:25" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:45">

        <expr_stmt pos:start="73:9" pos:end="73:77"><expr pos:start="73:9" pos:end="73:76"><name pos:start="73:9" pos:end="73:26"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:17">blocks</name><index pos:start="73:18" pos:end="73:26">[<expr pos:start="73:19" pos:end="73:25"><name pos:start="73:19" pos:end="73:25">blk_idx</name></expr>]</index></name><operator pos:start="73:27" pos:end="73:27">.</operator><name pos:start="73:28" pos:end="73:30">pos</name>  <operator pos:start="73:33" pos:end="73:33">=</operator> <name pos:start="73:35" pos:end="73:49"><name pos:start="73:35" pos:end="73:35">s</name><operator pos:start="73:36" pos:end="73:37">-&gt;</operator><name pos:start="73:38" pos:end="73:49">keyframedata</name></name> <operator pos:start="73:51" pos:end="73:51">+</operator> <operator pos:start="73:53" pos:end="73:53">(</operator><call pos:start="73:54" pos:end="73:71"><name pos:start="73:54" pos:end="73:67">get_bits_count</name><argument_list pos:start="73:68" pos:end="73:71">(<argument pos:start="73:69" pos:end="73:70"><expr pos:start="73:69" pos:end="73:70"><name pos:start="73:69" pos:end="73:70">gb</name></expr></argument>)</argument_list></call> <operator pos:start="73:73" pos:end="73:73">/</operator> <literal type="number" pos:start="73:75" pos:end="73:75">8</literal><operator pos:start="73:76" pos:end="73:76">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:45"><expr pos:start="75:9" pos:end="75:44"><name pos:start="75:9" pos:end="75:26"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:17">blocks</name><index pos:start="75:18" pos:end="75:26">[<expr pos:start="75:19" pos:end="75:25"><name pos:start="75:19" pos:end="75:25">blk_idx</name></expr>]</index></name><operator pos:start="75:27" pos:end="75:27">.</operator><name pos:start="75:28" pos:end="75:31">size</name> <operator pos:start="75:33" pos:end="75:33">=</operator> <name pos:start="75:35" pos:end="75:44">block_size</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:27"><expr pos:start="81:5" pos:end="81:26"><name pos:start="81:5" pos:end="81:9">y_pos</name> <operator pos:start="81:11" pos:end="81:12">+=</operator> <name pos:start="81:14" pos:end="81:26"><name pos:start="81:14" pos:end="81:14">s</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:26">diff_start</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="85:5" pos:end="117:5"><if pos:start="85:5" pos:end="105:5">if <condition pos:start="85:8" pos:end="85:24">(<expr pos:start="85:9" pos:end="85:23"><operator pos:start="85:9" pos:end="85:9">!</operator><name pos:start="85:10" pos:end="85:23"><name pos:start="85:10" pos:end="85:10">s</name><operator pos:start="85:11" pos:end="85:12">-&gt;</operator><name pos:start="85:13" pos:end="85:23">color_depth</name></name></expr>)</condition> <block pos:start="85:26" pos:end="105:5">{<block_content pos:start="91:9" pos:end="103:9">

        <comment type="block" pos:start="87:9" pos:end="89:52">/* Flash Screen Video stores the image upside down, so copy

         * lines to destination in reverse order. */</comment>

        <for pos:start="91:9" pos:end="103:9">for <control pos:start="91:13" pos:end="91:45">(<init pos:start="91:14" pos:end="91:19"><expr pos:start="91:14" pos:end="91:18"><name pos:start="91:14" pos:end="91:14">k</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <literal type="number" pos:start="91:18" pos:end="91:18">1</literal></expr>;</init> <condition pos:start="91:21" pos:end="91:40"><expr pos:start="91:21" pos:end="91:39"><name pos:start="91:21" pos:end="91:21">k</name> <operator pos:start="91:23" pos:end="91:24">&lt;=</operator> <name pos:start="91:26" pos:end="91:39"><name pos:start="91:26" pos:end="91:26">s</name><operator pos:start="91:27" pos:end="91:28">-&gt;</operator><name pos:start="91:29" pos:end="91:39">diff_height</name></name></expr>;</condition> <incr pos:start="91:42" pos:end="91:44"><expr pos:start="91:42" pos:end="91:44"><name pos:start="91:42" pos:end="91:42">k</name><operator pos:start="91:43" pos:end="91:44">++</operator></expr></incr>)</control> <block pos:start="91:47" pos:end="103:9">{<block_content pos:start="93:13" pos:end="101:30">

            <expr_stmt pos:start="93:13" pos:end="97:36"><expr pos:start="93:13" pos:end="97:35"><call pos:start="93:13" pos:end="97:35"><name pos:start="93:13" pos:end="93:18">memcpy</name><argument_list pos:start="93:19" pos:end="97:35">(<argument pos:start="93:20" pos:end="95:72"><expr pos:start="93:20" pos:end="95:72"><name pos:start="93:20" pos:end="93:36"><name pos:start="93:20" pos:end="93:20">s</name><operator pos:start="93:21" pos:end="93:22">-&gt;</operator><name pos:start="93:23" pos:end="93:27">frame</name><operator pos:start="93:28" pos:end="93:29">-&gt;</operator><name pos:start="93:30" pos:end="93:33">data</name><index pos:start="93:34" pos:end="93:36">[<expr pos:start="93:35" pos:end="93:35"><literal type="number" pos:start="93:35" pos:end="93:35">0</literal></expr>]</index></name> <operator pos:start="93:38" pos:end="93:38">+</operator> <name pos:start="93:40" pos:end="93:44">x_pos</name> <operator pos:start="93:46" pos:end="93:46">*</operator> <literal type="number" pos:start="93:48" pos:end="93:50">3</literal> <operator pos:start="93:50" pos:end="93:50">+</operator>

                   <operator pos:start="95:20" pos:end="95:20">(</operator><name pos:start="95:21" pos:end="95:35"><name pos:start="95:21" pos:end="95:21">s</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:35">image_height</name></name> <operator pos:start="95:37" pos:end="95:37">-</operator> <name pos:start="95:39" pos:end="95:43">y_pos</name> <operator pos:start="95:45" pos:end="95:45">-</operator> <name pos:start="95:47" pos:end="95:47">k</name><operator pos:start="95:48" pos:end="95:48">)</operator> <operator pos:start="95:50" pos:end="95:50">*</operator> <name pos:start="95:52" pos:end="95:72"><name pos:start="95:52" pos:end="95:52">s</name><operator pos:start="95:53" pos:end="95:54">-&gt;</operator><name pos:start="95:55" pos:end="95:59">frame</name><operator pos:start="95:60" pos:end="95:61">-&gt;</operator><name pos:start="95:62" pos:end="95:69">linesize</name><index pos:start="95:70" pos:end="95:72">[<expr pos:start="95:71" pos:end="95:71"><literal type="number" pos:start="95:71" pos:end="95:71">0</literal></expr>]</index></name></expr></argument>,

                   <argument pos:start="97:20" pos:end="97:23"><expr pos:start="97:20" pos:end="97:23"><name pos:start="97:20" pos:end="97:23">line</name></expr></argument>, <argument pos:start="97:26" pos:end="97:34"><expr pos:start="97:26" pos:end="97:34"><name pos:start="97:26" pos:end="97:30">width</name> <operator pos:start="97:32" pos:end="97:32">*</operator> <literal type="number" pos:start="97:34" pos:end="97:34">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="99:13" pos:end="99:53">/* advance source pointer to next line */</comment>

            <expr_stmt pos:start="101:13" pos:end="101:30"><expr pos:start="101:13" pos:end="101:29"><name pos:start="101:13" pos:end="101:16">line</name> <operator pos:start="101:18" pos:end="101:19">+=</operator> <name pos:start="101:21" pos:end="101:25">width</name> <operator pos:start="101:27" pos:end="101:27">*</operator> <literal type="number" pos:start="101:29" pos:end="101:29">3</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="105:7" pos:end="117:5">else <block pos:start="105:12" pos:end="117:5">{<block_content pos:start="109:9" pos:end="115:53">

        <comment type="block" pos:start="107:9" pos:end="107:40">/* hybrid 15-bit/palette mode */</comment>

        <expr_stmt pos:start="109:9" pos:end="115:53"><expr pos:start="109:9" pos:end="115:52"><call pos:start="109:9" pos:end="115:52"><name pos:start="109:9" pos:end="109:21">decode_hybrid</name><argument_list pos:start="109:22" pos:end="115:52">(<argument pos:start="109:23" pos:end="109:33"><expr pos:start="109:23" pos:end="109:33"><name pos:start="109:23" pos:end="109:33"><name pos:start="109:23" pos:end="109:23">s</name><operator pos:start="109:24" pos:end="109:25">-&gt;</operator><name pos:start="109:26" pos:end="109:33">tmpblock</name></name></expr></argument>, <argument pos:start="109:36" pos:end="109:52"><expr pos:start="109:36" pos:end="109:52"><name pos:start="109:36" pos:end="109:52"><name pos:start="109:36" pos:end="109:36">s</name><operator pos:start="109:37" pos:end="109:38">-&gt;</operator><name pos:start="109:39" pos:end="109:43">frame</name><operator pos:start="109:44" pos:end="109:45">-&gt;</operator><name pos:start="109:46" pos:end="109:49">data</name><index pos:start="109:50" pos:end="109:52">[<expr pos:start="109:51" pos:end="109:51"><literal type="number" pos:start="109:51" pos:end="109:51">0</literal></expr>]</index></name></expr></argument>,

                      <argument pos:start="111:23" pos:end="111:68"><expr pos:start="111:23" pos:end="111:68"><name pos:start="111:23" pos:end="111:37"><name pos:start="111:23" pos:end="111:23">s</name><operator pos:start="111:24" pos:end="111:25">-&gt;</operator><name pos:start="111:26" pos:end="111:37">image_height</name></name> <operator pos:start="111:39" pos:end="111:39">-</operator> <operator pos:start="111:41" pos:end="111:41">(</operator><name pos:start="111:42" pos:end="111:46">y_pos</name> <operator pos:start="111:48" pos:end="111:48">+</operator> <literal type="number" pos:start="111:50" pos:end="111:52">1</literal> <operator pos:start="111:52" pos:end="111:52">+</operator> <name pos:start="111:54" pos:end="111:67"><name pos:start="111:54" pos:end="111:54">s</name><operator pos:start="111:55" pos:end="111:56">-&gt;</operator><name pos:start="111:57" pos:end="111:67">diff_height</name></name><operator pos:start="111:68" pos:end="111:68">)</operator></expr></argument>,

                      <argument pos:start="113:23" pos:end="113:27"><expr pos:start="113:23" pos:end="113:27"><name pos:start="113:23" pos:end="113:27">x_pos</name></expr></argument>, <argument pos:start="113:30" pos:end="113:43"><expr pos:start="113:30" pos:end="113:43"><name pos:start="113:30" pos:end="113:43"><name pos:start="113:30" pos:end="113:30">s</name><operator pos:start="113:31" pos:end="113:32">-&gt;</operator><name pos:start="113:33" pos:end="113:43">diff_height</name></name></expr></argument>, <argument pos:start="113:46" pos:end="113:50"><expr pos:start="113:46" pos:end="113:50"><name pos:start="113:46" pos:end="113:50">width</name></expr></argument>,

                      <argument pos:start="115:23" pos:end="115:43"><expr pos:start="115:23" pos:end="115:43"><name pos:start="115:23" pos:end="115:43"><name pos:start="115:23" pos:end="115:23">s</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:30">frame</name><operator pos:start="115:31" pos:end="115:32">-&gt;</operator><name pos:start="115:33" pos:end="115:40">linesize</name><index pos:start="115:41" pos:end="115:43">[<expr pos:start="115:42" pos:end="115:42"><literal type="number" pos:start="115:42" pos:end="115:42">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="115:46" pos:end="115:51"><expr pos:start="115:46" pos:end="115:51"><name pos:start="115:46" pos:end="115:51"><name pos:start="115:46" pos:end="115:46">s</name><operator pos:start="115:47" pos:end="115:48">-&gt;</operator><name pos:start="115:49" pos:end="115:51">pal</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:39"><expr pos:start="119:5" pos:end="119:38"><call pos:start="119:5" pos:end="119:38"><name pos:start="119:5" pos:end="119:18">skip_bits_long</name><argument_list pos:start="119:19" pos:end="119:38">(<argument pos:start="119:20" pos:end="119:21"><expr pos:start="119:20" pos:end="119:21"><name pos:start="119:20" pos:end="119:21">gb</name></expr></argument>, <argument pos:start="119:24" pos:end="119:37"><expr pos:start="119:24" pos:end="119:37"><literal type="number" pos:start="119:24" pos:end="119:24">8</literal> <operator pos:start="119:26" pos:end="119:26">*</operator> <name pos:start="119:28" pos:end="119:37">block_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="119:41" pos:end="119:68">/* skip the consumed bits */</comment>

    <return pos:start="121:5" pos:end="121:13">return <expr pos:start="121:12" pos:end="121:12"><literal type="number" pos:start="121:12" pos:end="121:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
