<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8376.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:14"><name pos:start="1:1" pos:end="1:12">BlockBackend</name> <modifier pos:start="1:14" pos:end="1:14">*</modifier></type><name pos:start="1:15" pos:end="1:21">blk_new</name><parameter_list pos:start="1:22" pos:end="1:58">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:30">uint64_t</name></type> <name pos:start="1:32" pos:end="1:35">perm</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:57"><decl pos:start="1:38" pos:end="1:57"><type pos:start="1:38" pos:end="1:57"><name pos:start="1:38" pos:end="1:45">uint64_t</name></type> <name pos:start="1:47" pos:end="1:57">shared_perm</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:15">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">BlockBackend</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">blk</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:34"><expr pos:start="9:5" pos:end="9:33"><name pos:start="9:5" pos:end="9:7">blk</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <call pos:start="9:11" pos:end="9:33"><name pos:start="9:11" pos:end="9:16">g_new0</name><argument_list pos:start="9:17" pos:end="9:33">(<argument pos:start="9:18" pos:end="9:29"><expr pos:start="9:18" pos:end="9:29"><name pos:start="9:18" pos:end="9:29">BlockBackend</name></expr></argument>, <argument pos:start="9:32" pos:end="9:32"><expr pos:start="9:32" pos:end="9:32"><literal type="number" pos:start="9:32" pos:end="9:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:20"><expr pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:7">blk</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:15">refcnt</name></name> <operator pos:start="11:17" pos:end="11:17">=</operator> <literal type="number" pos:start="11:19" pos:end="11:19">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:21"><expr pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:7">blk</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:13">perm</name></name> <operator pos:start="13:15" pos:end="13:15">=</operator> <name pos:start="13:17" pos:end="13:20">perm</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:7">blk</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:20">shared_perm</name></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <name pos:start="15:24" pos:end="15:34">shared_perm</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:42"><expr pos:start="17:5" pos:end="17:41"><call pos:start="17:5" pos:end="17:41"><name pos:start="17:5" pos:end="17:30">blk_set_enable_write_cache</name><argument_list pos:start="17:31" pos:end="17:41">(<argument pos:start="17:32" pos:end="17:34"><expr pos:start="17:32" pos:end="17:34"><name pos:start="17:32" pos:end="17:34">blk</name></expr></argument>, <argument pos:start="17:37" pos:end="17:40"><expr pos:start="17:37" pos:end="17:40"><name pos:start="17:37" pos:end="17:40">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:79"><expr pos:start="21:5" pos:end="21:78"><call pos:start="21:5" pos:end="21:78"><name pos:start="21:5" pos:end="21:22">qemu_co_mutex_init</name><argument_list pos:start="21:23" pos:end="21:78">(<argument pos:start="21:24" pos:end="21:77"><expr pos:start="21:24" pos:end="21:77"><operator pos:start="21:24" pos:end="21:24">&amp;</operator><name pos:start="21:25" pos:end="21:77"><name pos:start="21:25" pos:end="21:27">blk</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:35">public</name><operator pos:start="21:36" pos:end="21:36">.</operator><name pos:start="21:37" pos:end="21:57">throttle_group_member</name><operator pos:start="21:58" pos:end="21:58">.</operator><name pos:start="21:59" pos:end="21:77">throttled_reqs_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:77"><expr pos:start="23:5" pos:end="23:76"><call pos:start="23:5" pos:end="23:76"><name pos:start="23:5" pos:end="23:22">qemu_co_queue_init</name><argument_list pos:start="23:23" pos:end="23:76">(<argument pos:start="23:24" pos:end="23:75"><expr pos:start="23:24" pos:end="23:75"><operator pos:start="23:24" pos:end="23:24">&amp;</operator><name pos:start="23:25" pos:end="23:75"><name pos:start="23:25" pos:end="23:27">blk</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:35">public</name><operator pos:start="23:36" pos:end="23:36">.</operator><name pos:start="23:37" pos:end="23:57">throttle_group_member</name><operator pos:start="23:58" pos:end="23:58">.</operator><name pos:start="23:59" pos:end="23:72">throttled_reqs</name><index pos:start="23:73" pos:end="23:75">[<expr pos:start="23:74" pos:end="23:74"><literal type="number" pos:start="23:74" pos:end="23:74">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:77"><expr pos:start="25:5" pos:end="25:76"><call pos:start="25:5" pos:end="25:76"><name pos:start="25:5" pos:end="25:22">qemu_co_queue_init</name><argument_list pos:start="25:23" pos:end="25:76">(<argument pos:start="25:24" pos:end="25:75"><expr pos:start="25:24" pos:end="25:75"><operator pos:start="25:24" pos:end="25:24">&amp;</operator><name pos:start="25:25" pos:end="25:75"><name pos:start="25:25" pos:end="25:27">blk</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:35">public</name><operator pos:start="25:36" pos:end="25:36">.</operator><name pos:start="25:37" pos:end="25:57">throttle_group_member</name><operator pos:start="25:58" pos:end="25:58">.</operator><name pos:start="25:59" pos:end="25:72">throttled_reqs</name><index pos:start="25:73" pos:end="25:75">[<expr pos:start="25:74" pos:end="25:74"><literal type="number" pos:start="25:74" pos:end="25:74">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:33"><expr pos:start="27:5" pos:end="27:32"><call pos:start="27:5" pos:end="27:32"><name pos:start="27:5" pos:end="27:19">block_acct_init</name><argument_list pos:start="27:20" pos:end="27:32">(<argument pos:start="27:21" pos:end="27:31"><expr pos:start="27:21" pos:end="27:31"><operator pos:start="27:21" pos:end="27:21">&amp;</operator><name pos:start="27:22" pos:end="27:31"><name pos:start="27:22" pos:end="27:24">blk</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:31">stats</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:50"><expr pos:start="31:5" pos:end="31:49"><call pos:start="31:5" pos:end="31:49"><name pos:start="31:5" pos:end="31:22">notifier_list_init</name><argument_list pos:start="31:23" pos:end="31:49">(<argument pos:start="31:24" pos:end="31:48"><expr pos:start="31:24" pos:end="31:48"><operator pos:start="31:24" pos:end="31:24">&amp;</operator><name pos:start="31:25" pos:end="31:48"><name pos:start="31:25" pos:end="31:27">blk</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:48">remove_bs_notifiers</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:50"><expr pos:start="33:5" pos:end="33:49"><call pos:start="33:5" pos:end="33:49"><name pos:start="33:5" pos:end="33:22">notifier_list_init</name><argument_list pos:start="33:23" pos:end="33:49">(<argument pos:start="33:24" pos:end="33:48"><expr pos:start="33:24" pos:end="33:48"><operator pos:start="33:24" pos:end="33:24">&amp;</operator><name pos:start="33:25" pos:end="33:48"><name pos:start="33:25" pos:end="33:27">blk</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:48">insert_bs_notifiers</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:51"><expr pos:start="37:5" pos:end="37:50"><call pos:start="37:5" pos:end="37:50"><name pos:start="37:5" pos:end="37:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="37:23" pos:end="37:50">(<argument pos:start="37:24" pos:end="37:38"><expr pos:start="37:24" pos:end="37:38"><operator pos:start="37:24" pos:end="37:24">&amp;</operator><name pos:start="37:25" pos:end="37:38">block_backends</name></expr></argument>, <argument pos:start="37:41" pos:end="37:43"><expr pos:start="37:41" pos:end="37:43"><name pos:start="37:41" pos:end="37:43">blk</name></expr></argument>, <argument pos:start="37:46" pos:end="37:49"><expr pos:start="37:46" pos:end="37:49"><name pos:start="37:46" pos:end="37:49">link</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="39:5" pos:end="39:15">return <expr pos:start="39:12" pos:end="39:14"><name pos:start="39:12" pos:end="39:14">blk</name></expr>;</return>

</block_content>}</block></function>
</unit>
