<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17111.c" pos:tabs="8"><function pos:start="1:1" pos:end="56:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:37">virtio_scsi_load_request</name><parameter_list pos:start="1:38" pos:end="1:69">(<parameter pos:start="1:39" pos:end="1:49"><decl pos:start="1:39" pos:end="1:49"><type pos:start="1:39" pos:end="1:49"><name pos:start="1:39" pos:end="1:46">QEMUFile</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">f</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:68"><decl pos:start="1:52" pos:end="1:68"><type pos:start="1:52" pos:end="1:68"><name pos:start="1:52" pos:end="1:62">SCSIRequest</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:68">sreq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="56:1">{<block_content pos:start="5:5" pos:end="54:15">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">SCSIBus</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">bus</name> <init pos:start="5:18" pos:end="5:28">= <expr pos:start="5:20" pos:end="5:28"><name pos:start="5:20" pos:end="5:28"><name pos:start="5:20" pos:end="5:23">sreq</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:28">bus</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:55"><decl pos:start="7:5" pos:end="7:54"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">VirtIOSCSI</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">s</name> <init pos:start="7:19" pos:end="7:54">= <expr pos:start="7:21" pos:end="7:54"><call pos:start="7:21" pos:end="7:54"><name pos:start="7:21" pos:end="7:32">container_of</name><argument_list pos:start="7:33" pos:end="7:54">(<argument pos:start="7:34" pos:end="7:36"><expr pos:start="7:34" pos:end="7:36"><name pos:start="7:34" pos:end="7:36">bus</name></expr></argument>, <argument pos:start="7:39" pos:end="7:48"><expr pos:start="7:39" pos:end="7:48"><name pos:start="7:39" pos:end="7:48">VirtIOSCSI</name></expr></argument>, <argument pos:start="7:51" pos:end="7:53"><expr pos:start="7:51" pos:end="7:53"><name pos:start="7:51" pos:end="7:53">bus</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:49"><decl pos:start="9:5" pos:end="9:48"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">VirtIOSCSICommon</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:24">vs</name> <init pos:start="9:26" pos:end="9:48">= <expr pos:start="9:28" pos:end="9:48"><call pos:start="9:28" pos:end="9:48"><name pos:start="9:28" pos:end="9:45">VIRTIO_SCSI_COMMON</name><argument_list pos:start="9:46" pos:end="9:48">(<argument pos:start="9:47" pos:end="9:47"><expr pos:start="9:47" pos:end="9:47"><name pos:start="9:47" pos:end="9:47">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">VirtIOSCSIReq</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">req</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:14">n</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:33"><expr pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:7">req</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:32"><name pos:start="17:11" pos:end="17:18">g_malloc</name><argument_list pos:start="17:19" pos:end="17:32">(<argument pos:start="17:20" pos:end="17:31"><expr pos:start="17:20" pos:end="17:31"><sizeof pos:start="17:20" pos:end="17:31">sizeof<argument_list pos:start="17:26" pos:end="17:31">(<argument pos:start="17:27" pos:end="17:30"><expr pos:start="17:27" pos:end="17:30"><operator pos:start="17:27" pos:end="17:27">*</operator><name pos:start="17:28" pos:end="17:30">req</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:26"><expr pos:start="19:5" pos:end="19:25"><call pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:18">qemu_get_be32s</name><argument_list pos:start="19:19" pos:end="19:25">(<argument pos:start="19:20" pos:end="19:20"><expr pos:start="19:20" pos:end="19:20"><name pos:start="19:20" pos:end="19:20">f</name></expr></argument>, <argument pos:start="19:23" pos:end="19:24"><expr pos:start="19:23" pos:end="19:24"><operator pos:start="19:23" pos:end="19:23">&amp;</operator><name pos:start="19:24" pos:end="19:24">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:36"><expr pos:start="21:5" pos:end="21:35"><call pos:start="21:5" pos:end="21:35"><name pos:start="21:5" pos:end="21:10">assert</name><argument_list pos:start="21:11" pos:end="21:35">(<argument pos:start="21:12" pos:end="21:34"><expr pos:start="21:12" pos:end="21:34"><name pos:start="21:12" pos:end="21:12">n</name> <operator pos:start="21:14" pos:end="21:14">&lt;</operator> <name pos:start="21:16" pos:end="21:34"><name pos:start="21:16" pos:end="21:17">vs</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:23">conf</name><operator pos:start="21:24" pos:end="21:24">.</operator><name pos:start="21:25" pos:end="21:34">num_queues</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:71"><expr pos:start="23:5" pos:end="23:70"><call pos:start="23:5" pos:end="23:70"><name pos:start="23:5" pos:end="23:19">qemu_get_buffer</name><argument_list pos:start="23:20" pos:end="23:70">(<argument pos:start="23:21" pos:end="23:21"><expr pos:start="23:21" pos:end="23:21"><name pos:start="23:21" pos:end="23:21">f</name></expr></argument>, <argument pos:start="23:24" pos:end="23:50"><expr pos:start="23:24" pos:end="23:50"><operator pos:start="23:24" pos:end="23:24">(</operator><name pos:start="23:25" pos:end="23:32">unsigned</name> <name pos:start="23:34" pos:end="23:37">char</name> <operator pos:start="23:39" pos:end="23:39">*</operator><operator pos:start="23:40" pos:end="23:40">)</operator><operator pos:start="23:41" pos:end="23:41">&amp;</operator><name pos:start="23:42" pos:end="23:50"><name pos:start="23:42" pos:end="23:44">req</name><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:50">elem</name></name></expr></argument>, <argument pos:start="23:53" pos:end="23:69"><expr pos:start="23:53" pos:end="23:69"><sizeof pos:start="23:53" pos:end="23:69">sizeof<argument_list pos:start="23:59" pos:end="23:69">(<argument pos:start="23:60" pos:end="23:68"><expr pos:start="23:60" pos:end="23:68"><name pos:start="23:60" pos:end="23:68"><name pos:start="23:60" pos:end="23:62">req</name><operator pos:start="23:63" pos:end="23:64">-&gt;</operator><name pos:start="23:65" pos:end="23:68">elem</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>










    <expr_stmt pos:start="34:5" pos:end="34:50"><expr pos:start="34:5" pos:end="34:49"><call pos:start="34:5" pos:end="34:49"><name pos:start="34:5" pos:end="34:25">virtio_scsi_parse_req</name><argument_list pos:start="34:26" pos:end="34:49">(<argument pos:start="34:27" pos:end="34:27"><expr pos:start="34:27" pos:end="34:27"><name pos:start="34:27" pos:end="34:27">s</name></expr></argument>, <argument pos:start="34:30" pos:end="34:43"><expr pos:start="34:30" pos:end="34:43"><name pos:start="34:30" pos:end="34:43"><name pos:start="34:30" pos:end="34:31">vs</name><operator pos:start="34:32" pos:end="34:33">-&gt;</operator><name pos:start="34:34" pos:end="34:40">cmd_vqs</name><index pos:start="34:41" pos:end="34:43">[<expr pos:start="34:42" pos:end="34:42"><name pos:start="34:42" pos:end="34:42">n</name></expr>]</index></name></expr></argument>, <argument pos:start="34:46" pos:end="34:48"><expr pos:start="34:46" pos:end="34:48"><name pos:start="34:46" pos:end="34:48">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="38:5" pos:end="38:23"><expr pos:start="38:5" pos:end="38:22"><call pos:start="38:5" pos:end="38:22"><name pos:start="38:5" pos:end="38:16">scsi_req_ref</name><argument_list pos:start="38:17" pos:end="38:22">(<argument pos:start="38:18" pos:end="38:21"><expr pos:start="38:18" pos:end="38:21"><name pos:start="38:18" pos:end="38:21">sreq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="40:5" pos:end="40:21"><expr pos:start="40:5" pos:end="40:20"><name pos:start="40:5" pos:end="40:13"><name pos:start="40:5" pos:end="40:7">req</name><operator pos:start="40:8" pos:end="40:9">-&gt;</operator><name pos:start="40:10" pos:end="40:13">sreq</name></name> <operator pos:start="40:15" pos:end="40:15">=</operator> <name pos:start="40:17" pos:end="40:20">sreq</name></expr>;</expr_stmt>

    <if_stmt pos:start="42:5" pos:end="52:5"><if pos:start="42:5" pos:end="52:5">if <condition pos:start="42:8" pos:end="42:46">(<expr pos:start="42:9" pos:end="42:45"><name pos:start="42:9" pos:end="42:27"><name pos:start="42:9" pos:end="42:11">req</name><operator pos:start="42:12" pos:end="42:13">-&gt;</operator><name pos:start="42:14" pos:end="42:17">sreq</name><operator pos:start="42:18" pos:end="42:19">-&gt;</operator><name pos:start="42:20" pos:end="42:22">cmd</name><operator pos:start="42:23" pos:end="42:23">.</operator><name pos:start="42:24" pos:end="42:27">mode</name></name> <operator pos:start="42:29" pos:end="42:30">!=</operator> <name pos:start="42:32" pos:end="42:45">SCSI_XFER_NONE</name></expr>)</condition> <block pos:start="42:48" pos:end="52:5">{<block_content pos:start="44:9" pos:end="50:48">

        <decl_stmt pos:start="44:9" pos:end="46:75"><decl pos:start="44:9" pos:end="46:74"><type pos:start="44:9" pos:end="44:11"><name pos:start="44:9" pos:end="44:11">int</name></type> <name pos:start="44:13" pos:end="44:20">req_mode</name> <init pos:start="44:22" pos:end="46:74">=

            <expr pos:start="46:13" pos:end="46:74"><operator pos:start="46:13" pos:end="46:13">(</operator><ternary pos:start="46:14" pos:end="46:73"><condition pos:start="46:14" pos:end="46:35"><expr pos:start="46:14" pos:end="46:33"><name pos:start="46:14" pos:end="46:29"><name pos:start="46:14" pos:end="46:16">req</name><operator pos:start="46:17" pos:end="46:18">-&gt;</operator><name pos:start="46:19" pos:end="46:22">elem</name><operator pos:start="46:23" pos:end="46:23">.</operator><name pos:start="46:24" pos:end="46:29">in_num</name></name> <operator pos:start="46:31" pos:end="46:31">&gt;</operator> <literal type="number" pos:start="46:33" pos:end="46:33">1</literal></expr> ?</condition><then pos:start="46:37" pos:end="46:54"> <expr pos:start="46:37" pos:end="46:54"><name pos:start="46:37" pos:end="46:54">SCSI_XFER_FROM_DEV</name></expr> </then><else pos:start="46:56" pos:end="46:73">: <expr pos:start="46:58" pos:end="46:73"><name pos:start="46:58" pos:end="46:73">SCSI_XFER_TO_DEV</name></expr></else></ternary><operator pos:start="46:74" pos:end="46:74">)</operator></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="50:9" pos:end="50:48"><expr pos:start="50:9" pos:end="50:47"><call pos:start="50:9" pos:end="50:47"><name pos:start="50:9" pos:end="50:14">assert</name><argument_list pos:start="50:15" pos:end="50:47">(<argument pos:start="50:16" pos:end="50:46"><expr pos:start="50:16" pos:end="50:46"><name pos:start="50:16" pos:end="50:34"><name pos:start="50:16" pos:end="50:18">req</name><operator pos:start="50:19" pos:end="50:20">-&gt;</operator><name pos:start="50:21" pos:end="50:24">sreq</name><operator pos:start="50:25" pos:end="50:26">-&gt;</operator><name pos:start="50:27" pos:end="50:29">cmd</name><operator pos:start="50:30" pos:end="50:30">.</operator><name pos:start="50:31" pos:end="50:34">mode</name></name> <operator pos:start="50:36" pos:end="50:37">==</operator> <name pos:start="50:39" pos:end="50:46">req_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="54:5" pos:end="54:15">return <expr pos:start="54:12" pos:end="54:14"><name pos:start="54:12" pos:end="54:14">req</name></expr>;</return>

</block_content>}</block></function></unit>
