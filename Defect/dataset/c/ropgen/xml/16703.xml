<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16703.c" pos:tabs="8"><function pos:start="1:1" pos:end="319:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">rpza_decode_stream</name><parameter_list pos:start="1:31" pos:end="1:46">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:44"><name pos:start="1:32" pos:end="1:42">RpzaContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="319:1">{<block_content pos:start="5:5" pos:end="317:5">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">width</name> <init pos:start="5:15" pos:end="5:31">= <expr pos:start="5:17" pos:end="5:31"><name pos:start="5:17" pos:end="5:31"><name pos:start="5:17" pos:end="5:17">s</name><operator pos:start="5:18" pos:end="5:19">-&gt;</operator><name pos:start="5:20" pos:end="5:24">avctx</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:31">width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">stride</name> <init pos:start="7:16" pos:end="7:41">= <expr pos:start="7:18" pos:end="7:41"><name pos:start="7:18" pos:end="7:37"><name pos:start="7:18" pos:end="7:18">s</name><operator pos:start="7:19" pos:end="7:20">-&gt;</operator><name pos:start="7:21" pos:end="7:25">frame</name><operator pos:start="7:26" pos:end="7:26">.</operator><name pos:start="7:27" pos:end="7:34">linesize</name><index pos:start="7:35" pos:end="7:37">[<expr pos:start="7:36" pos:end="7:36"><literal type="number" pos:start="7:36" pos:end="7:36">0</literal></expr>]</index></name> <operator pos:start="7:39" pos:end="7:39">/</operator> <literal type="number" pos:start="7:41" pos:end="7:41">2</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">row_inc</name> <init pos:start="9:17" pos:end="9:28">= <expr pos:start="9:19" pos:end="9:28"><name pos:start="9:19" pos:end="9:24">stride</name> <operator pos:start="9:26" pos:end="9:26">-</operator> <literal type="number" pos:start="9:28" pos:end="9:28">4</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">stream_ptr</name> <init pos:start="11:20" pos:end="11:22">= <expr pos:start="11:22" pos:end="11:22"><literal type="number" pos:start="11:22" pos:end="11:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:18">chunk_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:17">char</name></type> <name pos:start="15:19" pos:end="15:24">opcode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">n_blocks</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:38"><decl pos:start="19:5" pos:end="19:29"><type pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:12">unsigned</name> <name pos:start="19:14" pos:end="19:18">short</name></type> <name pos:start="19:20" pos:end="19:25">colorA</name> <init pos:start="19:27" pos:end="19:29">= <expr pos:start="19:29" pos:end="19:29"><literal type="number" pos:start="19:29" pos:end="19:29">0</literal></expr></init></decl>, <decl pos:start="19:32" pos:end="19:37"><type ref="prev" pos:start="19:5" pos:end="19:18"/><name pos:start="19:32" pos:end="19:37">colorB</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:29"><decl pos:start="21:5" pos:end="21:28"><type pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:12">unsigned</name> <name pos:start="21:14" pos:end="21:18">short</name></type> <name pos:start="21:20" pos:end="21:28"><name pos:start="21:20" pos:end="21:25">color4</name><index pos:start="21:26" pos:end="21:28">[<expr pos:start="21:27" pos:end="21:27"><literal type="number" pos:start="21:27" pos:end="21:27">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:29"><decl pos:start="23:5" pos:end="23:23"><type pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:12">unsigned</name> <name pos:start="23:14" pos:end="23:17">char</name></type> <name pos:start="23:19" pos:end="23:23">index</name></decl>, <decl pos:start="23:26" pos:end="23:28"><type ref="prev" pos:start="23:5" pos:end="23:17"/><name pos:start="23:26" pos:end="23:28">idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:26"><decl pos:start="25:5" pos:end="25:21"><type pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:12">unsigned</name> <name pos:start="25:14" pos:end="25:18">short</name></type> <name pos:start="25:20" pos:end="25:21">ta</name></decl>, <decl pos:start="25:24" pos:end="25:25"><type ref="prev" pos:start="25:5" pos:end="25:18"/><name pos:start="25:24" pos:end="25:25">tb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:64"><decl pos:start="27:5" pos:end="27:63"><type pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:12">unsigned</name> <name pos:start="27:14" pos:end="27:18">short</name> <modifier pos:start="27:20" pos:end="27:20">*</modifier></type><name pos:start="27:21" pos:end="27:26">pixels</name> <init pos:start="27:28" pos:end="27:63">= <expr pos:start="27:30" pos:end="27:63"><operator pos:start="27:30" pos:end="27:30">(</operator><name pos:start="27:31" pos:end="27:38">unsigned</name> <name pos:start="27:40" pos:end="27:44">short</name> <operator pos:start="27:46" pos:end="27:46">*</operator><operator pos:start="27:47" pos:end="27:47">)</operator><name pos:start="27:48" pos:end="27:63"><name pos:start="27:48" pos:end="27:48">s</name><operator pos:start="27:49" pos:end="27:50">-&gt;</operator><name pos:start="27:51" pos:end="27:55">frame</name><operator pos:start="27:56" pos:end="27:56">.</operator><name pos:start="27:57" pos:end="27:60">data</name><index pos:start="27:61" pos:end="27:63">[<expr pos:start="27:62" pos:end="27:62"><literal type="number" pos:start="27:62" pos:end="27:62">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="31:5" pos:end="31:20"><decl pos:start="31:5" pos:end="31:19"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:15">row_ptr</name> <init pos:start="31:17" pos:end="31:19">= <expr pos:start="31:19" pos:end="31:19"><literal type="number" pos:start="31:19" pos:end="31:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:22"><decl pos:start="33:5" pos:end="33:21"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:17">pixel_ptr</name> <init pos:start="33:19" pos:end="33:21">= <expr pos:start="33:21" pos:end="33:21"><literal type="number" pos:start="33:21" pos:end="33:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:18"><decl pos:start="35:5" pos:end="35:17"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:17">block_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:25"><decl pos:start="37:5" pos:end="37:15"><type pos:start="37:5" pos:end="37:7"><name pos:start="37:5" pos:end="37:7">int</name></type> <name pos:start="37:9" pos:end="37:15">pixel_x</name></decl>, <decl pos:start="37:18" pos:end="37:24"><type ref="prev" pos:start="37:5" pos:end="37:7"/><name pos:start="37:18" pos:end="37:24">pixel_y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:21"><decl pos:start="39:5" pos:end="39:20"><type pos:start="39:5" pos:end="39:7"><name pos:start="39:5" pos:end="39:7">int</name></type> <name pos:start="39:9" pos:end="39:20">total_blocks</name></decl>;</decl_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:59">/* First byte is always 0xe1. Warn if it's different */</comment>

    <if_stmt pos:start="45:5" pos:end="49:32"><if pos:start="45:5" pos:end="49:32">if <condition pos:start="45:8" pos:end="45:35">(<expr pos:start="45:9" pos:end="45:34"><name pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:14">buf</name><index pos:start="45:15" pos:end="45:26">[<expr pos:start="45:16" pos:end="45:25"><name pos:start="45:16" pos:end="45:25">stream_ptr</name></expr>]</index></name> <operator pos:start="45:28" pos:end="45:29">!=</operator> <literal type="number" pos:start="45:31" pos:end="45:34">0xe1</literal></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="49:32"><block_content pos:start="47:9" pos:end="49:32">

        <expr_stmt pos:start="47:9" pos:end="49:32"><expr pos:start="47:9" pos:end="49:31"><call pos:start="47:9" pos:end="49:31"><name pos:start="47:9" pos:end="47:14">av_log</name><argument_list pos:start="47:15" pos:end="49:31">(<argument pos:start="47:16" pos:end="47:23"><expr pos:start="47:16" pos:end="47:23"><name pos:start="47:16" pos:end="47:23"><name pos:start="47:16" pos:end="47:16">s</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:23">avctx</name></name></expr></argument>, <argument pos:start="47:26" pos:end="47:37"><expr pos:start="47:26" pos:end="47:37"><name pos:start="47:26" pos:end="47:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:40" pos:end="47:85"><expr pos:start="47:40" pos:end="47:85"><literal type="string" pos:start="47:40" pos:end="47:85">"First chunk byte is 0x%02x instead of 0xe1\n"</literal></expr></argument>,

            <argument pos:start="49:13" pos:end="49:30"><expr pos:start="49:13" pos:end="49:30"><name pos:start="49:13" pos:end="49:30"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:18">buf</name><index pos:start="49:19" pos:end="49:30">[<expr pos:start="49:20" pos:end="49:29"><name pos:start="49:20" pos:end="49:29">stream_ptr</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:46">/* Get chunk size, ingnoring first byte */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:59"><expr pos:start="55:5" pos:end="55:58"><name pos:start="55:5" pos:end="55:14">chunk_size</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <call pos:start="55:18" pos:end="55:45"><name pos:start="55:18" pos:end="55:24">AV_RB32</name><argument_list pos:start="55:25" pos:end="55:45">(<argument pos:start="55:26" pos:end="55:44"><expr pos:start="55:26" pos:end="55:44"><operator pos:start="55:26" pos:end="55:26">&amp;</operator><name pos:start="55:27" pos:end="55:44"><name pos:start="55:27" pos:end="55:27">s</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:32">buf</name><index pos:start="55:33" pos:end="55:44">[<expr pos:start="55:34" pos:end="55:43"><name pos:start="55:34" pos:end="55:43">stream_ptr</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="55:47" pos:end="55:47">&amp;</operator> <literal type="number" pos:start="55:49" pos:end="55:58">0x00FFFFFF</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:20"><expr pos:start="57:5" pos:end="57:19"><name pos:start="57:5" pos:end="57:14">stream_ptr</name> <operator pos:start="57:16" pos:end="57:17">+=</operator> <literal type="number" pos:start="57:19" pos:end="57:19">4</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:76">/* If length mismatch use size from MOV file and try to decode anyway */</comment>

    <if_stmt pos:start="63:5" pos:end="65:103"><if pos:start="63:5" pos:end="65:103">if <condition pos:start="63:8" pos:end="63:30">(<expr pos:start="63:9" pos:end="63:29"><name pos:start="63:9" pos:end="63:18">chunk_size</name> <operator pos:start="63:20" pos:end="63:21">!=</operator> <name pos:start="63:23" pos:end="63:29"><name pos:start="63:23" pos:end="63:23">s</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:29">size</name></name></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:103"><block_content pos:start="65:9" pos:end="65:103">

        <expr_stmt pos:start="65:9" pos:end="65:103"><expr pos:start="65:9" pos:end="65:102"><call pos:start="65:9" pos:end="65:102"><name pos:start="65:9" pos:end="65:14">av_log</name><argument_list pos:start="65:15" pos:end="65:102">(<argument pos:start="65:16" pos:end="65:23"><expr pos:start="65:16" pos:end="65:23"><name pos:start="65:16" pos:end="65:23"><name pos:start="65:16" pos:end="65:16">s</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:23">avctx</name></name></expr></argument>, <argument pos:start="65:26" pos:end="65:37"><expr pos:start="65:26" pos:end="65:37"><name pos:start="65:26" pos:end="65:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="65:40" pos:end="65:101"><expr pos:start="65:40" pos:end="65:101"><literal type="string" pos:start="65:40" pos:end="65:101">"MOV chunk size != encoded chunk size; using MOV chunk size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:25"><expr pos:start="69:5" pos:end="69:24"><name pos:start="69:5" pos:end="69:14">chunk_size</name> <operator pos:start="69:16" pos:end="69:16">=</operator> <name pos:start="69:18" pos:end="69:24"><name pos:start="69:18" pos:end="69:18">s</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:24">size</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="73:5" pos:end="73:40">/* Number of 4x4 blocks in frame. */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:78"><expr pos:start="75:5" pos:end="75:77"><name pos:start="75:5" pos:end="75:16">total_blocks</name> <operator pos:start="75:18" pos:end="75:18">=</operator> <operator pos:start="75:20" pos:end="75:20">(</operator><operator pos:start="75:21" pos:end="75:21">(</operator><name pos:start="75:22" pos:end="75:36"><name pos:start="75:22" pos:end="75:22">s</name><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:29">avctx</name><operator pos:start="75:30" pos:end="75:31">-&gt;</operator><name pos:start="75:32" pos:end="75:36">width</name></name> <operator pos:start="75:38" pos:end="75:38">+</operator> <literal type="number" pos:start="75:40" pos:end="75:40">3</literal><operator pos:start="75:41" pos:end="75:41">)</operator> <operator pos:start="75:43" pos:end="75:43">/</operator> <literal type="number" pos:start="75:45" pos:end="75:45">4</literal><operator pos:start="75:46" pos:end="75:46">)</operator> <operator pos:start="75:48" pos:end="75:48">*</operator> <operator pos:start="75:50" pos:end="75:50">(</operator><operator pos:start="75:51" pos:end="75:51">(</operator><name pos:start="75:52" pos:end="75:67"><name pos:start="75:52" pos:end="75:52">s</name><operator pos:start="75:53" pos:end="75:54">-&gt;</operator><name pos:start="75:55" pos:end="75:59">avctx</name><operator pos:start="75:60" pos:end="75:61">-&gt;</operator><name pos:start="75:62" pos:end="75:67">height</name></name> <operator pos:start="75:69" pos:end="75:69">+</operator> <literal type="number" pos:start="75:71" pos:end="75:71">3</literal><operator pos:start="75:72" pos:end="75:72">)</operator> <operator pos:start="75:74" pos:end="75:74">/</operator> <literal type="number" pos:start="75:76" pos:end="75:76">4</literal><operator pos:start="75:77" pos:end="75:77">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="79:5" pos:end="79:28">/* Process chunk data */</comment>

    <while pos:start="81:5" pos:end="317:5">while <condition pos:start="81:11" pos:end="81:35">(<expr pos:start="81:12" pos:end="81:34"><name pos:start="81:12" pos:end="81:21">stream_ptr</name> <operator pos:start="81:23" pos:end="81:23">&lt;</operator> <name pos:start="81:25" pos:end="81:34">chunk_size</name></expr>)</condition> <block pos:start="81:37" pos:end="317:5">{<block_content pos:start="83:9" pos:end="315:9">

        <expr_stmt pos:start="83:9" pos:end="83:38"><expr pos:start="83:9" pos:end="83:37"><name pos:start="83:9" pos:end="83:14">opcode</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <name pos:start="83:18" pos:end="83:37"><name pos:start="83:18" pos:end="83:18">s</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:23">buf</name><index pos:start="83:24" pos:end="83:37">[<expr pos:start="83:25" pos:end="83:36"><name pos:start="83:25" pos:end="83:34">stream_ptr</name><operator pos:start="83:35" pos:end="83:36">++</operator></expr>]</index></name></expr>;</expr_stmt> <comment type="block" pos:start="83:40" pos:end="83:55">/* Get opcode */</comment>



        <expr_stmt pos:start="87:9" pos:end="87:39"><expr pos:start="87:9" pos:end="87:38"><name pos:start="87:9" pos:end="87:16">n_blocks</name> <operator pos:start="87:18" pos:end="87:18">=</operator> <operator pos:start="87:20" pos:end="87:20">(</operator><name pos:start="87:21" pos:end="87:26">opcode</name> <operator pos:start="87:28" pos:end="87:28">&amp;</operator> <literal type="number" pos:start="87:30" pos:end="87:33">0x1f</literal><operator pos:start="87:34" pos:end="87:34">)</operator> <operator pos:start="87:36" pos:end="87:36">+</operator> <literal type="number" pos:start="87:38" pos:end="87:38">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="87:41" pos:end="87:79">/* Extract block counter from opcode */</comment>



        <comment type="block" pos:start="91:9" pos:end="91:74">/* If opcode MSbit is 0, we need more data to decide what to do */</comment>

        <if_stmt pos:start="93:9" pos:end="113:9"><if pos:start="93:9" pos:end="113:9">if <condition pos:start="93:12" pos:end="93:33">(<expr pos:start="93:13" pos:end="93:32"><operator pos:start="93:13" pos:end="93:13">(</operator><name pos:start="93:14" pos:end="93:19">opcode</name> <operator pos:start="93:21" pos:end="93:21">&amp;</operator> <literal type="number" pos:start="93:23" pos:end="93:26">0x80</literal><operator pos:start="93:27" pos:end="93:27">)</operator> <operator pos:start="93:29" pos:end="93:30">==</operator> <literal type="number" pos:start="93:32" pos:end="93:32">0</literal></expr>)</condition> <block pos:start="93:35" pos:end="113:9">{<block_content pos:start="95:13" pos:end="111:13">

            <expr_stmt pos:start="95:13" pos:end="95:60"><expr pos:start="95:13" pos:end="95:59"><name pos:start="95:13" pos:end="95:18">colorA</name> <operator pos:start="95:20" pos:end="95:20">=</operator> <operator pos:start="95:22" pos:end="95:22">(</operator><name pos:start="95:23" pos:end="95:28">opcode</name> <operator pos:start="95:30" pos:end="95:31">&lt;&lt;</operator> <literal type="number" pos:start="95:33" pos:end="95:33">8</literal><operator pos:start="95:34" pos:end="95:34">)</operator> <operator pos:start="95:36" pos:end="95:36">|</operator> <operator pos:start="95:38" pos:end="95:38">(</operator><name pos:start="95:39" pos:end="95:58"><name pos:start="95:39" pos:end="95:39">s</name><operator pos:start="95:40" pos:end="95:41">-&gt;</operator><name pos:start="95:42" pos:end="95:44">buf</name><index pos:start="95:45" pos:end="95:58">[<expr pos:start="95:46" pos:end="95:57"><name pos:start="95:46" pos:end="95:55">stream_ptr</name><operator pos:start="95:56" pos:end="95:57">++</operator></expr>]</index></name><operator pos:start="95:59" pos:end="95:59">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:23"><expr pos:start="97:13" pos:end="97:22"><name pos:start="97:13" pos:end="97:18">opcode</name> <operator pos:start="97:20" pos:end="97:20">=</operator> <literal type="number" pos:start="97:22" pos:end="97:22">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="99:13" pos:end="111:13"><if pos:start="99:13" pos:end="111:13">if <condition pos:start="99:16" pos:end="99:49">(<expr pos:start="99:17" pos:end="99:48"><operator pos:start="99:17" pos:end="99:17">(</operator><name pos:start="99:18" pos:end="99:35"><name pos:start="99:18" pos:end="99:18">s</name><operator pos:start="99:19" pos:end="99:20">-&gt;</operator><name pos:start="99:21" pos:end="99:23">buf</name><index pos:start="99:24" pos:end="99:35">[<expr pos:start="99:25" pos:end="99:34"><name pos:start="99:25" pos:end="99:34">stream_ptr</name></expr>]</index></name> <operator pos:start="99:37" pos:end="99:37">&amp;</operator> <literal type="number" pos:start="99:39" pos:end="99:42">0x80</literal><operator pos:start="99:43" pos:end="99:43">)</operator> <operator pos:start="99:45" pos:end="99:46">!=</operator> <literal type="number" pos:start="99:48" pos:end="99:48">0</literal></expr>)</condition> <block pos:start="99:51" pos:end="111:13">{<block_content pos:start="107:17" pos:end="109:29">

                <comment type="block" pos:start="101:17" pos:end="105:37">/* Must behave as opcode 110xxxxx, using colorA computed

                 * above. Use fake opcode 0x20 to enter switch block at

                 * the right place */</comment>

                <expr_stmt pos:start="107:17" pos:end="107:30"><expr pos:start="107:17" pos:end="107:29"><name pos:start="107:17" pos:end="107:22">opcode</name> <operator pos:start="107:24" pos:end="107:24">=</operator> <literal type="number" pos:start="107:26" pos:end="107:29">0x20</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:29"><expr pos:start="109:17" pos:end="109:28"><name pos:start="109:17" pos:end="109:24">n_blocks</name> <operator pos:start="109:26" pos:end="109:26">=</operator> <literal type="number" pos:start="109:28" pos:end="109:28">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <switch pos:start="117:9" pos:end="315:9">switch <condition pos:start="117:16" pos:end="117:30">(<expr pos:start="117:17" pos:end="117:29"><name pos:start="117:17" pos:end="117:22">opcode</name> <operator pos:start="117:24" pos:end="117:24">&amp;</operator> <literal type="number" pos:start="117:26" pos:end="117:29">0xe0</literal></expr>)</condition> <block pos:start="117:32" pos:end="315:9">{<block_content pos:start="123:9" pos:end="312:42">



        <comment type="block" pos:start="121:9" pos:end="121:25">/* Skip blocks */</comment>

        <case pos:start="123:9" pos:end="123:18">case <expr pos:start="123:14" pos:end="123:17"><literal type="number" pos:start="123:14" pos:end="123:17">0x80</literal></expr>:</case>

            <while pos:start="125:13" pos:end="129:13">while <condition pos:start="125:19" pos:end="125:30">(<expr pos:start="125:20" pos:end="125:29"><name pos:start="125:20" pos:end="125:27">n_blocks</name><operator pos:start="125:28" pos:end="125:29">--</operator></expr>)</condition> <block pos:start="125:32" pos:end="129:13">{<block_content pos:start="127:15" pos:end="127:30">

              <expr_stmt pos:start="127:15" pos:end="127:30"><expr pos:start="127:15" pos:end="127:29"><call pos:start="127:15" pos:end="127:29"><name pos:start="127:15" pos:end="127:27">ADVANCE_BLOCK</name><argument_list pos:start="127:28" pos:end="127:29">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></while>

            <break pos:start="131:13" pos:end="131:18">break;</break>



        <comment type="block" pos:start="135:9" pos:end="135:40">/* Fill blocks with one color */</comment>

        <case pos:start="137:9" pos:end="137:18">case <expr pos:start="137:14" pos:end="137:17"><literal type="number" pos:start="137:14" pos:end="137:17">0xa0</literal></expr>:</case>

            <expr_stmt pos:start="139:13" pos:end="139:51"><expr pos:start="139:13" pos:end="139:50"><name pos:start="139:13" pos:end="139:18">colorA</name> <operator pos:start="139:20" pos:end="139:20">=</operator> <call pos:start="139:22" pos:end="139:50"><name pos:start="139:22" pos:end="139:28">AV_RB16</name> <argument_list pos:start="139:30" pos:end="139:50">(<argument pos:start="139:31" pos:end="139:49"><expr pos:start="139:31" pos:end="139:49"><operator pos:start="139:31" pos:end="139:31">&amp;</operator><name pos:start="139:32" pos:end="139:49"><name pos:start="139:32" pos:end="139:32">s</name><operator pos:start="139:33" pos:end="139:34">-&gt;</operator><name pos:start="139:35" pos:end="139:37">buf</name><index pos:start="139:38" pos:end="139:49">[<expr pos:start="139:39" pos:end="139:48"><name pos:start="139:39" pos:end="139:48">stream_ptr</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:28"><expr pos:start="141:13" pos:end="141:27"><name pos:start="141:13" pos:end="141:22">stream_ptr</name> <operator pos:start="141:24" pos:end="141:25">+=</operator> <literal type="number" pos:start="141:27" pos:end="141:27">2</literal></expr>;</expr_stmt>

            <while pos:start="143:13" pos:end="163:13">while <condition pos:start="143:19" pos:end="143:30">(<expr pos:start="143:20" pos:end="143:29"><name pos:start="143:20" pos:end="143:27">n_blocks</name><operator pos:start="143:28" pos:end="143:29">--</operator></expr>)</condition> <block pos:start="143:32" pos:end="163:13">{<block_content pos:start="145:17" pos:end="161:32">

                <expr_stmt pos:start="145:17" pos:end="145:48"><expr pos:start="145:17" pos:end="145:47"><name pos:start="145:17" pos:end="145:25">block_ptr</name> <operator pos:start="145:27" pos:end="145:27">=</operator> <name pos:start="145:29" pos:end="145:35">row_ptr</name> <operator pos:start="145:37" pos:end="145:37">+</operator> <name pos:start="145:39" pos:end="145:47">pixel_ptr</name></expr>;</expr_stmt>

                <for pos:start="147:17" pos:end="159:17">for <control pos:start="147:21" pos:end="147:57">(<init pos:start="147:22" pos:end="147:33"><expr pos:start="147:22" pos:end="147:32"><name pos:start="147:22" pos:end="147:28">pixel_y</name> <operator pos:start="147:30" pos:end="147:30">=</operator> <literal type="number" pos:start="147:32" pos:end="147:32">0</literal></expr>;</init> <condition pos:start="147:35" pos:end="147:46"><expr pos:start="147:35" pos:end="147:45"><name pos:start="147:35" pos:end="147:41">pixel_y</name> <operator pos:start="147:43" pos:end="147:43">&lt;</operator> <literal type="number" pos:start="147:45" pos:end="147:45">4</literal></expr>;</condition> <incr pos:start="147:48" pos:end="147:56"><expr pos:start="147:48" pos:end="147:56"><name pos:start="147:48" pos:end="147:54">pixel_y</name><operator pos:start="147:55" pos:end="147:56">++</operator></expr></incr>)</control> <block pos:start="147:59" pos:end="159:17">{<block_content pos:start="149:21" pos:end="157:41">

                    <for pos:start="149:21" pos:end="155:21">for <control pos:start="149:25" pos:end="149:61">(<init pos:start="149:26" pos:end="149:37"><expr pos:start="149:26" pos:end="149:36"><name pos:start="149:26" pos:end="149:32">pixel_x</name> <operator pos:start="149:34" pos:end="149:34">=</operator> <literal type="number" pos:start="149:36" pos:end="149:36">0</literal></expr>;</init> <condition pos:start="149:39" pos:end="149:50"><expr pos:start="149:39" pos:end="149:49"><name pos:start="149:39" pos:end="149:45">pixel_x</name> <operator pos:start="149:47" pos:end="149:47">&lt;</operator> <literal type="number" pos:start="149:49" pos:end="149:49">4</literal></expr>;</condition> <incr pos:start="149:52" pos:end="149:60"><expr pos:start="149:52" pos:end="149:60"><name pos:start="149:52" pos:end="149:58">pixel_x</name><operator pos:start="149:59" pos:end="149:60">++</operator></expr></incr>)</control><block pos:start="149:62" pos:end="155:21">{<block_content pos:start="151:25" pos:end="153:36">

                        <expr_stmt pos:start="151:25" pos:end="151:51"><expr pos:start="151:25" pos:end="151:50"><name pos:start="151:25" pos:end="151:41"><name pos:start="151:25" pos:end="151:30">pixels</name><index pos:start="151:31" pos:end="151:41">[<expr pos:start="151:32" pos:end="151:40"><name pos:start="151:32" pos:end="151:40">block_ptr</name></expr>]</index></name> <operator pos:start="151:43" pos:end="151:43">=</operator> <name pos:start="151:45" pos:end="151:50">colorA</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="153:25" pos:end="153:36"><expr pos:start="153:25" pos:end="153:35"><name pos:start="153:25" pos:end="153:33">block_ptr</name><operator pos:start="153:34" pos:end="153:35">++</operator></expr>;</expr_stmt>

                    </block_content>}</block></for>

                    <expr_stmt pos:start="157:21" pos:end="157:41"><expr pos:start="157:21" pos:end="157:40"><name pos:start="157:21" pos:end="157:29">block_ptr</name> <operator pos:start="157:31" pos:end="157:32">+=</operator> <name pos:start="157:34" pos:end="157:40">row_inc</name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="161:17" pos:end="161:32"><expr pos:start="161:17" pos:end="161:31"><call pos:start="161:17" pos:end="161:31"><name pos:start="161:17" pos:end="161:29">ADVANCE_BLOCK</name><argument_list pos:start="161:30" pos:end="161:31">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></while>

            <break pos:start="165:13" pos:end="165:18">break;</break>



        <comment type="block" pos:start="169:9" pos:end="169:39">/* Fill blocks with 4 colors */</comment>

        <case pos:start="171:9" pos:end="171:18">case <expr pos:start="171:14" pos:end="171:17"><literal type="number" pos:start="171:14" pos:end="171:17">0xc0</literal></expr>:</case>

            <expr_stmt pos:start="173:13" pos:end="173:51"><expr pos:start="173:13" pos:end="173:50"><name pos:start="173:13" pos:end="173:18">colorA</name> <operator pos:start="173:20" pos:end="173:20">=</operator> <call pos:start="173:22" pos:end="173:50"><name pos:start="173:22" pos:end="173:28">AV_RB16</name> <argument_list pos:start="173:30" pos:end="173:50">(<argument pos:start="173:31" pos:end="173:49"><expr pos:start="173:31" pos:end="173:49"><operator pos:start="173:31" pos:end="173:31">&amp;</operator><name pos:start="173:32" pos:end="173:49"><name pos:start="173:32" pos:end="173:32">s</name><operator pos:start="173:33" pos:end="173:34">-&gt;</operator><name pos:start="173:35" pos:end="173:37">buf</name><index pos:start="173:38" pos:end="173:49">[<expr pos:start="173:39" pos:end="173:48"><name pos:start="173:39" pos:end="173:48">stream_ptr</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:28"><expr pos:start="175:13" pos:end="175:27"><name pos:start="175:13" pos:end="175:22">stream_ptr</name> <operator pos:start="175:24" pos:end="175:25">+=</operator> <literal type="number" pos:start="175:27" pos:end="175:27">2</literal></expr>;</expr_stmt>

        <case pos:start="177:9" pos:end="177:18">case <expr pos:start="177:14" pos:end="177:17"><literal type="number" pos:start="177:14" pos:end="177:17">0x20</literal></expr>:</case>

            <expr_stmt pos:start="179:13" pos:end="179:51"><expr pos:start="179:13" pos:end="179:50"><name pos:start="179:13" pos:end="179:18">colorB</name> <operator pos:start="179:20" pos:end="179:20">=</operator> <call pos:start="179:22" pos:end="179:50"><name pos:start="179:22" pos:end="179:28">AV_RB16</name> <argument_list pos:start="179:30" pos:end="179:50">(<argument pos:start="179:31" pos:end="179:49"><expr pos:start="179:31" pos:end="179:49"><operator pos:start="179:31" pos:end="179:31">&amp;</operator><name pos:start="179:32" pos:end="179:49"><name pos:start="179:32" pos:end="179:32">s</name><operator pos:start="179:33" pos:end="179:34">-&gt;</operator><name pos:start="179:35" pos:end="179:37">buf</name><index pos:start="179:38" pos:end="179:49">[<expr pos:start="179:39" pos:end="179:48"><name pos:start="179:39" pos:end="179:48">stream_ptr</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:28"><expr pos:start="181:13" pos:end="181:27"><name pos:start="181:13" pos:end="181:22">stream_ptr</name> <operator pos:start="181:24" pos:end="181:25">+=</operator> <literal type="number" pos:start="181:27" pos:end="181:27">2</literal></expr>;</expr_stmt>



            <comment type="block" pos:start="185:13" pos:end="185:37">/* sort out the colors */</comment>

            <expr_stmt pos:start="187:13" pos:end="187:31"><expr pos:start="187:13" pos:end="187:30"><name pos:start="187:13" pos:end="187:21"><name pos:start="187:13" pos:end="187:18">color4</name><index pos:start="187:19" pos:end="187:21">[<expr pos:start="187:20" pos:end="187:20"><literal type="number" pos:start="187:20" pos:end="187:20">0</literal></expr>]</index></name> <operator pos:start="187:23" pos:end="187:23">=</operator> <name pos:start="187:25" pos:end="187:30">colorB</name></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:26"><expr pos:start="189:13" pos:end="189:25"><name pos:start="189:13" pos:end="189:21"><name pos:start="189:13" pos:end="189:18">color4</name><index pos:start="189:19" pos:end="189:21">[<expr pos:start="189:20" pos:end="189:20"><literal type="number" pos:start="189:20" pos:end="189:20">1</literal></expr>]</index></name> <operator pos:start="189:23" pos:end="189:23">=</operator> <literal type="number" pos:start="189:25" pos:end="189:25">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:26"><expr pos:start="191:13" pos:end="191:25"><name pos:start="191:13" pos:end="191:21"><name pos:start="191:13" pos:end="191:18">color4</name><index pos:start="191:19" pos:end="191:21">[<expr pos:start="191:20" pos:end="191:20"><literal type="number" pos:start="191:20" pos:end="191:20">2</literal></expr>]</index></name> <operator pos:start="191:23" pos:end="191:23">=</operator> <literal type="number" pos:start="191:25" pos:end="191:25">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:31"><expr pos:start="193:13" pos:end="193:30"><name pos:start="193:13" pos:end="193:21"><name pos:start="193:13" pos:end="193:18">color4</name><index pos:start="193:19" pos:end="193:21">[<expr pos:start="193:20" pos:end="193:20"><literal type="number" pos:start="193:20" pos:end="193:20">3</literal></expr>]</index></name> <operator pos:start="193:23" pos:end="193:23">=</operator> <name pos:start="193:25" pos:end="193:30">colorA</name></expr>;</expr_stmt>



            <comment type="block" pos:start="197:13" pos:end="197:32">/* red components */</comment>

            <expr_stmt pos:start="199:13" pos:end="199:39"><expr pos:start="199:13" pos:end="199:38"><name pos:start="199:13" pos:end="199:14">ta</name> <operator pos:start="199:16" pos:end="199:16">=</operator> <operator pos:start="199:18" pos:end="199:18">(</operator><name pos:start="199:19" pos:end="199:24">colorA</name> <operator pos:start="199:26" pos:end="199:27">&gt;&gt;</operator> <literal type="number" pos:start="199:29" pos:end="199:30">10</literal><operator pos:start="199:31" pos:end="199:31">)</operator> <operator pos:start="199:33" pos:end="199:33">&amp;</operator> <literal type="number" pos:start="199:35" pos:end="199:38">0x1F</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:39"><expr pos:start="201:13" pos:end="201:38"><name pos:start="201:13" pos:end="201:14">tb</name> <operator pos:start="201:16" pos:end="201:16">=</operator> <operator pos:start="201:18" pos:end="201:18">(</operator><name pos:start="201:19" pos:end="201:24">colorB</name> <operator pos:start="201:26" pos:end="201:27">&gt;&gt;</operator> <literal type="number" pos:start="201:29" pos:end="201:30">10</literal><operator pos:start="201:31" pos:end="201:31">)</operator> <operator pos:start="201:33" pos:end="201:33">&amp;</operator> <literal type="number" pos:start="201:35" pos:end="201:38">0x1F</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:58"><expr pos:start="203:13" pos:end="203:57"><name pos:start="203:13" pos:end="203:21"><name pos:start="203:13" pos:end="203:18">color4</name><index pos:start="203:19" pos:end="203:21">[<expr pos:start="203:20" pos:end="203:20"><literal type="number" pos:start="203:20" pos:end="203:20">1</literal></expr>]</index></name> <operator pos:start="203:23" pos:end="203:24">|=</operator> <operator pos:start="203:26" pos:end="203:26">(</operator><operator pos:start="203:27" pos:end="203:27">(</operator><literal type="number" pos:start="203:28" pos:end="203:29">11</literal> <operator pos:start="203:31" pos:end="203:31">*</operator> <name pos:start="203:33" pos:end="203:34">ta</name> <operator pos:start="203:36" pos:end="203:36">+</operator> <literal type="number" pos:start="203:38" pos:end="203:39">21</literal> <operator pos:start="203:41" pos:end="203:41">*</operator> <name pos:start="203:43" pos:end="203:44">tb</name><operator pos:start="203:45" pos:end="203:45">)</operator> <operator pos:start="203:47" pos:end="203:48">&gt;&gt;</operator> <literal type="number" pos:start="203:50" pos:end="203:50">5</literal><operator pos:start="203:51" pos:end="203:51">)</operator> <operator pos:start="203:53" pos:end="203:54">&lt;&lt;</operator> <literal type="number" pos:start="203:56" pos:end="203:57">10</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:58"><expr pos:start="205:13" pos:end="205:57"><name pos:start="205:13" pos:end="205:21"><name pos:start="205:13" pos:end="205:18">color4</name><index pos:start="205:19" pos:end="205:21">[<expr pos:start="205:20" pos:end="205:20"><literal type="number" pos:start="205:20" pos:end="205:20">2</literal></expr>]</index></name> <operator pos:start="205:23" pos:end="205:24">|=</operator> <operator pos:start="205:26" pos:end="205:26">(</operator><operator pos:start="205:27" pos:end="205:27">(</operator><literal type="number" pos:start="205:28" pos:end="205:29">21</literal> <operator pos:start="205:31" pos:end="205:31">*</operator> <name pos:start="205:33" pos:end="205:34">ta</name> <operator pos:start="205:36" pos:end="205:36">+</operator> <literal type="number" pos:start="205:38" pos:end="205:39">11</literal> <operator pos:start="205:41" pos:end="205:41">*</operator> <name pos:start="205:43" pos:end="205:44">tb</name><operator pos:start="205:45" pos:end="205:45">)</operator> <operator pos:start="205:47" pos:end="205:48">&gt;&gt;</operator> <literal type="number" pos:start="205:50" pos:end="205:50">5</literal><operator pos:start="205:51" pos:end="205:51">)</operator> <operator pos:start="205:53" pos:end="205:54">&lt;&lt;</operator> <literal type="number" pos:start="205:56" pos:end="205:57">10</literal></expr>;</expr_stmt>



            <comment type="block" pos:start="209:13" pos:end="209:34">/* green components */</comment>

            <expr_stmt pos:start="211:13" pos:end="211:38"><expr pos:start="211:13" pos:end="211:37"><name pos:start="211:13" pos:end="211:14">ta</name> <operator pos:start="211:16" pos:end="211:16">=</operator> <operator pos:start="211:18" pos:end="211:18">(</operator><name pos:start="211:19" pos:end="211:24">colorA</name> <operator pos:start="211:26" pos:end="211:27">&gt;&gt;</operator> <literal type="number" pos:start="211:29" pos:end="211:29">5</literal><operator pos:start="211:30" pos:end="211:30">)</operator> <operator pos:start="211:32" pos:end="211:32">&amp;</operator> <literal type="number" pos:start="211:34" pos:end="211:37">0x1F</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:38"><expr pos:start="213:13" pos:end="213:37"><name pos:start="213:13" pos:end="213:14">tb</name> <operator pos:start="213:16" pos:end="213:16">=</operator> <operator pos:start="213:18" pos:end="213:18">(</operator><name pos:start="213:19" pos:end="213:24">colorB</name> <operator pos:start="213:26" pos:end="213:27">&gt;&gt;</operator> <literal type="number" pos:start="213:29" pos:end="213:29">5</literal><operator pos:start="213:30" pos:end="213:30">)</operator> <operator pos:start="213:32" pos:end="213:32">&amp;</operator> <literal type="number" pos:start="213:34" pos:end="213:37">0x1F</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:57"><expr pos:start="215:13" pos:end="215:56"><name pos:start="215:13" pos:end="215:21"><name pos:start="215:13" pos:end="215:18">color4</name><index pos:start="215:19" pos:end="215:21">[<expr pos:start="215:20" pos:end="215:20"><literal type="number" pos:start="215:20" pos:end="215:20">1</literal></expr>]</index></name> <operator pos:start="215:23" pos:end="215:24">|=</operator> <operator pos:start="215:26" pos:end="215:26">(</operator><operator pos:start="215:27" pos:end="215:27">(</operator><literal type="number" pos:start="215:28" pos:end="215:29">11</literal> <operator pos:start="215:31" pos:end="215:31">*</operator> <name pos:start="215:33" pos:end="215:34">ta</name> <operator pos:start="215:36" pos:end="215:36">+</operator> <literal type="number" pos:start="215:38" pos:end="215:39">21</literal> <operator pos:start="215:41" pos:end="215:41">*</operator> <name pos:start="215:43" pos:end="215:44">tb</name><operator pos:start="215:45" pos:end="215:45">)</operator> <operator pos:start="215:47" pos:end="215:48">&gt;&gt;</operator> <literal type="number" pos:start="215:50" pos:end="215:50">5</literal><operator pos:start="215:51" pos:end="215:51">)</operator> <operator pos:start="215:53" pos:end="215:54">&lt;&lt;</operator> <literal type="number" pos:start="215:56" pos:end="215:56">5</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:57"><expr pos:start="217:13" pos:end="217:56"><name pos:start="217:13" pos:end="217:21"><name pos:start="217:13" pos:end="217:18">color4</name><index pos:start="217:19" pos:end="217:21">[<expr pos:start="217:20" pos:end="217:20"><literal type="number" pos:start="217:20" pos:end="217:20">2</literal></expr>]</index></name> <operator pos:start="217:23" pos:end="217:24">|=</operator> <operator pos:start="217:26" pos:end="217:26">(</operator><operator pos:start="217:27" pos:end="217:27">(</operator><literal type="number" pos:start="217:28" pos:end="217:29">21</literal> <operator pos:start="217:31" pos:end="217:31">*</operator> <name pos:start="217:33" pos:end="217:34">ta</name> <operator pos:start="217:36" pos:end="217:36">+</operator> <literal type="number" pos:start="217:38" pos:end="217:39">11</literal> <operator pos:start="217:41" pos:end="217:41">*</operator> <name pos:start="217:43" pos:end="217:44">tb</name><operator pos:start="217:45" pos:end="217:45">)</operator> <operator pos:start="217:47" pos:end="217:48">&gt;&gt;</operator> <literal type="number" pos:start="217:50" pos:end="217:50">5</literal><operator pos:start="217:51" pos:end="217:51">)</operator> <operator pos:start="217:53" pos:end="217:54">&lt;&lt;</operator> <literal type="number" pos:start="217:56" pos:end="217:56">5</literal></expr>;</expr_stmt>



            <comment type="block" pos:start="221:13" pos:end="221:33">/* blue components */</comment>

            <expr_stmt pos:start="223:13" pos:end="223:31"><expr pos:start="223:13" pos:end="223:30"><name pos:start="223:13" pos:end="223:14">ta</name> <operator pos:start="223:16" pos:end="223:16">=</operator> <name pos:start="223:18" pos:end="223:23">colorA</name> <operator pos:start="223:25" pos:end="223:25">&amp;</operator> <literal type="number" pos:start="223:27" pos:end="223:30">0x1F</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:31"><expr pos:start="225:13" pos:end="225:30"><name pos:start="225:13" pos:end="225:14">tb</name> <operator pos:start="225:16" pos:end="225:16">=</operator> <name pos:start="225:18" pos:end="225:23">colorB</name> <operator pos:start="225:25" pos:end="225:25">&amp;</operator> <literal type="number" pos:start="225:27" pos:end="225:30">0x1F</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:52"><expr pos:start="227:13" pos:end="227:51"><name pos:start="227:13" pos:end="227:21"><name pos:start="227:13" pos:end="227:18">color4</name><index pos:start="227:19" pos:end="227:21">[<expr pos:start="227:20" pos:end="227:20"><literal type="number" pos:start="227:20" pos:end="227:20">1</literal></expr>]</index></name> <operator pos:start="227:23" pos:end="227:24">|=</operator> <operator pos:start="227:26" pos:end="227:26">(</operator><operator pos:start="227:27" pos:end="227:27">(</operator><literal type="number" pos:start="227:28" pos:end="227:29">11</literal> <operator pos:start="227:31" pos:end="227:31">*</operator> <name pos:start="227:33" pos:end="227:34">ta</name> <operator pos:start="227:36" pos:end="227:36">+</operator> <literal type="number" pos:start="227:38" pos:end="227:39">21</literal> <operator pos:start="227:41" pos:end="227:41">*</operator> <name pos:start="227:43" pos:end="227:44">tb</name><operator pos:start="227:45" pos:end="227:45">)</operator> <operator pos:start="227:47" pos:end="227:48">&gt;&gt;</operator> <literal type="number" pos:start="227:50" pos:end="227:50">5</literal><operator pos:start="227:51" pos:end="227:51">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="229:13" pos:end="229:52"><expr pos:start="229:13" pos:end="229:51"><name pos:start="229:13" pos:end="229:21"><name pos:start="229:13" pos:end="229:18">color4</name><index pos:start="229:19" pos:end="229:21">[<expr pos:start="229:20" pos:end="229:20"><literal type="number" pos:start="229:20" pos:end="229:20">2</literal></expr>]</index></name> <operator pos:start="229:23" pos:end="229:24">|=</operator> <operator pos:start="229:26" pos:end="229:26">(</operator><operator pos:start="229:27" pos:end="229:27">(</operator><literal type="number" pos:start="229:28" pos:end="229:29">21</literal> <operator pos:start="229:31" pos:end="229:31">*</operator> <name pos:start="229:33" pos:end="229:34">ta</name> <operator pos:start="229:36" pos:end="229:36">+</operator> <literal type="number" pos:start="229:38" pos:end="229:39">11</literal> <operator pos:start="229:41" pos:end="229:41">*</operator> <name pos:start="229:43" pos:end="229:44">tb</name><operator pos:start="229:45" pos:end="229:45">)</operator> <operator pos:start="229:47" pos:end="229:48">&gt;&gt;</operator> <literal type="number" pos:start="229:50" pos:end="229:50">5</literal><operator pos:start="229:51" pos:end="229:51">)</operator></expr>;</expr_stmt>





            <while pos:start="235:13" pos:end="259:13">while <condition pos:start="235:19" pos:end="235:30">(<expr pos:start="235:20" pos:end="235:29"><name pos:start="235:20" pos:end="235:27">n_blocks</name><operator pos:start="235:28" pos:end="235:29">--</operator></expr>)</condition> <block pos:start="235:32" pos:end="259:13">{<block_content pos:start="237:17" pos:end="257:32">

                <expr_stmt pos:start="237:17" pos:end="237:48"><expr pos:start="237:17" pos:end="237:47"><name pos:start="237:17" pos:end="237:25">block_ptr</name> <operator pos:start="237:27" pos:end="237:27">=</operator> <name pos:start="237:29" pos:end="237:35">row_ptr</name> <operator pos:start="237:37" pos:end="237:37">+</operator> <name pos:start="237:39" pos:end="237:47">pixel_ptr</name></expr>;</expr_stmt>

                <for pos:start="239:17" pos:end="255:17">for <control pos:start="239:21" pos:end="239:57">(<init pos:start="239:22" pos:end="239:33"><expr pos:start="239:22" pos:end="239:32"><name pos:start="239:22" pos:end="239:28">pixel_y</name> <operator pos:start="239:30" pos:end="239:30">=</operator> <literal type="number" pos:start="239:32" pos:end="239:32">0</literal></expr>;</init> <condition pos:start="239:35" pos:end="239:46"><expr pos:start="239:35" pos:end="239:45"><name pos:start="239:35" pos:end="239:41">pixel_y</name> <operator pos:start="239:43" pos:end="239:43">&lt;</operator> <literal type="number" pos:start="239:45" pos:end="239:45">4</literal></expr>;</condition> <incr pos:start="239:48" pos:end="239:56"><expr pos:start="239:48" pos:end="239:56"><name pos:start="239:48" pos:end="239:54">pixel_y</name><operator pos:start="239:55" pos:end="239:56">++</operator></expr></incr>)</control> <block pos:start="239:59" pos:end="255:17">{<block_content pos:start="241:21" pos:end="253:41">

                    <expr_stmt pos:start="241:21" pos:end="241:49"><expr pos:start="241:21" pos:end="241:48"><name pos:start="241:21" pos:end="241:25">index</name> <operator pos:start="241:27" pos:end="241:27">=</operator> <name pos:start="241:29" pos:end="241:48"><name pos:start="241:29" pos:end="241:29">s</name><operator pos:start="241:30" pos:end="241:31">-&gt;</operator><name pos:start="241:32" pos:end="241:34">buf</name><index pos:start="241:35" pos:end="241:48">[<expr pos:start="241:36" pos:end="241:47"><name pos:start="241:36" pos:end="241:45">stream_ptr</name><operator pos:start="241:46" pos:end="241:47">++</operator></expr>]</index></name></expr>;</expr_stmt>

                    <for pos:start="243:21" pos:end="251:21">for <control pos:start="243:25" pos:end="243:61">(<init pos:start="243:26" pos:end="243:37"><expr pos:start="243:26" pos:end="243:36"><name pos:start="243:26" pos:end="243:32">pixel_x</name> <operator pos:start="243:34" pos:end="243:34">=</operator> <literal type="number" pos:start="243:36" pos:end="243:36">0</literal></expr>;</init> <condition pos:start="243:39" pos:end="243:50"><expr pos:start="243:39" pos:end="243:49"><name pos:start="243:39" pos:end="243:45">pixel_x</name> <operator pos:start="243:47" pos:end="243:47">&lt;</operator> <literal type="number" pos:start="243:49" pos:end="243:49">4</literal></expr>;</condition> <incr pos:start="243:52" pos:end="243:60"><expr pos:start="243:52" pos:end="243:60"><name pos:start="243:52" pos:end="243:58">pixel_x</name><operator pos:start="243:59" pos:end="243:60">++</operator></expr></incr>)</control><block pos:start="243:62" pos:end="251:21">{<block_content pos:start="245:25" pos:end="249:36">

                        <expr_stmt pos:start="245:25" pos:end="245:68"><expr pos:start="245:25" pos:end="245:67"><name pos:start="245:25" pos:end="245:27">idx</name> <operator pos:start="245:29" pos:end="245:29">=</operator> <operator pos:start="245:31" pos:end="245:31">(</operator><name pos:start="245:32" pos:end="245:36">index</name> <operator pos:start="245:38" pos:end="245:39">&gt;&gt;</operator> <operator pos:start="245:41" pos:end="245:41">(</operator><literal type="number" pos:start="245:42" pos:end="245:42">2</literal> <operator pos:start="245:44" pos:end="245:44">*</operator> <operator pos:start="245:46" pos:end="245:46">(</operator><literal type="number" pos:start="245:47" pos:end="245:49">3</literal> <operator pos:start="245:49" pos:end="245:49">-</operator> <name pos:start="245:51" pos:end="245:57">pixel_x</name><operator pos:start="245:58" pos:end="245:58">)</operator><operator pos:start="245:59" pos:end="245:59">)</operator><operator pos:start="245:60" pos:end="245:60">)</operator> <operator pos:start="245:62" pos:end="245:62">&amp;</operator> <literal type="number" pos:start="245:64" pos:end="245:67">0x03</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="247:25" pos:end="247:56"><expr pos:start="247:25" pos:end="247:55"><name pos:start="247:25" pos:end="247:41"><name pos:start="247:25" pos:end="247:30">pixels</name><index pos:start="247:31" pos:end="247:41">[<expr pos:start="247:32" pos:end="247:40"><name pos:start="247:32" pos:end="247:40">block_ptr</name></expr>]</index></name> <operator pos:start="247:43" pos:end="247:43">=</operator> <name pos:start="247:45" pos:end="247:55"><name pos:start="247:45" pos:end="247:50">color4</name><index pos:start="247:51" pos:end="247:55">[<expr pos:start="247:52" pos:end="247:54"><name pos:start="247:52" pos:end="247:54">idx</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="249:25" pos:end="249:36"><expr pos:start="249:25" pos:end="249:35"><name pos:start="249:25" pos:end="249:33">block_ptr</name><operator pos:start="249:34" pos:end="249:35">++</operator></expr>;</expr_stmt>

                    </block_content>}</block></for>

                    <expr_stmt pos:start="253:21" pos:end="253:41"><expr pos:start="253:21" pos:end="253:40"><name pos:start="253:21" pos:end="253:29">block_ptr</name> <operator pos:start="253:31" pos:end="253:32">+=</operator> <name pos:start="253:34" pos:end="253:40">row_inc</name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="257:17" pos:end="257:32"><expr pos:start="257:17" pos:end="257:31"><call pos:start="257:17" pos:end="257:31"><name pos:start="257:17" pos:end="257:29">ADVANCE_BLOCK</name><argument_list pos:start="257:30" pos:end="257:31">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></while>

            <break pos:start="261:13" pos:end="261:18">break;</break>



        <comment type="block" pos:start="265:9" pos:end="265:39">/* Fill block with 16 colors */</comment>

        <case pos:start="267:9" pos:end="267:18">case <expr pos:start="267:14" pos:end="267:17"><literal type="number" pos:start="267:14" pos:end="267:17">0x00</literal></expr>:</case>

            <if_stmt pos:start="269:13" pos:end="272:44"><if pos:start="269:13" pos:end="272:44">if <condition pos:start="269:16" pos:end="269:42">(<expr pos:start="269:17" pos:end="269:41"><name pos:start="269:17" pos:end="269:23"><name pos:start="269:17" pos:end="269:17">s</name><operator pos:start="269:18" pos:end="269:19">-&gt;</operator><name pos:start="269:20" pos:end="269:23">size</name></name> <operator pos:start="269:25" pos:end="269:25">-</operator> <name pos:start="269:27" pos:end="269:36">stream_ptr</name> <operator pos:start="269:38" pos:end="269:38">&lt;</operator> <literal type="number" pos:start="269:40" pos:end="269:41">16</literal></expr>)</condition><block type="pseudo" pos:start="272:13" pos:end="272:44"><block_content pos:start="272:13" pos:end="272:44">


            <expr_stmt pos:start="272:13" pos:end="272:44"><expr pos:start="272:13" pos:end="272:43"><name pos:start="272:13" pos:end="272:21">block_ptr</name> <operator pos:start="272:23" pos:end="272:23">=</operator> <name pos:start="272:25" pos:end="272:31">row_ptr</name> <operator pos:start="272:33" pos:end="272:33">+</operator> <name pos:start="272:35" pos:end="272:43">pixel_ptr</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <for pos:start="274:13" pos:end="296:13">for <control pos:start="274:17" pos:end="274:53">(<init pos:start="274:18" pos:end="274:29"><expr pos:start="274:18" pos:end="274:28"><name pos:start="274:18" pos:end="274:24">pixel_y</name> <operator pos:start="274:26" pos:end="274:26">=</operator> <literal type="number" pos:start="274:28" pos:end="274:28">0</literal></expr>;</init> <condition pos:start="274:31" pos:end="274:42"><expr pos:start="274:31" pos:end="274:41"><name pos:start="274:31" pos:end="274:37">pixel_y</name> <operator pos:start="274:39" pos:end="274:39">&lt;</operator> <literal type="number" pos:start="274:41" pos:end="274:41">4</literal></expr>;</condition> <incr pos:start="274:44" pos:end="274:52"><expr pos:start="274:44" pos:end="274:52"><name pos:start="274:44" pos:end="274:50">pixel_y</name><operator pos:start="274:51" pos:end="274:52">++</operator></expr></incr>)</control> <block pos:start="274:55" pos:end="296:13">{<block_content pos:start="276:17" pos:end="294:37">

                <for pos:start="276:17" pos:end="292:17">for <control pos:start="276:21" pos:end="276:57">(<init pos:start="276:22" pos:end="276:33"><expr pos:start="276:22" pos:end="276:32"><name pos:start="276:22" pos:end="276:28">pixel_x</name> <operator pos:start="276:30" pos:end="276:30">=</operator> <literal type="number" pos:start="276:32" pos:end="276:32">0</literal></expr>;</init> <condition pos:start="276:35" pos:end="276:46"><expr pos:start="276:35" pos:end="276:45"><name pos:start="276:35" pos:end="276:41">pixel_x</name> <operator pos:start="276:43" pos:end="276:43">&lt;</operator> <literal type="number" pos:start="276:45" pos:end="276:45">4</literal></expr>;</condition> <incr pos:start="276:48" pos:end="276:56"><expr pos:start="276:48" pos:end="276:56"><name pos:start="276:48" pos:end="276:54">pixel_x</name><operator pos:start="276:55" pos:end="276:56">++</operator></expr></incr>)</control><block pos:start="276:58" pos:end="292:17">{<block_content pos:start="280:21" pos:end="290:32">

                    <comment type="block" pos:start="278:21" pos:end="278:67">/* We already have color of upper left pixel */</comment>

                    <if_stmt pos:start="280:21" pos:end="286:21"><if pos:start="280:21" pos:end="286:21">if <condition pos:start="280:24" pos:end="280:56">(<expr pos:start="280:25" pos:end="280:55"><operator pos:start="280:25" pos:end="280:25">(</operator><name pos:start="280:26" pos:end="280:32">pixel_y</name> <operator pos:start="280:34" pos:end="280:35">!=</operator> <literal type="number" pos:start="280:37" pos:end="280:37">0</literal><operator pos:start="280:38" pos:end="280:38">)</operator> <operator pos:start="280:40" pos:end="280:41">||</operator> <operator pos:start="280:43" pos:end="280:43">(</operator><name pos:start="280:44" pos:end="280:50">pixel_x</name> <operator pos:start="280:52" pos:end="280:53">!=</operator><literal type="number" pos:start="280:54" pos:end="280:54">0</literal><operator pos:start="280:55" pos:end="280:55">)</operator></expr>)</condition> <block pos:start="280:58" pos:end="286:21">{<block_content pos:start="282:25" pos:end="284:40">

                        <expr_stmt pos:start="282:25" pos:end="282:63"><expr pos:start="282:25" pos:end="282:62"><name pos:start="282:25" pos:end="282:30">colorA</name> <operator pos:start="282:32" pos:end="282:32">=</operator> <call pos:start="282:34" pos:end="282:62"><name pos:start="282:34" pos:end="282:40">AV_RB16</name> <argument_list pos:start="282:42" pos:end="282:62">(<argument pos:start="282:43" pos:end="282:61"><expr pos:start="282:43" pos:end="282:61"><operator pos:start="282:43" pos:end="282:43">&amp;</operator><name pos:start="282:44" pos:end="282:61"><name pos:start="282:44" pos:end="282:44">s</name><operator pos:start="282:45" pos:end="282:46">-&gt;</operator><name pos:start="282:47" pos:end="282:49">buf</name><index pos:start="282:50" pos:end="282:61">[<expr pos:start="282:51" pos:end="282:60"><name pos:start="282:51" pos:end="282:60">stream_ptr</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="284:25" pos:end="284:40"><expr pos:start="284:25" pos:end="284:39"><name pos:start="284:25" pos:end="284:34">stream_ptr</name> <operator pos:start="284:36" pos:end="284:37">+=</operator> <literal type="number" pos:start="284:39" pos:end="284:39">2</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="288:21" pos:end="288:47"><expr pos:start="288:21" pos:end="288:46"><name pos:start="288:21" pos:end="288:37"><name pos:start="288:21" pos:end="288:26">pixels</name><index pos:start="288:27" pos:end="288:37">[<expr pos:start="288:28" pos:end="288:36"><name pos:start="288:28" pos:end="288:36">block_ptr</name></expr>]</index></name> <operator pos:start="288:39" pos:end="288:39">=</operator> <name pos:start="288:41" pos:end="288:46">colorA</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="290:21" pos:end="290:32"><expr pos:start="290:21" pos:end="290:31"><name pos:start="290:21" pos:end="290:29">block_ptr</name><operator pos:start="290:30" pos:end="290:31">++</operator></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="294:17" pos:end="294:37"><expr pos:start="294:17" pos:end="294:36"><name pos:start="294:17" pos:end="294:25">block_ptr</name> <operator pos:start="294:27" pos:end="294:28">+=</operator> <name pos:start="294:30" pos:end="294:36">row_inc</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="298:13" pos:end="298:28"><expr pos:start="298:13" pos:end="298:27"><call pos:start="298:13" pos:end="298:27"><name pos:start="298:13" pos:end="298:25">ADVANCE_BLOCK</name><argument_list pos:start="298:26" pos:end="298:27">()</argument_list></call></expr>;</expr_stmt>

            <break pos:start="300:13" pos:end="300:18">break;</break>



        <comment type="block" pos:start="304:9" pos:end="304:28">/* Unknown opcode */</comment>

        <default pos:start="306:9" pos:end="306:16">default:</default>

            <expr_stmt pos:start="308:13" pos:end="312:42"><expr pos:start="308:13" pos:end="312:41"><call pos:start="308:13" pos:end="312:41"><name pos:start="308:13" pos:end="308:18">av_log</name><argument_list pos:start="308:19" pos:end="312:41">(<argument pos:start="308:20" pos:end="308:27"><expr pos:start="308:20" pos:end="308:27"><name pos:start="308:20" pos:end="308:27"><name pos:start="308:20" pos:end="308:20">s</name><operator pos:start="308:21" pos:end="308:22">-&gt;</operator><name pos:start="308:23" pos:end="308:27">avctx</name></name></expr></argument>, <argument pos:start="308:30" pos:end="308:41"><expr pos:start="308:30" pos:end="308:41"><name pos:start="308:30" pos:end="308:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="308:44" pos:end="310:60"><expr pos:start="308:44" pos:end="310:60"><literal type="string" pos:start="308:44" pos:end="308:77">"Unknown opcode %d in rpza chunk."</literal>

                 <literal type="string" pos:start="310:18" pos:end="310:60">" Skip remaining %d bytes of chunk data.\n"</literal></expr></argument>, <argument pos:start="310:63" pos:end="310:68"><expr pos:start="310:63" pos:end="310:68"><name pos:start="310:63" pos:end="310:68">opcode</name></expr></argument>,

                 <argument pos:start="312:18" pos:end="312:40"><expr pos:start="312:18" pos:end="312:40"><name pos:start="312:18" pos:end="312:27">chunk_size</name> <operator pos:start="312:29" pos:end="312:29">-</operator> <name pos:start="312:31" pos:end="312:40">stream_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        </block_content>}</block></switch> <comment type="block" pos:start="315:11" pos:end="315:29">/* Opcode switch */</comment>

    </block_content>}</block></while>

</block_content>}</block></function></unit>
