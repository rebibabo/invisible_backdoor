<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10858.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:65"><name pos:start="1:1" pos:end="1:22">cpu_x86_dump_seg_cache</name><argument_list pos:start="1:23" pos:end="3:65">(<argument pos:start="1:24" pos:end="1:39">CPUX86State *env</argument>, <argument pos:start="1:42" pos:end="1:48">FILE *f</argument>, <argument pos:start="1:51" pos:end="1:78">fprintf_function cpu_fprintf</argument>,

                       <argument pos:start="3:24" pos:end="3:39">const char *name</argument>, <argument pos:start="3:42" pos:end="3:64">struct SegmentCache *sc</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="105:1">{<block_content pos:start="9:5" pos:end="103:25">

<cpp:ifdef pos:start="7:1" pos:end="7:20">#<cpp:directive pos:start="7:2" pos:end="7:6">ifdef</cpp:directive> <name pos:start="7:8" pos:end="7:20">TARGET_X86_64</name></cpp:ifdef>

    <if_stmt pos:start="9:5" pos:end="25:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:35">(<expr pos:start="9:9" pos:end="9:34"><name pos:start="9:9" pos:end="9:19"><name pos:start="9:9" pos:end="9:11">env</name><operator pos:start="9:12" pos:end="9:13">-&gt;</operator><name pos:start="9:14" pos:end="9:19">hflags</name></name> <operator pos:start="9:21" pos:end="9:21">&amp;</operator> <name pos:start="9:23" pos:end="9:34">HF_CS64_MASK</name></expr>)</condition> <block pos:start="9:37" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:79">

        <expr_stmt pos:start="11:9" pos:end="13:79"><expr pos:start="11:9" pos:end="13:78"><call pos:start="11:9" pos:end="13:78"><name pos:start="11:9" pos:end="11:19">cpu_fprintf</name><argument_list pos:start="11:20" pos:end="13:78">(<argument pos:start="11:21" pos:end="11:21"><expr pos:start="11:21" pos:end="11:21"><name pos:start="11:21" pos:end="11:21">f</name></expr></argument>, <argument pos:start="11:24" pos:end="11:59"><expr pos:start="11:24" pos:end="11:59"><literal type="string" pos:start="11:24" pos:end="11:39">"%-3s=%04x %016"</literal> <name pos:start="11:41" pos:end="11:46">PRIx64</name> <literal type="string" pos:start="11:48" pos:end="11:59">" %08x %08x"</literal></expr></argument>, <argument pos:start="11:62" pos:end="11:65"><expr pos:start="11:62" pos:end="11:65"><name pos:start="11:62" pos:end="11:65">name</name></expr></argument>,

                    <argument pos:start="13:21" pos:end="13:32"><expr pos:start="13:21" pos:end="13:32"><name pos:start="13:21" pos:end="13:32"><name pos:start="13:21" pos:end="13:22">sc</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:32">selector</name></name></expr></argument>, <argument pos:start="13:35" pos:end="13:42"><expr pos:start="13:35" pos:end="13:42"><name pos:start="13:35" pos:end="13:42"><name pos:start="13:35" pos:end="13:36">sc</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:42">base</name></name></expr></argument>, <argument pos:start="13:45" pos:end="13:53"><expr pos:start="13:45" pos:end="13:53"><name pos:start="13:45" pos:end="13:53"><name pos:start="13:45" pos:end="13:46">sc</name><operator pos:start="13:47" pos:end="13:48">-&gt;</operator><name pos:start="13:49" pos:end="13:53">limit</name></name></expr></argument>, <argument pos:start="13:56" pos:end="13:77"><expr pos:start="13:56" pos:end="13:77"><name pos:start="13:56" pos:end="13:64"><name pos:start="13:56" pos:end="13:57">sc</name><operator pos:start="13:58" pos:end="13:59">-&gt;</operator><name pos:start="13:60" pos:end="13:64">flags</name></name> <operator pos:start="13:66" pos:end="13:66">&amp;</operator> <literal type="number" pos:start="13:68" pos:end="13:77">0x00ffff00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="15:7" pos:end="25:5">else

<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif>

    <block pos:start="19:5" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:75">

        <expr_stmt pos:start="21:9" pos:end="23:75"><expr pos:start="21:9" pos:end="23:74"><call pos:start="21:9" pos:end="23:74"><name pos:start="21:9" pos:end="21:19">cpu_fprintf</name><argument_list pos:start="21:20" pos:end="23:74">(<argument pos:start="21:21" pos:end="21:21"><expr pos:start="21:21" pos:end="21:21"><name pos:start="21:21" pos:end="21:21">f</name></expr></argument>, <argument pos:start="21:24" pos:end="21:49"><expr pos:start="21:24" pos:end="21:49"><literal type="string" pos:start="21:24" pos:end="21:49">"%-3s=%04x %08x %08x %08x"</literal></expr></argument>, <argument pos:start="21:52" pos:end="21:55"><expr pos:start="21:52" pos:end="21:55"><name pos:start="21:52" pos:end="21:55">name</name></expr></argument>, <argument pos:start="21:58" pos:end="21:69"><expr pos:start="21:58" pos:end="21:69"><name pos:start="21:58" pos:end="21:69"><name pos:start="21:58" pos:end="21:59">sc</name><operator pos:start="21:60" pos:end="21:61">-&gt;</operator><name pos:start="21:62" pos:end="21:69">selector</name></name></expr></argument>,

                    <argument pos:start="23:21" pos:end="23:38"><expr pos:start="23:21" pos:end="23:38"><operator pos:start="23:21" pos:end="23:21">(</operator><name pos:start="23:22" pos:end="23:29">uint32_t</name><operator pos:start="23:30" pos:end="23:30">)</operator><name pos:start="23:31" pos:end="23:38"><name pos:start="23:31" pos:end="23:32">sc</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:38">base</name></name></expr></argument>, <argument pos:start="23:41" pos:end="23:49"><expr pos:start="23:41" pos:end="23:49"><name pos:start="23:41" pos:end="23:49"><name pos:start="23:41" pos:end="23:42">sc</name><operator pos:start="23:43" pos:end="23:44">-&gt;</operator><name pos:start="23:45" pos:end="23:49">limit</name></name></expr></argument>, <argument pos:start="23:52" pos:end="23:73"><expr pos:start="23:52" pos:end="23:73"><name pos:start="23:52" pos:end="23:60"><name pos:start="23:52" pos:end="23:53">sc</name><operator pos:start="23:54" pos:end="23:55">-&gt;</operator><name pos:start="23:56" pos:end="23:60">flags</name></name> <operator pos:start="23:62" pos:end="23:62">&amp;</operator> <literal type="number" pos:start="23:64" pos:end="23:73">0x00ffff00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="29:5" pos:end="31:18"><if pos:start="29:5" pos:end="31:18">if <condition pos:start="29:8" pos:end="29:66">(<expr pos:start="29:9" pos:end="29:65"><operator pos:start="29:9" pos:end="29:9">!</operator><operator pos:start="29:10" pos:end="29:10">(</operator><name pos:start="29:11" pos:end="29:21"><name pos:start="29:11" pos:end="29:13">env</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:21">hflags</name></name> <operator pos:start="29:23" pos:end="29:23">&amp;</operator> <name pos:start="29:25" pos:end="29:34">HF_PE_MASK</name><operator pos:start="29:35" pos:end="29:35">)</operator> <operator pos:start="29:37" pos:end="29:38">||</operator> <operator pos:start="29:40" pos:end="29:40">!</operator><operator pos:start="29:41" pos:end="29:41">(</operator><name pos:start="29:42" pos:end="29:50"><name pos:start="29:42" pos:end="29:43">sc</name><operator pos:start="29:44" pos:end="29:45">-&gt;</operator><name pos:start="29:46" pos:end="29:50">flags</name></name> <operator pos:start="29:52" pos:end="29:52">&amp;</operator> <name pos:start="29:54" pos:end="29:64">DESC_P_MASK</name><operator pos:start="29:65" pos:end="29:65">)</operator></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:18"><block_content pos:start="31:9" pos:end="31:18">

        <goto pos:start="31:9" pos:end="31:18">goto <name pos:start="31:14" pos:end="31:17">done</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:78"><expr pos:start="35:5" pos:end="35:77"><call pos:start="35:5" pos:end="35:77"><name pos:start="35:5" pos:end="35:15">cpu_fprintf</name><argument_list pos:start="35:16" pos:end="35:77">(<argument pos:start="35:17" pos:end="35:17"><expr pos:start="35:17" pos:end="35:17"><name pos:start="35:17" pos:end="35:17">f</name></expr></argument>, <argument pos:start="35:20" pos:end="35:29"><expr pos:start="35:20" pos:end="35:29"><literal type="string" pos:start="35:20" pos:end="35:29">" DPL=%d "</literal></expr></argument>, <argument pos:start="35:32" pos:end="35:76"><expr pos:start="35:32" pos:end="35:76"><operator pos:start="35:32" pos:end="35:32">(</operator><name pos:start="35:33" pos:end="35:41"><name pos:start="35:33" pos:end="35:34">sc</name><operator pos:start="35:35" pos:end="35:36">-&gt;</operator><name pos:start="35:37" pos:end="35:41">flags</name></name> <operator pos:start="35:43" pos:end="35:43">&amp;</operator> <name pos:start="35:45" pos:end="35:57">DESC_DPL_MASK</name><operator pos:start="35:58" pos:end="35:58">)</operator> <operator pos:start="35:60" pos:end="35:61">&gt;&gt;</operator> <name pos:start="35:63" pos:end="35:76">DESC_DPL_SHIFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="99:5"><if pos:start="37:5" pos:end="61:5">if <condition pos:start="37:8" pos:end="37:32">(<expr pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:10">sc</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:17">flags</name></name> <operator pos:start="37:19" pos:end="37:19">&amp;</operator> <name pos:start="37:21" pos:end="37:31">DESC_S_MASK</name></expr>)</condition> <block pos:start="37:34" pos:end="61:5">{<block_content pos:start="39:9" pos:end="59:69">

        <if_stmt pos:start="39:9" pos:end="57:9"><if pos:start="39:9" pos:end="49:9">if <condition pos:start="39:12" pos:end="39:37">(<expr pos:start="39:13" pos:end="39:36"><name pos:start="39:13" pos:end="39:21"><name pos:start="39:13" pos:end="39:14">sc</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:21">flags</name></name> <operator pos:start="39:23" pos:end="39:23">&amp;</operator> <name pos:start="39:25" pos:end="39:36">DESC_CS_MASK</name></expr>)</condition> <block pos:start="39:39" pos:end="49:9">{<block_content pos:start="41:13" pos:end="47:63">

            <expr_stmt pos:start="41:13" pos:end="43:74"><expr pos:start="41:13" pos:end="43:73"><call pos:start="41:13" pos:end="43:73"><name pos:start="41:13" pos:end="41:23">cpu_fprintf</name><argument_list pos:start="41:24" pos:end="43:73">(<argument pos:start="41:25" pos:end="41:25"><expr pos:start="41:25" pos:end="41:25"><name pos:start="41:25" pos:end="41:25">f</name></expr></argument>, <argument pos:start="41:28" pos:end="43:72"><expr pos:start="41:28" pos:end="43:72"><ternary pos:start="41:28" pos:end="43:72"><condition pos:start="41:28" pos:end="41:54"><expr pos:start="41:28" pos:end="41:52"><operator pos:start="41:28" pos:end="41:28">(</operator><name pos:start="41:29" pos:end="41:37"><name pos:start="41:29" pos:end="41:30">sc</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:37">flags</name></name> <operator pos:start="41:39" pos:end="41:39">&amp;</operator> <name pos:start="41:41" pos:end="41:51">DESC_L_MASK</name><operator pos:start="41:52" pos:end="41:52">)</operator></expr> ?</condition><then pos:start="41:56" pos:end="41:61"> <expr pos:start="41:56" pos:end="41:61"><literal type="string" pos:start="41:56" pos:end="41:61">"CS64"</literal></expr> </then><else pos:start="41:63" pos:end="43:72">:

                           <expr pos:start="43:28" pos:end="43:72"><operator pos:start="43:28" pos:end="43:28">(</operator><ternary pos:start="43:29" pos:end="43:71"><condition pos:start="43:29" pos:end="43:55"><expr pos:start="43:29" pos:end="43:53"><operator pos:start="43:29" pos:end="43:29">(</operator><name pos:start="43:30" pos:end="43:38"><name pos:start="43:30" pos:end="43:31">sc</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:38">flags</name></name> <operator pos:start="43:40" pos:end="43:40">&amp;</operator> <name pos:start="43:42" pos:end="43:52">DESC_B_MASK</name><operator pos:start="43:53" pos:end="43:53">)</operator></expr> ?</condition><then pos:start="43:57" pos:end="43:62"> <expr pos:start="43:57" pos:end="43:62"><literal type="string" pos:start="43:57" pos:end="43:62">"CS32"</literal></expr> </then><else pos:start="43:64" pos:end="43:71">: <expr pos:start="43:66" pos:end="43:71"><literal type="string" pos:start="43:66" pos:end="43:71">"CS16"</literal></expr></else></ternary><operator pos:start="43:72" pos:end="43:72">)</operator></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="47:63"><expr pos:start="45:13" pos:end="47:62"><call pos:start="45:13" pos:end="47:62"><name pos:start="45:13" pos:end="45:23">cpu_fprintf</name><argument_list pos:start="45:24" pos:end="47:62">(<argument pos:start="45:25" pos:end="45:25"><expr pos:start="45:25" pos:end="45:25"><name pos:start="45:25" pos:end="45:25">f</name></expr></argument>, <argument pos:start="45:28" pos:end="45:35"><expr pos:start="45:28" pos:end="45:35"><literal type="string" pos:start="45:28" pos:end="45:35">" [%c%c"</literal></expr></argument>, <argument pos:start="45:38" pos:end="45:74"><expr pos:start="45:38" pos:end="45:74"><ternary pos:start="45:38" pos:end="45:74"><condition pos:start="45:38" pos:end="45:64"><expr pos:start="45:38" pos:end="45:62"><operator pos:start="45:38" pos:end="45:38">(</operator><name pos:start="45:39" pos:end="45:47"><name pos:start="45:39" pos:end="45:40">sc</name><operator pos:start="45:41" pos:end="45:42">-&gt;</operator><name pos:start="45:43" pos:end="45:47">flags</name></name> <operator pos:start="45:49" pos:end="45:49">&amp;</operator> <name pos:start="45:51" pos:end="45:61">DESC_C_MASK</name><operator pos:start="45:62" pos:end="45:62">)</operator></expr> ?</condition><then pos:start="45:66" pos:end="45:68"> <expr pos:start="45:66" pos:end="45:68"><literal type="char" pos:start="45:66" pos:end="45:68">'C'</literal></expr> </then><else pos:start="45:70" pos:end="45:74">: <expr pos:start="45:72" pos:end="45:74"><literal type="char" pos:start="45:72" pos:end="45:74">'-'</literal></expr></else></ternary></expr></argument>,

                        <argument pos:start="47:25" pos:end="47:61"><expr pos:start="47:25" pos:end="47:61"><ternary pos:start="47:25" pos:end="47:61"><condition pos:start="47:25" pos:end="47:51"><expr pos:start="47:25" pos:end="47:49"><operator pos:start="47:25" pos:end="47:25">(</operator><name pos:start="47:26" pos:end="47:34"><name pos:start="47:26" pos:end="47:27">sc</name><operator pos:start="47:28" pos:end="47:29">-&gt;</operator><name pos:start="47:30" pos:end="47:34">flags</name></name> <operator pos:start="47:36" pos:end="47:36">&amp;</operator> <name pos:start="47:38" pos:end="47:48">DESC_R_MASK</name><operator pos:start="47:49" pos:end="47:49">)</operator></expr> ?</condition><then pos:start="47:53" pos:end="47:55"> <expr pos:start="47:53" pos:end="47:55"><literal type="char" pos:start="47:53" pos:end="47:55">'R'</literal></expr> </then><else pos:start="47:57" pos:end="47:61">: <expr pos:start="47:59" pos:end="47:61"><literal type="char" pos:start="47:59" pos:end="47:61">'-'</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="49:11" pos:end="57:9">else <block pos:start="49:16" pos:end="57:9">{<block_content pos:start="51:13" pos:end="55:63">

            <expr_stmt pos:start="51:13" pos:end="51:72"><expr pos:start="51:13" pos:end="51:71"><call pos:start="51:13" pos:end="51:71"><name pos:start="51:13" pos:end="51:23">cpu_fprintf</name><argument_list pos:start="51:24" pos:end="51:71">(<argument pos:start="51:25" pos:end="51:25"><expr pos:start="51:25" pos:end="51:25"><name pos:start="51:25" pos:end="51:25">f</name></expr></argument>, <argument pos:start="51:28" pos:end="51:70"><expr pos:start="51:28" pos:end="51:70"><ternary pos:start="51:28" pos:end="51:70"><condition pos:start="51:28" pos:end="51:54"><expr pos:start="51:28" pos:end="51:52"><operator pos:start="51:28" pos:end="51:28">(</operator><name pos:start="51:29" pos:end="51:37"><name pos:start="51:29" pos:end="51:30">sc</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:37">flags</name></name> <operator pos:start="51:39" pos:end="51:39">&amp;</operator> <name pos:start="51:41" pos:end="51:51">DESC_B_MASK</name><operator pos:start="51:52" pos:end="51:52">)</operator></expr> ?</condition><then pos:start="51:56" pos:end="51:61"> <expr pos:start="51:56" pos:end="51:61"><literal type="string" pos:start="51:56" pos:end="51:61">"DS  "</literal></expr> </then><else pos:start="51:63" pos:end="51:70">: <expr pos:start="51:65" pos:end="51:70"><literal type="string" pos:start="51:65" pos:end="51:70">"DS16"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="55:63"><expr pos:start="53:13" pos:end="55:62"><call pos:start="53:13" pos:end="55:62"><name pos:start="53:13" pos:end="53:23">cpu_fprintf</name><argument_list pos:start="53:24" pos:end="55:62">(<argument pos:start="53:25" pos:end="53:25"><expr pos:start="53:25" pos:end="53:25"><name pos:start="53:25" pos:end="53:25">f</name></expr></argument>, <argument pos:start="53:28" pos:end="53:35"><expr pos:start="53:28" pos:end="53:35"><literal type="string" pos:start="53:28" pos:end="53:35">" [%c%c"</literal></expr></argument>, <argument pos:start="53:38" pos:end="53:74"><expr pos:start="53:38" pos:end="53:74"><ternary pos:start="53:38" pos:end="53:74"><condition pos:start="53:38" pos:end="53:64"><expr pos:start="53:38" pos:end="53:62"><operator pos:start="53:38" pos:end="53:38">(</operator><name pos:start="53:39" pos:end="53:47"><name pos:start="53:39" pos:end="53:40">sc</name><operator pos:start="53:41" pos:end="53:42">-&gt;</operator><name pos:start="53:43" pos:end="53:47">flags</name></name> <operator pos:start="53:49" pos:end="53:49">&amp;</operator> <name pos:start="53:51" pos:end="53:61">DESC_E_MASK</name><operator pos:start="53:62" pos:end="53:62">)</operator></expr> ?</condition><then pos:start="53:66" pos:end="53:68"> <expr pos:start="53:66" pos:end="53:68"><literal type="char" pos:start="53:66" pos:end="53:68">'E'</literal></expr> </then><else pos:start="53:70" pos:end="53:74">: <expr pos:start="53:72" pos:end="53:74"><literal type="char" pos:start="53:72" pos:end="53:74">'-'</literal></expr></else></ternary></expr></argument>,

                        <argument pos:start="55:25" pos:end="55:61"><expr pos:start="55:25" pos:end="55:61"><ternary pos:start="55:25" pos:end="55:61"><condition pos:start="55:25" pos:end="55:51"><expr pos:start="55:25" pos:end="55:49"><operator pos:start="55:25" pos:end="55:25">(</operator><name pos:start="55:26" pos:end="55:34"><name pos:start="55:26" pos:end="55:27">sc</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:34">flags</name></name> <operator pos:start="55:36" pos:end="55:36">&amp;</operator> <name pos:start="55:38" pos:end="55:48">DESC_W_MASK</name><operator pos:start="55:49" pos:end="55:49">)</operator></expr> ?</condition><then pos:start="55:53" pos:end="55:55"> <expr pos:start="55:53" pos:end="55:55"><literal type="char" pos:start="55:53" pos:end="55:55">'W'</literal></expr> </then><else pos:start="55:57" pos:end="55:61">: <expr pos:start="55:59" pos:end="55:61"><literal type="char" pos:start="55:59" pos:end="55:61">'-'</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:69"><expr pos:start="59:9" pos:end="59:68"><call pos:start="59:9" pos:end="59:68"><name pos:start="59:9" pos:end="59:19">cpu_fprintf</name><argument_list pos:start="59:20" pos:end="59:68">(<argument pos:start="59:21" pos:end="59:21"><expr pos:start="59:21" pos:end="59:21"><name pos:start="59:21" pos:end="59:21">f</name></expr></argument>, <argument pos:start="59:24" pos:end="59:28"><expr pos:start="59:24" pos:end="59:28"><literal type="string" pos:start="59:24" pos:end="59:28">"%c]"</literal></expr></argument>, <argument pos:start="59:31" pos:end="59:67"><expr pos:start="59:31" pos:end="59:67"><ternary pos:start="59:31" pos:end="59:67"><condition pos:start="59:31" pos:end="59:57"><expr pos:start="59:31" pos:end="59:55"><operator pos:start="59:31" pos:end="59:31">(</operator><name pos:start="59:32" pos:end="59:40"><name pos:start="59:32" pos:end="59:33">sc</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:40">flags</name></name> <operator pos:start="59:42" pos:end="59:42">&amp;</operator> <name pos:start="59:44" pos:end="59:54">DESC_A_MASK</name><operator pos:start="59:55" pos:end="59:55">)</operator></expr> ?</condition><then pos:start="59:59" pos:end="59:61"> <expr pos:start="59:59" pos:end="59:61"><literal type="char" pos:start="59:59" pos:end="59:61">'A'</literal></expr> </then><else pos:start="59:63" pos:end="59:67">: <expr pos:start="59:65" pos:end="59:67"><literal type="char" pos:start="59:65" pos:end="59:67">'-'</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="61:7" pos:end="99:5">else <block pos:start="61:12" pos:end="99:5">{<block_content pos:start="63:9" pos:end="97:55">

        <decl_stmt pos:start="63:9" pos:end="89:10"><decl pos:start="63:9" pos:end="89:9"><type pos:start="63:9" pos:end="63:27"><specifier pos:start="63:9" pos:end="63:14">static</specifier> <specifier pos:start="63:16" pos:end="63:20">const</specifier> <name pos:start="63:22" pos:end="63:25">char</name> <modifier pos:start="63:27" pos:end="63:27">*</modifier></type><name pos:start="63:28" pos:end="63:47"><name pos:start="63:28" pos:end="63:40">sys_type_name</name><index pos:start="63:41" pos:end="63:43">[<expr pos:start="63:42" pos:end="63:42"><literal type="number" pos:start="63:42" pos:end="63:42">2</literal></expr>]</index><index pos:start="63:44" pos:end="63:47">[<expr pos:start="63:45" pos:end="63:46"><literal type="number" pos:start="63:45" pos:end="63:46">16</literal></expr>]</index></name> <init pos:start="63:49" pos:end="89:9">= <expr pos:start="63:51" pos:end="89:9"><block pos:start="63:51" pos:end="89:9">{

            <expr pos:start="65:13" pos:end="75:13"><block pos:start="65:13" pos:end="75:13">{ <comment type="block" pos:start="65:15" pos:end="65:31">/* 32 bit mode */</comment>

                <expr pos:start="67:17" pos:end="67:26"><literal type="string" pos:start="67:17" pos:end="67:26">"Reserved"</literal></expr>, <expr pos:start="67:29" pos:end="67:39"><literal type="string" pos:start="67:29" pos:end="67:39">"TSS16-avl"</literal></expr>, <expr pos:start="67:42" pos:end="67:46"><literal type="string" pos:start="67:42" pos:end="67:46">"LDT"</literal></expr>, <expr pos:start="67:49" pos:end="67:60"><literal type="string" pos:start="67:49" pos:end="67:60">"TSS16-busy"</literal></expr>,

                <expr pos:start="69:17" pos:end="69:28"><literal type="string" pos:start="69:17" pos:end="69:28">"CallGate16"</literal></expr>, <expr pos:start="69:31" pos:end="69:40"><literal type="string" pos:start="69:31" pos:end="69:40">"TaskGate"</literal></expr>, <expr pos:start="69:43" pos:end="69:53"><literal type="string" pos:start="69:43" pos:end="69:53">"IntGate16"</literal></expr>, <expr pos:start="69:56" pos:end="69:67"><literal type="string" pos:start="69:56" pos:end="69:67">"TrapGate16"</literal></expr>,

                <expr pos:start="71:17" pos:end="71:26"><literal type="string" pos:start="71:17" pos:end="71:26">"Reserved"</literal></expr>, <expr pos:start="71:29" pos:end="71:39"><literal type="string" pos:start="71:29" pos:end="71:39">"TSS32-avl"</literal></expr>, <expr pos:start="71:42" pos:end="71:51"><literal type="string" pos:start="71:42" pos:end="71:51">"Reserved"</literal></expr>, <expr pos:start="71:54" pos:end="71:65"><literal type="string" pos:start="71:54" pos:end="71:65">"TSS32-busy"</literal></expr>,

                <expr pos:start="73:17" pos:end="73:28"><literal type="string" pos:start="73:17" pos:end="73:28">"CallGate32"</literal></expr>, <expr pos:start="73:31" pos:end="73:40"><literal type="string" pos:start="73:31" pos:end="73:40">"Reserved"</literal></expr>, <expr pos:start="73:43" pos:end="73:53"><literal type="string" pos:start="73:43" pos:end="73:53">"IntGate32"</literal></expr>, <expr pos:start="73:56" pos:end="73:67"><literal type="string" pos:start="73:56" pos:end="73:67">"TrapGate32"</literal></expr>

            }</block></expr>,

            <expr pos:start="77:13" pos:end="87:13"><block pos:start="77:13" pos:end="87:13">{ <comment type="block" pos:start="77:15" pos:end="77:31">/* 64 bit mode */</comment>

                <expr pos:start="79:17" pos:end="79:26"><literal type="string" pos:start="79:17" pos:end="79:26">"&lt;hiword&gt;"</literal></expr>, <expr pos:start="79:29" pos:end="79:38"><literal type="string" pos:start="79:29" pos:end="79:38">"Reserved"</literal></expr>, <expr pos:start="79:41" pos:end="79:45"><literal type="string" pos:start="79:41" pos:end="79:45">"LDT"</literal></expr>, <expr pos:start="79:48" pos:end="79:57"><literal type="string" pos:start="79:48" pos:end="79:57">"Reserved"</literal></expr>, <expr pos:start="79:60" pos:end="79:69"><literal type="string" pos:start="79:60" pos:end="79:69">"Reserved"</literal></expr>,

                <expr pos:start="81:17" pos:end="81:26"><literal type="string" pos:start="81:17" pos:end="81:26">"Reserved"</literal></expr>, <expr pos:start="81:29" pos:end="81:38"><literal type="string" pos:start="81:29" pos:end="81:38">"Reserved"</literal></expr>, <expr pos:start="81:41" pos:end="81:50"><literal type="string" pos:start="81:41" pos:end="81:50">"Reserved"</literal></expr>, <expr pos:start="81:53" pos:end="81:62"><literal type="string" pos:start="81:53" pos:end="81:62">"Reserved"</literal></expr>,

                <expr pos:start="83:17" pos:end="83:27"><literal type="string" pos:start="83:17" pos:end="83:27">"TSS64-avl"</literal></expr>, <expr pos:start="83:30" pos:end="83:39"><literal type="string" pos:start="83:30" pos:end="83:39">"Reserved"</literal></expr>, <expr pos:start="83:42" pos:end="83:53"><literal type="string" pos:start="83:42" pos:end="83:53">"TSS64-busy"</literal></expr>, <expr pos:start="83:56" pos:end="83:67"><literal type="string" pos:start="83:56" pos:end="83:67">"CallGate64"</literal></expr>,

                <expr pos:start="85:17" pos:end="85:26"><literal type="string" pos:start="85:17" pos:end="85:26">"Reserved"</literal></expr>, <expr pos:start="85:29" pos:end="85:39"><literal type="string" pos:start="85:29" pos:end="85:39">"IntGate64"</literal></expr>, <expr pos:start="85:42" pos:end="85:53"><literal type="string" pos:start="85:42" pos:end="85:53">"TrapGate64"</literal></expr>

            }</block></expr>

        }</block></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="91:9" pos:end="97:55"><expr pos:start="91:9" pos:end="97:54"><call pos:start="91:9" pos:end="97:54"><name pos:start="91:9" pos:end="91:19">cpu_fprintf</name><argument_list pos:start="91:20" pos:end="97:54">(<argument pos:start="91:21" pos:end="91:21"><expr pos:start="91:21" pos:end="91:21"><name pos:start="91:21" pos:end="91:21">f</name></expr></argument>, <argument pos:start="91:24" pos:end="91:27"><expr pos:start="91:24" pos:end="91:27"><literal type="string" pos:start="91:24" pos:end="91:27">"%s"</literal></expr></argument>,

                    <argument pos:start="93:21" pos:end="97:53"><expr pos:start="93:21" pos:end="97:53"><name pos:start="93:21" pos:end="97:53"><name pos:start="93:21" pos:end="93:33">sys_type_name</name><index pos:start="93:34" pos:end="93:70">[<expr pos:start="93:35" pos:end="93:69"><ternary pos:start="93:35" pos:end="93:69"><condition pos:start="93:35" pos:end="93:63"><expr pos:start="93:35" pos:end="93:61"><operator pos:start="93:35" pos:end="93:35">(</operator><name pos:start="93:36" pos:end="93:46"><name pos:start="93:36" pos:end="93:38">env</name><operator pos:start="93:39" pos:end="93:40">-&gt;</operator><name pos:start="93:41" pos:end="93:46">hflags</name></name> <operator pos:start="93:48" pos:end="93:48">&amp;</operator> <name pos:start="93:50" pos:end="93:60">HF_LMA_MASK</name><operator pos:start="93:61" pos:end="93:61">)</operator></expr> ?</condition><then pos:start="93:65" pos:end="93:65"> <expr pos:start="93:65" pos:end="93:65"><literal type="number" pos:start="93:65" pos:end="93:65">1</literal></expr> </then><else pos:start="93:67" pos:end="93:69">: <expr pos:start="93:69" pos:end="93:69"><literal type="number" pos:start="93:69" pos:end="93:69">0</literal></expr></else></ternary></expr>]</index>

                                 <index pos:start="95:34" pos:end="97:53">[<expr pos:start="95:35" pos:end="97:52"><operator pos:start="95:35" pos:end="95:35">(</operator><name pos:start="95:36" pos:end="95:44"><name pos:start="95:36" pos:end="95:37">sc</name><operator pos:start="95:38" pos:end="95:39">-&gt;</operator><name pos:start="95:40" pos:end="95:44">flags</name></name> <operator pos:start="95:46" pos:end="95:46">&amp;</operator> <name pos:start="95:48" pos:end="95:61">DESC_TYPE_MASK</name><operator pos:start="95:62" pos:end="95:62">)</operator>

                                  <operator pos:start="97:35" pos:end="97:36">&gt;&gt;</operator> <name pos:start="97:38" pos:end="97:52">DESC_TYPE_SHIFT</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

<label pos:start="101:1" pos:end="101:5"><name pos:start="101:1" pos:end="101:4">done</name>:</label>

    <expr_stmt pos:start="103:5" pos:end="103:25"><expr pos:start="103:5" pos:end="103:24"><call pos:start="103:5" pos:end="103:24"><name pos:start="103:5" pos:end="103:15">cpu_fprintf</name><argument_list pos:start="103:16" pos:end="103:24">(<argument pos:start="103:17" pos:end="103:17"><expr pos:start="103:17" pos:end="103:17"><name pos:start="103:17" pos:end="103:17">f</name></expr></argument>, <argument pos:start="103:20" pos:end="103:23"><expr pos:start="103:20" pos:end="103:23"><literal type="string" pos:start="103:20" pos:end="103:23">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
