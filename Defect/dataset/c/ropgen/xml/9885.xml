<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9885.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">av_dict_set</name><parameter_list pos:start="1:16" pos:end="3:26">(<parameter pos:start="1:17" pos:end="1:33"><decl pos:start="1:17" pos:end="1:33"><type pos:start="1:17" pos:end="1:33"><name pos:start="1:17" pos:end="1:28">AVDictionary</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier><modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:33">pm</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:50"><decl pos:start="1:36" pos:end="1:50"><type pos:start="1:36" pos:end="1:50"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:45">char</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">key</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:69"><decl pos:start="1:53" pos:end="1:69"><type pos:start="1:53" pos:end="1:69"><specifier pos:start="1:53" pos:end="1:57">const</specifier> <name pos:start="1:59" pos:end="1:62">char</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:69">value</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:25"><decl pos:start="3:17" pos:end="3:25"><type pos:start="3:17" pos:end="3:25"><name pos:start="3:17" pos:end="3:19">int</name></type> <name pos:start="3:21" pos:end="3:25">flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="145:1">{<block_content pos:start="7:5" pos:end="143:27">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">AVDictionary</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">m</name> <init pos:start="7:21" pos:end="7:25">= <expr pos:start="7:23" pos:end="7:25"><operator pos:start="7:23" pos:end="7:23">*</operator><name pos:start="7:24" pos:end="7:25">pm</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:62"><decl pos:start="9:5" pos:end="9:61"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">AVDictionaryEntry</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:26">tag</name> <init pos:start="9:28" pos:end="9:61">= <expr pos:start="9:30" pos:end="9:61"><call pos:start="9:30" pos:end="9:61"><name pos:start="9:30" pos:end="9:40">av_dict_get</name><argument_list pos:start="9:41" pos:end="9:61">(<argument pos:start="9:42" pos:end="9:42"><expr pos:start="9:42" pos:end="9:42"><name pos:start="9:42" pos:end="9:42">m</name></expr></argument>, <argument pos:start="9:45" pos:end="9:47"><expr pos:start="9:45" pos:end="9:47"><name pos:start="9:45" pos:end="9:47">key</name></expr></argument>, <argument pos:start="9:50" pos:end="9:53"><expr pos:start="9:50" pos:end="9:53"><name pos:start="9:50" pos:end="9:53">NULL</name></expr></argument>, <argument pos:start="9:56" pos:end="9:60"><expr pos:start="9:56" pos:end="9:60"><name pos:start="9:56" pos:end="9:60">flags</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:62"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:16">oldval</name> <init pos:start="11:18" pos:end="11:23">= <expr pos:start="11:20" pos:end="11:23"><name pos:start="11:20" pos:end="11:23">NULL</name></expr></init></decl>, <decl pos:start="11:26" pos:end="11:41"><type ref="prev" pos:start="11:5" pos:end="11:10"><modifier pos:start="11:26" pos:end="11:26">*</modifier></type><name pos:start="11:27" pos:end="11:34">copy_key</name> <init pos:start="11:36" pos:end="11:41">= <expr pos:start="11:38" pos:end="11:41"><name pos:start="11:38" pos:end="11:41">NULL</name></expr></init></decl>, <decl pos:start="11:44" pos:end="11:61"><type ref="prev" pos:start="11:5" pos:end="11:10"><modifier pos:start="11:44" pos:end="11:44">*</modifier></type><name pos:start="11:45" pos:end="11:54">copy_value</name> <init pos:start="11:56" pos:end="11:61">= <expr pos:start="11:58" pos:end="11:61"><name pos:start="11:58" pos:end="11:61">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="21:34"><if pos:start="15:5" pos:end="17:31">if <condition pos:start="15:8" pos:end="15:40">(<expr pos:start="15:9" pos:end="15:39"><name pos:start="15:9" pos:end="15:13">flags</name> <operator pos:start="15:15" pos:end="15:15">&amp;</operator> <name pos:start="15:17" pos:end="15:39">AV_DICT_DONT_STRDUP_KEY</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:31"><block_content pos:start="17:9" pos:end="17:31">

        <expr_stmt pos:start="17:9" pos:end="17:31"><expr pos:start="17:9" pos:end="17:30"><name pos:start="17:9" pos:end="17:16">copy_key</name> <operator pos:start="17:18" pos:end="17:18">=</operator> <operator pos:start="17:20" pos:end="17:20">(</operator><name pos:start="17:21" pos:end="17:24">void</name> <operator pos:start="17:26" pos:end="17:26">*</operator><operator pos:start="17:27" pos:end="17:27">)</operator><name pos:start="17:28" pos:end="17:30">key</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="19:5" pos:end="21:34">else<block type="pseudo" pos:start="21:9" pos:end="21:34"><block_content pos:start="21:9" pos:end="21:34">

        <expr_stmt pos:start="21:9" pos:end="21:34"><expr pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:16">copy_key</name> <operator pos:start="21:18" pos:end="21:18">=</operator> <call pos:start="21:20" pos:end="21:33"><name pos:start="21:20" pos:end="21:28">av_strdup</name><argument_list pos:start="21:29" pos:end="21:33">(<argument pos:start="21:30" pos:end="21:32"><expr pos:start="21:30" pos:end="21:32"><name pos:start="21:30" pos:end="21:32">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="23:5" pos:end="29:38"><if pos:start="23:5" pos:end="25:35">if <condition pos:start="23:8" pos:end="23:40">(<expr pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:13">flags</name> <operator pos:start="23:15" pos:end="23:15">&amp;</operator> <name pos:start="23:17" pos:end="23:39">AV_DICT_DONT_STRDUP_VAL</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:35"><block_content pos:start="25:9" pos:end="25:35">

        <expr_stmt pos:start="25:9" pos:end="25:35"><expr pos:start="25:9" pos:end="25:34"><name pos:start="25:9" pos:end="25:18">copy_value</name> <operator pos:start="25:20" pos:end="25:20">=</operator> <operator pos:start="25:22" pos:end="25:22">(</operator><name pos:start="25:23" pos:end="25:26">void</name> <operator pos:start="25:28" pos:end="25:28">*</operator><operator pos:start="25:29" pos:end="25:29">)</operator><name pos:start="25:30" pos:end="25:34">value</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="27:5" pos:end="29:38">else if <condition pos:start="27:13" pos:end="27:22">(<expr pos:start="27:14" pos:end="27:21"><name pos:start="27:14" pos:end="27:21">copy_key</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:38"><block_content pos:start="29:9" pos:end="29:38">

        <expr_stmt pos:start="29:9" pos:end="29:38"><expr pos:start="29:9" pos:end="29:37"><name pos:start="29:9" pos:end="29:18">copy_value</name> <operator pos:start="29:20" pos:end="29:20">=</operator> <call pos:start="29:22" pos:end="29:37"><name pos:start="29:22" pos:end="29:30">av_strdup</name><argument_list pos:start="29:31" pos:end="29:37">(<argument pos:start="29:32" pos:end="29:36"><expr pos:start="29:32" pos:end="29:36"><name pos:start="29:32" pos:end="29:36">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="33:41"><if pos:start="31:5" pos:end="33:41">if <condition pos:start="31:8" pos:end="31:11">(<expr pos:start="31:9" pos:end="31:10"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:10">m</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:41"><block_content pos:start="33:9" pos:end="33:41">

        <expr_stmt pos:start="33:9" pos:end="33:41"><expr pos:start="33:9" pos:end="33:40"><name pos:start="33:9" pos:end="33:9">m</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <operator pos:start="33:13" pos:end="33:13">*</operator><name pos:start="33:14" pos:end="33:15">pm</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <call pos:start="33:19" pos:end="33:40"><name pos:start="33:19" pos:end="33:28">av_mallocz</name><argument_list pos:start="33:29" pos:end="33:40">(<argument pos:start="33:30" pos:end="33:39"><expr pos:start="33:30" pos:end="33:39"><sizeof pos:start="33:30" pos:end="33:39">sizeof<argument_list pos:start="33:36" pos:end="33:39">(<argument pos:start="33:37" pos:end="33:38"><expr pos:start="33:37" pos:end="33:38"><operator pos:start="33:37" pos:end="33:37">*</operator><name pos:start="33:38" pos:end="33:38">m</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="37:21"><if pos:start="35:5" pos:end="37:21">if <condition pos:start="35:8" pos:end="35:59">(<expr pos:start="35:9" pos:end="35:58"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:10">m</name> <operator pos:start="35:12" pos:end="35:13">||</operator> <operator pos:start="35:15" pos:end="35:15">(</operator><name pos:start="35:16" pos:end="35:18">key</name> <operator pos:start="35:20" pos:end="35:21">&amp;&amp;</operator> <operator pos:start="35:23" pos:end="35:23">!</operator><name pos:start="35:24" pos:end="35:31">copy_key</name><operator pos:start="35:32" pos:end="35:32">)</operator> <operator pos:start="35:34" pos:end="35:35">||</operator> <operator pos:start="35:37" pos:end="35:37">(</operator><name pos:start="35:38" pos:end="35:42">value</name> <operator pos:start="35:44" pos:end="35:45">&amp;&amp;</operator> <operator pos:start="35:47" pos:end="35:47">!</operator><name pos:start="35:48" pos:end="35:57">copy_value</name><operator pos:start="35:58" pos:end="35:58">)</operator></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:21"><block_content pos:start="37:9" pos:end="37:21">

        <goto pos:start="37:9" pos:end="37:21">goto <name pos:start="37:14" pos:end="37:20">err_out</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="77:5"><if pos:start="41:5" pos:end="65:5">if <condition pos:start="41:8" pos:end="41:12">(<expr pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">tag</name></expr>)</condition> <block pos:start="41:14" pos:end="65:5">{<block_content pos:start="43:9" pos:end="63:36">

        <if_stmt pos:start="43:9" pos:end="51:9"><if pos:start="43:9" pos:end="51:9">if <condition pos:start="43:12" pos:end="43:43">(<expr pos:start="43:13" pos:end="43:42"><name pos:start="43:13" pos:end="43:17">flags</name> <operator pos:start="43:19" pos:end="43:19">&amp;</operator> <name pos:start="43:21" pos:end="43:42">AV_DICT_DONT_OVERWRITE</name></expr>)</condition> <block pos:start="43:45" pos:end="51:9">{<block_content pos:start="45:13" pos:end="49:21">

            <expr_stmt pos:start="45:13" pos:end="45:30"><expr pos:start="45:13" pos:end="45:29"><call pos:start="45:13" pos:end="45:29"><name pos:start="45:13" pos:end="45:19">av_free</name><argument_list pos:start="45:20" pos:end="45:29">(<argument pos:start="45:21" pos:end="45:28"><expr pos:start="45:21" pos:end="45:28"><name pos:start="45:21" pos:end="45:28">copy_key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:32"><expr pos:start="47:13" pos:end="47:31"><call pos:start="47:13" pos:end="47:31"><name pos:start="47:13" pos:end="47:19">av_free</name><argument_list pos:start="47:20" pos:end="47:31">(<argument pos:start="47:21" pos:end="47:30"><expr pos:start="47:21" pos:end="47:30"><name pos:start="47:21" pos:end="47:30">copy_value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="49:13" pos:end="49:21">return <expr pos:start="49:20" pos:end="49:20"><literal type="number" pos:start="49:20" pos:end="49:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="53:9" pos:end="59:32"><if pos:start="53:9" pos:end="55:32">if <condition pos:start="53:12" pos:end="53:35">(<expr pos:start="53:13" pos:end="53:34"><name pos:start="53:13" pos:end="53:17">flags</name> <operator pos:start="53:19" pos:end="53:19">&amp;</operator> <name pos:start="53:21" pos:end="53:34">AV_DICT_APPEND</name></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:32"><block_content pos:start="55:13" pos:end="55:32">

            <expr_stmt pos:start="55:13" pos:end="55:32"><expr pos:start="55:13" pos:end="55:31"><name pos:start="55:13" pos:end="55:18">oldval</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:31"><name pos:start="55:22" pos:end="55:24">tag</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:31">value</name></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="57:9" pos:end="59:32">else<block type="pseudo" pos:start="59:13" pos:end="59:32"><block_content pos:start="59:13" pos:end="59:32">

            <expr_stmt pos:start="59:13" pos:end="59:32"><expr pos:start="59:13" pos:end="59:31"><call pos:start="59:13" pos:end="59:31"><name pos:start="59:13" pos:end="59:19">av_free</name><argument_list pos:start="59:20" pos:end="59:31">(<argument pos:start="59:21" pos:end="59:30"><expr pos:start="59:21" pos:end="59:30"><name pos:start="59:21" pos:end="59:30"><name pos:start="59:21" pos:end="59:23">tag</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:30">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:26"><expr pos:start="61:9" pos:end="61:25"><call pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:15">av_free</name><argument_list pos:start="61:16" pos:end="61:25">(<argument pos:start="61:17" pos:end="61:24"><expr pos:start="61:17" pos:end="61:24"><name pos:start="61:17" pos:end="61:24"><name pos:start="61:17" pos:end="61:19">tag</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:24">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:36"><expr pos:start="63:9" pos:end="63:35"><operator pos:start="63:9" pos:end="63:9">*</operator><name pos:start="63:10" pos:end="63:12">tag</name> <operator pos:start="63:14" pos:end="63:14">=</operator> <name pos:start="63:16" pos:end="63:35"><name pos:start="63:16" pos:end="63:16">m</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:23">elems</name><index pos:start="63:24" pos:end="63:35">[<expr pos:start="63:25" pos:end="63:34"><operator pos:start="63:25" pos:end="63:26">--</operator><name pos:start="63:27" pos:end="63:34"><name pos:start="63:27" pos:end="63:27">m</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:34">count</name></name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="77:5">else <block pos:start="65:12" pos:end="77:5">{<block_content pos:start="67:9" pos:end="75:23">

        <decl_stmt pos:start="67:9" pos:end="69:80"><decl pos:start="67:9" pos:end="69:79"><type pos:start="67:9" pos:end="67:27"><name pos:start="67:9" pos:end="67:25">AVDictionaryEntry</name> <modifier pos:start="67:27" pos:end="67:27">*</modifier></type><name pos:start="67:28" pos:end="67:30">tmp</name> <init pos:start="67:32" pos:end="69:79">= <expr pos:start="67:34" pos:end="69:79"><call pos:start="67:34" pos:end="69:79"><name pos:start="67:34" pos:end="67:43">av_realloc</name><argument_list pos:start="67:44" pos:end="69:79">(<argument pos:start="67:45" pos:end="67:52"><expr pos:start="67:45" pos:end="67:52"><name pos:start="67:45" pos:end="67:52"><name pos:start="67:45" pos:end="67:45">m</name><operator pos:start="67:46" pos:end="67:47">-&gt;</operator><name pos:start="67:48" pos:end="67:52">elems</name></name></expr></argument>,

                                            <argument pos:start="69:45" pos:end="69:78"><expr pos:start="69:45" pos:end="69:78"><operator pos:start="69:45" pos:end="69:45">(</operator><name pos:start="69:46" pos:end="69:53"><name pos:start="69:46" pos:end="69:46">m</name><operator pos:start="69:47" pos:end="69:48">-&gt;</operator><name pos:start="69:49" pos:end="69:53">count</name></name> <operator pos:start="69:55" pos:end="69:55">+</operator> <literal type="number" pos:start="69:57" pos:end="69:57">1</literal><operator pos:start="69:58" pos:end="69:58">)</operator> <operator pos:start="69:60" pos:end="69:60">*</operator> <sizeof pos:start="69:62" pos:end="69:78">sizeof<argument_list pos:start="69:68" pos:end="69:78">(<argument pos:start="69:69" pos:end="69:77"><expr pos:start="69:69" pos:end="69:77"><operator pos:start="69:69" pos:end="69:69">*</operator><name pos:start="69:70" pos:end="69:77"><name pos:start="69:70" pos:end="69:70">m</name><operator pos:start="69:71" pos:end="69:72">-&gt;</operator><name pos:start="69:73" pos:end="69:77">elems</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="71:9" pos:end="73:25"><if pos:start="71:9" pos:end="73:25">if <condition pos:start="71:12" pos:end="71:17">(<expr pos:start="71:13" pos:end="71:16"><operator pos:start="71:13" pos:end="71:13">!</operator><name pos:start="71:14" pos:end="71:16">tmp</name></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:25"><block_content pos:start="73:13" pos:end="73:25">

            <goto pos:start="73:13" pos:end="73:25">goto <name pos:start="73:18" pos:end="73:24">err_out</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:23"><expr pos:start="75:9" pos:end="75:22"><name pos:start="75:9" pos:end="75:16"><name pos:start="75:9" pos:end="75:9">m</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:16">elems</name></name> <operator pos:start="75:18" pos:end="75:18">=</operator> <name pos:start="75:20" pos:end="75:22">tmp</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="79:5" pos:end="113:5"><if pos:start="79:5" pos:end="109:5">if <condition pos:start="79:8" pos:end="79:19">(<expr pos:start="79:9" pos:end="79:18"><name pos:start="79:9" pos:end="79:18">copy_value</name></expr>)</condition> <block pos:start="79:21" pos:end="109:5">{<block_content pos:start="81:9" pos:end="107:19">

        <expr_stmt pos:start="81:9" pos:end="81:42"><expr pos:start="81:9" pos:end="81:41"><name pos:start="81:9" pos:end="81:26"><name pos:start="81:9" pos:end="81:9">m</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:16">elems</name><index pos:start="81:17" pos:end="81:26">[<expr pos:start="81:18" pos:end="81:25"><name pos:start="81:18" pos:end="81:25"><name pos:start="81:18" pos:end="81:18">m</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:25">count</name></name></expr>]</index></name><operator pos:start="81:27" pos:end="81:27">.</operator><name pos:start="81:28" pos:end="81:30">key</name> <operator pos:start="81:32" pos:end="81:32">=</operator> <name pos:start="81:34" pos:end="81:41">copy_key</name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:46"><expr pos:start="83:9" pos:end="83:45"><name pos:start="83:9" pos:end="83:26"><name pos:start="83:9" pos:end="83:9">m</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:16">elems</name><index pos:start="83:17" pos:end="83:26">[<expr pos:start="83:18" pos:end="83:25"><name pos:start="83:18" pos:end="83:25"><name pos:start="83:18" pos:end="83:18">m</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:25">count</name></name></expr>]</index></name><operator pos:start="83:27" pos:end="83:27">.</operator><name pos:start="83:28" pos:end="83:32">value</name> <operator pos:start="83:34" pos:end="83:34">=</operator> <name pos:start="83:36" pos:end="83:45">copy_value</name></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="105:9"><if pos:start="85:9" pos:end="105:9">if <condition pos:start="85:12" pos:end="85:45">(<expr pos:start="85:13" pos:end="85:44"><name pos:start="85:13" pos:end="85:18">oldval</name> <operator pos:start="85:20" pos:end="85:21">&amp;&amp;</operator> <name pos:start="85:23" pos:end="85:27">flags</name> <operator pos:start="85:29" pos:end="85:29">&amp;</operator> <name pos:start="85:31" pos:end="85:44">AV_DICT_APPEND</name></expr>)</condition> <block pos:start="85:47" pos:end="105:9">{<block_content pos:start="87:13" pos:end="103:34">

            <decl_stmt pos:start="87:13" pos:end="87:65"><decl pos:start="87:13" pos:end="87:64"><type pos:start="87:13" pos:end="87:18"><name pos:start="87:13" pos:end="87:18">size_t</name></type> <name pos:start="87:20" pos:end="87:22">len</name> <init pos:start="87:24" pos:end="87:64">= <expr pos:start="87:26" pos:end="87:64"><call pos:start="87:26" pos:end="87:39"><name pos:start="87:26" pos:end="87:31">strlen</name><argument_list pos:start="87:32" pos:end="87:39">(<argument pos:start="87:33" pos:end="87:38"><expr pos:start="87:33" pos:end="87:38"><name pos:start="87:33" pos:end="87:38">oldval</name></expr></argument>)</argument_list></call> <operator pos:start="87:41" pos:end="87:41">+</operator> <call pos:start="87:43" pos:end="87:60"><name pos:start="87:43" pos:end="87:48">strlen</name><argument_list pos:start="87:49" pos:end="87:60">(<argument pos:start="87:50" pos:end="87:59"><expr pos:start="87:50" pos:end="87:59"><name pos:start="87:50" pos:end="87:59">copy_value</name></expr></argument>)</argument_list></call> <operator pos:start="87:62" pos:end="87:62">+</operator> <literal type="number" pos:start="87:64" pos:end="87:64">1</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="89:13" pos:end="89:43"><decl pos:start="89:13" pos:end="89:42"><type pos:start="89:13" pos:end="89:18"><name pos:start="89:13" pos:end="89:16">char</name> <modifier pos:start="89:18" pos:end="89:18">*</modifier></type><name pos:start="89:19" pos:end="89:24">newval</name> <init pos:start="89:26" pos:end="89:42">= <expr pos:start="89:28" pos:end="89:42"><call pos:start="89:28" pos:end="89:42"><name pos:start="89:28" pos:end="89:37">av_mallocz</name><argument_list pos:start="89:38" pos:end="89:42">(<argument pos:start="89:39" pos:end="89:41"><expr pos:start="89:39" pos:end="89:41"><name pos:start="89:39" pos:end="89:41">len</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="91:13" pos:end="93:29"><if pos:start="91:13" pos:end="93:29">if <condition pos:start="91:16" pos:end="91:24">(<expr pos:start="91:17" pos:end="91:23"><operator pos:start="91:17" pos:end="91:17">!</operator><name pos:start="91:18" pos:end="91:23">newval</name></expr>)</condition><block type="pseudo" pos:start="93:17" pos:end="93:29"><block_content pos:start="93:17" pos:end="93:29">

                <goto pos:start="93:17" pos:end="93:29">goto <name pos:start="93:22" pos:end="93:28">err_out</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:44"><expr pos:start="95:13" pos:end="95:43"><call pos:start="95:13" pos:end="95:43"><name pos:start="95:13" pos:end="95:22">av_strlcat</name><argument_list pos:start="95:23" pos:end="95:43">(<argument pos:start="95:24" pos:end="95:29"><expr pos:start="95:24" pos:end="95:29"><name pos:start="95:24" pos:end="95:29">newval</name></expr></argument>, <argument pos:start="95:32" pos:end="95:37"><expr pos:start="95:32" pos:end="95:37"><name pos:start="95:32" pos:end="95:37">oldval</name></expr></argument>, <argument pos:start="95:40" pos:end="95:42"><expr pos:start="95:40" pos:end="95:42"><name pos:start="95:40" pos:end="95:42">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:30"><expr pos:start="97:13" pos:end="97:29"><call pos:start="97:13" pos:end="97:29"><name pos:start="97:13" pos:end="97:20">av_freep</name><argument_list pos:start="97:21" pos:end="97:29">(<argument pos:start="97:22" pos:end="97:28"><expr pos:start="97:22" pos:end="97:28"><operator pos:start="97:22" pos:end="97:22">&amp;</operator><name pos:start="97:23" pos:end="97:28">oldval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:48"><expr pos:start="99:13" pos:end="99:47"><call pos:start="99:13" pos:end="99:47"><name pos:start="99:13" pos:end="99:22">av_strlcat</name><argument_list pos:start="99:23" pos:end="99:47">(<argument pos:start="99:24" pos:end="99:29"><expr pos:start="99:24" pos:end="99:29"><name pos:start="99:24" pos:end="99:29">newval</name></expr></argument>, <argument pos:start="99:32" pos:end="99:41"><expr pos:start="99:32" pos:end="99:41"><name pos:start="99:32" pos:end="99:41">copy_value</name></expr></argument>, <argument pos:start="99:44" pos:end="99:46"><expr pos:start="99:44" pos:end="99:46"><name pos:start="99:44" pos:end="99:46">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:46"><expr pos:start="101:13" pos:end="101:45"><name pos:start="101:13" pos:end="101:30"><name pos:start="101:13" pos:end="101:13">m</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:20">elems</name><index pos:start="101:21" pos:end="101:30">[<expr pos:start="101:22" pos:end="101:29"><name pos:start="101:22" pos:end="101:29"><name pos:start="101:22" pos:end="101:22">m</name><operator pos:start="101:23" pos:end="101:24">-&gt;</operator><name pos:start="101:25" pos:end="101:29">count</name></name></expr>]</index></name><operator pos:start="101:31" pos:end="101:31">.</operator><name pos:start="101:32" pos:end="101:36">value</name> <operator pos:start="101:38" pos:end="101:38">=</operator> <name pos:start="101:40" pos:end="101:45">newval</name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:34"><expr pos:start="103:13" pos:end="103:33"><call pos:start="103:13" pos:end="103:33"><name pos:start="103:13" pos:end="103:20">av_freep</name><argument_list pos:start="103:21" pos:end="103:33">(<argument pos:start="103:22" pos:end="103:32"><expr pos:start="103:22" pos:end="103:32"><operator pos:start="103:22" pos:end="103:22">&amp;</operator><name pos:start="103:23" pos:end="103:32">copy_value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:19"><expr pos:start="107:9" pos:end="107:18"><name pos:start="107:9" pos:end="107:16"><name pos:start="107:9" pos:end="107:9">m</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:16">count</name></name><operator pos:start="107:17" pos:end="107:18">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="109:7" pos:end="113:5">else <block pos:start="109:12" pos:end="113:5">{<block_content pos:start="111:9" pos:end="111:28">

        <expr_stmt pos:start="111:9" pos:end="111:28"><expr pos:start="111:9" pos:end="111:27"><call pos:start="111:9" pos:end="111:27"><name pos:start="111:9" pos:end="111:16">av_freep</name><argument_list pos:start="111:17" pos:end="111:27">(<argument pos:start="111:18" pos:end="111:26"><expr pos:start="111:18" pos:end="111:26"><operator pos:start="111:18" pos:end="111:18">&amp;</operator><name pos:start="111:19" pos:end="111:26">copy_key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="115:5" pos:end="121:5"><if pos:start="115:5" pos:end="121:5">if <condition pos:start="115:8" pos:end="115:18">(<expr pos:start="115:9" pos:end="115:17"><operator pos:start="115:9" pos:end="115:9">!</operator><name pos:start="115:10" pos:end="115:17"><name pos:start="115:10" pos:end="115:10">m</name><operator pos:start="115:11" pos:end="115:12">-&gt;</operator><name pos:start="115:13" pos:end="115:17">count</name></name></expr>)</condition> <block pos:start="115:20" pos:end="121:5">{<block_content pos:start="117:9" pos:end="119:21">

        <expr_stmt pos:start="117:9" pos:end="117:28"><expr pos:start="117:9" pos:end="117:27"><call pos:start="117:9" pos:end="117:27"><name pos:start="117:9" pos:end="117:16">av_freep</name><argument_list pos:start="117:17" pos:end="117:27">(<argument pos:start="117:18" pos:end="117:26"><expr pos:start="117:18" pos:end="117:26"><operator pos:start="117:18" pos:end="117:18">&amp;</operator><name pos:start="117:19" pos:end="117:26"><name pos:start="117:19" pos:end="117:19">m</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:26">elems</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:21"><expr pos:start="119:9" pos:end="119:20"><call pos:start="119:9" pos:end="119:20"><name pos:start="119:9" pos:end="119:16">av_freep</name><argument_list pos:start="119:17" pos:end="119:20">(<argument pos:start="119:18" pos:end="119:19"><expr pos:start="119:18" pos:end="119:19"><name pos:start="119:18" pos:end="119:19">pm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="125:5" pos:end="125:13">return <expr pos:start="125:12" pos:end="125:12"><literal type="number" pos:start="125:12" pos:end="125:12">0</literal></expr>;</return>



<label pos:start="129:1" pos:end="129:8"><name pos:start="129:1" pos:end="129:7">err_out</name>:</label>

    <if_stmt pos:start="131:5" pos:end="137:5"><if pos:start="131:5" pos:end="137:5">if <condition pos:start="131:8" pos:end="131:23">(<expr pos:start="131:9" pos:end="131:22"><name pos:start="131:9" pos:end="131:9">m</name> <operator pos:start="131:11" pos:end="131:12">&amp;&amp;</operator> <operator pos:start="131:14" pos:end="131:14">!</operator><name pos:start="131:15" pos:end="131:22"><name pos:start="131:15" pos:end="131:15">m</name><operator pos:start="131:16" pos:end="131:17">-&gt;</operator><name pos:start="131:18" pos:end="131:22">count</name></name></expr>)</condition> <block pos:start="131:25" pos:end="137:5">{<block_content pos:start="133:9" pos:end="135:21">

        <expr_stmt pos:start="133:9" pos:end="133:28"><expr pos:start="133:9" pos:end="133:27"><call pos:start="133:9" pos:end="133:27"><name pos:start="133:9" pos:end="133:16">av_freep</name><argument_list pos:start="133:17" pos:end="133:27">(<argument pos:start="133:18" pos:end="133:26"><expr pos:start="133:18" pos:end="133:26"><operator pos:start="133:18" pos:end="133:18">&amp;</operator><name pos:start="133:19" pos:end="133:26"><name pos:start="133:19" pos:end="133:19">m</name><operator pos:start="133:20" pos:end="133:21">-&gt;</operator><name pos:start="133:22" pos:end="133:26">elems</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:21"><expr pos:start="135:9" pos:end="135:20"><call pos:start="135:9" pos:end="135:20"><name pos:start="135:9" pos:end="135:16">av_freep</name><argument_list pos:start="135:17" pos:end="135:20">(<argument pos:start="135:18" pos:end="135:19"><expr pos:start="135:18" pos:end="135:19"><name pos:start="135:18" pos:end="135:19">pm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:22"><expr pos:start="139:5" pos:end="139:21"><call pos:start="139:5" pos:end="139:21"><name pos:start="139:5" pos:end="139:11">av_free</name><argument_list pos:start="139:12" pos:end="139:21">(<argument pos:start="139:13" pos:end="139:20"><expr pos:start="139:13" pos:end="139:20"><name pos:start="139:13" pos:end="139:20">copy_key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:24"><expr pos:start="141:5" pos:end="141:23"><call pos:start="141:5" pos:end="141:23"><name pos:start="141:5" pos:end="141:11">av_free</name><argument_list pos:start="141:12" pos:end="141:23">(<argument pos:start="141:13" pos:end="141:22"><expr pos:start="141:13" pos:end="141:22"><name pos:start="141:13" pos:end="141:22">copy_value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="143:5" pos:end="143:27">return <expr pos:start="143:12" pos:end="143:26"><call pos:start="143:12" pos:end="143:26"><name pos:start="143:12" pos:end="143:18">AVERROR</name><argument_list pos:start="143:19" pos:end="143:26">(<argument pos:start="143:20" pos:end="143:25"><expr pos:start="143:20" pos:end="143:25"><name pos:start="143:20" pos:end="143:25">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
