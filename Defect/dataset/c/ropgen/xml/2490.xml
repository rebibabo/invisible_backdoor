<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2490.c" pos:tabs="8"><function pos:start="1:1" pos:end="345:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:40">mxf_parse_structural_metadata</name><parameter_list pos:start="1:41" pos:end="1:57">(<parameter pos:start="1:42" pos:end="1:56"><decl pos:start="1:42" pos:end="1:56"><type pos:start="1:42" pos:end="1:53"><name pos:start="1:42" pos:end="1:51">MXFContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">mxf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="345:1">{<block_content pos:start="5:5" pos:end="343:13">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MXFPackage</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:32">material_package</name> <init pos:start="5:34" pos:end="5:39">= <expr pos:start="5:36" pos:end="5:39"><name pos:start="5:36" pos:end="5:39">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">MXFPackage</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:30">source_package</name> <init pos:start="7:32" pos:end="7:37">= <expr pos:start="7:34" pos:end="7:37"><name pos:start="7:34" pos:end="7:37">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">MXFPackage</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:28">temp_package</name> <init pos:start="9:30" pos:end="9:35">= <expr pos:start="9:32" pos:end="9:35"><name pos:start="9:32" pos:end="9:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">j</name></decl>, <decl pos:start="11:15" pos:end="11:15"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:15">k</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:66"><expr pos:start="15:5" pos:end="15:65"><call pos:start="15:5" pos:end="15:65"><name pos:start="15:5" pos:end="15:11">dprintf</name><argument_list pos:start="15:12" pos:end="15:65">(<argument pos:start="15:13" pos:end="15:38"><expr pos:start="15:13" pos:end="15:38"><literal type="string" pos:start="15:13" pos:end="15:38">"metadata sets count %d\n"</literal></expr></argument>, <argument pos:start="15:41" pos:end="15:64"><expr pos:start="15:41" pos:end="15:64"><name pos:start="15:41" pos:end="15:64"><name pos:start="15:41" pos:end="15:43">mxf</name><operator pos:start="15:44" pos:end="15:45">-&gt;</operator><name pos:start="15:46" pos:end="15:64">metadata_sets_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="17:5" pos:end="17:56">/* TODO: handle multiple material packages (OP3x) */</comment>

    <for pos:start="19:5" pos:end="37:5">for <control pos:start="19:9" pos:end="19:45">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:40"><expr pos:start="19:17" pos:end="19:39"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:39"><name pos:start="19:21" pos:end="19:23">mxf</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:39">packages_count</name></name></expr>;</condition> <incr pos:start="19:42" pos:end="19:44"><expr pos:start="19:42" pos:end="19:44"><name pos:start="19:42" pos:end="19:42">i</name><operator pos:start="19:43" pos:end="19:44">++</operator></expr></incr>)</control> <block pos:start="19:47" pos:end="37:5">{<block_content pos:start="21:9" pos:end="35:9">

        <if_stmt pos:start="21:9" pos:end="27:9"><if pos:start="21:9" pos:end="27:9">if <condition pos:start="21:12" pos:end="21:82">(<expr pos:start="21:13" pos:end="21:81"><operator pos:start="21:13" pos:end="21:13">!</operator><operator pos:start="21:14" pos:end="21:14">(</operator><name pos:start="21:15" pos:end="21:26">temp_package</name> <operator pos:start="21:28" pos:end="21:28">=</operator> <call pos:start="21:30" pos:end="21:80"><name pos:start="21:30" pos:end="21:51">mxf_resolve_strong_ref</name><argument_list pos:start="21:52" pos:end="21:80">(<argument pos:start="21:53" pos:end="21:55"><expr pos:start="21:53" pos:end="21:55"><name pos:start="21:53" pos:end="21:55">mxf</name></expr></argument>, <argument pos:start="21:58" pos:end="21:79"><expr pos:start="21:58" pos:end="21:79"><operator pos:start="21:58" pos:end="21:58">&amp;</operator><name pos:start="21:59" pos:end="21:79"><name pos:start="21:59" pos:end="21:61">mxf</name><operator pos:start="21:62" pos:end="21:63">-&gt;</operator><name pos:start="21:64" pos:end="21:76">packages_refs</name><index pos:start="21:77" pos:end="21:79">[<expr pos:start="21:78" pos:end="21:78"><name pos:start="21:78" pos:end="21:78">i</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="21:81" pos:end="21:81">)</operator></expr>)</condition> <block pos:start="21:84" pos:end="27:9">{<block_content pos:start="23:13" pos:end="25:22">

            <expr_stmt pos:start="23:13" pos:end="23:84"><expr pos:start="23:13" pos:end="23:83"><call pos:start="23:13" pos:end="23:83"><name pos:start="23:13" pos:end="23:18">av_log</name><argument_list pos:start="23:19" pos:end="23:83">(<argument pos:start="23:20" pos:end="23:26"><expr pos:start="23:20" pos:end="23:26"><name pos:start="23:20" pos:end="23:26"><name pos:start="23:20" pos:end="23:22">mxf</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:26">fc</name></name></expr></argument>, <argument pos:start="23:29" pos:end="23:40"><expr pos:start="23:29" pos:end="23:40"><name pos:start="23:29" pos:end="23:40">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:43" pos:end="23:82"><expr pos:start="23:43" pos:end="23:82"><literal type="string" pos:start="23:43" pos:end="23:82">"could not resolve package strong ref\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="25:13" pos:end="25:22">return <expr pos:start="25:20" pos:end="25:21"><operator pos:start="25:20" pos:end="25:20">-</operator><literal type="number" pos:start="25:21" pos:end="25:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:50">(<expr pos:start="29:13" pos:end="29:49"><name pos:start="29:13" pos:end="29:30"><name pos:start="29:13" pos:end="29:24">temp_package</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:30">type</name></name> <operator pos:start="29:32" pos:end="29:33">==</operator> <name pos:start="29:35" pos:end="29:49">MaterialPackage</name></expr>)</condition> <block pos:start="29:52" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:18">

            <expr_stmt pos:start="31:13" pos:end="31:44"><expr pos:start="31:13" pos:end="31:43"><name pos:start="31:13" pos:end="31:28">material_package</name> <operator pos:start="31:30" pos:end="31:30">=</operator> <name pos:start="31:32" pos:end="31:43">temp_package</name></expr>;</expr_stmt>

            <break pos:start="33:13" pos:end="33:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:26">(<expr pos:start="39:9" pos:end="39:25"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:25">material_package</name></expr>)</condition> <block pos:start="39:28" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:18">

        <expr_stmt pos:start="41:9" pos:end="41:69"><expr pos:start="41:9" pos:end="41:68"><call pos:start="41:9" pos:end="41:68"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="41:68">(<argument pos:start="41:16" pos:end="41:22"><expr pos:start="41:16" pos:end="41:22"><name pos:start="41:16" pos:end="41:22"><name pos:start="41:16" pos:end="41:18">mxf</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:22">fc</name></name></expr></argument>, <argument pos:start="41:25" pos:end="41:36"><expr pos:start="41:25" pos:end="41:36"><name pos:start="41:25" pos:end="41:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:39" pos:end="41:67"><expr pos:start="41:39" pos:end="41:67"><literal type="string" pos:start="41:39" pos:end="41:67">"no material package found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:18">return <expr pos:start="43:16" pos:end="43:17"><operator pos:start="43:16" pos:end="43:16">-</operator><literal type="number" pos:start="43:17" pos:end="43:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="49:5" pos:end="341:5">for <control pos:start="49:9" pos:end="49:56">(<init pos:start="49:10" pos:end="49:15"><expr pos:start="49:10" pos:end="49:14"><name pos:start="49:10" pos:end="49:10">i</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <literal type="number" pos:start="49:14" pos:end="49:14">0</literal></expr>;</init> <condition pos:start="49:17" pos:end="49:51"><expr pos:start="49:17" pos:end="49:50"><name pos:start="49:17" pos:end="49:17">i</name> <operator pos:start="49:19" pos:end="49:19">&lt;</operator> <name pos:start="49:21" pos:end="49:50"><name pos:start="49:21" pos:end="49:36">material_package</name><operator pos:start="49:37" pos:end="49:38">-&gt;</operator><name pos:start="49:39" pos:end="49:50">tracks_count</name></name></expr>;</condition> <incr pos:start="49:53" pos:end="49:55"><expr pos:start="49:53" pos:end="49:55"><name pos:start="49:53" pos:end="49:53">i</name><operator pos:start="49:54" pos:end="49:55">++</operator></expr></incr>)</control> <block pos:start="49:58" pos:end="341:5">{<block_content pos:start="51:9" pos:end="339:9">

        <decl_stmt pos:start="51:9" pos:end="51:40"><decl pos:start="51:9" pos:end="51:39"><type pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:16">MXFTrack</name> <modifier pos:start="51:18" pos:end="51:18">*</modifier></type><name pos:start="51:19" pos:end="51:32">material_track</name> <init pos:start="51:34" pos:end="51:39">= <expr pos:start="51:36" pos:end="51:39"><name pos:start="51:36" pos:end="51:39">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="53:9" pos:end="53:38"><decl pos:start="53:9" pos:end="53:37"><type pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:16">MXFTrack</name> <modifier pos:start="53:18" pos:end="53:18">*</modifier></type><name pos:start="53:19" pos:end="53:30">source_track</name> <init pos:start="53:32" pos:end="53:37">= <expr pos:start="53:34" pos:end="53:37"><name pos:start="53:34" pos:end="53:37">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="55:9" pos:end="55:36"><decl pos:start="55:9" pos:end="55:35"><type pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:16">MXFTrack</name> <modifier pos:start="55:18" pos:end="55:18">*</modifier></type><name pos:start="55:19" pos:end="55:28">temp_track</name> <init pos:start="55:30" pos:end="55:35">= <expr pos:start="55:32" pos:end="55:35"><name pos:start="55:32" pos:end="55:35">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="57:9" pos:end="57:41"><decl pos:start="57:9" pos:end="57:40"><type pos:start="57:9" pos:end="57:23"><name pos:start="57:9" pos:end="57:21">MXFDescriptor</name> <modifier pos:start="57:23" pos:end="57:23">*</modifier></type><name pos:start="57:24" pos:end="57:33">descriptor</name> <init pos:start="57:35" pos:end="57:40">= <expr pos:start="57:37" pos:end="57:40"><name pos:start="57:37" pos:end="57:40">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="59:9" pos:end="59:49"><decl pos:start="59:9" pos:end="59:48"><type pos:start="59:9" pos:end="59:32"><name pos:start="59:9" pos:end="59:30">MXFStructuralComponent</name> <modifier pos:start="59:32" pos:end="59:32">*</modifier></type><name pos:start="59:33" pos:end="59:41">component</name> <init pos:start="59:43" pos:end="59:48">= <expr pos:start="59:45" pos:end="59:48"><name pos:start="59:45" pos:end="59:48">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="61:9" pos:end="61:42"><decl pos:start="61:9" pos:end="61:41"><type pos:start="61:9" pos:end="61:26"><specifier pos:start="61:9" pos:end="61:13">const</specifier> <name pos:start="61:15" pos:end="61:24">MXFCodecUL</name> <modifier pos:start="61:26" pos:end="61:26">*</modifier></type><name pos:start="61:27" pos:end="61:34">codec_ul</name> <init pos:start="61:36" pos:end="61:41">= <expr pos:start="61:38" pos:end="61:41"><name pos:start="61:38" pos:end="61:41">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="63:9" pos:end="63:46"><decl pos:start="63:9" pos:end="63:45"><type pos:start="63:9" pos:end="63:26"><specifier pos:start="63:9" pos:end="63:13">const</specifier> <name pos:start="63:15" pos:end="63:24">MXFCodecUL</name> <modifier pos:start="63:26" pos:end="63:26">*</modifier></type><name pos:start="63:27" pos:end="63:38">container_ul</name> <init pos:start="63:40" pos:end="63:45">= <expr pos:start="63:42" pos:end="63:45"><name pos:start="63:42" pos:end="63:45">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="65:9" pos:end="65:21"><decl pos:start="65:9" pos:end="65:20"><type pos:start="65:9" pos:end="65:18"><name pos:start="65:9" pos:end="65:16">AVStream</name> <modifier pos:start="65:18" pos:end="65:18">*</modifier></type><name pos:start="65:19" pos:end="65:20">st</name></decl>;</decl_stmt>



        <if_stmt pos:start="69:9" pos:end="75:9"><if pos:start="69:9" pos:end="75:9">if <condition pos:start="69:12" pos:end="69:95">(<expr pos:start="69:13" pos:end="69:94"><operator pos:start="69:13" pos:end="69:13">!</operator><operator pos:start="69:14" pos:end="69:14">(</operator><name pos:start="69:15" pos:end="69:28">material_track</name> <operator pos:start="69:30" pos:end="69:30">=</operator> <call pos:start="69:32" pos:end="69:93"><name pos:start="69:32" pos:end="69:53">mxf_resolve_strong_ref</name><argument_list pos:start="69:54" pos:end="69:93">(<argument pos:start="69:55" pos:end="69:57"><expr pos:start="69:55" pos:end="69:57"><name pos:start="69:55" pos:end="69:57">mxf</name></expr></argument>, <argument pos:start="69:60" pos:end="69:92"><expr pos:start="69:60" pos:end="69:92"><operator pos:start="69:60" pos:end="69:60">&amp;</operator><name pos:start="69:61" pos:end="69:92"><name pos:start="69:61" pos:end="69:76">material_package</name><operator pos:start="69:77" pos:end="69:78">-&gt;</operator><name pos:start="69:79" pos:end="69:89">tracks_refs</name><index pos:start="69:90" pos:end="69:92">[<expr pos:start="69:91" pos:end="69:91"><name pos:start="69:91" pos:end="69:91">i</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="69:94" pos:end="69:94">)</operator></expr>)</condition> <block pos:start="69:97" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:21">

            <expr_stmt pos:start="71:13" pos:end="71:91"><expr pos:start="71:13" pos:end="71:90"><call pos:start="71:13" pos:end="71:90"><name pos:start="71:13" pos:end="71:18">av_log</name><argument_list pos:start="71:19" pos:end="71:90">(<argument pos:start="71:20" pos:end="71:26"><expr pos:start="71:20" pos:end="71:26"><name pos:start="71:20" pos:end="71:26"><name pos:start="71:20" pos:end="71:22">mxf</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:26">fc</name></name></expr></argument>, <argument pos:start="71:29" pos:end="71:40"><expr pos:start="71:29" pos:end="71:40"><name pos:start="71:29" pos:end="71:40">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:43" pos:end="71:89"><expr pos:start="71:43" pos:end="71:89"><literal type="string" pos:start="71:43" pos:end="71:89">"could not resolve material track strong ref\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="73:13" pos:end="73:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="79:9" pos:end="85:9"><if pos:start="79:9" pos:end="85:9">if <condition pos:start="79:12" pos:end="79:101">(<expr pos:start="79:13" pos:end="79:100"><operator pos:start="79:13" pos:end="79:13">!</operator><operator pos:start="79:14" pos:end="79:14">(</operator><name pos:start="79:15" pos:end="79:38"><name pos:start="79:15" pos:end="79:28">material_track</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:38">sequence</name></name> <operator pos:start="79:40" pos:end="79:40">=</operator> <call pos:start="79:42" pos:end="79:99"><name pos:start="79:42" pos:end="79:63">mxf_resolve_strong_ref</name><argument_list pos:start="79:64" pos:end="79:99">(<argument pos:start="79:65" pos:end="79:67"><expr pos:start="79:65" pos:end="79:67"><name pos:start="79:65" pos:end="79:67">mxf</name></expr></argument>, <argument pos:start="79:70" pos:end="79:98"><expr pos:start="79:70" pos:end="79:98"><operator pos:start="79:70" pos:end="79:70">&amp;</operator><name pos:start="79:71" pos:end="79:98"><name pos:start="79:71" pos:end="79:84">material_track</name><operator pos:start="79:85" pos:end="79:86">-&gt;</operator><name pos:start="79:87" pos:end="79:98">sequence_ref</name></name></expr></argument>)</argument_list></call><operator pos:start="79:100" pos:end="79:100">)</operator></expr>)</condition> <block pos:start="79:103" pos:end="85:9">{<block_content pos:start="81:13" pos:end="83:22">

            <expr_stmt pos:start="81:13" pos:end="81:100"><expr pos:start="81:13" pos:end="81:99"><call pos:start="81:13" pos:end="81:99"><name pos:start="81:13" pos:end="81:18">av_log</name><argument_list pos:start="81:19" pos:end="81:99">(<argument pos:start="81:20" pos:end="81:26"><expr pos:start="81:20" pos:end="81:26"><name pos:start="81:20" pos:end="81:26"><name pos:start="81:20" pos:end="81:22">mxf</name><operator pos:start="81:23" pos:end="81:24">-&gt;</operator><name pos:start="81:25" pos:end="81:26">fc</name></name></expr></argument>, <argument pos:start="81:29" pos:end="81:40"><expr pos:start="81:29" pos:end="81:40"><name pos:start="81:29" pos:end="81:40">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:43" pos:end="81:98"><expr pos:start="81:43" pos:end="81:98"><literal type="string" pos:start="81:43" pos:end="81:98">"could not resolve material track sequence strong ref\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="83:13" pos:end="83:22">return <expr pos:start="83:20" pos:end="83:21"><operator pos:start="83:20" pos:end="83:20">-</operator><literal type="number" pos:start="83:21" pos:end="83:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="89:9" pos:end="89:48">/* TODO: handle multiple source clips */</comment>

        <for pos:start="91:9" pos:end="159:9">for <control pos:start="91:13" pos:end="91:83">(<init pos:start="91:14" pos:end="91:19"><expr pos:start="91:14" pos:end="91:18"><name pos:start="91:14" pos:end="91:14">j</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <literal type="number" pos:start="91:18" pos:end="91:18">0</literal></expr>;</init> <condition pos:start="91:21" pos:end="91:78"><expr pos:start="91:21" pos:end="91:77"><name pos:start="91:21" pos:end="91:21">j</name> <operator pos:start="91:23" pos:end="91:23">&lt;</operator> <name pos:start="91:25" pos:end="91:77"><name pos:start="91:25" pos:end="91:38">material_track</name><operator pos:start="91:39" pos:end="91:40">-&gt;</operator><name pos:start="91:41" pos:end="91:48">sequence</name><operator pos:start="91:49" pos:end="91:50">-&gt;</operator><name pos:start="91:51" pos:end="91:77">structural_components_count</name></name></expr>;</condition> <incr pos:start="91:80" pos:end="91:82"><expr pos:start="91:80" pos:end="91:82"><name pos:start="91:80" pos:end="91:80">j</name><operator pos:start="91:81" pos:end="91:82">++</operator></expr></incr>)</control> <block pos:start="91:85" pos:end="159:9">{<block_content pos:start="95:13" pos:end="157:13">

            <comment type="block" pos:start="93:13" pos:end="93:49">/* TODO: handle timecode component */</comment>

            <expr_stmt pos:start="95:13" pos:end="95:110"><expr pos:start="95:13" pos:end="95:109"><name pos:start="95:13" pos:end="95:21">component</name> <operator pos:start="95:23" pos:end="95:23">=</operator> <call pos:start="95:25" pos:end="95:109"><name pos:start="95:25" pos:end="95:46">mxf_resolve_strong_ref</name><argument_list pos:start="95:47" pos:end="95:109">(<argument pos:start="95:48" pos:end="95:50"><expr pos:start="95:48" pos:end="95:50"><name pos:start="95:48" pos:end="95:50">mxf</name></expr></argument>, <argument pos:start="95:53" pos:end="95:108"><expr pos:start="95:53" pos:end="95:108"><operator pos:start="95:53" pos:end="95:53">&amp;</operator><name pos:start="95:54" pos:end="95:108"><name pos:start="95:54" pos:end="95:67">material_track</name><operator pos:start="95:68" pos:end="95:69">-&gt;</operator><name pos:start="95:70" pos:end="95:77">sequence</name><operator pos:start="95:78" pos:end="95:79">-&gt;</operator><name pos:start="95:80" pos:end="95:105">structural_components_refs</name><index pos:start="95:106" pos:end="95:108">[<expr pos:start="95:107" pos:end="95:107"><name pos:start="95:107" pos:end="95:107">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="97:13" pos:end="99:25"><if pos:start="97:13" pos:end="99:25">if <condition pos:start="97:16" pos:end="97:60">(<expr pos:start="97:17" pos:end="97:59"><operator pos:start="97:17" pos:end="97:17">!</operator><name pos:start="97:18" pos:end="97:26">component</name> <operator pos:start="97:28" pos:end="97:29">||</operator> <name pos:start="97:31" pos:end="97:45"><name pos:start="97:31" pos:end="97:39">component</name><operator pos:start="97:40" pos:end="97:41">-&gt;</operator><name pos:start="97:42" pos:end="97:45">type</name></name> <operator pos:start="97:47" pos:end="97:48">!=</operator> <name pos:start="97:50" pos:end="97:59">SourceClip</name></expr>)</condition><block type="pseudo" pos:start="99:17" pos:end="99:25"><block_content pos:start="99:17" pos:end="99:25">

                <continue pos:start="99:17" pos:end="99:25">continue;</continue></block_content></block></if></if_stmt>



            <for pos:start="103:13" pos:end="121:13">for <control pos:start="103:17" pos:end="103:53">(<init pos:start="103:18" pos:end="103:23"><expr pos:start="103:18" pos:end="103:22"><name pos:start="103:18" pos:end="103:18">k</name> <operator pos:start="103:20" pos:end="103:20">=</operator> <literal type="number" pos:start="103:22" pos:end="103:22">0</literal></expr>;</init> <condition pos:start="103:25" pos:end="103:48"><expr pos:start="103:25" pos:end="103:47"><name pos:start="103:25" pos:end="103:25">k</name> <operator pos:start="103:27" pos:end="103:27">&lt;</operator> <name pos:start="103:29" pos:end="103:47"><name pos:start="103:29" pos:end="103:31">mxf</name><operator pos:start="103:32" pos:end="103:33">-&gt;</operator><name pos:start="103:34" pos:end="103:47">packages_count</name></name></expr>;</condition> <incr pos:start="103:50" pos:end="103:52"><expr pos:start="103:50" pos:end="103:52"><name pos:start="103:50" pos:end="103:50">k</name><operator pos:start="103:51" pos:end="103:52">++</operator></expr></incr>)</control> <block pos:start="103:55" pos:end="121:13">{<block_content pos:start="105:17" pos:end="119:17">

                <if_stmt pos:start="105:17" pos:end="111:17"><if pos:start="105:17" pos:end="111:17">if <condition pos:start="105:20" pos:end="105:90">(<expr pos:start="105:21" pos:end="105:89"><operator pos:start="105:21" pos:end="105:21">!</operator><operator pos:start="105:22" pos:end="105:22">(</operator><name pos:start="105:23" pos:end="105:34">temp_package</name> <operator pos:start="105:36" pos:end="105:36">=</operator> <call pos:start="105:38" pos:end="105:88"><name pos:start="105:38" pos:end="105:59">mxf_resolve_strong_ref</name><argument_list pos:start="105:60" pos:end="105:88">(<argument pos:start="105:61" pos:end="105:63"><expr pos:start="105:61" pos:end="105:63"><name pos:start="105:61" pos:end="105:63">mxf</name></expr></argument>, <argument pos:start="105:66" pos:end="105:87"><expr pos:start="105:66" pos:end="105:87"><operator pos:start="105:66" pos:end="105:66">&amp;</operator><name pos:start="105:67" pos:end="105:87"><name pos:start="105:67" pos:end="105:69">mxf</name><operator pos:start="105:70" pos:end="105:71">-&gt;</operator><name pos:start="105:72" pos:end="105:84">packages_refs</name><index pos:start="105:85" pos:end="105:87">[<expr pos:start="105:86" pos:end="105:86"><name pos:start="105:86" pos:end="105:86">k</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="105:89" pos:end="105:89">)</operator></expr>)</condition> <block pos:start="105:92" pos:end="111:17">{<block_content pos:start="107:21" pos:end="109:30">

                    <expr_stmt pos:start="107:21" pos:end="107:97"><expr pos:start="107:21" pos:end="107:96"><call pos:start="107:21" pos:end="107:96"><name pos:start="107:21" pos:end="107:26">av_log</name><argument_list pos:start="107:27" pos:end="107:96">(<argument pos:start="107:28" pos:end="107:34"><expr pos:start="107:28" pos:end="107:34"><name pos:start="107:28" pos:end="107:34"><name pos:start="107:28" pos:end="107:30">mxf</name><operator pos:start="107:31" pos:end="107:32">-&gt;</operator><name pos:start="107:33" pos:end="107:34">fc</name></name></expr></argument>, <argument pos:start="107:37" pos:end="107:48"><expr pos:start="107:37" pos:end="107:48"><name pos:start="107:37" pos:end="107:48">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="107:51" pos:end="107:95"><expr pos:start="107:51" pos:end="107:95"><literal type="string" pos:start="107:51" pos:end="107:95">"could not resolve source track strong ref\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="109:21" pos:end="109:30">return <expr pos:start="109:28" pos:end="109:29"><operator pos:start="109:28" pos:end="109:28">-</operator><literal type="number" pos:start="109:29" pos:end="109:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="113:17" pos:end="119:17"><if pos:start="113:17" pos:end="119:17">if <condition pos:start="113:20" pos:end="113:90">(<expr pos:start="113:21" pos:end="113:89"><operator pos:start="113:21" pos:end="113:21">!</operator><call pos:start="113:22" pos:end="113:89"><name pos:start="113:22" pos:end="113:27">memcmp</name><argument_list pos:start="113:28" pos:end="113:89">(<argument pos:start="113:29" pos:end="113:53"><expr pos:start="113:29" pos:end="113:53"><name pos:start="113:29" pos:end="113:53"><name pos:start="113:29" pos:end="113:40">temp_package</name><operator pos:start="113:41" pos:end="113:42">-&gt;</operator><name pos:start="113:43" pos:end="113:53">package_uid</name></name></expr></argument>, <argument pos:start="113:56" pos:end="113:84"><expr pos:start="113:56" pos:end="113:84"><name pos:start="113:56" pos:end="113:84"><name pos:start="113:56" pos:end="113:64">component</name><operator pos:start="113:65" pos:end="113:66">-&gt;</operator><name pos:start="113:67" pos:end="113:84">source_package_uid</name></name></expr></argument>, <argument pos:start="113:87" pos:end="113:88"><expr pos:start="113:87" pos:end="113:88"><literal type="number" pos:start="113:87" pos:end="113:88">16</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="113:92" pos:end="119:17">{<block_content pos:start="115:21" pos:end="117:26">

                    <expr_stmt pos:start="115:21" pos:end="115:50"><expr pos:start="115:21" pos:end="115:49"><name pos:start="115:21" pos:end="115:34">source_package</name> <operator pos:start="115:36" pos:end="115:36">=</operator> <name pos:start="115:38" pos:end="115:49">temp_package</name></expr>;</expr_stmt>

                    <break pos:start="117:21" pos:end="117:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="123:13" pos:end="129:13"><if pos:start="123:13" pos:end="129:13">if <condition pos:start="123:16" pos:end="123:32">(<expr pos:start="123:17" pos:end="123:31"><operator pos:start="123:17" pos:end="123:17">!</operator><name pos:start="123:18" pos:end="123:31">source_package</name></expr>)</condition> <block pos:start="123:34" pos:end="129:13">{<block_content pos:start="125:17" pos:end="127:22">

                <expr_stmt pos:start="125:17" pos:end="125:134"><expr pos:start="125:17" pos:end="125:133"><call pos:start="125:17" pos:end="125:133"><name pos:start="125:17" pos:end="125:22">av_log</name><argument_list pos:start="125:23" pos:end="125:133">(<argument pos:start="125:24" pos:end="125:30"><expr pos:start="125:24" pos:end="125:30"><name pos:start="125:24" pos:end="125:30"><name pos:start="125:24" pos:end="125:26">mxf</name><operator pos:start="125:27" pos:end="125:28">-&gt;</operator><name pos:start="125:29" pos:end="125:30">fc</name></name></expr></argument>, <argument pos:start="125:33" pos:end="125:44"><expr pos:start="125:33" pos:end="125:44"><name pos:start="125:33" pos:end="125:44">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="125:47" pos:end="125:106"><expr pos:start="125:47" pos:end="125:106"><literal type="string" pos:start="125:47" pos:end="125:106">"material track %d: no corresponding source package found\n"</literal></expr></argument>, <argument pos:start="125:109" pos:end="125:132"><expr pos:start="125:109" pos:end="125:132"><name pos:start="125:109" pos:end="125:132"><name pos:start="125:109" pos:end="125:122">material_track</name><operator pos:start="125:123" pos:end="125:124">-&gt;</operator><name pos:start="125:125" pos:end="125:132">track_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="127:17" pos:end="127:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <for pos:start="131:13" pos:end="149:13">for <control pos:start="131:17" pos:end="131:62">(<init pos:start="131:18" pos:end="131:23"><expr pos:start="131:18" pos:end="131:22"><name pos:start="131:18" pos:end="131:18">k</name> <operator pos:start="131:20" pos:end="131:20">=</operator> <literal type="number" pos:start="131:22" pos:end="131:22">0</literal></expr>;</init> <condition pos:start="131:25" pos:end="131:57"><expr pos:start="131:25" pos:end="131:56"><name pos:start="131:25" pos:end="131:25">k</name> <operator pos:start="131:27" pos:end="131:27">&lt;</operator> <name pos:start="131:29" pos:end="131:56"><name pos:start="131:29" pos:end="131:42">source_package</name><operator pos:start="131:43" pos:end="131:44">-&gt;</operator><name pos:start="131:45" pos:end="131:56">tracks_count</name></name></expr>;</condition> <incr pos:start="131:59" pos:end="131:61"><expr pos:start="131:59" pos:end="131:61"><name pos:start="131:59" pos:end="131:59">k</name><operator pos:start="131:60" pos:end="131:61">++</operator></expr></incr>)</control> <block pos:start="131:64" pos:end="149:13">{<block_content pos:start="133:17" pos:end="147:17">

                <if_stmt pos:start="133:17" pos:end="139:17"><if pos:start="133:17" pos:end="139:17">if <condition pos:start="133:20" pos:end="133:97">(<expr pos:start="133:21" pos:end="133:96"><operator pos:start="133:21" pos:end="133:21">!</operator><operator pos:start="133:22" pos:end="133:22">(</operator><name pos:start="133:23" pos:end="133:32">temp_track</name> <operator pos:start="133:34" pos:end="133:34">=</operator> <call pos:start="133:36" pos:end="133:95"><name pos:start="133:36" pos:end="133:57">mxf_resolve_strong_ref</name><argument_list pos:start="133:58" pos:end="133:95">(<argument pos:start="133:59" pos:end="133:61"><expr pos:start="133:59" pos:end="133:61"><name pos:start="133:59" pos:end="133:61">mxf</name></expr></argument>, <argument pos:start="133:64" pos:end="133:94"><expr pos:start="133:64" pos:end="133:94"><operator pos:start="133:64" pos:end="133:64">&amp;</operator><name pos:start="133:65" pos:end="133:94"><name pos:start="133:65" pos:end="133:78">source_package</name><operator pos:start="133:79" pos:end="133:80">-&gt;</operator><name pos:start="133:81" pos:end="133:91">tracks_refs</name><index pos:start="133:92" pos:end="133:94">[<expr pos:start="133:93" pos:end="133:93"><name pos:start="133:93" pos:end="133:93">k</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="133:96" pos:end="133:96">)</operator></expr>)</condition> <block pos:start="133:99" pos:end="139:17">{<block_content pos:start="135:21" pos:end="137:30">

                    <expr_stmt pos:start="135:21" pos:end="135:97"><expr pos:start="135:21" pos:end="135:96"><call pos:start="135:21" pos:end="135:96"><name pos:start="135:21" pos:end="135:26">av_log</name><argument_list pos:start="135:27" pos:end="135:96">(<argument pos:start="135:28" pos:end="135:34"><expr pos:start="135:28" pos:end="135:34"><name pos:start="135:28" pos:end="135:34"><name pos:start="135:28" pos:end="135:30">mxf</name><operator pos:start="135:31" pos:end="135:32">-&gt;</operator><name pos:start="135:33" pos:end="135:34">fc</name></name></expr></argument>, <argument pos:start="135:37" pos:end="135:48"><expr pos:start="135:37" pos:end="135:48"><name pos:start="135:37" pos:end="135:48">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="135:51" pos:end="135:95"><expr pos:start="135:51" pos:end="135:95"><literal type="string" pos:start="135:51" pos:end="135:95">"could not resolve source track strong ref\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="137:21" pos:end="137:30">return <expr pos:start="137:28" pos:end="137:29"><operator pos:start="137:28" pos:end="137:28">-</operator><literal type="number" pos:start="137:29" pos:end="137:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="141:17" pos:end="147:17"><if pos:start="141:17" pos:end="147:17">if <condition pos:start="141:20" pos:end="141:71">(<expr pos:start="141:21" pos:end="141:70"><name pos:start="141:21" pos:end="141:40"><name pos:start="141:21" pos:end="141:30">temp_track</name><operator pos:start="141:31" pos:end="141:32">-&gt;</operator><name pos:start="141:33" pos:end="141:40">track_id</name></name> <operator pos:start="141:42" pos:end="141:43">==</operator> <name pos:start="141:45" pos:end="141:70"><name pos:start="141:45" pos:end="141:53">component</name><operator pos:start="141:54" pos:end="141:55">-&gt;</operator><name pos:start="141:56" pos:end="141:70">source_track_id</name></name></expr>)</condition> <block pos:start="141:73" pos:end="147:17">{<block_content pos:start="143:21" pos:end="145:26">

                    <expr_stmt pos:start="143:21" pos:end="143:46"><expr pos:start="143:21" pos:end="143:45"><name pos:start="143:21" pos:end="143:32">source_track</name> <operator pos:start="143:34" pos:end="143:34">=</operator> <name pos:start="143:36" pos:end="143:45">temp_track</name></expr>;</expr_stmt>

                    <break pos:start="145:21" pos:end="145:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="151:13" pos:end="157:13"><if pos:start="151:13" pos:end="157:13">if <condition pos:start="151:16" pos:end="151:30">(<expr pos:start="151:17" pos:end="151:29"><operator pos:start="151:17" pos:end="151:17">!</operator><name pos:start="151:18" pos:end="151:29">source_track</name></expr>)</condition> <block pos:start="151:32" pos:end="157:13">{<block_content pos:start="153:17" pos:end="155:22">

                <expr_stmt pos:start="153:17" pos:end="153:132"><expr pos:start="153:17" pos:end="153:131"><call pos:start="153:17" pos:end="153:131"><name pos:start="153:17" pos:end="153:22">av_log</name><argument_list pos:start="153:23" pos:end="153:131">(<argument pos:start="153:24" pos:end="153:30"><expr pos:start="153:24" pos:end="153:30"><name pos:start="153:24" pos:end="153:30"><name pos:start="153:24" pos:end="153:26">mxf</name><operator pos:start="153:27" pos:end="153:28">-&gt;</operator><name pos:start="153:29" pos:end="153:30">fc</name></name></expr></argument>, <argument pos:start="153:33" pos:end="153:44"><expr pos:start="153:33" pos:end="153:44"><name pos:start="153:33" pos:end="153:44">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="153:47" pos:end="153:104"><expr pos:start="153:47" pos:end="153:104"><literal type="string" pos:start="153:47" pos:end="153:104">"material track %d: no corresponding source track found\n"</literal></expr></argument>, <argument pos:start="153:107" pos:end="153:130"><expr pos:start="153:107" pos:end="153:130"><name pos:start="153:107" pos:end="153:130"><name pos:start="153:107" pos:end="153:120">material_track</name><operator pos:start="153:121" pos:end="153:122">-&gt;</operator><name pos:start="153:123" pos:end="153:130">track_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="155:17" pos:end="155:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="161:9" pos:end="163:21"><if pos:start="161:9" pos:end="163:21">if <condition pos:start="161:12" pos:end="161:26">(<expr pos:start="161:13" pos:end="161:25"><operator pos:start="161:13" pos:end="161:13">!</operator><name pos:start="161:14" pos:end="161:25">source_track</name></expr>)</condition><block type="pseudo" pos:start="163:13" pos:end="163:21"><block_content pos:start="163:13" pos:end="163:21">

            <continue pos:start="163:13" pos:end="163:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="167:9" pos:end="167:60"><expr pos:start="167:9" pos:end="167:59"><name pos:start="167:9" pos:end="167:10">st</name> <operator pos:start="167:12" pos:end="167:12">=</operator> <call pos:start="167:14" pos:end="167:59"><name pos:start="167:14" pos:end="167:26">av_new_stream</name><argument_list pos:start="167:27" pos:end="167:59">(<argument pos:start="167:28" pos:end="167:34"><expr pos:start="167:28" pos:end="167:34"><name pos:start="167:28" pos:end="167:34"><name pos:start="167:28" pos:end="167:30">mxf</name><operator pos:start="167:31" pos:end="167:32">-&gt;</operator><name pos:start="167:33" pos:end="167:34">fc</name></name></expr></argument>, <argument pos:start="167:37" pos:end="167:58"><expr pos:start="167:37" pos:end="167:58"><name pos:start="167:37" pos:end="167:58"><name pos:start="167:37" pos:end="167:48">source_track</name><operator pos:start="167:49" pos:end="167:50">-&gt;</operator><name pos:start="167:51" pos:end="167:58">track_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:37"><expr pos:start="169:9" pos:end="169:36"><name pos:start="169:9" pos:end="169:21"><name pos:start="169:9" pos:end="169:10">st</name><operator pos:start="169:11" pos:end="169:12">-&gt;</operator><name pos:start="169:13" pos:end="169:21">priv_data</name></name> <operator pos:start="169:23" pos:end="169:23">=</operator> <name pos:start="169:25" pos:end="169:36">source_track</name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:43"><expr pos:start="171:9" pos:end="171:42"><name pos:start="171:9" pos:end="171:20"><name pos:start="171:9" pos:end="171:10">st</name><operator pos:start="171:11" pos:end="171:12">-&gt;</operator><name pos:start="171:13" pos:end="171:20">duration</name></name> <operator pos:start="171:22" pos:end="171:22">=</operator> <name pos:start="171:24" pos:end="171:42"><name pos:start="171:24" pos:end="171:32">component</name><operator pos:start="171:33" pos:end="171:34">-&gt;</operator><name pos:start="171:35" pos:end="171:42">duration</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="173:9" pos:end="175:42"><if pos:start="173:9" pos:end="175:42">if <condition pos:start="173:12" pos:end="173:31">(<expr pos:start="173:13" pos:end="173:30"><name pos:start="173:13" pos:end="173:24"><name pos:start="173:13" pos:end="173:14">st</name><operator pos:start="173:15" pos:end="173:16">-&gt;</operator><name pos:start="173:17" pos:end="173:24">duration</name></name> <operator pos:start="173:26" pos:end="173:27">==</operator> <operator pos:start="173:29" pos:end="173:29">-</operator><literal type="number" pos:start="173:30" pos:end="173:30">1</literal></expr>)</condition><block type="pseudo" pos:start="175:13" pos:end="175:42"><block_content pos:start="175:13" pos:end="175:42">

            <expr_stmt pos:start="175:13" pos:end="175:42"><expr pos:start="175:13" pos:end="175:41"><name pos:start="175:13" pos:end="175:24"><name pos:start="175:13" pos:end="175:14">st</name><operator pos:start="175:15" pos:end="175:16">-&gt;</operator><name pos:start="175:17" pos:end="175:24">duration</name></name> <operator pos:start="175:26" pos:end="175:26">=</operator> <name pos:start="175:28" pos:end="175:41">AV_NOPTS_VALUE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:51"><expr pos:start="177:9" pos:end="177:50"><name pos:start="177:9" pos:end="177:22"><name pos:start="177:9" pos:end="177:10">st</name><operator pos:start="177:11" pos:end="177:12">-&gt;</operator><name pos:start="177:13" pos:end="177:22">start_time</name></name> <operator pos:start="177:24" pos:end="177:24">=</operator> <name pos:start="177:26" pos:end="177:50"><name pos:start="177:26" pos:end="177:34">component</name><operator pos:start="177:35" pos:end="177:36">-&gt;</operator><name pos:start="177:37" pos:end="177:50">start_position</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:94"><expr pos:start="179:9" pos:end="179:93"><call pos:start="179:9" pos:end="179:93"><name pos:start="179:9" pos:end="179:23">av_set_pts_info</name><argument_list pos:start="179:24" pos:end="179:93">(<argument pos:start="179:25" pos:end="179:26"><expr pos:start="179:25" pos:end="179:26"><name pos:start="179:25" pos:end="179:26">st</name></expr></argument>, <argument pos:start="179:29" pos:end="179:30"><expr pos:start="179:29" pos:end="179:30"><literal type="number" pos:start="179:29" pos:end="179:30">64</literal></expr></argument>, <argument pos:start="179:33" pos:end="179:61"><expr pos:start="179:33" pos:end="179:61"><name pos:start="179:33" pos:end="179:61"><name pos:start="179:33" pos:end="179:46">material_track</name><operator pos:start="179:47" pos:end="179:48">-&gt;</operator><name pos:start="179:49" pos:end="179:57">edit_rate</name><operator pos:start="179:58" pos:end="179:58">.</operator><name pos:start="179:59" pos:end="179:61">num</name></name></expr></argument>, <argument pos:start="179:64" pos:end="179:92"><expr pos:start="179:64" pos:end="179:92"><name pos:start="179:64" pos:end="179:92"><name pos:start="179:64" pos:end="179:77">material_track</name><operator pos:start="179:78" pos:end="179:79">-&gt;</operator><name pos:start="179:80" pos:end="179:88">edit_rate</name><operator pos:start="179:89" pos:end="179:89">.</operator><name pos:start="179:90" pos:end="179:92">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="183:9" pos:end="194:0"><if pos:start="183:9" pos:end="194:0">if <condition pos:start="183:12" pos:end="183:97">(<expr pos:start="183:13" pos:end="183:96"><operator pos:start="183:13" pos:end="183:13">!</operator><operator pos:start="183:14" pos:end="183:14">(</operator><name pos:start="183:15" pos:end="183:36"><name pos:start="183:15" pos:end="183:26">source_track</name><operator pos:start="183:27" pos:end="183:28">-&gt;</operator><name pos:start="183:29" pos:end="183:36">sequence</name></name> <operator pos:start="183:38" pos:end="183:38">=</operator> <call pos:start="183:40" pos:end="183:95"><name pos:start="183:40" pos:end="183:61">mxf_resolve_strong_ref</name><argument_list pos:start="183:62" pos:end="183:95">(<argument pos:start="183:63" pos:end="183:65"><expr pos:start="183:63" pos:end="183:65"><name pos:start="183:63" pos:end="183:65">mxf</name></expr></argument>, <argument pos:start="183:68" pos:end="183:94"><expr pos:start="183:68" pos:end="183:94"><operator pos:start="183:68" pos:end="183:68">&amp;</operator><name pos:start="183:69" pos:end="183:94"><name pos:start="183:69" pos:end="183:80">source_track</name><operator pos:start="183:81" pos:end="183:82">-&gt;</operator><name pos:start="183:83" pos:end="183:94">sequence_ref</name></name></expr></argument>)</argument_list></call><operator pos:start="183:96" pos:end="183:96">)</operator></expr>)</condition> <block pos:start="183:99" pos:end="194:0">{<block_content pos:start="185:13" pos:end="187:22">

            <expr_stmt pos:start="185:13" pos:end="185:98"><expr pos:start="185:13" pos:end="185:97"><call pos:start="185:13" pos:end="185:97"><name pos:start="185:13" pos:end="185:18">av_log</name><argument_list pos:start="185:19" pos:end="185:97">(<argument pos:start="185:20" pos:end="185:26"><expr pos:start="185:20" pos:end="185:26"><name pos:start="185:20" pos:end="185:26"><name pos:start="185:20" pos:end="185:22">mxf</name><operator pos:start="185:23" pos:end="185:24">-&gt;</operator><name pos:start="185:25" pos:end="185:26">fc</name></name></expr></argument>, <argument pos:start="185:29" pos:end="185:40"><expr pos:start="185:29" pos:end="185:40"><name pos:start="185:29" pos:end="185:40">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="185:43" pos:end="185:96"><expr pos:start="185:43" pos:end="185:96"><literal type="string" pos:start="185:43" pos:end="185:96">"could not resolve source track sequence strong ref\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="187:13" pos:end="187:22">return <expr pos:start="187:20" pos:end="187:21"><operator pos:start="187:20" pos:end="187:20">-</operator><literal type="number" pos:start="187:21" pos:end="187:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="193:1" pos:end="193:12">#<cpp:directive pos:start="193:2" pos:end="193:6">ifdef</cpp:directive> <name pos:start="193:8" pos:end="193:12">DEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="195:9" pos:end="198:0"><expr pos:start="195:9" pos:end="195:85"><call pos:start="195:9" pos:end="195:85"><name pos:start="195:9" pos:end="195:17">PRINT_KEY</name><argument_list pos:start="195:18" pos:end="195:85">(<argument pos:start="195:19" pos:end="195:40"><expr pos:start="195:19" pos:end="195:40"><literal type="string" pos:start="195:19" pos:end="195:40">"data definition   ul"</literal></expr></argument>, <argument pos:start="195:43" pos:end="195:84"><expr pos:start="195:43" pos:end="195:84"><name pos:start="195:43" pos:end="195:84"><name pos:start="195:43" pos:end="195:54">source_track</name><operator pos:start="195:55" pos:end="195:56">-&gt;</operator><name pos:start="195:57" pos:end="195:64">sequence</name><operator pos:start="195:65" pos:end="195:66">-&gt;</operator><name pos:start="195:67" pos:end="195:84">data_definition_ul</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="197:1" pos:end="197:6">#<cpp:directive pos:start="197:2" pos:end="197:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="199:9" pos:end="199:121"><expr pos:start="199:9" pos:end="199:120"><name pos:start="199:9" pos:end="199:29"><name pos:start="199:9" pos:end="199:10">st</name><operator pos:start="199:11" pos:end="199:12">-&gt;</operator><name pos:start="199:13" pos:end="199:17">codec</name><operator pos:start="199:18" pos:end="199:19">-&gt;</operator><name pos:start="199:20" pos:end="199:29">codec_type</name></name> <operator pos:start="199:31" pos:end="199:31">=</operator> <call pos:start="199:33" pos:end="199:120"><name pos:start="199:33" pos:end="199:50">mxf_get_codec_type</name><argument_list pos:start="199:51" pos:end="199:120">(<argument pos:start="199:52" pos:end="199:74"><expr pos:start="199:52" pos:end="199:74"><name pos:start="199:52" pos:end="199:74">mxf_data_definition_uls</name></expr></argument>, <argument pos:start="199:77" pos:end="199:119"><expr pos:start="199:77" pos:end="199:119"><operator pos:start="199:77" pos:end="199:77">&amp;</operator><name pos:start="199:78" pos:end="199:119"><name pos:start="199:78" pos:end="199:89">source_track</name><operator pos:start="199:90" pos:end="199:91">-&gt;</operator><name pos:start="199:92" pos:end="199:99">sequence</name><operator pos:start="199:100" pos:end="199:101">-&gt;</operator><name pos:start="199:102" pos:end="199:119">data_definition_ul</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="203:9" pos:end="203:98"><expr pos:start="203:9" pos:end="203:97"><name pos:start="203:9" pos:end="203:34"><name pos:start="203:9" pos:end="203:22">source_package</name><operator pos:start="203:23" pos:end="203:24">-&gt;</operator><name pos:start="203:25" pos:end="203:34">descriptor</name></name> <operator pos:start="203:36" pos:end="203:36">=</operator> <call pos:start="203:38" pos:end="203:97"><name pos:start="203:38" pos:end="203:59">mxf_resolve_strong_ref</name><argument_list pos:start="203:60" pos:end="203:97">(<argument pos:start="203:61" pos:end="203:63"><expr pos:start="203:61" pos:end="203:63"><name pos:start="203:61" pos:end="203:63">mxf</name></expr></argument>, <argument pos:start="203:66" pos:end="203:96"><expr pos:start="203:66" pos:end="203:96"><operator pos:start="203:66" pos:end="203:66">&amp;</operator><name pos:start="203:67" pos:end="203:96"><name pos:start="203:67" pos:end="203:80">source_package</name><operator pos:start="203:81" pos:end="203:82">-&gt;</operator><name pos:start="203:83" pos:end="203:96">descriptor_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="205:9" pos:end="237:9"><if pos:start="205:9" pos:end="237:9">if <condition pos:start="205:12" pos:end="205:39">(<expr pos:start="205:13" pos:end="205:38"><name pos:start="205:13" pos:end="205:38"><name pos:start="205:13" pos:end="205:26">source_package</name><operator pos:start="205:27" pos:end="205:28">-&gt;</operator><name pos:start="205:29" pos:end="205:38">descriptor</name></name></expr>)</condition> <block pos:start="205:41" pos:end="237:9">{<block_content pos:start="207:13" pos:end="235:56">

            <if_stmt pos:start="207:13" pos:end="235:56"><if pos:start="207:13" pos:end="233:13">if <condition pos:start="207:16" pos:end="207:71">(<expr pos:start="207:17" pos:end="207:70"><name pos:start="207:17" pos:end="207:48"><name pos:start="207:17" pos:end="207:30">source_package</name><operator pos:start="207:31" pos:end="207:32">-&gt;</operator><name pos:start="207:33" pos:end="207:42">descriptor</name><operator pos:start="207:43" pos:end="207:44">-&gt;</operator><name pos:start="207:45" pos:end="207:48">type</name></name> <operator pos:start="207:50" pos:end="207:51">==</operator> <name pos:start="207:53" pos:end="207:70">MultipleDescriptor</name></expr>)</condition> <block pos:start="207:73" pos:end="233:13">{<block_content pos:start="209:17" pos:end="231:17">

                <for pos:start="209:17" pos:end="231:17">for <control pos:start="209:21" pos:end="209:87">(<init pos:start="209:22" pos:end="209:27"><expr pos:start="209:22" pos:end="209:26"><name pos:start="209:22" pos:end="209:22">j</name> <operator pos:start="209:24" pos:end="209:24">=</operator> <literal type="number" pos:start="209:26" pos:end="209:26">0</literal></expr>;</init> <condition pos:start="209:29" pos:end="209:82"><expr pos:start="209:29" pos:end="209:81"><name pos:start="209:29" pos:end="209:29">j</name> <operator pos:start="209:31" pos:end="209:31">&lt;</operator> <name pos:start="209:33" pos:end="209:81"><name pos:start="209:33" pos:end="209:46">source_package</name><operator pos:start="209:47" pos:end="209:48">-&gt;</operator><name pos:start="209:49" pos:end="209:58">descriptor</name><operator pos:start="209:59" pos:end="209:60">-&gt;</operator><name pos:start="209:61" pos:end="209:81">sub_descriptors_count</name></name></expr>;</condition> <incr pos:start="209:84" pos:end="209:86"><expr pos:start="209:84" pos:end="209:86"><name pos:start="209:84" pos:end="209:84">j</name><operator pos:start="209:85" pos:end="209:86">++</operator></expr></incr>)</control> <block pos:start="209:89" pos:end="231:17">{<block_content pos:start="211:21" pos:end="229:21">

                    <decl_stmt pos:start="211:21" pos:end="211:134"><decl pos:start="211:21" pos:end="211:133"><type pos:start="211:21" pos:end="211:35"><name pos:start="211:21" pos:end="211:33">MXFDescriptor</name> <modifier pos:start="211:35" pos:end="211:35">*</modifier></type><name pos:start="211:36" pos:end="211:49">sub_descriptor</name> <init pos:start="211:51" pos:end="211:133">= <expr pos:start="211:53" pos:end="211:133"><call pos:start="211:53" pos:end="211:133"><name pos:start="211:53" pos:end="211:74">mxf_resolve_strong_ref</name><argument_list pos:start="211:75" pos:end="211:133">(<argument pos:start="211:76" pos:end="211:78"><expr pos:start="211:76" pos:end="211:78"><name pos:start="211:76" pos:end="211:78">mxf</name></expr></argument>, <argument pos:start="211:81" pos:end="211:132"><expr pos:start="211:81" pos:end="211:132"><operator pos:start="211:81" pos:end="211:81">&amp;</operator><name pos:start="211:82" pos:end="211:132"><name pos:start="211:82" pos:end="211:95">source_package</name><operator pos:start="211:96" pos:end="211:97">-&gt;</operator><name pos:start="211:98" pos:end="211:107">descriptor</name><operator pos:start="211:108" pos:end="211:109">-&gt;</operator><name pos:start="211:110" pos:end="211:129">sub_descriptors_refs</name><index pos:start="211:130" pos:end="211:132">[<expr pos:start="211:131" pos:end="211:131"><name pos:start="211:131" pos:end="211:131">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                    <if_stmt pos:start="215:21" pos:end="221:21"><if pos:start="215:21" pos:end="221:21">if <condition pos:start="215:24" pos:end="215:40">(<expr pos:start="215:25" pos:end="215:39"><operator pos:start="215:25" pos:end="215:25">!</operator><name pos:start="215:26" pos:end="215:39">sub_descriptor</name></expr>)</condition> <block pos:start="215:42" pos:end="221:21">{<block_content pos:start="217:25" pos:end="219:33">

                        <expr_stmt pos:start="217:25" pos:end="217:103"><expr pos:start="217:25" pos:end="217:102"><call pos:start="217:25" pos:end="217:102"><name pos:start="217:25" pos:end="217:30">av_log</name><argument_list pos:start="217:31" pos:end="217:102">(<argument pos:start="217:32" pos:end="217:38"><expr pos:start="217:32" pos:end="217:38"><name pos:start="217:32" pos:end="217:38"><name pos:start="217:32" pos:end="217:34">mxf</name><operator pos:start="217:35" pos:end="217:36">-&gt;</operator><name pos:start="217:37" pos:end="217:38">fc</name></name></expr></argument>, <argument pos:start="217:41" pos:end="217:52"><expr pos:start="217:41" pos:end="217:52"><name pos:start="217:41" pos:end="217:52">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="217:55" pos:end="217:101"><expr pos:start="217:55" pos:end="217:101"><literal type="string" pos:start="217:55" pos:end="217:101">"could not resolve sub descriptor strong ref\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <continue pos:start="219:25" pos:end="219:33">continue;</continue>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="223:21" pos:end="229:21"><if pos:start="223:21" pos:end="229:21">if <condition pos:start="223:24" pos:end="223:82">(<expr pos:start="223:25" pos:end="223:81"><name pos:start="223:25" pos:end="223:55"><name pos:start="223:25" pos:end="223:38">sub_descriptor</name><operator pos:start="223:39" pos:end="223:40">-&gt;</operator><name pos:start="223:41" pos:end="223:55">linked_track_id</name></name> <operator pos:start="223:57" pos:end="223:58">==</operator> <name pos:start="223:60" pos:end="223:81"><name pos:start="223:60" pos:end="223:71">source_track</name><operator pos:start="223:72" pos:end="223:73">-&gt;</operator><name pos:start="223:74" pos:end="223:81">track_id</name></name></expr>)</condition> <block pos:start="223:84" pos:end="229:21">{<block_content pos:start="225:25" pos:end="227:30">

                        <expr_stmt pos:start="225:25" pos:end="225:52"><expr pos:start="225:25" pos:end="225:51"><name pos:start="225:25" pos:end="225:34">descriptor</name> <operator pos:start="225:36" pos:end="225:36">=</operator> <name pos:start="225:38" pos:end="225:51">sub_descriptor</name></expr>;</expr_stmt>

                        <break pos:start="227:25" pos:end="227:30">break;</break>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <else pos:start="233:15" pos:end="235:56">else<block type="pseudo" pos:start="235:17" pos:end="235:56"><block_content pos:start="235:17" pos:end="235:56">

                <expr_stmt pos:start="235:17" pos:end="235:56"><expr pos:start="235:17" pos:end="235:55"><name pos:start="235:17" pos:end="235:26">descriptor</name> <operator pos:start="235:28" pos:end="235:28">=</operator> <name pos:start="235:30" pos:end="235:55"><name pos:start="235:30" pos:end="235:43">source_package</name><operator pos:start="235:44" pos:end="235:45">-&gt;</operator><name pos:start="235:46" pos:end="235:55">descriptor</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="239:9" pos:end="248:0"><if pos:start="239:9" pos:end="248:0">if <condition pos:start="239:12" pos:end="239:24">(<expr pos:start="239:13" pos:end="239:23"><operator pos:start="239:13" pos:end="239:13">!</operator><name pos:start="239:14" pos:end="239:23">descriptor</name></expr>)</condition> <block pos:start="239:26" pos:end="248:0">{<block_content pos:start="241:13" pos:end="243:21">

            <expr_stmt pos:start="241:13" pos:end="241:129"><expr pos:start="241:13" pos:end="241:128"><call pos:start="241:13" pos:end="241:128"><name pos:start="241:13" pos:end="241:18">av_log</name><argument_list pos:start="241:19" pos:end="241:128">(<argument pos:start="241:20" pos:end="241:26"><expr pos:start="241:20" pos:end="241:26"><name pos:start="241:20" pos:end="241:26"><name pos:start="241:20" pos:end="241:22">mxf</name><operator pos:start="241:23" pos:end="241:24">-&gt;</operator><name pos:start="241:25" pos:end="241:26">fc</name></name></expr></argument>, <argument pos:start="241:29" pos:end="241:39"><expr pos:start="241:29" pos:end="241:39"><name pos:start="241:29" pos:end="241:39">AV_LOG_INFO</name></expr></argument>, <argument pos:start="241:42" pos:end="241:92"><expr pos:start="241:42" pos:end="241:92"><literal type="string" pos:start="241:42" pos:end="241:92">"source track %d: stream %d, no descriptor found\n"</literal></expr></argument>, <argument pos:start="241:95" pos:end="241:116"><expr pos:start="241:95" pos:end="241:116"><name pos:start="241:95" pos:end="241:116"><name pos:start="241:95" pos:end="241:106">source_track</name><operator pos:start="241:107" pos:end="241:108">-&gt;</operator><name pos:start="241:109" pos:end="241:116">track_id</name></name></expr></argument>, <argument pos:start="241:119" pos:end="241:127"><expr pos:start="241:119" pos:end="241:127"><name pos:start="241:119" pos:end="241:127"><name pos:start="241:119" pos:end="241:120">st</name><operator pos:start="241:121" pos:end="241:122">-&gt;</operator><name pos:start="241:123" pos:end="241:127">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="243:13" pos:end="243:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

<cpp:ifdef pos:start="247:1" pos:end="247:12">#<cpp:directive pos:start="247:2" pos:end="247:6">ifdef</cpp:directive> <name pos:start="247:8" pos:end="247:12">DEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="249:9" pos:end="249:72"><expr pos:start="249:9" pos:end="249:71"><call pos:start="249:9" pos:end="249:71"><name pos:start="249:9" pos:end="249:17">PRINT_KEY</name><argument_list pos:start="249:18" pos:end="249:71">(<argument pos:start="249:19" pos:end="249:40"><expr pos:start="249:19" pos:end="249:40"><literal type="string" pos:start="249:19" pos:end="249:40">"essence codec     ul"</literal></expr></argument>, <argument pos:start="249:43" pos:end="249:70"><expr pos:start="249:43" pos:end="249:70"><name pos:start="249:43" pos:end="249:70"><name pos:start="249:43" pos:end="249:52">descriptor</name><operator pos:start="249:53" pos:end="249:54">-&gt;</operator><name pos:start="249:55" pos:end="249:70">essence_codec_ul</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="251:9" pos:end="254:0"><expr pos:start="251:9" pos:end="251:75"><call pos:start="251:9" pos:end="251:75"><name pos:start="251:9" pos:end="251:17">PRINT_KEY</name><argument_list pos:start="251:18" pos:end="251:75">(<argument pos:start="251:19" pos:end="251:40"><expr pos:start="251:19" pos:end="251:40"><literal type="string" pos:start="251:19" pos:end="251:40">"essence container ul"</literal></expr></argument>, <argument pos:start="251:43" pos:end="251:74"><expr pos:start="251:43" pos:end="251:74"><name pos:start="251:43" pos:end="251:74"><name pos:start="251:43" pos:end="251:52">descriptor</name><operator pos:start="251:53" pos:end="251:54">-&gt;</operator><name pos:start="251:55" pos:end="251:74">essence_container_ul</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="253:1" pos:end="253:6">#<cpp:directive pos:start="253:2" pos:end="253:6">endif</cpp:directive></cpp:endif>

        <comment type="block" pos:start="255:9" pos:end="255:102">/* TODO: drop PictureEssenceCoding and SoundEssenceCompression, only check EssenceContainer */</comment>

        <expr_stmt pos:start="257:9" pos:end="257:82"><expr pos:start="257:9" pos:end="257:81"><name pos:start="257:9" pos:end="257:16">codec_ul</name> <operator pos:start="257:18" pos:end="257:18">=</operator> <call pos:start="257:20" pos:end="257:81"><name pos:start="257:20" pos:end="257:35">mxf_get_codec_ul</name><argument_list pos:start="257:36" pos:end="257:81">(<argument pos:start="257:37" pos:end="257:49"><expr pos:start="257:37" pos:end="257:49"><name pos:start="257:37" pos:end="257:49">mxf_codec_uls</name></expr></argument>, <argument pos:start="257:52" pos:end="257:80"><expr pos:start="257:52" pos:end="257:80"><operator pos:start="257:52" pos:end="257:52">&amp;</operator><name pos:start="257:53" pos:end="257:80"><name pos:start="257:53" pos:end="257:62">descriptor</name><operator pos:start="257:63" pos:end="257:64">-&gt;</operator><name pos:start="257:65" pos:end="257:80">essence_codec_ul</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="259:9" pos:end="259:43"><expr pos:start="259:9" pos:end="259:42"><name pos:start="259:9" pos:end="259:27"><name pos:start="259:9" pos:end="259:10">st</name><operator pos:start="259:11" pos:end="259:12">-&gt;</operator><name pos:start="259:13" pos:end="259:17">codec</name><operator pos:start="259:18" pos:end="259:19">-&gt;</operator><name pos:start="259:20" pos:end="259:27">codec_id</name></name> <operator pos:start="259:29" pos:end="259:29">=</operator> <name pos:start="259:31" pos:end="259:42"><name pos:start="259:31" pos:end="259:38">codec_ul</name><operator pos:start="259:39" pos:end="259:40">-&gt;</operator><name pos:start="259:41" pos:end="259:42">id</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="261:9" pos:end="267:9"><if pos:start="261:9" pos:end="267:9">if <condition pos:start="261:12" pos:end="261:34">(<expr pos:start="261:13" pos:end="261:33"><name pos:start="261:13" pos:end="261:33"><name pos:start="261:13" pos:end="261:22">descriptor</name><operator pos:start="261:23" pos:end="261:24">-&gt;</operator><name pos:start="261:25" pos:end="261:33">extradata</name></name></expr>)</condition> <block pos:start="261:36" pos:end="267:9">{<block_content pos:start="263:13" pos:end="265:67">

            <expr_stmt pos:start="263:13" pos:end="263:57"><expr pos:start="263:13" pos:end="263:56"><name pos:start="263:13" pos:end="263:32"><name pos:start="263:13" pos:end="263:14">st</name><operator pos:start="263:15" pos:end="263:16">-&gt;</operator><name pos:start="263:17" pos:end="263:21">codec</name><operator pos:start="263:22" pos:end="263:23">-&gt;</operator><name pos:start="263:24" pos:end="263:32">extradata</name></name> <operator pos:start="263:34" pos:end="263:34">=</operator> <name pos:start="263:36" pos:end="263:56"><name pos:start="263:36" pos:end="263:45">descriptor</name><operator pos:start="263:46" pos:end="263:47">-&gt;</operator><name pos:start="263:48" pos:end="263:56">extradata</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="265:13" pos:end="265:67"><expr pos:start="265:13" pos:end="265:66"><name pos:start="265:13" pos:end="265:37"><name pos:start="265:13" pos:end="265:14">st</name><operator pos:start="265:15" pos:end="265:16">-&gt;</operator><name pos:start="265:17" pos:end="265:21">codec</name><operator pos:start="265:22" pos:end="265:23">-&gt;</operator><name pos:start="265:24" pos:end="265:37">extradata_size</name></name> <operator pos:start="265:39" pos:end="265:39">=</operator> <name pos:start="265:41" pos:end="265:66"><name pos:start="265:41" pos:end="265:50">descriptor</name><operator pos:start="265:51" pos:end="265:52">-&gt;</operator><name pos:start="265:53" pos:end="265:66">extradata_size</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="269:9" pos:end="331:9"><if pos:start="269:9" pos:end="285:9">if <condition pos:start="269:12" pos:end="269:54">(<expr pos:start="269:13" pos:end="269:53"><name pos:start="269:13" pos:end="269:33"><name pos:start="269:13" pos:end="269:14">st</name><operator pos:start="269:15" pos:end="269:16">-&gt;</operator><name pos:start="269:17" pos:end="269:21">codec</name><operator pos:start="269:22" pos:end="269:23">-&gt;</operator><name pos:start="269:24" pos:end="269:33">codec_type</name></name> <operator pos:start="269:35" pos:end="269:36">==</operator> <name pos:start="269:38" pos:end="269:53">CODEC_TYPE_VIDEO</name></expr>)</condition> <block pos:start="269:56" pos:end="285:9">{<block_content pos:start="271:13" pos:end="283:33">

            <expr_stmt pos:start="271:13" pos:end="271:114"><expr pos:start="271:13" pos:end="271:113"><name pos:start="271:13" pos:end="271:24">container_ul</name> <operator pos:start="271:26" pos:end="271:26">=</operator> <call pos:start="271:28" pos:end="271:113"><name pos:start="271:28" pos:end="271:43">mxf_get_codec_ul</name><argument_list pos:start="271:44" pos:end="271:113">(<argument pos:start="271:45" pos:end="271:77"><expr pos:start="271:45" pos:end="271:77"><name pos:start="271:45" pos:end="271:77">mxf_picture_essence_container_uls</name></expr></argument>, <argument pos:start="271:80" pos:end="271:112"><expr pos:start="271:80" pos:end="271:112"><operator pos:start="271:80" pos:end="271:80">&amp;</operator><name pos:start="271:81" pos:end="271:112"><name pos:start="271:81" pos:end="271:90">descriptor</name><operator pos:start="271:91" pos:end="271:92">-&gt;</operator><name pos:start="271:93" pos:end="271:112">essence_container_ul</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="273:13" pos:end="275:55"><if pos:start="273:13" pos:end="275:55">if <condition pos:start="273:16" pos:end="273:53">(<expr pos:start="273:17" pos:end="273:52"><name pos:start="273:17" pos:end="273:35"><name pos:start="273:17" pos:end="273:18">st</name><operator pos:start="273:19" pos:end="273:20">-&gt;</operator><name pos:start="273:21" pos:end="273:25">codec</name><operator pos:start="273:26" pos:end="273:27">-&gt;</operator><name pos:start="273:28" pos:end="273:35">codec_id</name></name> <operator pos:start="273:37" pos:end="273:38">==</operator> <name pos:start="273:40" pos:end="273:52">CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="275:17" pos:end="275:55"><block_content pos:start="275:17" pos:end="275:55">

                <expr_stmt pos:start="275:17" pos:end="275:55"><expr pos:start="275:17" pos:end="275:54"><name pos:start="275:17" pos:end="275:35"><name pos:start="275:17" pos:end="275:18">st</name><operator pos:start="275:19" pos:end="275:20">-&gt;</operator><name pos:start="275:21" pos:end="275:25">codec</name><operator pos:start="275:26" pos:end="275:27">-&gt;</operator><name pos:start="275:28" pos:end="275:35">codec_id</name></name> <operator pos:start="275:37" pos:end="275:37">=</operator> <name pos:start="275:39" pos:end="275:54"><name pos:start="275:39" pos:end="275:50">container_ul</name><operator pos:start="275:51" pos:end="275:52">-&gt;</operator><name pos:start="275:53" pos:end="275:54">id</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="277:13" pos:end="277:49"><expr pos:start="277:13" pos:end="277:48"><name pos:start="277:13" pos:end="277:28"><name pos:start="277:13" pos:end="277:14">st</name><operator pos:start="277:15" pos:end="277:16">-&gt;</operator><name pos:start="277:17" pos:end="277:21">codec</name><operator pos:start="277:22" pos:end="277:23">-&gt;</operator><name pos:start="277:24" pos:end="277:28">width</name></name> <operator pos:start="277:30" pos:end="277:30">=</operator> <name pos:start="277:32" pos:end="277:48"><name pos:start="277:32" pos:end="277:41">descriptor</name><operator pos:start="277:42" pos:end="277:43">-&gt;</operator><name pos:start="277:44" pos:end="277:48">width</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="279:13" pos:end="279:51"><expr pos:start="279:13" pos:end="279:50"><name pos:start="279:13" pos:end="279:29"><name pos:start="279:13" pos:end="279:14">st</name><operator pos:start="279:15" pos:end="279:16">-&gt;</operator><name pos:start="279:17" pos:end="279:21">codec</name><operator pos:start="279:22" pos:end="279:23">-&gt;</operator><name pos:start="279:24" pos:end="279:29">height</name></name> <operator pos:start="279:31" pos:end="279:31">=</operator> <name pos:start="279:33" pos:end="279:50"><name pos:start="279:33" pos:end="279:42">descriptor</name><operator pos:start="279:43" pos:end="279:44">-&gt;</operator><name pos:start="279:45" pos:end="279:50">height</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="281:13" pos:end="281:69"><expr pos:start="281:13" pos:end="281:68"><name pos:start="281:13" pos:end="281:38"><name pos:start="281:13" pos:end="281:14">st</name><operator pos:start="281:15" pos:end="281:16">-&gt;</operator><name pos:start="281:17" pos:end="281:21">codec</name><operator pos:start="281:22" pos:end="281:23">-&gt;</operator><name pos:start="281:24" pos:end="281:38">bits_per_sample</name></name> <operator pos:start="281:40" pos:end="281:40">=</operator> <name pos:start="281:42" pos:end="281:68"><name pos:start="281:42" pos:end="281:51">descriptor</name><operator pos:start="281:52" pos:end="281:53">-&gt;</operator><name pos:start="281:54" pos:end="281:68">bits_per_sample</name></name></expr>;</expr_stmt> <comment type="block" pos:start="281:71" pos:end="281:88">/* Uncompressed */</comment>

            <expr_stmt pos:start="283:13" pos:end="283:33"><expr pos:start="283:13" pos:end="283:32"><name pos:start="283:13" pos:end="283:28"><name pos:start="283:13" pos:end="283:14">st</name><operator pos:start="283:15" pos:end="283:16">-&gt;</operator><name pos:start="283:17" pos:end="283:28">need_parsing</name></name> <operator pos:start="283:30" pos:end="283:30">=</operator> <literal type="number" pos:start="283:32" pos:end="283:32">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="283:35" pos:end="283:58">/* only parse headers */</comment>

        </block_content>}</block></if> <if type="elseif" pos:start="285:11" pos:end="331:9">else if <condition pos:start="285:19" pos:end="285:61">(<expr pos:start="285:20" pos:end="285:60"><name pos:start="285:20" pos:end="285:40"><name pos:start="285:20" pos:end="285:21">st</name><operator pos:start="285:22" pos:end="285:23">-&gt;</operator><name pos:start="285:24" pos:end="285:28">codec</name><operator pos:start="285:29" pos:end="285:30">-&gt;</operator><name pos:start="285:31" pos:end="285:40">codec_type</name></name> <operator pos:start="285:42" pos:end="285:43">==</operator> <name pos:start="285:45" pos:end="285:60">CODEC_TYPE_AUDIO</name></expr>)</condition> <block pos:start="285:63" pos:end="331:9">{<block_content pos:start="287:13" pos:end="329:13">

            <expr_stmt pos:start="287:13" pos:end="287:112"><expr pos:start="287:13" pos:end="287:111"><name pos:start="287:13" pos:end="287:24">container_ul</name> <operator pos:start="287:26" pos:end="287:26">=</operator> <call pos:start="287:28" pos:end="287:111"><name pos:start="287:28" pos:end="287:43">mxf_get_codec_ul</name><argument_list pos:start="287:44" pos:end="287:111">(<argument pos:start="287:45" pos:end="287:75"><expr pos:start="287:45" pos:end="287:75"><name pos:start="287:45" pos:end="287:75">mxf_sound_essence_container_uls</name></expr></argument>, <argument pos:start="287:78" pos:end="287:110"><expr pos:start="287:78" pos:end="287:110"><operator pos:start="287:78" pos:end="287:78">&amp;</operator><name pos:start="287:79" pos:end="287:110"><name pos:start="287:79" pos:end="287:88">descriptor</name><operator pos:start="287:89" pos:end="287:90">-&gt;</operator><name pos:start="287:91" pos:end="287:110">essence_container_ul</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="289:13" pos:end="291:55"><if pos:start="289:13" pos:end="291:55">if <condition pos:start="289:16" pos:end="289:53">(<expr pos:start="289:17" pos:end="289:52"><name pos:start="289:17" pos:end="289:35"><name pos:start="289:17" pos:end="289:18">st</name><operator pos:start="289:19" pos:end="289:20">-&gt;</operator><name pos:start="289:21" pos:end="289:25">codec</name><operator pos:start="289:26" pos:end="289:27">-&gt;</operator><name pos:start="289:28" pos:end="289:35">codec_id</name></name> <operator pos:start="289:37" pos:end="289:38">==</operator> <name pos:start="289:40" pos:end="289:52">CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="291:17" pos:end="291:55"><block_content pos:start="291:17" pos:end="291:55">

                <expr_stmt pos:start="291:17" pos:end="291:55"><expr pos:start="291:17" pos:end="291:54"><name pos:start="291:17" pos:end="291:35"><name pos:start="291:17" pos:end="291:18">st</name><operator pos:start="291:19" pos:end="291:20">-&gt;</operator><name pos:start="291:21" pos:end="291:25">codec</name><operator pos:start="291:26" pos:end="291:27">-&gt;</operator><name pos:start="291:28" pos:end="291:35">codec_id</name></name> <operator pos:start="291:37" pos:end="291:37">=</operator> <name pos:start="291:39" pos:end="291:54"><name pos:start="291:39" pos:end="291:50">container_ul</name><operator pos:start="291:51" pos:end="291:52">-&gt;</operator><name pos:start="291:53" pos:end="291:54">id</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="293:13" pos:end="293:55"><expr pos:start="293:13" pos:end="293:54"><name pos:start="293:13" pos:end="293:31"><name pos:start="293:13" pos:end="293:14">st</name><operator pos:start="293:15" pos:end="293:16">-&gt;</operator><name pos:start="293:17" pos:end="293:21">codec</name><operator pos:start="293:22" pos:end="293:23">-&gt;</operator><name pos:start="293:24" pos:end="293:31">channels</name></name> <operator pos:start="293:33" pos:end="293:33">=</operator> <name pos:start="293:35" pos:end="293:54"><name pos:start="293:35" pos:end="293:44">descriptor</name><operator pos:start="293:45" pos:end="293:46">-&gt;</operator><name pos:start="293:47" pos:end="293:54">channels</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="295:13" pos:end="295:69"><expr pos:start="295:13" pos:end="295:68"><name pos:start="295:13" pos:end="295:38"><name pos:start="295:13" pos:end="295:14">st</name><operator pos:start="295:15" pos:end="295:16">-&gt;</operator><name pos:start="295:17" pos:end="295:21">codec</name><operator pos:start="295:22" pos:end="295:23">-&gt;</operator><name pos:start="295:24" pos:end="295:38">bits_per_sample</name></name> <operator pos:start="295:40" pos:end="295:40">=</operator> <name pos:start="295:42" pos:end="295:68"><name pos:start="295:42" pos:end="295:51">descriptor</name><operator pos:start="295:52" pos:end="295:53">-&gt;</operator><name pos:start="295:54" pos:end="295:68">bits_per_sample</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="297:13" pos:end="297:95"><expr pos:start="297:13" pos:end="297:94"><name pos:start="297:13" pos:end="297:34"><name pos:start="297:13" pos:end="297:14">st</name><operator pos:start="297:15" pos:end="297:16">-&gt;</operator><name pos:start="297:17" pos:end="297:21">codec</name><operator pos:start="297:22" pos:end="297:23">-&gt;</operator><name pos:start="297:24" pos:end="297:34">sample_rate</name></name> <operator pos:start="297:36" pos:end="297:36">=</operator> <name pos:start="297:38" pos:end="297:64"><name pos:start="297:38" pos:end="297:47">descriptor</name><operator pos:start="297:48" pos:end="297:49">-&gt;</operator><name pos:start="297:50" pos:end="297:60">sample_rate</name><operator pos:start="297:61" pos:end="297:61">.</operator><name pos:start="297:62" pos:end="297:64">num</name></name> <operator pos:start="297:66" pos:end="297:66">/</operator> <name pos:start="297:68" pos:end="297:94"><name pos:start="297:68" pos:end="297:77">descriptor</name><operator pos:start="297:78" pos:end="297:79">-&gt;</operator><name pos:start="297:80" pos:end="297:90">sample_rate</name><operator pos:start="297:91" pos:end="297:91">.</operator><name pos:start="297:92" pos:end="297:94">den</name></name></expr>;</expr_stmt>

            <comment type="block" pos:start="299:13" pos:end="299:51">/* TODO: implement CODEC_ID_RAWAUDIO */</comment>

            <if_stmt pos:start="301:13" pos:end="329:13"><if pos:start="301:13" pos:end="311:13">if <condition pos:start="301:16" pos:end="301:58">(<expr pos:start="301:17" pos:end="301:57"><name pos:start="301:17" pos:end="301:35"><name pos:start="301:17" pos:end="301:18">st</name><operator pos:start="301:19" pos:end="301:20">-&gt;</operator><name pos:start="301:21" pos:end="301:25">codec</name><operator pos:start="301:26" pos:end="301:27">-&gt;</operator><name pos:start="301:28" pos:end="301:35">codec_id</name></name> <operator pos:start="301:37" pos:end="301:38">==</operator> <name pos:start="301:40" pos:end="301:57">CODEC_ID_PCM_S16LE</name></expr>)</condition> <block pos:start="301:60" pos:end="311:13">{<block_content pos:start="303:17" pos:end="309:61">

                <if_stmt pos:start="303:17" pos:end="309:61"><if pos:start="303:17" pos:end="305:61">if <condition pos:start="303:20" pos:end="303:54">(<expr pos:start="303:21" pos:end="303:53"><name pos:start="303:21" pos:end="303:47"><name pos:start="303:21" pos:end="303:30">descriptor</name><operator pos:start="303:31" pos:end="303:32">-&gt;</operator><name pos:start="303:33" pos:end="303:47">bits_per_sample</name></name> <operator pos:start="303:49" pos:end="303:50">==</operator> <literal type="number" pos:start="303:52" pos:end="303:53">24</literal></expr>)</condition><block type="pseudo" pos:start="305:21" pos:end="305:61"><block_content pos:start="305:21" pos:end="305:61">

                    <expr_stmt pos:start="305:21" pos:end="305:61"><expr pos:start="305:21" pos:end="305:60"><name pos:start="305:21" pos:end="305:39"><name pos:start="305:21" pos:end="305:22">st</name><operator pos:start="305:23" pos:end="305:24">-&gt;</operator><name pos:start="305:25" pos:end="305:29">codec</name><operator pos:start="305:30" pos:end="305:31">-&gt;</operator><name pos:start="305:32" pos:end="305:39">codec_id</name></name> <operator pos:start="305:41" pos:end="305:41">=</operator> <name pos:start="305:43" pos:end="305:60">CODEC_ID_PCM_S24LE</name></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="307:17" pos:end="309:61">else if <condition pos:start="307:25" pos:end="307:59">(<expr pos:start="307:26" pos:end="307:58"><name pos:start="307:26" pos:end="307:52"><name pos:start="307:26" pos:end="307:35">descriptor</name><operator pos:start="307:36" pos:end="307:37">-&gt;</operator><name pos:start="307:38" pos:end="307:52">bits_per_sample</name></name> <operator pos:start="307:54" pos:end="307:55">==</operator> <literal type="number" pos:start="307:57" pos:end="307:58">32</literal></expr>)</condition><block type="pseudo" pos:start="309:21" pos:end="309:61"><block_content pos:start="309:21" pos:end="309:61">

                    <expr_stmt pos:start="309:21" pos:end="309:61"><expr pos:start="309:21" pos:end="309:60"><name pos:start="309:21" pos:end="309:39"><name pos:start="309:21" pos:end="309:22">st</name><operator pos:start="309:23" pos:end="309:24">-&gt;</operator><name pos:start="309:25" pos:end="309:29">codec</name><operator pos:start="309:30" pos:end="309:31">-&gt;</operator><name pos:start="309:32" pos:end="309:39">codec_id</name></name> <operator pos:start="309:41" pos:end="309:41">=</operator> <name pos:start="309:43" pos:end="309:60">CODEC_ID_PCM_S32LE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="311:15" pos:end="325:13">else if <condition pos:start="311:23" pos:end="311:65">(<expr pos:start="311:24" pos:end="311:64"><name pos:start="311:24" pos:end="311:42"><name pos:start="311:24" pos:end="311:25">st</name><operator pos:start="311:26" pos:end="311:27">-&gt;</operator><name pos:start="311:28" pos:end="311:32">codec</name><operator pos:start="311:33" pos:end="311:34">-&gt;</operator><name pos:start="311:35" pos:end="311:42">codec_id</name></name> <operator pos:start="311:44" pos:end="311:45">==</operator> <name pos:start="311:47" pos:end="311:64">CODEC_ID_PCM_S16BE</name></expr>)</condition> <block pos:start="311:67" pos:end="325:13">{<block_content pos:start="313:17" pos:end="323:44">

                <if_stmt pos:start="313:17" pos:end="319:61"><if pos:start="313:17" pos:end="315:61">if <condition pos:start="313:20" pos:end="313:54">(<expr pos:start="313:21" pos:end="313:53"><name pos:start="313:21" pos:end="313:47"><name pos:start="313:21" pos:end="313:30">descriptor</name><operator pos:start="313:31" pos:end="313:32">-&gt;</operator><name pos:start="313:33" pos:end="313:47">bits_per_sample</name></name> <operator pos:start="313:49" pos:end="313:50">==</operator> <literal type="number" pos:start="313:52" pos:end="313:53">24</literal></expr>)</condition><block type="pseudo" pos:start="315:21" pos:end="315:61"><block_content pos:start="315:21" pos:end="315:61">

                    <expr_stmt pos:start="315:21" pos:end="315:61"><expr pos:start="315:21" pos:end="315:60"><name pos:start="315:21" pos:end="315:39"><name pos:start="315:21" pos:end="315:22">st</name><operator pos:start="315:23" pos:end="315:24">-&gt;</operator><name pos:start="315:25" pos:end="315:29">codec</name><operator pos:start="315:30" pos:end="315:31">-&gt;</operator><name pos:start="315:32" pos:end="315:39">codec_id</name></name> <operator pos:start="315:41" pos:end="315:41">=</operator> <name pos:start="315:43" pos:end="315:60">CODEC_ID_PCM_S24BE</name></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="317:17" pos:end="319:61">else if <condition pos:start="317:25" pos:end="317:59">(<expr pos:start="317:26" pos:end="317:58"><name pos:start="317:26" pos:end="317:52"><name pos:start="317:26" pos:end="317:35">descriptor</name><operator pos:start="317:36" pos:end="317:37">-&gt;</operator><name pos:start="317:38" pos:end="317:52">bits_per_sample</name></name> <operator pos:start="317:54" pos:end="317:55">==</operator> <literal type="number" pos:start="317:57" pos:end="317:58">32</literal></expr>)</condition><block type="pseudo" pos:start="319:21" pos:end="319:61"><block_content pos:start="319:21" pos:end="319:61">

                    <expr_stmt pos:start="319:21" pos:end="319:61"><expr pos:start="319:21" pos:end="319:60"><name pos:start="319:21" pos:end="319:39"><name pos:start="319:21" pos:end="319:22">st</name><operator pos:start="319:23" pos:end="319:24">-&gt;</operator><name pos:start="319:25" pos:end="319:29">codec</name><operator pos:start="319:30" pos:end="319:31">-&gt;</operator><name pos:start="319:32" pos:end="319:39">codec_id</name></name> <operator pos:start="319:41" pos:end="319:41">=</operator> <name pos:start="319:43" pos:end="319:60">CODEC_ID_PCM_S32BE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="321:17" pos:end="323:44"><if pos:start="321:17" pos:end="323:44">if <condition pos:start="321:20" pos:end="321:65">(<expr pos:start="321:21" pos:end="321:64"><name pos:start="321:21" pos:end="321:56"><name pos:start="321:21" pos:end="321:30">descriptor</name><operator pos:start="321:31" pos:end="321:32">-&gt;</operator><name pos:start="321:33" pos:end="321:52">essence_container_ul</name><index pos:start="321:53" pos:end="321:56">[<expr pos:start="321:54" pos:end="321:55"><literal type="number" pos:start="321:54" pos:end="321:55">13</literal></expr>]</index></name> <operator pos:start="321:58" pos:end="321:59">==</operator> <literal type="number" pos:start="321:61" pos:end="321:64">0x01</literal></expr>)</condition><block type="pseudo" pos:start="323:21" pos:end="323:44"><block_content pos:start="323:21" pos:end="323:44"> <comment type="block" pos:start="321:67" pos:end="321:84">/* D-10 Mapping */</comment>

                    <expr_stmt pos:start="323:21" pos:end="323:44"><expr pos:start="323:21" pos:end="323:43"><name pos:start="323:21" pos:end="323:39"><name pos:start="323:21" pos:end="323:22">st</name><operator pos:start="323:23" pos:end="323:24">-&gt;</operator><name pos:start="323:25" pos:end="323:29">codec</name><operator pos:start="323:30" pos:end="323:31">-&gt;</operator><name pos:start="323:32" pos:end="323:39">channels</name></name> <operator pos:start="323:41" pos:end="323:41">=</operator> <literal type="number" pos:start="323:43" pos:end="323:43">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="323:46" pos:end="323:70">/* force channels to 8 */</comment>

            </block_content>}</block></if> <if type="elseif" pos:start="325:15" pos:end="329:13">else if <condition pos:start="325:23" pos:end="325:59">(<expr pos:start="325:24" pos:end="325:58"><name pos:start="325:24" pos:end="325:42"><name pos:start="325:24" pos:end="325:25">st</name><operator pos:start="325:26" pos:end="325:27">-&gt;</operator><name pos:start="325:28" pos:end="325:32">codec</name><operator pos:start="325:33" pos:end="325:34">-&gt;</operator><name pos:start="325:35" pos:end="325:42">codec_id</name></name> <operator pos:start="325:44" pos:end="325:45">==</operator> <name pos:start="325:47" pos:end="325:58">CODEC_ID_MP2</name></expr>)</condition> <block pos:start="325:61" pos:end="329:13">{<block_content pos:start="327:17" pos:end="327:37">

                <expr_stmt pos:start="327:17" pos:end="327:37"><expr pos:start="327:17" pos:end="327:36"><name pos:start="327:17" pos:end="327:32"><name pos:start="327:17" pos:end="327:18">st</name><operator pos:start="327:19" pos:end="327:20">-&gt;</operator><name pos:start="327:21" pos:end="327:32">need_parsing</name></name> <operator pos:start="327:34" pos:end="327:34">=</operator> <literal type="number" pos:start="327:36" pos:end="327:36">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="333:9" pos:end="339:9"><if pos:start="333:9" pos:end="339:9">if <condition pos:start="333:12" pos:end="333:59">(<expr pos:start="333:13" pos:end="333:58"><name pos:start="333:13" pos:end="333:24">container_ul</name> <operator pos:start="333:26" pos:end="333:27">&amp;&amp;</operator> <name pos:start="333:29" pos:end="333:50"><name pos:start="333:29" pos:end="333:40">container_ul</name><operator pos:start="333:41" pos:end="333:42">-&gt;</operator><name pos:start="333:43" pos:end="333:50">wrapping</name></name> <operator pos:start="333:52" pos:end="333:53">==</operator> <name pos:start="333:55" pos:end="333:58">Clip</name></expr>)</condition> <block pos:start="333:61" pos:end="339:9">{<block_content pos:start="335:13" pos:end="337:33">

            <expr_stmt pos:start="335:13" pos:end="335:68"><expr pos:start="335:13" pos:end="335:67"><call pos:start="335:13" pos:end="335:67"><name pos:start="335:13" pos:end="335:19">dprintf</name><argument_list pos:start="335:20" pos:end="335:67">(<argument pos:start="335:21" pos:end="335:55"><expr pos:start="335:21" pos:end="335:55"><literal type="string" pos:start="335:21" pos:end="335:55">"stream %d: clip wrapped essence\n"</literal></expr></argument>, <argument pos:start="335:58" pos:end="335:66"><expr pos:start="335:58" pos:end="335:66"><name pos:start="335:58" pos:end="335:66"><name pos:start="335:58" pos:end="335:59">st</name><operator pos:start="335:60" pos:end="335:61">-&gt;</operator><name pos:start="335:62" pos:end="335:66">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="337:13" pos:end="337:33"><expr pos:start="337:13" pos:end="337:32"><name pos:start="337:13" pos:end="337:28"><name pos:start="337:13" pos:end="337:14">st</name><operator pos:start="337:15" pos:end="337:16">-&gt;</operator><name pos:start="337:17" pos:end="337:28">need_parsing</name></name> <operator pos:start="337:30" pos:end="337:30">=</operator> <literal type="number" pos:start="337:32" pos:end="337:32">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="343:5" pos:end="343:13">return <expr pos:start="343:12" pos:end="343:12"><literal type="number" pos:start="343:12" pos:end="343:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
