<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19950.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">dynticks_start_timer</name><parameter_list pos:start="1:32" pos:end="1:59">(<parameter pos:start="1:33" pos:end="1:58"><decl pos:start="1:33" pos:end="1:58"><type pos:start="1:33" pos:end="1:58"><name pos:start="1:33" pos:end="1:55"><name pos:start="1:33" pos:end="1:38">struct</name> <name pos:start="1:40" pos:end="1:55">qemu_alarm_timer</name></name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:58">t</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:13">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:19">sigevent</name></name></type> <name pos:start="5:21" pos:end="5:22">ev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">timer_t</name></type> <name pos:start="7:13" pos:end="7:22">host_timer</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:20">sigaction</name></name></type> <name pos:start="9:22" pos:end="9:24">act</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:29"><expr pos:start="13:5" pos:end="13:28"><call pos:start="13:5" pos:end="13:28"><name pos:start="13:5" pos:end="13:14">sigfillset</name><argument_list pos:start="13:15" pos:end="13:28">(<argument pos:start="13:16" pos:end="13:27"><expr pos:start="13:16" pos:end="13:27"><operator pos:start="13:16" pos:end="13:16">&amp;</operator><name pos:start="13:17" pos:end="13:27"><name pos:start="13:17" pos:end="13:19">act</name><operator pos:start="13:20" pos:end="13:20">.</operator><name pos:start="13:21" pos:end="13:27">sa_mask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:21"><expr pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:7">act</name><operator pos:start="15:8" pos:end="15:8">.</operator><name pos:start="15:9" pos:end="15:16">sa_flags</name></name> <operator pos:start="15:18" pos:end="15:18">=</operator> <literal type="number" pos:start="15:20" pos:end="15:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:40"><expr pos:start="17:5" pos:end="17:39"><name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:7">act</name><operator pos:start="17:8" pos:end="17:8">.</operator><name pos:start="17:9" pos:end="17:18">sa_handler</name></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <name pos:start="17:22" pos:end="17:39">host_alarm_handler</name></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:35"><expr pos:start="21:5" pos:end="21:34"><call pos:start="21:5" pos:end="21:34"><name pos:start="21:5" pos:end="21:13">sigaction</name><argument_list pos:start="21:14" pos:end="21:34">(<argument pos:start="21:15" pos:end="21:21"><expr pos:start="21:15" pos:end="21:21"><name pos:start="21:15" pos:end="21:21">SIGALRM</name></expr></argument>, <argument pos:start="21:24" pos:end="21:27"><expr pos:start="21:24" pos:end="21:27"><operator pos:start="21:24" pos:end="21:24">&amp;</operator><name pos:start="21:25" pos:end="21:27">act</name></expr></argument>, <argument pos:start="21:30" pos:end="21:33"><expr pos:start="21:30" pos:end="21:33"><name pos:start="21:30" pos:end="21:33">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="31:7">/* 

     * Initialize ev struct to 0 to avoid valgrind complaining

     * about uninitialized data in timer_create call

     */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:31"><expr pos:start="33:5" pos:end="33:30"><call pos:start="33:5" pos:end="33:30"><name pos:start="33:5" pos:end="33:10">memset</name><argument_list pos:start="33:11" pos:end="33:30">(<argument pos:start="33:12" pos:end="33:14"><expr pos:start="33:12" pos:end="33:14"><operator pos:start="33:12" pos:end="33:12">&amp;</operator><name pos:start="33:13" pos:end="33:14">ev</name></expr></argument>, <argument pos:start="33:17" pos:end="33:17"><expr pos:start="33:17" pos:end="33:17"><literal type="number" pos:start="33:17" pos:end="33:17">0</literal></expr></argument>, <argument pos:start="33:20" pos:end="33:29"><expr pos:start="33:20" pos:end="33:29"><sizeof pos:start="33:20" pos:end="33:29">sizeof<argument_list pos:start="33:26" pos:end="33:29">(<argument pos:start="33:27" pos:end="33:28"><expr pos:start="33:27" pos:end="33:28"><name pos:start="33:27" pos:end="33:28">ev</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:33"><expr pos:start="35:5" pos:end="35:32"><name pos:start="35:5" pos:end="35:28"><name pos:start="35:5" pos:end="35:6">ev</name><operator pos:start="35:7" pos:end="35:7">.</operator><name pos:start="35:8" pos:end="35:18">sigev_value</name><operator pos:start="35:19" pos:end="35:19">.</operator><name pos:start="35:20" pos:end="35:28">sival_int</name></name> <operator pos:start="35:30" pos:end="35:30">=</operator> <literal type="number" pos:start="35:32" pos:end="35:32">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="40:0"><expr pos:start="37:5" pos:end="37:34"><name pos:start="37:5" pos:end="37:19"><name pos:start="37:5" pos:end="37:6">ev</name><operator pos:start="37:7" pos:end="37:7">.</operator><name pos:start="37:8" pos:end="37:19">sigev_notify</name></name> <operator pos:start="37:21" pos:end="37:21">=</operator> <name pos:start="37:23" pos:end="37:34">SIGEV_SIGNAL</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="39:1" pos:end="39:22">#<cpp:directive pos:start="39:2" pos:end="39:6">ifdef</cpp:directive> <name pos:start="39:8" pos:end="39:22">SIGEV_THREAD_ID</name></cpp:ifdef>

    <if_stmt pos:start="41:5" pos:end="50:0"><if pos:start="41:5" pos:end="50:0">if <condition pos:start="41:8" pos:end="41:34">(<expr pos:start="41:9" pos:end="41:33"><call pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:31">qemu_signalfd_available</name><argument_list pos:start="41:32" pos:end="41:33">()</argument_list></call></expr>)</condition> <block pos:start="41:36" pos:end="50:0">{<block_content pos:start="43:9" pos:end="45:49">

        <expr_stmt pos:start="43:9" pos:end="43:42"><expr pos:start="43:9" pos:end="43:41"><name pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:10">ev</name><operator pos:start="43:11" pos:end="43:11">.</operator><name pos:start="43:12" pos:end="43:23">sigev_notify</name></name> <operator pos:start="43:25" pos:end="43:25">=</operator> <name pos:start="43:27" pos:end="43:41">SIGEV_THREAD_ID</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:49"><expr pos:start="45:9" pos:end="45:48"><name pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:10">ev</name><operator pos:start="45:11" pos:end="45:11">.</operator><name pos:start="45:12" pos:end="45:20">_sigev_un</name><operator pos:start="45:21" pos:end="45:21">.</operator><name pos:start="45:22" pos:end="45:25">_tid</name></name> <operator pos:start="45:27" pos:end="45:27">=</operator> <call pos:start="45:29" pos:end="45:48"><name pos:start="45:29" pos:end="45:46">qemu_get_thread_id</name><argument_list pos:start="45:47" pos:end="45:48">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="49:1" pos:end="49:6">#<cpp:directive pos:start="49:2" pos:end="49:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="49:8" pos:end="49:28">/* SIGEV_THREAD_ID */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:29"><expr pos:start="51:5" pos:end="51:28"><name pos:start="51:5" pos:end="51:18"><name pos:start="51:5" pos:end="51:6">ev</name><operator pos:start="51:7" pos:end="51:7">.</operator><name pos:start="51:8" pos:end="51:18">sigev_signo</name></name> <operator pos:start="51:20" pos:end="51:20">=</operator> <name pos:start="51:22" pos:end="51:28">SIGALRM</name></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="61:5"><if pos:start="55:5" pos:end="61:5">if <condition pos:start="55:8" pos:end="55:55">(<expr pos:start="55:9" pos:end="55:54"><call pos:start="55:9" pos:end="55:54"><name pos:start="55:9" pos:end="55:20">timer_create</name><argument_list pos:start="55:21" pos:end="55:54">(<argument pos:start="55:22" pos:end="55:35"><expr pos:start="55:22" pos:end="55:35"><name pos:start="55:22" pos:end="55:35">CLOCK_REALTIME</name></expr></argument>, <argument pos:start="55:38" pos:end="55:40"><expr pos:start="55:38" pos:end="55:40"><operator pos:start="55:38" pos:end="55:38">&amp;</operator><name pos:start="55:39" pos:end="55:40">ev</name></expr></argument>, <argument pos:start="55:43" pos:end="55:53"><expr pos:start="55:43" pos:end="55:53"><operator pos:start="55:43" pos:end="55:43">&amp;</operator><name pos:start="55:44" pos:end="55:53">host_timer</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:57" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:18">

        <expr_stmt pos:start="57:9" pos:end="57:31"><expr pos:start="57:9" pos:end="57:30"><call pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:14">perror</name><argument_list pos:start="57:15" pos:end="57:30">(<argument pos:start="57:16" pos:end="57:29"><expr pos:start="57:16" pos:end="57:29"><literal type="string" pos:start="57:16" pos:end="57:29">"timer_create"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="59:9" pos:end="59:18">return <expr pos:start="59:16" pos:end="59:17"><operator pos:start="59:16" pos:end="59:16">-</operator><literal type="number" pos:start="59:17" pos:end="59:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:26"><expr pos:start="65:5" pos:end="65:25"><name pos:start="65:5" pos:end="65:12"><name pos:start="65:5" pos:end="65:5">t</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:12">timer</name></name> <operator pos:start="65:14" pos:end="65:14">=</operator> <name pos:start="65:16" pos:end="65:25">host_timer</name></expr>;</expr_stmt>



    <return pos:start="69:5" pos:end="69:13">return <expr pos:start="69:12" pos:end="69:12"><literal type="number" pos:start="69:12" pos:end="69:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
