<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11010.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">qmp_output_type_enum</name><parameter_list pos:start="1:33" pos:end="5:46">(<parameter pos:start="1:34" pos:end="1:43"><decl pos:start="1:34" pos:end="1:43"><type pos:start="1:34" pos:end="1:43"><name pos:start="1:34" pos:end="1:40">Visitor</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">v</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:53"><decl pos:start="1:46" pos:end="1:53"><type pos:start="1:46" pos:end="1:53"><name pos:start="1:46" pos:end="1:48">int</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">obj</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:76"><decl pos:start="1:56" pos:end="1:76"><type pos:start="1:56" pos:end="1:74"><specifier pos:start="1:56" pos:end="1:60">const</specifier> <name pos:start="1:62" pos:end="1:65">char</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:76"><name pos:start="1:68" pos:end="1:74">strings</name><index pos:start="1:75" pos:end="1:76">[]</index></name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:49"><decl pos:start="3:34" pos:end="3:49"><type pos:start="3:34" pos:end="3:49"><specifier pos:start="3:34" pos:end="3:38">const</specifier> <name pos:start="3:40" pos:end="3:43">char</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:49">kind</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:67"><decl pos:start="3:52" pos:end="3:67"><type pos:start="3:52" pos:end="3:67"><specifier pos:start="3:52" pos:end="3:56">const</specifier> <name pos:start="3:58" pos:end="3:61">char</name> <modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:67">name</name></decl></parameter>,

                                 <parameter pos:start="5:34" pos:end="5:45"><decl pos:start="5:34" pos:end="5:45"><type pos:start="5:34" pos:end="5:45"><name pos:start="5:34" pos:end="5:38">Error</name> <modifier pos:start="5:40" pos:end="5:40">*</modifier><modifier pos:start="5:41" pos:end="5:41">*</modifier></type><name pos:start="5:42" pos:end="5:45">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="35:1">{<block_content pos:start="9:5" pos:end="33:50">

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name> <init pos:start="9:11" pos:end="9:13">= <expr pos:start="9:13" pos:end="9:13"><literal type="number" pos:start="9:13" pos:end="9:13">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">value</name> <init pos:start="11:15" pos:end="11:20">= <expr pos:start="11:17" pos:end="11:20"><operator pos:start="11:17" pos:end="11:17">*</operator><name pos:start="11:18" pos:end="11:20">obj</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:18">enum_str</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:20"><expr pos:start="17:5" pos:end="17:19"><call pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:10">assert</name><argument_list pos:start="17:11" pos:end="17:19">(<argument pos:start="17:12" pos:end="17:18"><expr pos:start="17:12" pos:end="17:18"><name pos:start="17:12" pos:end="17:18">strings</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="19:5" pos:end="19:33">while <condition pos:start="19:11" pos:end="19:32">(<expr pos:start="19:12" pos:end="19:31"><name pos:start="19:12" pos:end="19:23"><name pos:start="19:12" pos:end="19:18">strings</name><index pos:start="19:19" pos:end="19:23">[<expr pos:start="19:20" pos:end="19:22"><name pos:start="19:20" pos:end="19:20">i</name><operator pos:start="19:21" pos:end="19:22">++</operator></expr>]</index></name> <operator pos:start="19:25" pos:end="19:26">!=</operator> <name pos:start="19:28" pos:end="19:31">NULL</name></expr>)</condition><block type="pseudo" pos:start="19:33" pos:end="19:33"><block_content pos:start="19:33" pos:end="19:33"><empty_stmt pos:start="19:33" pos:end="19:33">;</empty_stmt></block_content></block></while>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:23">(<expr pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:13">value</name> <operator pos:start="21:15" pos:end="21:16">&gt;=</operator> <name pos:start="21:18" pos:end="21:18">i</name> <operator pos:start="21:20" pos:end="21:20">-</operator> <literal type="number" pos:start="21:22" pos:end="21:22">1</literal></expr>)</condition> <block pos:start="21:25" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:15">

        <expr_stmt pos:start="23:9" pos:end="23:70"><expr pos:start="23:9" pos:end="23:69"><call pos:start="23:9" pos:end="23:69"><name pos:start="23:9" pos:end="23:17">error_set</name><argument_list pos:start="23:18" pos:end="23:69">(<argument pos:start="23:19" pos:end="23:22"><expr pos:start="23:19" pos:end="23:22"><name pos:start="23:19" pos:end="23:22">errp</name></expr></argument>, <argument pos:start="23:25" pos:end="23:46"><expr pos:start="23:25" pos:end="23:46"><name pos:start="23:25" pos:end="23:46">QERR_INVALID_PARAMETER</name></expr></argument>, <argument pos:start="23:49" pos:end="23:68"><expr pos:start="23:49" pos:end="23:68"><ternary pos:start="23:49" pos:end="23:68"><condition pos:start="23:49" pos:end="23:54"><expr pos:start="23:49" pos:end="23:52"><name pos:start="23:49" pos:end="23:52">name</name></expr> ?</condition><then pos:start="23:56" pos:end="23:59"> <expr pos:start="23:56" pos:end="23:59"><name pos:start="23:56" pos:end="23:59">name</name></expr> </then><else pos:start="23:61" pos:end="23:68">: <expr pos:start="23:63" pos:end="23:68"><literal type="string" pos:start="23:63" pos:end="23:68">"null"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:38"><expr pos:start="31:5" pos:end="31:37"><name pos:start="31:5" pos:end="31:12">enum_str</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <operator pos:start="31:16" pos:end="31:16">(</operator><name pos:start="31:17" pos:end="31:20">char</name> <operator pos:start="31:22" pos:end="31:22">*</operator><operator pos:start="31:23" pos:end="31:23">)</operator><name pos:start="31:24" pos:end="31:37"><name pos:start="31:24" pos:end="31:30">strings</name><index pos:start="31:31" pos:end="31:37">[<expr pos:start="31:32" pos:end="31:36"><name pos:start="31:32" pos:end="31:36">value</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:50"><expr pos:start="33:5" pos:end="33:49"><call pos:start="33:5" pos:end="33:49"><name pos:start="33:5" pos:end="33:23">qmp_output_type_str</name><argument_list pos:start="33:24" pos:end="33:49">(<argument pos:start="33:25" pos:end="33:25"><expr pos:start="33:25" pos:end="33:25"><name pos:start="33:25" pos:end="33:25">v</name></expr></argument>, <argument pos:start="33:28" pos:end="33:36"><expr pos:start="33:28" pos:end="33:36"><operator pos:start="33:28" pos:end="33:28">&amp;</operator><name pos:start="33:29" pos:end="33:36">enum_str</name></expr></argument>, <argument pos:start="33:39" pos:end="33:42"><expr pos:start="33:39" pos:end="33:42"><name pos:start="33:39" pos:end="33:42">name</name></expr></argument>, <argument pos:start="33:45" pos:end="33:48"><expr pos:start="33:45" pos:end="33:48"><name pos:start="33:45" pos:end="33:48">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
