<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21115.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">decode_residual_block</name><parameter_list pos:start="1:33" pos:end="5:66">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:43">AVSContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">h</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:65"><decl pos:start="1:49" pos:end="1:65"><type pos:start="1:49" pos:end="1:65"><name pos:start="1:49" pos:end="1:61">GetBitContext</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:65">gb</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:58"><decl pos:start="3:34" pos:end="3:58"><type pos:start="3:34" pos:end="3:58"><specifier pos:start="3:34" pos:end="3:38">const</specifier> <name pos:start="3:40" pos:end="3:55"><name pos:start="3:40" pos:end="3:45">struct</name> <name pos:start="3:47" pos:end="3:55">dec_2dvlc</name></name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:58">r</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:80"><decl pos:start="3:61" pos:end="3:80"><type pos:start="3:61" pos:end="3:80"><name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:80">esc_golomb_order</name></decl></parameter>,

                                 <parameter pos:start="5:34" pos:end="5:39"><decl pos:start="5:34" pos:end="5:39"><type pos:start="5:34" pos:end="5:39"><name pos:start="5:34" pos:end="5:36">int</name></type> <name pos:start="5:38" pos:end="5:39">qp</name></decl></parameter>, <parameter pos:start="5:42" pos:end="5:53"><decl pos:start="5:42" pos:end="5:53"><type pos:start="5:42" pos:end="5:53"><name pos:start="5:42" pos:end="5:48">uint8_t</name> <modifier pos:start="5:50" pos:end="5:50">*</modifier></type><name pos:start="5:51" pos:end="5:53">dst</name></decl></parameter>, <parameter pos:start="5:56" pos:end="5:65"><decl pos:start="5:56" pos:end="5:65"><type pos:start="5:56" pos:end="5:65"><name pos:start="5:56" pos:end="5:58">int</name></type> <name pos:start="5:60" pos:end="5:65">stride</name></decl></parameter>)</parameter_list> <block pos:start="5:68" pos:end="69:1">{<block_content pos:start="7:5" pos:end="67:13">

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:21">level_code</name></decl>, <decl pos:start="7:24" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:24" pos:end="7:31">esc_code</name></decl>, <decl pos:start="7:34" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:34" pos:end="7:38">level</name></decl>, <decl pos:start="7:41" pos:end="7:43"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:41" pos:end="7:43">run</name></decl>, <decl pos:start="7:46" pos:end="7:49"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:46" pos:end="7:49">mask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">DCTELEM</name></type> <name pos:start="9:13" pos:end="9:25"><name pos:start="9:13" pos:end="9:21">level_buf</name><index pos:start="9:22" pos:end="9:25">[<expr pos:start="9:23" pos:end="9:24"><literal type="number" pos:start="9:23" pos:end="9:24">65</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:23"><name pos:start="11:13" pos:end="11:19">run_buf</name><index pos:start="11:20" pos:end="11:23">[<expr pos:start="11:21" pos:end="11:22"><literal type="number" pos:start="11:21" pos:end="11:22">65</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">DCTELEM</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:18">block</name> <init pos:start="13:20" pos:end="13:29">= <expr pos:start="13:22" pos:end="13:29"><name pos:start="13:22" pos:end="13:29"><name pos:start="13:22" pos:end="13:22">h</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:29">block</name></name></expr></init></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="55:5">for<control pos:start="17:8" pos:end="17:21">(<init pos:start="17:9" pos:end="17:12"><expr pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:9">i</name><operator pos:start="17:10" pos:end="17:10">=</operator><literal type="number" pos:start="17:11" pos:end="17:11">0</literal></expr>;</init><condition pos:start="17:13" pos:end="17:17"><expr pos:start="17:13" pos:end="17:16"><name pos:start="17:13" pos:end="17:13">i</name><operator pos:start="17:14" pos:end="17:14">&lt;</operator><literal type="number" pos:start="17:15" pos:end="17:16">65</literal></expr>;</condition><incr pos:start="17:18" pos:end="17:20"><expr pos:start="17:18" pos:end="17:20"><name pos:start="17:18" pos:end="17:18">i</name><operator pos:start="17:19" pos:end="17:20">++</operator></expr></incr>)</control> <block pos:start="17:23" pos:end="55:5">{<block_content pos:start="19:9" pos:end="53:25">

        <expr_stmt pos:start="19:9" pos:end="19:53"><expr pos:start="19:9" pos:end="19:52"><name pos:start="19:9" pos:end="19:18">level_code</name> <operator pos:start="19:20" pos:end="19:20">=</operator> <call pos:start="19:22" pos:end="19:52"><name pos:start="19:22" pos:end="19:32">get_ue_code</name><argument_list pos:start="19:33" pos:end="19:52">(<argument pos:start="19:34" pos:end="19:35"><expr pos:start="19:34" pos:end="19:35"><name pos:start="19:34" pos:end="19:35">gb</name></expr></argument>,<argument pos:start="19:37" pos:end="19:51"><expr pos:start="19:37" pos:end="19:51"><name pos:start="19:37" pos:end="19:51"><name pos:start="19:37" pos:end="19:37">r</name><operator pos:start="19:38" pos:end="19:39">-&gt;</operator><name pos:start="19:40" pos:end="19:51">golomb_order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="49:9"><if pos:start="21:9" pos:end="37:9">if<condition pos:start="21:11" pos:end="21:37">(<expr pos:start="21:12" pos:end="21:36"><name pos:start="21:12" pos:end="21:21">level_code</name> <operator pos:start="21:23" pos:end="21:24">&gt;=</operator> <name pos:start="21:26" pos:end="21:36">ESCAPE_CODE</name></expr>)</condition> <block pos:start="21:39" pos:end="37:9">{<block_content pos:start="23:13" pos:end="35:40">

            <expr_stmt pos:start="23:13" pos:end="23:56"><expr pos:start="23:13" pos:end="23:55"><name pos:start="23:13" pos:end="23:15">run</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <operator pos:start="23:19" pos:end="23:19">(</operator><operator pos:start="23:20" pos:end="23:20">(</operator><name pos:start="23:21" pos:end="23:30">level_code</name> <operator pos:start="23:32" pos:end="23:32">-</operator> <name pos:start="23:34" pos:end="23:44">ESCAPE_CODE</name><operator pos:start="23:45" pos:end="23:45">)</operator> <operator pos:start="23:47" pos:end="23:48">&gt;&gt;</operator> <literal type="number" pos:start="23:50" pos:end="23:50">1</literal><operator pos:start="23:51" pos:end="23:51">)</operator> <operator pos:start="23:53" pos:end="23:53">+</operator> <literal type="number" pos:start="23:55" pos:end="23:55">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:56"><expr pos:start="25:13" pos:end="25:55"><name pos:start="25:13" pos:end="25:20">esc_code</name> <operator pos:start="25:22" pos:end="25:22">=</operator> <call pos:start="25:24" pos:end="25:55"><name pos:start="25:24" pos:end="25:34">get_ue_code</name><argument_list pos:start="25:35" pos:end="25:55">(<argument pos:start="25:36" pos:end="25:37"><expr pos:start="25:36" pos:end="25:37"><name pos:start="25:36" pos:end="25:37">gb</name></expr></argument>,<argument pos:start="25:39" pos:end="25:54"><expr pos:start="25:39" pos:end="25:54"><name pos:start="25:39" pos:end="25:54">esc_golomb_order</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:74"><expr pos:start="27:13" pos:end="27:73"><name pos:start="27:13" pos:end="27:17">level</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <name pos:start="27:21" pos:end="27:28">esc_code</name> <operator pos:start="27:30" pos:end="27:30">+</operator> <operator pos:start="27:32" pos:end="27:32">(</operator><ternary pos:start="27:33" pos:end="27:72"><condition pos:start="27:33" pos:end="27:50"><expr pos:start="27:33" pos:end="27:48"><name pos:start="27:33" pos:end="27:35">run</name> <operator pos:start="27:37" pos:end="27:37">&gt;</operator> <name pos:start="27:39" pos:end="27:48"><name pos:start="27:39" pos:end="27:39">r</name><operator pos:start="27:40" pos:end="27:41">-&gt;</operator><name pos:start="27:42" pos:end="27:48">max_run</name></name></expr> ?</condition><then pos:start="27:52" pos:end="27:52"> <expr pos:start="27:52" pos:end="27:52"><literal type="number" pos:start="27:52" pos:end="27:52">1</literal></expr> </then><else pos:start="27:54" pos:end="27:72">: <expr pos:start="27:56" pos:end="27:72"><name pos:start="27:56" pos:end="27:72"><name pos:start="27:56" pos:end="27:56">r</name><operator pos:start="27:57" pos:end="27:58">-&gt;</operator><name pos:start="27:59" pos:end="27:67">level_add</name><index pos:start="27:68" pos:end="27:72">[<expr pos:start="27:69" pos:end="27:71"><name pos:start="27:69" pos:end="27:71">run</name></expr>]</index></name></expr></else></ternary><operator pos:start="27:73" pos:end="27:73">)</operator></expr>;</expr_stmt>

            <while pos:start="29:13" pos:end="31:20">while<condition pos:start="29:18" pos:end="29:39">(<expr pos:start="29:19" pos:end="29:38"><name pos:start="29:19" pos:end="29:23">level</name> <operator pos:start="29:25" pos:end="29:25">&gt;</operator> <name pos:start="29:27" pos:end="29:38"><name pos:start="29:27" pos:end="29:27">r</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:38">inc_limit</name></name></expr>)</condition><block type="pseudo" pos:start="31:17" pos:end="31:20"><block_content pos:start="31:17" pos:end="31:20">

                <expr_stmt pos:start="31:17" pos:end="31:20"><expr pos:start="31:17" pos:end="31:19"><name pos:start="31:17" pos:end="31:17">r</name><operator pos:start="31:18" pos:end="31:19">++</operator></expr>;</expr_stmt></block_content></block></while>

            <expr_stmt pos:start="33:13" pos:end="33:37"><expr pos:start="33:13" pos:end="33:36"><name pos:start="33:13" pos:end="33:16">mask</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <operator pos:start="33:20" pos:end="33:20">-</operator><operator pos:start="33:21" pos:end="33:21">(</operator><name pos:start="33:22" pos:end="33:31">level_code</name> <operator pos:start="33:33" pos:end="33:33">&amp;</operator> <literal type="number" pos:start="33:35" pos:end="33:35">1</literal><operator pos:start="33:36" pos:end="33:36">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:40"><expr pos:start="35:13" pos:end="35:39"><name pos:start="35:13" pos:end="35:17">level</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <operator pos:start="35:21" pos:end="35:21">(</operator><name pos:start="35:22" pos:end="35:26">level</name><operator pos:start="35:27" pos:end="35:27">^</operator><name pos:start="35:28" pos:end="35:31">mask</name><operator pos:start="35:32" pos:end="35:32">)</operator> <operator pos:start="35:34" pos:end="35:34">-</operator> <name pos:start="35:36" pos:end="35:39">mask</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="37:11" pos:end="49:9">else <block pos:start="37:16" pos:end="49:9">{<block_content pos:start="39:13" pos:end="47:41">

            <expr_stmt pos:start="39:13" pos:end="39:44"><expr pos:start="39:13" pos:end="39:43"><name pos:start="39:13" pos:end="39:17">level</name> <operator pos:start="39:19" pos:end="39:19">=</operator> <name pos:start="39:21" pos:end="39:43"><name pos:start="39:21" pos:end="39:21">r</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:28">rltab</name><index pos:start="39:29" pos:end="39:40">[<expr pos:start="39:30" pos:end="39:39"><name pos:start="39:30" pos:end="39:39">level_code</name></expr>]</index><index pos:start="39:41" pos:end="39:43">[<expr pos:start="39:42" pos:end="39:42"><literal type="number" pos:start="39:42" pos:end="39:42">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="41:13" pos:end="43:22"><if pos:start="41:13" pos:end="43:22">if<condition pos:start="41:15" pos:end="41:22">(<expr pos:start="41:16" pos:end="41:21"><operator pos:start="41:16" pos:end="41:16">!</operator><name pos:start="41:17" pos:end="41:21">level</name></expr>)</condition><block type="pseudo" pos:start="43:17" pos:end="43:22"><block_content pos:start="43:17" pos:end="43:22"> <comment type="line" pos:start="41:24" pos:end="41:44">//end of block signal</comment>

                <break pos:start="43:17" pos:end="43:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:44"><expr pos:start="45:13" pos:end="45:43"><name pos:start="45:13" pos:end="45:15">run</name>   <operator pos:start="45:19" pos:end="45:19">=</operator> <name pos:start="45:21" pos:end="45:43"><name pos:start="45:21" pos:end="45:21">r</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:28">rltab</name><index pos:start="45:29" pos:end="45:40">[<expr pos:start="45:30" pos:end="45:39"><name pos:start="45:30" pos:end="45:39">level_code</name></expr>]</index><index pos:start="45:41" pos:end="45:43">[<expr pos:start="45:42" pos:end="45:42"><literal type="number" pos:start="45:42" pos:end="45:42">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:41"><expr pos:start="47:13" pos:end="47:40"><name pos:start="47:13" pos:end="47:13">r</name> <operator pos:start="47:15" pos:end="47:16">+=</operator> <name pos:start="47:18" pos:end="47:40"><name pos:start="47:18" pos:end="47:18">r</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:25">rltab</name><index pos:start="47:26" pos:end="47:37">[<expr pos:start="47:27" pos:end="47:36"><name pos:start="47:27" pos:end="47:36">level_code</name></expr>]</index><index pos:start="47:38" pos:end="47:40">[<expr pos:start="47:39" pos:end="47:39"><literal type="number" pos:start="47:39" pos:end="47:39">2</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:29"><expr pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:17">level_buf</name><index pos:start="51:18" pos:end="51:20">[<expr pos:start="51:19" pos:end="51:19"><name pos:start="51:19" pos:end="51:19">i</name></expr>]</index></name> <operator pos:start="51:22" pos:end="51:22">=</operator> <name pos:start="51:24" pos:end="51:28">level</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:25"><expr pos:start="53:9" pos:end="53:24"><name pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:15">run_buf</name><index pos:start="53:16" pos:end="53:18">[<expr pos:start="53:17" pos:end="53:17"><name pos:start="53:17" pos:end="53:17">i</name></expr>]</index></name> <operator pos:start="53:20" pos:end="53:20">=</operator> <name pos:start="53:22" pos:end="53:24">run</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="57:5" pos:end="61:18"><if pos:start="57:5" pos:end="61:18">if<condition pos:start="57:7" pos:end="59:45">(<expr pos:start="57:8" pos:end="59:44"><call pos:start="57:8" pos:end="59:44"><name pos:start="57:8" pos:end="57:14">dequant</name><argument_list pos:start="57:15" pos:end="59:44">(<argument pos:start="57:16" pos:end="57:16"><expr pos:start="57:16" pos:end="57:16"><name pos:start="57:16" pos:end="57:16">h</name></expr></argument>,<argument pos:start="57:18" pos:end="57:26"><expr pos:start="57:18" pos:end="57:26"><name pos:start="57:18" pos:end="57:26">level_buf</name></expr></argument>, <argument pos:start="57:29" pos:end="57:35"><expr pos:start="57:29" pos:end="57:35"><name pos:start="57:29" pos:end="57:35">run_buf</name></expr></argument>, <argument pos:start="57:38" pos:end="57:42"><expr pos:start="57:38" pos:end="57:42"><name pos:start="57:38" pos:end="57:42">block</name></expr></argument>, <argument pos:start="57:45" pos:end="57:67"><expr pos:start="57:45" pos:end="57:67"><name pos:start="57:45" pos:end="57:67"><name pos:start="57:45" pos:end="57:63">ff_cavs_dequant_mul</name><index pos:start="57:64" pos:end="57:67">[<expr pos:start="57:65" pos:end="57:66"><name pos:start="57:65" pos:end="57:66">qp</name></expr>]</index></name></expr></argument>,

               <argument pos:start="59:16" pos:end="59:40"><expr pos:start="59:16" pos:end="59:40"><name pos:start="59:16" pos:end="59:40"><name pos:start="59:16" pos:end="59:36">ff_cavs_dequant_shift</name><index pos:start="59:37" pos:end="59:40">[<expr pos:start="59:38" pos:end="59:39"><name pos:start="59:38" pos:end="59:39">qp</name></expr>]</index></name></expr></argument>, <argument pos:start="59:43" pos:end="59:43"><expr pos:start="59:43" pos:end="59:43"><name pos:start="59:43" pos:end="59:43">i</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:18"><block_content pos:start="61:9" pos:end="61:18">

        <return pos:start="61:9" pos:end="61:18">return <expr pos:start="61:16" pos:end="61:17"><operator pos:start="61:16" pos:end="61:16">-</operator><literal type="number" pos:start="61:17" pos:end="61:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:45"><expr pos:start="63:5" pos:end="63:44"><call pos:start="63:5" pos:end="63:44"><name pos:start="63:5" pos:end="63:26"><name pos:start="63:5" pos:end="63:5">h</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:11">cdsp</name><operator pos:start="63:12" pos:end="63:12">.</operator><name pos:start="63:13" pos:end="63:26">cavs_idct8_add</name></name><argument_list pos:start="63:27" pos:end="63:44">(<argument pos:start="63:28" pos:end="63:30"><expr pos:start="63:28" pos:end="63:30"><name pos:start="63:28" pos:end="63:30">dst</name></expr></argument>,<argument pos:start="63:32" pos:end="63:36"><expr pos:start="63:32" pos:end="63:36"><name pos:start="63:32" pos:end="63:36">block</name></expr></argument>,<argument pos:start="63:38" pos:end="63:43"><expr pos:start="63:38" pos:end="63:43"><name pos:start="63:38" pos:end="63:43">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:32"><expr pos:start="65:5" pos:end="65:31"><call pos:start="65:5" pos:end="65:31"><name pos:start="65:5" pos:end="65:24"><name pos:start="65:5" pos:end="65:5">h</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:8">s</name><operator pos:start="65:9" pos:end="65:9">.</operator><name pos:start="65:10" pos:end="65:12">dsp</name><operator pos:start="65:13" pos:end="65:13">.</operator><name pos:start="65:14" pos:end="65:24">clear_block</name></name><argument_list pos:start="65:25" pos:end="65:31">(<argument pos:start="65:26" pos:end="65:30"><expr pos:start="65:26" pos:end="65:30"><name pos:start="65:26" pos:end="65:30">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
