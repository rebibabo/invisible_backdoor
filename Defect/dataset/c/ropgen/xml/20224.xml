<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20224.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:20">ff_alloc_picture</name><parameter_list pos:start="1:21" pos:end="1:65">(<parameter pos:start="1:22" pos:end="1:38"><decl pos:start="1:22" pos:end="1:38"><type pos:start="1:22" pos:end="1:38"><name pos:start="1:22" pos:end="1:35">MpegEncContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:52"><decl pos:start="1:41" pos:end="1:52"><type pos:start="1:41" pos:end="1:52"><name pos:start="1:41" pos:end="1:47">Picture</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">pic</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:64"><decl pos:start="1:55" pos:end="1:64"><type pos:start="1:55" pos:end="1:64"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:64">shared</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:27">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:14">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="31:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:15">(<expr pos:start="9:9" pos:end="9:14"><name pos:start="9:9" pos:end="9:14">shared</name></expr>)</condition> <block pos:start="9:17" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:24">

        <expr_stmt pos:start="11:9" pos:end="11:31"><expr pos:start="11:9" pos:end="11:30"><call pos:start="11:9" pos:end="11:30"><name pos:start="11:9" pos:end="11:14">assert</name><argument_list pos:start="11:15" pos:end="11:30">(<argument pos:start="11:16" pos:end="11:29"><expr pos:start="11:16" pos:end="11:29"><name pos:start="11:16" pos:end="11:29"><name pos:start="11:16" pos:end="11:18">pic</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:21">f</name><operator pos:start="11:22" pos:end="11:22">.</operator><name pos:start="11:23" pos:end="11:26">data</name><index pos:start="11:27" pos:end="11:29">[<expr pos:start="11:28" pos:end="11:28"><literal type="number" pos:start="11:28" pos:end="11:28">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:24"><expr pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:11">pic</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:19">shared</name></name> <operator pos:start="13:21" pos:end="13:21">=</operator> <literal type="number" pos:start="13:23" pos:end="13:23">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="15:7" pos:end="31:5">else <block pos:start="15:12" pos:end="31:5">{<block_content pos:start="17:9" pos:end="29:43">

        <expr_stmt pos:start="17:9" pos:end="17:32"><expr pos:start="17:9" pos:end="17:31"><call pos:start="17:9" pos:end="17:31"><name pos:start="17:9" pos:end="17:14">assert</name><argument_list pos:start="17:15" pos:end="17:31">(<argument pos:start="17:16" pos:end="17:30"><expr pos:start="17:16" pos:end="17:30"><operator pos:start="17:16" pos:end="17:16">!</operator><name pos:start="17:17" pos:end="17:30"><name pos:start="17:17" pos:end="17:19">pic</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:22">f</name><operator pos:start="17:23" pos:end="17:23">.</operator><name pos:start="17:24" pos:end="17:27">data</name><index pos:start="17:28" pos:end="17:30">[<expr pos:start="17:29" pos:end="17:29"><literal type="number" pos:start="17:29" pos:end="17:29">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="21:9" pos:end="23:22"><if pos:start="21:9" pos:end="23:22">if <condition pos:start="21:12" pos:end="21:43">(<expr pos:start="21:13" pos:end="21:42"><call pos:start="21:13" pos:end="21:38"><name pos:start="21:13" pos:end="21:30">alloc_frame_buffer</name><argument_list pos:start="21:31" pos:end="21:38">(<argument pos:start="21:32" pos:end="21:32"><expr pos:start="21:32" pos:end="21:32"><name pos:start="21:32" pos:end="21:32">s</name></expr></argument>, <argument pos:start="21:35" pos:end="21:37"><expr pos:start="21:35" pos:end="21:37"><name pos:start="21:35" pos:end="21:37">pic</name></expr></argument>)</argument_list></call> <operator pos:start="21:40" pos:end="21:40">&lt;</operator> <literal type="number" pos:start="21:42" pos:end="21:42">0</literal></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:22"><block_content pos:start="23:13" pos:end="23:22">

            <return pos:start="23:13" pos:end="23:22">return <expr pos:start="23:20" pos:end="23:21"><operator pos:start="23:20" pos:end="23:20">-</operator><literal type="number" pos:start="23:21" pos:end="23:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:43"><expr pos:start="27:9" pos:end="27:42"><name pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:19">linesize</name></name>   <operator pos:start="27:23" pos:end="27:23">=</operator> <name pos:start="27:25" pos:end="27:42"><name pos:start="27:25" pos:end="27:27">pic</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:30">f</name><operator pos:start="27:31" pos:end="27:31">.</operator><name pos:start="27:32" pos:end="27:39">linesize</name><index pos:start="27:40" pos:end="27:42">[<expr pos:start="27:41" pos:end="27:41"><literal type="number" pos:start="27:41" pos:end="27:41">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:43"><expr pos:start="29:9" pos:end="29:42"><name pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:21">uvlinesize</name></name> <operator pos:start="29:23" pos:end="29:23">=</operator> <name pos:start="29:25" pos:end="29:42"><name pos:start="29:25" pos:end="29:27">pic</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:30">f</name><operator pos:start="29:31" pos:end="29:31">.</operator><name pos:start="29:32" pos:end="29:39">linesize</name><index pos:start="29:40" pos:end="29:42">[<expr pos:start="29:41" pos:end="29:41"><literal type="number" pos:start="29:41" pos:end="29:41">1</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="35:5" pos:end="41:40"><if pos:start="35:5" pos:end="37:43">if <condition pos:start="35:8" pos:end="35:31">(<expr pos:start="35:9" pos:end="35:30"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:30"><name pos:start="35:10" pos:end="35:12">pic</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:30">qscale_table_buf</name></name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:43"><block_content pos:start="37:9" pos:end="37:43">

        <expr_stmt pos:start="37:9" pos:end="37:43"><expr pos:start="37:9" pos:end="37:42"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:42"><name pos:start="37:15" pos:end="37:34">alloc_picture_tables</name><argument_list pos:start="37:35" pos:end="37:42">(<argument pos:start="37:36" pos:end="37:36"><expr pos:start="37:36" pos:end="37:36"><name pos:start="37:36" pos:end="37:36">s</name></expr></argument>, <argument pos:start="37:39" pos:end="37:41"><expr pos:start="37:39" pos:end="37:41"><name pos:start="37:39" pos:end="37:41">pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="39:5" pos:end="41:40">else<block type="pseudo" pos:start="41:9" pos:end="41:40"><block_content pos:start="41:9" pos:end="41:40">

        <expr_stmt pos:start="41:9" pos:end="41:40"><expr pos:start="41:9" pos:end="41:39"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:39"><name pos:start="41:15" pos:end="41:34">make_tables_writable</name><argument_list pos:start="41:35" pos:end="41:39">(<argument pos:start="41:36" pos:end="41:38"><expr pos:start="41:36" pos:end="41:38"><name pos:start="41:36" pos:end="41:38">pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="43:5" pos:end="45:18"><if pos:start="43:5" pos:end="45:18">if <condition pos:start="43:8" pos:end="43:16">(<expr pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">&lt;</operator> <literal type="number" pos:start="43:15" pos:end="43:15">0</literal></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:18"><block_content pos:start="45:9" pos:end="45:18">

        <goto pos:start="45:9" pos:end="45:18">goto <name pos:start="45:14" pos:end="45:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="57:5"><if pos:start="49:5" pos:end="57:5">if <condition pos:start="49:8" pos:end="49:20">(<expr pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:19">encoding</name></name></expr>)</condition> <block pos:start="49:22" pos:end="57:5">{<block_content pos:start="51:9" pos:end="55:48">

        <expr_stmt pos:start="51:9" pos:end="51:58"><expr pos:start="51:9" pos:end="51:57"><name pos:start="51:9" pos:end="51:19"><name pos:start="51:9" pos:end="51:11">pic</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:19">mb_var</name></name>    <operator pos:start="51:24" pos:end="51:24">=</operator> <operator pos:start="51:26" pos:end="51:26">(</operator><name pos:start="51:27" pos:end="51:34">uint16_t</name><operator pos:start="51:35" pos:end="51:35">*</operator><operator pos:start="51:36" pos:end="51:36">)</operator><name pos:start="51:37" pos:end="51:57"><name pos:start="51:37" pos:end="51:39">pic</name><operator pos:start="51:40" pos:end="51:41">-&gt;</operator><name pos:start="51:42" pos:end="51:51">mb_var_buf</name><operator pos:start="51:52" pos:end="51:53">-&gt;</operator><name pos:start="51:54" pos:end="51:57">data</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:61"><expr pos:start="53:9" pos:end="53:60"><name pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:11">pic</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:22">mc_mb_var</name></name> <operator pos:start="53:24" pos:end="53:24">=</operator> <operator pos:start="53:26" pos:end="53:26">(</operator><name pos:start="53:27" pos:end="53:34">uint16_t</name><operator pos:start="53:35" pos:end="53:35">*</operator><operator pos:start="53:36" pos:end="53:36">)</operator><name pos:start="53:37" pos:end="53:60"><name pos:start="53:37" pos:end="53:39">pic</name><operator pos:start="53:40" pos:end="53:41">-&gt;</operator><name pos:start="53:42" pos:end="53:54">mc_mb_var_buf</name><operator pos:start="53:55" pos:end="53:56">-&gt;</operator><name pos:start="53:57" pos:end="53:60">data</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:48"><expr pos:start="55:9" pos:end="55:47"><name pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:11">pic</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:20">mb_mean</name></name>   <operator pos:start="55:24" pos:end="55:24">=</operator> <name pos:start="55:26" pos:end="55:47"><name pos:start="55:26" pos:end="55:28">pic</name><operator pos:start="55:29" pos:end="55:30">-&gt;</operator><name pos:start="55:31" pos:end="55:41">mb_mean_buf</name><operator pos:start="55:42" pos:end="55:43">-&gt;</operator><name pos:start="55:44" pos:end="55:47">data</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:52"><expr pos:start="61:5" pos:end="61:51"><name pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:7">pic</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:21">mbskip_table</name></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <name pos:start="61:25" pos:end="61:51"><name pos:start="61:25" pos:end="61:27">pic</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:45">mbskip_table_buf</name><operator pos:start="61:46" pos:end="61:47">-&gt;</operator><name pos:start="61:48" pos:end="61:51">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:75"><expr pos:start="63:5" pos:end="63:74"><name pos:start="63:5" pos:end="63:21"><name pos:start="63:5" pos:end="63:7">pic</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:21">qscale_table</name></name> <operator pos:start="63:23" pos:end="63:23">=</operator> <name pos:start="63:25" pos:end="63:51"><name pos:start="63:25" pos:end="63:27">pic</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:45">qscale_table_buf</name><operator pos:start="63:46" pos:end="63:47">-&gt;</operator><name pos:start="63:48" pos:end="63:51">data</name></name> <operator pos:start="63:53" pos:end="63:53">+</operator> <literal type="number" pos:start="63:55" pos:end="63:55">2</literal> <operator pos:start="63:57" pos:end="63:57">*</operator> <name pos:start="63:59" pos:end="63:70"><name pos:start="63:59" pos:end="63:59">s</name><operator pos:start="63:60" pos:end="63:61">-&gt;</operator><name pos:start="63:62" pos:end="63:70">mb_stride</name></name> <operator pos:start="63:72" pos:end="63:72">+</operator> <literal type="number" pos:start="63:74" pos:end="63:74">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:81"><expr pos:start="65:5" pos:end="65:80"><name pos:start="65:5" pos:end="65:16"><name pos:start="65:5" pos:end="65:7">pic</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:16">mb_type</name></name>      <operator pos:start="65:23" pos:end="65:23">=</operator> <operator pos:start="65:25" pos:end="65:25">(</operator><name pos:start="65:26" pos:end="65:33">uint32_t</name><operator pos:start="65:34" pos:end="65:34">*</operator><operator pos:start="65:35" pos:end="65:35">)</operator><name pos:start="65:36" pos:end="65:57"><name pos:start="65:36" pos:end="65:38">pic</name><operator pos:start="65:39" pos:end="65:40">-&gt;</operator><name pos:start="65:41" pos:end="65:51">mb_type_buf</name><operator pos:start="65:52" pos:end="65:53">-&gt;</operator><name pos:start="65:54" pos:end="65:57">data</name></name> <operator pos:start="65:59" pos:end="65:59">+</operator> <literal type="number" pos:start="65:61" pos:end="65:61">2</literal> <operator pos:start="65:63" pos:end="65:63">*</operator> <name pos:start="65:65" pos:end="65:76"><name pos:start="65:65" pos:end="65:65">s</name><operator pos:start="65:66" pos:end="65:67">-&gt;</operator><name pos:start="65:68" pos:end="65:76">mb_stride</name></name> <operator pos:start="65:78" pos:end="65:78">+</operator> <literal type="number" pos:start="65:80" pos:end="65:80">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="79:5"><if pos:start="69:5" pos:end="79:5">if <condition pos:start="69:8" pos:end="69:31">(<expr pos:start="69:9" pos:end="69:30"><name pos:start="69:9" pos:end="69:30"><name pos:start="69:9" pos:end="69:11">pic</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:27">motion_val_buf</name><index pos:start="69:28" pos:end="69:30">[<expr pos:start="69:29" pos:end="69:29"><literal type="number" pos:start="69:29" pos:end="69:29">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="69:33" pos:end="79:5">{<block_content pos:start="71:9" pos:end="77:9">

        <for pos:start="71:9" pos:end="77:9">for <control pos:start="71:13" pos:end="71:31">(<init pos:start="71:14" pos:end="71:19"><expr pos:start="71:14" pos:end="71:18"><name pos:start="71:14" pos:end="71:14">i</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <literal type="number" pos:start="71:18" pos:end="71:18">0</literal></expr>;</init> <condition pos:start="71:21" pos:end="71:26"><expr pos:start="71:21" pos:end="71:25"><name pos:start="71:21" pos:end="71:21">i</name> <operator pos:start="71:23" pos:end="71:23">&lt;</operator> <literal type="number" pos:start="71:25" pos:end="71:25">2</literal></expr>;</condition> <incr pos:start="71:28" pos:end="71:30"><expr pos:start="71:28" pos:end="71:30"><name pos:start="71:28" pos:end="71:28">i</name><operator pos:start="71:29" pos:end="71:30">++</operator></expr></incr>)</control> <block pos:start="71:33" pos:end="77:9">{<block_content pos:start="73:13" pos:end="75:61">

            <expr_stmt pos:start="73:13" pos:end="73:82"><expr pos:start="73:13" pos:end="73:81"><name pos:start="73:13" pos:end="73:30"><name pos:start="73:13" pos:end="73:15">pic</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:27">motion_val</name><index pos:start="73:28" pos:end="73:30">[<expr pos:start="73:29" pos:end="73:29"><name pos:start="73:29" pos:end="73:29">i</name></expr>]</index></name> <operator pos:start="73:32" pos:end="73:32">=</operator> <operator pos:start="73:34" pos:end="73:34">(</operator><call pos:start="73:35" pos:end="73:45"><name pos:start="73:35" pos:end="73:41">int16_t</name> <argument_list pos:start="73:43" pos:end="73:45">(<argument pos:start="73:44" pos:end="73:44"><expr pos:start="73:44" pos:end="73:44"><operator pos:start="73:44" pos:end="73:44">*</operator></expr></argument>)</argument_list></call><index pos:start="73:46" pos:end="73:48">[<expr pos:start="73:47" pos:end="73:47"><literal type="number" pos:start="73:47" pos:end="73:47">2</literal></expr>]</index><operator pos:start="73:49" pos:end="73:49">)</operator><name pos:start="73:50" pos:end="73:71"><name pos:start="73:50" pos:end="73:52">pic</name><operator pos:start="73:53" pos:end="73:54">-&gt;</operator><name pos:start="73:55" pos:end="73:68">motion_val_buf</name><index pos:start="73:69" pos:end="73:71">[<expr pos:start="73:70" pos:end="73:70"><name pos:start="73:70" pos:end="73:70">i</name></expr>]</index></name><operator pos:start="73:72" pos:end="73:73">-&gt;</operator><name pos:start="73:74" pos:end="73:77">data</name> <operator pos:start="73:79" pos:end="73:79">+</operator> <literal type="number" pos:start="73:81" pos:end="73:81">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:61"><expr pos:start="75:13" pos:end="75:60"><name pos:start="75:13" pos:end="75:29"><name pos:start="75:13" pos:end="75:15">pic</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:26">ref_index</name><index pos:start="75:27" pos:end="75:29">[<expr pos:start="75:28" pos:end="75:28"><name pos:start="75:28" pos:end="75:28">i</name></expr>]</index></name>  <operator pos:start="75:32" pos:end="75:32">=</operator> <name pos:start="75:34" pos:end="75:54"><name pos:start="75:34" pos:end="75:36">pic</name><operator pos:start="75:37" pos:end="75:38">-&gt;</operator><name pos:start="75:39" pos:end="75:51">ref_index_buf</name><index pos:start="75:52" pos:end="75:54">[<expr pos:start="75:53" pos:end="75:53"><name pos:start="75:53" pos:end="75:53">i</name></expr>]</index></name><operator pos:start="75:55" pos:end="75:56">-&gt;</operator><name pos:start="75:57" pos:end="75:60">data</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <return pos:start="83:5" pos:end="83:13">return <expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr>;</return>

<label pos:start="85:1" pos:end="85:5"><name pos:start="85:1" pos:end="85:4">fail</name>:</label>

    <expr_stmt pos:start="87:5" pos:end="87:68"><expr pos:start="87:5" pos:end="87:67"><call pos:start="87:5" pos:end="87:67"><name pos:start="87:5" pos:end="87:10">av_log</name><argument_list pos:start="87:11" pos:end="87:67">(<argument pos:start="87:12" pos:end="87:19"><expr pos:start="87:12" pos:end="87:19"><name pos:start="87:12" pos:end="87:19"><name pos:start="87:12" pos:end="87:12">s</name><operator pos:start="87:13" pos:end="87:14">-&gt;</operator><name pos:start="87:15" pos:end="87:19">avctx</name></name></expr></argument>, <argument pos:start="87:22" pos:end="87:33"><expr pos:start="87:22" pos:end="87:33"><name pos:start="87:22" pos:end="87:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="87:36" pos:end="87:66"><expr pos:start="87:36" pos:end="87:66"><literal type="string" pos:start="87:36" pos:end="87:66">"Error allocating a picture.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:34"><expr pos:start="89:5" pos:end="89:33"><call pos:start="89:5" pos:end="89:33"><name pos:start="89:5" pos:end="89:25">ff_mpeg_unref_picture</name><argument_list pos:start="89:26" pos:end="89:33">(<argument pos:start="89:27" pos:end="89:27"><expr pos:start="89:27" pos:end="89:27"><name pos:start="89:27" pos:end="89:27">s</name></expr></argument>, <argument pos:start="89:30" pos:end="89:32"><expr pos:start="89:30" pos:end="89:32"><name pos:start="89:30" pos:end="89:32">pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:29"><expr pos:start="91:5" pos:end="91:28"><call pos:start="91:5" pos:end="91:28"><name pos:start="91:5" pos:end="91:23">free_picture_tables</name><argument_list pos:start="91:24" pos:end="91:28">(<argument pos:start="91:25" pos:end="91:27"><expr pos:start="91:25" pos:end="91:27"><name pos:start="91:25" pos:end="91:27">pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="93:5" pos:end="93:27">return <expr pos:start="93:12" pos:end="93:26"><call pos:start="93:12" pos:end="93:26"><name pos:start="93:12" pos:end="93:18">AVERROR</name><argument_list pos:start="93:19" pos:end="93:26">(<argument pos:start="93:20" pos:end="93:25"><expr pos:start="93:20" pos:end="93:25"><name pos:start="93:20" pos:end="93:25">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
