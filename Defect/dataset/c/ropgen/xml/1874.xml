<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1874.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:25">decode</name><parameter_list pos:start="1:26" pos:end="1:56">(<parameter pos:start="1:27" pos:end="1:42"><decl pos:start="1:27" pos:end="1:42"><type pos:start="1:27" pos:end="1:42"><name pos:start="1:27" pos:end="1:38">DisasContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:42">dc</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:55"><decl pos:start="1:45" pos:end="1:55"><type pos:start="1:45" pos:end="1:55"><name pos:start="1:45" pos:end="1:52">uint32_t</name></type> <name pos:start="1:54" pos:end="1:55">ir</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:28">

    <if_stmt pos:start="5:5" pos:end="9:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:72">(<expr pos:start="5:9" pos:end="5:71"><call pos:start="5:9" pos:end="5:71"><name pos:start="5:9" pos:end="5:16">unlikely</name><argument_list pos:start="5:17" pos:end="5:71">(<argument pos:start="5:18" pos:end="5:70"><expr pos:start="5:18" pos:end="5:70"><call pos:start="5:18" pos:end="5:70"><name pos:start="5:18" pos:end="5:35">qemu_loglevel_mask</name><argument_list pos:start="5:36" pos:end="5:70">(<argument pos:start="5:37" pos:end="5:69"><expr pos:start="5:37" pos:end="5:69"><name pos:start="5:37" pos:end="5:49">CPU_LOG_TB_OP</name> <operator pos:start="5:51" pos:end="5:51">|</operator> <name pos:start="5:53" pos:end="5:69">CPU_LOG_TB_OP_OPT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="5:74" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:41">

        <expr_stmt pos:start="7:9" pos:end="7:41"><expr pos:start="7:9" pos:end="7:40"><call pos:start="7:9" pos:end="7:40"><name pos:start="7:9" pos:end="7:32">tcg_gen_debug_insn_start</name><argument_list pos:start="7:33" pos:end="7:40">(<argument pos:start="7:34" pos:end="7:39"><expr pos:start="7:34" pos:end="7:39"><name pos:start="7:34" pos:end="7:39"><name pos:start="7:34" pos:end="7:35">dc</name><operator pos:start="7:36" pos:end="7:37">-&gt;</operator><name pos:start="7:38" pos:end="7:39">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:16"><expr pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:6">dc</name><operator pos:start="13:7" pos:end="13:8">-&gt;</operator><name pos:start="13:9" pos:end="13:10">ir</name></name> <operator pos:start="13:12" pos:end="13:12">=</operator> <name pos:start="13:14" pos:end="13:15">ir</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><call pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:11">LOG_DIS</name><argument_list pos:start="15:12" pos:end="15:30">(<argument pos:start="15:13" pos:end="15:21"><expr pos:start="15:13" pos:end="15:21"><literal type="string" pos:start="15:13" pos:end="15:21">"%8.8x\t"</literal></expr></argument>, <argument pos:start="15:24" pos:end="15:29"><expr pos:start="15:24" pos:end="15:29"><name pos:start="15:24" pos:end="15:29"><name pos:start="15:24" pos:end="15:25">dc</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:29">ir</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="19:5" pos:end="21:51">/* try guessing 'empty' instruction memory, although it may be a valid

     * instruction sequence (eg. srui r0, r0, 0) */</comment>

    <if_stmt pos:start="23:5" pos:end="39:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:15">(<expr pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:10">dc</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:14">ir</name></name></expr>)</condition> <block pos:start="23:17" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:24">

        <expr_stmt pos:start="25:9" pos:end="25:24"><expr pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:10">dc</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:19">nr_nops</name></name> <operator pos:start="25:21" pos:end="25:21">=</operator> <literal type="number" pos:start="25:23" pos:end="25:23">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="39:5">else <block pos:start="27:12" pos:end="39:5">{<block_content pos:start="29:9" pos:end="37:9">

        <expr_stmt pos:start="29:9" pos:end="29:45"><expr pos:start="29:9" pos:end="29:44"><call pos:start="29:9" pos:end="29:44"><name pos:start="29:9" pos:end="29:15">LOG_DIS</name><argument_list pos:start="29:16" pos:end="29:44">(<argument pos:start="29:17" pos:end="29:30"><expr pos:start="29:17" pos:end="29:30"><literal type="string" pos:start="29:17" pos:end="29:30">"nr_nops=%d\t"</literal></expr></argument>, <argument pos:start="29:33" pos:end="29:43"><expr pos:start="29:33" pos:end="29:43"><name pos:start="29:33" pos:end="29:43"><name pos:start="29:33" pos:end="29:34">dc</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:43">nr_nops</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:22"><expr pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:10">dc</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:19">nr_nops</name></name><operator pos:start="31:20" pos:end="31:21">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="37:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:28">(<expr pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:23"><name pos:start="33:13" pos:end="33:14">dc</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:23">nr_nops</name></name> <operator pos:start="33:25" pos:end="33:25">&gt;</operator> <literal type="number" pos:start="33:27" pos:end="33:27">4</literal></expr>)</condition> <block pos:start="33:30" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:58">

            <expr_stmt pos:start="35:13" pos:end="35:58"><expr pos:start="35:13" pos:end="35:57"><call pos:start="35:13" pos:end="35:57"><name pos:start="35:13" pos:end="35:21">cpu_abort</name><argument_list pos:start="35:22" pos:end="35:57">(<argument pos:start="35:23" pos:end="35:29"><expr pos:start="35:23" pos:end="35:29"><name pos:start="35:23" pos:end="35:29"><name pos:start="35:23" pos:end="35:24">dc</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:29">env</name></name></expr></argument>, <argument pos:start="35:32" pos:end="35:56"><expr pos:start="35:32" pos:end="35:56"><literal type="string" pos:start="35:32" pos:end="35:56">"fetching nop sequence\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:43"><expr pos:start="43:5" pos:end="43:42"><name pos:start="43:5" pos:end="43:14"><name pos:start="43:5" pos:end="43:6">dc</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:14">opcode</name></name> <operator pos:start="43:16" pos:end="43:16">=</operator> <call pos:start="43:18" pos:end="43:42"><name pos:start="43:18" pos:end="43:30">EXTRACT_FIELD</name><argument_list pos:start="43:31" pos:end="43:42">(<argument pos:start="43:32" pos:end="43:33"><expr pos:start="43:32" pos:end="43:33"><name pos:start="43:32" pos:end="43:33">ir</name></expr></argument>, <argument pos:start="43:36" pos:end="43:37"><expr pos:start="43:36" pos:end="43:37"><literal type="number" pos:start="43:36" pos:end="43:37">26</literal></expr></argument>, <argument pos:start="43:40" pos:end="43:41"><expr pos:start="43:40" pos:end="43:41"><literal type="number" pos:start="43:40" pos:end="43:41">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:39"><expr pos:start="47:5" pos:end="47:38"><name pos:start="47:5" pos:end="47:12"><name pos:start="47:5" pos:end="47:6">dc</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:12">imm5</name></name> <operator pos:start="47:14" pos:end="47:14">=</operator> <call pos:start="47:16" pos:end="47:38"><name pos:start="47:16" pos:end="47:28">EXTRACT_FIELD</name><argument_list pos:start="47:29" pos:end="47:38">(<argument pos:start="47:30" pos:end="47:31"><expr pos:start="47:30" pos:end="47:31"><name pos:start="47:30" pos:end="47:31">ir</name></expr></argument>, <argument pos:start="47:34" pos:end="47:34"><expr pos:start="47:34" pos:end="47:34"><literal type="number" pos:start="47:34" pos:end="47:34">0</literal></expr></argument>, <argument pos:start="47:37" pos:end="47:37"><expr pos:start="47:37" pos:end="47:37"><literal type="number" pos:start="47:37" pos:end="47:37">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:41"><expr pos:start="49:5" pos:end="49:40"><name pos:start="49:5" pos:end="49:13"><name pos:start="49:5" pos:end="49:6">dc</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:13">imm16</name></name> <operator pos:start="49:15" pos:end="49:15">=</operator> <call pos:start="49:17" pos:end="49:40"><name pos:start="49:17" pos:end="49:29">EXTRACT_FIELD</name><argument_list pos:start="49:30" pos:end="49:40">(<argument pos:start="49:31" pos:end="49:32"><expr pos:start="49:31" pos:end="49:32"><name pos:start="49:31" pos:end="49:32">ir</name></expr></argument>, <argument pos:start="49:35" pos:end="49:35"><expr pos:start="49:35" pos:end="49:35"><literal type="number" pos:start="49:35" pos:end="49:35">0</literal></expr></argument>, <argument pos:start="49:38" pos:end="49:39"><expr pos:start="49:38" pos:end="49:39"><literal type="number" pos:start="49:38" pos:end="49:39">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:41"><expr pos:start="51:5" pos:end="51:40"><name pos:start="51:5" pos:end="51:13"><name pos:start="51:5" pos:end="51:6">dc</name><operator pos:start="51:7" pos:end="51:8">-&gt;</operator><name pos:start="51:9" pos:end="51:13">imm26</name></name> <operator pos:start="51:15" pos:end="51:15">=</operator> <call pos:start="51:17" pos:end="51:40"><name pos:start="51:17" pos:end="51:29">EXTRACT_FIELD</name><argument_list pos:start="51:30" pos:end="51:40">(<argument pos:start="51:31" pos:end="51:32"><expr pos:start="51:31" pos:end="51:32"><name pos:start="51:31" pos:end="51:32">ir</name></expr></argument>, <argument pos:start="51:35" pos:end="51:35"><expr pos:start="51:35" pos:end="51:35"><literal type="number" pos:start="51:35" pos:end="51:35">0</literal></expr></argument>, <argument pos:start="51:38" pos:end="51:39"><expr pos:start="51:38" pos:end="51:39"><literal type="number" pos:start="51:38" pos:end="51:39">25</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:40"><expr pos:start="55:5" pos:end="55:39"><name pos:start="55:5" pos:end="55:11"><name pos:start="55:5" pos:end="55:6">dc</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:11">csr</name></name> <operator pos:start="55:13" pos:end="55:13">=</operator> <call pos:start="55:15" pos:end="55:39"><name pos:start="55:15" pos:end="55:27">EXTRACT_FIELD</name><argument_list pos:start="55:28" pos:end="55:39">(<argument pos:start="55:29" pos:end="55:30"><expr pos:start="55:29" pos:end="55:30"><name pos:start="55:29" pos:end="55:30">ir</name></expr></argument>, <argument pos:start="55:33" pos:end="55:34"><expr pos:start="55:33" pos:end="55:34"><literal type="number" pos:start="55:33" pos:end="55:34">21</literal></expr></argument>, <argument pos:start="55:37" pos:end="55:38"><expr pos:start="55:37" pos:end="55:38"><literal type="number" pos:start="55:37" pos:end="55:38">25</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:39"><expr pos:start="57:5" pos:end="57:38"><name pos:start="57:5" pos:end="57:10"><name pos:start="57:5" pos:end="57:6">dc</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:10">r0</name></name> <operator pos:start="57:12" pos:end="57:12">=</operator> <call pos:start="57:14" pos:end="57:38"><name pos:start="57:14" pos:end="57:26">EXTRACT_FIELD</name><argument_list pos:start="57:27" pos:end="57:38">(<argument pos:start="57:28" pos:end="57:29"><expr pos:start="57:28" pos:end="57:29"><name pos:start="57:28" pos:end="57:29">ir</name></expr></argument>, <argument pos:start="57:32" pos:end="57:33"><expr pos:start="57:32" pos:end="57:33"><literal type="number" pos:start="57:32" pos:end="57:33">21</literal></expr></argument>, <argument pos:start="57:36" pos:end="57:37"><expr pos:start="57:36" pos:end="57:37"><literal type="number" pos:start="57:36" pos:end="57:37">25</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:39"><expr pos:start="59:5" pos:end="59:38"><name pos:start="59:5" pos:end="59:10"><name pos:start="59:5" pos:end="59:6">dc</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:10">r1</name></name> <operator pos:start="59:12" pos:end="59:12">=</operator> <call pos:start="59:14" pos:end="59:38"><name pos:start="59:14" pos:end="59:26">EXTRACT_FIELD</name><argument_list pos:start="59:27" pos:end="59:38">(<argument pos:start="59:28" pos:end="59:29"><expr pos:start="59:28" pos:end="59:29"><name pos:start="59:28" pos:end="59:29">ir</name></expr></argument>, <argument pos:start="59:32" pos:end="59:33"><expr pos:start="59:32" pos:end="59:33"><literal type="number" pos:start="59:32" pos:end="59:33">16</literal></expr></argument>, <argument pos:start="59:36" pos:end="59:37"><expr pos:start="59:36" pos:end="59:37"><literal type="number" pos:start="59:36" pos:end="59:37">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:39"><expr pos:start="61:5" pos:end="61:38"><name pos:start="61:5" pos:end="61:10"><name pos:start="61:5" pos:end="61:6">dc</name><operator pos:start="61:7" pos:end="61:8">-&gt;</operator><name pos:start="61:9" pos:end="61:10">r2</name></name> <operator pos:start="61:12" pos:end="61:12">=</operator> <call pos:start="61:14" pos:end="61:38"><name pos:start="61:14" pos:end="61:26">EXTRACT_FIELD</name><argument_list pos:start="61:27" pos:end="61:38">(<argument pos:start="61:28" pos:end="61:29"><expr pos:start="61:28" pos:end="61:29"><name pos:start="61:28" pos:end="61:29">ir</name></expr></argument>, <argument pos:start="61:32" pos:end="61:33"><expr pos:start="61:32" pos:end="61:33"><literal type="number" pos:start="61:32" pos:end="61:33">11</literal></expr></argument>, <argument pos:start="61:36" pos:end="61:37"><expr pos:start="61:36" pos:end="61:37"><literal type="number" pos:start="61:36" pos:end="61:37">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="65:5" pos:end="65:46">/* bit 31 seems to indicate insn type.  */</comment>

    <if_stmt pos:start="67:5" pos:end="75:5"><if pos:start="67:5" pos:end="71:5">if <condition pos:start="67:8" pos:end="67:23">(<expr pos:start="67:9" pos:end="67:22"><name pos:start="67:9" pos:end="67:10">ir</name> <operator pos:start="67:12" pos:end="67:12">&amp;</operator> <operator pos:start="67:14" pos:end="67:14">(</operator><literal type="number" pos:start="67:15" pos:end="67:15">1</literal> <operator pos:start="67:17" pos:end="67:18">&lt;&lt;</operator> <literal type="number" pos:start="67:20" pos:end="67:21">31</literal><operator pos:start="67:22" pos:end="67:22">)</operator></expr>)</condition> <block pos:start="67:25" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:31">

        <expr_stmt pos:start="69:9" pos:end="69:31"><expr pos:start="69:9" pos:end="69:30"><name pos:start="69:9" pos:end="69:18"><name pos:start="69:9" pos:end="69:10">dc</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:18">format</name></name> <operator pos:start="69:20" pos:end="69:20">=</operator> <name pos:start="69:22" pos:end="69:30">OP_FMT_RR</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="71:7" pos:end="75:5">else <block pos:start="71:12" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:31">

        <expr_stmt pos:start="73:9" pos:end="73:31"><expr pos:start="73:9" pos:end="73:30"><name pos:start="73:9" pos:end="73:18"><name pos:start="73:9" pos:end="73:10">dc</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:18">format</name></name> <operator pos:start="73:20" pos:end="73:20">=</operator> <name pos:start="73:22" pos:end="73:30">OP_FMT_RI</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:38"><expr pos:start="79:5" pos:end="79:37"><call pos:start="79:5" pos:end="79:37"><name pos:start="79:5" pos:end="79:10">assert</name><argument_list pos:start="79:11" pos:end="79:37">(<argument pos:start="79:12" pos:end="79:36"><expr pos:start="79:12" pos:end="79:36"><call pos:start="79:12" pos:end="79:30"><name pos:start="79:12" pos:end="79:21">ARRAY_SIZE</name><argument_list pos:start="79:22" pos:end="79:30">(<argument pos:start="79:23" pos:end="79:29"><expr pos:start="79:23" pos:end="79:29"><name pos:start="79:23" pos:end="79:29">decinfo</name></expr></argument>)</argument_list></call> <operator pos:start="79:32" pos:end="79:33">==</operator> <literal type="number" pos:start="79:35" pos:end="79:36">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:28"><expr pos:start="81:5" pos:end="81:27"><call pos:start="81:5" pos:end="81:27"><name pos:start="81:5" pos:end="81:10">assert</name><argument_list pos:start="81:11" pos:end="81:27">(<argument pos:start="81:12" pos:end="81:26"><expr pos:start="81:12" pos:end="81:26"><name pos:start="81:12" pos:end="81:21"><name pos:start="81:12" pos:end="81:13">dc</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:21">opcode</name></name> <operator pos:start="81:23" pos:end="81:23">&lt;</operator> <literal type="number" pos:start="81:25" pos:end="81:26">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:28"><expr pos:start="85:5" pos:end="85:27"><name pos:start="85:5" pos:end="85:23"><name pos:start="85:5" pos:end="85:11">decinfo</name><index pos:start="85:12" pos:end="85:23">[<expr pos:start="85:13" pos:end="85:22"><name pos:start="85:13" pos:end="85:22"><name pos:start="85:13" pos:end="85:14">dc</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:22">opcode</name></name></expr>]</index></name><operator pos:start="85:24" pos:end="85:24">(</operator><name pos:start="85:25" pos:end="85:26">dc</name><operator pos:start="85:27" pos:end="85:27">)</operator></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
