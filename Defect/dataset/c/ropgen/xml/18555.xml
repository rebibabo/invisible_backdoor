<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18555.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">update_irq</name><parameter_list pos:start="1:23" pos:end="1:41">(<parameter pos:start="1:24" pos:end="1:40"><decl pos:start="1:24" pos:end="1:40"><type pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:37"><name pos:start="1:24" pos:end="1:29">struct</name> <name pos:start="1:31" pos:end="1:37">xlx_pic</name></name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:72">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:14">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:35">/* level triggered interrupt */</comment>

    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:27">(<expr pos:start="11:9" pos:end="11:26"><name pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:9">p</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:15">regs</name><index pos:start="11:16" pos:end="11:22">[<expr pos:start="11:17" pos:end="11:21"><name pos:start="11:17" pos:end="11:21">R_MER</name></expr>]</index></name> <operator pos:start="11:24" pos:end="11:24">&amp;</operator> <literal type="number" pos:start="11:26" pos:end="11:26">2</literal></expr>)</condition> <block pos:start="11:29" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:64">

        <expr_stmt pos:start="13:9" pos:end="13:64"><expr pos:start="13:9" pos:end="13:63"><name pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:9">p</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:15">regs</name><index pos:start="13:16" pos:end="13:22">[<expr pos:start="13:17" pos:end="13:21"><name pos:start="13:17" pos:end="13:21">R_ISR</name></expr>]</index></name> <operator pos:start="13:24" pos:end="13:25">|=</operator> <name pos:start="13:27" pos:end="13:42"><name pos:start="13:27" pos:end="13:27">p</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:42">irq_pin_state</name></name> <operator pos:start="13:44" pos:end="13:44">&amp;</operator> <operator pos:start="13:46" pos:end="13:46">~</operator><name pos:start="13:47" pos:end="13:63"><name pos:start="13:47" pos:end="13:47">p</name><operator pos:start="13:48" pos:end="13:49">-&gt;</operator><name pos:start="13:50" pos:end="13:63">c_kind_of_intr</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:39">/* Update the pending register.  */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:53"><expr pos:start="21:5" pos:end="21:52"><name pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:5">p</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:11">regs</name><index pos:start="21:12" pos:end="21:18">[<expr pos:start="21:13" pos:end="21:17"><name pos:start="21:13" pos:end="21:17">R_IPR</name></expr>]</index></name> <operator pos:start="21:20" pos:end="21:20">=</operator> <name pos:start="21:22" pos:end="21:35"><name pos:start="21:22" pos:end="21:22">p</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:28">regs</name><index pos:start="21:29" pos:end="21:35">[<expr pos:start="21:30" pos:end="21:34"><name pos:start="21:30" pos:end="21:34">R_ISR</name></expr>]</index></name> <operator pos:start="21:37" pos:end="21:37">&amp;</operator> <name pos:start="21:39" pos:end="21:52"><name pos:start="21:39" pos:end="21:39">p</name><operator pos:start="21:40" pos:end="21:41">-&gt;</operator><name pos:start="21:42" pos:end="21:45">regs</name><index pos:start="21:46" pos:end="21:52">[<expr pos:start="21:47" pos:end="21:51"><name pos:start="21:47" pos:end="21:51">R_IER</name></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:38">/* Update the vector register.  */</comment>

    <for pos:start="27:5" pos:end="33:5">for <control pos:start="27:9" pos:end="27:28">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:23"><expr pos:start="27:17" pos:end="27:22"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <literal type="number" pos:start="27:21" pos:end="27:22">32</literal></expr>;</condition> <incr pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><name pos:start="27:25" pos:end="27:25">i</name><operator pos:start="27:26" pos:end="27:27">++</operator></expr></incr>)</control> <block pos:start="27:30" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:18">

        <if_stmt pos:start="29:9" pos:end="31:18"><if pos:start="29:9" pos:end="31:18">if <condition pos:start="29:12" pos:end="29:38">(<expr pos:start="29:13" pos:end="29:37"><name pos:start="29:13" pos:end="29:26"><name pos:start="29:13" pos:end="29:13">p</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:19">regs</name><index pos:start="29:20" pos:end="29:26">[<expr pos:start="29:21" pos:end="29:25"><name pos:start="29:21" pos:end="29:25">R_IPR</name></expr>]</index></name> <operator pos:start="29:28" pos:end="29:28">&amp;</operator> <operator pos:start="29:30" pos:end="29:30">(</operator><literal type="number" pos:start="29:31" pos:end="29:31">1</literal> <operator pos:start="29:33" pos:end="29:34">&lt;&lt;</operator> <name pos:start="29:36" pos:end="29:36">i</name><operator pos:start="29:37" pos:end="29:37">)</operator></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:18"><block_content pos:start="31:13" pos:end="31:18">

            <break pos:start="31:13" pos:end="31:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="35:5" pos:end="37:15"><if pos:start="35:5" pos:end="37:15">if <condition pos:start="35:8" pos:end="35:16">(<expr pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:9">i</name> <operator pos:start="35:11" pos:end="35:12">==</operator> <literal type="number" pos:start="35:14" pos:end="35:15">32</literal></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:15"><block_content pos:start="37:9" pos:end="37:15">

        <expr_stmt pos:start="37:9" pos:end="37:15"><expr pos:start="37:9" pos:end="37:14"><name pos:start="37:9" pos:end="37:9">i</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <operator pos:start="37:13" pos:end="37:13">~</operator><literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:23"><expr pos:start="41:5" pos:end="41:22"><name pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:5">p</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:11">regs</name><index pos:start="41:12" pos:end="41:18">[<expr pos:start="41:13" pos:end="41:17"><name pos:start="41:13" pos:end="41:17">R_IVR</name></expr>]</index></name> <operator pos:start="41:20" pos:end="41:20">=</operator> <name pos:start="41:22" pos:end="41:22">i</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:72"><expr pos:start="43:5" pos:end="43:71"><call pos:start="43:5" pos:end="43:71"><name pos:start="43:5" pos:end="43:16">qemu_set_irq</name><argument_list pos:start="43:17" pos:end="43:71">(<argument pos:start="43:18" pos:end="43:30"><expr pos:start="43:18" pos:end="43:30"><name pos:start="43:18" pos:end="43:30"><name pos:start="43:18" pos:end="43:18">p</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:30">parent_irq</name></name></expr></argument>, <argument pos:start="43:33" pos:end="43:70"><expr pos:start="43:33" pos:end="43:70"><operator pos:start="43:33" pos:end="43:33">(</operator><name pos:start="43:34" pos:end="43:47"><name pos:start="43:34" pos:end="43:34">p</name><operator pos:start="43:35" pos:end="43:36">-&gt;</operator><name pos:start="43:37" pos:end="43:40">regs</name><index pos:start="43:41" pos:end="43:47">[<expr pos:start="43:42" pos:end="43:46"><name pos:start="43:42" pos:end="43:46">R_MER</name></expr>]</index></name> <operator pos:start="43:49" pos:end="43:49">&amp;</operator> <literal type="number" pos:start="43:51" pos:end="43:51">1</literal><operator pos:start="43:52" pos:end="43:52">)</operator> <operator pos:start="43:54" pos:end="43:55">&amp;&amp;</operator> <name pos:start="43:57" pos:end="43:70"><name pos:start="43:57" pos:end="43:57">p</name><operator pos:start="43:58" pos:end="43:59">-&gt;</operator><name pos:start="43:60" pos:end="43:63">regs</name><index pos:start="43:64" pos:end="43:70">[<expr pos:start="43:65" pos:end="43:69"><name pos:start="43:65" pos:end="43:69">R_IPR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
