<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22993.c" pos:tabs="8"><function pos:start="1:1" pos:end="263:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">new_video_stream</name><parameter_list pos:start="1:29" pos:end="1:63">(<parameter pos:start="1:30" pos:end="1:48"><decl pos:start="1:30" pos:end="1:48"><type pos:start="1:30" pos:end="1:48"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">oc</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:62"><decl pos:start="1:51" pos:end="1:62"><type pos:start="1:51" pos:end="1:62"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:62">file_idx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="263:1">{<block_content pos:start="5:5" pos:end="261:33">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">OutputStream</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">ost</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:29">video_enc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:8">enum</name> <name pos:start="11:10" pos:end="11:16">CodecID</name></name></type> <name pos:start="11:18" pos:end="11:25">codec_id</name> <init pos:start="11:27" pos:end="11:41">= <expr pos:start="11:29" pos:end="11:41"><name pos:start="11:29" pos:end="11:41">CODEC_ID_NONE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">AVCodec</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:18">codec</name><init pos:start="13:19" pos:end="13:24">= <expr pos:start="13:21" pos:end="13:24"><name pos:start="13:21" pos:end="13:24">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="35:5"><if pos:start="17:5" pos:end="35:5">if<condition pos:start="17:7" pos:end="17:26">(<expr pos:start="17:8" pos:end="17:25"><operator pos:start="17:8" pos:end="17:8">!</operator><name pos:start="17:9" pos:end="17:25">video_stream_copy</name></expr>)</condition><block pos:start="17:27" pos:end="35:5">{<block_content pos:start="19:9" pos:end="33:9">

        <if_stmt pos:start="19:9" pos:end="33:9"><if pos:start="19:9" pos:end="27:9">if <condition pos:start="19:12" pos:end="19:29">(<expr pos:start="19:13" pos:end="19:28"><name pos:start="19:13" pos:end="19:28">video_codec_name</name></expr>)</condition> <block pos:start="19:31" pos:end="27:9">{<block_content pos:start="21:13" pos:end="25:67">

            <expr_stmt pos:start="21:13" pos:end="23:98"><expr pos:start="21:13" pos:end="23:97"><name pos:start="21:13" pos:end="21:20">codec_id</name> <operator pos:start="21:22" pos:end="21:22">=</operator> <call pos:start="21:24" pos:end="23:97"><name pos:start="21:24" pos:end="21:40">find_codec_or_die</name><argument_list pos:start="21:41" pos:end="23:97">(<argument pos:start="21:42" pos:end="21:57"><expr pos:start="21:42" pos:end="21:57"><name pos:start="21:42" pos:end="21:57">video_codec_name</name></expr></argument>, <argument pos:start="21:60" pos:end="21:77"><expr pos:start="21:60" pos:end="21:77"><name pos:start="21:60" pos:end="21:77">AVMEDIA_TYPE_VIDEO</name></expr></argument>, <argument pos:start="21:80" pos:end="21:80"><expr pos:start="21:80" pos:end="21:80"><literal type="number" pos:start="21:80" pos:end="21:80">1</literal></expr></argument>,

                                         <argument pos:start="23:42" pos:end="23:96"><expr pos:start="23:42" pos:end="23:96"><name pos:start="23:42" pos:end="23:73"><name pos:start="23:42" pos:end="23:53">avcodec_opts</name><index pos:start="23:54" pos:end="23:73">[<expr pos:start="23:55" pos:end="23:72"><name pos:start="23:55" pos:end="23:72">AVMEDIA_TYPE_VIDEO</name></expr>]</index></name><operator pos:start="23:74" pos:end="23:75">-&gt;</operator><name pos:start="23:76" pos:end="23:96">strict_std_compliance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:67"><expr pos:start="25:13" pos:end="25:66"><name pos:start="25:13" pos:end="25:17">codec</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <call pos:start="25:21" pos:end="25:66"><name pos:start="25:21" pos:end="25:48">avcodec_find_encoder_by_name</name><argument_list pos:start="25:49" pos:end="25:66">(<argument pos:start="25:50" pos:end="25:65"><expr pos:start="25:50" pos:end="25:65"><name pos:start="25:50" pos:end="25:65">video_codec_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="27:11" pos:end="33:9">else <block pos:start="27:16" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:51">

            <expr_stmt pos:start="29:13" pos:end="29:97"><expr pos:start="29:13" pos:end="29:96"><name pos:start="29:13" pos:end="29:20">codec_id</name> <operator pos:start="29:22" pos:end="29:22">=</operator> <call pos:start="29:24" pos:end="29:96"><name pos:start="29:24" pos:end="29:37">av_guess_codec</name><argument_list pos:start="29:38" pos:end="29:96">(<argument pos:start="29:39" pos:end="29:49"><expr pos:start="29:39" pos:end="29:49"><name pos:start="29:39" pos:end="29:49"><name pos:start="29:39" pos:end="29:40">oc</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:49">oformat</name></name></expr></argument>, <argument pos:start="29:52" pos:end="29:55"><expr pos:start="29:52" pos:end="29:55"><name pos:start="29:52" pos:end="29:55">NULL</name></expr></argument>, <argument pos:start="29:58" pos:end="29:69"><expr pos:start="29:58" pos:end="29:69"><name pos:start="29:58" pos:end="29:69"><name pos:start="29:58" pos:end="29:59">oc</name><operator pos:start="29:60" pos:end="29:61">-&gt;</operator><name pos:start="29:62" pos:end="29:69">filename</name></name></expr></argument>, <argument pos:start="29:72" pos:end="29:75"><expr pos:start="29:72" pos:end="29:75"><name pos:start="29:72" pos:end="29:75">NULL</name></expr></argument>, <argument pos:start="29:78" pos:end="29:95"><expr pos:start="29:78" pos:end="29:95"><name pos:start="29:78" pos:end="29:95">AVMEDIA_TYPE_VIDEO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:51"><expr pos:start="31:13" pos:end="31:50"><name pos:start="31:13" pos:end="31:17">codec</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <call pos:start="31:21" pos:end="31:50"><name pos:start="31:21" pos:end="31:40">avcodec_find_encoder</name><argument_list pos:start="31:41" pos:end="31:50">(<argument pos:start="31:42" pos:end="31:49"><expr pos:start="31:42" pos:end="31:49"><name pos:start="31:42" pos:end="31:49">codec_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:49"><expr pos:start="39:5" pos:end="39:48"><name pos:start="39:5" pos:end="39:7">ost</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="39:48"><name pos:start="39:11" pos:end="39:27">new_output_stream</name><argument_list pos:start="39:28" pos:end="39:48">(<argument pos:start="39:29" pos:end="39:30"><expr pos:start="39:29" pos:end="39:30"><name pos:start="39:29" pos:end="39:30">oc</name></expr></argument>, <argument pos:start="39:33" pos:end="39:40"><expr pos:start="39:33" pos:end="39:40"><name pos:start="39:33" pos:end="39:40">file_idx</name></expr></argument>, <argument pos:start="39:43" pos:end="39:47"><expr pos:start="39:43" pos:end="39:47"><name pos:start="39:43" pos:end="39:47">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:18"><expr pos:start="41:5" pos:end="41:17"><name pos:start="41:5" pos:end="41:6">st</name>  <operator pos:start="41:9" pos:end="41:9">=</operator> <name pos:start="41:11" pos:end="41:17"><name pos:start="41:11" pos:end="41:13">ost</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:17">st</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="57:5"><if pos:start="43:5" pos:end="57:5">if <condition pos:start="43:8" pos:end="43:27">(<expr pos:start="43:9" pos:end="43:26"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:26">video_stream_copy</name></expr>)</condition> <block pos:start="43:29" pos:end="57:5">{<block_content pos:start="45:9" pos:end="56:0">

        <expr_stmt pos:start="45:9" pos:end="45:53"><expr pos:start="45:9" pos:end="45:52"><name pos:start="45:9" pos:end="45:31"><name pos:start="45:9" pos:end="45:11">ost</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:31">frame_aspect_ratio</name></name> <operator pos:start="45:33" pos:end="45:33">=</operator> <name pos:start="45:35" pos:end="45:52">frame_aspect_ratio</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="50:0"><expr pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:26">frame_aspect_ratio</name> <operator pos:start="47:28" pos:end="47:28">=</operator> <literal type="number" pos:start="47:30" pos:end="47:30">0</literal></expr>;</expr_stmt>

<cpp:if pos:start="49:1" pos:end="49:19">#<cpp:directive pos:start="49:2" pos:end="49:3">if</cpp:directive> <expr pos:start="49:5" pos:end="49:19"><name pos:start="49:5" pos:end="49:19">CONFIG_AVFILTER</name></expr></cpp:if>

        <expr_stmt pos:start="51:9" pos:end="51:32"><expr pos:start="51:9" pos:end="51:31"><name pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:11">ost</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:21">avfilter</name></name><operator pos:start="51:22" pos:end="51:22">=</operator> <name pos:start="51:24" pos:end="51:31">vfilters</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="56:0"><expr pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:16">vfilters</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:23">NULL</name></expr>;</expr_stmt>

<cpp:endif pos:start="55:1" pos:end="55:6">#<cpp:directive pos:start="55:2" pos:end="55:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:53"><expr pos:start="61:5" pos:end="61:52"><name pos:start="61:5" pos:end="61:26"><name pos:start="61:5" pos:end="61:7">ost</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:26">bitstream_filters</name></name> <operator pos:start="61:28" pos:end="61:28">=</operator> <name pos:start="61:30" pos:end="61:52">video_bitstream_filters</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:34"><expr pos:start="63:5" pos:end="63:33"><name pos:start="63:5" pos:end="63:27">video_bitstream_filters</name><operator pos:start="63:28" pos:end="63:28">=</operator> <name pos:start="63:30" pos:end="63:33">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:42"><expr pos:start="67:5" pos:end="67:41"><name pos:start="67:5" pos:end="67:27"><name pos:start="67:5" pos:end="67:6">st</name><operator pos:start="67:7" pos:end="67:8">-&gt;</operator><name pos:start="67:9" pos:end="67:13">codec</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:27">thread_count</name></name><operator pos:start="67:28" pos:end="67:28">=</operator> <name pos:start="67:30" pos:end="67:41">thread_count</name></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:26"><expr pos:start="71:5" pos:end="71:25"><name pos:start="71:5" pos:end="71:13">video_enc</name> <operator pos:start="71:15" pos:end="71:15">=</operator> <name pos:start="71:17" pos:end="71:25"><name pos:start="71:17" pos:end="71:18">st</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:25">codec</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="75:5" pos:end="77:46"><if pos:start="75:5" pos:end="77:46">if<condition pos:start="75:7" pos:end="75:23">(<expr pos:start="75:8" pos:end="75:22"><name pos:start="75:8" pos:end="75:22">video_codec_tag</name></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:46"><block_content pos:start="77:9" pos:end="77:46">

        <expr_stmt pos:start="77:9" pos:end="77:46"><expr pos:start="77:9" pos:end="77:45"><name pos:start="77:9" pos:end="77:28"><name pos:start="77:9" pos:end="77:17">video_enc</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:28">codec_tag</name></name><operator pos:start="77:29" pos:end="77:29">=</operator> <name pos:start="77:31" pos:end="77:45">video_codec_tag</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="85:5"><if pos:start="81:5" pos:end="85:5">if<condition pos:start="81:7" pos:end="81:47">(<expr pos:start="81:8" pos:end="81:46"><name pos:start="81:8" pos:end="81:25"><name pos:start="81:8" pos:end="81:9">oc</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:18">oformat</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:25">flags</name></name> <operator pos:start="81:27" pos:end="81:27">&amp;</operator> <name pos:start="81:29" pos:end="81:46">AVFMT_GLOBALHEADER</name></expr>)</condition> <block pos:start="81:49" pos:end="85:5">{<block_content pos:start="83:9" pos:end="83:53">

        <expr_stmt pos:start="83:9" pos:end="83:53"><expr pos:start="83:9" pos:end="83:52"><name pos:start="83:9" pos:end="83:24"><name pos:start="83:9" pos:end="83:17">video_enc</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:24">flags</name></name> <operator pos:start="83:26" pos:end="83:27">|=</operator> <name pos:start="83:29" pos:end="83:52">CODEC_FLAG_GLOBAL_HEADER</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="239:5"><if pos:start="89:5" pos:end="99:5">if <condition pos:start="89:8" pos:end="89:26">(<expr pos:start="89:9" pos:end="89:25"><name pos:start="89:9" pos:end="89:25">video_stream_copy</name></expr>)</condition> <block pos:start="89:28" pos:end="99:5">{<block_content pos:start="91:9" pos:end="97:91">

        <expr_stmt pos:start="91:9" pos:end="91:28"><expr pos:start="91:9" pos:end="91:27"><name pos:start="91:9" pos:end="91:23"><name pos:start="91:9" pos:end="91:10">st</name><operator pos:start="91:11" pos:end="91:12">-&gt;</operator><name pos:start="91:13" pos:end="91:23">stream_copy</name></name> <operator pos:start="91:25" pos:end="91:25">=</operator> <literal type="number" pos:start="91:27" pos:end="91:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:51"><expr pos:start="93:9" pos:end="93:50"><name pos:start="93:9" pos:end="93:29"><name pos:start="93:9" pos:end="93:17">video_enc</name><operator pos:start="93:18" pos:end="93:19">-&gt;</operator><name pos:start="93:20" pos:end="93:29">codec_type</name></name> <operator pos:start="93:31" pos:end="93:31">=</operator> <name pos:start="93:33" pos:end="93:50">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="97:91"><expr pos:start="95:9" pos:end="97:90"><name pos:start="95:9" pos:end="95:38"><name pos:start="95:9" pos:end="95:17">video_enc</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:38">sample_aspect_ratio</name></name> <operator pos:start="95:40" pos:end="95:40">=</operator>

        <name pos:start="97:9" pos:end="97:31"><name pos:start="97:9" pos:end="97:10">st</name><operator pos:start="97:11" pos:end="97:12">-&gt;</operator><name pos:start="97:13" pos:end="97:31">sample_aspect_ratio</name></name> <operator pos:start="97:33" pos:end="97:33">=</operator> <call pos:start="97:35" pos:end="97:90"><name pos:start="97:35" pos:end="97:40">av_d2q</name><argument_list pos:start="97:41" pos:end="97:90">(<argument pos:start="97:42" pos:end="97:84"><expr pos:start="97:42" pos:end="97:84"><name pos:start="97:42" pos:end="97:59">frame_aspect_ratio</name><operator pos:start="97:60" pos:end="97:60">*</operator><name pos:start="97:61" pos:end="97:72">frame_height</name><operator pos:start="97:73" pos:end="97:73">/</operator><name pos:start="97:74" pos:end="97:84">frame_width</name></expr></argument>, <argument pos:start="97:87" pos:end="97:89"><expr pos:start="97:87" pos:end="97:89"><literal type="number" pos:start="97:87" pos:end="97:89">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="99:7" pos:end="239:5">else <block pos:start="99:12" pos:end="239:5">{<block_content pos:start="101:9" pos:end="237:71">

        <decl_stmt pos:start="101:9" pos:end="101:22"><decl pos:start="101:9" pos:end="101:21"><type pos:start="101:9" pos:end="101:20"><specifier pos:start="101:9" pos:end="101:13">const</specifier> <name pos:start="101:15" pos:end="101:18">char</name> <modifier pos:start="101:20" pos:end="101:20">*</modifier></type><name pos:start="101:21" pos:end="101:21">p</name></decl>;</decl_stmt>

        <decl_stmt pos:start="103:9" pos:end="103:14"><decl pos:start="103:9" pos:end="103:13"><type pos:start="103:9" pos:end="103:11"><name pos:start="103:9" pos:end="103:11">int</name></type> <name pos:start="103:13" pos:end="103:13">i</name></decl>;</decl_stmt>



        <if_stmt pos:start="107:9" pos:end="109:41"><if pos:start="107:9" pos:end="109:41">if <condition pos:start="107:12" pos:end="107:27">(<expr pos:start="107:13" pos:end="107:26"><name pos:start="107:13" pos:end="107:26"><name pos:start="107:13" pos:end="107:22">frame_rate</name><operator pos:start="107:23" pos:end="107:23">.</operator><name pos:start="107:24" pos:end="107:26">num</name></name></expr>)</condition><block type="pseudo" pos:start="109:13" pos:end="109:41"><block_content pos:start="109:13" pos:end="109:41">

            <expr_stmt pos:start="109:13" pos:end="109:41"><expr pos:start="109:13" pos:end="109:40"><name pos:start="109:13" pos:end="109:27"><name pos:start="109:13" pos:end="109:15">ost</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:27">frame_rate</name></name> <operator pos:start="109:29" pos:end="109:29">=</operator> <name pos:start="109:31" pos:end="109:40">frame_rate</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:39"><expr pos:start="111:9" pos:end="111:38"><name pos:start="111:9" pos:end="111:27"><name pos:start="111:9" pos:end="111:17">video_enc</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:27">codec_id</name></name> <operator pos:start="111:29" pos:end="111:29">=</operator> <name pos:start="111:31" pos:end="111:38">codec_id</name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:131"><expr pos:start="113:9" pos:end="113:130"><call pos:start="113:9" pos:end="113:130"><name pos:start="113:9" pos:end="113:24">set_context_opts</name><argument_list pos:start="113:25" pos:end="113:130">(<argument pos:start="113:26" pos:end="113:34"><expr pos:start="113:26" pos:end="113:34"><name pos:start="113:26" pos:end="113:34">video_enc</name></expr></argument>, <argument pos:start="113:37" pos:end="113:68"><expr pos:start="113:37" pos:end="113:68"><name pos:start="113:37" pos:end="113:68"><name pos:start="113:37" pos:end="113:48">avcodec_opts</name><index pos:start="113:49" pos:end="113:68">[<expr pos:start="113:50" pos:end="113:67"><name pos:start="113:50" pos:end="113:67">AVMEDIA_TYPE_VIDEO</name></expr>]</index></name></expr></argument>, <argument pos:start="113:71" pos:end="113:122"><expr pos:start="113:71" pos:end="113:122"><name pos:start="113:71" pos:end="113:93">AV_OPT_FLAG_VIDEO_PARAM</name> <operator pos:start="113:95" pos:end="113:95">|</operator> <name pos:start="113:97" pos:end="113:122">AV_OPT_FLAG_ENCODING_PARAM</name></expr></argument>, <argument pos:start="113:125" pos:end="113:129"><expr pos:start="113:125" pos:end="113:129"><name pos:start="113:125" pos:end="113:129">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="117:9" pos:end="117:39"><expr pos:start="117:9" pos:end="117:38"><name pos:start="117:9" pos:end="117:24"><name pos:start="117:9" pos:end="117:17">video_enc</name><operator pos:start="117:18" pos:end="117:19">-&gt;</operator><name pos:start="117:20" pos:end="117:24">width</name></name> <operator pos:start="117:26" pos:end="117:26">=</operator> <name pos:start="117:28" pos:end="117:38">frame_width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:41"><expr pos:start="119:9" pos:end="119:40"><name pos:start="119:9" pos:end="119:25"><name pos:start="119:9" pos:end="119:17">video_enc</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:25">height</name></name> <operator pos:start="119:27" pos:end="119:27">=</operator> <name pos:start="119:29" pos:end="119:40">frame_height</name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:43"><expr pos:start="121:9" pos:end="121:42"><name pos:start="121:9" pos:end="121:26"><name pos:start="121:9" pos:end="121:17">video_enc</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:26">pix_fmt</name></name> <operator pos:start="121:28" pos:end="121:28">=</operator> <name pos:start="121:30" pos:end="121:42">frame_pix_fmt</name></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:65"><expr pos:start="123:9" pos:end="123:64"><name pos:start="123:9" pos:end="123:31"><name pos:start="123:9" pos:end="123:10">st</name><operator pos:start="123:11" pos:end="123:12">-&gt;</operator><name pos:start="123:13" pos:end="123:31">sample_aspect_ratio</name></name> <operator pos:start="123:33" pos:end="123:33">=</operator> <name pos:start="123:35" pos:end="123:64"><name pos:start="123:35" pos:end="123:43">video_enc</name><operator pos:start="123:44" pos:end="123:45">-&gt;</operator><name pos:start="123:46" pos:end="123:64">sample_aspect_ratio</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="127:9" pos:end="129:36"><if pos:start="127:9" pos:end="129:36">if <condition pos:start="127:12" pos:end="127:23">(<expr pos:start="127:13" pos:end="127:22"><name pos:start="127:13" pos:end="127:22">intra_only</name></expr>)</condition><block type="pseudo" pos:start="129:13" pos:end="129:36"><block_content pos:start="129:13" pos:end="129:36">

            <expr_stmt pos:start="129:13" pos:end="129:36"><expr pos:start="129:13" pos:end="129:35"><name pos:start="129:13" pos:end="129:31"><name pos:start="129:13" pos:end="129:21">video_enc</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:31">gop_size</name></name> <operator pos:start="129:33" pos:end="129:33">=</operator> <literal type="number" pos:start="129:35" pos:end="129:35">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="131:9" pos:end="137:9"><if pos:start="131:9" pos:end="137:9">if <condition pos:start="131:12" pos:end="131:41">(<expr pos:start="131:13" pos:end="131:40"><name pos:start="131:13" pos:end="131:24">video_qscale</name> <operator pos:start="131:26" pos:end="131:27">||</operator> <name pos:start="131:29" pos:end="131:40">same_quality</name></expr>)</condition> <block pos:start="131:43" pos:end="137:9">{<block_content pos:start="133:13" pos:end="135:68">

            <expr_stmt pos:start="133:13" pos:end="133:50"><expr pos:start="133:13" pos:end="133:49"><name pos:start="133:13" pos:end="133:28"><name pos:start="133:13" pos:end="133:21">video_enc</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:28">flags</name></name> <operator pos:start="133:30" pos:end="133:31">|=</operator> <name pos:start="133:33" pos:end="133:49">CODEC_FLAG_QSCALE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:68"><expr pos:start="135:13" pos:end="135:67"><name pos:start="135:13" pos:end="135:37"><name pos:start="135:13" pos:end="135:21">video_enc</name><operator pos:start="135:22" pos:end="135:23">-&gt;</operator><name pos:start="135:24" pos:end="135:37">global_quality</name></name> <operator pos:start="135:39" pos:end="135:39">=</operator> <name pos:start="135:41" pos:end="135:52">FF_QP2LAMBDA</name> <operator pos:start="135:54" pos:end="135:54">*</operator> <name pos:start="135:56" pos:end="135:67">video_qscale</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="141:9" pos:end="143:51"><if pos:start="141:9" pos:end="143:51">if<condition pos:start="141:11" pos:end="141:24">(<expr pos:start="141:12" pos:end="141:23"><name pos:start="141:12" pos:end="141:23">intra_matrix</name></expr>)</condition><block type="pseudo" pos:start="143:13" pos:end="143:51"><block_content pos:start="143:13" pos:end="143:51">

            <expr_stmt pos:start="143:13" pos:end="143:51"><expr pos:start="143:13" pos:end="143:50"><name pos:start="143:13" pos:end="143:35"><name pos:start="143:13" pos:end="143:21">video_enc</name><operator pos:start="143:22" pos:end="143:23">-&gt;</operator><name pos:start="143:24" pos:end="143:35">intra_matrix</name></name> <operator pos:start="143:37" pos:end="143:37">=</operator> <name pos:start="143:39" pos:end="143:50">intra_matrix</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="145:9" pos:end="147:51"><if pos:start="145:9" pos:end="147:51">if<condition pos:start="145:11" pos:end="145:24">(<expr pos:start="145:12" pos:end="145:23"><name pos:start="145:12" pos:end="145:23">inter_matrix</name></expr>)</condition><block type="pseudo" pos:start="147:13" pos:end="147:51"><block_content pos:start="147:13" pos:end="147:51">

            <expr_stmt pos:start="147:13" pos:end="147:51"><expr pos:start="147:13" pos:end="147:50"><name pos:start="147:13" pos:end="147:35"><name pos:start="147:13" pos:end="147:21">video_enc</name><operator pos:start="147:22" pos:end="147:23">-&gt;</operator><name pos:start="147:24" pos:end="147:35">inter_matrix</name></name> <operator pos:start="147:37" pos:end="147:37">=</operator> <name pos:start="147:39" pos:end="147:50">inter_matrix</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="151:9" pos:end="151:36"><expr pos:start="151:9" pos:end="151:35"><name pos:start="151:9" pos:end="151:9">p</name><operator pos:start="151:10" pos:end="151:10">=</operator> <name pos:start="151:12" pos:end="151:35">video_rc_override_string</name></expr>;</expr_stmt>

        <for pos:start="153:9" pos:end="197:9">for<control pos:start="153:12" pos:end="153:24">(<init pos:start="153:13" pos:end="153:16"><expr pos:start="153:13" pos:end="153:15"><name pos:start="153:13" pos:end="153:13">i</name><operator pos:start="153:14" pos:end="153:14">=</operator><literal type="number" pos:start="153:15" pos:end="153:15">0</literal></expr>;</init> <condition pos:start="153:18" pos:end="153:19"><expr pos:start="153:18" pos:end="153:18"><name pos:start="153:18" pos:end="153:18">p</name></expr>;</condition> <incr pos:start="153:21" pos:end="153:23"><expr pos:start="153:21" pos:end="153:23"><name pos:start="153:21" pos:end="153:21">i</name><operator pos:start="153:22" pos:end="153:23">++</operator></expr></incr>)</control><block pos:start="153:25" pos:end="197:9">{<block_content pos:start="155:13" pos:end="195:22">

            <decl_stmt pos:start="155:13" pos:end="155:30"><decl pos:start="155:13" pos:end="155:21"><type pos:start="155:13" pos:end="155:15"><name pos:start="155:13" pos:end="155:15">int</name></type> <name pos:start="155:17" pos:end="155:21">start</name></decl>, <decl pos:start="155:24" pos:end="155:26"><type ref="prev" pos:start="155:13" pos:end="155:15"/><name pos:start="155:24" pos:end="155:26">end</name></decl>, <decl pos:start="155:29" pos:end="155:29"><type ref="prev" pos:start="155:13" pos:end="155:15"/><name pos:start="155:29" pos:end="155:29">q</name></decl>;</decl_stmt>

            <decl_stmt pos:start="157:13" pos:end="157:58"><decl pos:start="157:13" pos:end="157:57"><type pos:start="157:13" pos:end="157:15"><name pos:start="157:13" pos:end="157:15">int</name></type> <name pos:start="157:17" pos:end="157:17">e</name><init pos:start="157:18" pos:end="157:57">=<expr pos:start="157:19" pos:end="157:57"><call pos:start="157:19" pos:end="157:57"><name pos:start="157:19" pos:end="157:24">sscanf</name><argument_list pos:start="157:25" pos:end="157:57">(<argument pos:start="157:26" pos:end="157:26"><expr pos:start="157:26" pos:end="157:26"><name pos:start="157:26" pos:end="157:26">p</name></expr></argument>, <argument pos:start="157:29" pos:end="157:38"><expr pos:start="157:29" pos:end="157:38"><literal type="string" pos:start="157:29" pos:end="157:38">"%d,%d,%d"</literal></expr></argument>, <argument pos:start="157:41" pos:end="157:46"><expr pos:start="157:41" pos:end="157:46"><operator pos:start="157:41" pos:end="157:41">&amp;</operator><name pos:start="157:42" pos:end="157:46">start</name></expr></argument>, <argument pos:start="157:49" pos:end="157:52"><expr pos:start="157:49" pos:end="157:52"><operator pos:start="157:49" pos:end="157:49">&amp;</operator><name pos:start="157:50" pos:end="157:52">end</name></expr></argument>, <argument pos:start="157:55" pos:end="157:56"><expr pos:start="157:55" pos:end="157:56"><operator pos:start="157:55" pos:end="157:55">&amp;</operator><name pos:start="157:56" pos:end="157:56">q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="159:13" pos:end="165:13"><if pos:start="159:13" pos:end="165:13">if<condition pos:start="159:15" pos:end="159:20">(<expr pos:start="159:16" pos:end="159:19"><name pos:start="159:16" pos:end="159:16">e</name><operator pos:start="159:17" pos:end="159:18">!=</operator><literal type="number" pos:start="159:19" pos:end="159:19">3</literal></expr>)</condition><block pos:start="159:21" pos:end="165:13">{<block_content pos:start="161:17" pos:end="163:31">

                <expr_stmt pos:start="161:17" pos:end="161:63"><expr pos:start="161:17" pos:end="161:62"><call pos:start="161:17" pos:end="161:62"><name pos:start="161:17" pos:end="161:23">fprintf</name><argument_list pos:start="161:24" pos:end="161:62">(<argument pos:start="161:25" pos:end="161:30"><expr pos:start="161:25" pos:end="161:30"><name pos:start="161:25" pos:end="161:30">stderr</name></expr></argument>, <argument pos:start="161:33" pos:end="161:61"><expr pos:start="161:33" pos:end="161:61"><literal type="string" pos:start="161:33" pos:end="161:61">"error parsing rc_override\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:31"><expr pos:start="163:17" pos:end="163:30"><call pos:start="163:17" pos:end="163:30"><name pos:start="163:17" pos:end="163:27">ffmpeg_exit</name><argument_list pos:start="163:28" pos:end="163:30">(<argument pos:start="163:29" pos:end="163:29"><expr pos:start="163:29" pos:end="163:29"><literal type="number" pos:start="163:29" pos:end="163:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="167:13" pos:end="171:53"><expr pos:start="167:13" pos:end="171:52"><name pos:start="167:13" pos:end="167:34"><name pos:start="167:13" pos:end="167:21">video_enc</name><operator pos:start="167:22" pos:end="167:23">-&gt;</operator><name pos:start="167:24" pos:end="167:34">rc_override</name></name><operator pos:start="167:35" pos:end="167:35">=</operator>

                <call pos:start="169:17" pos:end="171:52"><name pos:start="169:17" pos:end="169:26">av_realloc</name><argument_list pos:start="169:27" pos:end="171:52">(<argument pos:start="169:28" pos:end="169:49"><expr pos:start="169:28" pos:end="169:49"><name pos:start="169:28" pos:end="169:49"><name pos:start="169:28" pos:end="169:36">video_enc</name><operator pos:start="169:37" pos:end="169:38">-&gt;</operator><name pos:start="169:39" pos:end="169:49">rc_override</name></name></expr></argument>,

                           <argument pos:start="171:28" pos:end="171:51"><expr pos:start="171:28" pos:end="171:51"><sizeof pos:start="171:28" pos:end="171:45">sizeof<argument_list pos:start="171:34" pos:end="171:45">(<argument pos:start="171:35" pos:end="171:44"><expr pos:start="171:35" pos:end="171:44"><name pos:start="171:35" pos:end="171:44">RcOverride</name></expr></argument>)</argument_list></sizeof><operator pos:start="171:46" pos:end="171:46">*</operator><operator pos:start="171:47" pos:end="171:47">(</operator><name pos:start="171:48" pos:end="171:48">i</name><operator pos:start="171:49" pos:end="171:49">+</operator><literal type="number" pos:start="171:50" pos:end="171:50">1</literal><operator pos:start="171:51" pos:end="171:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:57"><expr pos:start="173:13" pos:end="173:56"><name pos:start="173:13" pos:end="173:37"><name pos:start="173:13" pos:end="173:21">video_enc</name><operator pos:start="173:22" pos:end="173:23">-&gt;</operator><name pos:start="173:24" pos:end="173:34">rc_override</name><index pos:start="173:35" pos:end="173:37">[<expr pos:start="173:36" pos:end="173:36"><name pos:start="173:36" pos:end="173:36">i</name></expr>]</index></name><operator pos:start="173:38" pos:end="173:38">.</operator><name pos:start="173:39" pos:end="173:49">start_frame</name><operator pos:start="173:50" pos:end="173:50">=</operator> <name pos:start="173:52" pos:end="173:56">start</name></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:55"><expr pos:start="175:13" pos:end="175:54"><name pos:start="175:13" pos:end="175:37"><name pos:start="175:13" pos:end="175:21">video_enc</name><operator pos:start="175:22" pos:end="175:23">-&gt;</operator><name pos:start="175:24" pos:end="175:34">rc_override</name><index pos:start="175:35" pos:end="175:37">[<expr pos:start="175:36" pos:end="175:36"><name pos:start="175:36" pos:end="175:36">i</name></expr>]</index></name><operator pos:start="175:38" pos:end="175:38">.</operator><name pos:start="175:39" pos:end="175:47">end_frame</name>  <operator pos:start="175:50" pos:end="175:50">=</operator> <name pos:start="175:52" pos:end="175:54">end</name></expr>;</expr_stmt>

            <if_stmt pos:start="177:13" pos:end="191:13"><if pos:start="177:13" pos:end="183:13">if<condition pos:start="177:15" pos:end="177:19">(<expr pos:start="177:16" pos:end="177:18"><name pos:start="177:16" pos:end="177:16">q</name><operator pos:start="177:17" pos:end="177:17">&gt;</operator><literal type="number" pos:start="177:18" pos:end="177:18">0</literal></expr>)</condition><block pos:start="177:20" pos:end="183:13">{<block_content pos:start="179:17" pos:end="181:62">

                <expr_stmt pos:start="179:17" pos:end="179:52"><expr pos:start="179:17" pos:end="179:51"><name pos:start="179:17" pos:end="179:41"><name pos:start="179:17" pos:end="179:25">video_enc</name><operator pos:start="179:26" pos:end="179:27">-&gt;</operator><name pos:start="179:28" pos:end="179:38">rc_override</name><index pos:start="179:39" pos:end="179:41">[<expr pos:start="179:40" pos:end="179:40"><name pos:start="179:40" pos:end="179:40">i</name></expr>]</index></name><operator pos:start="179:42" pos:end="179:42">.</operator><name pos:start="179:43" pos:end="179:48">qscale</name><operator pos:start="179:49" pos:end="179:49">=</operator> <name pos:start="179:51" pos:end="179:51">q</name></expr>;</expr_stmt>

                <expr_stmt pos:start="181:17" pos:end="181:62"><expr pos:start="181:17" pos:end="181:61"><name pos:start="181:17" pos:end="181:41"><name pos:start="181:17" pos:end="181:25">video_enc</name><operator pos:start="181:26" pos:end="181:27">-&gt;</operator><name pos:start="181:28" pos:end="181:38">rc_override</name><index pos:start="181:39" pos:end="181:41">[<expr pos:start="181:40" pos:end="181:40"><name pos:start="181:40" pos:end="181:40">i</name></expr>]</index></name><operator pos:start="181:42" pos:end="181:42">.</operator><name pos:start="181:43" pos:end="181:56">quality_factor</name><operator pos:start="181:57" pos:end="181:57">=</operator> <literal type="number" pos:start="181:59" pos:end="181:61">1.0</literal></expr>;</expr_stmt>

            </block_content>}</block></if>

            <else pos:start="185:13" pos:end="191:13">else<block pos:start="185:17" pos:end="191:13">{<block_content pos:start="187:17" pos:end="189:67">

                <expr_stmt pos:start="187:17" pos:end="187:52"><expr pos:start="187:17" pos:end="187:51"><name pos:start="187:17" pos:end="187:41"><name pos:start="187:17" pos:end="187:25">video_enc</name><operator pos:start="187:26" pos:end="187:27">-&gt;</operator><name pos:start="187:28" pos:end="187:38">rc_override</name><index pos:start="187:39" pos:end="187:41">[<expr pos:start="187:40" pos:end="187:40"><name pos:start="187:40" pos:end="187:40">i</name></expr>]</index></name><operator pos:start="187:42" pos:end="187:42">.</operator><name pos:start="187:43" pos:end="187:48">qscale</name><operator pos:start="187:49" pos:end="187:49">=</operator> <literal type="number" pos:start="187:51" pos:end="187:51">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="189:17" pos:end="189:67"><expr pos:start="189:17" pos:end="189:66"><name pos:start="189:17" pos:end="189:41"><name pos:start="189:17" pos:end="189:25">video_enc</name><operator pos:start="189:26" pos:end="189:27">-&gt;</operator><name pos:start="189:28" pos:end="189:38">rc_override</name><index pos:start="189:39" pos:end="189:41">[<expr pos:start="189:40" pos:end="189:40"><name pos:start="189:40" pos:end="189:40">i</name></expr>]</index></name><operator pos:start="189:42" pos:end="189:42">.</operator><name pos:start="189:43" pos:end="189:56">quality_factor</name><operator pos:start="189:57" pos:end="189:57">=</operator> <operator pos:start="189:59" pos:end="189:59">-</operator><name pos:start="189:60" pos:end="189:60">q</name><operator pos:start="189:61" pos:end="189:61">/</operator><literal type="number" pos:start="189:62" pos:end="189:66">100.0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:30"><expr pos:start="193:13" pos:end="193:29"><name pos:start="193:13" pos:end="193:13">p</name><operator pos:start="193:14" pos:end="193:14">=</operator> <call pos:start="193:16" pos:end="193:29"><name pos:start="193:16" pos:end="193:21">strchr</name><argument_list pos:start="193:22" pos:end="193:29">(<argument pos:start="193:23" pos:end="193:23"><expr pos:start="193:23" pos:end="193:23"><name pos:start="193:23" pos:end="193:23">p</name></expr></argument>, <argument pos:start="193:26" pos:end="193:28"><expr pos:start="193:26" pos:end="193:28"><literal type="char" pos:start="193:26" pos:end="193:28">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="195:13" pos:end="195:22"><if pos:start="195:13" pos:end="195:22">if<condition pos:start="195:15" pos:end="195:17">(<expr pos:start="195:16" pos:end="195:16"><name pos:start="195:16" pos:end="195:16">p</name></expr>)</condition><block type="pseudo" pos:start="195:19" pos:end="195:22"><block_content pos:start="195:19" pos:end="195:22"> <expr_stmt pos:start="195:19" pos:end="195:22"><expr pos:start="195:19" pos:end="195:21"><name pos:start="195:19" pos:end="195:19">p</name><operator pos:start="195:20" pos:end="195:21">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="199:9" pos:end="199:39"><expr pos:start="199:9" pos:end="199:38"><name pos:start="199:9" pos:end="199:36"><name pos:start="199:9" pos:end="199:17">video_enc</name><operator pos:start="199:18" pos:end="199:19">-&gt;</operator><name pos:start="199:20" pos:end="199:36">rc_override_count</name></name><operator pos:start="199:37" pos:end="199:37">=</operator><name pos:start="199:38" pos:end="199:38">i</name></expr>;</expr_stmt>

        <if_stmt pos:start="201:9" pos:end="203:83"><if pos:start="201:9" pos:end="203:83">if <condition pos:start="201:12" pos:end="201:52">(<expr pos:start="201:13" pos:end="201:51"><operator pos:start="201:13" pos:end="201:13">!</operator><name pos:start="201:14" pos:end="201:51"><name pos:start="201:14" pos:end="201:22">video_enc</name><operator pos:start="201:23" pos:end="201:24">-&gt;</operator><name pos:start="201:25" pos:end="201:51">rc_initial_buffer_occupancy</name></name></expr>)</condition><block type="pseudo" pos:start="203:13" pos:end="203:83"><block_content pos:start="203:13" pos:end="203:83">

            <expr_stmt pos:start="203:13" pos:end="203:83"><expr pos:start="203:13" pos:end="203:82"><name pos:start="203:13" pos:end="203:50"><name pos:start="203:13" pos:end="203:21">video_enc</name><operator pos:start="203:22" pos:end="203:23">-&gt;</operator><name pos:start="203:24" pos:end="203:50">rc_initial_buffer_occupancy</name></name> <operator pos:start="203:52" pos:end="203:52">=</operator> <name pos:start="203:54" pos:end="203:78"><name pos:start="203:54" pos:end="203:62">video_enc</name><operator pos:start="203:63" pos:end="203:64">-&gt;</operator><name pos:start="203:65" pos:end="203:78">rc_buffer_size</name></name><operator pos:start="203:79" pos:end="203:79">*</operator><literal type="number" pos:start="203:80" pos:end="203:80">3</literal><operator pos:start="203:81" pos:end="203:81">/</operator><literal type="number" pos:start="203:82" pos:end="203:82">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:46"><expr pos:start="205:9" pos:end="205:45"><name pos:start="205:9" pos:end="205:31"><name pos:start="205:9" pos:end="205:17">video_enc</name><operator pos:start="205:18" pos:end="205:19">-&gt;</operator><name pos:start="205:20" pos:end="205:31">me_threshold</name></name><operator pos:start="205:32" pos:end="205:32">=</operator> <name pos:start="205:34" pos:end="205:45">me_threshold</name></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:62"><expr pos:start="207:9" pos:end="207:61"><name pos:start="207:9" pos:end="207:37"><name pos:start="207:9" pos:end="207:17">video_enc</name><operator pos:start="207:18" pos:end="207:19">-&gt;</operator><name pos:start="207:20" pos:end="207:37">intra_dc_precision</name></name><operator pos:start="207:38" pos:end="207:38">=</operator> <name pos:start="207:40" pos:end="207:57">intra_dc_precision</name> <operator pos:start="207:59" pos:end="207:59">-</operator> <literal type="number" pos:start="207:61" pos:end="207:61">8</literal></expr>;</expr_stmt>



        <if_stmt pos:start="211:9" pos:end="213:47"><if pos:start="211:9" pos:end="213:47">if <condition pos:start="211:12" pos:end="211:20">(<expr pos:start="211:13" pos:end="211:19"><name pos:start="211:13" pos:end="211:19">do_psnr</name></expr>)</condition><block type="pseudo" pos:start="213:13" pos:end="213:47"><block_content pos:start="213:13" pos:end="213:47">

            <expr_stmt pos:start="213:13" pos:end="213:47"><expr pos:start="213:13" pos:end="213:46"><name pos:start="213:13" pos:end="213:28"><name pos:start="213:13" pos:end="213:21">video_enc</name><operator pos:start="213:22" pos:end="213:23">-&gt;</operator><name pos:start="213:24" pos:end="213:28">flags</name></name><operator pos:start="213:29" pos:end="213:30">|=</operator> <name pos:start="213:32" pos:end="213:46">CODEC_FLAG_PSNR</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="217:9" pos:end="217:27">/* two pass mode */</comment>

        <if_stmt pos:start="219:9" pos:end="231:9"><if pos:start="219:9" pos:end="231:9">if <condition pos:start="219:12" pos:end="219:20">(<expr pos:start="219:13" pos:end="219:19"><name pos:start="219:13" pos:end="219:19">do_pass</name></expr>)</condition> <block pos:start="219:22" pos:end="231:9">{<block_content pos:start="221:13" pos:end="229:13">

            <if_stmt pos:start="221:13" pos:end="229:13"><if pos:start="221:13" pos:end="225:13">if <condition pos:start="221:16" pos:end="221:29">(<expr pos:start="221:17" pos:end="221:28"><name pos:start="221:17" pos:end="221:23">do_pass</name> <operator pos:start="221:25" pos:end="221:26">==</operator> <literal type="number" pos:start="221:28" pos:end="221:28">1</literal></expr>)</condition> <block pos:start="221:31" pos:end="225:13">{<block_content pos:start="223:17" pos:end="223:53">

                <expr_stmt pos:start="223:17" pos:end="223:53"><expr pos:start="223:17" pos:end="223:52"><name pos:start="223:17" pos:end="223:32"><name pos:start="223:17" pos:end="223:25">video_enc</name><operator pos:start="223:26" pos:end="223:27">-&gt;</operator><name pos:start="223:28" pos:end="223:32">flags</name></name> <operator pos:start="223:34" pos:end="223:35">|=</operator> <name pos:start="223:37" pos:end="223:52">CODEC_FLAG_PASS1</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="225:15" pos:end="229:13">else <block pos:start="225:20" pos:end="229:13">{<block_content pos:start="227:17" pos:end="227:53">

                <expr_stmt pos:start="227:17" pos:end="227:53"><expr pos:start="227:17" pos:end="227:52"><name pos:start="227:17" pos:end="227:32"><name pos:start="227:17" pos:end="227:25">video_enc</name><operator pos:start="227:26" pos:end="227:27">-&gt;</operator><name pos:start="227:28" pos:end="227:32">flags</name></name> <operator pos:start="227:34" pos:end="227:35">|=</operator> <name pos:start="227:37" pos:end="227:52">CODEC_FLAG_PASS2</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="235:9" pos:end="237:71"><if pos:start="235:9" pos:end="237:71">if <condition pos:start="235:12" pos:end="235:30">(<expr pos:start="235:13" pos:end="235:29"><name pos:start="235:13" pos:end="235:29">forced_key_frames</name></expr>)</condition><block type="pseudo" pos:start="237:13" pos:end="237:71"><block_content pos:start="237:13" pos:end="237:71">

            <expr_stmt pos:start="237:13" pos:end="237:71"><expr pos:start="237:13" pos:end="237:70"><call pos:start="237:13" pos:end="237:70"><name pos:start="237:13" pos:end="237:35">parse_forced_key_frames</name><argument_list pos:start="237:36" pos:end="237:70">(<argument pos:start="237:37" pos:end="237:53"><expr pos:start="237:37" pos:end="237:53"><name pos:start="237:37" pos:end="237:53">forced_key_frames</name></expr></argument>, <argument pos:start="237:56" pos:end="237:58"><expr pos:start="237:56" pos:end="237:58"><name pos:start="237:56" pos:end="237:58">ost</name></expr></argument>, <argument pos:start="237:61" pos:end="237:69"><expr pos:start="237:61" pos:end="237:69"><name pos:start="237:61" pos:end="237:69">video_enc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="241:5" pos:end="247:5"><if pos:start="241:5" pos:end="247:5">if <condition pos:start="241:8" pos:end="241:23">(<expr pos:start="241:9" pos:end="241:22"><name pos:start="241:9" pos:end="241:22">video_language</name></expr>)</condition> <block pos:start="241:25" pos:end="247:5">{<block_content pos:start="243:9" pos:end="245:34">

        <expr_stmt pos:start="243:9" pos:end="243:66"><expr pos:start="243:9" pos:end="243:65"><call pos:start="243:9" pos:end="243:65"><name pos:start="243:9" pos:end="243:19">av_dict_set</name><argument_list pos:start="243:20" pos:end="243:65">(<argument pos:start="243:21" pos:end="243:33"><expr pos:start="243:21" pos:end="243:33"><operator pos:start="243:21" pos:end="243:21">&amp;</operator><name pos:start="243:22" pos:end="243:33"><name pos:start="243:22" pos:end="243:23">st</name><operator pos:start="243:24" pos:end="243:25">-&gt;</operator><name pos:start="243:26" pos:end="243:33">metadata</name></name></expr></argument>, <argument pos:start="243:36" pos:end="243:45"><expr pos:start="243:36" pos:end="243:45"><literal type="string" pos:start="243:36" pos:end="243:45">"language"</literal></expr></argument>, <argument pos:start="243:48" pos:end="243:61"><expr pos:start="243:48" pos:end="243:61"><name pos:start="243:48" pos:end="243:61">video_language</name></expr></argument>, <argument pos:start="243:64" pos:end="243:64"><expr pos:start="243:64" pos:end="243:64"><literal type="number" pos:start="243:64" pos:end="243:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:34"><expr pos:start="245:9" pos:end="245:33"><call pos:start="245:9" pos:end="245:33"><name pos:start="245:9" pos:end="245:16">av_freep</name><argument_list pos:start="245:17" pos:end="245:33">(<argument pos:start="245:18" pos:end="245:32"><expr pos:start="245:18" pos:end="245:32"><operator pos:start="245:18" pos:end="245:18">&amp;</operator><name pos:start="245:19" pos:end="245:32">video_language</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="251:5" pos:end="251:35">/* reset some key parameters */</comment>

    <expr_stmt pos:start="253:5" pos:end="253:22"><expr pos:start="253:5" pos:end="253:21"><name pos:start="253:5" pos:end="253:17">video_disable</name> <operator pos:start="253:19" pos:end="253:19">=</operator> <literal type="number" pos:start="253:21" pos:end="253:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="255:5" pos:end="255:32"><expr pos:start="255:5" pos:end="255:31"><call pos:start="255:5" pos:end="255:31"><name pos:start="255:5" pos:end="255:12">av_freep</name><argument_list pos:start="255:13" pos:end="255:31">(<argument pos:start="255:14" pos:end="255:30"><expr pos:start="255:14" pos:end="255:30"><operator pos:start="255:14" pos:end="255:14">&amp;</operator><name pos:start="255:15" pos:end="255:30">video_codec_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="257:5" pos:end="257:33"><expr pos:start="257:5" pos:end="257:32"><call pos:start="257:5" pos:end="257:32"><name pos:start="257:5" pos:end="257:12">av_freep</name><argument_list pos:start="257:13" pos:end="257:32">(<argument pos:start="257:14" pos:end="257:31"><expr pos:start="257:14" pos:end="257:31"><operator pos:start="257:14" pos:end="257:14">&amp;</operator><name pos:start="257:15" pos:end="257:31">forced_key_frames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="259:5" pos:end="259:26"><expr pos:start="259:5" pos:end="259:25"><name pos:start="259:5" pos:end="259:21">video_stream_copy</name> <operator pos:start="259:23" pos:end="259:23">=</operator> <literal type="number" pos:start="259:25" pos:end="259:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="261:5" pos:end="261:33"><expr pos:start="261:5" pos:end="261:32"><name pos:start="261:5" pos:end="261:17">frame_pix_fmt</name> <operator pos:start="261:19" pos:end="261:19">=</operator> <name pos:start="261:21" pos:end="261:32">PIX_FMT_NONE</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
