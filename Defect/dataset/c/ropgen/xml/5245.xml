<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5245.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">uart_write</name><parameter_list pos:start="1:23" pos:end="3:37">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:35"><name pos:start="1:24" pos:end="1:27">void</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:35">opaque</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:60"><decl pos:start="1:38" pos:end="1:60"><type pos:start="1:38" pos:end="1:60"><name pos:start="1:38" pos:end="1:55">target_phys_addr_t</name></type> <name pos:start="1:57" pos:end="1:60">addr</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:76"><decl pos:start="1:63" pos:end="1:76"><type pos:start="1:63" pos:end="1:76"><name pos:start="1:63" pos:end="1:70">uint64_t</name></type> <name pos:start="1:72" pos:end="1:76">value</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:36"><decl pos:start="3:24" pos:end="3:36"><type pos:start="3:24" pos:end="3:36"><name pos:start="3:24" pos:end="3:31">unsigned</name></type> <name pos:start="3:33" pos:end="3:36">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="69:1">{<block_content pos:start="7:5" pos:end="67:23">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22">MilkymistUartState</name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:25">s</name> <init pos:start="7:27" pos:end="7:34">= <expr pos:start="7:29" pos:end="7:34"><name pos:start="7:29" pos:end="7:34">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">char</name></type> <name pos:start="9:19" pos:end="9:20">ch</name> <init pos:start="9:22" pos:end="9:28">= <expr pos:start="9:24" pos:end="9:28"><name pos:start="9:24" pos:end="9:28">value</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:51"><expr pos:start="13:5" pos:end="13:50"><call pos:start="13:5" pos:end="13:50"><name pos:start="13:5" pos:end="13:37">trace_milkymist_uart_memory_write</name><argument_list pos:start="13:38" pos:end="13:50">(<argument pos:start="13:39" pos:end="13:42"><expr pos:start="13:39" pos:end="13:42"><name pos:start="13:39" pos:end="13:42">addr</name></expr></argument>, <argument pos:start="13:45" pos:end="13:49"><expr pos:start="13:45" pos:end="13:49"><name pos:start="13:45" pos:end="13:49">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:15"><expr pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:8">addr</name> <operator pos:start="17:10" pos:end="17:12">&gt;&gt;=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">2</literal></expr>;</expr_stmt>

    <switch pos:start="19:5" pos:end="63:5">switch <condition pos:start="19:12" pos:end="19:17">(<expr pos:start="19:13" pos:end="19:16"><name pos:start="19:13" pos:end="19:16">addr</name></expr>)</condition> <block pos:start="19:19" pos:end="63:5">{<block_content pos:start="21:5" pos:end="61:14">

    <case pos:start="21:5" pos:end="21:16">case <expr pos:start="21:10" pos:end="21:15"><name pos:start="21:10" pos:end="21:15">R_RXTX</name></expr>:</case>

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:19">(<expr pos:start="23:13" pos:end="23:18"><name pos:start="23:13" pos:end="23:18"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:18">chr</name></name></expr>)</condition> <block pos:start="23:21" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:46">

            <expr_stmt pos:start="25:13" pos:end="25:46"><expr pos:start="25:13" pos:end="25:45"><call pos:start="25:13" pos:end="25:45"><name pos:start="25:13" pos:end="25:29">qemu_chr_fe_write</name><argument_list pos:start="25:30" pos:end="25:45">(<argument pos:start="25:31" pos:end="25:36"><expr pos:start="25:31" pos:end="25:36"><name pos:start="25:31" pos:end="25:36"><name pos:start="25:31" pos:end="25:31">s</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:36">chr</name></name></expr></argument>, <argument pos:start="25:39" pos:end="25:41"><expr pos:start="25:39" pos:end="25:41"><operator pos:start="25:39" pos:end="25:39">&amp;</operator><name pos:start="25:40" pos:end="25:41">ch</name></expr></argument>, <argument pos:start="25:44" pos:end="25:44"><expr pos:start="25:44" pos:end="25:44"><literal type="number" pos:start="25:44" pos:end="25:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:39"><expr pos:start="29:9" pos:end="29:38"><name pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:15">regs</name><index pos:start="29:16" pos:end="29:23">[<expr pos:start="29:17" pos:end="29:22"><name pos:start="29:17" pos:end="29:22">R_STAT</name></expr>]</index></name> <operator pos:start="29:25" pos:end="29:26">|=</operator> <name pos:start="29:28" pos:end="29:38">STAT_TX_EVT</name></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:15">case <expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:14">R_DIV</name></expr>:</case>

    <case pos:start="35:5" pos:end="35:16">case <expr pos:start="35:10" pos:end="35:15"><name pos:start="35:10" pos:end="35:15">R_CTRL</name></expr>:</case>

    <case pos:start="37:5" pos:end="37:15">case <expr pos:start="37:10" pos:end="37:14"><name pos:start="37:10" pos:end="37:14">R_DBG</name></expr>:</case>

        <expr_stmt pos:start="39:9" pos:end="39:30"><expr pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:15">regs</name><index pos:start="39:16" pos:end="39:21">[<expr pos:start="39:17" pos:end="39:20"><name pos:start="39:17" pos:end="39:20">addr</name></expr>]</index></name> <operator pos:start="39:23" pos:end="39:23">=</operator> <name pos:start="39:25" pos:end="39:29">value</name></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>



    <case pos:start="45:5" pos:end="45:16">case <expr pos:start="45:10" pos:end="45:15"><name pos:start="45:10" pos:end="45:15">R_STAT</name></expr>:</case>

        <comment type="block" pos:start="47:9" pos:end="47:37">/* write one to clear bits */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:64"><expr pos:start="49:9" pos:end="49:63"><name pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:15">regs</name><index pos:start="49:16" pos:end="49:21">[<expr pos:start="49:17" pos:end="49:20"><name pos:start="49:17" pos:end="49:20">addr</name></expr>]</index></name> <operator pos:start="49:23" pos:end="49:24">&amp;=</operator> <operator pos:start="49:26" pos:end="49:26">~</operator><operator pos:start="49:27" pos:end="49:27">(</operator><name pos:start="49:28" pos:end="49:32">value</name> <operator pos:start="49:34" pos:end="49:34">&amp;</operator> <operator pos:start="49:36" pos:end="49:36">(</operator><name pos:start="49:37" pos:end="49:47">STAT_RX_EVT</name> <operator pos:start="49:49" pos:end="49:49">|</operator> <name pos:start="49:51" pos:end="49:61">STAT_TX_EVT</name><operator pos:start="49:62" pos:end="49:62">)</operator><operator pos:start="49:63" pos:end="49:63">)</operator></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>



    <default pos:start="55:5" pos:end="55:12">default:</default>

        <expr_stmt pos:start="57:9" pos:end="59:43"><expr pos:start="57:9" pos:end="59:42"><call pos:start="57:9" pos:end="59:42"><name pos:start="57:9" pos:end="57:20">error_report</name><argument_list pos:start="57:21" pos:end="59:42">(<argument pos:start="57:22" pos:end="59:30"><expr pos:start="57:22" pos:end="59:30"><literal type="string" pos:start="57:22" pos:end="57:74">"milkymist_uart: write access to unknown register 0x"</literal>

                <name pos:start="59:17" pos:end="59:30">TARGET_FMT_plx</name></expr></argument>, <argument pos:start="59:33" pos:end="59:41"><expr pos:start="59:33" pos:end="59:41"><name pos:start="59:33" pos:end="59:36">addr</name> <operator pos:start="59:38" pos:end="59:39">&lt;&lt;</operator> <literal type="number" pos:start="59:41" pos:end="59:41">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="67:5" pos:end="67:23"><expr pos:start="67:5" pos:end="67:22"><call pos:start="67:5" pos:end="67:22"><name pos:start="67:5" pos:end="67:19">uart_update_irq</name><argument_list pos:start="67:20" pos:end="67:22">(<argument pos:start="67:21" pos:end="67:21"><expr pos:start="67:21" pos:end="67:21"><name pos:start="67:21" pos:end="67:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
