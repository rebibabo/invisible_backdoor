<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17416.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">decode_syncpoint</name><parameter_list pos:start="1:28" pos:end="1:76">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:38">NUTContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">nut</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:56"><decl pos:start="1:46" pos:end="1:56"><type pos:start="1:46" pos:end="1:56"><name pos:start="1:46" pos:end="1:52">int64_t</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:56">ts</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:75"><decl pos:start="1:59" pos:end="1:75"><type pos:start="1:59" pos:end="1:75"><name pos:start="1:59" pos:end="1:65">int64_t</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:75">back_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFormatContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:33">= <expr pos:start="5:26" pos:end="5:33"><name pos:start="5:26" pos:end="5:33"><name pos:start="5:26" pos:end="5:28">nut</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:33">avf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">bc</name>    <init pos:start="7:24" pos:end="7:30">= <expr pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:15">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:16">tmp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:48"><expr pos:start="15:5" pos:end="15:47"><name pos:start="15:5" pos:end="15:27"><name pos:start="15:5" pos:end="15:7">nut</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:27">last_syncpoint_pos</name></name> <operator pos:start="15:29" pos:end="15:29">=</operator> <call pos:start="15:31" pos:end="15:43"><name pos:start="15:31" pos:end="15:39">avio_tell</name><argument_list pos:start="15:40" pos:end="15:43">(<argument pos:start="15:41" pos:end="15:42"><expr pos:start="15:41" pos:end="15:42"><name pos:start="15:41" pos:end="15:42">bc</name></expr></argument>)</argument_list></call> <operator pos:start="15:45" pos:end="15:45">-</operator> <literal type="number" pos:start="15:47" pos:end="15:47">8</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:61"><expr pos:start="19:5" pos:end="19:60"><name pos:start="19:5" pos:end="19:7">end</name>  <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:60"><name pos:start="19:12" pos:end="19:27">get_packetheader</name><argument_list pos:start="19:28" pos:end="19:60">(<argument pos:start="19:29" pos:end="19:31"><expr pos:start="19:29" pos:end="19:31"><name pos:start="19:29" pos:end="19:31">nut</name></expr></argument>, <argument pos:start="19:34" pos:end="19:35"><expr pos:start="19:34" pos:end="19:35"><name pos:start="19:34" pos:end="19:35">bc</name></expr></argument>, <argument pos:start="19:38" pos:end="19:38"><expr pos:start="19:38" pos:end="19:38"><literal type="number" pos:start="19:38" pos:end="19:38">1</literal></expr></argument>, <argument pos:start="19:41" pos:end="19:59"><expr pos:start="19:41" pos:end="19:59"><name pos:start="19:41" pos:end="19:59">SYNCPOINT_STARTCODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:25"><expr pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:7">end</name> <operator pos:start="21:9" pos:end="21:10">+=</operator> <call pos:start="21:12" pos:end="21:24"><name pos:start="21:12" pos:end="21:20">avio_tell</name><argument_list pos:start="21:21" pos:end="21:24">(<argument pos:start="21:22" pos:end="21:23"><expr pos:start="21:22" pos:end="21:23"><name pos:start="21:22" pos:end="21:23">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:37"><expr pos:start="25:5" pos:end="25:36"><name pos:start="25:5" pos:end="25:7">tmp</name>       <operator pos:start="25:15" pos:end="25:15">=</operator> <call pos:start="25:17" pos:end="25:36"><name pos:start="25:17" pos:end="25:32">ffio_read_varlen</name><argument_list pos:start="25:33" pos:end="25:36">(<argument pos:start="25:34" pos:end="25:35"><expr pos:start="25:34" pos:end="25:35"><name pos:start="25:34" pos:end="25:35">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:68"><expr pos:start="27:5" pos:end="27:67"><operator pos:start="27:5" pos:end="27:5">*</operator><name pos:start="27:6" pos:end="27:13">back_ptr</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:39"><name pos:start="27:17" pos:end="27:19">nut</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:39">last_syncpoint_pos</name></name> <operator pos:start="27:41" pos:end="27:41">-</operator> <literal type="number" pos:start="27:43" pos:end="27:44">16</literal> <operator pos:start="27:46" pos:end="27:46">*</operator> <call pos:start="27:48" pos:end="27:67"><name pos:start="27:48" pos:end="27:63">ffio_read_varlen</name><argument_list pos:start="27:64" pos:end="27:67">(<argument pos:start="27:65" pos:end="27:66"><expr pos:start="27:65" pos:end="27:66"><name pos:start="27:65" pos:end="27:66">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:18"><if pos:start="29:5" pos:end="31:18">if <condition pos:start="29:8" pos:end="29:22">(<expr pos:start="29:9" pos:end="29:21"><operator pos:start="29:9" pos:end="29:9">*</operator><name pos:start="29:10" pos:end="29:17">back_ptr</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <literal type="number" pos:start="29:21" pos:end="29:21">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:18"><block_content pos:start="31:9" pos:end="31:18">

        <return pos:start="31:9" pos:end="31:18">return <expr pos:start="31:16" pos:end="31:17"><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="37:48"><expr pos:start="35:5" pos:end="37:47"><call pos:start="35:5" pos:end="37:47"><name pos:start="35:5" pos:end="35:19">ff_nut_reset_ts</name><argument_list pos:start="35:20" pos:end="37:47">(<argument pos:start="35:21" pos:end="35:23"><expr pos:start="35:21" pos:end="35:23"><name pos:start="35:21" pos:end="35:23">nut</name></expr></argument>, <argument pos:start="35:26" pos:end="35:67"><expr pos:start="35:26" pos:end="35:67"><name pos:start="35:26" pos:end="35:67"><name pos:start="35:26" pos:end="35:28">nut</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:39">time_base</name><index pos:start="35:40" pos:end="35:67">[<expr pos:start="35:41" pos:end="35:66"><name pos:start="35:41" pos:end="35:43">tmp</name> <operator pos:start="35:45" pos:end="35:45">%</operator> <name pos:start="35:47" pos:end="35:66"><name pos:start="35:47" pos:end="35:49">nut</name><operator pos:start="35:50" pos:end="35:51">-&gt;</operator><name pos:start="35:52" pos:end="35:66">time_base_count</name></name></expr>]</index></name></expr></argument>,

                    <argument pos:start="37:21" pos:end="37:46"><expr pos:start="37:21" pos:end="37:46"><name pos:start="37:21" pos:end="37:23">tmp</name> <operator pos:start="37:25" pos:end="37:25">/</operator> <name pos:start="37:27" pos:end="37:46"><name pos:start="37:27" pos:end="37:29">nut</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:46">time_base_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:56">(<expr pos:start="41:9" pos:end="41:55"><call pos:start="41:9" pos:end="41:30"><name pos:start="41:9" pos:end="41:21">skip_reserved</name><argument_list pos:start="41:22" pos:end="41:30">(<argument pos:start="41:23" pos:end="41:24"><expr pos:start="41:23" pos:end="41:24"><name pos:start="41:23" pos:end="41:24">bc</name></expr></argument>, <argument pos:start="41:27" pos:end="41:29"><expr pos:start="41:27" pos:end="41:29"><name pos:start="41:27" pos:end="41:29">end</name></expr></argument>)</argument_list></call> <operator pos:start="41:32" pos:end="41:33">||</operator> <call pos:start="41:35" pos:end="41:55"><name pos:start="41:35" pos:end="41:51">ffio_get_checksum</name><argument_list pos:start="41:52" pos:end="41:55">(<argument pos:start="41:53" pos:end="41:54"><expr pos:start="41:53" pos:end="41:54"><name pos:start="41:53" pos:end="41:54">bc</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:58" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:18">

        <expr_stmt pos:start="43:9" pos:end="43:66"><expr pos:start="43:9" pos:end="43:65"><call pos:start="43:9" pos:end="43:65"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="43:65">(<argument pos:start="43:16" pos:end="43:16"><expr pos:start="43:16" pos:end="43:16"><name pos:start="43:16" pos:end="43:16">s</name></expr></argument>, <argument pos:start="43:19" pos:end="43:30"><expr pos:start="43:19" pos:end="43:30"><name pos:start="43:19" pos:end="43:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:33" pos:end="43:64"><expr pos:start="43:33" pos:end="43:64"><literal type="string" pos:start="43:33" pos:end="43:64">"sync point checksum mismatch\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:18">return <expr pos:start="45:16" pos:end="45:17"><operator pos:start="45:16" pos:end="45:16">-</operator><literal type="number" pos:start="45:17" pos:end="45:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="53:69"><expr pos:start="51:5" pos:end="53:68"><operator pos:start="51:5" pos:end="51:5">*</operator><name pos:start="51:6" pos:end="51:7">ts</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <name pos:start="51:11" pos:end="51:13">tmp</name> <operator pos:start="51:15" pos:end="51:15">/</operator> <name pos:start="51:17" pos:end="51:29"><name pos:start="51:17" pos:end="51:17">s</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:29">nb_streams</name></name> <operator pos:start="51:31" pos:end="51:31">*</operator>

          <call pos:start="53:11" pos:end="53:53"><name pos:start="53:11" pos:end="53:16">av_q2d</name><argument_list pos:start="53:17" pos:end="53:53">(<argument pos:start="53:18" pos:end="53:52"><expr pos:start="53:18" pos:end="53:52"><name pos:start="53:18" pos:end="53:52"><name pos:start="53:18" pos:end="53:20">nut</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:31">time_base</name><index pos:start="53:32" pos:end="53:52">[<expr pos:start="53:33" pos:end="53:51"><name pos:start="53:33" pos:end="53:35">tmp</name> <operator pos:start="53:37" pos:end="53:37">%</operator> <name pos:start="53:39" pos:end="53:51"><name pos:start="53:39" pos:end="53:39">s</name><operator pos:start="53:40" pos:end="53:41">-&gt;</operator><name pos:start="53:42" pos:end="53:51">nb_streams</name></name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="53:55" pos:end="53:55">*</operator> <name pos:start="53:57" pos:end="53:68">AV_TIME_BASE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:64"><expr pos:start="55:5" pos:end="55:63"><call pos:start="55:5" pos:end="55:63"><name pos:start="55:5" pos:end="55:17">ff_nut_add_sp</name><argument_list pos:start="55:18" pos:end="55:63">(<argument pos:start="55:19" pos:end="55:21"><expr pos:start="55:19" pos:end="55:21"><name pos:start="55:19" pos:end="55:21">nut</name></expr></argument>, <argument pos:start="55:24" pos:end="55:46"><expr pos:start="55:24" pos:end="55:46"><name pos:start="55:24" pos:end="55:46"><name pos:start="55:24" pos:end="55:26">nut</name><operator pos:start="55:27" pos:end="55:28">-&gt;</operator><name pos:start="55:29" pos:end="55:46">last_syncpoint_pos</name></name></expr></argument>, <argument pos:start="55:49" pos:end="55:57"><expr pos:start="55:49" pos:end="55:57"><operator pos:start="55:49" pos:end="55:49">*</operator><name pos:start="55:50" pos:end="55:57">back_ptr</name></expr></argument>, <argument pos:start="55:60" pos:end="55:62"><expr pos:start="55:60" pos:end="55:62"><operator pos:start="55:60" pos:end="55:60">*</operator><name pos:start="55:61" pos:end="55:62">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
