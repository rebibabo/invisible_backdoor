<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3431.c" pos:tabs="8"><function pos:start="1:1" pos:end="205:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">omap2_inth_write</name><parameter_list pos:start="1:29" pos:end="3:59">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">opaque</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:66"><decl pos:start="1:44" pos:end="1:66"><type pos:start="1:44" pos:end="1:66"><name pos:start="1:44" pos:end="1:61">target_phys_addr_t</name></type> <name pos:start="1:63" pos:end="1:66">addr</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:43"><decl pos:start="3:30" pos:end="3:43"><type pos:start="3:30" pos:end="3:43"><name pos:start="3:30" pos:end="3:37">uint64_t</name></type> <name pos:start="3:39" pos:end="3:43">value</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:58"><decl pos:start="3:46" pos:end="3:58"><type pos:start="3:46" pos:end="3:58"><name pos:start="3:46" pos:end="3:53">unsigned</name></type> <name pos:start="3:55" pos:end="3:58">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="205:1">{<block_content pos:start="7:5" pos:end="203:23">

    <decl_stmt pos:start="7:5" pos:end="7:74"><decl pos:start="7:5" pos:end="7:73"><type pos:start="7:5" pos:end="7:32"><name pos:start="7:5" pos:end="7:30"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:30">omap_intr_handler_s</name></name> <modifier pos:start="7:32" pos:end="7:32">*</modifier></type><name pos:start="7:33" pos:end="7:33">s</name> <init pos:start="7:35" pos:end="7:73">= <expr pos:start="7:37" pos:end="7:73"><operator pos:start="7:37" pos:end="7:37">(</operator>struct <name pos:start="7:45" pos:end="7:63">omap_intr_handler_s</name> <operator pos:start="7:65" pos:end="7:65">*</operator><operator pos:start="7:66" pos:end="7:66">)</operator> <name pos:start="7:68" pos:end="7:73">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">offset</name> <init pos:start="9:16" pos:end="9:21">= <expr pos:start="9:18" pos:end="9:21"><name pos:start="9:18" pos:end="9:21">addr</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">bank_no</name></decl>, <decl pos:start="11:18" pos:end="11:24"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:24">line_no</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:49"><decl pos:start="13:5" pos:end="13:48"><type pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:35"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:35">omap_intr_handler_bank_s</name></name> <modifier pos:start="13:37" pos:end="13:37">*</modifier></type><name pos:start="13:38" pos:end="13:41">bank</name> <init pos:start="13:43" pos:end="13:48">= <expr pos:start="13:45" pos:end="13:48"><name pos:start="13:45" pos:end="13:48">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="29:5"><if pos:start="17:5" pos:end="29:5">if <condition pos:start="17:8" pos:end="17:33">(<expr pos:start="17:9" pos:end="17:32"><operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:15">offset</name> <operator pos:start="17:17" pos:end="17:17">&amp;</operator> <literal type="number" pos:start="17:19" pos:end="17:23">0xf80</literal><operator pos:start="17:24" pos:end="17:24">)</operator> <operator pos:start="17:26" pos:end="17:27">==</operator> <literal type="number" pos:start="17:29" pos:end="17:32">0x80</literal></expr>)</condition> <block pos:start="17:35" pos:end="29:5">{<block_content pos:start="19:9" pos:end="27:9">

        <expr_stmt pos:start="19:9" pos:end="19:39"><expr pos:start="19:9" pos:end="19:38"><name pos:start="19:9" pos:end="19:15">bank_no</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <operator pos:start="19:19" pos:end="19:19">(</operator><name pos:start="19:20" pos:end="19:25">offset</name> <operator pos:start="19:27" pos:end="19:27">&amp;</operator> <literal type="number" pos:start="19:29" pos:end="19:32">0x60</literal><operator pos:start="19:33" pos:end="19:33">)</operator> <operator pos:start="19:35" pos:end="19:36">&gt;&gt;</operator> <literal type="number" pos:start="19:38" pos:end="19:38">5</literal></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="27:9"><if pos:start="21:9" pos:end="27:9">if <condition pos:start="21:12" pos:end="21:32">(<expr pos:start="21:13" pos:end="21:31"><name pos:start="21:13" pos:end="21:19">bank_no</name> <operator pos:start="21:21" pos:end="21:21">&lt;</operator> <name pos:start="21:23" pos:end="21:31"><name pos:start="21:23" pos:end="21:23">s</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:31">nbanks</name></name></expr>)</condition> <block pos:start="21:34" pos:end="27:9">{<block_content pos:start="23:13" pos:end="25:37">

            <expr_stmt pos:start="23:13" pos:end="23:28"><expr pos:start="23:13" pos:end="23:27"><name pos:start="23:13" pos:end="23:18">offset</name> <operator pos:start="23:20" pos:end="23:21">&amp;=</operator> <operator pos:start="23:23" pos:end="23:23">~</operator><literal type="number" pos:start="23:24" pos:end="23:27">0x60</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:37"><expr pos:start="25:13" pos:end="25:36"><name pos:start="25:13" pos:end="25:16">bank</name> <operator pos:start="25:18" pos:end="25:18">=</operator> <operator pos:start="25:20" pos:end="25:20">&amp;</operator><name pos:start="25:21" pos:end="25:36"><name pos:start="25:21" pos:end="25:21">s</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:27">bank</name><index pos:start="25:28" pos:end="25:36">[<expr pos:start="25:29" pos:end="25:35"><name pos:start="25:29" pos:end="25:35">bank_no</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="33:5" pos:end="201:5">switch <condition pos:start="33:12" pos:end="33:19">(<expr pos:start="33:13" pos:end="33:18"><name pos:start="33:13" pos:end="33:18">offset</name></expr>)</condition> <block pos:start="33:21" pos:end="201:5">{<block_content pos:start="35:5" pos:end="199:15">

    <case pos:start="35:5" pos:end="35:14">case <expr pos:start="35:10" pos:end="35:13"><literal type="number" pos:start="35:10" pos:end="35:13">0x10</literal></expr>:</case>	<comment type="block" pos:start="35:17" pos:end="35:36">/* INTC_SYSCONFIG */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:25"><expr pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:19">autoidle</name></name> <operator pos:start="37:21" pos:end="37:22">&amp;=</operator> <literal type="number" pos:start="37:24" pos:end="37:24">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:40"><expr pos:start="39:9" pos:end="39:39"><name pos:start="39:9" pos:end="39:19"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:19">autoidle</name></name> <operator pos:start="39:21" pos:end="39:22">|=</operator> <operator pos:start="39:24" pos:end="39:24">(</operator><name pos:start="39:25" pos:end="39:29">value</name> <operator pos:start="39:31" pos:end="39:31">&amp;</operator> <literal type="number" pos:start="39:33" pos:end="39:33">1</literal><operator pos:start="39:34" pos:end="39:34">)</operator> <operator pos:start="39:36" pos:end="39:37">&lt;&lt;</operator> <literal type="number" pos:start="39:39" pos:end="39:39">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="43:31"><if pos:start="41:9" pos:end="43:31">if <condition pos:start="41:12" pos:end="41:22">(<expr pos:start="41:13" pos:end="41:21"><name pos:start="41:13" pos:end="41:17">value</name> <operator pos:start="41:19" pos:end="41:19">&amp;</operator> <literal type="number" pos:start="41:21" pos:end="41:21">2</literal></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:31"><block_content pos:start="43:13" pos:end="43:31">						<comment type="block" pos:start="41:65" pos:end="41:79">/* SOFTRESET */</comment>

            <expr_stmt pos:start="43:13" pos:end="43:31"><expr pos:start="43:13" pos:end="43:30"><call pos:start="43:13" pos:end="43:30"><name pos:start="43:13" pos:end="43:27">omap_inth_reset</name><argument_list pos:start="43:28" pos:end="43:30">(<argument pos:start="43:29" pos:end="43:29"><expr pos:start="43:29" pos:end="43:29"><name pos:start="43:29" pos:end="43:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="45:9" pos:end="45:15">return;</return>



    <case pos:start="49:5" pos:end="49:14">case <expr pos:start="49:10" pos:end="49:13"><literal type="number" pos:start="49:10" pos:end="49:13">0x48</literal></expr>:</case>	<comment type="block" pos:start="49:17" pos:end="49:34">/* INTC_CONTROL */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:39"><expr pos:start="51:9" pos:end="51:38"><name pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:15">mask</name></name> <operator pos:start="51:17" pos:end="51:17">=</operator> <ternary pos:start="51:19" pos:end="51:38"><condition pos:start="51:19" pos:end="51:31"><expr pos:start="51:19" pos:end="51:29"><operator pos:start="51:19" pos:end="51:19">(</operator><name pos:start="51:20" pos:end="51:24">value</name> <operator pos:start="51:26" pos:end="51:26">&amp;</operator> <literal type="number" pos:start="51:28" pos:end="51:28">4</literal><operator pos:start="51:29" pos:end="51:29">)</operator></expr> ?</condition><then pos:start="51:33" pos:end="51:33"> <expr pos:start="51:33" pos:end="51:33"><literal type="number" pos:start="51:33" pos:end="51:33">0</literal></expr> </then><else pos:start="51:35" pos:end="51:38">: <expr pos:start="51:37" pos:end="51:38"><operator pos:start="51:37" pos:end="51:37">~</operator><literal type="number" pos:start="51:38" pos:end="51:38">0</literal></expr></else></ternary></expr>;</expr_stmt>				<comment type="block" pos:start="51:65" pos:end="51:80">/* GLOBALMASK */</comment>

        <if_stmt pos:start="53:9" pos:end="61:9"><if pos:start="53:9" pos:end="61:9">if <condition pos:start="53:12" pos:end="53:22">(<expr pos:start="53:13" pos:end="53:21"><name pos:start="53:13" pos:end="53:17">value</name> <operator pos:start="53:19" pos:end="53:19">&amp;</operator> <literal type="number" pos:start="53:21" pos:end="53:21">2</literal></expr>)</condition> <block pos:start="53:24" pos:end="61:9">{<block_content pos:start="55:13" pos:end="59:35">					<comment type="block" pos:start="53:65" pos:end="53:79">/* NEWFIQAGR */</comment>

            <expr_stmt pos:start="55:13" pos:end="55:47"><expr pos:start="55:13" pos:end="55:46"><call pos:start="55:13" pos:end="55:46"><name pos:start="55:13" pos:end="55:24">qemu_set_irq</name><argument_list pos:start="55:25" pos:end="55:46">(<argument pos:start="55:26" pos:end="55:42"><expr pos:start="55:26" pos:end="55:42"><name pos:start="55:26" pos:end="55:42"><name pos:start="55:26" pos:end="55:26">s</name><operator pos:start="55:27" pos:end="55:28">-&gt;</operator><name pos:start="55:29" pos:end="55:39">parent_intr</name><index pos:start="55:40" pos:end="55:42">[<expr pos:start="55:41" pos:end="55:41"><literal type="number" pos:start="55:41" pos:end="55:41">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="55:45" pos:end="55:45"><expr pos:start="55:45" pos:end="55:45"><literal type="number" pos:start="55:45" pos:end="55:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:31"><expr pos:start="57:13" pos:end="57:30"><name pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:22">new_agr</name><index pos:start="57:23" pos:end="57:25">[<expr pos:start="57:24" pos:end="57:24"><literal type="number" pos:start="57:24" pos:end="57:24">1</literal></expr>]</index></name> <operator pos:start="57:27" pos:end="57:27">=</operator> <operator pos:start="57:29" pos:end="57:29">~</operator><literal type="number" pos:start="57:30" pos:end="57:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:35"><expr pos:start="59:13" pos:end="59:34"><call pos:start="59:13" pos:end="59:34"><name pos:start="59:13" pos:end="59:28">omap_inth_update</name><argument_list pos:start="59:29" pos:end="59:34">(<argument pos:start="59:30" pos:end="59:30"><expr pos:start="59:30" pos:end="59:30"><name pos:start="59:30" pos:end="59:30">s</name></expr></argument>, <argument pos:start="59:33" pos:end="59:33"><expr pos:start="59:33" pos:end="59:33"><literal type="number" pos:start="59:33" pos:end="59:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="63:9" pos:end="71:9"><if pos:start="63:9" pos:end="71:9">if <condition pos:start="63:12" pos:end="63:22">(<expr pos:start="63:13" pos:end="63:21"><name pos:start="63:13" pos:end="63:17">value</name> <operator pos:start="63:19" pos:end="63:19">&amp;</operator> <literal type="number" pos:start="63:21" pos:end="63:21">1</literal></expr>)</condition> <block pos:start="63:24" pos:end="71:9">{<block_content pos:start="65:13" pos:end="69:35">					<comment type="block" pos:start="63:65" pos:end="63:79">/* NEWIRQAGR */</comment>

            <expr_stmt pos:start="65:13" pos:end="65:47"><expr pos:start="65:13" pos:end="65:46"><call pos:start="65:13" pos:end="65:46"><name pos:start="65:13" pos:end="65:24">qemu_set_irq</name><argument_list pos:start="65:25" pos:end="65:46">(<argument pos:start="65:26" pos:end="65:42"><expr pos:start="65:26" pos:end="65:42"><name pos:start="65:26" pos:end="65:42"><name pos:start="65:26" pos:end="65:26">s</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:39">parent_intr</name><index pos:start="65:40" pos:end="65:42">[<expr pos:start="65:41" pos:end="65:41"><literal type="number" pos:start="65:41" pos:end="65:41">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="65:45" pos:end="65:45"><expr pos:start="65:45" pos:end="65:45"><literal type="number" pos:start="65:45" pos:end="65:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:31"><expr pos:start="67:13" pos:end="67:30"><name pos:start="67:13" pos:end="67:25"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:22">new_agr</name><index pos:start="67:23" pos:end="67:25">[<expr pos:start="67:24" pos:end="67:24"><literal type="number" pos:start="67:24" pos:end="67:24">0</literal></expr>]</index></name> <operator pos:start="67:27" pos:end="67:27">=</operator> <operator pos:start="67:29" pos:end="67:29">~</operator><literal type="number" pos:start="67:30" pos:end="67:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:35"><expr pos:start="69:13" pos:end="69:34"><call pos:start="69:13" pos:end="69:34"><name pos:start="69:13" pos:end="69:28">omap_inth_update</name><argument_list pos:start="69:29" pos:end="69:34">(<argument pos:start="69:30" pos:end="69:30"><expr pos:start="69:30" pos:end="69:30"><name pos:start="69:30" pos:end="69:30">s</name></expr></argument>, <argument pos:start="69:33" pos:end="69:33"><expr pos:start="69:33" pos:end="69:33"><literal type="number" pos:start="69:33" pos:end="69:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="73:9" pos:end="73:15">return;</return>



    <case pos:start="77:5" pos:end="77:14">case <expr pos:start="77:10" pos:end="77:13"><literal type="number" pos:start="77:10" pos:end="77:13">0x4c</literal></expr>:</case>	<comment type="block" pos:start="77:17" pos:end="77:37">/* INTC_PROTECTION */</comment>

        <comment type="block" pos:start="79:9" pos:end="81:75">/* TODO: Make a bitmap (or sizeof(char)map) of access privileges

         * for every register, see Chapter 3 and 4 for privileged mode.  */</comment>

        <if_stmt pos:start="83:9" pos:end="87:42"><if pos:start="83:9" pos:end="87:42">if <condition pos:start="83:12" pos:end="83:22">(<expr pos:start="83:13" pos:end="83:21"><name pos:start="83:13" pos:end="83:17">value</name> <operator pos:start="83:19" pos:end="83:19">&amp;</operator> <literal type="number" pos:start="83:21" pos:end="83:21">1</literal></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="87:42"><block_content pos:start="85:13" pos:end="87:42">

            <expr_stmt pos:start="85:13" pos:end="87:42"><expr pos:start="85:13" pos:end="87:41"><call pos:start="85:13" pos:end="87:41"><name pos:start="85:13" pos:end="85:19">fprintf</name><argument_list pos:start="85:20" pos:end="87:41">(<argument pos:start="85:21" pos:end="85:26"><expr pos:start="85:21" pos:end="85:26"><name pos:start="85:21" pos:end="85:26">stderr</name></expr></argument>, <argument pos:start="85:29" pos:end="85:66"><expr pos:start="85:29" pos:end="85:66"><literal type="string" pos:start="85:29" pos:end="85:66">"%s: protection mode enable attempt\n"</literal></expr></argument>,

                            <argument pos:start="87:29" pos:end="87:40"><expr pos:start="87:29" pos:end="87:40"><name pos:start="87:29" pos:end="87:40">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="89:9" pos:end="89:15">return;</return>



    <case pos:start="93:5" pos:end="93:14">case <expr pos:start="93:10" pos:end="93:13"><literal type="number" pos:start="93:10" pos:end="93:13">0x50</literal></expr>:</case>	<comment type="block" pos:start="93:17" pos:end="93:31">/* INTC_IDLE */</comment>

        <expr_stmt pos:start="95:9" pos:end="95:26"><expr pos:start="95:9" pos:end="95:25"><name pos:start="95:9" pos:end="95:19"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:19">autoidle</name></name> <operator pos:start="95:21" pos:end="95:22">&amp;=</operator> <operator pos:start="95:24" pos:end="95:24">~</operator><literal type="number" pos:start="95:25" pos:end="95:25">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:33"><expr pos:start="97:9" pos:end="97:32"><name pos:start="97:9" pos:end="97:19"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:19">autoidle</name></name> <operator pos:start="97:21" pos:end="97:22">|=</operator> <name pos:start="97:24" pos:end="97:28">value</name> <operator pos:start="97:30" pos:end="97:30">&amp;</operator> <literal type="number" pos:start="97:32" pos:end="97:32">3</literal></expr>;</expr_stmt>

        <return pos:start="99:9" pos:end="99:15">return;</return>



    <comment type="block" pos:start="103:5" pos:end="103:28">/* Per-bank registers */</comment>

    <case pos:start="105:5" pos:end="105:14">case <expr pos:start="105:10" pos:end="105:13"><literal type="number" pos:start="105:10" pos:end="105:13">0x84</literal></expr>:</case>	<comment type="block" pos:start="105:17" pos:end="105:30">/* INTC_MIR */</comment>

        <expr_stmt pos:start="107:9" pos:end="107:27"><expr pos:start="107:9" pos:end="107:26"><name pos:start="107:9" pos:end="107:18"><name pos:start="107:9" pos:end="107:12">bank</name><operator pos:start="107:13" pos:end="107:14">-&gt;</operator><name pos:start="107:15" pos:end="107:18">mask</name></name> <operator pos:start="107:20" pos:end="107:20">=</operator> <name pos:start="107:22" pos:end="107:26">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:31"><expr pos:start="109:9" pos:end="109:30"><call pos:start="109:9" pos:end="109:30"><name pos:start="109:9" pos:end="109:24">omap_inth_update</name><argument_list pos:start="109:25" pos:end="109:30">(<argument pos:start="109:26" pos:end="109:26"><expr pos:start="109:26" pos:end="109:26"><name pos:start="109:26" pos:end="109:26">s</name></expr></argument>, <argument pos:start="109:29" pos:end="109:29"><expr pos:start="109:29" pos:end="109:29"><literal type="number" pos:start="109:29" pos:end="109:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:31"><expr pos:start="111:9" pos:end="111:30"><call pos:start="111:9" pos:end="111:30"><name pos:start="111:9" pos:end="111:24">omap_inth_update</name><argument_list pos:start="111:25" pos:end="111:30">(<argument pos:start="111:26" pos:end="111:26"><expr pos:start="111:26" pos:end="111:26"><name pos:start="111:26" pos:end="111:26">s</name></expr></argument>, <argument pos:start="111:29" pos:end="111:29"><expr pos:start="111:29" pos:end="111:29"><literal type="number" pos:start="111:29" pos:end="111:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="113:9" pos:end="113:15">return;</return>



    <case pos:start="117:5" pos:end="117:14">case <expr pos:start="117:10" pos:end="117:13"><literal type="number" pos:start="117:10" pos:end="117:13">0x88</literal></expr>:</case>	<comment type="block" pos:start="117:17" pos:end="117:36">/* INTC_MIR_CLEAR */</comment>

        <expr_stmt pos:start="119:9" pos:end="119:29"><expr pos:start="119:9" pos:end="119:28"><name pos:start="119:9" pos:end="119:18"><name pos:start="119:9" pos:end="119:12">bank</name><operator pos:start="119:13" pos:end="119:14">-&gt;</operator><name pos:start="119:15" pos:end="119:18">mask</name></name> <operator pos:start="119:20" pos:end="119:21">&amp;=</operator> <operator pos:start="119:23" pos:end="119:23">~</operator><name pos:start="119:24" pos:end="119:28">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:31"><expr pos:start="121:9" pos:end="121:30"><call pos:start="121:9" pos:end="121:30"><name pos:start="121:9" pos:end="121:24">omap_inth_update</name><argument_list pos:start="121:25" pos:end="121:30">(<argument pos:start="121:26" pos:end="121:26"><expr pos:start="121:26" pos:end="121:26"><name pos:start="121:26" pos:end="121:26">s</name></expr></argument>, <argument pos:start="121:29" pos:end="121:29"><expr pos:start="121:29" pos:end="121:29"><literal type="number" pos:start="121:29" pos:end="121:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:31"><expr pos:start="123:9" pos:end="123:30"><call pos:start="123:9" pos:end="123:30"><name pos:start="123:9" pos:end="123:24">omap_inth_update</name><argument_list pos:start="123:25" pos:end="123:30">(<argument pos:start="123:26" pos:end="123:26"><expr pos:start="123:26" pos:end="123:26"><name pos:start="123:26" pos:end="123:26">s</name></expr></argument>, <argument pos:start="123:29" pos:end="123:29"><expr pos:start="123:29" pos:end="123:29"><literal type="number" pos:start="123:29" pos:end="123:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="125:9" pos:end="125:15">return;</return>



    <case pos:start="129:5" pos:end="129:14">case <expr pos:start="129:10" pos:end="129:13"><literal type="number" pos:start="129:10" pos:end="129:13">0x8c</literal></expr>:</case>	<comment type="block" pos:start="129:17" pos:end="129:34">/* INTC_MIR_SET */</comment>

        <expr_stmt pos:start="131:9" pos:end="131:28"><expr pos:start="131:9" pos:end="131:27"><name pos:start="131:9" pos:end="131:18"><name pos:start="131:9" pos:end="131:12">bank</name><operator pos:start="131:13" pos:end="131:14">-&gt;</operator><name pos:start="131:15" pos:end="131:18">mask</name></name> <operator pos:start="131:20" pos:end="131:21">|=</operator> <name pos:start="131:23" pos:end="131:27">value</name></expr>;</expr_stmt>

        <return pos:start="133:9" pos:end="133:15">return;</return>



    <case pos:start="137:5" pos:end="137:14">case <expr pos:start="137:10" pos:end="137:13"><literal type="number" pos:start="137:10" pos:end="137:13">0x90</literal></expr>:</case>	<comment type="block" pos:start="137:17" pos:end="137:34">/* INTC_ISR_SET */</comment>

        <expr_stmt pos:start="139:9" pos:end="139:41"><expr pos:start="139:9" pos:end="139:40"><name pos:start="139:9" pos:end="139:18"><name pos:start="139:9" pos:end="139:12">bank</name><operator pos:start="139:13" pos:end="139:14">-&gt;</operator><name pos:start="139:15" pos:end="139:18">irqs</name></name> <operator pos:start="139:20" pos:end="139:21">|=</operator> <name pos:start="139:23" pos:end="139:31"><name pos:start="139:23" pos:end="139:26">bank</name><operator pos:start="139:27" pos:end="139:28">-&gt;</operator><name pos:start="139:29" pos:end="139:31">swi</name></name> <operator pos:start="139:33" pos:end="139:34">|=</operator> <name pos:start="139:36" pos:end="139:40">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:31"><expr pos:start="141:9" pos:end="141:30"><call pos:start="141:9" pos:end="141:30"><name pos:start="141:9" pos:end="141:24">omap_inth_update</name><argument_list pos:start="141:25" pos:end="141:30">(<argument pos:start="141:26" pos:end="141:26"><expr pos:start="141:26" pos:end="141:26"><name pos:start="141:26" pos:end="141:26">s</name></expr></argument>, <argument pos:start="141:29" pos:end="141:29"><expr pos:start="141:29" pos:end="141:29"><literal type="number" pos:start="141:29" pos:end="141:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:31"><expr pos:start="143:9" pos:end="143:30"><call pos:start="143:9" pos:end="143:30"><name pos:start="143:9" pos:end="143:24">omap_inth_update</name><argument_list pos:start="143:25" pos:end="143:30">(<argument pos:start="143:26" pos:end="143:26"><expr pos:start="143:26" pos:end="143:26"><name pos:start="143:26" pos:end="143:26">s</name></expr></argument>, <argument pos:start="143:29" pos:end="143:29"><expr pos:start="143:29" pos:end="143:29"><literal type="number" pos:start="143:29" pos:end="143:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="145:9" pos:end="145:15">return;</return>



    <case pos:start="149:5" pos:end="149:14">case <expr pos:start="149:10" pos:end="149:13"><literal type="number" pos:start="149:10" pos:end="149:13">0x94</literal></expr>:</case>	<comment type="block" pos:start="149:17" pos:end="149:36">/* INTC_ISR_CLEAR */</comment>

        <expr_stmt pos:start="151:9" pos:end="151:28"><expr pos:start="151:9" pos:end="151:27"><name pos:start="151:9" pos:end="151:17"><name pos:start="151:9" pos:end="151:12">bank</name><operator pos:start="151:13" pos:end="151:14">-&gt;</operator><name pos:start="151:15" pos:end="151:17">swi</name></name> <operator pos:start="151:19" pos:end="151:20">&amp;=</operator> <operator pos:start="151:22" pos:end="151:22">~</operator><name pos:start="151:23" pos:end="151:27">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:46"><expr pos:start="153:9" pos:end="153:45"><name pos:start="153:9" pos:end="153:18"><name pos:start="153:9" pos:end="153:12">bank</name><operator pos:start="153:13" pos:end="153:14">-&gt;</operator><name pos:start="153:15" pos:end="153:18">irqs</name></name> <operator pos:start="153:20" pos:end="153:20">=</operator> <name pos:start="153:22" pos:end="153:30"><name pos:start="153:22" pos:end="153:25">bank</name><operator pos:start="153:26" pos:end="153:27">-&gt;</operator><name pos:start="153:28" pos:end="153:30">swi</name></name> <operator pos:start="153:32" pos:end="153:32">&amp;</operator> <name pos:start="153:34" pos:end="153:45"><name pos:start="153:34" pos:end="153:37">bank</name><operator pos:start="153:38" pos:end="153:39">-&gt;</operator><name pos:start="153:40" pos:end="153:45">inputs</name></name></expr>;</expr_stmt>

        <return pos:start="155:9" pos:end="155:15">return;</return>



    <comment type="block" pos:start="159:5" pos:end="159:28">/* Per-line registers */</comment>

    <case pos:start="161:5" pos:end="161:25">case <expr pos:start="161:10" pos:end="161:24"><literal type="number" pos:start="161:10" pos:end="161:14">0x100</literal> <operator pos:start="161:16" pos:end="161:18">...</operator> <literal type="number" pos:start="161:20" pos:end="161:24">0x300</literal></expr>:</case>	<comment type="block" pos:start="161:33" pos:end="161:46">/* INTC_ILR */</comment>

        <expr_stmt pos:start="163:9" pos:end="163:40"><expr pos:start="163:9" pos:end="163:39"><name pos:start="163:9" pos:end="163:15">bank_no</name> <operator pos:start="163:17" pos:end="163:17">=</operator> <operator pos:start="163:19" pos:end="163:19">(</operator><name pos:start="163:20" pos:end="163:25">offset</name> <operator pos:start="163:27" pos:end="163:27">-</operator> <literal type="number" pos:start="163:29" pos:end="163:33">0x100</literal><operator pos:start="163:34" pos:end="163:34">)</operator> <operator pos:start="163:36" pos:end="163:37">&gt;&gt;</operator> <literal type="number" pos:start="163:39" pos:end="163:39">7</literal></expr>;</expr_stmt>

        <if_stmt pos:start="165:9" pos:end="167:18"><if pos:start="165:9" pos:end="167:18">if <condition pos:start="165:12" pos:end="165:32">(<expr pos:start="165:13" pos:end="165:31"><name pos:start="165:13" pos:end="165:19">bank_no</name> <operator pos:start="165:21" pos:end="165:21">&gt;</operator> <name pos:start="165:23" pos:end="165:31"><name pos:start="165:23" pos:end="165:23">s</name><operator pos:start="165:24" pos:end="165:25">-&gt;</operator><name pos:start="165:26" pos:end="165:31">nbanks</name></name></expr>)</condition><block type="pseudo" pos:start="167:13" pos:end="167:18"><block_content pos:start="167:13" pos:end="167:18">

            <break pos:start="167:13" pos:end="167:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:33"><expr pos:start="169:9" pos:end="169:32"><name pos:start="169:9" pos:end="169:12">bank</name> <operator pos:start="169:14" pos:end="169:14">=</operator> <operator pos:start="169:16" pos:end="169:16">&amp;</operator><name pos:start="169:17" pos:end="169:32"><name pos:start="169:17" pos:end="169:17">s</name><operator pos:start="169:18" pos:end="169:19">-&gt;</operator><name pos:start="169:20" pos:end="169:23">bank</name><index pos:start="169:24" pos:end="169:32">[<expr pos:start="169:25" pos:end="169:31"><name pos:start="169:25" pos:end="169:31">bank_no</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:39"><expr pos:start="171:9" pos:end="171:38"><name pos:start="171:9" pos:end="171:15">line_no</name> <operator pos:start="171:17" pos:end="171:17">=</operator> <operator pos:start="171:19" pos:end="171:19">(</operator><name pos:start="171:20" pos:end="171:25">offset</name> <operator pos:start="171:27" pos:end="171:27">&amp;</operator> <literal type="number" pos:start="171:29" pos:end="171:32">0x7f</literal><operator pos:start="171:33" pos:end="171:33">)</operator> <operator pos:start="171:35" pos:end="171:36">&gt;&gt;</operator> <literal type="number" pos:start="171:38" pos:end="171:38">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:54"><expr pos:start="173:9" pos:end="173:53"><name pos:start="173:9" pos:end="173:31"><name pos:start="173:9" pos:end="173:12">bank</name><operator pos:start="173:13" pos:end="173:14">-&gt;</operator><name pos:start="173:15" pos:end="173:22">priority</name><index pos:start="173:23" pos:end="173:31">[<expr pos:start="173:24" pos:end="173:30"><name pos:start="173:24" pos:end="173:30">line_no</name></expr>]</index></name> <operator pos:start="173:33" pos:end="173:33">=</operator> <operator pos:start="173:35" pos:end="173:35">(</operator><name pos:start="173:36" pos:end="173:40">value</name> <operator pos:start="173:42" pos:end="173:43">&gt;&gt;</operator> <literal type="number" pos:start="173:45" pos:end="173:45">2</literal><operator pos:start="173:46" pos:end="173:46">)</operator> <operator pos:start="173:48" pos:end="173:48">&amp;</operator> <literal type="number" pos:start="173:50" pos:end="173:53">0x3f</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:37"><expr pos:start="175:9" pos:end="175:36"><name pos:start="175:9" pos:end="175:17"><name pos:start="175:9" pos:end="175:12">bank</name><operator pos:start="175:13" pos:end="175:14">-&gt;</operator><name pos:start="175:15" pos:end="175:17">fiq</name></name> <operator pos:start="175:19" pos:end="175:20">&amp;=</operator> <operator pos:start="175:22" pos:end="175:22">~</operator><operator pos:start="175:23" pos:end="175:23">(</operator><literal type="number" pos:start="175:24" pos:end="175:24">1</literal> <operator pos:start="175:26" pos:end="175:27">&lt;&lt;</operator> <name pos:start="175:29" pos:end="175:35">line_no</name><operator pos:start="175:36" pos:end="175:36">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:44"><expr pos:start="177:9" pos:end="177:43"><name pos:start="177:9" pos:end="177:17"><name pos:start="177:9" pos:end="177:12">bank</name><operator pos:start="177:13" pos:end="177:14">-&gt;</operator><name pos:start="177:15" pos:end="177:17">fiq</name></name> <operator pos:start="177:19" pos:end="177:20">|=</operator> <operator pos:start="177:22" pos:end="177:22">(</operator><name pos:start="177:23" pos:end="177:27">value</name> <operator pos:start="177:29" pos:end="177:29">&amp;</operator> <literal type="number" pos:start="177:31" pos:end="177:31">1</literal><operator pos:start="177:32" pos:end="177:32">)</operator> <operator pos:start="177:34" pos:end="177:35">&lt;&lt;</operator> <name pos:start="177:37" pos:end="177:43">line_no</name></expr>;</expr_stmt>

        <return pos:start="179:9" pos:end="179:15">return;</return>



    <case pos:start="183:5" pos:end="183:14">case <expr pos:start="183:10" pos:end="183:13"><literal type="number" pos:start="183:10" pos:end="183:13">0x00</literal></expr>:</case>	<comment type="block" pos:start="183:17" pos:end="183:35">/* INTC_REVISION */</comment>

    <case pos:start="185:5" pos:end="185:14">case <expr pos:start="185:10" pos:end="185:13"><literal type="number" pos:start="185:10" pos:end="185:13">0x14</literal></expr>:</case>	<comment type="block" pos:start="185:17" pos:end="185:36">/* INTC_SYSSTATUS */</comment>

    <case pos:start="187:5" pos:end="187:14">case <expr pos:start="187:10" pos:end="187:13"><literal type="number" pos:start="187:10" pos:end="187:13">0x40</literal></expr>:</case>	<comment type="block" pos:start="187:17" pos:end="187:34">/* INTC_SIR_IRQ */</comment>

    <case pos:start="189:5" pos:end="189:14">case <expr pos:start="189:10" pos:end="189:13"><literal type="number" pos:start="189:10" pos:end="189:13">0x44</literal></expr>:</case>	<comment type="block" pos:start="189:17" pos:end="189:34">/* INTC_SIR_FIQ */</comment>

    <case pos:start="191:5" pos:end="191:14">case <expr pos:start="191:10" pos:end="191:13"><literal type="number" pos:start="191:10" pos:end="191:13">0x80</literal></expr>:</case>	<comment type="block" pos:start="191:17" pos:end="191:30">/* INTC_ITR */</comment>

    <case pos:start="193:5" pos:end="193:14">case <expr pos:start="193:10" pos:end="193:13"><literal type="number" pos:start="193:10" pos:end="193:13">0x98</literal></expr>:</case>	<comment type="block" pos:start="193:17" pos:end="193:38">/* INTC_PENDING_IRQ */</comment>

    <case pos:start="195:5" pos:end="195:14">case <expr pos:start="195:10" pos:end="195:13"><literal type="number" pos:start="195:10" pos:end="195:13">0x9c</literal></expr>:</case>	<comment type="block" pos:start="195:17" pos:end="195:38">/* INTC_PENDING_FIQ */</comment>

        <expr_stmt pos:start="197:9" pos:end="197:26"><expr pos:start="197:9" pos:end="197:25"><call pos:start="197:9" pos:end="197:25"><name pos:start="197:9" pos:end="197:19">OMAP_RO_REG</name><argument_list pos:start="197:20" pos:end="197:25">(<argument pos:start="197:21" pos:end="197:24"><expr pos:start="197:21" pos:end="197:24"><name pos:start="197:21" pos:end="197:24">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="199:9" pos:end="199:15">return;</return>

    </block_content>}</block></switch>

    <expr_stmt pos:start="203:5" pos:end="203:23"><expr pos:start="203:5" pos:end="203:22"><call pos:start="203:5" pos:end="203:22"><name pos:start="203:5" pos:end="203:16">OMAP_BAD_REG</name><argument_list pos:start="203:17" pos:end="203:22">(<argument pos:start="203:18" pos:end="203:21"><expr pos:start="203:18" pos:end="203:21"><name pos:start="203:18" pos:end="203:21">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
