<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8022.c" pos:tabs="8"><function pos:start="1:1" pos:end="82:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">openfile</name><parameter_list pos:start="1:20" pos:end="1:55">(<parameter pos:start="1:21" pos:end="1:30"><decl pos:start="1:21" pos:end="1:30"><type pos:start="1:21" pos:end="1:30"><name pos:start="1:21" pos:end="1:24">char</name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:30">name</name></decl></parameter>, <parameter pos:start="1:33" pos:end="1:41"><decl pos:start="1:33" pos:end="1:41"><type pos:start="1:33" pos:end="1:41"><name pos:start="1:33" pos:end="1:35">int</name></type> <name pos:start="1:37" pos:end="1:41">flags</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:54"><decl pos:start="1:44" pos:end="1:54"><type pos:start="1:44" pos:end="1:54"><name pos:start="1:44" pos:end="1:48">QDict</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">opts</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="82:1">{<block_content pos:start="5:5" pos:end="80:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Error</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:20">local_err</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">NULL</name></expr></init></decl>;</decl_stmt>




    <if_stmt pos:start="10:5" pos:end="18:5"><if pos:start="10:5" pos:end="18:5">if <condition pos:start="10:8" pos:end="10:19">(<expr pos:start="10:9" pos:end="10:18"><name pos:start="10:9" pos:end="10:18">qemuio_blk</name></expr>)</condition> <block pos:start="10:21" pos:end="18:5">{<block_content pos:start="12:9" pos:end="16:17">

        <expr_stmt pos:start="12:9" pos:end="12:65"><expr pos:start="12:9" pos:end="12:64"><call pos:start="12:9" pos:end="12:64"><name pos:start="12:9" pos:end="12:15">fprintf</name><argument_list pos:start="12:16" pos:end="12:64">(<argument pos:start="12:17" pos:end="12:22"><expr pos:start="12:17" pos:end="12:22"><name pos:start="12:17" pos:end="12:22">stderr</name></expr></argument>, <argument pos:start="12:25" pos:end="12:63"><expr pos:start="12:25" pos:end="12:63"><literal type="string" pos:start="12:25" pos:end="12:63">"file open already, try 'help close'\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="14:9" pos:end="14:22"><expr pos:start="14:9" pos:end="14:21"><call pos:start="14:9" pos:end="14:21"><name pos:start="14:9" pos:end="14:15">QDECREF</name><argument_list pos:start="14:16" pos:end="14:21">(<argument pos:start="14:17" pos:end="14:20"><expr pos:start="14:17" pos:end="14:20"><name pos:start="14:17" pos:end="14:20">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="16:9" pos:end="16:17">return <expr pos:start="16:16" pos:end="16:16"><literal type="number" pos:start="16:16" pos:end="16:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="22:5" pos:end="22:74"><expr pos:start="22:5" pos:end="22:73"><name pos:start="22:5" pos:end="22:14">qemuio_blk</name> <operator pos:start="22:16" pos:end="22:16">=</operator> <call pos:start="22:18" pos:end="22:73"><name pos:start="22:18" pos:end="22:29">blk_new_open</name><argument_list pos:start="22:30" pos:end="22:73">(<argument pos:start="22:31" pos:end="22:35"><expr pos:start="22:31" pos:end="22:35"><literal type="string" pos:start="22:31" pos:end="22:35">"hda"</literal></expr></argument>, <argument pos:start="22:38" pos:end="22:41"><expr pos:start="22:38" pos:end="22:41"><name pos:start="22:38" pos:end="22:41">name</name></expr></argument>, <argument pos:start="22:44" pos:end="22:47"><expr pos:start="22:44" pos:end="22:47"><name pos:start="22:44" pos:end="22:47">NULL</name></expr></argument>, <argument pos:start="22:50" pos:end="22:53"><expr pos:start="22:50" pos:end="22:53"><name pos:start="22:50" pos:end="22:53">opts</name></expr></argument>, <argument pos:start="22:56" pos:end="22:60"><expr pos:start="22:56" pos:end="22:60"><name pos:start="22:56" pos:end="22:60">flags</name></expr></argument>, <argument pos:start="22:63" pos:end="22:72"><expr pos:start="22:63" pos:end="22:72"><operator pos:start="22:63" pos:end="22:63">&amp;</operator><name pos:start="22:64" pos:end="22:72">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="24:5" pos:end="36:5"><if pos:start="24:5" pos:end="36:5">if <condition pos:start="24:8" pos:end="24:20">(<expr pos:start="24:9" pos:end="24:19"><operator pos:start="24:9" pos:end="24:9">!</operator><name pos:start="24:10" pos:end="24:19">qemuio_blk</name></expr>)</condition> <block pos:start="24:22" pos:end="36:5">{<block_content pos:start="26:9" pos:end="34:17">

        <expr_stmt pos:start="26:9" pos:end="30:45"><expr pos:start="26:9" pos:end="30:44"><call pos:start="26:9" pos:end="30:44"><name pos:start="26:9" pos:end="26:15">fprintf</name><argument_list pos:start="26:16" pos:end="30:44">(<argument pos:start="26:17" pos:end="26:22"><expr pos:start="26:17" pos:end="26:22"><name pos:start="26:17" pos:end="26:22">stderr</name></expr></argument>, <argument pos:start="26:25" pos:end="26:50"><expr pos:start="26:25" pos:end="26:50"><literal type="string" pos:start="26:25" pos:end="26:50">"%s: can't open%s%s: %s\n"</literal></expr></argument>, <argument pos:start="26:53" pos:end="26:60"><expr pos:start="26:53" pos:end="26:60"><name pos:start="26:53" pos:end="26:60">progname</name></expr></argument>,

                <argument pos:start="28:17" pos:end="28:38"><expr pos:start="28:17" pos:end="28:38"><ternary pos:start="28:17" pos:end="28:38"><condition pos:start="28:17" pos:end="28:22"><expr pos:start="28:17" pos:end="28:20"><name pos:start="28:17" pos:end="28:20">name</name></expr> ?</condition><then pos:start="28:24" pos:end="28:33"> <expr pos:start="28:24" pos:end="28:33"><literal type="string" pos:start="28:24" pos:end="28:33">" device "</literal></expr> </then><else pos:start="28:35" pos:end="28:38">: <expr pos:start="28:37" pos:end="28:38"><literal type="string" pos:start="28:37" pos:end="28:38">""</literal></expr></else></ternary></expr></argument>, <argument pos:start="28:41" pos:end="28:50"><expr pos:start="28:41" pos:end="28:50"><ternary pos:start="28:41" pos:end="28:50"><condition pos:start="28:41" pos:end="28:46"><expr pos:start="28:41" pos:end="28:44"><name pos:start="28:41" pos:end="28:44">name</name></expr> ?</condition><then/><else pos:start="28:47" pos:end="28:50">: <expr pos:start="28:49" pos:end="28:50"><literal type="string" pos:start="28:49" pos:end="28:50">""</literal></expr></else></ternary></expr></argument>,

                <argument pos:start="30:17" pos:end="30:43"><expr pos:start="30:17" pos:end="30:43"><call pos:start="30:17" pos:end="30:43"><name pos:start="30:17" pos:end="30:32">error_get_pretty</name><argument_list pos:start="30:33" pos:end="30:43">(<argument pos:start="30:34" pos:end="30:42"><expr pos:start="30:34" pos:end="30:42"><name pos:start="30:34" pos:end="30:42">local_err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="32:9" pos:end="32:30"><expr pos:start="32:9" pos:end="32:29"><call pos:start="32:9" pos:end="32:29"><name pos:start="32:9" pos:end="32:18">error_free</name><argument_list pos:start="32:19" pos:end="32:29">(<argument pos:start="32:20" pos:end="32:28"><expr pos:start="32:20" pos:end="32:28"><name pos:start="32:20" pos:end="32:28">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="34:9" pos:end="34:17">return <expr pos:start="34:16" pos:end="34:16"><literal type="number" pos:start="34:16" pos:end="34:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="40:5" pos:end="40:28"><expr pos:start="40:5" pos:end="40:27"><name pos:start="40:5" pos:end="40:6">bs</name> <operator pos:start="40:8" pos:end="40:8">=</operator> <call pos:start="40:10" pos:end="40:27"><name pos:start="40:10" pos:end="40:15">blk_bs</name><argument_list pos:start="40:16" pos:end="40:27">(<argument pos:start="40:17" pos:end="40:26"><expr pos:start="40:17" pos:end="40:26"><name pos:start="40:17" pos:end="40:26">qemuio_blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="42:5" pos:end="64:5"><if pos:start="42:5" pos:end="64:5">if <condition pos:start="42:8" pos:end="42:30">(<expr pos:start="42:9" pos:end="42:29"><call pos:start="42:9" pos:end="42:29"><name pos:start="42:9" pos:end="42:25">bdrv_is_encrypted</name><argument_list pos:start="42:26" pos:end="42:29">(<argument pos:start="42:27" pos:end="42:28"><expr pos:start="42:27" pos:end="42:28"><name pos:start="42:27" pos:end="42:28">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="42:32" pos:end="64:5">{<block_content pos:start="44:9" pos:end="62:9">

        <decl_stmt pos:start="44:9" pos:end="44:27"><decl pos:start="44:9" pos:end="44:26"><type pos:start="44:9" pos:end="44:12"><name pos:start="44:9" pos:end="44:12">char</name></type> <name pos:start="44:14" pos:end="44:26"><name pos:start="44:14" pos:end="44:21">password</name><index pos:start="44:22" pos:end="44:26">[<expr pos:start="44:23" pos:end="44:25"><literal type="number" pos:start="44:23" pos:end="44:25">256</literal></expr>]</index></name></decl>;</decl_stmt>

        <expr_stmt pos:start="46:9" pos:end="46:56"><expr pos:start="46:9" pos:end="46:55"><call pos:start="46:9" pos:end="46:55"><name pos:start="46:9" pos:end="46:14">printf</name><argument_list pos:start="46:15" pos:end="46:55">(<argument pos:start="46:16" pos:end="46:48"><expr pos:start="46:16" pos:end="46:48"><literal type="string" pos:start="46:16" pos:end="46:48">"Disk image '%s' is encrypted.\n"</literal></expr></argument>, <argument pos:start="46:51" pos:end="46:54"><expr pos:start="46:51" pos:end="46:54"><name pos:start="46:51" pos:end="46:54">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="48:9" pos:end="54:9"><if pos:start="48:9" pos:end="54:9">if <condition pos:start="48:12" pos:end="48:63">(<expr pos:start="48:13" pos:end="48:62"><call pos:start="48:13" pos:end="48:58"><name pos:start="48:13" pos:end="48:30">qemu_read_password</name><argument_list pos:start="48:31" pos:end="48:58">(<argument pos:start="48:32" pos:end="48:39"><expr pos:start="48:32" pos:end="48:39"><name pos:start="48:32" pos:end="48:39">password</name></expr></argument>, <argument pos:start="48:42" pos:end="48:57"><expr pos:start="48:42" pos:end="48:57"><sizeof pos:start="48:42" pos:end="48:57">sizeof<argument_list pos:start="48:48" pos:end="48:57">(<argument pos:start="48:49" pos:end="48:56"><expr pos:start="48:49" pos:end="48:56"><name pos:start="48:49" pos:end="48:56">password</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="48:60" pos:end="48:60">&lt;</operator> <literal type="number" pos:start="48:62" pos:end="48:62">0</literal></expr>)</condition> <block pos:start="48:65" pos:end="54:9">{<block_content pos:start="50:13" pos:end="52:23">

            <expr_stmt pos:start="50:13" pos:end="50:46"><expr pos:start="50:13" pos:end="50:45"><call pos:start="50:13" pos:end="50:45"><name pos:start="50:13" pos:end="50:24">error_report</name><argument_list pos:start="50:25" pos:end="50:45">(<argument pos:start="50:26" pos:end="50:44"><expr pos:start="50:26" pos:end="50:44"><literal type="string" pos:start="50:26" pos:end="50:44">"No password given"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="52:13" pos:end="52:23">goto <name pos:start="52:18" pos:end="52:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="56:9" pos:end="62:9"><if pos:start="56:9" pos:end="62:9">if <condition pos:start="56:12" pos:end="56:43">(<expr pos:start="56:13" pos:end="56:42"><call pos:start="56:13" pos:end="56:38"><name pos:start="56:13" pos:end="56:24">bdrv_set_key</name><argument_list pos:start="56:25" pos:end="56:38">(<argument pos:start="56:26" pos:end="56:27"><expr pos:start="56:26" pos:end="56:27"><name pos:start="56:26" pos:end="56:27">bs</name></expr></argument>, <argument pos:start="56:30" pos:end="56:37"><expr pos:start="56:30" pos:end="56:37"><name pos:start="56:30" pos:end="56:37">password</name></expr></argument>)</argument_list></call> <operator pos:start="56:40" pos:end="56:40">&lt;</operator> <literal type="number" pos:start="56:42" pos:end="56:42">0</literal></expr>)</condition> <block pos:start="56:45" pos:end="62:9">{<block_content pos:start="58:13" pos:end="60:23">

            <expr_stmt pos:start="58:13" pos:end="58:45"><expr pos:start="58:13" pos:end="58:44"><call pos:start="58:13" pos:end="58:44"><name pos:start="58:13" pos:end="58:24">error_report</name><argument_list pos:start="58:25" pos:end="58:44">(<argument pos:start="58:26" pos:end="58:43"><expr pos:start="58:26" pos:end="58:43"><literal type="string" pos:start="58:26" pos:end="58:43">"invalid password"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="60:13" pos:end="60:23">goto <name pos:start="60:18" pos:end="60:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>





    <return pos:start="70:5" pos:end="70:13">return <expr pos:start="70:12" pos:end="70:12"><literal type="number" pos:start="70:12" pos:end="70:12">0</literal></expr>;</return>



 <label pos:start="74:2" pos:end="74:7"><name pos:start="74:2" pos:end="74:6">error</name>:</label>

    <expr_stmt pos:start="76:5" pos:end="76:26"><expr pos:start="76:5" pos:end="76:25"><call pos:start="76:5" pos:end="76:25"><name pos:start="76:5" pos:end="76:13">blk_unref</name><argument_list pos:start="76:14" pos:end="76:25">(<argument pos:start="76:15" pos:end="76:24"><expr pos:start="76:15" pos:end="76:24"><name pos:start="76:15" pos:end="76:24">qemuio_blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="78:5" pos:end="78:22"><expr pos:start="78:5" pos:end="78:21"><name pos:start="78:5" pos:end="78:14">qemuio_blk</name> <operator pos:start="78:16" pos:end="78:16">=</operator> <name pos:start="78:18" pos:end="78:21">NULL</name></expr>;</expr_stmt>

    <return pos:start="80:5" pos:end="80:13">return <expr pos:start="80:12" pos:end="80:12"><literal type="number" pos:start="80:12" pos:end="80:12">1</literal></expr>;</return>

</block_content>}</block></function></unit>
