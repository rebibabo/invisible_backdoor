<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9898.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:12"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:12">pid_t</name></type> <name pos:start="1:14" pos:end="1:27">qtest_qemu_pid</name><parameter_list pos:start="1:28" pos:end="1:42">(<parameter pos:start="1:29" pos:end="1:41"><decl pos:start="1:29" pos:end="1:41"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:38">QTestState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:15">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">FILE</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:11">f</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:21"><name pos:start="7:10" pos:end="7:15">buffer</name><index pos:start="7:16" pos:end="7:21">[<expr pos:start="7:17" pos:end="7:20"><literal type="number" pos:start="7:17" pos:end="7:20">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:9">pid_t</name></type> <name pos:start="9:11" pos:end="9:13">pid</name> <init pos:start="9:15" pos:end="9:18">= <expr pos:start="9:17" pos:end="9:18"><operator pos:start="9:17" pos:end="9:17">-</operator><literal type="number" pos:start="9:18" pos:end="9:18">1</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:32"><expr pos:start="13:5" pos:end="13:31"><name pos:start="13:5" pos:end="13:5">f</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <call pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:13">fopen</name><argument_list pos:start="13:14" pos:end="13:31">(<argument pos:start="13:15" pos:end="13:25"><expr pos:start="13:15" pos:end="13:25"><name pos:start="13:15" pos:end="13:25"><name pos:start="13:15" pos:end="13:15">s</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:25">pid_file</name></name></expr></argument>, <argument pos:start="13:28" pos:end="13:30"><expr pos:start="13:28" pos:end="13:30"><literal type="string" pos:start="13:28" pos:end="13:30">"r"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="25:5"><if pos:start="15:5" pos:end="25:5">if <condition pos:start="15:8" pos:end="15:10">(<expr pos:start="15:9" pos:end="15:9"><name pos:start="15:9" pos:end="15:9">f</name></expr>)</condition> <block pos:start="15:12" pos:end="25:5">{<block_content pos:start="17:9" pos:end="23:18">

        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:45">(<expr pos:start="17:13" pos:end="17:44"><call pos:start="17:13" pos:end="17:44"><name pos:start="17:13" pos:end="17:17">fgets</name><argument_list pos:start="17:18" pos:end="17:44">(<argument pos:start="17:19" pos:end="17:24"><expr pos:start="17:19" pos:end="17:24"><name pos:start="17:19" pos:end="17:24">buffer</name></expr></argument>, <argument pos:start="17:27" pos:end="17:40"><expr pos:start="17:27" pos:end="17:40"><sizeof pos:start="17:27" pos:end="17:40">sizeof<argument_list pos:start="17:33" pos:end="17:40">(<argument pos:start="17:34" pos:end="17:39"><expr pos:start="17:34" pos:end="17:39"><name pos:start="17:34" pos:end="17:39">buffer</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="17:43" pos:end="17:43"><expr pos:start="17:43" pos:end="17:43"><name pos:start="17:43" pos:end="17:43">f</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:47" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:31">

            <expr_stmt pos:start="19:13" pos:end="19:31"><expr pos:start="19:13" pos:end="19:30"><name pos:start="19:13" pos:end="19:15">pid</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <call pos:start="19:19" pos:end="19:30"><name pos:start="19:19" pos:end="19:22">atoi</name><argument_list pos:start="19:23" pos:end="19:30">(<argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><name pos:start="19:24" pos:end="19:29">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:18"><expr pos:start="23:9" pos:end="23:17"><call pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:14">fclose</name><argument_list pos:start="23:15" pos:end="23:17">(<argument pos:start="23:16" pos:end="23:16"><expr pos:start="23:16" pos:end="23:16"><name pos:start="23:16" pos:end="23:16">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="27:5" pos:end="27:15">return <expr pos:start="27:12" pos:end="27:14"><name pos:start="27:12" pos:end="27:14">pid</name></expr>;</return>

</block_content>}</block></function>
</unit>
