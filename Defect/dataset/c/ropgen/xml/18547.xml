<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18547.c" pos:tabs="8"><function pos:start="1:1" pos:end="251:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">ffm_read_header</name><parameter_list pos:start="1:27" pos:end="1:46">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="251:1">{<block_content pos:start="5:5" pos:end="249:14">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">FFMContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">ffm</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVIOContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">pb</name> <init pos:start="9:21" pos:end="9:27">= <expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">AVCodecContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:25">codec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:21">nb_streams</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:16">tag</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:16">/* header */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:24"><expr pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:7">tag</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:23"><name pos:start="21:11" pos:end="21:19">avio_rl32</name><argument_list pos:start="21:20" pos:end="21:23">(<argument pos:start="21:21" pos:end="21:22"><expr pos:start="21:21" pos:end="21:22"><name pos:start="21:21" pos:end="21:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:35"><if pos:start="23:5" pos:end="25:35">if <condition pos:start="23:8" pos:end="23:41">(<expr pos:start="23:9" pos:end="23:40"><name pos:start="23:9" pos:end="23:11">tag</name> <operator pos:start="23:13" pos:end="23:14">==</operator> <call pos:start="23:16" pos:end="23:40"><name pos:start="23:16" pos:end="23:20">MKTAG</name><argument_list pos:start="23:21" pos:end="23:40">(<argument pos:start="23:22" pos:end="23:24"><expr pos:start="23:22" pos:end="23:24"><literal type="char" pos:start="23:22" pos:end="23:24">'F'</literal></expr></argument>, <argument pos:start="23:27" pos:end="23:29"><expr pos:start="23:27" pos:end="23:29"><literal type="char" pos:start="23:27" pos:end="23:29">'F'</literal></expr></argument>, <argument pos:start="23:32" pos:end="23:34"><expr pos:start="23:32" pos:end="23:34"><literal type="char" pos:start="23:32" pos:end="23:34">'M'</literal></expr></argument>, <argument pos:start="23:37" pos:end="23:39"><expr pos:start="23:37" pos:end="23:39"><literal type="char" pos:start="23:37" pos:end="23:39">'2'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:35"><block_content pos:start="25:9" pos:end="25:35">

        <return pos:start="25:9" pos:end="25:35">return <expr pos:start="25:16" pos:end="25:34"><call pos:start="25:16" pos:end="25:34"><name pos:start="25:16" pos:end="25:31">ffm2_read_header</name><argument_list pos:start="25:32" pos:end="25:34">(<argument pos:start="25:33" pos:end="25:33"><expr pos:start="25:33" pos:end="25:33"><name pos:start="25:33" pos:end="25:33">s</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="29:18"><if pos:start="27:5" pos:end="29:18">if <condition pos:start="27:8" pos:end="27:41">(<expr pos:start="27:9" pos:end="27:40"><name pos:start="27:9" pos:end="27:11">tag</name> <operator pos:start="27:13" pos:end="27:14">!=</operator> <call pos:start="27:16" pos:end="27:40"><name pos:start="27:16" pos:end="27:20">MKTAG</name><argument_list pos:start="27:21" pos:end="27:40">(<argument pos:start="27:22" pos:end="27:24"><expr pos:start="27:22" pos:end="27:24"><literal type="char" pos:start="27:22" pos:end="27:24">'F'</literal></expr></argument>, <argument pos:start="27:27" pos:end="27:29"><expr pos:start="27:27" pos:end="27:29"><literal type="char" pos:start="27:27" pos:end="27:29">'F'</literal></expr></argument>, <argument pos:start="27:32" pos:end="27:34"><expr pos:start="27:32" pos:end="27:34"><literal type="char" pos:start="27:32" pos:end="27:34">'M'</literal></expr></argument>, <argument pos:start="27:37" pos:end="27:39"><expr pos:start="27:37" pos:end="27:39"><literal type="char" pos:start="27:37" pos:end="27:39">'1'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:18"><block_content pos:start="29:9" pos:end="29:18">

        <goto pos:start="29:9" pos:end="29:18">goto <name pos:start="29:14" pos:end="29:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:37"><expr pos:start="31:5" pos:end="31:36"><name pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:7">ffm</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:20">packet_size</name></name> <operator pos:start="31:22" pos:end="31:22">=</operator> <call pos:start="31:24" pos:end="31:36"><name pos:start="31:24" pos:end="31:32">avio_rb32</name><argument_list pos:start="31:33" pos:end="31:36">(<argument pos:start="31:34" pos:end="31:35"><expr pos:start="31:34" pos:end="31:35"><name pos:start="31:34" pos:end="31:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="35:18"><if pos:start="33:5" pos:end="35:18">if <condition pos:start="33:8" pos:end="33:44">(<expr pos:start="33:9" pos:end="33:43"><name pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:11">ffm</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:24">packet_size</name></name> <operator pos:start="33:26" pos:end="33:27">!=</operator> <name pos:start="33:29" pos:end="33:43">FFM_PACKET_SIZE</name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:18"><block_content pos:start="35:9" pos:end="35:18">

        <goto pos:start="35:9" pos:end="35:18">goto <name pos:start="35:14" pos:end="35:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:37"><expr pos:start="37:5" pos:end="37:36"><name pos:start="37:5" pos:end="37:20"><name pos:start="37:5" pos:end="37:7">ffm</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:20">write_index</name></name> <operator pos:start="37:22" pos:end="37:22">=</operator> <call pos:start="37:24" pos:end="37:36"><name pos:start="37:24" pos:end="37:32">avio_rb64</name><argument_list pos:start="37:33" pos:end="37:36">(<argument pos:start="37:34" pos:end="37:35"><expr pos:start="37:34" pos:end="37:35"><name pos:start="37:34" pos:end="37:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="39:5" pos:end="39:27">/* get also filesize */</comment>

    <if_stmt pos:start="41:5" pos:end="53:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:21">(<expr pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:10">pb</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:20">seekable</name></name></expr>)</condition> <block pos:start="41:23" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:34">

        <expr_stmt pos:start="43:9" pos:end="43:39"><expr pos:start="43:9" pos:end="43:38"><name pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:11">ffm</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:22">file_size</name></name> <operator pos:start="43:24" pos:end="43:24">=</operator> <call pos:start="43:26" pos:end="43:38"><name pos:start="43:26" pos:end="43:34">avio_size</name><argument_list pos:start="43:35" pos:end="43:38">(<argument pos:start="43:36" pos:end="43:37"><expr pos:start="43:36" pos:end="43:37"><name pos:start="43:36" pos:end="43:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="47:34"><if pos:start="45:9" pos:end="47:34">if <condition pos:start="45:12" pos:end="45:34">(<expr pos:start="45:13" pos:end="45:33"><name pos:start="45:13" pos:end="45:28"><name pos:start="45:13" pos:end="45:15">ffm</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:28">write_index</name></name> <operator pos:start="45:30" pos:end="45:31">&amp;&amp;</operator> <literal type="number" pos:start="45:33" pos:end="45:33">0</literal></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:34"><block_content pos:start="47:13" pos:end="47:34">

            <expr_stmt pos:start="47:13" pos:end="47:34"><expr pos:start="47:13" pos:end="47:33"><call pos:start="47:13" pos:end="47:33"><name pos:start="47:13" pos:end="47:30">adjust_write_index</name><argument_list pos:start="47:31" pos:end="47:33">(<argument pos:start="47:32" pos:end="47:32"><expr pos:start="47:32" pos:end="47:32"><name pos:start="47:32" pos:end="47:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="53:5">else <block pos:start="49:12" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:49">

        <expr_stmt pos:start="51:9" pos:end="51:49"><expr pos:start="51:9" pos:end="51:48"><name pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:11">ffm</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:22">file_size</name></name> <operator pos:start="51:24" pos:end="51:24">=</operator> <operator pos:start="51:26" pos:end="51:26">(</operator><call pos:start="51:27" pos:end="51:37"><name pos:start="51:27" pos:end="51:34">UINT64_C</name><argument_list pos:start="51:35" pos:end="51:37">(<argument pos:start="51:36" pos:end="51:36"><expr pos:start="51:36" pos:end="51:36"><literal type="number" pos:start="51:36" pos:end="51:36">1</literal></expr></argument>)</argument_list></call> <operator pos:start="51:39" pos:end="51:40">&lt;&lt;</operator> <literal type="number" pos:start="51:42" pos:end="51:43">63</literal><operator pos:start="51:44" pos:end="51:44">)</operator> <operator pos:start="51:46" pos:end="51:46">-</operator> <literal type="number" pos:start="51:48" pos:end="51:48">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:31"><expr pos:start="57:5" pos:end="57:30"><name pos:start="57:5" pos:end="57:14">nb_streams</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <call pos:start="57:18" pos:end="57:30"><name pos:start="57:18" pos:end="57:26">avio_rb32</name><argument_list pos:start="57:27" pos:end="57:30">(<argument pos:start="57:28" pos:end="57:29"><expr pos:start="57:28" pos:end="57:29"><name pos:start="57:28" pos:end="57:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:18"><expr pos:start="59:5" pos:end="59:17"><call pos:start="59:5" pos:end="59:17"><name pos:start="59:5" pos:end="59:13">avio_rb32</name><argument_list pos:start="59:14" pos:end="59:17">(<argument pos:start="59:15" pos:end="59:16"><expr pos:start="59:15" pos:end="59:16"><name pos:start="59:15" pos:end="59:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="59:20" pos:end="59:38">/* total bitrate */</comment>

    <comment type="block" pos:start="61:5" pos:end="61:26">/* read each stream */</comment>

    <for pos:start="63:5" pos:end="217:5">for<control pos:start="63:8" pos:end="63:29">(<init pos:start="63:9" pos:end="63:12"><expr pos:start="63:9" pos:end="63:11"><name pos:start="63:9" pos:end="63:9">i</name><operator pos:start="63:10" pos:end="63:10">=</operator><literal type="number" pos:start="63:11" pos:end="63:11">0</literal></expr>;</init><condition pos:start="63:13" pos:end="63:25"><expr pos:start="63:13" pos:end="63:24"><name pos:start="63:13" pos:end="63:13">i</name><operator pos:start="63:14" pos:end="63:14">&lt;</operator><name pos:start="63:15" pos:end="63:24">nb_streams</name></expr>;</condition><incr pos:start="63:26" pos:end="63:28"><expr pos:start="63:26" pos:end="63:28"><name pos:start="63:26" pos:end="63:26">i</name><operator pos:start="63:27" pos:end="63:28">++</operator></expr></incr>)</control> <block pos:start="63:31" pos:end="217:5">{<block_content pos:start="65:9" pos:end="215:9">

        <decl_stmt pos:start="65:9" pos:end="65:28"><decl pos:start="65:9" pos:end="65:27"><type pos:start="65:9" pos:end="65:12"><name pos:start="65:9" pos:end="65:12">char</name></type> <name pos:start="65:14" pos:end="65:27"><name pos:start="65:14" pos:end="65:22">rc_eq_buf</name><index pos:start="65:23" pos:end="65:27">[<expr pos:start="65:24" pos:end="65:26"><literal type="number" pos:start="65:24" pos:end="65:26">128</literal></expr>]</index></name></decl>;</decl_stmt>



        <expr_stmt pos:start="69:9" pos:end="69:42"><expr pos:start="69:9" pos:end="69:41"><name pos:start="69:9" pos:end="69:10">st</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <call pos:start="69:14" pos:end="69:41"><name pos:start="69:14" pos:end="69:32">avformat_new_stream</name><argument_list pos:start="69:33" pos:end="69:41">(<argument pos:start="69:34" pos:end="69:34"><expr pos:start="69:34" pos:end="69:34"><name pos:start="69:34" pos:end="69:34">s</name></expr></argument>, <argument pos:start="69:37" pos:end="69:40"><expr pos:start="69:37" pos:end="69:40"><name pos:start="69:37" pos:end="69:40">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="73:22"><if pos:start="71:9" pos:end="73:22">if <condition pos:start="71:12" pos:end="71:16">(<expr pos:start="71:13" pos:end="71:15"><operator pos:start="71:13" pos:end="71:13">!</operator><name pos:start="71:14" pos:end="71:15">st</name></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:22"><block_content pos:start="73:13" pos:end="73:22">

            <goto pos:start="73:13" pos:end="73:22">goto <name pos:start="73:18" pos:end="73:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:48"><expr pos:start="77:9" pos:end="77:47"><call pos:start="77:9" pos:end="77:47"><name pos:start="77:9" pos:end="77:27">avpriv_set_pts_info</name><argument_list pos:start="77:28" pos:end="77:47">(<argument pos:start="77:29" pos:end="77:30"><expr pos:start="77:29" pos:end="77:30"><name pos:start="77:29" pos:end="77:30">st</name></expr></argument>, <argument pos:start="77:33" pos:end="77:34"><expr pos:start="77:33" pos:end="77:34"><literal type="number" pos:start="77:33" pos:end="77:34">64</literal></expr></argument>, <argument pos:start="77:37" pos:end="77:37"><expr pos:start="77:37" pos:end="77:37"><literal type="number" pos:start="77:37" pos:end="77:37">1</literal></expr></argument>, <argument pos:start="77:40" pos:end="77:46"><expr pos:start="77:40" pos:end="77:46"><literal type="number" pos:start="77:40" pos:end="77:46">1000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:26"><expr pos:start="81:9" pos:end="81:25"><name pos:start="81:9" pos:end="81:13">codec</name> <operator pos:start="81:15" pos:end="81:15">=</operator> <name pos:start="81:17" pos:end="81:25"><name pos:start="81:17" pos:end="81:18">st</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:25">codec</name></name></expr>;</expr_stmt>

        <comment type="block" pos:start="83:9" pos:end="83:26">/* generic info */</comment>

        <expr_stmt pos:start="85:9" pos:end="85:40"><expr pos:start="85:9" pos:end="85:39"><name pos:start="85:9" pos:end="85:23"><name pos:start="85:9" pos:end="85:13">codec</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:23">codec_id</name></name> <operator pos:start="85:25" pos:end="85:25">=</operator> <call pos:start="85:27" pos:end="85:39"><name pos:start="85:27" pos:end="85:35">avio_rb32</name><argument_list pos:start="85:36" pos:end="85:39">(<argument pos:start="85:37" pos:end="85:38"><expr pos:start="85:37" pos:end="85:38"><name pos:start="85:37" pos:end="85:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:40"><expr pos:start="87:9" pos:end="87:39"><name pos:start="87:9" pos:end="87:25"><name pos:start="87:9" pos:end="87:13">codec</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:25">codec_type</name></name> <operator pos:start="87:27" pos:end="87:27">=</operator> <call pos:start="87:29" pos:end="87:39"><name pos:start="87:29" pos:end="87:35">avio_r8</name><argument_list pos:start="87:36" pos:end="87:39">(<argument pos:start="87:37" pos:end="87:38"><expr pos:start="87:37" pos:end="87:38"><name pos:start="87:37" pos:end="87:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="87:42" pos:end="87:57">/* codec_type */</comment>

        <expr_stmt pos:start="89:9" pos:end="89:40"><expr pos:start="89:9" pos:end="89:39"><name pos:start="89:9" pos:end="89:23"><name pos:start="89:9" pos:end="89:13">codec</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:23">bit_rate</name></name> <operator pos:start="89:25" pos:end="89:25">=</operator> <call pos:start="89:27" pos:end="89:39"><name pos:start="89:27" pos:end="89:35">avio_rb32</name><argument_list pos:start="89:36" pos:end="89:39">(<argument pos:start="89:37" pos:end="89:38"><expr pos:start="89:37" pos:end="89:38"><name pos:start="89:37" pos:end="89:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:37"><expr pos:start="91:9" pos:end="91:36"><name pos:start="91:9" pos:end="91:20"><name pos:start="91:9" pos:end="91:13">codec</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:20">flags</name></name> <operator pos:start="91:22" pos:end="91:22">=</operator> <call pos:start="91:24" pos:end="91:36"><name pos:start="91:24" pos:end="91:32">avio_rb32</name><argument_list pos:start="91:33" pos:end="91:36">(<argument pos:start="91:34" pos:end="91:35"><expr pos:start="91:34" pos:end="91:35"><name pos:start="91:34" pos:end="91:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:38"><expr pos:start="93:9" pos:end="93:37"><name pos:start="93:9" pos:end="93:21"><name pos:start="93:9" pos:end="93:13">codec</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:21">flags2</name></name> <operator pos:start="93:23" pos:end="93:23">=</operator> <call pos:start="93:25" pos:end="93:37"><name pos:start="93:25" pos:end="93:33">avio_rb32</name><argument_list pos:start="93:34" pos:end="93:37">(<argument pos:start="93:35" pos:end="93:36"><expr pos:start="93:35" pos:end="93:36"><name pos:start="93:35" pos:end="93:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:37"><expr pos:start="95:9" pos:end="95:36"><name pos:start="95:9" pos:end="95:20"><name pos:start="95:9" pos:end="95:13">codec</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:20">debug</name></name> <operator pos:start="95:22" pos:end="95:22">=</operator> <call pos:start="95:24" pos:end="95:36"><name pos:start="95:24" pos:end="95:32">avio_rb32</name><argument_list pos:start="95:33" pos:end="95:36">(<argument pos:start="95:34" pos:end="95:35"><expr pos:start="95:34" pos:end="95:35"><name pos:start="95:34" pos:end="95:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="97:9" pos:end="97:27">/* specific info */</comment>

        <switch pos:start="99:9" pos:end="207:9">switch<condition pos:start="99:15" pos:end="99:33">(<expr pos:start="99:16" pos:end="99:32"><name pos:start="99:16" pos:end="99:32"><name pos:start="99:16" pos:end="99:20">codec</name><operator pos:start="99:21" pos:end="99:22">-&gt;</operator><name pos:start="99:23" pos:end="99:32">codec_type</name></name></expr>)</condition> <block pos:start="99:35" pos:end="207:9">{<block_content pos:start="101:9" pos:end="205:22">

        <case pos:start="101:9" pos:end="101:32">case <expr pos:start="101:14" pos:end="101:31"><name pos:start="101:14" pos:end="101:31">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

            <expr_stmt pos:start="103:13" pos:end="103:49"><expr pos:start="103:13" pos:end="103:48"><name pos:start="103:13" pos:end="103:32"><name pos:start="103:13" pos:end="103:17">codec</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:28">time_base</name><operator pos:start="103:29" pos:end="103:29">.</operator><name pos:start="103:30" pos:end="103:32">num</name></name> <operator pos:start="103:34" pos:end="103:34">=</operator> <call pos:start="103:36" pos:end="103:48"><name pos:start="103:36" pos:end="103:44">avio_rb32</name><argument_list pos:start="103:45" pos:end="103:48">(<argument pos:start="103:46" pos:end="103:47"><expr pos:start="103:46" pos:end="103:47"><name pos:start="103:46" pos:end="103:47">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:49"><expr pos:start="105:13" pos:end="105:48"><name pos:start="105:13" pos:end="105:32"><name pos:start="105:13" pos:end="105:17">codec</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:28">time_base</name><operator pos:start="105:29" pos:end="105:29">.</operator><name pos:start="105:30" pos:end="105:32">den</name></name> <operator pos:start="105:34" pos:end="105:34">=</operator> <call pos:start="105:36" pos:end="105:48"><name pos:start="105:36" pos:end="105:44">avio_rb32</name><argument_list pos:start="105:45" pos:end="105:48">(<argument pos:start="105:46" pos:end="105:47"><expr pos:start="105:46" pos:end="105:47"><name pos:start="105:46" pos:end="105:47">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:41"><expr pos:start="107:13" pos:end="107:40"><name pos:start="107:13" pos:end="107:24"><name pos:start="107:13" pos:end="107:17">codec</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:24">width</name></name> <operator pos:start="107:26" pos:end="107:26">=</operator> <call pos:start="107:28" pos:end="107:40"><name pos:start="107:28" pos:end="107:36">avio_rb16</name><argument_list pos:start="107:37" pos:end="107:40">(<argument pos:start="107:38" pos:end="107:39"><expr pos:start="107:38" pos:end="107:39"><name pos:start="107:38" pos:end="107:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:42"><expr pos:start="109:13" pos:end="109:41"><name pos:start="109:13" pos:end="109:25"><name pos:start="109:13" pos:end="109:17">codec</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:25">height</name></name> <operator pos:start="109:27" pos:end="109:27">=</operator> <call pos:start="109:29" pos:end="109:41"><name pos:start="109:29" pos:end="109:37">avio_rb16</name><argument_list pos:start="109:38" pos:end="109:41">(<argument pos:start="109:39" pos:end="109:40"><expr pos:start="109:39" pos:end="109:40"><name pos:start="109:39" pos:end="109:40">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:44"><expr pos:start="111:13" pos:end="111:43"><name pos:start="111:13" pos:end="111:27"><name pos:start="111:13" pos:end="111:17">codec</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:27">gop_size</name></name> <operator pos:start="111:29" pos:end="111:29">=</operator> <call pos:start="111:31" pos:end="111:43"><name pos:start="111:31" pos:end="111:39">avio_rb16</name><argument_list pos:start="111:40" pos:end="111:43">(<argument pos:start="111:41" pos:end="111:42"><expr pos:start="111:41" pos:end="111:42"><name pos:start="111:41" pos:end="111:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:43"><expr pos:start="113:13" pos:end="113:42"><name pos:start="113:13" pos:end="113:26"><name pos:start="113:13" pos:end="113:17">codec</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:26">pix_fmt</name></name> <operator pos:start="113:28" pos:end="113:28">=</operator> <call pos:start="113:30" pos:end="113:42"><name pos:start="113:30" pos:end="113:38">avio_rb32</name><argument_list pos:start="113:39" pos:end="113:42">(<argument pos:start="113:40" pos:end="113:41"><expr pos:start="113:40" pos:end="113:41"><name pos:start="113:40" pos:end="113:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:38"><expr pos:start="115:13" pos:end="115:37"><name pos:start="115:13" pos:end="115:23"><name pos:start="115:13" pos:end="115:17">codec</name><operator pos:start="115:18" pos:end="115:19">-&gt;</operator><name pos:start="115:20" pos:end="115:23">qmin</name></name> <operator pos:start="115:25" pos:end="115:25">=</operator> <call pos:start="115:27" pos:end="115:37"><name pos:start="115:27" pos:end="115:33">avio_r8</name><argument_list pos:start="115:34" pos:end="115:37">(<argument pos:start="115:35" pos:end="115:36"><expr pos:start="115:35" pos:end="115:36"><name pos:start="115:35" pos:end="115:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:38"><expr pos:start="117:13" pos:end="117:37"><name pos:start="117:13" pos:end="117:23"><name pos:start="117:13" pos:end="117:17">codec</name><operator pos:start="117:18" pos:end="117:19">-&gt;</operator><name pos:start="117:20" pos:end="117:23">qmax</name></name> <operator pos:start="117:25" pos:end="117:25">=</operator> <call pos:start="117:27" pos:end="117:37"><name pos:start="117:27" pos:end="117:33">avio_r8</name><argument_list pos:start="117:34" pos:end="117:37">(<argument pos:start="117:35" pos:end="117:36"><expr pos:start="117:35" pos:end="117:36"><name pos:start="117:35" pos:end="117:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:43"><expr pos:start="119:13" pos:end="119:42"><name pos:start="119:13" pos:end="119:28"><name pos:start="119:13" pos:end="119:17">codec</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:28">max_qdiff</name></name> <operator pos:start="119:30" pos:end="119:30">=</operator> <call pos:start="119:32" pos:end="119:42"><name pos:start="119:32" pos:end="119:38">avio_r8</name><argument_list pos:start="119:39" pos:end="119:42">(<argument pos:start="119:40" pos:end="119:41"><expr pos:start="119:40" pos:end="119:41"><name pos:start="119:40" pos:end="119:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:55"><expr pos:start="121:13" pos:end="121:54"><name pos:start="121:13" pos:end="121:28"><name pos:start="121:13" pos:end="121:17">codec</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:28">qcompress</name></name> <operator pos:start="121:30" pos:end="121:30">=</operator> <call pos:start="121:32" pos:end="121:44"><name pos:start="121:32" pos:end="121:40">avio_rb16</name><argument_list pos:start="121:41" pos:end="121:44">(<argument pos:start="121:42" pos:end="121:43"><expr pos:start="121:42" pos:end="121:43"><name pos:start="121:42" pos:end="121:43">pb</name></expr></argument>)</argument_list></call> <operator pos:start="121:46" pos:end="121:46">/</operator> <literal type="number" pos:start="121:48" pos:end="121:54">10000.0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:51"><expr pos:start="123:13" pos:end="123:50"><name pos:start="123:13" pos:end="123:24"><name pos:start="123:13" pos:end="123:17">codec</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:24">qblur</name></name> <operator pos:start="123:26" pos:end="123:26">=</operator> <call pos:start="123:28" pos:end="123:40"><name pos:start="123:28" pos:end="123:36">avio_rb16</name><argument_list pos:start="123:37" pos:end="123:40">(<argument pos:start="123:38" pos:end="123:39"><expr pos:start="123:38" pos:end="123:39"><name pos:start="123:38" pos:end="123:39">pb</name></expr></argument>)</argument_list></call> <operator pos:start="123:42" pos:end="123:42">/</operator> <literal type="number" pos:start="123:44" pos:end="123:50">10000.0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:54"><expr pos:start="125:13" pos:end="125:53"><name pos:start="125:13" pos:end="125:37"><name pos:start="125:13" pos:end="125:17">codec</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:37">bit_rate_tolerance</name></name> <operator pos:start="125:39" pos:end="125:39">=</operator> <call pos:start="125:41" pos:end="125:53"><name pos:start="125:41" pos:end="125:49">avio_rb32</name><argument_list pos:start="125:50" pos:end="125:53">(<argument pos:start="125:51" pos:end="125:52"><expr pos:start="125:51" pos:end="125:52"><name pos:start="125:51" pos:end="125:52">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:68"><expr pos:start="127:13" pos:end="127:67"><call pos:start="127:13" pos:end="127:67"><name pos:start="127:13" pos:end="127:24">avio_get_str</name><argument_list pos:start="127:25" pos:end="127:67">(<argument pos:start="127:26" pos:end="127:27"><expr pos:start="127:26" pos:end="127:27"><name pos:start="127:26" pos:end="127:27">pb</name></expr></argument>, <argument pos:start="127:30" pos:end="127:36"><expr pos:start="127:30" pos:end="127:36"><name pos:start="127:30" pos:end="127:36">INT_MAX</name></expr></argument>, <argument pos:start="127:39" pos:end="127:47"><expr pos:start="127:39" pos:end="127:47"><name pos:start="127:39" pos:end="127:47">rc_eq_buf</name></expr></argument>, <argument pos:start="127:50" pos:end="127:66"><expr pos:start="127:50" pos:end="127:66"><sizeof pos:start="127:50" pos:end="127:66">sizeof<argument_list pos:start="127:56" pos:end="127:66">(<argument pos:start="127:57" pos:end="127:65"><expr pos:start="127:57" pos:end="127:65"><name pos:start="127:57" pos:end="127:65">rc_eq_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:48"><expr pos:start="129:13" pos:end="129:47"><name pos:start="129:13" pos:end="129:24"><name pos:start="129:13" pos:end="129:17">codec</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:24">rc_eq</name></name> <operator pos:start="129:26" pos:end="129:26">=</operator> <call pos:start="129:28" pos:end="129:47"><name pos:start="129:28" pos:end="129:36">av_strdup</name><argument_list pos:start="129:37" pos:end="129:47">(<argument pos:start="129:38" pos:end="129:46"><expr pos:start="129:38" pos:end="129:46"><name pos:start="129:38" pos:end="129:46">rc_eq_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:47"><expr pos:start="131:13" pos:end="131:46"><name pos:start="131:13" pos:end="131:30"><name pos:start="131:13" pos:end="131:17">codec</name><operator pos:start="131:18" pos:end="131:19">-&gt;</operator><name pos:start="131:20" pos:end="131:30">rc_max_rate</name></name> <operator pos:start="131:32" pos:end="131:32">=</operator> <call pos:start="131:34" pos:end="131:46"><name pos:start="131:34" pos:end="131:42">avio_rb32</name><argument_list pos:start="131:43" pos:end="131:46">(<argument pos:start="131:44" pos:end="131:45"><expr pos:start="131:44" pos:end="131:45"><name pos:start="131:44" pos:end="131:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:47"><expr pos:start="133:13" pos:end="133:46"><name pos:start="133:13" pos:end="133:30"><name pos:start="133:13" pos:end="133:17">codec</name><operator pos:start="133:18" pos:end="133:19">-&gt;</operator><name pos:start="133:20" pos:end="133:30">rc_min_rate</name></name> <operator pos:start="133:32" pos:end="133:32">=</operator> <call pos:start="133:34" pos:end="133:46"><name pos:start="133:34" pos:end="133:42">avio_rb32</name><argument_list pos:start="133:43" pos:end="133:46">(<argument pos:start="133:44" pos:end="133:45"><expr pos:start="133:44" pos:end="133:45"><name pos:start="133:44" pos:end="133:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:50"><expr pos:start="135:13" pos:end="135:49"><name pos:start="135:13" pos:end="135:33"><name pos:start="135:13" pos:end="135:17">codec</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:33">rc_buffer_size</name></name> <operator pos:start="135:35" pos:end="135:35">=</operator> <call pos:start="135:37" pos:end="135:49"><name pos:start="135:37" pos:end="135:45">avio_rb32</name><argument_list pos:start="135:46" pos:end="135:49">(<argument pos:start="135:47" pos:end="135:48"><expr pos:start="135:47" pos:end="135:48"><name pos:start="135:47" pos:end="135:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:65"><expr pos:start="137:13" pos:end="137:64"><name pos:start="137:13" pos:end="137:33"><name pos:start="137:13" pos:end="137:17">codec</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:33">i_quant_factor</name></name> <operator pos:start="137:35" pos:end="137:35">=</operator> <call pos:start="137:37" pos:end="137:64"><name pos:start="137:37" pos:end="137:49">av_int2double</name><argument_list pos:start="137:50" pos:end="137:64">(<argument pos:start="137:51" pos:end="137:63"><expr pos:start="137:51" pos:end="137:63"><call pos:start="137:51" pos:end="137:63"><name pos:start="137:51" pos:end="137:59">avio_rb64</name><argument_list pos:start="137:60" pos:end="137:63">(<argument pos:start="137:61" pos:end="137:62"><expr pos:start="137:61" pos:end="137:62"><name pos:start="137:61" pos:end="137:62">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:65"><expr pos:start="139:13" pos:end="139:64"><name pos:start="139:13" pos:end="139:33"><name pos:start="139:13" pos:end="139:17">codec</name><operator pos:start="139:18" pos:end="139:19">-&gt;</operator><name pos:start="139:20" pos:end="139:33">b_quant_factor</name></name> <operator pos:start="139:35" pos:end="139:35">=</operator> <call pos:start="139:37" pos:end="139:64"><name pos:start="139:37" pos:end="139:49">av_int2double</name><argument_list pos:start="139:50" pos:end="139:64">(<argument pos:start="139:51" pos:end="139:63"><expr pos:start="139:51" pos:end="139:63"><call pos:start="139:51" pos:end="139:63"><name pos:start="139:51" pos:end="139:59">avio_rb64</name><argument_list pos:start="139:60" pos:end="139:63">(<argument pos:start="139:61" pos:end="139:62"><expr pos:start="139:61" pos:end="139:62"><name pos:start="139:61" pos:end="139:62">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:65"><expr pos:start="141:13" pos:end="141:64"><name pos:start="141:13" pos:end="141:33"><name pos:start="141:13" pos:end="141:17">codec</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:33">i_quant_offset</name></name> <operator pos:start="141:35" pos:end="141:35">=</operator> <call pos:start="141:37" pos:end="141:64"><name pos:start="141:37" pos:end="141:49">av_int2double</name><argument_list pos:start="141:50" pos:end="141:64">(<argument pos:start="141:51" pos:end="141:63"><expr pos:start="141:51" pos:end="141:63"><call pos:start="141:51" pos:end="141:63"><name pos:start="141:51" pos:end="141:59">avio_rb64</name><argument_list pos:start="141:60" pos:end="141:63">(<argument pos:start="141:61" pos:end="141:62"><expr pos:start="141:61" pos:end="141:62"><name pos:start="141:61" pos:end="141:62">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:65"><expr pos:start="143:13" pos:end="143:64"><name pos:start="143:13" pos:end="143:33"><name pos:start="143:13" pos:end="143:17">codec</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:33">b_quant_offset</name></name> <operator pos:start="143:35" pos:end="143:35">=</operator> <call pos:start="143:37" pos:end="143:64"><name pos:start="143:37" pos:end="143:49">av_int2double</name><argument_list pos:start="143:50" pos:end="143:64">(<argument pos:start="143:51" pos:end="143:63"><expr pos:start="143:51" pos:end="143:63"><call pos:start="143:51" pos:end="143:63"><name pos:start="143:51" pos:end="143:59">avio_rb64</name><argument_list pos:start="143:60" pos:end="143:63">(<argument pos:start="143:61" pos:end="143:62"><expr pos:start="143:61" pos:end="143:62"><name pos:start="143:61" pos:end="143:62">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:44"><expr pos:start="145:13" pos:end="145:43"><name pos:start="145:13" pos:end="145:27"><name pos:start="145:13" pos:end="145:17">codec</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:27">dct_algo</name></name> <operator pos:start="145:29" pos:end="145:29">=</operator> <call pos:start="145:31" pos:end="145:43"><name pos:start="145:31" pos:end="145:39">avio_rb32</name><argument_list pos:start="145:40" pos:end="145:43">(<argument pos:start="145:41" pos:end="145:42"><expr pos:start="145:41" pos:end="145:42"><name pos:start="145:41" pos:end="145:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:57"><expr pos:start="147:13" pos:end="147:56"><name pos:start="147:13" pos:end="147:40"><name pos:start="147:13" pos:end="147:17">codec</name><operator pos:start="147:18" pos:end="147:19">-&gt;</operator><name pos:start="147:20" pos:end="147:40">strict_std_compliance</name></name> <operator pos:start="147:42" pos:end="147:42">=</operator> <call pos:start="147:44" pos:end="147:56"><name pos:start="147:44" pos:end="147:52">avio_rb32</name><argument_list pos:start="147:53" pos:end="147:56">(<argument pos:start="147:54" pos:end="147:55"><expr pos:start="147:54" pos:end="147:55"><name pos:start="147:54" pos:end="147:55">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:48"><expr pos:start="149:13" pos:end="149:47"><name pos:start="149:13" pos:end="149:31"><name pos:start="149:13" pos:end="149:17">codec</name><operator pos:start="149:18" pos:end="149:19">-&gt;</operator><name pos:start="149:20" pos:end="149:31">max_b_frames</name></name> <operator pos:start="149:33" pos:end="149:33">=</operator> <call pos:start="149:35" pos:end="149:47"><name pos:start="149:35" pos:end="149:43">avio_rb32</name><argument_list pos:start="149:44" pos:end="149:47">(<argument pos:start="149:45" pos:end="149:46"><expr pos:start="149:45" pos:end="149:46"><name pos:start="149:45" pos:end="149:46">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:46"><expr pos:start="151:13" pos:end="151:45"><name pos:start="151:13" pos:end="151:29"><name pos:start="151:13" pos:end="151:17">codec</name><operator pos:start="151:18" pos:end="151:19">-&gt;</operator><name pos:start="151:20" pos:end="151:29">mpeg_quant</name></name> <operator pos:start="151:31" pos:end="151:31">=</operator> <call pos:start="151:33" pos:end="151:45"><name pos:start="151:33" pos:end="151:41">avio_rb32</name><argument_list pos:start="151:42" pos:end="151:45">(<argument pos:start="151:43" pos:end="151:44"><expr pos:start="151:43" pos:end="151:44"><name pos:start="151:43" pos:end="151:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:54"><expr pos:start="153:13" pos:end="153:53"><name pos:start="153:13" pos:end="153:37"><name pos:start="153:13" pos:end="153:17">codec</name><operator pos:start="153:18" pos:end="153:19">-&gt;</operator><name pos:start="153:20" pos:end="153:37">intra_dc_precision</name></name> <operator pos:start="153:39" pos:end="153:39">=</operator> <call pos:start="153:41" pos:end="153:53"><name pos:start="153:41" pos:end="153:49">avio_rb32</name><argument_list pos:start="153:50" pos:end="153:53">(<argument pos:start="153:51" pos:end="153:52"><expr pos:start="153:51" pos:end="153:52"><name pos:start="153:51" pos:end="153:52">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:45"><expr pos:start="155:13" pos:end="155:44"><name pos:start="155:13" pos:end="155:28"><name pos:start="155:13" pos:end="155:17">codec</name><operator pos:start="155:18" pos:end="155:19">-&gt;</operator><name pos:start="155:20" pos:end="155:28">me_method</name></name> <operator pos:start="155:30" pos:end="155:30">=</operator> <call pos:start="155:32" pos:end="155:44"><name pos:start="155:32" pos:end="155:40">avio_rb32</name><argument_list pos:start="155:41" pos:end="155:44">(<argument pos:start="155:42" pos:end="155:43"><expr pos:start="155:42" pos:end="155:43"><name pos:start="155:42" pos:end="155:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:47"><expr pos:start="157:13" pos:end="157:46"><name pos:start="157:13" pos:end="157:30"><name pos:start="157:13" pos:end="157:17">codec</name><operator pos:start="157:18" pos:end="157:19">-&gt;</operator><name pos:start="157:20" pos:end="157:30">mb_decision</name></name> <operator pos:start="157:32" pos:end="157:32">=</operator> <call pos:start="157:34" pos:end="157:46"><name pos:start="157:34" pos:end="157:42">avio_rb32</name><argument_list pos:start="157:43" pos:end="157:46">(<argument pos:start="157:44" pos:end="157:45"><expr pos:start="157:44" pos:end="157:45"><name pos:start="157:44" pos:end="157:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:47"><expr pos:start="159:13" pos:end="159:46"><name pos:start="159:13" pos:end="159:30"><name pos:start="159:13" pos:end="159:17">codec</name><operator pos:start="159:18" pos:end="159:19">-&gt;</operator><name pos:start="159:20" pos:end="159:30">nsse_weight</name></name> <operator pos:start="159:32" pos:end="159:32">=</operator> <call pos:start="159:34" pos:end="159:46"><name pos:start="159:34" pos:end="159:42">avio_rb32</name><argument_list pos:start="159:43" pos:end="159:46">(<argument pos:start="159:44" pos:end="159:45"><expr pos:start="159:44" pos:end="159:45"><name pos:start="159:44" pos:end="159:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:50"><expr pos:start="161:13" pos:end="161:49"><name pos:start="161:13" pos:end="161:33"><name pos:start="161:13" pos:end="161:17">codec</name><operator pos:start="161:18" pos:end="161:19">-&gt;</operator><name pos:start="161:20" pos:end="161:33">frame_skip_cmp</name></name> <operator pos:start="161:35" pos:end="161:35">=</operator> <call pos:start="161:37" pos:end="161:49"><name pos:start="161:37" pos:end="161:45">avio_rb32</name><argument_list pos:start="161:46" pos:end="161:49">(<argument pos:start="161:47" pos:end="161:48"><expr pos:start="161:47" pos:end="161:48"><name pos:start="161:47" pos:end="161:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:73"><expr pos:start="163:13" pos:end="163:72"><name pos:start="163:13" pos:end="163:41"><name pos:start="163:13" pos:end="163:17">codec</name><operator pos:start="163:18" pos:end="163:19">-&gt;</operator><name pos:start="163:20" pos:end="163:41">rc_buffer_aggressivity</name></name> <operator pos:start="163:43" pos:end="163:43">=</operator> <call pos:start="163:45" pos:end="163:72"><name pos:start="163:45" pos:end="163:57">av_int2double</name><argument_list pos:start="163:58" pos:end="163:72">(<argument pos:start="163:59" pos:end="163:71"><expr pos:start="163:59" pos:end="163:71"><call pos:start="163:59" pos:end="163:71"><name pos:start="163:59" pos:end="163:67">avio_rb64</name><argument_list pos:start="163:68" pos:end="163:71">(<argument pos:start="163:69" pos:end="163:70"><expr pos:start="163:69" pos:end="163:70"><name pos:start="163:69" pos:end="163:70">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:45"><expr pos:start="165:13" pos:end="165:44"><name pos:start="165:13" pos:end="165:28"><name pos:start="165:13" pos:end="165:17">codec</name><operator pos:start="165:18" pos:end="165:19">-&gt;</operator><name pos:start="165:20" pos:end="165:28">codec_tag</name></name> <operator pos:start="165:30" pos:end="165:30">=</operator> <call pos:start="165:32" pos:end="165:44"><name pos:start="165:32" pos:end="165:40">avio_rb32</name><argument_list pos:start="165:41" pos:end="165:44">(<argument pos:start="165:42" pos:end="165:43"><expr pos:start="165:42" pos:end="165:43"><name pos:start="165:42" pos:end="165:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:46"><expr pos:start="167:13" pos:end="167:45"><name pos:start="167:13" pos:end="167:31"><name pos:start="167:13" pos:end="167:17">codec</name><operator pos:start="167:18" pos:end="167:19">-&gt;</operator><name pos:start="167:20" pos:end="167:31">thread_count</name></name> <operator pos:start="167:33" pos:end="167:33">=</operator> <call pos:start="167:35" pos:end="167:45"><name pos:start="167:35" pos:end="167:41">avio_r8</name><argument_list pos:start="167:42" pos:end="167:45">(<argument pos:start="167:43" pos:end="167:44"><expr pos:start="167:43" pos:end="167:44"><name pos:start="167:43" pos:end="167:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:46"><expr pos:start="169:13" pos:end="169:45"><name pos:start="169:13" pos:end="169:29"><name pos:start="169:13" pos:end="169:17">codec</name><operator pos:start="169:18" pos:end="169:19">-&gt;</operator><name pos:start="169:20" pos:end="169:29">coder_type</name></name> <operator pos:start="169:31" pos:end="169:31">=</operator> <call pos:start="169:33" pos:end="169:45"><name pos:start="169:33" pos:end="169:41">avio_rb32</name><argument_list pos:start="169:42" pos:end="169:45">(<argument pos:start="169:43" pos:end="169:44"><expr pos:start="169:43" pos:end="169:44"><name pos:start="169:43" pos:end="169:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:42"><expr pos:start="171:13" pos:end="171:41"><name pos:start="171:13" pos:end="171:25"><name pos:start="171:13" pos:end="171:17">codec</name><operator pos:start="171:18" pos:end="171:19">-&gt;</operator><name pos:start="171:20" pos:end="171:25">me_cmp</name></name> <operator pos:start="171:27" pos:end="171:27">=</operator> <call pos:start="171:29" pos:end="171:41"><name pos:start="171:29" pos:end="171:37">avio_rb32</name><argument_list pos:start="171:38" pos:end="171:41">(<argument pos:start="171:39" pos:end="171:40"><expr pos:start="171:39" pos:end="171:40"><name pos:start="171:39" pos:end="171:40">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:53"><expr pos:start="173:13" pos:end="173:52"><name pos:start="173:13" pos:end="173:36"><name pos:start="173:13" pos:end="173:17">codec</name><operator pos:start="173:18" pos:end="173:19">-&gt;</operator><name pos:start="173:20" pos:end="173:36">me_subpel_quality</name></name> <operator pos:start="173:38" pos:end="173:38">=</operator> <call pos:start="173:40" pos:end="173:52"><name pos:start="173:40" pos:end="173:48">avio_rb32</name><argument_list pos:start="173:49" pos:end="173:52">(<argument pos:start="173:50" pos:end="173:51"><expr pos:start="173:50" pos:end="173:51"><name pos:start="173:50" pos:end="173:51">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:44"><expr pos:start="175:13" pos:end="175:43"><name pos:start="175:13" pos:end="175:27"><name pos:start="175:13" pos:end="175:17">codec</name><operator pos:start="175:18" pos:end="175:19">-&gt;</operator><name pos:start="175:20" pos:end="175:27">me_range</name></name> <operator pos:start="175:29" pos:end="175:29">=</operator> <call pos:start="175:31" pos:end="175:43"><name pos:start="175:31" pos:end="175:39">avio_rb32</name><argument_list pos:start="175:40" pos:end="175:43">(<argument pos:start="175:41" pos:end="175:42"><expr pos:start="175:41" pos:end="175:42"><name pos:start="175:41" pos:end="175:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:46"><expr pos:start="177:13" pos:end="177:45"><name pos:start="177:13" pos:end="177:29"><name pos:start="177:13" pos:end="177:17">codec</name><operator pos:start="177:18" pos:end="177:19">-&gt;</operator><name pos:start="177:20" pos:end="177:29">keyint_min</name></name> <operator pos:start="177:31" pos:end="177:31">=</operator> <call pos:start="177:33" pos:end="177:45"><name pos:start="177:33" pos:end="177:41">avio_rb32</name><argument_list pos:start="177:42" pos:end="177:45">(<argument pos:start="177:43" pos:end="177:44"><expr pos:start="177:43" pos:end="177:44"><name pos:start="177:43" pos:end="177:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:57"><expr pos:start="179:13" pos:end="179:56"><name pos:start="179:13" pos:end="179:40"><name pos:start="179:13" pos:end="179:17">codec</name><operator pos:start="179:18" pos:end="179:19">-&gt;</operator><name pos:start="179:20" pos:end="179:40">scenechange_threshold</name></name> <operator pos:start="179:42" pos:end="179:42">=</operator> <call pos:start="179:44" pos:end="179:56"><name pos:start="179:44" pos:end="179:52">avio_rb32</name><argument_list pos:start="179:53" pos:end="179:56">(<argument pos:start="179:54" pos:end="179:55"><expr pos:start="179:54" pos:end="179:55"><name pos:start="179:54" pos:end="179:55">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:52"><expr pos:start="181:13" pos:end="181:51"><name pos:start="181:13" pos:end="181:35"><name pos:start="181:13" pos:end="181:17">codec</name><operator pos:start="181:18" pos:end="181:19">-&gt;</operator><name pos:start="181:20" pos:end="181:35">b_frame_strategy</name></name> <operator pos:start="181:37" pos:end="181:37">=</operator> <call pos:start="181:39" pos:end="181:51"><name pos:start="181:39" pos:end="181:47">avio_rb32</name><argument_list pos:start="181:48" pos:end="181:51">(<argument pos:start="181:49" pos:end="181:50"><expr pos:start="181:49" pos:end="181:50"><name pos:start="181:49" pos:end="181:50">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:60"><expr pos:start="183:13" pos:end="183:59"><name pos:start="183:13" pos:end="183:28"><name pos:start="183:13" pos:end="183:17">codec</name><operator pos:start="183:18" pos:end="183:19">-&gt;</operator><name pos:start="183:20" pos:end="183:28">qcompress</name></name> <operator pos:start="183:30" pos:end="183:30">=</operator> <call pos:start="183:32" pos:end="183:59"><name pos:start="183:32" pos:end="183:44">av_int2double</name><argument_list pos:start="183:45" pos:end="183:59">(<argument pos:start="183:46" pos:end="183:58"><expr pos:start="183:46" pos:end="183:58"><call pos:start="183:46" pos:end="183:58"><name pos:start="183:46" pos:end="183:54">avio_rb64</name><argument_list pos:start="183:55" pos:end="183:58">(<argument pos:start="183:56" pos:end="183:57"><expr pos:start="183:56" pos:end="183:57"><name pos:start="183:56" pos:end="183:57">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:56"><expr pos:start="185:13" pos:end="185:55"><name pos:start="185:13" pos:end="185:24"><name pos:start="185:13" pos:end="185:17">codec</name><operator pos:start="185:18" pos:end="185:19">-&gt;</operator><name pos:start="185:20" pos:end="185:24">qblur</name></name> <operator pos:start="185:26" pos:end="185:26">=</operator> <call pos:start="185:28" pos:end="185:55"><name pos:start="185:28" pos:end="185:40">av_int2double</name><argument_list pos:start="185:41" pos:end="185:55">(<argument pos:start="185:42" pos:end="185:54"><expr pos:start="185:42" pos:end="185:54"><call pos:start="185:42" pos:end="185:54"><name pos:start="185:42" pos:end="185:50">avio_rb64</name><argument_list pos:start="185:51" pos:end="185:54">(<argument pos:start="185:52" pos:end="185:53"><expr pos:start="185:52" pos:end="185:53"><name pos:start="185:52" pos:end="185:53">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:45"><expr pos:start="187:13" pos:end="187:44"><name pos:start="187:13" pos:end="187:28"><name pos:start="187:13" pos:end="187:17">codec</name><operator pos:start="187:18" pos:end="187:19">-&gt;</operator><name pos:start="187:20" pos:end="187:28">max_qdiff</name></name> <operator pos:start="187:30" pos:end="187:30">=</operator> <call pos:start="187:32" pos:end="187:44"><name pos:start="187:32" pos:end="187:40">avio_rb32</name><argument_list pos:start="187:41" pos:end="187:44">(<argument pos:start="187:42" pos:end="187:43"><expr pos:start="187:42" pos:end="187:43"><name pos:start="187:42" pos:end="187:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:40"><expr pos:start="189:13" pos:end="189:39"><name pos:start="189:13" pos:end="189:23"><name pos:start="189:13" pos:end="189:17">codec</name><operator pos:start="189:18" pos:end="189:19">-&gt;</operator><name pos:start="189:20" pos:end="189:23">refs</name></name> <operator pos:start="189:25" pos:end="189:25">=</operator> <call pos:start="189:27" pos:end="189:39"><name pos:start="189:27" pos:end="189:35">avio_rb32</name><argument_list pos:start="189:36" pos:end="189:39">(<argument pos:start="189:37" pos:end="189:38"><expr pos:start="189:37" pos:end="189:38"><name pos:start="189:37" pos:end="189:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="191:13" pos:end="191:18">break;</break>

        <case pos:start="193:9" pos:end="193:32">case <expr pos:start="193:14" pos:end="193:31"><name pos:start="193:14" pos:end="193:31">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

            <expr_stmt pos:start="195:13" pos:end="195:47"><expr pos:start="195:13" pos:end="195:46"><name pos:start="195:13" pos:end="195:30"><name pos:start="195:13" pos:end="195:17">codec</name><operator pos:start="195:18" pos:end="195:19">-&gt;</operator><name pos:start="195:20" pos:end="195:30">sample_rate</name></name> <operator pos:start="195:32" pos:end="195:32">=</operator> <call pos:start="195:34" pos:end="195:46"><name pos:start="195:34" pos:end="195:42">avio_rb32</name><argument_list pos:start="195:43" pos:end="195:46">(<argument pos:start="195:44" pos:end="195:45"><expr pos:start="195:44" pos:end="195:45"><name pos:start="195:44" pos:end="195:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:44"><expr pos:start="197:13" pos:end="197:43"><name pos:start="197:13" pos:end="197:27"><name pos:start="197:13" pos:end="197:17">codec</name><operator pos:start="197:18" pos:end="197:19">-&gt;</operator><name pos:start="197:20" pos:end="197:27">channels</name></name> <operator pos:start="197:29" pos:end="197:29">=</operator> <call pos:start="197:31" pos:end="197:43"><name pos:start="197:31" pos:end="197:39">avio_rl16</name><argument_list pos:start="197:40" pos:end="197:43">(<argument pos:start="197:41" pos:end="197:42"><expr pos:start="197:41" pos:end="197:42"><name pos:start="197:41" pos:end="197:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:46"><expr pos:start="199:13" pos:end="199:45"><name pos:start="199:13" pos:end="199:29"><name pos:start="199:13" pos:end="199:17">codec</name><operator pos:start="199:18" pos:end="199:19">-&gt;</operator><name pos:start="199:20" pos:end="199:29">frame_size</name></name> <operator pos:start="199:31" pos:end="199:31">=</operator> <call pos:start="199:33" pos:end="199:45"><name pos:start="199:33" pos:end="199:41">avio_rl16</name><argument_list pos:start="199:42" pos:end="199:45">(<argument pos:start="199:43" pos:end="199:44"><expr pos:start="199:43" pos:end="199:44"><name pos:start="199:43" pos:end="199:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="201:13" pos:end="201:18">break;</break>

        <default pos:start="203:9" pos:end="203:16">default:</default>

            <goto pos:start="205:13" pos:end="205:22">goto <name pos:start="205:18" pos:end="205:21">fail</name>;</goto>

        </block_content>}</block></switch>

        <if_stmt pos:start="209:9" pos:end="215:9"><if pos:start="209:9" pos:end="215:9">if <condition pos:start="209:12" pos:end="209:52">(<expr pos:start="209:13" pos:end="209:51"><name pos:start="209:13" pos:end="209:24"><name pos:start="209:13" pos:end="209:17">codec</name><operator pos:start="209:18" pos:end="209:19">-&gt;</operator><name pos:start="209:20" pos:end="209:24">flags</name></name> <operator pos:start="209:26" pos:end="209:26">&amp;</operator> <name pos:start="209:28" pos:end="209:51">CODEC_FLAG_GLOBAL_HEADER</name></expr>)</condition> <block pos:start="209:54" pos:end="215:9">{<block_content pos:start="211:13" pos:end="213:39">

            <if_stmt pos:start="211:13" pos:end="213:39"><if pos:start="211:13" pos:end="213:39">if <condition pos:start="211:16" pos:end="211:63">(<expr pos:start="211:17" pos:end="211:62"><call pos:start="211:17" pos:end="211:58"><name pos:start="211:17" pos:end="211:32">ff_get_extradata</name><argument_list pos:start="211:33" pos:end="211:58">(<argument pos:start="211:34" pos:end="211:38"><expr pos:start="211:34" pos:end="211:38"><name pos:start="211:34" pos:end="211:38">codec</name></expr></argument>, <argument pos:start="211:41" pos:end="211:42"><expr pos:start="211:41" pos:end="211:42"><name pos:start="211:41" pos:end="211:42">pb</name></expr></argument>, <argument pos:start="211:45" pos:end="211:57"><expr pos:start="211:45" pos:end="211:57"><call pos:start="211:45" pos:end="211:57"><name pos:start="211:45" pos:end="211:53">avio_rb32</name><argument_list pos:start="211:54" pos:end="211:57">(<argument pos:start="211:55" pos:end="211:56"><expr pos:start="211:55" pos:end="211:56"><name pos:start="211:55" pos:end="211:56">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="211:60" pos:end="211:60">&lt;</operator> <literal type="number" pos:start="211:62" pos:end="211:62">0</literal></expr>)</condition><block type="pseudo" pos:start="213:17" pos:end="213:39"><block_content pos:start="213:17" pos:end="213:39">

                <return pos:start="213:17" pos:end="213:39">return <expr pos:start="213:24" pos:end="213:38"><call pos:start="213:24" pos:end="213:38"><name pos:start="213:24" pos:end="213:30">AVERROR</name><argument_list pos:start="213:31" pos:end="213:38">(<argument pos:start="213:32" pos:end="213:37"><expr pos:start="213:32" pos:end="213:37"><name pos:start="213:32" pos:end="213:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="221:5" pos:end="221:40">/* get until end of block reached */</comment>

    <while pos:start="223:5" pos:end="225:20">while <condition pos:start="223:11" pos:end="223:51">(<expr pos:start="223:12" pos:end="223:50"><operator pos:start="223:12" pos:end="223:12">(</operator><call pos:start="223:13" pos:end="223:25"><name pos:start="223:13" pos:end="223:21">avio_tell</name><argument_list pos:start="223:22" pos:end="223:25">(<argument pos:start="223:23" pos:end="223:24"><expr pos:start="223:23" pos:end="223:24"><name pos:start="223:23" pos:end="223:24">pb</name></expr></argument>)</argument_list></call> <operator pos:start="223:27" pos:end="223:27">%</operator> <name pos:start="223:29" pos:end="223:44"><name pos:start="223:29" pos:end="223:31">ffm</name><operator pos:start="223:32" pos:end="223:33">-&gt;</operator><name pos:start="223:34" pos:end="223:44">packet_size</name></name><operator pos:start="223:45" pos:end="223:45">)</operator> <operator pos:start="223:47" pos:end="223:48">!=</operator> <literal type="number" pos:start="223:50" pos:end="223:50">0</literal></expr>)</condition><block type="pseudo" pos:start="225:9" pos:end="225:20"><block_content pos:start="225:9" pos:end="225:20">

        <expr_stmt pos:start="225:9" pos:end="225:20"><expr pos:start="225:9" pos:end="225:19"><call pos:start="225:9" pos:end="225:19"><name pos:start="225:9" pos:end="225:15">avio_r8</name><argument_list pos:start="225:16" pos:end="225:19">(<argument pos:start="225:17" pos:end="225:18"><expr pos:start="225:17" pos:end="225:18"><name pos:start="225:17" pos:end="225:18">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>



    <comment type="block" pos:start="229:5" pos:end="229:27">/* init packet demux */</comment>

    <expr_stmt pos:start="231:5" pos:end="231:34"><expr pos:start="231:5" pos:end="231:33"><name pos:start="231:5" pos:end="231:19"><name pos:start="231:5" pos:end="231:7">ffm</name><operator pos:start="231:8" pos:end="231:9">-&gt;</operator><name pos:start="231:10" pos:end="231:19">packet_ptr</name></name> <operator pos:start="231:21" pos:end="231:21">=</operator> <name pos:start="231:23" pos:end="231:33"><name pos:start="231:23" pos:end="231:25">ffm</name><operator pos:start="231:26" pos:end="231:27">-&gt;</operator><name pos:start="231:28" pos:end="231:33">packet</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="233:5" pos:end="233:34"><expr pos:start="233:5" pos:end="233:33"><name pos:start="233:5" pos:end="233:19"><name pos:start="233:5" pos:end="233:7">ffm</name><operator pos:start="233:8" pos:end="233:9">-&gt;</operator><name pos:start="233:10" pos:end="233:19">packet_end</name></name> <operator pos:start="233:21" pos:end="233:21">=</operator> <name pos:start="233:23" pos:end="233:33"><name pos:start="233:23" pos:end="233:25">ffm</name><operator pos:start="233:26" pos:end="233:27">-&gt;</operator><name pos:start="233:28" pos:end="233:33">packet</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="235:5" pos:end="235:26"><expr pos:start="235:5" pos:end="235:25"><name pos:start="235:5" pos:end="235:21"><name pos:start="235:5" pos:end="235:7">ffm</name><operator pos:start="235:8" pos:end="235:9">-&gt;</operator><name pos:start="235:10" pos:end="235:21">frame_offset</name></name> <operator pos:start="235:23" pos:end="235:23">=</operator> <literal type="number" pos:start="235:25" pos:end="235:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="237:5" pos:end="237:17"><expr pos:start="237:5" pos:end="237:16"><name pos:start="237:5" pos:end="237:12"><name pos:start="237:5" pos:end="237:7">ffm</name><operator pos:start="237:8" pos:end="237:9">-&gt;</operator><name pos:start="237:10" pos:end="237:12">dts</name></name> <operator pos:start="237:14" pos:end="237:14">=</operator> <literal type="number" pos:start="237:16" pos:end="237:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="239:5" pos:end="239:34"><expr pos:start="239:5" pos:end="239:33"><name pos:start="239:5" pos:end="239:19"><name pos:start="239:5" pos:end="239:7">ffm</name><operator pos:start="239:8" pos:end="239:9">-&gt;</operator><name pos:start="239:10" pos:end="239:19">read_state</name></name> <operator pos:start="239:21" pos:end="239:21">=</operator> <name pos:start="239:23" pos:end="239:33">READ_HEADER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="241:5" pos:end="241:26"><expr pos:start="241:5" pos:end="241:25"><name pos:start="241:5" pos:end="241:21"><name pos:start="241:5" pos:end="241:7">ffm</name><operator pos:start="241:8" pos:end="241:9">-&gt;</operator><name pos:start="241:10" pos:end="241:21">first_packet</name></name> <operator pos:start="241:23" pos:end="241:23">=</operator> <literal type="number" pos:start="241:25" pos:end="241:25">1</literal></expr>;</expr_stmt>

    <return pos:start="243:5" pos:end="243:13">return <expr pos:start="243:12" pos:end="243:12"><literal type="number" pos:start="243:12" pos:end="243:12">0</literal></expr>;</return>

 <label pos:start="245:2" pos:end="245:6"><name pos:start="245:2" pos:end="245:5">fail</name>:</label>

    <expr_stmt pos:start="247:5" pos:end="247:17"><expr pos:start="247:5" pos:end="247:16"><call pos:start="247:5" pos:end="247:16"><name pos:start="247:5" pos:end="247:13">ffm_close</name><argument_list pos:start="247:14" pos:end="247:16">(<argument pos:start="247:15" pos:end="247:15"><expr pos:start="247:15" pos:end="247:15"><name pos:start="247:15" pos:end="247:15">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="249:5" pos:end="249:14">return <expr pos:start="249:12" pos:end="249:13"><operator pos:start="249:12" pos:end="249:12">-</operator><literal type="number" pos:start="249:13" pos:end="249:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
