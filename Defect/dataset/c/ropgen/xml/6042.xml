<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6042.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:24">gem_read</name><parameter_list pos:start="1:25" pos:end="1:80">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:37">opaque</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:64"><decl pos:start="1:40" pos:end="1:64"><type pos:start="1:40" pos:end="1:64"><name pos:start="1:40" pos:end="1:57">target_phys_addr_t</name></type> <name pos:start="1:59" pos:end="1:64">offset</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:79"><decl pos:start="1:67" pos:end="1:79"><type pos:start="1:67" pos:end="1:79"><name pos:start="1:67" pos:end="1:74">unsigned</name></type> <name pos:start="1:76" pos:end="1:79">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:18">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">GemState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:19">retval</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:27"><expr pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:5">s</name> <operator pos:start="11:7" pos:end="11:7">=</operator> <operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:17">GemState</name> <operator pos:start="11:19" pos:end="11:19">*</operator><operator pos:start="11:20" pos:end="11:20">)</operator><name pos:start="11:21" pos:end="11:26">opaque</name></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:17"><expr pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:10">offset</name> <operator pos:start="15:12" pos:end="15:14">&gt;&gt;=</operator> <literal type="number" pos:start="15:16" pos:end="15:16">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:29"><expr pos:start="17:5" pos:end="17:28"><name pos:start="17:5" pos:end="17:10">retval</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <name pos:start="17:14" pos:end="17:28"><name pos:start="17:14" pos:end="17:14">s</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:20">regs</name><index pos:start="17:21" pos:end="17:28">[<expr pos:start="17:22" pos:end="17:27"><name pos:start="17:22" pos:end="17:27">offset</name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:64"><expr pos:start="21:5" pos:end="21:63"><call pos:start="21:5" pos:end="21:63"><name pos:start="21:5" pos:end="21:12">DB_PRINT</name><argument_list pos:start="21:13" pos:end="21:63">(<argument pos:start="21:14" pos:end="21:44"><expr pos:start="21:14" pos:end="21:44"><literal type="string" pos:start="21:14" pos:end="21:44">"offset: 0x%04x read: 0x%08x\n"</literal></expr></argument>, <argument pos:start="21:47" pos:end="21:54"><expr pos:start="21:47" pos:end="21:54"><name pos:start="21:47" pos:end="21:52">offset</name><operator pos:start="21:53" pos:end="21:53">*</operator><literal type="number" pos:start="21:54" pos:end="21:54">4</literal></expr></argument>, <argument pos:start="21:57" pos:end="21:62"><expr pos:start="21:57" pos:end="21:62"><name pos:start="21:57" pos:end="21:62">retval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="25:5" pos:end="61:5">switch <condition pos:start="25:12" pos:end="25:19">(<expr pos:start="25:13" pos:end="25:18"><name pos:start="25:13" pos:end="25:18">offset</name></expr>)</condition> <block pos:start="25:21" pos:end="61:5">{<block_content pos:start="27:5" pos:end="59:14">

    <case pos:start="27:5" pos:end="27:17">case <expr pos:start="27:10" pos:end="27:16"><name pos:start="27:10" pos:end="27:16">GEM_ISR</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:32"><expr pos:start="29:9" pos:end="29:31"><call pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:20">qemu_set_irq</name><argument_list pos:start="29:21" pos:end="29:31">(<argument pos:start="29:22" pos:end="29:27"><expr pos:start="29:22" pos:end="29:27"><name pos:start="29:22" pos:end="29:27"><name pos:start="29:22" pos:end="29:22">s</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:27">irq</name></name></expr></argument>, <argument pos:start="29:30" pos:end="29:30"><expr pos:start="29:30" pos:end="29:30"><literal type="number" pos:start="29:30" pos:end="29:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:22">case <expr pos:start="33:10" pos:end="33:21"><name pos:start="33:10" pos:end="33:21">GEM_PHYMNTNC</name></expr>:</case>

        <if_stmt pos:start="35:9" pos:end="57:9"><if pos:start="35:9" pos:end="57:9">if <condition pos:start="35:12" pos:end="35:39">(<expr pos:start="35:13" pos:end="35:38"><name pos:start="35:13" pos:end="35:18">retval</name> <operator pos:start="35:20" pos:end="35:20">&amp;</operator> <name pos:start="35:22" pos:end="35:38">GEM_PHYMNTNC_OP_R</name></expr>)</condition> <block pos:start="35:41" pos:end="57:9">{<block_content pos:start="37:13" pos:end="55:13">

            <decl_stmt pos:start="37:13" pos:end="37:39"><decl pos:start="37:13" pos:end="37:29"><type pos:start="37:13" pos:end="37:20"><name pos:start="37:13" pos:end="37:20">uint32_t</name></type> <name pos:start="37:22" pos:end="37:29">phy_addr</name></decl>, <decl pos:start="37:32" pos:end="37:38"><type ref="prev" pos:start="37:13" pos:end="37:20"/><name pos:start="37:32" pos:end="37:38">reg_num</name></decl>;</decl_stmt>



            <expr_stmt pos:start="41:13" pos:end="41:78"><expr pos:start="41:13" pos:end="41:77"><name pos:start="41:13" pos:end="41:20">phy_addr</name> <operator pos:start="41:22" pos:end="41:22">=</operator> <operator pos:start="41:24" pos:end="41:24">(</operator><name pos:start="41:25" pos:end="41:30">retval</name> <operator pos:start="41:32" pos:end="41:32">&amp;</operator> <name pos:start="41:34" pos:end="41:50">GEM_PHYMNTNC_ADDR</name><operator pos:start="41:51" pos:end="41:51">)</operator> <operator pos:start="41:53" pos:end="41:54">&gt;&gt;</operator> <name pos:start="41:56" pos:end="41:77">GEM_PHYMNTNC_ADDR_SHFT</name></expr>;</expr_stmt>

            <if_stmt pos:start="43:13" pos:end="55:13"><if pos:start="43:13" pos:end="51:13">if <condition pos:start="43:16" pos:end="43:46">(<expr pos:start="43:17" pos:end="43:45"><name pos:start="43:17" pos:end="43:24">phy_addr</name> <operator pos:start="43:26" pos:end="43:27">==</operator> <name pos:start="43:29" pos:end="43:45">BOARD_PHY_ADDRESS</name></expr>)</condition> <block pos:start="43:48" pos:end="51:13">{<block_content pos:start="45:17" pos:end="49:51">

                <expr_stmt pos:start="45:17" pos:end="45:80"><expr pos:start="45:17" pos:end="45:79"><name pos:start="45:17" pos:end="45:23">reg_num</name> <operator pos:start="45:25" pos:end="45:25">=</operator> <operator pos:start="45:27" pos:end="45:27">(</operator><name pos:start="45:28" pos:end="45:33">retval</name> <operator pos:start="45:35" pos:end="45:35">&amp;</operator> <name pos:start="45:37" pos:end="45:52">GEM_PHYMNTNC_REG</name><operator pos:start="45:53" pos:end="45:53">)</operator> <operator pos:start="45:55" pos:end="45:56">&gt;&gt;</operator> <name pos:start="45:58" pos:end="45:79">GEM_PHYMNTNC_REG_SHIFT</name></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:37"><expr pos:start="47:17" pos:end="47:36"><name pos:start="47:17" pos:end="47:22">retval</name> <operator pos:start="47:24" pos:end="47:25">&amp;=</operator> <literal type="number" pos:start="47:27" pos:end="47:36">0xFFFF0000</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:51"><expr pos:start="49:17" pos:end="49:50"><name pos:start="49:17" pos:end="49:22">retval</name> <operator pos:start="49:24" pos:end="49:25">|=</operator> <call pos:start="49:27" pos:end="49:50"><name pos:start="49:27" pos:end="49:38">gem_phy_read</name><argument_list pos:start="49:39" pos:end="49:50">(<argument pos:start="49:40" pos:end="49:40"><expr pos:start="49:40" pos:end="49:40"><name pos:start="49:40" pos:end="49:40">s</name></expr></argument>, <argument pos:start="49:43" pos:end="49:49"><expr pos:start="49:43" pos:end="49:49"><name pos:start="49:43" pos:end="49:49">reg_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="51:15" pos:end="55:13">else <block pos:start="51:20" pos:end="55:13">{<block_content pos:start="53:17" pos:end="53:33">

                <expr_stmt pos:start="53:17" pos:end="53:33"><expr pos:start="53:17" pos:end="53:32"><name pos:start="53:17" pos:end="53:22">retval</name> <operator pos:start="53:24" pos:end="53:25">|=</operator> <literal type="number" pos:start="53:27" pos:end="53:32">0xFFFF</literal></expr>;</expr_stmt> <comment type="block" pos:start="53:35" pos:end="53:65">/* No device at this address */</comment>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    </block_content>}</block></switch>



    <comment type="block" pos:start="65:5" pos:end="65:35">/* Squash read to clear bits */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:46"><expr pos:start="67:5" pos:end="67:45"><name pos:start="67:5" pos:end="67:19"><name pos:start="67:5" pos:end="67:5">s</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:11">regs</name><index pos:start="67:12" pos:end="67:19">[<expr pos:start="67:13" pos:end="67:18"><name pos:start="67:13" pos:end="67:18">offset</name></expr>]</index></name> <operator pos:start="67:21" pos:end="67:22">&amp;=</operator> <operator pos:start="67:24" pos:end="67:24">~</operator><operator pos:start="67:25" pos:end="67:25">(</operator><name pos:start="67:26" pos:end="67:44"><name pos:start="67:26" pos:end="67:26">s</name><operator pos:start="67:27" pos:end="67:28">-&gt;</operator><name pos:start="67:29" pos:end="67:36">regs_rtc</name><index pos:start="67:37" pos:end="67:44">[<expr pos:start="67:38" pos:end="67:43"><name pos:start="67:38" pos:end="67:43">offset</name></expr>]</index></name><operator pos:start="67:45" pos:end="67:45">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="71:5" pos:end="71:40">/* Do not provide write only bits */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:36"><expr pos:start="73:5" pos:end="73:35"><name pos:start="73:5" pos:end="73:10">retval</name> <operator pos:start="73:12" pos:end="73:13">&amp;=</operator> <operator pos:start="73:15" pos:end="73:15">~</operator><operator pos:start="73:16" pos:end="73:16">(</operator><name pos:start="73:17" pos:end="73:34"><name pos:start="73:17" pos:end="73:17">s</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:26">regs_wo</name><index pos:start="73:27" pos:end="73:34">[<expr pos:start="73:28" pos:end="73:33"><name pos:start="73:28" pos:end="73:33">offset</name></expr>]</index></name><operator pos:start="73:35" pos:end="73:35">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:33"><expr pos:start="77:5" pos:end="77:32"><call pos:start="77:5" pos:end="77:32"><name pos:start="77:5" pos:end="77:12">DB_PRINT</name><argument_list pos:start="77:13" pos:end="77:32">(<argument pos:start="77:14" pos:end="77:23"><expr pos:start="77:14" pos:end="77:23"><literal type="string" pos:start="77:14" pos:end="77:23">"0x%08x\n"</literal></expr></argument>, <argument pos:start="77:26" pos:end="77:31"><expr pos:start="77:26" pos:end="77:31"><name pos:start="77:26" pos:end="77:31">retval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="79:5" pos:end="79:18">return <expr pos:start="79:12" pos:end="79:17"><name pos:start="79:12" pos:end="79:17">retval</name></expr>;</return>

</block_content>}</block></function>
</unit>
