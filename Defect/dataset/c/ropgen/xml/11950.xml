<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11950.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:23"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name> <name pos:start="1:12" pos:end="1:23">coroutine_fn</name></type> <name pos:start="1:25" pos:end="1:36">nfs_co_readv</name><parameter_list pos:start="1:37" pos:end="5:55">(<parameter pos:start="1:38" pos:end="1:57"><decl pos:start="1:38" pos:end="1:57"><type pos:start="1:38" pos:end="1:57"><name pos:start="1:38" pos:end="1:53">BlockDriverState</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">bs</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:55"><decl pos:start="3:38" pos:end="3:55"><type pos:start="3:38" pos:end="3:55"><name pos:start="3:38" pos:end="3:44">int64_t</name></type> <name pos:start="3:46" pos:end="3:55">sector_num</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:71"><decl pos:start="3:58" pos:end="3:71"><type pos:start="3:58" pos:end="3:71"><name pos:start="3:58" pos:end="3:60">int</name></type> <name pos:start="3:62" pos:end="3:71">nb_sectors</name></decl></parameter>,

                                     <parameter pos:start="5:38" pos:end="5:54"><decl pos:start="5:38" pos:end="5:54"><type pos:start="5:38" pos:end="5:54"><name pos:start="5:38" pos:end="5:49">QEMUIOVector</name> <modifier pos:start="5:51" pos:end="5:51">*</modifier></type><name pos:start="5:52" pos:end="5:54">iov</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="65:1">{<block_content pos:start="9:5" pos:end="63:13">

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">NFSClient</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:21">client</name> <init pos:start="9:23" pos:end="9:34">= <expr pos:start="9:25" pos:end="9:34"><name pos:start="9:25" pos:end="9:34"><name pos:start="9:25" pos:end="9:26">bs</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:34">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">NFSRPC</name></type> <name pos:start="11:12" pos:end="11:15">task</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><call pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:20">nfs_co_init_task</name><argument_list pos:start="15:21" pos:end="15:35">(<argument pos:start="15:22" pos:end="15:27"><expr pos:start="15:22" pos:end="15:27"><name pos:start="15:22" pos:end="15:27">client</name></expr></argument>, <argument pos:start="15:30" pos:end="15:34"><expr pos:start="15:30" pos:end="15:34"><operator pos:start="15:30" pos:end="15:30">&amp;</operator><name pos:start="15:31" pos:end="15:34">task</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:19"><expr pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:8">task</name><operator pos:start="17:9" pos:end="17:9">.</operator><name pos:start="17:10" pos:end="17:12">iov</name></name> <operator pos:start="17:14" pos:end="17:14">=</operator> <name pos:start="17:16" pos:end="17:18">iov</name></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="31:5"><if pos:start="21:5" pos:end="31:5">if <condition pos:start="21:8" pos:end="27:55">(<expr pos:start="21:9" pos:end="27:54"><call pos:start="21:9" pos:end="27:49"><name pos:start="21:9" pos:end="21:23">nfs_pread_async</name><argument_list pos:start="21:24" pos:end="27:49">(<argument pos:start="21:25" pos:end="21:39"><expr pos:start="21:25" pos:end="21:39"><name pos:start="21:25" pos:end="21:39"><name pos:start="21:25" pos:end="21:30">client</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:39">context</name></name></expr></argument>, <argument pos:start="21:42" pos:end="21:51"><expr pos:start="21:42" pos:end="21:51"><name pos:start="21:42" pos:end="21:51"><name pos:start="21:42" pos:end="21:47">client</name><operator pos:start="21:48" pos:end="21:49">-&gt;</operator><name pos:start="21:50" pos:end="21:51">fh</name></name></expr></argument>,

                        <argument pos:start="23:25" pos:end="23:53"><expr pos:start="23:25" pos:end="23:53"><name pos:start="23:25" pos:end="23:34">sector_num</name> <operator pos:start="23:36" pos:end="23:36">*</operator> <name pos:start="23:38" pos:end="23:53">BDRV_SECTOR_SIZE</name></expr></argument>,

                        <argument pos:start="25:25" pos:end="25:53"><expr pos:start="25:25" pos:end="25:53"><name pos:start="25:25" pos:end="25:34">nb_sectors</name> <operator pos:start="25:36" pos:end="25:36">*</operator> <name pos:start="25:38" pos:end="25:53">BDRV_SECTOR_SIZE</name></expr></argument>,

                        <argument pos:start="27:25" pos:end="27:41"><expr pos:start="27:25" pos:end="27:41"><name pos:start="27:25" pos:end="27:41">nfs_co_generic_cb</name></expr></argument>, <argument pos:start="27:44" pos:end="27:48"><expr pos:start="27:44" pos:end="27:48"><operator pos:start="27:44" pos:end="27:44">&amp;</operator><name pos:start="27:45" pos:end="27:48">task</name></expr></argument>)</argument_list></call> <operator pos:start="27:51" pos:end="27:52">!=</operator> <literal type="number" pos:start="27:54" pos:end="27:54">0</literal></expr>)</condition> <block pos:start="27:57" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:23">

        <return pos:start="29:9" pos:end="29:23">return <expr pos:start="29:16" pos:end="29:22"><operator pos:start="29:16" pos:end="29:16">-</operator><name pos:start="29:17" pos:end="29:22">ENOMEM</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="35:5" pos:end="41:5">while <condition pos:start="35:11" pos:end="35:26">(<expr pos:start="35:12" pos:end="35:25"><operator pos:start="35:12" pos:end="35:12">!</operator><name pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:16">task</name><operator pos:start="35:17" pos:end="35:17">.</operator><name pos:start="35:18" pos:end="35:25">complete</name></name></expr>)</condition> <block pos:start="35:28" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:31">

        <expr_stmt pos:start="37:9" pos:end="37:31"><expr pos:start="37:9" pos:end="37:30"><call pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:22">nfs_set_events</name><argument_list pos:start="37:23" pos:end="37:30">(<argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:29">client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:31"><expr pos:start="39:9" pos:end="39:30"><call pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:28">qemu_coroutine_yield</name><argument_list pos:start="39:29" pos:end="39:30">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:21">(<expr pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:12">task</name><operator pos:start="45:13" pos:end="45:13">.</operator><name pos:start="45:14" pos:end="45:16">ret</name></name> <operator pos:start="45:18" pos:end="45:18">&lt;</operator> <literal type="number" pos:start="45:20" pos:end="45:20">0</literal></expr>)</condition> <block pos:start="45:23" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:24">

        <return pos:start="47:9" pos:end="47:24">return <expr pos:start="47:16" pos:end="47:23"><name pos:start="47:16" pos:end="47:23"><name pos:start="47:16" pos:end="47:19">task</name><operator pos:start="47:20" pos:end="47:20">.</operator><name pos:start="47:21" pos:end="47:23">ret</name></name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:30">/* zero pad short reads */</comment>

    <if_stmt pos:start="55:5" pos:end="59:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:29">(<expr pos:start="55:9" pos:end="55:28"><name pos:start="55:9" pos:end="55:16"><name pos:start="55:9" pos:end="55:12">task</name><operator pos:start="55:13" pos:end="55:13">.</operator><name pos:start="55:14" pos:end="55:16">ret</name></name> <operator pos:start="55:18" pos:end="55:18">&lt;</operator> <name pos:start="55:20" pos:end="55:28"><name pos:start="55:20" pos:end="55:22">iov</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:28">size</name></name></expr>)</condition> <block pos:start="55:31" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:66">

        <expr_stmt pos:start="57:9" pos:end="57:66"><expr pos:start="57:9" pos:end="57:65"><call pos:start="57:9" pos:end="57:65"><name pos:start="57:9" pos:end="57:25">qemu_iovec_memset</name><argument_list pos:start="57:26" pos:end="57:65">(<argument pos:start="57:27" pos:end="57:29"><expr pos:start="57:27" pos:end="57:29"><name pos:start="57:27" pos:end="57:29">iov</name></expr></argument>, <argument pos:start="57:32" pos:end="57:39"><expr pos:start="57:32" pos:end="57:39"><name pos:start="57:32" pos:end="57:39"><name pos:start="57:32" pos:end="57:35">task</name><operator pos:start="57:36" pos:end="57:36">.</operator><name pos:start="57:37" pos:end="57:39">ret</name></name></expr></argument>, <argument pos:start="57:42" pos:end="57:42"><expr pos:start="57:42" pos:end="57:42"><literal type="number" pos:start="57:42" pos:end="57:42">0</literal></expr></argument>, <argument pos:start="57:45" pos:end="57:64"><expr pos:start="57:45" pos:end="57:64"><name pos:start="57:45" pos:end="57:53"><name pos:start="57:45" pos:end="57:47">iov</name><operator pos:start="57:48" pos:end="57:49">-&gt;</operator><name pos:start="57:50" pos:end="57:53">size</name></name> <operator pos:start="57:55" pos:end="57:55">-</operator> <name pos:start="57:57" pos:end="57:64"><name pos:start="57:57" pos:end="57:60">task</name><operator pos:start="57:61" pos:end="57:61">.</operator><name pos:start="57:62" pos:end="57:64">ret</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
