<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21718.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">tcx_update_display</name><parameter_list pos:start="1:31" pos:end="1:44">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:37"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="153:1">{<block_content pos:start="5:5" pos:end="151:5">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">TCXState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">ts</name> <init pos:start="5:18" pos:end="5:25">= <expr pos:start="5:20" pos:end="5:25"><name pos:start="5:20" pos:end="5:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14">ram_addr_t</name></type> <name pos:start="7:16" pos:end="7:19">page</name></decl>, <decl pos:start="7:22" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:14"/><name pos:start="7:22" pos:end="7:29">page_min</name></decl>, <decl pos:start="7:32" pos:end="7:39"><type ref="prev" pos:start="7:5" pos:end="7:14"/><name pos:start="7:32" pos:end="7:39">page_max</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">y</name></decl>, <decl pos:start="9:12" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:18">y_start</name></decl>, <decl pos:start="9:21" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:22">dd</name></decl>, <decl pos:start="9:25" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:25" pos:end="9:26">ds</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:14">d</name></decl>, <decl pos:start="11:17" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:13"><modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:18">s</name></decl>;</decl_stmt>

    <function_decl pos:start="13:5" pos:end="13:69"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">void</name></type> (<modifier pos:start="13:11" pos:end="13:11">*</modifier><name pos:start="13:12" pos:end="13:12">f</name>)<parameter_list pos:start="13:14" pos:end="13:68">(<parameter pos:start="13:15" pos:end="13:26"><decl pos:start="13:15" pos:end="13:26"><type pos:start="13:15" pos:end="13:26"><name pos:start="13:15" pos:end="13:22">TCXState</name> <modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:26">s1</name></decl></parameter>, <parameter pos:start="13:29" pos:end="13:38"><decl pos:start="13:29" pos:end="13:38"><type pos:start="13:29" pos:end="13:38"><name pos:start="13:29" pos:end="13:35">uint8_t</name> <modifier pos:start="13:37" pos:end="13:37">*</modifier></type><name pos:start="13:38" pos:end="13:38">d</name></decl></parameter>, <parameter pos:start="13:41" pos:end="13:56"><decl pos:start="13:41" pos:end="13:56"><type pos:start="13:41" pos:end="13:56"><specifier pos:start="13:41" pos:end="13:45">const</specifier> <name pos:start="13:47" pos:end="13:53">uint8_t</name> <modifier pos:start="13:55" pos:end="13:55">*</modifier></type><name pos:start="13:56" pos:end="13:56">s</name></decl></parameter>, <parameter pos:start="13:59" pos:end="13:67"><decl pos:start="13:59" pos:end="13:67"><type pos:start="13:59" pos:end="13:67"><name pos:start="13:59" pos:end="13:61">int</name></type> <name pos:start="13:63" pos:end="13:67">width</name></decl></parameter>)</parameter_list>;</function_decl>



    <if_stmt pos:start="17:5" pos:end="19:15"><if pos:start="17:5" pos:end="19:15">if <condition pos:start="17:8" pos:end="17:27">(<expr pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:10">ts</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:14">ds</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:21">depth</name></name> <operator pos:start="17:23" pos:end="17:24">==</operator> <literal type="number" pos:start="17:26" pos:end="17:26">0</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:15"><block_content pos:start="19:9" pos:end="19:15">

	<return pos:start="19:9" pos:end="19:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:8">page</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <name pos:start="21:12" pos:end="21:26"><name pos:start="21:12" pos:end="21:13">ts</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:26">vram_offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:17"><expr pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:11">y_start</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <operator pos:start="23:15" pos:end="23:15">-</operator><literal type="number" pos:start="23:16" pos:end="23:16">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:26"><expr pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:12">page_min</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <literal type="number" pos:start="25:16" pos:end="25:25">0xffffffff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:17"><expr pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:12">page_max</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:21"><expr pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:5">d</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:10">ts</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:14">ds</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:20">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:17"><expr pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:5">s</name> <operator pos:start="31:7" pos:end="31:7">=</operator> <name pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:10">ts</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:16">vram</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:26"><expr pos:start="33:5" pos:end="33:25"><name pos:start="33:5" pos:end="33:6">dd</name> <operator pos:start="33:8" pos:end="33:8">=</operator> <name pos:start="33:10" pos:end="33:25"><name pos:start="33:10" pos:end="33:11">ts</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:15">ds</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:25">linesize</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:14"><expr pos:start="35:5" pos:end="35:13"><name pos:start="35:5" pos:end="35:6">ds</name> <operator pos:start="35:8" pos:end="35:8">=</operator> <literal type="number" pos:start="35:10" pos:end="35:13">1024</literal></expr>;</expr_stmt>



    <switch pos:start="39:5" pos:end="67:5">switch <condition pos:start="39:12" pos:end="39:26">(<expr pos:start="39:13" pos:end="39:25"><name pos:start="39:13" pos:end="39:25"><name pos:start="39:13" pos:end="39:14">ts</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:18">ds</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:25">depth</name></name></expr>)</condition> <block pos:start="39:28" pos:end="67:5">{<block_content pos:start="41:5" pos:end="65:15">

    <case pos:start="41:5" pos:end="41:12">case <expr pos:start="41:10" pos:end="41:11"><literal type="number" pos:start="41:10" pos:end="41:11">32</literal></expr>:</case>

	<expr_stmt pos:start="43:9" pos:end="43:28"><expr pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:9">f</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <name pos:start="43:13" pos:end="43:27">tcx_draw_line32</name></expr>;</expr_stmt>

	<break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:12">case <expr pos:start="47:10" pos:end="47:11"><literal type="number" pos:start="47:10" pos:end="47:11">15</literal></expr>:</case>

    <case pos:start="49:5" pos:end="49:12">case <expr pos:start="49:10" pos:end="49:11"><literal type="number" pos:start="49:10" pos:end="49:11">16</literal></expr>:</case>

	<expr_stmt pos:start="51:9" pos:end="51:28"><expr pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:9">f</name> <operator pos:start="51:11" pos:end="51:11">=</operator> <name pos:start="51:13" pos:end="51:27">tcx_draw_line16</name></expr>;</expr_stmt>

	<break pos:start="53:9" pos:end="53:14">break;</break>

    <default pos:start="55:5" pos:end="55:12">default:</default>

    <case pos:start="57:5" pos:end="57:11">case <expr pos:start="57:10" pos:end="57:10"><literal type="number" pos:start="57:10" pos:end="57:10">8</literal></expr>:</case>

	<expr_stmt pos:start="59:9" pos:end="59:27"><expr pos:start="59:9" pos:end="59:26"><name pos:start="59:9" pos:end="59:9">f</name> <operator pos:start="59:11" pos:end="59:11">=</operator> <name pos:start="59:13" pos:end="59:26">tcx_draw_line8</name></expr>;</expr_stmt>

	<break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:11">case <expr pos:start="63:10" pos:end="63:10"><literal type="number" pos:start="63:10" pos:end="63:10">0</literal></expr>:</case>

	<return pos:start="65:9" pos:end="65:15">return;</return>

    </block_content>}</block></switch>

    

    <for pos:start="71:5" pos:end="131:5">for<control pos:start="71:8" pos:end="71:64">(<init pos:start="71:9" pos:end="71:14"><expr pos:start="71:9" pos:end="71:13"><name pos:start="71:9" pos:end="71:9">y</name> <operator pos:start="71:11" pos:end="71:11">=</operator> <literal type="number" pos:start="71:13" pos:end="71:13">0</literal></expr>;</init> <condition pos:start="71:16" pos:end="71:30"><expr pos:start="71:16" pos:end="71:29"><name pos:start="71:16" pos:end="71:16">y</name> <operator pos:start="71:18" pos:end="71:18">&lt;</operator> <name pos:start="71:20" pos:end="71:29"><name pos:start="71:20" pos:end="71:21">ts</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:29">height</name></name></expr>;</condition> <incr pos:start="71:32" pos:end="71:63"><expr pos:start="71:32" pos:end="71:37"><name pos:start="71:32" pos:end="71:32">y</name> <operator pos:start="71:34" pos:end="71:35">+=</operator> <literal type="number" pos:start="71:37" pos:end="71:37">4</literal></expr><operator pos:start="71:38" pos:end="71:38">,</operator> <expr pos:start="71:40" pos:end="71:63"><name pos:start="71:40" pos:end="71:43">page</name> <operator pos:start="71:45" pos:end="71:46">+=</operator> <name pos:start="71:48" pos:end="71:63">TARGET_PAGE_SIZE</name></expr></incr>)</control> <block pos:start="71:66" pos:end="131:5">{<block_content pos:start="73:9" pos:end="129:9">

	<if_stmt pos:start="73:9" pos:end="129:9"><if pos:start="73:9" pos:end="111:9">if <condition pos:start="73:12" pos:end="73:64">(<expr pos:start="73:13" pos:end="73:63"><call pos:start="73:13" pos:end="73:63"><name pos:start="73:13" pos:end="73:41">cpu_physical_memory_get_dirty</name><argument_list pos:start="73:42" pos:end="73:63">(<argument pos:start="73:43" pos:end="73:46"><expr pos:start="73:43" pos:end="73:46"><name pos:start="73:43" pos:end="73:46">page</name></expr></argument>, <argument pos:start="73:49" pos:end="73:62"><expr pos:start="73:49" pos:end="73:62"><name pos:start="73:49" pos:end="73:62">VGA_DIRTY_FLAG</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:66" pos:end="111:9">{<block_content pos:start="75:13" pos:end="109:20">

	    <if_stmt pos:start="75:13" pos:end="77:28"><if pos:start="75:13" pos:end="77:28">if <condition pos:start="75:16" pos:end="75:28">(<expr pos:start="75:17" pos:end="75:27"><name pos:start="75:17" pos:end="75:23">y_start</name> <operator pos:start="75:25" pos:end="75:25">&lt;</operator> <literal type="number" pos:start="75:27" pos:end="75:27">0</literal></expr>)</condition><block type="pseudo" pos:start="77:17" pos:end="77:28"><block_content pos:start="77:17" pos:end="77:28">

                <expr_stmt pos:start="77:17" pos:end="77:28"><expr pos:start="77:17" pos:end="77:27"><name pos:start="77:17" pos:end="77:23">y_start</name> <operator pos:start="77:25" pos:end="77:25">=</operator> <name pos:start="77:27" pos:end="77:27">y</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="79:13" pos:end="81:32"><if pos:start="79:13" pos:end="81:32">if <condition pos:start="79:16" pos:end="79:32">(<expr pos:start="79:17" pos:end="79:31"><name pos:start="79:17" pos:end="79:20">page</name> <operator pos:start="79:22" pos:end="79:22">&lt;</operator> <name pos:start="79:24" pos:end="79:31">page_min</name></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:32"><block_content pos:start="81:17" pos:end="81:32">

                <expr_stmt pos:start="81:17" pos:end="81:32"><expr pos:start="81:17" pos:end="81:31"><name pos:start="81:17" pos:end="81:24">page_min</name> <operator pos:start="81:26" pos:end="81:26">=</operator> <name pos:start="81:28" pos:end="81:31">page</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="83:13" pos:end="85:32"><if pos:start="83:13" pos:end="85:32">if <condition pos:start="83:16" pos:end="83:32">(<expr pos:start="83:17" pos:end="83:31"><name pos:start="83:17" pos:end="83:20">page</name> <operator pos:start="83:22" pos:end="83:22">&gt;</operator> <name pos:start="83:24" pos:end="83:31">page_max</name></expr>)</condition><block type="pseudo" pos:start="85:17" pos:end="85:32"><block_content pos:start="85:17" pos:end="85:32">

                <expr_stmt pos:start="85:17" pos:end="85:32"><expr pos:start="85:17" pos:end="85:31"><name pos:start="85:17" pos:end="85:24">page_max</name> <operator pos:start="85:26" pos:end="85:26">=</operator> <name pos:start="85:28" pos:end="85:31">page</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

	    <expr_stmt pos:start="87:13" pos:end="87:35"><expr pos:start="87:13" pos:end="87:34"><call pos:start="87:13" pos:end="87:34"><name pos:start="87:13" pos:end="87:13">f</name><argument_list pos:start="87:14" pos:end="87:34">(<argument pos:start="87:15" pos:end="87:16"><expr pos:start="87:15" pos:end="87:16"><name pos:start="87:15" pos:end="87:16">ts</name></expr></argument>, <argument pos:start="87:19" pos:end="87:19"><expr pos:start="87:19" pos:end="87:19"><name pos:start="87:19" pos:end="87:19">d</name></expr></argument>, <argument pos:start="87:22" pos:end="87:22"><expr pos:start="87:22" pos:end="87:22"><name pos:start="87:22" pos:end="87:22">s</name></expr></argument>, <argument pos:start="87:25" pos:end="87:33"><expr pos:start="87:25" pos:end="87:33"><name pos:start="87:25" pos:end="87:33"><name pos:start="87:25" pos:end="87:26">ts</name><operator pos:start="87:27" pos:end="87:28">-&gt;</operator><name pos:start="87:29" pos:end="87:33">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="89:13" pos:end="89:20"><expr pos:start="89:13" pos:end="89:19"><name pos:start="89:13" pos:end="89:13">d</name> <operator pos:start="89:15" pos:end="89:16">+=</operator> <name pos:start="89:18" pos:end="89:19">dd</name></expr>;</expr_stmt>

	    <expr_stmt pos:start="91:13" pos:end="91:20"><expr pos:start="91:13" pos:end="91:19"><name pos:start="91:13" pos:end="91:13">s</name> <operator pos:start="91:15" pos:end="91:16">+=</operator> <name pos:start="91:18" pos:end="91:19">ds</name></expr>;</expr_stmt>

	    <expr_stmt pos:start="93:13" pos:end="93:35"><expr pos:start="93:13" pos:end="93:34"><call pos:start="93:13" pos:end="93:34"><name pos:start="93:13" pos:end="93:13">f</name><argument_list pos:start="93:14" pos:end="93:34">(<argument pos:start="93:15" pos:end="93:16"><expr pos:start="93:15" pos:end="93:16"><name pos:start="93:15" pos:end="93:16">ts</name></expr></argument>, <argument pos:start="93:19" pos:end="93:19"><expr pos:start="93:19" pos:end="93:19"><name pos:start="93:19" pos:end="93:19">d</name></expr></argument>, <argument pos:start="93:22" pos:end="93:22"><expr pos:start="93:22" pos:end="93:22"><name pos:start="93:22" pos:end="93:22">s</name></expr></argument>, <argument pos:start="93:25" pos:end="93:33"><expr pos:start="93:25" pos:end="93:33"><name pos:start="93:25" pos:end="93:33"><name pos:start="93:25" pos:end="93:26">ts</name><operator pos:start="93:27" pos:end="93:28">-&gt;</operator><name pos:start="93:29" pos:end="93:33">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="95:13" pos:end="95:20"><expr pos:start="95:13" pos:end="95:19"><name pos:start="95:13" pos:end="95:13">d</name> <operator pos:start="95:15" pos:end="95:16">+=</operator> <name pos:start="95:18" pos:end="95:19">dd</name></expr>;</expr_stmt>

	    <expr_stmt pos:start="97:13" pos:end="97:20"><expr pos:start="97:13" pos:end="97:19"><name pos:start="97:13" pos:end="97:13">s</name> <operator pos:start="97:15" pos:end="97:16">+=</operator> <name pos:start="97:18" pos:end="97:19">ds</name></expr>;</expr_stmt>

	    <expr_stmt pos:start="99:13" pos:end="99:35"><expr pos:start="99:13" pos:end="99:34"><call pos:start="99:13" pos:end="99:34"><name pos:start="99:13" pos:end="99:13">f</name><argument_list pos:start="99:14" pos:end="99:34">(<argument pos:start="99:15" pos:end="99:16"><expr pos:start="99:15" pos:end="99:16"><name pos:start="99:15" pos:end="99:16">ts</name></expr></argument>, <argument pos:start="99:19" pos:end="99:19"><expr pos:start="99:19" pos:end="99:19"><name pos:start="99:19" pos:end="99:19">d</name></expr></argument>, <argument pos:start="99:22" pos:end="99:22"><expr pos:start="99:22" pos:end="99:22"><name pos:start="99:22" pos:end="99:22">s</name></expr></argument>, <argument pos:start="99:25" pos:end="99:33"><expr pos:start="99:25" pos:end="99:33"><name pos:start="99:25" pos:end="99:33"><name pos:start="99:25" pos:end="99:26">ts</name><operator pos:start="99:27" pos:end="99:28">-&gt;</operator><name pos:start="99:29" pos:end="99:33">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="101:13" pos:end="101:20"><expr pos:start="101:13" pos:end="101:19"><name pos:start="101:13" pos:end="101:13">d</name> <operator pos:start="101:15" pos:end="101:16">+=</operator> <name pos:start="101:18" pos:end="101:19">dd</name></expr>;</expr_stmt>

	    <expr_stmt pos:start="103:13" pos:end="103:20"><expr pos:start="103:13" pos:end="103:19"><name pos:start="103:13" pos:end="103:13">s</name> <operator pos:start="103:15" pos:end="103:16">+=</operator> <name pos:start="103:18" pos:end="103:19">ds</name></expr>;</expr_stmt>

	    <expr_stmt pos:start="105:13" pos:end="105:35"><expr pos:start="105:13" pos:end="105:34"><call pos:start="105:13" pos:end="105:34"><name pos:start="105:13" pos:end="105:13">f</name><argument_list pos:start="105:14" pos:end="105:34">(<argument pos:start="105:15" pos:end="105:16"><expr pos:start="105:15" pos:end="105:16"><name pos:start="105:15" pos:end="105:16">ts</name></expr></argument>, <argument pos:start="105:19" pos:end="105:19"><expr pos:start="105:19" pos:end="105:19"><name pos:start="105:19" pos:end="105:19">d</name></expr></argument>, <argument pos:start="105:22" pos:end="105:22"><expr pos:start="105:22" pos:end="105:22"><name pos:start="105:22" pos:end="105:22">s</name></expr></argument>, <argument pos:start="105:25" pos:end="105:33"><expr pos:start="105:25" pos:end="105:33"><name pos:start="105:25" pos:end="105:33"><name pos:start="105:25" pos:end="105:26">ts</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:33">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="107:13" pos:end="107:20"><expr pos:start="107:13" pos:end="107:19"><name pos:start="107:13" pos:end="107:13">d</name> <operator pos:start="107:15" pos:end="107:16">+=</operator> <name pos:start="107:18" pos:end="107:19">dd</name></expr>;</expr_stmt>

	    <expr_stmt pos:start="109:13" pos:end="109:20"><expr pos:start="109:13" pos:end="109:19"><name pos:start="109:13" pos:end="109:13">s</name> <operator pos:start="109:15" pos:end="109:16">+=</operator> <name pos:start="109:18" pos:end="109:19">ds</name></expr>;</expr_stmt>

	</block_content>}</block></if> <else pos:start="111:11" pos:end="129:9">else <block pos:start="111:16" pos:end="129:9">{<block_content pos:start="113:13" pos:end="127:24">

            <if_stmt pos:start="113:13" pos:end="123:13"><if pos:start="113:13" pos:end="123:13">if <condition pos:start="113:16" pos:end="113:29">(<expr pos:start="113:17" pos:end="113:28"><name pos:start="113:17" pos:end="113:23">y_start</name> <operator pos:start="113:25" pos:end="113:26">&gt;=</operator> <literal type="number" pos:start="113:28" pos:end="113:28">0</literal></expr>)</condition> <block pos:start="113:31" pos:end="123:13">{<block_content pos:start="117:17" pos:end="121:29">

                <comment type="block" pos:start="115:17" pos:end="115:38">/* flush to display */</comment>

                <expr_stmt pos:start="117:17" pos:end="119:51"><expr pos:start="117:17" pos:end="119:50"><call pos:start="117:17" pos:end="119:50"><name pos:start="117:17" pos:end="117:26">dpy_update</name><argument_list pos:start="117:27" pos:end="119:50">(<argument pos:start="117:28" pos:end="117:33"><expr pos:start="117:28" pos:end="117:33"><name pos:start="117:28" pos:end="117:33"><name pos:start="117:28" pos:end="117:29">ts</name><operator pos:start="117:30" pos:end="117:31">-&gt;</operator><name pos:start="117:32" pos:end="117:33">ds</name></name></expr></argument>, <argument pos:start="117:36" pos:end="117:36"><expr pos:start="117:36" pos:end="117:36"><literal type="number" pos:start="117:36" pos:end="117:36">0</literal></expr></argument>, <argument pos:start="117:39" pos:end="117:45"><expr pos:start="117:39" pos:end="117:45"><name pos:start="117:39" pos:end="117:45">y_start</name></expr></argument>, 

                           <argument pos:start="119:28" pos:end="119:36"><expr pos:start="119:28" pos:end="119:36"><name pos:start="119:28" pos:end="119:36"><name pos:start="119:28" pos:end="119:29">ts</name><operator pos:start="119:30" pos:end="119:31">-&gt;</operator><name pos:start="119:32" pos:end="119:36">width</name></name></expr></argument>, <argument pos:start="119:39" pos:end="119:49"><expr pos:start="119:39" pos:end="119:49"><name pos:start="119:39" pos:end="119:39">y</name> <operator pos:start="119:41" pos:end="119:41">-</operator> <name pos:start="119:43" pos:end="119:49">y_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:29"><expr pos:start="121:17" pos:end="121:28"><name pos:start="121:17" pos:end="121:23">y_start</name> <operator pos:start="121:25" pos:end="121:25">=</operator> <operator pos:start="121:27" pos:end="121:27">-</operator><literal type="number" pos:start="121:28" pos:end="121:28">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

	    <expr_stmt pos:start="125:13" pos:end="125:24"><expr pos:start="125:13" pos:end="125:23"><name pos:start="125:13" pos:end="125:13">d</name> <operator pos:start="125:15" pos:end="125:16">+=</operator> <name pos:start="125:18" pos:end="125:19">dd</name> <operator pos:start="125:21" pos:end="125:21">*</operator> <literal type="number" pos:start="125:23" pos:end="125:23">4</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="127:13" pos:end="127:24"><expr pos:start="127:13" pos:end="127:23"><name pos:start="127:13" pos:end="127:13">s</name> <operator pos:start="127:15" pos:end="127:16">+=</operator> <name pos:start="127:18" pos:end="127:19">ds</name> <operator pos:start="127:21" pos:end="127:21">*</operator> <literal type="number" pos:start="127:23" pos:end="127:23">4</literal></expr>;</expr_stmt>

	</block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="133:5" pos:end="141:5"><if pos:start="133:5" pos:end="141:5">if <condition pos:start="133:8" pos:end="133:21">(<expr pos:start="133:9" pos:end="133:20"><name pos:start="133:9" pos:end="133:15">y_start</name> <operator pos:start="133:17" pos:end="133:18">&gt;=</operator> <literal type="number" pos:start="133:20" pos:end="133:20">0</literal></expr>)</condition> <block pos:start="133:23" pos:end="141:5">{<block_content pos:start="137:9" pos:end="139:43">

	<comment type="block" pos:start="135:9" pos:end="135:30">/* flush to display */</comment>

	<expr_stmt pos:start="137:9" pos:end="139:43"><expr pos:start="137:9" pos:end="139:42"><call pos:start="137:9" pos:end="139:42"><name pos:start="137:9" pos:end="137:18">dpy_update</name><argument_list pos:start="137:19" pos:end="139:42">(<argument pos:start="137:20" pos:end="137:25"><expr pos:start="137:20" pos:end="137:25"><name pos:start="137:20" pos:end="137:25"><name pos:start="137:20" pos:end="137:21">ts</name><operator pos:start="137:22" pos:end="137:23">-&gt;</operator><name pos:start="137:24" pos:end="137:25">ds</name></name></expr></argument>, <argument pos:start="137:28" pos:end="137:28"><expr pos:start="137:28" pos:end="137:28"><literal type="number" pos:start="137:28" pos:end="137:28">0</literal></expr></argument>, <argument pos:start="137:31" pos:end="137:37"><expr pos:start="137:31" pos:end="137:37"><name pos:start="137:31" pos:end="137:37">y_start</name></expr></argument>, 

		   <argument pos:start="139:20" pos:end="139:28"><expr pos:start="139:20" pos:end="139:28"><name pos:start="139:20" pos:end="139:28"><name pos:start="139:20" pos:end="139:21">ts</name><operator pos:start="139:22" pos:end="139:23">-&gt;</operator><name pos:start="139:24" pos:end="139:28">width</name></name></expr></argument>, <argument pos:start="139:31" pos:end="139:41"><expr pos:start="139:31" pos:end="139:41"><name pos:start="139:31" pos:end="139:31">y</name> <operator pos:start="139:33" pos:end="139:33">-</operator> <name pos:start="139:35" pos:end="139:41">y_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="143:5" pos:end="143:30">/* reset modified pages */</comment>

    <if_stmt pos:start="145:5" pos:end="151:5"><if pos:start="145:5" pos:end="151:5">if <condition pos:start="145:8" pos:end="145:29">(<expr pos:start="145:9" pos:end="145:28"><name pos:start="145:9" pos:end="145:16">page_min</name> <operator pos:start="145:18" pos:end="145:19">&lt;=</operator> <name pos:start="145:21" pos:end="145:28">page_max</name></expr>)</condition> <block pos:start="145:31" pos:end="151:5">{<block_content pos:start="147:9" pos:end="149:56">

        <expr_stmt pos:start="147:9" pos:end="149:56"><expr pos:start="147:9" pos:end="149:55"><call pos:start="147:9" pos:end="149:55"><name pos:start="147:9" pos:end="147:39">cpu_physical_memory_reset_dirty</name><argument_list pos:start="147:40" pos:end="149:55">(<argument pos:start="147:41" pos:end="147:48"><expr pos:start="147:41" pos:end="147:48"><name pos:start="147:41" pos:end="147:48">page_min</name></expr></argument>, <argument pos:start="147:51" pos:end="147:77"><expr pos:start="147:51" pos:end="147:77"><name pos:start="147:51" pos:end="147:58">page_max</name> <operator pos:start="147:60" pos:end="147:60">+</operator> <name pos:start="147:62" pos:end="147:77">TARGET_PAGE_SIZE</name></expr></argument>,

                                        <argument pos:start="149:41" pos:end="149:54"><expr pos:start="149:41" pos:end="149:54"><name pos:start="149:41" pos:end="149:54">VGA_DIRTY_FLAG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
