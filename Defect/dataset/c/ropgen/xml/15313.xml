<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15313.c" pos:tabs="8"><function pos:start="1:1" pos:end="40:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">get_buffer_internal</name><parameter_list pos:start="1:31" pos:end="1:80">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:52"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:68"><decl pos:start="1:55" pos:end="1:68"><type pos:start="1:55" pos:end="1:68"><name pos:start="1:55" pos:end="1:61">AVFrame</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:68">frame</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:79"><decl pos:start="1:71" pos:end="1:79"><type pos:start="1:71" pos:end="1:79"><name pos:start="1:71" pos:end="1:73">int</name></type> <name pos:start="1:75" pos:end="1:79">flags</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="40:1">{<block_content pos:start="3:5" pos:end="39:15">
    <decl_stmt pos:start="3:5" pos:end="3:46"><decl pos:start="3:5" pos:end="3:45"><type pos:start="3:5" pos:end="3:21"><specifier pos:start="3:5" pos:end="3:9">const</specifier> <name pos:start="3:11" pos:end="3:19">AVHWAccel</name> <modifier pos:start="3:21" pos:end="3:21">*</modifier></type><name pos:start="3:22" pos:end="3:28">hwaccel</name> <init pos:start="3:30" pos:end="3:45">= <expr pos:start="3:32" pos:end="3:45"><name pos:start="3:32" pos:end="3:45"><name pos:start="3:32" pos:end="3:36">avctx</name><operator pos:start="3:37" pos:end="3:38">-&gt;</operator><name pos:start="3:39" pos:end="3:45">hwaccel</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:32"><decl pos:start="4:5" pos:end="4:31"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:27">override_dimensions</name> <init pos:start="4:29" pos:end="4:31">= <expr pos:start="4:31" pos:end="4:31"><literal type="number" pos:start="4:31" pos:end="4:31">1</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>
    <if_stmt pos:start="6:5" pos:end="20:5"><if pos:start="6:5" pos:end="20:5">if <condition pos:start="6:8" pos:end="6:48">(<expr pos:start="6:9" pos:end="6:47"><name pos:start="6:9" pos:end="6:25"><name pos:start="6:9" pos:end="6:13">avctx</name><operator pos:start="6:14" pos:end="6:15">-&gt;</operator><name pos:start="6:16" pos:end="6:25">codec_type</name></name> <operator pos:start="6:27" pos:end="6:28">==</operator> <name pos:start="6:30" pos:end="6:47">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="6:50" pos:end="20:5">{<block_content pos:start="7:9" pos:end="19:9">
        <if_stmt pos:start="7:9" pos:end="10:9"><if pos:start="7:9" pos:end="10:9">if <condition pos:start="7:12" pos:end="7:140">(<expr pos:start="7:13" pos:end="7:139"><operator pos:start="7:13" pos:end="7:13">(</operator><name pos:start="7:14" pos:end="7:16">ret</name> <operator pos:start="7:18" pos:end="7:18">=</operator> <call pos:start="7:20" pos:end="7:114"><name pos:start="7:20" pos:end="7:39">av_image_check_size2</name><argument_list pos:start="7:40" pos:end="7:114">(<argument pos:start="7:41" pos:end="7:52"><expr pos:start="7:41" pos:end="7:52"><name pos:start="7:41" pos:end="7:52"><name pos:start="7:41" pos:end="7:45">avctx</name><operator pos:start="7:46" pos:end="7:47">-&gt;</operator><name pos:start="7:48" pos:end="7:52">width</name></name></expr></argument>, <argument pos:start="7:55" pos:end="7:67"><expr pos:start="7:55" pos:end="7:67"><name pos:start="7:55" pos:end="7:67"><name pos:start="7:55" pos:end="7:59">avctx</name><operator pos:start="7:60" pos:end="7:61">-&gt;</operator><name pos:start="7:62" pos:end="7:67">height</name></name></expr></argument>, <argument pos:start="7:70" pos:end="7:86"><expr pos:start="7:70" pos:end="7:86"><name pos:start="7:70" pos:end="7:86"><name pos:start="7:70" pos:end="7:74">avctx</name><operator pos:start="7:75" pos:end="7:76">-&gt;</operator><name pos:start="7:77" pos:end="7:86">max_pixels</name></name></expr></argument>, <argument pos:start="7:89" pos:end="7:103"><expr pos:start="7:89" pos:end="7:103"><name pos:start="7:89" pos:end="7:103">AV_PIX_FMT_NONE</name></expr></argument>, <argument pos:start="7:106" pos:end="7:106"><expr pos:start="7:106" pos:end="7:106"><literal type="number" pos:start="7:106" pos:end="7:106">0</literal></expr></argument>, <argument pos:start="7:109" pos:end="7:113"><expr pos:start="7:109" pos:end="7:113"><name pos:start="7:109" pos:end="7:113">avctx</name></expr></argument>)</argument_list></call><operator pos:start="7:115" pos:end="7:115">)</operator> <operator pos:start="7:117" pos:end="7:117">&lt;</operator> <literal type="number" pos:start="7:119" pos:end="7:119">0</literal> <operator pos:start="7:121" pos:end="7:122">||</operator> <name pos:start="7:124" pos:end="7:137"><name pos:start="7:124" pos:end="7:128">avctx</name><operator pos:start="7:129" pos:end="7:130">-&gt;</operator><name pos:start="7:131" pos:end="7:137">pix_fmt</name></name><operator pos:start="7:138" pos:end="7:138">&lt;</operator><literal type="number" pos:start="7:139" pos:end="7:139">0</literal></expr>)</condition> <block pos:start="7:142" pos:end="10:9">{<block_content pos:start="8:13" pos:end="9:35">
            <expr_stmt pos:start="8:13" pos:end="8:88"><expr pos:start="8:13" pos:end="8:87"><call pos:start="8:13" pos:end="8:87"><name pos:start="8:13" pos:end="8:18">av_log</name><argument_list pos:start="8:19" pos:end="8:87">(<argument pos:start="8:20" pos:end="8:24"><expr pos:start="8:20" pos:end="8:24"><name pos:start="8:20" pos:end="8:24">avctx</name></expr></argument>, <argument pos:start="8:27" pos:end="8:38"><expr pos:start="8:27" pos:end="8:38"><name pos:start="8:27" pos:end="8:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="8:41" pos:end="8:86"><expr pos:start="8:41" pos:end="8:86"><literal type="string" pos:start="8:41" pos:end="8:86">"video_get_buffer: image parameters invalid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="9:13" pos:end="9:35">return <expr pos:start="9:20" pos:end="9:34"><call pos:start="9:20" pos:end="9:34"><name pos:start="9:20" pos:end="9:26">AVERROR</name><argument_list pos:start="9:27" pos:end="9:34">(<argument pos:start="9:28" pos:end="9:33"><expr pos:start="9:28" pos:end="9:33"><name pos:start="9:28" pos:end="9:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="11:9" pos:end="15:9"><if pos:start="11:9" pos:end="15:9">if <condition pos:start="11:12" pos:end="11:52">(<expr pos:start="11:13" pos:end="11:51"><name pos:start="11:13" pos:end="11:24"><name pos:start="11:13" pos:end="11:17">frame</name><operator pos:start="11:18" pos:end="11:19">-&gt;</operator><name pos:start="11:20" pos:end="11:24">width</name></name> <operator pos:start="11:26" pos:end="11:27">&lt;=</operator> <literal type="number" pos:start="11:29" pos:end="11:29">0</literal> <operator pos:start="11:31" pos:end="11:32">||</operator> <name pos:start="11:34" pos:end="11:46"><name pos:start="11:34" pos:end="11:38">frame</name><operator pos:start="11:39" pos:end="11:40">-&gt;</operator><name pos:start="11:41" pos:end="11:46">height</name></name> <operator pos:start="11:48" pos:end="11:49">&lt;=</operator> <literal type="number" pos:start="11:51" pos:end="11:51">0</literal></expr>)</condition> <block pos:start="11:54" pos:end="15:9">{<block_content pos:start="12:13" pos:end="14:36">
            <expr_stmt pos:start="12:13" pos:end="12:101"><expr pos:start="12:13" pos:end="12:100"><name pos:start="12:13" pos:end="12:24"><name pos:start="12:13" pos:end="12:17">frame</name><operator pos:start="12:18" pos:end="12:19">-&gt;</operator><name pos:start="12:20" pos:end="12:24">width</name></name>  <operator pos:start="12:27" pos:end="12:27">=</operator> <call pos:start="12:29" pos:end="12:100"><name pos:start="12:29" pos:end="12:33">FFMAX</name><argument_list pos:start="12:34" pos:end="12:100">(<argument pos:start="12:35" pos:end="12:46"><expr pos:start="12:35" pos:end="12:46"><name pos:start="12:35" pos:end="12:46"><name pos:start="12:35" pos:end="12:39">avctx</name><operator pos:start="12:40" pos:end="12:41">-&gt;</operator><name pos:start="12:42" pos:end="12:46">width</name></name></expr></argument>,  <argument pos:start="12:50" pos:end="12:99"><expr pos:start="12:50" pos:end="12:99"><call pos:start="12:50" pos:end="12:99"><name pos:start="12:50" pos:end="12:63">AV_CEIL_RSHIFT</name><argument_list pos:start="12:64" pos:end="12:99">(<argument pos:start="12:65" pos:end="12:82"><expr pos:start="12:65" pos:end="12:82"><name pos:start="12:65" pos:end="12:82"><name pos:start="12:65" pos:end="12:69">avctx</name><operator pos:start="12:70" pos:end="12:71">-&gt;</operator><name pos:start="12:72" pos:end="12:82">coded_width</name></name></expr></argument>,  <argument pos:start="12:86" pos:end="12:98"><expr pos:start="12:86" pos:end="12:98"><name pos:start="12:86" pos:end="12:98"><name pos:start="12:86" pos:end="12:90">avctx</name><operator pos:start="12:91" pos:end="12:92">-&gt;</operator><name pos:start="12:93" pos:end="12:98">lowres</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="13:13" pos:end="13:101"><expr pos:start="13:13" pos:end="13:100"><name pos:start="13:13" pos:end="13:25"><name pos:start="13:13" pos:end="13:17">frame</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:25">height</name></name> <operator pos:start="13:27" pos:end="13:27">=</operator> <call pos:start="13:29" pos:end="13:100"><name pos:start="13:29" pos:end="13:33">FFMAX</name><argument_list pos:start="13:34" pos:end="13:100">(<argument pos:start="13:35" pos:end="13:47"><expr pos:start="13:35" pos:end="13:47"><name pos:start="13:35" pos:end="13:47"><name pos:start="13:35" pos:end="13:39">avctx</name><operator pos:start="13:40" pos:end="13:41">-&gt;</operator><name pos:start="13:42" pos:end="13:47">height</name></name></expr></argument>, <argument pos:start="13:50" pos:end="13:99"><expr pos:start="13:50" pos:end="13:99"><call pos:start="13:50" pos:end="13:99"><name pos:start="13:50" pos:end="13:63">AV_CEIL_RSHIFT</name><argument_list pos:start="13:64" pos:end="13:99">(<argument pos:start="13:65" pos:end="13:83"><expr pos:start="13:65" pos:end="13:83"><name pos:start="13:65" pos:end="13:83"><name pos:start="13:65" pos:end="13:69">avctx</name><operator pos:start="13:70" pos:end="13:71">-&gt;</operator><name pos:start="13:72" pos:end="13:83">coded_height</name></name></expr></argument>, <argument pos:start="13:86" pos:end="13:98"><expr pos:start="13:86" pos:end="13:98"><name pos:start="13:86" pos:end="13:98"><name pos:start="13:86" pos:end="13:90">avctx</name><operator pos:start="13:91" pos:end="13:92">-&gt;</operator><name pos:start="13:93" pos:end="13:98">lowres</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="14:13" pos:end="14:36"><expr pos:start="14:13" pos:end="14:35"><name pos:start="14:13" pos:end="14:31">override_dimensions</name> <operator pos:start="14:33" pos:end="14:33">=</operator> <literal type="number" pos:start="14:35" pos:end="14:35">0</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="16:9" pos:end="19:9"><if pos:start="16:9" pos:end="19:9">if <condition pos:start="16:12" pos:end="16:81">(<expr pos:start="16:13" pos:end="16:80"><name pos:start="16:13" pos:end="16:26"><name pos:start="16:13" pos:end="16:17">frame</name><operator pos:start="16:18" pos:end="16:19">-&gt;</operator><name pos:start="16:20" pos:end="16:23">data</name><index pos:start="16:24" pos:end="16:26">[<expr pos:start="16:25" pos:end="16:25"><literal type="number" pos:start="16:25" pos:end="16:25">0</literal></expr>]</index></name> <operator pos:start="16:28" pos:end="16:29">||</operator> <name pos:start="16:31" pos:end="16:44"><name pos:start="16:31" pos:end="16:35">frame</name><operator pos:start="16:36" pos:end="16:37">-&gt;</operator><name pos:start="16:38" pos:end="16:41">data</name><index pos:start="16:42" pos:end="16:44">[<expr pos:start="16:43" pos:end="16:43"><literal type="number" pos:start="16:43" pos:end="16:43">1</literal></expr>]</index></name> <operator pos:start="16:46" pos:end="16:47">||</operator> <name pos:start="16:49" pos:end="16:62"><name pos:start="16:49" pos:end="16:53">frame</name><operator pos:start="16:54" pos:end="16:55">-&gt;</operator><name pos:start="16:56" pos:end="16:59">data</name><index pos:start="16:60" pos:end="16:62">[<expr pos:start="16:61" pos:end="16:61"><literal type="number" pos:start="16:61" pos:end="16:61">2</literal></expr>]</index></name> <operator pos:start="16:64" pos:end="16:65">||</operator> <name pos:start="16:67" pos:end="16:80"><name pos:start="16:67" pos:end="16:71">frame</name><operator pos:start="16:72" pos:end="16:73">-&gt;</operator><name pos:start="16:74" pos:end="16:77">data</name><index pos:start="16:78" pos:end="16:80">[<expr pos:start="16:79" pos:end="16:79"><literal type="number" pos:start="16:79" pos:end="16:79">3</literal></expr>]</index></name></expr>)</condition> <block pos:start="16:83" pos:end="19:9">{<block_content pos:start="17:13" pos:end="18:35">
            <expr_stmt pos:start="17:13" pos:end="17:87"><expr pos:start="17:13" pos:end="17:86"><call pos:start="17:13" pos:end="17:86"><name pos:start="17:13" pos:end="17:18">av_log</name><argument_list pos:start="17:19" pos:end="17:86">(<argument pos:start="17:20" pos:end="17:24"><expr pos:start="17:20" pos:end="17:24"><name pos:start="17:20" pos:end="17:24">avctx</name></expr></argument>, <argument pos:start="17:27" pos:end="17:38"><expr pos:start="17:27" pos:end="17:38"><name pos:start="17:27" pos:end="17:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="17:41" pos:end="17:85"><expr pos:start="17:41" pos:end="17:85"><literal type="string" pos:start="17:41" pos:end="17:85">"pic-&gt;data[*]!=NULL in get_buffer_internal\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="18:13" pos:end="18:35">return <expr pos:start="18:20" pos:end="18:34"><call pos:start="18:20" pos:end="18:34"><name pos:start="18:20" pos:end="18:26">AVERROR</name><argument_list pos:start="18:27" pos:end="18:34">(<argument pos:start="18:28" pos:end="18:33"><expr pos:start="18:28" pos:end="18:33"><name pos:start="18:28" pos:end="18:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:46"><expr pos:start="21:5" pos:end="21:45"><name pos:start="21:5" pos:end="21:7">ret</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:45"><name pos:start="21:11" pos:end="21:31">ff_decode_frame_props</name><argument_list pos:start="21:32" pos:end="21:45">(<argument pos:start="21:33" pos:end="21:37"><expr pos:start="21:33" pos:end="21:37"><name pos:start="21:33" pos:end="21:37">avctx</name></expr></argument>, <argument pos:start="21:40" pos:end="21:44"><expr pos:start="21:40" pos:end="21:44"><name pos:start="21:40" pos:end="21:44">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="22:9" pos:end="22:19">return <expr pos:start="22:16" pos:end="22:18"><name pos:start="22:16" pos:end="22:18">ret</name></expr>;</return>
    <if_stmt pos:start="23:5" pos:end="29:43"><if pos:start="23:5" pos:end="28:5">if <condition pos:start="23:8" pos:end="23:16">(<expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:15">hwaccel</name></expr>)</condition> <block pos:start="23:18" pos:end="28:5">{<block_content pos:start="24:9" pos:end="27:9">
        <if_stmt pos:start="24:9" pos:end="27:9"><if pos:start="24:9" pos:end="27:9">if <condition pos:start="24:12" pos:end="24:33">(<expr pos:start="24:13" pos:end="24:32"><name pos:start="24:13" pos:end="24:32"><name pos:start="24:13" pos:end="24:19">hwaccel</name><operator pos:start="24:20" pos:end="24:21">-&gt;</operator><name pos:start="24:22" pos:end="24:32">alloc_frame</name></name></expr>)</condition> <block pos:start="24:35" pos:end="27:9">{<block_content pos:start="25:13" pos:end="26:21">
            <expr_stmt pos:start="25:13" pos:end="25:53"><expr pos:start="25:13" pos:end="25:52"><name pos:start="25:13" pos:end="25:15">ret</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <call pos:start="25:19" pos:end="25:52"><name pos:start="25:19" pos:end="25:38"><name pos:start="25:19" pos:end="25:25">hwaccel</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:38">alloc_frame</name></name><argument_list pos:start="25:39" pos:end="25:52">(<argument pos:start="25:40" pos:end="25:44"><expr pos:start="25:40" pos:end="25:44"><name pos:start="25:40" pos:end="25:44">avctx</name></expr></argument>, <argument pos:start="25:47" pos:end="25:51"><expr pos:start="25:47" pos:end="25:51"><name pos:start="25:47" pos:end="25:51">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <goto pos:start="26:13" pos:end="26:21">goto <name pos:start="26:18" pos:end="26:20">end</name>;</goto>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if> <else pos:start="28:7" pos:end="29:43">else<block type="pseudo" pos:start="29:9" pos:end="29:43"><block_content pos:start="29:9" pos:end="29:43">
        <expr_stmt pos:start="29:9" pos:end="29:43"><expr pos:start="29:9" pos:end="29:42"><name pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:13">avctx</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:25">sw_pix_fmt</name></name> <operator pos:start="29:27" pos:end="29:27">=</operator> <name pos:start="29:29" pos:end="29:42"><name pos:start="29:29" pos:end="29:33">avctx</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:42">pix_fmt</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:50"><expr pos:start="30:5" pos:end="30:49"><name pos:start="30:5" pos:end="30:7">ret</name> <operator pos:start="30:9" pos:end="30:9">=</operator> <call pos:start="30:11" pos:end="30:49"><name pos:start="30:11" pos:end="30:28"><name pos:start="30:11" pos:end="30:15">avctx</name><operator pos:start="30:16" pos:end="30:17">-&gt;</operator><name pos:start="30:18" pos:end="30:28">get_buffer2</name></name><argument_list pos:start="30:29" pos:end="30:49">(<argument pos:start="30:30" pos:end="30:34"><expr pos:start="30:30" pos:end="30:34"><name pos:start="30:30" pos:end="30:34">avctx</name></expr></argument>, <argument pos:start="30:37" pos:end="30:41"><expr pos:start="30:37" pos:end="30:41"><name pos:start="30:37" pos:end="30:41">frame</name></expr></argument>, <argument pos:start="30:44" pos:end="30:48"><expr pos:start="30:44" pos:end="30:48"><name pos:start="30:44" pos:end="30:48">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="31:5" pos:end="32:50"><if pos:start="31:5" pos:end="32:50">if <condition pos:start="31:8" pos:end="31:17">(<expr pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:14">&gt;=</operator> <literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>)</condition><block type="pseudo" pos:start="32:9" pos:end="32:50"><block_content pos:start="32:9" pos:end="32:50">
        <expr_stmt pos:start="32:9" pos:end="32:50"><expr pos:start="32:9" pos:end="32:49"><call pos:start="32:9" pos:end="32:49"><name pos:start="32:9" pos:end="32:35">validate_avframe_allocation</name><argument_list pos:start="32:36" pos:end="32:49">(<argument pos:start="32:37" pos:end="32:41"><expr pos:start="32:37" pos:end="32:41"><name pos:start="32:37" pos:end="32:41">avctx</name></expr></argument>, <argument pos:start="32:44" pos:end="32:48"><expr pos:start="32:44" pos:end="32:48"><name pos:start="32:44" pos:end="32:48">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<label pos:start="33:1" pos:end="33:4"><name pos:start="33:1" pos:end="33:3">end</name>:</label>
    <if_stmt pos:start="34:5" pos:end="38:5"><if pos:start="34:5" pos:end="38:5">if <condition pos:start="34:8" pos:end="35:71">(<expr pos:start="34:9" pos:end="35:70"><name pos:start="34:9" pos:end="34:25"><name pos:start="34:9" pos:end="34:13">avctx</name><operator pos:start="34:14" pos:end="34:15">-&gt;</operator><name pos:start="34:16" pos:end="34:25">codec_type</name></name> <operator pos:start="34:27" pos:end="34:28">==</operator> <name pos:start="34:30" pos:end="34:47">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="34:49" pos:end="34:50">&amp;&amp;</operator> <operator pos:start="34:52" pos:end="34:52">!</operator><name pos:start="34:53" pos:end="34:71">override_dimensions</name> <operator pos:start="34:73" pos:end="34:74">&amp;&amp;</operator>
        <operator pos:start="35:9" pos:end="35:9">!</operator><operator pos:start="35:10" pos:end="35:10">(</operator><name pos:start="35:11" pos:end="35:37"><name pos:start="35:11" pos:end="35:15">avctx</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:22">codec</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:37">caps_internal</name></name> <operator pos:start="35:39" pos:end="35:39">&amp;</operator> <name pos:start="35:41" pos:end="35:69">FF_CODEC_CAP_EXPORTS_CROPPING</name><operator pos:start="35:70" pos:end="35:70">)</operator></expr>)</condition> <block pos:start="35:73" pos:end="38:5">{<block_content pos:start="36:9" pos:end="37:38">
        <expr_stmt pos:start="36:9" pos:end="36:37"><expr pos:start="36:9" pos:end="36:36"><name pos:start="36:9" pos:end="36:20"><name pos:start="36:9" pos:end="36:13">frame</name><operator pos:start="36:14" pos:end="36:15">-&gt;</operator><name pos:start="36:16" pos:end="36:20">width</name></name>  <operator pos:start="36:23" pos:end="36:23">=</operator> <name pos:start="36:25" pos:end="36:36"><name pos:start="36:25" pos:end="36:29">avctx</name><operator pos:start="36:30" pos:end="36:31">-&gt;</operator><name pos:start="36:32" pos:end="36:36">width</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="37:9" pos:end="37:38"><expr pos:start="37:9" pos:end="37:37"><name pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:13">frame</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:21">height</name></name> <operator pos:start="37:23" pos:end="37:23">=</operator> <name pos:start="37:25" pos:end="37:37"><name pos:start="37:25" pos:end="37:29">avctx</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:37">height</name></name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <return pos:start="39:5" pos:end="39:15">return <expr pos:start="39:12" pos:end="39:14"><name pos:start="39:12" pos:end="39:14">ret</name></expr>;</return>
</block_content>}</block></function></unit>
