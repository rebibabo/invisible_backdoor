<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15508.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">h264_probe</name><parameter_list pos:start="1:22" pos:end="1:37">(<parameter pos:start="1:23" pos:end="1:36"><decl pos:start="1:23" pos:end="1:36"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:33">AVProbeData</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:13">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:17">code</name> <init pos:start="5:19" pos:end="5:22">= <expr pos:start="5:21" pos:end="5:22"><operator pos:start="5:21" pos:end="5:21">-</operator><literal type="number" pos:start="5:22" pos:end="5:22">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">sps</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>, <decl pos:start="7:18" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:20">pps</name> <init pos:start="7:22" pos:end="7:24">= <expr pos:start="7:24" pos:end="7:24"><literal type="number" pos:start="7:24" pos:end="7:24">0</literal></expr></init></decl>, <decl pos:start="7:27" pos:end="7:33"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:27" pos:end="7:29">idr</name> <init pos:start="7:31" pos:end="7:33">= <expr pos:start="7:33" pos:end="7:33"><literal type="number" pos:start="7:33" pos:end="7:33">0</literal></expr></init></decl>, <decl pos:start="7:36" pos:end="7:42"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:36" pos:end="7:38">res</name> <init pos:start="7:40" pos:end="7:42">= <expr pos:start="7:42" pos:end="7:42"><literal type="number" pos:start="7:42" pos:end="7:42">0</literal></expr></init></decl>, <decl pos:start="7:45" pos:end="7:51"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:45" pos:end="7:47">sli</name> <init pos:start="7:49" pos:end="7:51">= <expr pos:start="7:51" pos:end="7:51"><literal type="number" pos:start="7:51" pos:end="7:51">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="95:5">for <control pos:start="13:9" pos:end="13:37">(<init pos:start="13:10" pos:end="13:15"><expr pos:start="13:10" pos:end="13:14"><name pos:start="13:10" pos:end="13:10">i</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</init> <condition pos:start="13:17" pos:end="13:32"><expr pos:start="13:17" pos:end="13:31"><name pos:start="13:17" pos:end="13:17">i</name> <operator pos:start="13:19" pos:end="13:19">&lt;</operator> <name pos:start="13:21" pos:end="13:31"><name pos:start="13:21" pos:end="13:21">p</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:31">buf_size</name></name></expr>;</condition> <incr pos:start="13:34" pos:end="13:36"><expr pos:start="13:34" pos:end="13:36"><name pos:start="13:34" pos:end="13:34">i</name><operator pos:start="13:35" pos:end="13:36">++</operator></expr></incr>)</control> <block pos:start="13:39" pos:end="95:5">{<block_content pos:start="15:9" pos:end="93:9">

        <expr_stmt pos:start="15:9" pos:end="15:39"><expr pos:start="15:9" pos:end="15:38"><name pos:start="15:9" pos:end="15:12">code</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <operator pos:start="15:16" pos:end="15:16">(</operator><name pos:start="15:17" pos:end="15:20">code</name> <operator pos:start="15:22" pos:end="15:23">&lt;&lt;</operator> <literal type="number" pos:start="15:25" pos:end="15:25">8</literal><operator pos:start="15:26" pos:end="15:26">)</operator> <operator pos:start="15:28" pos:end="15:28">+</operator> <name pos:start="15:30" pos:end="15:38"><name pos:start="15:30" pos:end="15:30">p</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:35">buf</name><index pos:start="15:36" pos:end="15:38">[<expr pos:start="15:37" pos:end="15:37"><name pos:start="15:37" pos:end="15:37">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="93:9"><if pos:start="17:9" pos:end="93:9">if <condition pos:start="17:12" pos:end="17:41">(<expr pos:start="17:13" pos:end="17:40"><operator pos:start="17:13" pos:end="17:13">(</operator><name pos:start="17:14" pos:end="17:17">code</name> <operator pos:start="17:19" pos:end="17:19">&amp;</operator> <literal type="number" pos:start="17:21" pos:end="17:30">0xffffff00</literal><operator pos:start="17:31" pos:end="17:31">)</operator> <operator pos:start="17:33" pos:end="17:34">==</operator> <literal type="number" pos:start="17:36" pos:end="17:40">0x100</literal></expr>)</condition> <block pos:start="17:43" pos:end="93:9">{<block_content pos:start="19:13" pos:end="91:13">

            <decl_stmt pos:start="19:13" pos:end="19:42"><decl pos:start="19:13" pos:end="19:41"><type pos:start="19:13" pos:end="19:15"><name pos:start="19:13" pos:end="19:15">int</name></type> <name pos:start="19:17" pos:end="19:23">ref_idc</name> <init pos:start="19:25" pos:end="19:41">= <expr pos:start="19:27" pos:end="19:41"><operator pos:start="19:27" pos:end="19:27">(</operator><name pos:start="19:28" pos:end="19:31">code</name> <operator pos:start="19:33" pos:end="19:34">&gt;&gt;</operator> <literal type="number" pos:start="19:36" pos:end="19:36">5</literal><operator pos:start="19:37" pos:end="19:37">)</operator> <operator pos:start="19:39" pos:end="19:39">&amp;</operator> <literal type="number" pos:start="19:41" pos:end="19:41">3</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="21:13" pos:end="21:38"><decl pos:start="21:13" pos:end="21:37"><type pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:15">int</name></type> <name pos:start="21:17" pos:end="21:20">type</name>    <init pos:start="21:25" pos:end="21:37">= <expr pos:start="21:27" pos:end="21:37"><name pos:start="21:27" pos:end="21:30">code</name> <operator pos:start="21:32" pos:end="21:32">&amp;</operator> <literal type="number" pos:start="21:34" pos:end="21:37">0x1F</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="23:13" pos:end="33:14"><decl pos:start="23:13" pos:end="33:13"><type pos:start="23:13" pos:end="23:31"><specifier pos:start="23:13" pos:end="23:18">static</specifier> <specifier pos:start="23:20" pos:end="23:24">const</specifier> <name pos:start="23:26" pos:end="23:31">int8_t</name></type> <name pos:start="23:33" pos:end="23:42"><name pos:start="23:33" pos:end="23:40">ref_zero</name><index pos:start="23:41" pos:end="23:42">[]</index></name> <init pos:start="23:44" pos:end="33:13">= <expr pos:start="23:46" pos:end="33:13"><block pos:start="23:46" pos:end="33:13">{

                 <expr pos:start="25:18" pos:end="25:18"><literal type="number" pos:start="25:18" pos:end="25:18">2</literal></expr>,  <expr pos:start="25:22" pos:end="25:22"><literal type="number" pos:start="25:22" pos:end="25:22">0</literal></expr>,  <expr pos:start="25:26" pos:end="25:26"><literal type="number" pos:start="25:26" pos:end="25:26">0</literal></expr>,  <expr pos:start="25:30" pos:end="25:30"><literal type="number" pos:start="25:30" pos:end="25:30">0</literal></expr>,  <expr pos:start="25:34" pos:end="25:34"><literal type="number" pos:start="25:34" pos:end="25:34">0</literal></expr>, <expr pos:start="25:37" pos:end="25:38"><operator pos:start="25:37" pos:end="25:37">-</operator><literal type="number" pos:start="25:38" pos:end="25:38">1</literal></expr>,  <expr pos:start="25:42" pos:end="25:42"><literal type="number" pos:start="25:42" pos:end="25:42">1</literal></expr>, <expr pos:start="25:45" pos:end="25:46"><operator pos:start="25:45" pos:end="25:45">-</operator><literal type="number" pos:start="25:46" pos:end="25:46">1</literal></expr>,

                <expr pos:start="27:17" pos:end="27:18"><operator pos:start="27:17" pos:end="27:17">-</operator><literal type="number" pos:start="27:18" pos:end="27:18">1</literal></expr>,  <expr pos:start="27:22" pos:end="27:22"><literal type="number" pos:start="27:22" pos:end="27:22">1</literal></expr>,  <expr pos:start="27:26" pos:end="27:26"><literal type="number" pos:start="27:26" pos:end="27:26">1</literal></expr>,  <expr pos:start="27:30" pos:end="27:30"><literal type="number" pos:start="27:30" pos:end="27:30">1</literal></expr>,  <expr pos:start="27:34" pos:end="27:34"><literal type="number" pos:start="27:34" pos:end="27:34">1</literal></expr>, <expr pos:start="27:37" pos:end="27:38"><operator pos:start="27:37" pos:end="27:37">-</operator><literal type="number" pos:start="27:38" pos:end="27:38">1</literal></expr>,  <expr pos:start="27:42" pos:end="27:42"><literal type="number" pos:start="27:42" pos:end="27:42">2</literal></expr>,  <expr pos:start="27:46" pos:end="27:46"><literal type="number" pos:start="27:46" pos:end="27:46">2</literal></expr>,

                 <expr pos:start="29:18" pos:end="29:18"><literal type="number" pos:start="29:18" pos:end="29:18">2</literal></expr>,  <expr pos:start="29:22" pos:end="29:22"><literal type="number" pos:start="29:22" pos:end="29:22">2</literal></expr>,  <expr pos:start="29:26" pos:end="29:26"><literal type="number" pos:start="29:26" pos:end="29:26">2</literal></expr>,  <expr pos:start="29:30" pos:end="29:30"><literal type="number" pos:start="29:30" pos:end="29:30">0</literal></expr>,  <expr pos:start="29:34" pos:end="29:34"><literal type="number" pos:start="29:34" pos:end="29:34">2</literal></expr>,  <expr pos:start="29:38" pos:end="29:38"><literal type="number" pos:start="29:38" pos:end="29:38">2</literal></expr>,  <expr pos:start="29:42" pos:end="29:42"><literal type="number" pos:start="29:42" pos:end="29:42">2</literal></expr>,  <expr pos:start="29:46" pos:end="29:46"><literal type="number" pos:start="29:46" pos:end="29:46">2</literal></expr>,

                 <expr pos:start="31:18" pos:end="31:18"><literal type="number" pos:start="31:18" pos:end="31:18">2</literal></expr>,  <expr pos:start="31:22" pos:end="31:22"><literal type="number" pos:start="31:22" pos:end="31:22">2</literal></expr>,  <expr pos:start="31:26" pos:end="31:26"><literal type="number" pos:start="31:26" pos:end="31:26">2</literal></expr>,  <expr pos:start="31:30" pos:end="31:30"><literal type="number" pos:start="31:30" pos:end="31:30">2</literal></expr>,  <expr pos:start="31:34" pos:end="31:34"><literal type="number" pos:start="31:34" pos:end="31:34">2</literal></expr>,  <expr pos:start="31:38" pos:end="31:38"><literal type="number" pos:start="31:38" pos:end="31:38">2</literal></expr>,  <expr pos:start="31:42" pos:end="31:42"><literal type="number" pos:start="31:42" pos:end="31:42">2</literal></expr>,  <expr pos:start="31:46" pos:end="31:46"><literal type="number" pos:start="31:46" pos:end="31:46">2</literal></expr>

            }</block></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="37:13" pos:end="39:25"><if pos:start="37:13" pos:end="39:25">if <condition pos:start="37:16" pos:end="37:28">(<expr pos:start="37:17" pos:end="37:27"><name pos:start="37:17" pos:end="37:20">code</name> <operator pos:start="37:22" pos:end="37:22">&amp;</operator> <literal type="number" pos:start="37:24" pos:end="37:27">0x80</literal></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:25"><block_content pos:start="39:17" pos:end="39:25"> <comment type="line" pos:start="37:30" pos:end="37:45">// forbidden_bit</comment>

                <return pos:start="39:17" pos:end="39:25">return <expr pos:start="39:24" pos:end="39:24"><literal type="number" pos:start="39:24" pos:end="39:24">0</literal></expr>;</return></block_content></block></if></if_stmt>



            <if_stmt pos:start="43:13" pos:end="45:25"><if pos:start="43:13" pos:end="45:25">if <condition pos:start="43:16" pos:end="43:47">(<expr pos:start="43:17" pos:end="43:46"><name pos:start="43:17" pos:end="43:30"><name pos:start="43:17" pos:end="43:24">ref_zero</name><index pos:start="43:25" pos:end="43:30">[<expr pos:start="43:26" pos:end="43:29"><name pos:start="43:26" pos:end="43:29">type</name></expr>]</index></name> <operator pos:start="43:32" pos:end="43:33">==</operator> <literal type="number" pos:start="43:35" pos:end="43:35">1</literal> <operator pos:start="43:37" pos:end="43:38">&amp;&amp;</operator> <name pos:start="43:40" pos:end="43:46">ref_idc</name></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:25"><block_content pos:start="45:17" pos:end="45:25">

                <return pos:start="45:17" pos:end="45:25">return <expr pos:start="45:24" pos:end="45:24"><literal type="number" pos:start="45:24" pos:end="45:24">0</literal></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="47:13" pos:end="49:25"><if pos:start="47:13" pos:end="49:25">if <condition pos:start="47:16" pos:end="47:49">(<expr pos:start="47:17" pos:end="47:48"><name pos:start="47:17" pos:end="47:30"><name pos:start="47:17" pos:end="47:24">ref_zero</name><index pos:start="47:25" pos:end="47:30">[<expr pos:start="47:26" pos:end="47:29"><name pos:start="47:26" pos:end="47:29">type</name></expr>]</index></name> <operator pos:start="47:32" pos:end="47:33">==</operator> <operator pos:start="47:35" pos:end="47:35">-</operator><literal type="number" pos:start="47:36" pos:end="47:36">1</literal> <operator pos:start="47:38" pos:end="47:39">&amp;&amp;</operator> <operator pos:start="47:41" pos:end="47:41">!</operator><name pos:start="47:42" pos:end="47:48">ref_idc</name></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:25"><block_content pos:start="49:17" pos:end="49:25">

                <return pos:start="49:17" pos:end="49:25">return <expr pos:start="49:24" pos:end="49:24"><literal type="number" pos:start="49:24" pos:end="49:24">0</literal></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="51:13" pos:end="57:13"><if pos:start="51:13" pos:end="57:13">if <condition pos:start="51:16" pos:end="51:36">(<expr pos:start="51:17" pos:end="51:35"><name pos:start="51:17" pos:end="51:30"><name pos:start="51:17" pos:end="51:24">ref_zero</name><index pos:start="51:25" pos:end="51:30">[<expr pos:start="51:26" pos:end="51:29"><name pos:start="51:26" pos:end="51:29">type</name></expr>]</index></name> <operator pos:start="51:32" pos:end="51:33">==</operator> <literal type="number" pos:start="51:35" pos:end="51:35">2</literal></expr>)</condition> <block pos:start="51:38" pos:end="57:13">{<block_content pos:start="53:17" pos:end="55:26">

                <if_stmt pos:start="53:17" pos:end="55:26"><if pos:start="53:17" pos:end="55:26">if <condition pos:start="53:20" pos:end="53:73">(<expr pos:start="53:21" pos:end="53:72"><operator pos:start="53:21" pos:end="53:21">!</operator><operator pos:start="53:22" pos:end="53:22">(</operator><name pos:start="53:23" pos:end="53:26">code</name> <operator pos:start="53:28" pos:end="53:29">==</operator> <literal type="number" pos:start="53:31" pos:end="53:35">0x100</literal> <operator pos:start="53:37" pos:end="53:38">&amp;&amp;</operator> <operator pos:start="53:40" pos:end="53:40">!</operator><name pos:start="53:41" pos:end="53:53"><name pos:start="53:41" pos:end="53:41">p</name><operator pos:start="53:42" pos:end="53:43">-&gt;</operator><name pos:start="53:44" pos:end="53:46">buf</name><index pos:start="53:47" pos:end="53:53">[<expr pos:start="53:48" pos:end="53:52"><name pos:start="53:48" pos:end="53:48">i</name> <operator pos:start="53:50" pos:end="53:50">+</operator> <literal type="number" pos:start="53:52" pos:end="53:52">1</literal></expr>]</index></name> <operator pos:start="53:55" pos:end="53:56">&amp;&amp;</operator> <operator pos:start="53:58" pos:end="53:58">!</operator><name pos:start="53:59" pos:end="53:71"><name pos:start="53:59" pos:end="53:59">p</name><operator pos:start="53:60" pos:end="53:61">-&gt;</operator><name pos:start="53:62" pos:end="53:64">buf</name><index pos:start="53:65" pos:end="53:71">[<expr pos:start="53:66" pos:end="53:70"><name pos:start="53:66" pos:end="53:66">i</name> <operator pos:start="53:68" pos:end="53:68">+</operator> <literal type="number" pos:start="53:70" pos:end="53:70">2</literal></expr>]</index></name><operator pos:start="53:72" pos:end="53:72">)</operator></expr>)</condition><block type="pseudo" pos:start="55:21" pos:end="55:26"><block_content pos:start="55:21" pos:end="55:26">

                    <expr_stmt pos:start="55:21" pos:end="55:26"><expr pos:start="55:21" pos:end="55:25"><name pos:start="55:21" pos:end="55:23">res</name><operator pos:start="55:24" pos:end="55:25">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <switch pos:start="61:13" pos:end="91:13">switch <condition pos:start="61:20" pos:end="61:25">(<expr pos:start="61:21" pos:end="61:24"><name pos:start="61:21" pos:end="61:24">type</name></expr>)</condition> <block pos:start="61:27" pos:end="91:13">{<block_content pos:start="63:13" pos:end="89:22">

            <case pos:start="63:13" pos:end="63:19">case <expr pos:start="63:18" pos:end="63:18"><literal type="number" pos:start="63:18" pos:end="63:18">1</literal></expr>:</case>

                <expr_stmt pos:start="65:17" pos:end="65:22"><expr pos:start="65:17" pos:end="65:21"><name pos:start="65:17" pos:end="65:19">sli</name><operator pos:start="65:20" pos:end="65:21">++</operator></expr>;</expr_stmt>

                <break pos:start="67:17" pos:end="67:22">break;</break>

            <case pos:start="69:13" pos:end="69:19">case <expr pos:start="69:18" pos:end="69:18"><literal type="number" pos:start="69:18" pos:end="69:18">5</literal></expr>:</case>

                <expr_stmt pos:start="71:17" pos:end="71:22"><expr pos:start="71:17" pos:end="71:21"><name pos:start="71:17" pos:end="71:19">idr</name><operator pos:start="71:20" pos:end="71:21">++</operator></expr>;</expr_stmt>

                <break pos:start="73:17" pos:end="73:22">break;</break>

            <case pos:start="75:13" pos:end="75:19">case <expr pos:start="75:18" pos:end="75:18"><literal type="number" pos:start="75:18" pos:end="75:18">7</literal></expr>:</case>

                <if_stmt pos:start="77:17" pos:end="79:29"><if pos:start="77:17" pos:end="79:29">if <condition pos:start="77:20" pos:end="77:41">(<expr pos:start="77:21" pos:end="77:40"><name pos:start="77:21" pos:end="77:33"><name pos:start="77:21" pos:end="77:21">p</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:26">buf</name><index pos:start="77:27" pos:end="77:33">[<expr pos:start="77:28" pos:end="77:32"><name pos:start="77:28" pos:end="77:28">i</name> <operator pos:start="77:30" pos:end="77:30">+</operator> <literal type="number" pos:start="77:32" pos:end="77:32">2</literal></expr>]</index></name> <operator pos:start="77:35" pos:end="77:35">&amp;</operator> <literal type="number" pos:start="77:37" pos:end="77:40">0x03</literal></expr>)</condition><block type="pseudo" pos:start="79:21" pos:end="79:29"><block_content pos:start="79:21" pos:end="79:29">

                    <return pos:start="79:21" pos:end="79:29">return <expr pos:start="79:28" pos:end="79:28"><literal type="number" pos:start="79:28" pos:end="79:28">0</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:22"><expr pos:start="81:17" pos:end="81:21"><name pos:start="81:17" pos:end="81:19">sps</name><operator pos:start="81:20" pos:end="81:21">++</operator></expr>;</expr_stmt>

                <break pos:start="83:17" pos:end="83:22">break;</break>

            <case pos:start="85:13" pos:end="85:19">case <expr pos:start="85:18" pos:end="85:18"><literal type="number" pos:start="85:18" pos:end="85:18">8</literal></expr>:</case>

                <expr_stmt pos:start="87:17" pos:end="87:22"><expr pos:start="87:17" pos:end="87:21"><name pos:start="87:17" pos:end="87:19">pps</name><operator pos:start="87:20" pos:end="87:21">++</operator></expr>;</expr_stmt>

                <break pos:start="89:17" pos:end="89:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="97:5" pos:end="97:83"><expr pos:start="97:5" pos:end="97:82"><call pos:start="97:5" pos:end="97:82"><name pos:start="97:5" pos:end="97:11">ff_tlog</name><argument_list pos:start="97:12" pos:end="97:82">(<argument pos:start="97:13" pos:end="97:16"><expr pos:start="97:13" pos:end="97:16"><name pos:start="97:13" pos:end="97:16">NULL</name></expr></argument>, <argument pos:start="97:19" pos:end="97:56"><expr pos:start="97:19" pos:end="97:56"><literal type="string" pos:start="97:19" pos:end="97:56">"sps:%d pps:%d idr:%d sli:%d res:%d\n"</literal></expr></argument>, <argument pos:start="97:59" pos:end="97:61"><expr pos:start="97:59" pos:end="97:61"><name pos:start="97:59" pos:end="97:61">sps</name></expr></argument>, <argument pos:start="97:64" pos:end="97:66"><expr pos:start="97:64" pos:end="97:66"><name pos:start="97:64" pos:end="97:66">pps</name></expr></argument>, <argument pos:start="97:69" pos:end="97:71"><expr pos:start="97:69" pos:end="97:71"><name pos:start="97:69" pos:end="97:71">idr</name></expr></argument>, <argument pos:start="97:74" pos:end="97:76"><expr pos:start="97:74" pos:end="97:76"><name pos:start="97:74" pos:end="97:76">sli</name></expr></argument>, <argument pos:start="97:79" pos:end="97:81"><expr pos:start="97:79" pos:end="97:81"><name pos:start="97:79" pos:end="97:81">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="101:5" pos:end="103:43"><if pos:start="101:5" pos:end="103:43">if <condition pos:start="101:8" pos:end="101:66">(<expr pos:start="101:9" pos:end="101:65"><name pos:start="101:9" pos:end="101:11">sps</name> <operator pos:start="101:13" pos:end="101:14">&amp;&amp;</operator> <name pos:start="101:16" pos:end="101:18">pps</name> <operator pos:start="101:20" pos:end="101:21">&amp;&amp;</operator> <operator pos:start="101:23" pos:end="101:23">(</operator><name pos:start="101:24" pos:end="101:26">idr</name> <operator pos:start="101:28" pos:end="101:29">||</operator> <name pos:start="101:31" pos:end="101:33">sli</name> <operator pos:start="101:35" pos:end="101:35">&gt;</operator> <literal type="number" pos:start="101:37" pos:end="101:37">3</literal><operator pos:start="101:38" pos:end="101:38">)</operator> <operator pos:start="101:40" pos:end="101:41">&amp;&amp;</operator> <name pos:start="101:43" pos:end="101:45">res</name> <operator pos:start="101:47" pos:end="101:47">&lt;</operator> <operator pos:start="101:49" pos:end="101:49">(</operator><name pos:start="101:50" pos:end="101:52">sps</name> <operator pos:start="101:54" pos:end="101:54">+</operator> <name pos:start="101:56" pos:end="101:58">pps</name> <operator pos:start="101:60" pos:end="101:60">+</operator> <name pos:start="101:62" pos:end="101:64">idr</name><operator pos:start="101:65" pos:end="101:65">)</operator></expr>)</condition><block type="pseudo" pos:start="103:9" pos:end="103:43"><block_content pos:start="103:9" pos:end="103:43">

        <return pos:start="103:9" pos:end="103:43">return <expr pos:start="103:16" pos:end="103:42"><name pos:start="103:16" pos:end="103:38">AVPROBE_SCORE_EXTENSION</name> <operator pos:start="103:40" pos:end="103:40">+</operator> <literal type="number" pos:start="103:42" pos:end="103:42">1</literal></expr>;</return></block_content></block></if></if_stmt>  <comment type="line" pos:start="103:46" pos:end="103:64">// 1 more than .mpg</comment>



    <return pos:start="107:5" pos:end="107:13">return <expr pos:start="107:12" pos:end="107:12"><literal type="number" pos:start="107:12" pos:end="107:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
