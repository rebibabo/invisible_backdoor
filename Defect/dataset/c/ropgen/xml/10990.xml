<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10990.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">r4k_map_address</name> <parameter_list pos:start="1:21" pos:end="3:67">(<parameter pos:start="1:22" pos:end="1:38"><decl pos:start="1:22" pos:end="1:38"><type pos:start="1:22" pos:end="1:38"><name pos:start="1:22" pos:end="1:33">CPUMIPSState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">env</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:56"><decl pos:start="1:41" pos:end="1:56"><type pos:start="1:41" pos:end="1:56"><name pos:start="1:41" pos:end="1:46">hwaddr</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:56">physical</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:67"><decl pos:start="1:59" pos:end="1:67"><type pos:start="1:59" pos:end="1:67"><name pos:start="1:59" pos:end="1:61">int</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:67">prot</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:41"><decl pos:start="3:22" pos:end="3:41"><type pos:start="3:22" pos:end="3:41"><name pos:start="3:22" pos:end="3:33">target_ulong</name></type> <name pos:start="3:35" pos:end="3:41">address</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:49"><decl pos:start="3:44" pos:end="3:49"><type pos:start="3:44" pos:end="3:49"><name pos:start="3:44" pos:end="3:46">int</name></type> <name pos:start="3:48" pos:end="3:49">rw</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:66"><decl pos:start="3:52" pos:end="3:66"><type pos:start="3:52" pos:end="3:66"><name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:66">access_type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="83:1">{<block_content pos:start="7:5" pos:end="81:26">

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:16">ASID</name> <init pos:start="7:18" pos:end="7:42">= <expr pos:start="7:20" pos:end="7:42"><name pos:start="7:20" pos:end="7:35"><name pos:start="7:20" pos:end="7:22">env</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:35">CP0_EntryHi</name></name> <operator pos:start="7:37" pos:end="7:37">&amp;</operator> <literal type="number" pos:start="7:39" pos:end="7:42">0xFF</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="79:5">for <control pos:start="13:9" pos:end="13:46">(<init pos:start="13:10" pos:end="13:15"><expr pos:start="13:10" pos:end="13:14"><name pos:start="13:10" pos:end="13:10">i</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</init> <condition pos:start="13:17" pos:end="13:41"><expr pos:start="13:17" pos:end="13:40"><name pos:start="13:17" pos:end="13:17">i</name> <operator pos:start="13:19" pos:end="13:19">&lt;</operator> <name pos:start="13:21" pos:end="13:40"><name pos:start="13:21" pos:end="13:23">env</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:28">tlb</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:40">tlb_in_use</name></name></expr>;</condition> <incr pos:start="13:43" pos:end="13:45"><expr pos:start="13:43" pos:end="13:45"><name pos:start="13:43" pos:end="13:43">i</name><operator pos:start="13:44" pos:end="13:45">++</operator></expr></incr>)</control> <block pos:start="13:48" pos:end="79:5">{<block_content pos:start="15:9" pos:end="77:9">

        <decl_stmt pos:start="15:9" pos:end="15:51"><decl pos:start="15:9" pos:end="15:50"><type pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:17">r4k_tlb_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:22">tlb</name> <init pos:start="15:24" pos:end="15:50">= <expr pos:start="15:26" pos:end="15:50"><operator pos:start="15:26" pos:end="15:26">&amp;</operator><name pos:start="15:27" pos:end="15:50"><name pos:start="15:27" pos:end="15:29">env</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:34">tlb</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:39">mmu</name><operator pos:start="15:40" pos:end="15:40">.</operator><name pos:start="15:41" pos:end="15:43">r4k</name><operator pos:start="15:44" pos:end="15:44">.</operator><name pos:start="15:45" pos:end="15:47">tlb</name><index pos:start="15:48" pos:end="15:50">[<expr pos:start="15:49" pos:end="15:49"><name pos:start="15:49" pos:end="15:49">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <comment type="block" pos:start="17:9" pos:end="17:41">/* 1k pages are not supported. */</comment>

        <decl_stmt pos:start="19:9" pos:end="19:69"><decl pos:start="19:9" pos:end="19:68"><type pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:20">target_ulong</name></type> <name pos:start="19:22" pos:end="19:25">mask</name> <init pos:start="19:27" pos:end="19:68">= <expr pos:start="19:29" pos:end="19:68"><name pos:start="19:29" pos:end="19:41"><name pos:start="19:29" pos:end="19:31">tlb</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:41">PageMask</name></name> <operator pos:start="19:43" pos:end="19:43">|</operator> <operator pos:start="19:45" pos:end="19:45">~</operator><operator pos:start="19:46" pos:end="19:46">(</operator><name pos:start="19:47" pos:end="19:62">TARGET_PAGE_MASK</name> <operator pos:start="19:64" pos:end="19:65">&lt;&lt;</operator> <literal type="number" pos:start="19:67" pos:end="19:67">1</literal><operator pos:start="19:68" pos:end="19:68">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:43"><decl pos:start="21:9" pos:end="21:42"><type pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:20">target_ulong</name></type> <name pos:start="21:22" pos:end="21:24">tag</name> <init pos:start="21:26" pos:end="21:42">= <expr pos:start="21:28" pos:end="21:42"><name pos:start="21:28" pos:end="21:34">address</name> <operator pos:start="21:36" pos:end="21:36">&amp;</operator> <operator pos:start="21:38" pos:end="21:38">~</operator><name pos:start="21:39" pos:end="21:42">mask</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="26:0"><decl pos:start="23:9" pos:end="23:43"><type pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:20">target_ulong</name></type> <name pos:start="23:22" pos:end="23:24">VPN</name> <init pos:start="23:26" pos:end="23:43">= <expr pos:start="23:28" pos:end="23:43"><name pos:start="23:28" pos:end="23:35"><name pos:start="23:28" pos:end="23:30">tlb</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:35">VPN</name></name> <operator pos:start="23:37" pos:end="23:37">&amp;</operator> <operator pos:start="23:39" pos:end="23:39">~</operator><name pos:start="23:40" pos:end="23:43">mask</name></expr></init></decl>;</decl_stmt>

<cpp:if pos:start="25:1" pos:end="25:26">#<cpp:directive pos:start="25:2" pos:end="25:3">if</cpp:directive> <expr pos:start="25:5" pos:end="25:26"><call pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:11">defined</name><argument_list pos:start="25:12" pos:end="25:26">(<argument pos:start="25:13" pos:end="25:25"><expr pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <expr_stmt pos:start="27:9" pos:end="30:0"><expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:11">tag</name> <operator pos:start="27:13" pos:end="27:14">&amp;=</operator> <name pos:start="27:16" pos:end="27:27"><name pos:start="27:16" pos:end="27:18">env</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:27">SEGMask</name></name></expr>;</expr_stmt>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>



        <comment type="block" pos:start="33:9" pos:end="33:52">/* Check ASID, virtual page number &amp; size */</comment>

        <if_stmt pos:start="35:9" pos:end="77:9"><if pos:start="35:9" pos:end="77:9">if <condition pos:start="35:12" pos:end="35:61">(<expr pos:start="35:13" pos:end="35:60"><operator pos:start="35:13" pos:end="35:13">(</operator><name pos:start="35:14" pos:end="35:19"><name pos:start="35:14" pos:end="35:16">tlb</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:19">G</name></name> <operator pos:start="35:21" pos:end="35:22">==</operator> <literal type="number" pos:start="35:24" pos:end="35:24">1</literal> <operator pos:start="35:26" pos:end="35:27">||</operator> <name pos:start="35:29" pos:end="35:37"><name pos:start="35:29" pos:end="35:31">tlb</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:37">ASID</name></name> <operator pos:start="35:39" pos:end="35:40">==</operator> <name pos:start="35:42" pos:end="35:45">ASID</name><operator pos:start="35:46" pos:end="35:46">)</operator> <operator pos:start="35:48" pos:end="35:49">&amp;&amp;</operator> <name pos:start="35:51" pos:end="35:53">VPN</name> <operator pos:start="35:55" pos:end="35:56">==</operator> <name pos:start="35:58" pos:end="35:60">tag</name></expr>)</condition> <block pos:start="35:63" pos:end="77:9">{<block_content pos:start="39:13" pos:end="75:32">

            <comment type="block" pos:start="37:13" pos:end="37:27">/* TLB match */</comment>

            <decl_stmt pos:start="39:13" pos:end="39:54"><decl pos:start="39:13" pos:end="39:53"><type pos:start="39:13" pos:end="39:15"><name pos:start="39:13" pos:end="39:15">int</name></type> <name pos:start="39:17" pos:end="39:17">n</name> <init pos:start="39:19" pos:end="39:53">= <expr pos:start="39:21" pos:end="39:53"><operator pos:start="39:21" pos:end="39:21">!</operator><operator pos:start="39:22" pos:end="39:22">!</operator><operator pos:start="39:23" pos:end="39:23">(</operator><name pos:start="39:24" pos:end="39:30">address</name> <operator pos:start="39:32" pos:end="39:32">&amp;</operator> <name pos:start="39:34" pos:end="39:37">mask</name> <operator pos:start="39:39" pos:end="39:39">&amp;</operator> <operator pos:start="39:41" pos:end="39:41">~</operator><operator pos:start="39:42" pos:end="39:42">(</operator><name pos:start="39:43" pos:end="39:46">mask</name> <operator pos:start="39:48" pos:end="39:49">&gt;&gt;</operator> <literal type="number" pos:start="39:51" pos:end="39:51">1</literal><operator pos:start="39:52" pos:end="39:52">)</operator><operator pos:start="39:53" pos:end="39:53">)</operator></expr></init></decl>;</decl_stmt>

            <comment type="block" pos:start="41:13" pos:end="41:37">/* Check access rights */</comment>

            <if_stmt pos:start="43:13" pos:end="47:13"><if pos:start="43:13" pos:end="47:13">if <condition pos:start="43:16" pos:end="43:41">(<expr pos:start="43:17" pos:end="43:40"><operator pos:start="43:17" pos:end="43:17">!</operator><operator pos:start="43:18" pos:end="43:18">(</operator><ternary pos:start="43:19" pos:end="43:39"><condition pos:start="43:19" pos:end="43:21"><expr pos:start="43:19" pos:end="43:19"><name pos:start="43:19" pos:end="43:19">n</name></expr> ?</condition><then pos:start="43:23" pos:end="43:29"> <expr pos:start="43:23" pos:end="43:29"><name pos:start="43:23" pos:end="43:29"><name pos:start="43:23" pos:end="43:25">tlb</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:29">V1</name></name></expr> </then><else pos:start="43:31" pos:end="43:39">: <expr pos:start="43:33" pos:end="43:39"><name pos:start="43:33" pos:end="43:39"><name pos:start="43:33" pos:end="43:35">tlb</name><operator pos:start="43:36" pos:end="43:37">-&gt;</operator><name pos:start="43:38" pos:end="43:39">V0</name></name></expr></else></ternary><operator pos:start="43:40" pos:end="43:40">)</operator></expr>)</condition> <block pos:start="43:43" pos:end="47:13">{<block_content pos:start="45:17" pos:end="45:38">

                <return pos:start="45:17" pos:end="45:38">return <expr pos:start="45:24" pos:end="45:37"><name pos:start="45:24" pos:end="45:37">TLBRET_INVALID</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="49:13" pos:end="53:13"><if pos:start="49:13" pos:end="53:13">if <condition pos:start="49:16" pos:end="49:66">(<expr pos:start="49:17" pos:end="49:65"><name pos:start="49:17" pos:end="49:18">rw</name> <operator pos:start="49:20" pos:end="49:21">==</operator> <name pos:start="49:23" pos:end="49:36">MMU_INST_FETCH</name> <operator pos:start="49:38" pos:end="49:39">&amp;&amp;</operator> <operator pos:start="49:41" pos:end="49:41">(</operator><ternary pos:start="49:42" pos:end="49:64"><condition pos:start="49:42" pos:end="49:44"><expr pos:start="49:42" pos:end="49:42"><name pos:start="49:42" pos:end="49:42">n</name></expr> ?</condition><then pos:start="49:46" pos:end="49:53"> <expr pos:start="49:46" pos:end="49:53"><name pos:start="49:46" pos:end="49:53"><name pos:start="49:46" pos:end="49:48">tlb</name><operator pos:start="49:49" pos:end="49:50">-&gt;</operator><name pos:start="49:51" pos:end="49:53">XI1</name></name></expr> </then><else pos:start="49:55" pos:end="49:64">: <expr pos:start="49:57" pos:end="49:64"><name pos:start="49:57" pos:end="49:64"><name pos:start="49:57" pos:end="49:59">tlb</name><operator pos:start="49:60" pos:end="49:61">-&gt;</operator><name pos:start="49:62" pos:end="49:64">XI0</name></name></expr></else></ternary><operator pos:start="49:65" pos:end="49:65">)</operator></expr>)</condition> <block pos:start="49:68" pos:end="53:13">{<block_content pos:start="51:17" pos:end="51:33">

                <return pos:start="51:17" pos:end="51:33">return <expr pos:start="51:24" pos:end="51:32"><name pos:start="51:24" pos:end="51:32">TLBRET_XI</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="55:13" pos:end="59:13"><if pos:start="55:13" pos:end="59:13">if <condition pos:start="55:16" pos:end="55:65">(<expr pos:start="55:17" pos:end="55:64"><name pos:start="55:17" pos:end="55:18">rw</name> <operator pos:start="55:20" pos:end="55:21">==</operator> <name pos:start="55:23" pos:end="55:35">MMU_DATA_LOAD</name> <operator pos:start="55:37" pos:end="55:38">&amp;&amp;</operator> <operator pos:start="55:40" pos:end="55:40">(</operator><ternary pos:start="55:41" pos:end="55:63"><condition pos:start="55:41" pos:end="55:43"><expr pos:start="55:41" pos:end="55:41"><name pos:start="55:41" pos:end="55:41">n</name></expr> ?</condition><then pos:start="55:45" pos:end="55:52"> <expr pos:start="55:45" pos:end="55:52"><name pos:start="55:45" pos:end="55:52"><name pos:start="55:45" pos:end="55:47">tlb</name><operator pos:start="55:48" pos:end="55:49">-&gt;</operator><name pos:start="55:50" pos:end="55:52">RI1</name></name></expr> </then><else pos:start="55:54" pos:end="55:63">: <expr pos:start="55:56" pos:end="55:63"><name pos:start="55:56" pos:end="55:63"><name pos:start="55:56" pos:end="55:58">tlb</name><operator pos:start="55:59" pos:end="55:60">-&gt;</operator><name pos:start="55:61" pos:end="55:63">RI0</name></name></expr></else></ternary><operator pos:start="55:64" pos:end="55:64">)</operator></expr>)</condition> <block pos:start="55:67" pos:end="59:13">{<block_content pos:start="57:17" pos:end="57:33">

                <return pos:start="57:17" pos:end="57:33">return <expr pos:start="57:24" pos:end="57:32"><name pos:start="57:24" pos:end="57:32">TLBRET_RI</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="61:13" pos:end="73:13"><if pos:start="61:13" pos:end="73:13">if <condition pos:start="61:16" pos:end="61:64">(<expr pos:start="61:17" pos:end="61:63"><name pos:start="61:17" pos:end="61:18">rw</name> <operator pos:start="61:20" pos:end="61:21">!=</operator> <name pos:start="61:23" pos:end="61:36">MMU_DATA_STORE</name> <operator pos:start="61:38" pos:end="61:39">||</operator> <operator pos:start="61:41" pos:end="61:41">(</operator><ternary pos:start="61:42" pos:end="61:62"><condition pos:start="61:42" pos:end="61:44"><expr pos:start="61:42" pos:end="61:42"><name pos:start="61:42" pos:end="61:42">n</name></expr> ?</condition><then pos:start="61:46" pos:end="61:52"> <expr pos:start="61:46" pos:end="61:52"><name pos:start="61:46" pos:end="61:52"><name pos:start="61:46" pos:end="61:48">tlb</name><operator pos:start="61:49" pos:end="61:50">-&gt;</operator><name pos:start="61:51" pos:end="61:52">D1</name></name></expr> </then><else pos:start="61:54" pos:end="61:62">: <expr pos:start="61:56" pos:end="61:62"><name pos:start="61:56" pos:end="61:62"><name pos:start="61:56" pos:end="61:58">tlb</name><operator pos:start="61:59" pos:end="61:60">-&gt;</operator><name pos:start="61:61" pos:end="61:62">D0</name></name></expr></else></ternary><operator pos:start="61:63" pos:end="61:63">)</operator></expr>)</condition> <block pos:start="61:66" pos:end="73:13">{<block_content pos:start="63:17" pos:end="71:36">

                <expr_stmt pos:start="63:17" pos:end="63:66"><expr pos:start="63:17" pos:end="63:65"><operator pos:start="63:17" pos:end="63:17">*</operator><name pos:start="63:18" pos:end="63:25">physical</name> <operator pos:start="63:27" pos:end="63:27">=</operator> <name pos:start="63:29" pos:end="63:39"><name pos:start="63:29" pos:end="63:31">tlb</name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:36">PFN</name><index pos:start="63:37" pos:end="63:39">[<expr pos:start="63:38" pos:end="63:38"><name pos:start="63:38" pos:end="63:38">n</name></expr>]</index></name> <operator pos:start="63:41" pos:end="63:41">|</operator> <operator pos:start="63:43" pos:end="63:43">(</operator><name pos:start="63:44" pos:end="63:50">address</name> <operator pos:start="63:52" pos:end="63:52">&amp;</operator> <operator pos:start="63:54" pos:end="63:54">(</operator><name pos:start="63:55" pos:end="63:58">mask</name> <operator pos:start="63:60" pos:end="63:61">&gt;&gt;</operator> <literal type="number" pos:start="63:63" pos:end="63:63">1</literal><operator pos:start="63:64" pos:end="63:64">)</operator><operator pos:start="63:65" pos:end="63:65">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:34"><expr pos:start="65:17" pos:end="65:33"><operator pos:start="65:17" pos:end="65:17">*</operator><name pos:start="65:18" pos:end="65:21">prot</name> <operator pos:start="65:23" pos:end="65:23">=</operator> <name pos:start="65:25" pos:end="65:33">PAGE_READ</name></expr>;</expr_stmt>

                <if_stmt pos:start="67:17" pos:end="69:40"><if pos:start="67:17" pos:end="69:40">if <condition pos:start="67:20" pos:end="67:42">(<expr pos:start="67:21" pos:end="67:41"><ternary pos:start="67:21" pos:end="67:41"><condition pos:start="67:21" pos:end="67:23"><expr pos:start="67:21" pos:end="67:21"><name pos:start="67:21" pos:end="67:21">n</name></expr> ?</condition><then pos:start="67:25" pos:end="67:31"> <expr pos:start="67:25" pos:end="67:31"><name pos:start="67:25" pos:end="67:31"><name pos:start="67:25" pos:end="67:27">tlb</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:31">D1</name></name></expr> </then><else pos:start="67:33" pos:end="67:41">: <expr pos:start="67:35" pos:end="67:41"><name pos:start="67:35" pos:end="67:41"><name pos:start="67:35" pos:end="67:37">tlb</name><operator pos:start="67:38" pos:end="67:39">-&gt;</operator><name pos:start="67:40" pos:end="67:41">D0</name></name></expr></else></ternary></expr>)</condition><block type="pseudo" pos:start="69:21" pos:end="69:40"><block_content pos:start="69:21" pos:end="69:40">

                    <expr_stmt pos:start="69:21" pos:end="69:40"><expr pos:start="69:21" pos:end="69:39"><operator pos:start="69:21" pos:end="69:21">*</operator><name pos:start="69:22" pos:end="69:25">prot</name> <operator pos:start="69:27" pos:end="69:28">|=</operator> <name pos:start="69:30" pos:end="69:39">PAGE_WRITE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <return pos:start="71:17" pos:end="71:36">return <expr pos:start="71:24" pos:end="71:35"><name pos:start="71:24" pos:end="71:35">TLBRET_MATCH</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <return pos:start="75:13" pos:end="75:32">return <expr pos:start="75:20" pos:end="75:31"><name pos:start="75:20" pos:end="75:31">TLBRET_DIRTY</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="81:5" pos:end="81:26">return <expr pos:start="81:12" pos:end="81:25"><name pos:start="81:12" pos:end="81:25">TLBRET_NOMATCH</name></expr>;</return>

</block_content>}</block></function>
</unit>
