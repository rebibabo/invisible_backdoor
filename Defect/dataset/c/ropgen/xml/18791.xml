<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18791.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">copy_parameter_set</name><parameter_list pos:start="1:30" pos:end="1:74">(<parameter pos:start="1:31" pos:end="1:39"><decl pos:start="1:31" pos:end="1:39"><type pos:start="1:31" pos:end="1:39"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier><modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:39">to</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:52"><decl pos:start="1:42" pos:end="1:52"><type pos:start="1:42" pos:end="1:52"><name pos:start="1:42" pos:end="1:45">void</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier><modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">from</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:63"><decl pos:start="1:55" pos:end="1:63"><type pos:start="1:55" pos:end="1:63"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:63">count</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:73"><decl pos:start="1:66" pos:end="1:73"><type pos:start="1:66" pos:end="1:73"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:73">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="31:5">for <control pos:start="9:9" pos:end="9:31">(<init pos:start="9:10" pos:end="9:15"><expr pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:10">i</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr>;</init> <condition pos:start="9:17" pos:end="9:26"><expr pos:start="9:17" pos:end="9:25"><name pos:start="9:17" pos:end="9:17">i</name> <operator pos:start="9:19" pos:end="9:19">&lt;</operator> <name pos:start="9:21" pos:end="9:25">count</name></expr>;</condition> <incr pos:start="9:28" pos:end="9:30"><expr pos:start="9:28" pos:end="9:30"><name pos:start="9:28" pos:end="9:28">i</name><operator pos:start="9:29" pos:end="9:30">++</operator></expr></incr>)</control> <block pos:start="9:33" pos:end="31:5">{<block_content pos:start="11:9" pos:end="29:41">

        <if_stmt pos:start="11:9" pos:end="23:9"><if pos:start="11:9" pos:end="15:9">if <condition pos:start="11:12" pos:end="11:30">(<expr pos:start="11:13" pos:end="11:29"><name pos:start="11:13" pos:end="11:17"><name pos:start="11:13" pos:end="11:14">to</name><index pos:start="11:15" pos:end="11:17">[<expr pos:start="11:16" pos:end="11:16"><name pos:start="11:16" pos:end="11:16">i</name></expr>]</index></name> <operator pos:start="11:19" pos:end="11:20">&amp;&amp;</operator> <operator pos:start="11:22" pos:end="11:22">!</operator><name pos:start="11:23" pos:end="11:29"><name pos:start="11:23" pos:end="11:26">from</name><index pos:start="11:27" pos:end="11:29">[<expr pos:start="11:28" pos:end="11:28"><name pos:start="11:28" pos:end="11:28">i</name></expr>]</index></name></expr>)</condition> <block pos:start="11:32" pos:end="15:9">{<block_content pos:start="13:13" pos:end="13:29">

            <expr_stmt pos:start="13:13" pos:end="13:29"><expr pos:start="13:13" pos:end="13:28"><call pos:start="13:13" pos:end="13:28"><name pos:start="13:13" pos:end="13:20">av_freep</name><argument_list pos:start="13:21" pos:end="13:28">(<argument pos:start="13:22" pos:end="13:27"><expr pos:start="13:22" pos:end="13:27"><operator pos:start="13:22" pos:end="13:22">&amp;</operator><name pos:start="13:23" pos:end="13:27"><name pos:start="13:23" pos:end="13:24">to</name><index pos:start="13:25" pos:end="13:27">[<expr pos:start="13:26" pos:end="13:26"><name pos:start="13:26" pos:end="13:26">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="15:11" pos:end="23:9">else if <condition pos:start="15:19" pos:end="15:37">(<expr pos:start="15:20" pos:end="15:36"><name pos:start="15:20" pos:end="15:26"><name pos:start="15:20" pos:end="15:23">from</name><index pos:start="15:24" pos:end="15:26">[<expr pos:start="15:25" pos:end="15:25"><name pos:start="15:25" pos:end="15:25">i</name></expr>]</index></name> <operator pos:start="15:28" pos:end="15:29">&amp;&amp;</operator> <operator pos:start="15:31" pos:end="15:31">!</operator><name pos:start="15:32" pos:end="15:36"><name pos:start="15:32" pos:end="15:33">to</name><index pos:start="15:34" pos:end="15:36">[<expr pos:start="15:35" pos:end="15:35"><name pos:start="15:35" pos:end="15:35">i</name></expr>]</index></name></expr>)</condition> <block pos:start="15:39" pos:end="23:9">{<block_content pos:start="17:13" pos:end="21:39">

            <expr_stmt pos:start="17:13" pos:end="17:36"><expr pos:start="17:13" pos:end="17:35"><name pos:start="17:13" pos:end="17:17"><name pos:start="17:13" pos:end="17:14">to</name><index pos:start="17:15" pos:end="17:17">[<expr pos:start="17:16" pos:end="17:16"><name pos:start="17:16" pos:end="17:16">i</name></expr>]</index></name> <operator pos:start="17:19" pos:end="17:19">=</operator> <call pos:start="17:21" pos:end="17:35"><name pos:start="17:21" pos:end="17:29">av_malloc</name><argument_list pos:start="17:30" pos:end="17:35">(<argument pos:start="17:31" pos:end="17:34"><expr pos:start="17:31" pos:end="17:34"><name pos:start="17:31" pos:end="17:34">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="19:13" pos:end="21:39"><if pos:start="19:13" pos:end="21:39">if <condition pos:start="19:16" pos:end="19:23">(<expr pos:start="19:17" pos:end="19:22"><operator pos:start="19:17" pos:end="19:17">!</operator><name pos:start="19:18" pos:end="19:22"><name pos:start="19:18" pos:end="19:19">to</name><index pos:start="19:20" pos:end="19:22">[<expr pos:start="19:21" pos:end="19:21"><name pos:start="19:21" pos:end="19:21">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="21:17" pos:end="21:39"><block_content pos:start="21:17" pos:end="21:39">

                <return pos:start="21:17" pos:end="21:39">return <expr pos:start="21:24" pos:end="21:38"><call pos:start="21:24" pos:end="21:38"><name pos:start="21:24" pos:end="21:30">AVERROR</name><argument_list pos:start="21:31" pos:end="21:38">(<argument pos:start="21:32" pos:end="21:37"><expr pos:start="21:32" pos:end="21:37"><name pos:start="21:32" pos:end="21:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="27:9" pos:end="29:41"><if pos:start="27:9" pos:end="29:41">if <condition pos:start="27:12" pos:end="27:20">(<expr pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:16">from</name><index pos:start="27:17" pos:end="27:19">[<expr pos:start="27:18" pos:end="27:18"><name pos:start="27:18" pos:end="27:18">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:41"><block_content pos:start="29:13" pos:end="29:41">

            <expr_stmt pos:start="29:13" pos:end="29:41"><expr pos:start="29:13" pos:end="29:40"><call pos:start="29:13" pos:end="29:40"><name pos:start="29:13" pos:end="29:18">memcpy</name><argument_list pos:start="29:19" pos:end="29:40">(<argument pos:start="29:20" pos:end="29:24"><expr pos:start="29:20" pos:end="29:24"><name pos:start="29:20" pos:end="29:24"><name pos:start="29:20" pos:end="29:21">to</name><index pos:start="29:22" pos:end="29:24">[<expr pos:start="29:23" pos:end="29:23"><name pos:start="29:23" pos:end="29:23">i</name></expr>]</index></name></expr></argument>, <argument pos:start="29:27" pos:end="29:33"><expr pos:start="29:27" pos:end="29:33"><name pos:start="29:27" pos:end="29:33"><name pos:start="29:27" pos:end="29:30">from</name><index pos:start="29:31" pos:end="29:33">[<expr pos:start="29:32" pos:end="29:32"><name pos:start="29:32" pos:end="29:32">i</name></expr>]</index></name></expr></argument>, <argument pos:start="29:36" pos:end="29:39"><expr pos:start="29:36" pos:end="29:39"><name pos:start="29:36" pos:end="29:39">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
