<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3779.c" pos:tabs="8"><function pos:start="1:1" pos:end="781:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">ide_exec_cmd</name><parameter_list pos:start="1:18" pos:end="1:44">(<parameter pos:start="1:19" pos:end="1:29"><decl pos:start="1:19" pos:end="1:29"><type pos:start="1:19" pos:end="1:29"><name pos:start="1:19" pos:end="1:24">IDEBus</name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:29">bus</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:39">uint32_t</name></type> <name pos:start="1:41" pos:end="1:43">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="781:1">{<block_content pos:start="5:5" pos:end="779:5">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">uint16_t</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:27">identify_data</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">IDEState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="14:0"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">n</name></decl>;</decl_stmt>



<cpp:if pos:start="13:1" pos:end="13:22">#<cpp:directive pos:start="13:2" pos:end="13:3">if</cpp:directive> <expr pos:start="13:5" pos:end="13:22"><call pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:11">defined</name><argument_list pos:start="13:12" pos:end="13:22">(<argument pos:start="13:13" pos:end="13:21"><expr pos:start="13:13" pos:end="13:21"><name pos:start="13:13" pos:end="13:21">DEBUG_IDE</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="15:5" pos:end="18:0"><expr pos:start="15:5" pos:end="15:34"><call pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:10">printf</name><argument_list pos:start="15:11" pos:end="15:34">(<argument pos:start="15:12" pos:end="15:28"><expr pos:start="15:12" pos:end="15:28"><literal type="string" pos:start="15:12" pos:end="15:28">"ide: CMD=%02x\n"</literal></expr></argument>, <argument pos:start="15:31" pos:end="15:33"><expr pos:start="15:31" pos:end="15:33"><name pos:start="15:31" pos:end="15:33">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="19:5" pos:end="19:30"><expr pos:start="19:5" pos:end="19:29"><name pos:start="19:5" pos:end="19:5">s</name> <operator pos:start="19:7" pos:end="19:7">=</operator> <call pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:24">idebus_active_if</name><argument_list pos:start="19:25" pos:end="19:29">(<argument pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:28">bus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="21:5" pos:end="21:47">/* ignore commands to non existent slave */</comment>

    <if_stmt pos:start="23:5" pos:end="25:15"><if pos:start="23:5" pos:end="25:15">if <condition pos:start="23:8" pos:end="23:32">(<expr pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:9">s</name> <operator pos:start="23:11" pos:end="23:12">!=</operator> <name pos:start="23:14" pos:end="23:21"><name pos:start="23:14" pos:end="23:16">bus</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:21">ifs</name></name> <operator pos:start="23:23" pos:end="23:24">&amp;&amp;</operator> <operator pos:start="23:26" pos:end="23:26">!</operator><name pos:start="23:27" pos:end="23:31"><name pos:start="23:27" pos:end="23:27">s</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:31">bs</name></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:15"><block_content pos:start="25:9" pos:end="25:15">

        <return pos:start="25:9" pos:end="25:15">return;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:67">/* Only DEVICE RESET is allowed while BSY or/and DRQ are set */</comment>

    <if_stmt pos:start="31:5" pos:end="33:15"><if pos:start="31:5" pos:end="33:15">if <condition pos:start="31:8" pos:end="31:70">(<expr pos:start="31:9" pos:end="31:69"><operator pos:start="31:9" pos:end="31:9">(</operator><name pos:start="31:10" pos:end="31:18"><name pos:start="31:10" pos:end="31:10">s</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:18">status</name></name> <operator pos:start="31:20" pos:end="31:20">&amp;</operator> <operator pos:start="31:22" pos:end="31:22">(</operator><name pos:start="31:23" pos:end="31:31">BUSY_STAT</name><operator pos:start="31:32" pos:end="31:32">|</operator><name pos:start="31:33" pos:end="31:40">DRQ_STAT</name><operator pos:start="31:41" pos:end="31:41">)</operator><operator pos:start="31:42" pos:end="31:42">)</operator> <operator pos:start="31:44" pos:end="31:45">&amp;&amp;</operator> <name pos:start="31:47" pos:end="31:49">val</name> <operator pos:start="31:51" pos:end="31:52">!=</operator> <name pos:start="31:54" pos:end="31:69">WIN_DEVICE_RESET</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:15"><block_content pos:start="33:9" pos:end="33:15">

        <return pos:start="33:9" pos:end="33:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:35">(<expr pos:start="37:9" pos:end="37:34"><operator pos:start="37:9" pos:end="37:9">!</operator><call pos:start="37:10" pos:end="37:34"><name pos:start="37:10" pos:end="37:26">ide_cmd_permitted</name><argument_list pos:start="37:27" pos:end="37:34">(<argument pos:start="37:28" pos:end="37:28"><expr pos:start="37:28" pos:end="37:28"><name pos:start="37:28" pos:end="37:28">s</name></expr></argument>, <argument pos:start="37:31" pos:end="37:33"><expr pos:start="37:31" pos:end="37:33"><name pos:start="37:31" pos:end="37:33">val</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:37" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:23">

        <goto pos:start="39:9" pos:end="39:23">goto <name pos:start="39:14" pos:end="39:22">abort_cmd</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="83:5"><if pos:start="45:5" pos:end="83:5">if <condition pos:start="45:8" pos:end="45:43">(<expr pos:start="45:9" pos:end="45:42"><name pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:21">ide_cmd_table</name><index pos:start="45:22" pos:end="45:26">[<expr pos:start="45:23" pos:end="45:25"><name pos:start="45:23" pos:end="45:25">val</name></expr>]</index></name><operator pos:start="45:27" pos:end="45:27">.</operator><name pos:start="45:28" pos:end="45:34">handler</name> <operator pos:start="45:36" pos:end="45:37">!=</operator> <name pos:start="45:39" pos:end="45:42">NULL</name></expr>)</condition> <block pos:start="45:45" pos:end="83:5">{<block_content pos:start="47:9" pos:end="81:15">

        <decl_stmt pos:start="47:9" pos:end="47:22"><decl pos:start="47:9" pos:end="47:21"><type pos:start="47:9" pos:end="47:12"><name pos:start="47:9" pos:end="47:12">bool</name></type> <name pos:start="47:14" pos:end="47:21">complete</name></decl>;</decl_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:43"><expr pos:start="51:9" pos:end="51:42"><name pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:17">status</name></name> <operator pos:start="51:19" pos:end="51:19">=</operator> <name pos:start="51:21" pos:end="51:30">READY_STAT</name> <operator pos:start="51:32" pos:end="51:32">|</operator> <name pos:start="51:34" pos:end="51:42">BUSY_STAT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:21"><expr pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:16"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:16">error</name></name> <operator pos:start="53:18" pos:end="53:18">=</operator> <literal type="number" pos:start="53:20" pos:end="53:20">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:54"><expr pos:start="57:9" pos:end="57:53"><name pos:start="57:9" pos:end="57:16">complete</name> <operator pos:start="57:18" pos:end="57:18">=</operator> <name pos:start="57:20" pos:end="57:37"><name pos:start="57:20" pos:end="57:32">ide_cmd_table</name><index pos:start="57:33" pos:end="57:37">[<expr pos:start="57:34" pos:end="57:36"><name pos:start="57:34" pos:end="57:36">val</name></expr>]</index></name><operator pos:start="57:38" pos:end="57:38">.</operator><call pos:start="57:39" pos:end="57:53"><name pos:start="57:39" pos:end="57:45">handler</name><argument_list pos:start="57:46" pos:end="57:53">(<argument pos:start="57:47" pos:end="57:47"><expr pos:start="57:47" pos:end="57:47"><name pos:start="57:47" pos:end="57:47">s</name></expr></argument>, <argument pos:start="57:50" pos:end="57:52"><expr pos:start="57:50" pos:end="57:52"><name pos:start="57:50" pos:end="57:52">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="77:9"><if pos:start="59:9" pos:end="77:9">if <condition pos:start="59:12" pos:end="59:21">(<expr pos:start="59:13" pos:end="59:20"><name pos:start="59:13" pos:end="59:20">complete</name></expr>)</condition> <block pos:start="59:23" pos:end="77:9">{<block_content pos:start="61:13" pos:end="75:32">

            <expr_stmt pos:start="61:13" pos:end="61:36"><expr pos:start="61:13" pos:end="61:35"><name pos:start="61:13" pos:end="61:21"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:21">status</name></name> <operator pos:start="61:23" pos:end="61:24">&amp;=</operator> <operator pos:start="61:26" pos:end="61:26">~</operator><name pos:start="61:27" pos:end="61:35">BUSY_STAT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:59"><expr pos:start="63:13" pos:end="63:58"><call pos:start="63:13" pos:end="63:58"><name pos:start="63:13" pos:end="63:18">assert</name><argument_list pos:start="63:19" pos:end="63:58">(<argument pos:start="63:20" pos:end="63:57"><expr pos:start="63:20" pos:end="63:57"><operator pos:start="63:20" pos:end="63:20">!</operator><operator pos:start="63:21" pos:end="63:21">!</operator><name pos:start="63:22" pos:end="63:29"><name pos:start="63:22" pos:end="63:22">s</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:29">error</name></name> <operator pos:start="63:31" pos:end="63:32">==</operator> <operator pos:start="63:34" pos:end="63:34">!</operator><operator pos:start="63:35" pos:end="63:35">!</operator><operator pos:start="63:36" pos:end="63:36">(</operator><name pos:start="63:37" pos:end="63:45"><name pos:start="63:37" pos:end="63:37">s</name><operator pos:start="63:38" pos:end="63:39">-&gt;</operator><name pos:start="63:40" pos:end="63:45">status</name></name> <operator pos:start="63:47" pos:end="63:47">&amp;</operator> <name pos:start="63:49" pos:end="63:56">ERR_STAT</name><operator pos:start="63:57" pos:end="63:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="67:13" pos:end="71:13"><if pos:start="67:13" pos:end="71:13">if <condition pos:start="67:16" pos:end="67:66">(<expr pos:start="67:17" pos:end="67:65"><operator pos:start="67:17" pos:end="67:17">(</operator><name pos:start="67:18" pos:end="67:35"><name pos:start="67:18" pos:end="67:30">ide_cmd_table</name><index pos:start="67:31" pos:end="67:35">[<expr pos:start="67:32" pos:end="67:34"><name pos:start="67:32" pos:end="67:34">val</name></expr>]</index></name><operator pos:start="67:36" pos:end="67:36">.</operator><name pos:start="67:37" pos:end="67:41">flags</name> <operator pos:start="67:43" pos:end="67:43">&amp;</operator> <name pos:start="67:45" pos:end="67:51">SET_DSC</name><operator pos:start="67:52" pos:end="67:52">)</operator> <operator pos:start="67:54" pos:end="67:55">&amp;&amp;</operator> <operator pos:start="67:57" pos:end="67:57">!</operator><name pos:start="67:58" pos:end="67:65"><name pos:start="67:58" pos:end="67:58">s</name><operator pos:start="67:59" pos:end="67:60">-&gt;</operator><name pos:start="67:61" pos:end="67:65">error</name></name></expr>)</condition> <block pos:start="67:68" pos:end="71:13">{<block_content pos:start="69:17" pos:end="69:39">

                <expr_stmt pos:start="69:17" pos:end="69:39"><expr pos:start="69:17" pos:end="69:38"><name pos:start="69:17" pos:end="69:25"><name pos:start="69:17" pos:end="69:17">s</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:25">status</name></name> <operator pos:start="69:27" pos:end="69:28">|=</operator> <name pos:start="69:30" pos:end="69:38">SEEK_STAT</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="75:13" pos:end="75:32"><expr pos:start="75:13" pos:end="75:31"><call pos:start="75:13" pos:end="75:31"><name pos:start="75:13" pos:end="75:23">ide_set_irq</name><argument_list pos:start="75:24" pos:end="75:31">(<argument pos:start="75:25" pos:end="75:30"><expr pos:start="75:25" pos:end="75:30"><name pos:start="75:25" pos:end="75:30"><name pos:start="75:25" pos:end="75:25">s</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:30">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <return pos:start="81:9" pos:end="81:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="87:5" pos:end="779:5">switch<condition pos:start="87:11" pos:end="87:15">(<expr pos:start="87:12" pos:end="87:14"><name pos:start="87:12" pos:end="87:14">val</name></expr>)</condition> <block pos:start="87:17" pos:end="779:5">{<block_content pos:start="89:5" pos:end="777:14">

    <case pos:start="89:5" pos:end="89:29">case <expr pos:start="89:10" pos:end="89:28"><name pos:start="89:10" pos:end="89:28">WIN_CHECKPOWERMODE1</name></expr>:</case>

    <case pos:start="91:5" pos:end="91:29">case <expr pos:start="91:10" pos:end="91:28"><name pos:start="91:10" pos:end="91:28">WIN_CHECKPOWERMODE2</name></expr>:</case>

        <expr_stmt pos:start="93:9" pos:end="93:21"><expr pos:start="93:9" pos:end="93:20"><name pos:start="93:9" pos:end="93:16"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:16">error</name></name> <operator pos:start="93:18" pos:end="93:18">=</operator> <literal type="number" pos:start="93:20" pos:end="93:20">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:26"><expr pos:start="95:9" pos:end="95:25"><name pos:start="95:9" pos:end="95:18"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:18">nsector</name></name> <operator pos:start="95:20" pos:end="95:20">=</operator> <literal type="number" pos:start="95:22" pos:end="95:25">0xff</literal></expr>;</expr_stmt> <comment type="block" pos:start="95:28" pos:end="95:54">/* device active or idle */</comment>

        <expr_stmt pos:start="97:9" pos:end="97:43"><expr pos:start="97:9" pos:end="97:42"><name pos:start="97:9" pos:end="97:17"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:17">status</name></name> <operator pos:start="97:19" pos:end="97:19">=</operator> <name pos:start="97:21" pos:end="97:30">READY_STAT</name> <operator pos:start="97:32" pos:end="97:32">|</operator> <name pos:start="97:34" pos:end="97:42">SEEK_STAT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:28"><expr pos:start="99:9" pos:end="99:27"><call pos:start="99:9" pos:end="99:27"><name pos:start="99:9" pos:end="99:19">ide_set_irq</name><argument_list pos:start="99:20" pos:end="99:27">(<argument pos:start="99:21" pos:end="99:26"><expr pos:start="99:21" pos:end="99:26"><name pos:start="99:21" pos:end="99:26"><name pos:start="99:21" pos:end="99:21">s</name><operator pos:start="99:22" pos:end="99:23">-&gt;</operator><name pos:start="99:24" pos:end="99:26">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="101:9" pos:end="101:14">break;</break>

    <case pos:start="103:5" pos:end="103:25">case <expr pos:start="103:10" pos:end="103:24"><name pos:start="103:10" pos:end="103:24">WIN_SETFEATURES</name></expr>:</case>

        <if_stmt pos:start="105:9" pos:end="107:27"><if pos:start="105:9" pos:end="107:27">if <condition pos:start="105:12" pos:end="105:19">(<expr pos:start="105:13" pos:end="105:18"><operator pos:start="105:13" pos:end="105:13">!</operator><name pos:start="105:14" pos:end="105:18"><name pos:start="105:14" pos:end="105:14">s</name><operator pos:start="105:15" pos:end="105:16">-&gt;</operator><name pos:start="105:17" pos:end="105:18">bs</name></name></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="107:27"><block_content pos:start="107:13" pos:end="107:27">

            <goto pos:start="107:13" pos:end="107:27">goto <name pos:start="107:18" pos:end="107:26">abort_cmd</name>;</goto></block_content></block></if></if_stmt>

        <comment type="block" pos:start="109:9" pos:end="109:36">/* XXX: valid for CDROM ? */</comment>

        <switch pos:start="111:9" pos:end="239:9">switch<condition pos:start="111:15" pos:end="111:26">(<expr pos:start="111:16" pos:end="111:25"><name pos:start="111:16" pos:end="111:25"><name pos:start="111:16" pos:end="111:16">s</name><operator pos:start="111:17" pos:end="111:18">-&gt;</operator><name pos:start="111:19" pos:end="111:25">feature</name></name></expr>)</condition> <block pos:start="111:28" pos:end="239:9">{<block_content pos:start="113:9" pos:end="237:27">

        <case pos:start="113:9" pos:end="113:18">case <expr pos:start="113:14" pos:end="113:17"><literal type="number" pos:start="113:14" pos:end="113:17">0x02</literal></expr>:</case> <comment type="block" pos:start="113:20" pos:end="113:43">/* write cache enable */</comment>

            <expr_stmt pos:start="115:13" pos:end="115:53"><expr pos:start="115:13" pos:end="115:52"><call pos:start="115:13" pos:end="115:52"><name pos:start="115:13" pos:end="115:39">bdrv_set_enable_write_cache</name><argument_list pos:start="115:40" pos:end="115:52">(<argument pos:start="115:41" pos:end="115:45"><expr pos:start="115:41" pos:end="115:45"><name pos:start="115:41" pos:end="115:45"><name pos:start="115:41" pos:end="115:41">s</name><operator pos:start="115:42" pos:end="115:43">-&gt;</operator><name pos:start="115:44" pos:end="115:45">bs</name></name></expr></argument>, <argument pos:start="115:48" pos:end="115:51"><expr pos:start="115:48" pos:end="115:51"><name pos:start="115:48" pos:end="115:51">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:57"><expr pos:start="117:13" pos:end="117:56"><name pos:start="117:13" pos:end="117:25">identify_data</name> <operator pos:start="117:27" pos:end="117:27">=</operator> <operator pos:start="117:29" pos:end="117:29">(</operator><name pos:start="117:30" pos:end="117:37">uint16_t</name> <operator pos:start="117:39" pos:end="117:39">*</operator><operator pos:start="117:40" pos:end="117:40">)</operator><name pos:start="117:41" pos:end="117:56"><name pos:start="117:41" pos:end="117:41">s</name><operator pos:start="117:42" pos:end="117:43">-&gt;</operator><name pos:start="117:44" pos:end="117:56">identify_data</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:67"><expr pos:start="119:13" pos:end="119:66"><call pos:start="119:13" pos:end="119:66"><name pos:start="119:13" pos:end="119:20">put_le16</name><argument_list pos:start="119:21" pos:end="119:66">(<argument pos:start="119:22" pos:end="119:39"><expr pos:start="119:22" pos:end="119:39"><name pos:start="119:22" pos:end="119:34">identify_data</name> <operator pos:start="119:36" pos:end="119:36">+</operator> <literal type="number" pos:start="119:38" pos:end="119:39">85</literal></expr></argument>, <argument pos:start="119:42" pos:end="119:65"><expr pos:start="119:42" pos:end="119:65"><operator pos:start="119:42" pos:end="119:42">(</operator><literal type="number" pos:start="119:43" pos:end="119:43">1</literal> <operator pos:start="119:45" pos:end="119:46">&lt;&lt;</operator> <literal type="number" pos:start="119:48" pos:end="119:49">14</literal><operator pos:start="119:50" pos:end="119:50">)</operator> <operator pos:start="119:52" pos:end="119:52">|</operator> <operator pos:start="119:54" pos:end="119:54">(</operator><literal type="number" pos:start="119:55" pos:end="119:55">1</literal> <operator pos:start="119:57" pos:end="119:58">&lt;&lt;</operator> <literal type="number" pos:start="119:60" pos:end="119:60">5</literal><operator pos:start="119:61" pos:end="119:61">)</operator> <operator pos:start="119:63" pos:end="119:63">|</operator> <literal type="number" pos:start="119:65" pos:end="119:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:47"><expr pos:start="121:13" pos:end="121:46"><name pos:start="121:13" pos:end="121:21"><name pos:start="121:13" pos:end="121:13">s</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:21">status</name></name> <operator pos:start="121:23" pos:end="121:23">=</operator> <name pos:start="121:25" pos:end="121:34">READY_STAT</name> <operator pos:start="121:36" pos:end="121:36">|</operator> <name pos:start="121:38" pos:end="121:46">SEEK_STAT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:32"><expr pos:start="123:13" pos:end="123:31"><call pos:start="123:13" pos:end="123:31"><name pos:start="123:13" pos:end="123:23">ide_set_irq</name><argument_list pos:start="123:24" pos:end="123:31">(<argument pos:start="123:25" pos:end="123:30"><expr pos:start="123:25" pos:end="123:30"><name pos:start="123:25" pos:end="123:30"><name pos:start="123:25" pos:end="123:25">s</name><operator pos:start="123:26" pos:end="123:27">-&gt;</operator><name pos:start="123:28" pos:end="123:30">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="125:13" pos:end="125:18">break;</break>

        <case pos:start="127:9" pos:end="127:18">case <expr pos:start="127:14" pos:end="127:17"><literal type="number" pos:start="127:14" pos:end="127:17">0x82</literal></expr>:</case> <comment type="block" pos:start="127:20" pos:end="127:44">/* write cache disable */</comment>

            <expr_stmt pos:start="129:13" pos:end="129:54"><expr pos:start="129:13" pos:end="129:53"><call pos:start="129:13" pos:end="129:53"><name pos:start="129:13" pos:end="129:39">bdrv_set_enable_write_cache</name><argument_list pos:start="129:40" pos:end="129:53">(<argument pos:start="129:41" pos:end="129:45"><expr pos:start="129:41" pos:end="129:45"><name pos:start="129:41" pos:end="129:45"><name pos:start="129:41" pos:end="129:41">s</name><operator pos:start="129:42" pos:end="129:43">-&gt;</operator><name pos:start="129:44" pos:end="129:45">bs</name></name></expr></argument>, <argument pos:start="129:48" pos:end="129:52"><expr pos:start="129:48" pos:end="129:52"><name pos:start="129:48" pos:end="129:52">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:57"><expr pos:start="131:13" pos:end="131:56"><name pos:start="131:13" pos:end="131:25">identify_data</name> <operator pos:start="131:27" pos:end="131:27">=</operator> <operator pos:start="131:29" pos:end="131:29">(</operator><name pos:start="131:30" pos:end="131:37">uint16_t</name> <operator pos:start="131:39" pos:end="131:39">*</operator><operator pos:start="131:40" pos:end="131:40">)</operator><name pos:start="131:41" pos:end="131:56"><name pos:start="131:41" pos:end="131:41">s</name><operator pos:start="131:42" pos:end="131:43">-&gt;</operator><name pos:start="131:44" pos:end="131:56">identify_data</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:56"><expr pos:start="133:13" pos:end="133:55"><call pos:start="133:13" pos:end="133:55"><name pos:start="133:13" pos:end="133:20">put_le16</name><argument_list pos:start="133:21" pos:end="133:55">(<argument pos:start="133:22" pos:end="133:39"><expr pos:start="133:22" pos:end="133:39"><name pos:start="133:22" pos:end="133:34">identify_data</name> <operator pos:start="133:36" pos:end="133:36">+</operator> <literal type="number" pos:start="133:38" pos:end="133:39">85</literal></expr></argument>, <argument pos:start="133:42" pos:end="133:54"><expr pos:start="133:42" pos:end="133:54"><operator pos:start="133:42" pos:end="133:42">(</operator><literal type="number" pos:start="133:43" pos:end="133:43">1</literal> <operator pos:start="133:45" pos:end="133:46">&lt;&lt;</operator> <literal type="number" pos:start="133:48" pos:end="133:49">14</literal><operator pos:start="133:50" pos:end="133:50">)</operator> <operator pos:start="133:52" pos:end="133:52">|</operator> <literal type="number" pos:start="133:54" pos:end="133:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:31"><expr pos:start="135:13" pos:end="135:30"><call pos:start="135:13" pos:end="135:30"><name pos:start="135:13" pos:end="135:27">ide_flush_cache</name><argument_list pos:start="135:28" pos:end="135:30">(<argument pos:start="135:29" pos:end="135:29"><expr pos:start="135:29" pos:end="135:29"><name pos:start="135:29" pos:end="135:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="137:13" pos:end="137:18">break;</break>

        <case pos:start="139:9" pos:end="139:18">case <expr pos:start="139:14" pos:end="139:17"><literal type="number" pos:start="139:14" pos:end="139:17">0xcc</literal></expr>:</case> <comment type="block" pos:start="139:20" pos:end="139:62">/* reverting to power-on defaults enable */</comment>

        <case pos:start="141:9" pos:end="141:18">case <expr pos:start="141:14" pos:end="141:17"><literal type="number" pos:start="141:14" pos:end="141:17">0x66</literal></expr>:</case> <comment type="block" pos:start="141:20" pos:end="141:63">/* reverting to power-on defaults disable */</comment>

        <case pos:start="143:9" pos:end="143:18">case <expr pos:start="143:14" pos:end="143:17"><literal type="number" pos:start="143:14" pos:end="143:17">0xaa</literal></expr>:</case> <comment type="block" pos:start="143:20" pos:end="143:47">/* read look-ahead enable */</comment>

        <case pos:start="145:9" pos:end="145:18">case <expr pos:start="145:14" pos:end="145:17"><literal type="number" pos:start="145:14" pos:end="145:17">0x55</literal></expr>:</case> <comment type="block" pos:start="145:20" pos:end="145:48">/* read look-ahead disable */</comment>

        <case pos:start="147:9" pos:end="147:18">case <expr pos:start="147:14" pos:end="147:17"><literal type="number" pos:start="147:14" pos:end="147:17">0x05</literal></expr>:</case> <comment type="block" pos:start="147:20" pos:end="147:59">/* set advanced power management mode */</comment>

        <case pos:start="149:9" pos:end="149:18">case <expr pos:start="149:14" pos:end="149:17"><literal type="number" pos:start="149:14" pos:end="149:17">0x85</literal></expr>:</case> <comment type="block" pos:start="149:20" pos:end="149:63">/* disable advanced power management mode */</comment>

        <case pos:start="151:9" pos:end="151:18">case <expr pos:start="151:14" pos:end="151:17"><literal type="number" pos:start="151:14" pos:end="151:17">0x69</literal></expr>:</case> <comment type="block" pos:start="151:20" pos:end="151:28">/* NOP */</comment>

        <case pos:start="153:9" pos:end="153:18">case <expr pos:start="153:14" pos:end="153:17"><literal type="number" pos:start="153:14" pos:end="153:17">0x67</literal></expr>:</case> <comment type="block" pos:start="153:20" pos:end="153:28">/* NOP */</comment>

        <case pos:start="155:9" pos:end="155:18">case <expr pos:start="155:14" pos:end="155:17"><literal type="number" pos:start="155:14" pos:end="155:17">0x96</literal></expr>:</case> <comment type="block" pos:start="155:20" pos:end="155:28">/* NOP */</comment>

        <case pos:start="157:9" pos:end="157:18">case <expr pos:start="157:14" pos:end="157:17"><literal type="number" pos:start="157:14" pos:end="157:17">0x9a</literal></expr>:</case> <comment type="block" pos:start="157:20" pos:end="157:28">/* NOP */</comment>

        <case pos:start="159:9" pos:end="159:18">case <expr pos:start="159:14" pos:end="159:17"><literal type="number" pos:start="159:14" pos:end="159:17">0x42</literal></expr>:</case> <comment type="block" pos:start="159:20" pos:end="159:55">/* enable Automatic Acoustic Mode */</comment>

        <case pos:start="161:9" pos:end="161:18">case <expr pos:start="161:14" pos:end="161:17"><literal type="number" pos:start="161:14" pos:end="161:17">0xc2</literal></expr>:</case> <comment type="block" pos:start="161:20" pos:end="161:56">/* disable Automatic Acoustic Mode */</comment>

            <expr_stmt pos:start="163:13" pos:end="163:47"><expr pos:start="163:13" pos:end="163:46"><name pos:start="163:13" pos:end="163:21"><name pos:start="163:13" pos:end="163:13">s</name><operator pos:start="163:14" pos:end="163:15">-&gt;</operator><name pos:start="163:16" pos:end="163:21">status</name></name> <operator pos:start="163:23" pos:end="163:23">=</operator> <name pos:start="163:25" pos:end="163:34">READY_STAT</name> <operator pos:start="163:36" pos:end="163:36">|</operator> <name pos:start="163:38" pos:end="163:46">SEEK_STAT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:32"><expr pos:start="165:13" pos:end="165:31"><call pos:start="165:13" pos:end="165:31"><name pos:start="165:13" pos:end="165:23">ide_set_irq</name><argument_list pos:start="165:24" pos:end="165:31">(<argument pos:start="165:25" pos:end="165:30"><expr pos:start="165:25" pos:end="165:30"><name pos:start="165:25" pos:end="165:30"><name pos:start="165:25" pos:end="165:25">s</name><operator pos:start="165:26" pos:end="165:27">-&gt;</operator><name pos:start="165:28" pos:end="165:30">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="167:13" pos:end="167:18">break;</break>

        <case pos:start="169:9" pos:end="169:18">case <expr pos:start="169:14" pos:end="169:17"><literal type="number" pos:start="169:14" pos:end="169:17">0x03</literal></expr>:</case> <block pos:start="169:20" pos:end="233:9">{<block_content pos:start="171:17" pos:end="231:18"> <comment type="block" pos:start="169:22" pos:end="169:44">/* set transfer mode */</comment>

		<decl_stmt pos:start="171:17" pos:end="171:48"><decl pos:start="171:17" pos:end="171:47"><type pos:start="171:17" pos:end="171:23"><name pos:start="171:17" pos:end="171:23">uint8_t</name></type> <name pos:start="171:25" pos:end="171:27">val</name> <init pos:start="171:29" pos:end="171:47">= <expr pos:start="171:31" pos:end="171:47"><name pos:start="171:31" pos:end="171:40"><name pos:start="171:31" pos:end="171:31">s</name><operator pos:start="171:32" pos:end="171:33">-&gt;</operator><name pos:start="171:34" pos:end="171:40">nsector</name></name> <operator pos:start="171:42" pos:end="171:42">&amp;</operator> <literal type="number" pos:start="171:44" pos:end="171:47">0x07</literal></expr></init></decl>;</decl_stmt>

		<expr_stmt pos:start="173:17" pos:end="173:61"><expr pos:start="173:17" pos:end="173:60"><name pos:start="173:17" pos:end="173:29">identify_data</name> <operator pos:start="173:31" pos:end="173:31">=</operator> <operator pos:start="173:33" pos:end="173:33">(</operator><name pos:start="173:34" pos:end="173:41">uint16_t</name> <operator pos:start="173:43" pos:end="173:43">*</operator><operator pos:start="173:44" pos:end="173:44">)</operator><name pos:start="173:45" pos:end="173:60"><name pos:start="173:45" pos:end="173:45">s</name><operator pos:start="173:46" pos:end="173:47">-&gt;</operator><name pos:start="173:48" pos:end="173:60">identify_data</name></name></expr>;</expr_stmt>



		<switch pos:start="177:17" pos:end="225:17">switch <condition pos:start="177:24" pos:end="177:40">(<expr pos:start="177:25" pos:end="177:39"><name pos:start="177:25" pos:end="177:34"><name pos:start="177:25" pos:end="177:25">s</name><operator pos:start="177:26" pos:end="177:27">-&gt;</operator><name pos:start="177:28" pos:end="177:34">nsector</name></name> <operator pos:start="177:36" pos:end="177:37">&gt;&gt;</operator> <literal type="number" pos:start="177:39" pos:end="177:39">3</literal></expr>)</condition> <block pos:start="177:42" pos:end="225:17">{<block_content pos:start="179:17" pos:end="223:39">

		<case pos:start="179:17" pos:end="179:26">case <expr pos:start="179:22" pos:end="179:25"><literal type="number" pos:start="179:22" pos:end="179:25">0x00</literal></expr>:</case> <comment type="block" pos:start="179:28" pos:end="179:44">/* pio default */</comment>

		<case pos:start="181:17" pos:end="181:26">case <expr pos:start="181:22" pos:end="181:25"><literal type="number" pos:start="181:22" pos:end="181:25">0x01</literal></expr>:</case> <comment type="block" pos:start="181:28" pos:end="181:41">/* pio mode */</comment>

			<expr_stmt pos:start="183:25" pos:end="183:58"><expr pos:start="183:25" pos:end="183:57"><call pos:start="183:25" pos:end="183:57"><name pos:start="183:25" pos:end="183:32">put_le16</name><argument_list pos:start="183:33" pos:end="183:57">(<argument pos:start="183:34" pos:end="183:51"><expr pos:start="183:34" pos:end="183:51"><name pos:start="183:34" pos:end="183:46">identify_data</name> <operator pos:start="183:48" pos:end="183:48">+</operator> <literal type="number" pos:start="183:50" pos:end="183:51">62</literal></expr></argument>,<argument pos:start="183:53" pos:end="183:56"><expr pos:start="183:53" pos:end="183:56"><literal type="number" pos:start="183:53" pos:end="183:56">0x07</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="185:25" pos:end="185:58"><expr pos:start="185:25" pos:end="185:57"><call pos:start="185:25" pos:end="185:57"><name pos:start="185:25" pos:end="185:32">put_le16</name><argument_list pos:start="185:33" pos:end="185:57">(<argument pos:start="185:34" pos:end="185:51"><expr pos:start="185:34" pos:end="185:51"><name pos:start="185:34" pos:end="185:46">identify_data</name> <operator pos:start="185:48" pos:end="185:48">+</operator> <literal type="number" pos:start="185:50" pos:end="185:51">63</literal></expr></argument>,<argument pos:start="185:53" pos:end="185:56"><expr pos:start="185:53" pos:end="185:56"><literal type="number" pos:start="185:53" pos:end="185:56">0x07</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="187:25" pos:end="187:58"><expr pos:start="187:25" pos:end="187:57"><call pos:start="187:25" pos:end="187:57"><name pos:start="187:25" pos:end="187:32">put_le16</name><argument_list pos:start="187:33" pos:end="187:57">(<argument pos:start="187:34" pos:end="187:51"><expr pos:start="187:34" pos:end="187:51"><name pos:start="187:34" pos:end="187:46">identify_data</name> <operator pos:start="187:48" pos:end="187:48">+</operator> <literal type="number" pos:start="187:50" pos:end="187:51">88</literal></expr></argument>,<argument pos:start="187:53" pos:end="187:56"><expr pos:start="187:53" pos:end="187:56"><literal type="number" pos:start="187:53" pos:end="187:56">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="189:25" pos:end="189:30">break;</break>

                <case pos:start="191:17" pos:end="191:26">case <expr pos:start="191:22" pos:end="191:25"><literal type="number" pos:start="191:22" pos:end="191:25">0x02</literal></expr>:</case> <comment type="block" pos:start="191:28" pos:end="191:51">/* sigle word dma mode*/</comment>

			<expr_stmt pos:start="193:25" pos:end="193:77"><expr pos:start="193:25" pos:end="193:76"><call pos:start="193:25" pos:end="193:76"><name pos:start="193:25" pos:end="193:32">put_le16</name><argument_list pos:start="193:33" pos:end="193:76">(<argument pos:start="193:34" pos:end="193:51"><expr pos:start="193:34" pos:end="193:51"><name pos:start="193:34" pos:end="193:46">identify_data</name> <operator pos:start="193:48" pos:end="193:48">+</operator> <literal type="number" pos:start="193:50" pos:end="193:51">62</literal></expr></argument>,<argument pos:start="193:53" pos:end="193:75"><expr pos:start="193:53" pos:end="193:75"><literal type="number" pos:start="193:53" pos:end="193:56">0x07</literal> <operator pos:start="193:58" pos:end="193:58">|</operator> <operator pos:start="193:60" pos:end="193:60">(</operator><literal type="number" pos:start="193:61" pos:end="193:61">1</literal> <operator pos:start="193:63" pos:end="193:64">&lt;&lt;</operator> <operator pos:start="193:66" pos:end="193:66">(</operator><name pos:start="193:67" pos:end="193:69">val</name> <operator pos:start="193:71" pos:end="193:71">+</operator> <literal type="number" pos:start="193:73" pos:end="193:73">8</literal><operator pos:start="193:74" pos:end="193:74">)</operator><operator pos:start="193:75" pos:end="193:75">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="195:25" pos:end="195:58"><expr pos:start="195:25" pos:end="195:57"><call pos:start="195:25" pos:end="195:57"><name pos:start="195:25" pos:end="195:32">put_le16</name><argument_list pos:start="195:33" pos:end="195:57">(<argument pos:start="195:34" pos:end="195:51"><expr pos:start="195:34" pos:end="195:51"><name pos:start="195:34" pos:end="195:46">identify_data</name> <operator pos:start="195:48" pos:end="195:48">+</operator> <literal type="number" pos:start="195:50" pos:end="195:51">63</literal></expr></argument>,<argument pos:start="195:53" pos:end="195:56"><expr pos:start="195:53" pos:end="195:56"><literal type="number" pos:start="195:53" pos:end="195:56">0x07</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="197:25" pos:end="197:58"><expr pos:start="197:25" pos:end="197:57"><call pos:start="197:25" pos:end="197:57"><name pos:start="197:25" pos:end="197:32">put_le16</name><argument_list pos:start="197:33" pos:end="197:57">(<argument pos:start="197:34" pos:end="197:51"><expr pos:start="197:34" pos:end="197:51"><name pos:start="197:34" pos:end="197:46">identify_data</name> <operator pos:start="197:48" pos:end="197:48">+</operator> <literal type="number" pos:start="197:50" pos:end="197:51">88</literal></expr></argument>,<argument pos:start="197:53" pos:end="197:56"><expr pos:start="197:53" pos:end="197:56"><literal type="number" pos:start="197:53" pos:end="197:56">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="199:25" pos:end="199:30">break;</break>

		<case pos:start="201:17" pos:end="201:26">case <expr pos:start="201:22" pos:end="201:25"><literal type="number" pos:start="201:22" pos:end="201:25">0x04</literal></expr>:</case> <comment type="block" pos:start="201:28" pos:end="201:42">/* mdma mode */</comment>

			<expr_stmt pos:start="203:25" pos:end="203:58"><expr pos:start="203:25" pos:end="203:57"><call pos:start="203:25" pos:end="203:57"><name pos:start="203:25" pos:end="203:32">put_le16</name><argument_list pos:start="203:33" pos:end="203:57">(<argument pos:start="203:34" pos:end="203:51"><expr pos:start="203:34" pos:end="203:51"><name pos:start="203:34" pos:end="203:46">identify_data</name> <operator pos:start="203:48" pos:end="203:48">+</operator> <literal type="number" pos:start="203:50" pos:end="203:51">62</literal></expr></argument>,<argument pos:start="203:53" pos:end="203:56"><expr pos:start="203:53" pos:end="203:56"><literal type="number" pos:start="203:53" pos:end="203:56">0x07</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="205:25" pos:end="205:77"><expr pos:start="205:25" pos:end="205:76"><call pos:start="205:25" pos:end="205:76"><name pos:start="205:25" pos:end="205:32">put_le16</name><argument_list pos:start="205:33" pos:end="205:76">(<argument pos:start="205:34" pos:end="205:51"><expr pos:start="205:34" pos:end="205:51"><name pos:start="205:34" pos:end="205:46">identify_data</name> <operator pos:start="205:48" pos:end="205:48">+</operator> <literal type="number" pos:start="205:50" pos:end="205:51">63</literal></expr></argument>,<argument pos:start="205:53" pos:end="205:75"><expr pos:start="205:53" pos:end="205:75"><literal type="number" pos:start="205:53" pos:end="205:56">0x07</literal> <operator pos:start="205:58" pos:end="205:58">|</operator> <operator pos:start="205:60" pos:end="205:60">(</operator><literal type="number" pos:start="205:61" pos:end="205:61">1</literal> <operator pos:start="205:63" pos:end="205:64">&lt;&lt;</operator> <operator pos:start="205:66" pos:end="205:66">(</operator><name pos:start="205:67" pos:end="205:69">val</name> <operator pos:start="205:71" pos:end="205:71">+</operator> <literal type="number" pos:start="205:73" pos:end="205:73">8</literal><operator pos:start="205:74" pos:end="205:74">)</operator><operator pos:start="205:75" pos:end="205:75">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="207:25" pos:end="207:58"><expr pos:start="207:25" pos:end="207:57"><call pos:start="207:25" pos:end="207:57"><name pos:start="207:25" pos:end="207:32">put_le16</name><argument_list pos:start="207:33" pos:end="207:57">(<argument pos:start="207:34" pos:end="207:51"><expr pos:start="207:34" pos:end="207:51"><name pos:start="207:34" pos:end="207:46">identify_data</name> <operator pos:start="207:48" pos:end="207:48">+</operator> <literal type="number" pos:start="207:50" pos:end="207:51">88</literal></expr></argument>,<argument pos:start="207:53" pos:end="207:56"><expr pos:start="207:53" pos:end="207:56"><literal type="number" pos:start="207:53" pos:end="207:56">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="209:25" pos:end="209:30">break;</break>

		<case pos:start="211:17" pos:end="211:26">case <expr pos:start="211:22" pos:end="211:25"><literal type="number" pos:start="211:22" pos:end="211:25">0x08</literal></expr>:</case> <comment type="block" pos:start="211:28" pos:end="211:42">/* udma mode */</comment>

			<expr_stmt pos:start="213:25" pos:end="213:58"><expr pos:start="213:25" pos:end="213:57"><call pos:start="213:25" pos:end="213:57"><name pos:start="213:25" pos:end="213:32">put_le16</name><argument_list pos:start="213:33" pos:end="213:57">(<argument pos:start="213:34" pos:end="213:51"><expr pos:start="213:34" pos:end="213:51"><name pos:start="213:34" pos:end="213:46">identify_data</name> <operator pos:start="213:48" pos:end="213:48">+</operator> <literal type="number" pos:start="213:50" pos:end="213:51">62</literal></expr></argument>,<argument pos:start="213:53" pos:end="213:56"><expr pos:start="213:53" pos:end="213:56"><literal type="number" pos:start="213:53" pos:end="213:56">0x07</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="215:25" pos:end="215:58"><expr pos:start="215:25" pos:end="215:57"><call pos:start="215:25" pos:end="215:57"><name pos:start="215:25" pos:end="215:32">put_le16</name><argument_list pos:start="215:33" pos:end="215:57">(<argument pos:start="215:34" pos:end="215:51"><expr pos:start="215:34" pos:end="215:51"><name pos:start="215:34" pos:end="215:46">identify_data</name> <operator pos:start="215:48" pos:end="215:48">+</operator> <literal type="number" pos:start="215:50" pos:end="215:51">63</literal></expr></argument>,<argument pos:start="215:53" pos:end="215:56"><expr pos:start="215:53" pos:end="215:56"><literal type="number" pos:start="215:53" pos:end="215:56">0x07</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="217:25" pos:end="217:77"><expr pos:start="217:25" pos:end="217:76"><call pos:start="217:25" pos:end="217:76"><name pos:start="217:25" pos:end="217:32">put_le16</name><argument_list pos:start="217:33" pos:end="217:76">(<argument pos:start="217:34" pos:end="217:51"><expr pos:start="217:34" pos:end="217:51"><name pos:start="217:34" pos:end="217:46">identify_data</name> <operator pos:start="217:48" pos:end="217:48">+</operator> <literal type="number" pos:start="217:50" pos:end="217:51">88</literal></expr></argument>,<argument pos:start="217:53" pos:end="217:75"><expr pos:start="217:53" pos:end="217:75"><literal type="number" pos:start="217:53" pos:end="217:56">0x3f</literal> <operator pos:start="217:58" pos:end="217:58">|</operator> <operator pos:start="217:60" pos:end="217:60">(</operator><literal type="number" pos:start="217:61" pos:end="217:61">1</literal> <operator pos:start="217:63" pos:end="217:64">&lt;&lt;</operator> <operator pos:start="217:66" pos:end="217:66">(</operator><name pos:start="217:67" pos:end="217:69">val</name> <operator pos:start="217:71" pos:end="217:71">+</operator> <literal type="number" pos:start="217:73" pos:end="217:73">8</literal><operator pos:start="217:74" pos:end="217:74">)</operator><operator pos:start="217:75" pos:end="217:75">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="219:25" pos:end="219:30">break;</break>

		<default pos:start="221:17" pos:end="221:24">default:</default>

			<goto pos:start="223:25" pos:end="223:39">goto <name pos:start="223:30" pos:end="223:38">abort_cmd</name>;</goto>

		</block_content>}</block></switch>

            <expr_stmt pos:start="227:13" pos:end="227:47"><expr pos:start="227:13" pos:end="227:46"><name pos:start="227:13" pos:end="227:21"><name pos:start="227:13" pos:end="227:13">s</name><operator pos:start="227:14" pos:end="227:15">-&gt;</operator><name pos:start="227:16" pos:end="227:21">status</name></name> <operator pos:start="227:23" pos:end="227:23">=</operator> <name pos:start="227:25" pos:end="227:34">READY_STAT</name> <operator pos:start="227:36" pos:end="227:36">|</operator> <name pos:start="227:38" pos:end="227:46">SEEK_STAT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="229:13" pos:end="229:32"><expr pos:start="229:13" pos:end="229:31"><call pos:start="229:13" pos:end="229:31"><name pos:start="229:13" pos:end="229:23">ide_set_irq</name><argument_list pos:start="229:24" pos:end="229:31">(<argument pos:start="229:25" pos:end="229:30"><expr pos:start="229:25" pos:end="229:30"><name pos:start="229:25" pos:end="229:30"><name pos:start="229:25" pos:end="229:25">s</name><operator pos:start="229:26" pos:end="229:27">-&gt;</operator><name pos:start="229:28" pos:end="229:30">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="231:13" pos:end="231:18">break;</break>

	</block_content>}</block>

        <default pos:start="235:9" pos:end="235:16">default:</default>

            <goto pos:start="237:13" pos:end="237:27">goto <name pos:start="237:18" pos:end="237:26">abort_cmd</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="241:9" pos:end="241:14">break;</break>

    <case pos:start="243:5" pos:end="243:25">case <expr pos:start="243:10" pos:end="243:24"><name pos:start="243:10" pos:end="243:24">WIN_FLUSH_CACHE</name></expr>:</case>

    <case pos:start="245:5" pos:end="245:29">case <expr pos:start="245:10" pos:end="245:28"><name pos:start="245:10" pos:end="245:28">WIN_FLUSH_CACHE_EXT</name></expr>:</case>

        <expr_stmt pos:start="247:9" pos:end="247:27"><expr pos:start="247:9" pos:end="247:26"><call pos:start="247:9" pos:end="247:26"><name pos:start="247:9" pos:end="247:23">ide_flush_cache</name><argument_list pos:start="247:24" pos:end="247:26">(<argument pos:start="247:25" pos:end="247:25"><expr pos:start="247:25" pos:end="247:25"><name pos:start="247:25" pos:end="247:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="249:9" pos:end="249:14">break;</break>

    <case pos:start="251:5" pos:end="251:18">case <expr pos:start="251:10" pos:end="251:17"><name pos:start="251:10" pos:end="251:17">WIN_SEEK</name></expr>:</case>

        <comment type="block" pos:start="253:9" pos:end="253:51">/* XXX: Check that seek is within bounds */</comment>

        <expr_stmt pos:start="255:9" pos:end="255:43"><expr pos:start="255:9" pos:end="255:42"><name pos:start="255:9" pos:end="255:17"><name pos:start="255:9" pos:end="255:9">s</name><operator pos:start="255:10" pos:end="255:11">-&gt;</operator><name pos:start="255:12" pos:end="255:17">status</name></name> <operator pos:start="255:19" pos:end="255:19">=</operator> <name pos:start="255:21" pos:end="255:30">READY_STAT</name> <operator pos:start="255:32" pos:end="255:32">|</operator> <name pos:start="255:34" pos:end="255:42">SEEK_STAT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:28"><expr pos:start="257:9" pos:end="257:27"><call pos:start="257:9" pos:end="257:27"><name pos:start="257:9" pos:end="257:19">ide_set_irq</name><argument_list pos:start="257:20" pos:end="257:27">(<argument pos:start="257:21" pos:end="257:26"><expr pos:start="257:21" pos:end="257:26"><name pos:start="257:21" pos:end="257:26"><name pos:start="257:21" pos:end="257:21">s</name><operator pos:start="257:22" pos:end="257:23">-&gt;</operator><name pos:start="257:24" pos:end="257:26">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="259:9" pos:end="259:14">break;</break>

        <comment type="block" pos:start="261:9" pos:end="261:28">/* ATAPI commands */</comment>

    <case pos:start="263:5" pos:end="263:23">case <expr pos:start="263:10" pos:end="263:22"><name pos:start="263:10" pos:end="263:22">WIN_PIDENTIFY</name></expr>:</case>

        <expr_stmt pos:start="265:9" pos:end="265:30"><expr pos:start="265:9" pos:end="265:29"><call pos:start="265:9" pos:end="265:29"><name pos:start="265:9" pos:end="265:26">ide_atapi_identify</name><argument_list pos:start="265:27" pos:end="265:29">(<argument pos:start="265:28" pos:end="265:28"><expr pos:start="265:28" pos:end="265:28"><name pos:start="265:28" pos:end="265:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="267:9" pos:end="267:43"><expr pos:start="267:9" pos:end="267:42"><name pos:start="267:9" pos:end="267:17"><name pos:start="267:9" pos:end="267:9">s</name><operator pos:start="267:10" pos:end="267:11">-&gt;</operator><name pos:start="267:12" pos:end="267:17">status</name></name> <operator pos:start="267:19" pos:end="267:19">=</operator> <name pos:start="267:21" pos:end="267:30">READY_STAT</name> <operator pos:start="267:32" pos:end="267:32">|</operator> <name pos:start="267:34" pos:end="267:42">SEEK_STAT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="269:9" pos:end="269:68"><expr pos:start="269:9" pos:end="269:67"><call pos:start="269:9" pos:end="269:67"><name pos:start="269:9" pos:end="269:26">ide_transfer_start</name><argument_list pos:start="269:27" pos:end="269:67">(<argument pos:start="269:28" pos:end="269:28"><expr pos:start="269:28" pos:end="269:28"><name pos:start="269:28" pos:end="269:28">s</name></expr></argument>, <argument pos:start="269:31" pos:end="269:42"><expr pos:start="269:31" pos:end="269:42"><name pos:start="269:31" pos:end="269:42"><name pos:start="269:31" pos:end="269:31">s</name><operator pos:start="269:32" pos:end="269:33">-&gt;</operator><name pos:start="269:34" pos:end="269:42">io_buffer</name></name></expr></argument>, <argument pos:start="269:45" pos:end="269:47"><expr pos:start="269:45" pos:end="269:47"><literal type="number" pos:start="269:45" pos:end="269:47">512</literal></expr></argument>, <argument pos:start="269:50" pos:end="269:66"><expr pos:start="269:50" pos:end="269:66"><name pos:start="269:50" pos:end="269:66">ide_transfer_stop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:28"><expr pos:start="271:9" pos:end="271:27"><call pos:start="271:9" pos:end="271:27"><name pos:start="271:9" pos:end="271:19">ide_set_irq</name><argument_list pos:start="271:20" pos:end="271:27">(<argument pos:start="271:21" pos:end="271:26"><expr pos:start="271:21" pos:end="271:26"><name pos:start="271:21" pos:end="271:26"><name pos:start="271:21" pos:end="271:21">s</name><operator pos:start="271:22" pos:end="271:23">-&gt;</operator><name pos:start="271:24" pos:end="271:26">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="273:9" pos:end="273:14">break;</break>

    <case pos:start="275:5" pos:end="275:22">case <expr pos:start="275:10" pos:end="275:21"><name pos:start="275:10" pos:end="275:21">WIN_DIAGNOSE</name></expr>:</case>

        <expr_stmt pos:start="277:9" pos:end="277:29"><expr pos:start="277:9" pos:end="277:28"><call pos:start="277:9" pos:end="277:28"><name pos:start="277:9" pos:end="277:25">ide_set_signature</name><argument_list pos:start="277:26" pos:end="277:28">(<argument pos:start="277:27" pos:end="277:27"><expr pos:start="277:27" pos:end="277:27"><name pos:start="277:27" pos:end="277:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="279:9" pos:end="289:47"><if pos:start="279:9" pos:end="281:26">if <condition pos:start="279:12" pos:end="279:36">(<expr pos:start="279:13" pos:end="279:35"><name pos:start="279:13" pos:end="279:25"><name pos:start="279:13" pos:end="279:13">s</name><operator pos:start="279:14" pos:end="279:15">-&gt;</operator><name pos:start="279:16" pos:end="279:25">drive_kind</name></name> <operator pos:start="279:27" pos:end="279:28">==</operator> <name pos:start="279:30" pos:end="279:35">IDE_CD</name></expr>)</condition><block type="pseudo" pos:start="281:13" pos:end="281:26"><block_content pos:start="281:13" pos:end="281:26">

            <expr_stmt pos:start="281:13" pos:end="281:26"><expr pos:start="281:13" pos:end="281:25"><name pos:start="281:13" pos:end="281:21"><name pos:start="281:13" pos:end="281:13">s</name><operator pos:start="281:14" pos:end="281:15">-&gt;</operator><name pos:start="281:16" pos:end="281:21">status</name></name> <operator pos:start="281:23" pos:end="281:23">=</operator> <literal type="number" pos:start="281:25" pos:end="281:25">0</literal></expr>;</expr_stmt></block_content></block></if> <comment type="block" pos:start="281:28" pos:end="285:59">/* ATAPI spec (v6) section 9.10 defines packet

                            * devices to return a clear status register

                            * with READY_STAT *not* set. */</comment>

        <else pos:start="287:9" pos:end="289:47">else<block type="pseudo" pos:start="289:13" pos:end="289:47"><block_content pos:start="289:13" pos:end="289:47">

            <expr_stmt pos:start="289:13" pos:end="289:47"><expr pos:start="289:13" pos:end="289:46"><name pos:start="289:13" pos:end="289:21"><name pos:start="289:13" pos:end="289:13">s</name><operator pos:start="289:14" pos:end="289:15">-&gt;</operator><name pos:start="289:16" pos:end="289:21">status</name></name> <operator pos:start="289:23" pos:end="289:23">=</operator> <name pos:start="289:25" pos:end="289:34">READY_STAT</name> <operator pos:start="289:36" pos:end="289:36">|</operator> <name pos:start="289:38" pos:end="289:46">SEEK_STAT</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="291:9" pos:end="291:24"><expr pos:start="291:9" pos:end="291:23"><name pos:start="291:9" pos:end="291:16"><name pos:start="291:9" pos:end="291:9">s</name><operator pos:start="291:10" pos:end="291:11">-&gt;</operator><name pos:start="291:12" pos:end="291:16">error</name></name> <operator pos:start="291:18" pos:end="291:18">=</operator> <literal type="number" pos:start="291:20" pos:end="291:23">0x01</literal></expr>;</expr_stmt> <comment type="block" pos:start="291:26" pos:end="295:28">/* Device 0 passed, Device 1 passed or not

                          * present.

                          */</comment>

        <expr_stmt pos:start="297:9" pos:end="297:28"><expr pos:start="297:9" pos:end="297:27"><call pos:start="297:9" pos:end="297:27"><name pos:start="297:9" pos:end="297:19">ide_set_irq</name><argument_list pos:start="297:20" pos:end="297:27">(<argument pos:start="297:21" pos:end="297:26"><expr pos:start="297:21" pos:end="297:26"><name pos:start="297:21" pos:end="297:26"><name pos:start="297:21" pos:end="297:21">s</name><operator pos:start="297:22" pos:end="297:23">-&gt;</operator><name pos:start="297:24" pos:end="297:26">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="299:9" pos:end="299:14">break;</break>

    <case pos:start="301:5" pos:end="301:26">case <expr pos:start="301:10" pos:end="301:25"><name pos:start="301:10" pos:end="301:25">WIN_DEVICE_RESET</name></expr>:</case>

        <expr_stmt pos:start="303:9" pos:end="303:29"><expr pos:start="303:9" pos:end="303:28"><call pos:start="303:9" pos:end="303:28"><name pos:start="303:9" pos:end="303:25">ide_set_signature</name><argument_list pos:start="303:26" pos:end="303:28">(<argument pos:start="303:27" pos:end="303:27"><expr pos:start="303:27" pos:end="303:27"><name pos:start="303:27" pos:end="303:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="305:9" pos:end="305:25"><expr pos:start="305:9" pos:end="305:24"><name pos:start="305:9" pos:end="305:17"><name pos:start="305:9" pos:end="305:9">s</name><operator pos:start="305:10" pos:end="305:11">-&gt;</operator><name pos:start="305:12" pos:end="305:17">status</name></name> <operator pos:start="305:19" pos:end="305:19">=</operator> <literal type="number" pos:start="305:21" pos:end="305:24">0x00</literal></expr>;</expr_stmt> <comment type="block" pos:start="305:27" pos:end="305:56">/* NOTE: READY is _not_ set */</comment>

        <expr_stmt pos:start="307:9" pos:end="307:24"><expr pos:start="307:9" pos:end="307:23"><name pos:start="307:9" pos:end="307:16"><name pos:start="307:9" pos:end="307:9">s</name><operator pos:start="307:10" pos:end="307:11">-&gt;</operator><name pos:start="307:12" pos:end="307:16">error</name></name> <operator pos:start="307:18" pos:end="307:18">=</operator> <literal type="number" pos:start="307:20" pos:end="307:23">0x01</literal></expr>;</expr_stmt>

        <break pos:start="309:9" pos:end="309:14">break;</break>

    <case pos:start="311:5" pos:end="311:23">case <expr pos:start="311:10" pos:end="311:22"><name pos:start="311:10" pos:end="311:22">WIN_PACKETCMD</name></expr>:</case>

        <comment type="block" pos:start="313:9" pos:end="313:48">/* overlapping commands not supported */</comment>

        <if_stmt pos:start="315:9" pos:end="317:27"><if pos:start="315:9" pos:end="317:27">if <condition pos:start="315:12" pos:end="315:30">(<expr pos:start="315:13" pos:end="315:29"><name pos:start="315:13" pos:end="315:22"><name pos:start="315:13" pos:end="315:13">s</name><operator pos:start="315:14" pos:end="315:15">-&gt;</operator><name pos:start="315:16" pos:end="315:22">feature</name></name> <operator pos:start="315:24" pos:end="315:24">&amp;</operator> <literal type="number" pos:start="315:26" pos:end="315:29">0x02</literal></expr>)</condition><block type="pseudo" pos:start="317:13" pos:end="317:27"><block_content pos:start="317:13" pos:end="317:27">

            <goto pos:start="317:13" pos:end="317:27">goto <name pos:start="317:18" pos:end="317:26">abort_cmd</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="319:9" pos:end="319:43"><expr pos:start="319:9" pos:end="319:42"><name pos:start="319:9" pos:end="319:17"><name pos:start="319:9" pos:end="319:9">s</name><operator pos:start="319:10" pos:end="319:11">-&gt;</operator><name pos:start="319:12" pos:end="319:17">status</name></name> <operator pos:start="319:19" pos:end="319:19">=</operator> <name pos:start="319:21" pos:end="319:30">READY_STAT</name> <operator pos:start="319:32" pos:end="319:32">|</operator> <name pos:start="319:34" pos:end="319:42">SEEK_STAT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="321:9" pos:end="321:38"><expr pos:start="321:9" pos:end="321:37"><name pos:start="321:9" pos:end="321:20"><name pos:start="321:9" pos:end="321:9">s</name><operator pos:start="321:10" pos:end="321:11">-&gt;</operator><name pos:start="321:12" pos:end="321:20">atapi_dma</name></name> <operator pos:start="321:22" pos:end="321:22">=</operator> <name pos:start="321:24" pos:end="321:33"><name pos:start="321:24" pos:end="321:24">s</name><operator pos:start="321:25" pos:end="321:26">-&gt;</operator><name pos:start="321:27" pos:end="321:33">feature</name></name> <operator pos:start="321:35" pos:end="321:35">&amp;</operator> <literal type="number" pos:start="321:37" pos:end="321:37">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="323:9" pos:end="323:23"><expr pos:start="323:9" pos:end="323:22"><name pos:start="323:9" pos:end="323:18"><name pos:start="323:9" pos:end="323:9">s</name><operator pos:start="323:10" pos:end="323:11">-&gt;</operator><name pos:start="323:12" pos:end="323:18">nsector</name></name> <operator pos:start="323:20" pos:end="323:20">=</operator> <literal type="number" pos:start="323:22" pos:end="323:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="325:9" pos:end="327:42"><expr pos:start="325:9" pos:end="327:41"><call pos:start="325:9" pos:end="327:41"><name pos:start="325:9" pos:end="325:26">ide_transfer_start</name><argument_list pos:start="325:27" pos:end="327:41">(<argument pos:start="325:28" pos:end="325:28"><expr pos:start="325:28" pos:end="325:28"><name pos:start="325:28" pos:end="325:28">s</name></expr></argument>, <argument pos:start="325:31" pos:end="325:42"><expr pos:start="325:31" pos:end="325:42"><name pos:start="325:31" pos:end="325:42"><name pos:start="325:31" pos:end="325:31">s</name><operator pos:start="325:32" pos:end="325:33">-&gt;</operator><name pos:start="325:34" pos:end="325:42">io_buffer</name></name></expr></argument>, <argument pos:start="325:45" pos:end="325:61"><expr pos:start="325:45" pos:end="325:61"><name pos:start="325:45" pos:end="325:61">ATAPI_PACKET_SIZE</name></expr></argument>,

                           <argument pos:start="327:28" pos:end="327:40"><expr pos:start="327:28" pos:end="327:40"><name pos:start="327:28" pos:end="327:40">ide_atapi_cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="329:9" pos:end="329:14">break;</break>

    <comment type="block" pos:start="331:5" pos:end="331:25">/* CF-ATA commands */</comment>

    <case pos:start="333:5" pos:end="333:32">case <expr pos:start="333:10" pos:end="333:31"><name pos:start="333:10" pos:end="333:31">CFA_REQ_EXT_ERROR_CODE</name></expr>:</case>

        <expr_stmt pos:start="335:9" pos:end="335:24"><expr pos:start="335:9" pos:end="335:23"><name pos:start="335:9" pos:end="335:16"><name pos:start="335:9" pos:end="335:9">s</name><operator pos:start="335:10" pos:end="335:11">-&gt;</operator><name pos:start="335:12" pos:end="335:16">error</name></name> <operator pos:start="335:18" pos:end="335:18">=</operator> <literal type="number" pos:start="335:20" pos:end="335:23">0x09</literal></expr>;</expr_stmt>    <comment type="block" pos:start="335:29" pos:end="335:53">/* miscellaneous error */</comment>

        <expr_stmt pos:start="337:9" pos:end="337:43"><expr pos:start="337:9" pos:end="337:42"><name pos:start="337:9" pos:end="337:17"><name pos:start="337:9" pos:end="337:9">s</name><operator pos:start="337:10" pos:end="337:11">-&gt;</operator><name pos:start="337:12" pos:end="337:17">status</name></name> <operator pos:start="337:19" pos:end="337:19">=</operator> <name pos:start="337:21" pos:end="337:30">READY_STAT</name> <operator pos:start="337:32" pos:end="337:32">|</operator> <name pos:start="337:34" pos:end="337:42">SEEK_STAT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="339:9" pos:end="339:28"><expr pos:start="339:9" pos:end="339:27"><call pos:start="339:9" pos:end="339:27"><name pos:start="339:9" pos:end="339:19">ide_set_irq</name><argument_list pos:start="339:20" pos:end="339:27">(<argument pos:start="339:21" pos:end="339:26"><expr pos:start="339:21" pos:end="339:26"><name pos:start="339:21" pos:end="339:26"><name pos:start="339:21" pos:end="339:21">s</name><operator pos:start="339:22" pos:end="339:23">-&gt;</operator><name pos:start="339:24" pos:end="339:26">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="341:9" pos:end="341:14">break;</break>

    <case pos:start="343:5" pos:end="343:27">case <expr pos:start="343:10" pos:end="343:26"><name pos:start="343:10" pos:end="343:26">CFA_ERASE_SECTORS</name></expr>:</case>

    <case pos:start="345:5" pos:end="356:0">case <expr pos:start="345:10" pos:end="345:23"><name pos:start="345:10" pos:end="345:23">CFA_WEAR_LEVEL</name></expr>:</case>

<cpp:if pos:start="347:1" pos:end="347:5">#<cpp:directive pos:start="347:2" pos:end="347:3">if</cpp:directive> <expr pos:start="347:5" pos:end="347:5"><literal type="number" pos:start="347:5" pos:end="347:5">0</literal></expr></cpp:if>

    <comment type="block" pos:start="349:5" pos:end="351:37">/* This one has the same ID as CFA_WEAR_LEVEL and is required for

       Windows 8 to work with AHCI */</comment>

    case WIN_SECURITY_FREEZE_LOCK:

<cpp:endif pos:start="355:1" pos:end="355:6">#<cpp:directive pos:start="355:2" pos:end="355:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="357:9" pos:end="359:27"><if pos:start="357:9" pos:end="359:27">if <condition pos:start="357:12" pos:end="357:34">(<expr pos:start="357:13" pos:end="357:33"><name pos:start="357:13" pos:end="357:15">val</name> <operator pos:start="357:17" pos:end="357:18">==</operator> <name pos:start="357:20" pos:end="357:33">CFA_WEAR_LEVEL</name></expr>)</condition><block type="pseudo" pos:start="359:13" pos:end="359:27"><block_content pos:start="359:13" pos:end="359:27">

            <expr_stmt pos:start="359:13" pos:end="359:27"><expr pos:start="359:13" pos:end="359:26"><name pos:start="359:13" pos:end="359:22"><name pos:start="359:13" pos:end="359:13">s</name><operator pos:start="359:14" pos:end="359:15">-&gt;</operator><name pos:start="359:16" pos:end="359:22">nsector</name></name> <operator pos:start="359:24" pos:end="359:24">=</operator> <literal type="number" pos:start="359:26" pos:end="359:26">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="361:9" pos:end="363:33"><if pos:start="361:9" pos:end="363:33">if <condition pos:start="361:12" pos:end="361:37">(<expr pos:start="361:13" pos:end="361:36"><name pos:start="361:13" pos:end="361:15">val</name> <operator pos:start="361:17" pos:end="361:18">==</operator> <name pos:start="361:20" pos:end="361:36">CFA_ERASE_SECTORS</name></expr>)</condition><block type="pseudo" pos:start="363:13" pos:end="363:33"><block_content pos:start="363:13" pos:end="363:33">

            <expr_stmt pos:start="363:13" pos:end="363:33"><expr pos:start="363:13" pos:end="363:32"><name pos:start="363:13" pos:end="363:28"><name pos:start="363:13" pos:end="363:13">s</name><operator pos:start="363:14" pos:end="363:15">-&gt;</operator><name pos:start="363:16" pos:end="363:28">media_changed</name></name> <operator pos:start="363:30" pos:end="363:30">=</operator> <literal type="number" pos:start="363:32" pos:end="363:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="365:9" pos:end="365:24"><expr pos:start="365:9" pos:end="365:23"><name pos:start="365:9" pos:end="365:16"><name pos:start="365:9" pos:end="365:9">s</name><operator pos:start="365:10" pos:end="365:11">-&gt;</operator><name pos:start="365:12" pos:end="365:16">error</name></name> <operator pos:start="365:18" pos:end="365:18">=</operator> <literal type="number" pos:start="365:20" pos:end="365:23">0x00</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="367:9" pos:end="367:43"><expr pos:start="367:9" pos:end="367:42"><name pos:start="367:9" pos:end="367:17"><name pos:start="367:9" pos:end="367:9">s</name><operator pos:start="367:10" pos:end="367:11">-&gt;</operator><name pos:start="367:12" pos:end="367:17">status</name></name> <operator pos:start="367:19" pos:end="367:19">=</operator> <name pos:start="367:21" pos:end="367:30">READY_STAT</name> <operator pos:start="367:32" pos:end="367:32">|</operator> <name pos:start="367:34" pos:end="367:42">SEEK_STAT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="369:9" pos:end="369:28"><expr pos:start="369:9" pos:end="369:27"><call pos:start="369:9" pos:end="369:27"><name pos:start="369:9" pos:end="369:19">ide_set_irq</name><argument_list pos:start="369:20" pos:end="369:27">(<argument pos:start="369:21" pos:end="369:26"><expr pos:start="369:21" pos:end="369:26"><name pos:start="369:21" pos:end="369:26"><name pos:start="369:21" pos:end="369:21">s</name><operator pos:start="369:22" pos:end="369:23">-&gt;</operator><name pos:start="369:24" pos:end="369:26">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="371:9" pos:end="371:14">break;</break>

    <case pos:start="373:5" pos:end="373:30">case <expr pos:start="373:10" pos:end="373:29"><name pos:start="373:10" pos:end="373:29">CFA_TRANSLATE_SECTOR</name></expr>:</case>

        <expr_stmt pos:start="375:9" pos:end="375:24"><expr pos:start="375:9" pos:end="375:23"><name pos:start="375:9" pos:end="375:16"><name pos:start="375:9" pos:end="375:9">s</name><operator pos:start="375:10" pos:end="375:11">-&gt;</operator><name pos:start="375:12" pos:end="375:16">error</name></name> <operator pos:start="375:18" pos:end="375:18">=</operator> <literal type="number" pos:start="375:20" pos:end="375:23">0x00</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="377:9" pos:end="377:43"><expr pos:start="377:9" pos:end="377:42"><name pos:start="377:9" pos:end="377:17"><name pos:start="377:9" pos:end="377:9">s</name><operator pos:start="377:10" pos:end="377:11">-&gt;</operator><name pos:start="377:12" pos:end="377:17">status</name></name> <operator pos:start="377:19" pos:end="377:19">=</operator> <name pos:start="377:21" pos:end="377:30">READY_STAT</name> <operator pos:start="377:32" pos:end="377:32">|</operator> <name pos:start="377:34" pos:end="377:42">SEEK_STAT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="379:9" pos:end="379:39"><expr pos:start="379:9" pos:end="379:38"><call pos:start="379:9" pos:end="379:38"><name pos:start="379:9" pos:end="379:14">memset</name><argument_list pos:start="379:15" pos:end="379:38">(<argument pos:start="379:16" pos:end="379:27"><expr pos:start="379:16" pos:end="379:27"><name pos:start="379:16" pos:end="379:27"><name pos:start="379:16" pos:end="379:16">s</name><operator pos:start="379:17" pos:end="379:18">-&gt;</operator><name pos:start="379:19" pos:end="379:27">io_buffer</name></name></expr></argument>, <argument pos:start="379:30" pos:end="379:30"><expr pos:start="379:30" pos:end="379:30"><literal type="number" pos:start="379:30" pos:end="379:30">0</literal></expr></argument>, <argument pos:start="379:33" pos:end="379:37"><expr pos:start="379:33" pos:end="379:37"><literal type="number" pos:start="379:33" pos:end="379:37">0x200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="381:9" pos:end="381:37"><expr pos:start="381:9" pos:end="381:36"><name pos:start="381:9" pos:end="381:26"><name pos:start="381:9" pos:end="381:9">s</name><operator pos:start="381:10" pos:end="381:11">-&gt;</operator><name pos:start="381:12" pos:end="381:20">io_buffer</name><index pos:start="381:21" pos:end="381:26">[<expr pos:start="381:22" pos:end="381:25"><literal type="number" pos:start="381:22" pos:end="381:25">0x00</literal></expr>]</index></name> <operator pos:start="381:28" pos:end="381:28">=</operator> <name pos:start="381:30" pos:end="381:36"><name pos:start="381:30" pos:end="381:30">s</name><operator pos:start="381:31" pos:end="381:32">-&gt;</operator><name pos:start="381:33" pos:end="381:36">hcyl</name></name></expr>;</expr_stmt>			<comment type="block" pos:start="381:57" pos:end="381:69">/* Cyl MSB */</comment>

        <expr_stmt pos:start="383:9" pos:end="383:37"><expr pos:start="383:9" pos:end="383:36"><name pos:start="383:9" pos:end="383:26"><name pos:start="383:9" pos:end="383:9">s</name><operator pos:start="383:10" pos:end="383:11">-&gt;</operator><name pos:start="383:12" pos:end="383:20">io_buffer</name><index pos:start="383:21" pos:end="383:26">[<expr pos:start="383:22" pos:end="383:25"><literal type="number" pos:start="383:22" pos:end="383:25">0x01</literal></expr>]</index></name> <operator pos:start="383:28" pos:end="383:28">=</operator> <name pos:start="383:30" pos:end="383:36"><name pos:start="383:30" pos:end="383:30">s</name><operator pos:start="383:31" pos:end="383:32">-&gt;</operator><name pos:start="383:33" pos:end="383:36">lcyl</name></name></expr>;</expr_stmt>			<comment type="block" pos:start="383:57" pos:end="383:69">/* Cyl LSB */</comment>

        <expr_stmt pos:start="385:9" pos:end="385:39"><expr pos:start="385:9" pos:end="385:38"><name pos:start="385:9" pos:end="385:26"><name pos:start="385:9" pos:end="385:9">s</name><operator pos:start="385:10" pos:end="385:11">-&gt;</operator><name pos:start="385:12" pos:end="385:20">io_buffer</name><index pos:start="385:21" pos:end="385:26">[<expr pos:start="385:22" pos:end="385:25"><literal type="number" pos:start="385:22" pos:end="385:25">0x02</literal></expr>]</index></name> <operator pos:start="385:28" pos:end="385:28">=</operator> <name pos:start="385:30" pos:end="385:38"><name pos:start="385:30" pos:end="385:30">s</name><operator pos:start="385:31" pos:end="385:32">-&gt;</operator><name pos:start="385:33" pos:end="385:38">select</name></name></expr>;</expr_stmt>			<comment type="block" pos:start="385:57" pos:end="385:66">/* Head */</comment>

        <expr_stmt pos:start="387:9" pos:end="387:39"><expr pos:start="387:9" pos:end="387:38"><name pos:start="387:9" pos:end="387:26"><name pos:start="387:9" pos:end="387:9">s</name><operator pos:start="387:10" pos:end="387:11">-&gt;</operator><name pos:start="387:12" pos:end="387:20">io_buffer</name><index pos:start="387:21" pos:end="387:26">[<expr pos:start="387:22" pos:end="387:25"><literal type="number" pos:start="387:22" pos:end="387:25">0x03</literal></expr>]</index></name> <operator pos:start="387:28" pos:end="387:28">=</operator> <name pos:start="387:30" pos:end="387:38"><name pos:start="387:30" pos:end="387:30">s</name><operator pos:start="387:31" pos:end="387:32">-&gt;</operator><name pos:start="387:33" pos:end="387:38">sector</name></name></expr>;</expr_stmt>			<comment type="block" pos:start="387:57" pos:end="387:68">/* Sector */</comment>

        <expr_stmt pos:start="389:9" pos:end="389:53"><expr pos:start="389:9" pos:end="389:52"><name pos:start="389:9" pos:end="389:26"><name pos:start="389:9" pos:end="389:9">s</name><operator pos:start="389:10" pos:end="389:11">-&gt;</operator><name pos:start="389:12" pos:end="389:20">io_buffer</name><index pos:start="389:21" pos:end="389:26">[<expr pos:start="389:22" pos:end="389:25"><literal type="number" pos:start="389:22" pos:end="389:25">0x04</literal></expr>]</index></name> <operator pos:start="389:28" pos:end="389:28">=</operator> <call pos:start="389:30" pos:end="389:46"><name pos:start="389:30" pos:end="389:43">ide_get_sector</name><argument_list pos:start="389:44" pos:end="389:46">(<argument pos:start="389:45" pos:end="389:45"><expr pos:start="389:45" pos:end="389:45"><name pos:start="389:45" pos:end="389:45">s</name></expr></argument>)</argument_list></call> <operator pos:start="389:48" pos:end="389:49">&gt;&gt;</operator> <literal type="number" pos:start="389:51" pos:end="389:52">16</literal></expr>;</expr_stmt>	<comment type="block" pos:start="389:57" pos:end="389:69">/* LBA MSB */</comment>

        <expr_stmt pos:start="391:9" pos:end="391:52"><expr pos:start="391:9" pos:end="391:51"><name pos:start="391:9" pos:end="391:26"><name pos:start="391:9" pos:end="391:9">s</name><operator pos:start="391:10" pos:end="391:11">-&gt;</operator><name pos:start="391:12" pos:end="391:20">io_buffer</name><index pos:start="391:21" pos:end="391:26">[<expr pos:start="391:22" pos:end="391:25"><literal type="number" pos:start="391:22" pos:end="391:25">0x05</literal></expr>]</index></name> <operator pos:start="391:28" pos:end="391:28">=</operator> <call pos:start="391:30" pos:end="391:46"><name pos:start="391:30" pos:end="391:43">ide_get_sector</name><argument_list pos:start="391:44" pos:end="391:46">(<argument pos:start="391:45" pos:end="391:45"><expr pos:start="391:45" pos:end="391:45"><name pos:start="391:45" pos:end="391:45">s</name></expr></argument>)</argument_list></call> <operator pos:start="391:48" pos:end="391:49">&gt;&gt;</operator> <literal type="number" pos:start="391:51" pos:end="391:51">8</literal></expr>;</expr_stmt>	<comment type="block" pos:start="391:57" pos:end="391:65">/* LBA */</comment>

        <expr_stmt pos:start="393:9" pos:end="393:52"><expr pos:start="393:9" pos:end="393:51"><name pos:start="393:9" pos:end="393:26"><name pos:start="393:9" pos:end="393:9">s</name><operator pos:start="393:10" pos:end="393:11">-&gt;</operator><name pos:start="393:12" pos:end="393:20">io_buffer</name><index pos:start="393:21" pos:end="393:26">[<expr pos:start="393:22" pos:end="393:25"><literal type="number" pos:start="393:22" pos:end="393:25">0x06</literal></expr>]</index></name> <operator pos:start="393:28" pos:end="393:28">=</operator> <call pos:start="393:30" pos:end="393:46"><name pos:start="393:30" pos:end="393:43">ide_get_sector</name><argument_list pos:start="393:44" pos:end="393:46">(<argument pos:start="393:45" pos:end="393:45"><expr pos:start="393:45" pos:end="393:45"><name pos:start="393:45" pos:end="393:45">s</name></expr></argument>)</argument_list></call> <operator pos:start="393:48" pos:end="393:49">&gt;&gt;</operator> <literal type="number" pos:start="393:51" pos:end="393:51">0</literal></expr>;</expr_stmt>	<comment type="block" pos:start="393:57" pos:end="393:69">/* LBA LSB */</comment>

        <expr_stmt pos:start="395:9" pos:end="395:34"><expr pos:start="395:9" pos:end="395:33"><name pos:start="395:9" pos:end="395:26"><name pos:start="395:9" pos:end="395:9">s</name><operator pos:start="395:10" pos:end="395:11">-&gt;</operator><name pos:start="395:12" pos:end="395:20">io_buffer</name><index pos:start="395:21" pos:end="395:26">[<expr pos:start="395:22" pos:end="395:25"><literal type="number" pos:start="395:22" pos:end="395:25">0x13</literal></expr>]</index></name> <operator pos:start="395:28" pos:end="395:28">=</operator> <literal type="number" pos:start="395:30" pos:end="395:33">0x00</literal></expr>;</expr_stmt>				<comment type="block" pos:start="395:65" pos:end="395:80">/* Erase flag */</comment>

        <expr_stmt pos:start="397:9" pos:end="397:34"><expr pos:start="397:9" pos:end="397:33"><name pos:start="397:9" pos:end="397:26"><name pos:start="397:9" pos:end="397:9">s</name><operator pos:start="397:10" pos:end="397:11">-&gt;</operator><name pos:start="397:12" pos:end="397:20">io_buffer</name><index pos:start="397:21" pos:end="397:26">[<expr pos:start="397:22" pos:end="397:25"><literal type="number" pos:start="397:22" pos:end="397:25">0x18</literal></expr>]</index></name> <operator pos:start="397:28" pos:end="397:28">=</operator> <literal type="number" pos:start="397:30" pos:end="397:33">0x00</literal></expr>;</expr_stmt>				<comment type="block" pos:start="397:65" pos:end="397:79">/* Hot count */</comment>

        <expr_stmt pos:start="399:9" pos:end="399:34"><expr pos:start="399:9" pos:end="399:33"><name pos:start="399:9" pos:end="399:26"><name pos:start="399:9" pos:end="399:9">s</name><operator pos:start="399:10" pos:end="399:11">-&gt;</operator><name pos:start="399:12" pos:end="399:20">io_buffer</name><index pos:start="399:21" pos:end="399:26">[<expr pos:start="399:22" pos:end="399:25"><literal type="number" pos:start="399:22" pos:end="399:25">0x19</literal></expr>]</index></name> <operator pos:start="399:28" pos:end="399:28">=</operator> <literal type="number" pos:start="399:30" pos:end="399:33">0x00</literal></expr>;</expr_stmt>				<comment type="block" pos:start="399:65" pos:end="399:79">/* Hot count */</comment>

        <expr_stmt pos:start="401:9" pos:end="401:34"><expr pos:start="401:9" pos:end="401:33"><name pos:start="401:9" pos:end="401:26"><name pos:start="401:9" pos:end="401:9">s</name><operator pos:start="401:10" pos:end="401:11">-&gt;</operator><name pos:start="401:12" pos:end="401:20">io_buffer</name><index pos:start="401:21" pos:end="401:26">[<expr pos:start="401:22" pos:end="401:25"><literal type="number" pos:start="401:22" pos:end="401:25">0x1a</literal></expr>]</index></name> <operator pos:start="401:28" pos:end="401:28">=</operator> <literal type="number" pos:start="401:30" pos:end="401:33">0x01</literal></expr>;</expr_stmt>				<comment type="block" pos:start="401:65" pos:end="401:79">/* Hot count */</comment>

        <expr_stmt pos:start="403:9" pos:end="403:70"><expr pos:start="403:9" pos:end="403:69"><call pos:start="403:9" pos:end="403:69"><name pos:start="403:9" pos:end="403:26">ide_transfer_start</name><argument_list pos:start="403:27" pos:end="403:69">(<argument pos:start="403:28" pos:end="403:28"><expr pos:start="403:28" pos:end="403:28"><name pos:start="403:28" pos:end="403:28">s</name></expr></argument>, <argument pos:start="403:31" pos:end="403:42"><expr pos:start="403:31" pos:end="403:42"><name pos:start="403:31" pos:end="403:42"><name pos:start="403:31" pos:end="403:31">s</name><operator pos:start="403:32" pos:end="403:33">-&gt;</operator><name pos:start="403:34" pos:end="403:42">io_buffer</name></name></expr></argument>, <argument pos:start="403:45" pos:end="403:49"><expr pos:start="403:45" pos:end="403:49"><literal type="number" pos:start="403:45" pos:end="403:49">0x200</literal></expr></argument>, <argument pos:start="403:52" pos:end="403:68"><expr pos:start="403:52" pos:end="403:68"><name pos:start="403:52" pos:end="403:68">ide_transfer_stop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="405:9" pos:end="405:28"><expr pos:start="405:9" pos:end="405:27"><call pos:start="405:9" pos:end="405:27"><name pos:start="405:9" pos:end="405:19">ide_set_irq</name><argument_list pos:start="405:20" pos:end="405:27">(<argument pos:start="405:21" pos:end="405:26"><expr pos:start="405:21" pos:end="405:26"><name pos:start="405:21" pos:end="405:26"><name pos:start="405:21" pos:end="405:21">s</name><operator pos:start="405:22" pos:end="405:23">-&gt;</operator><name pos:start="405:24" pos:end="405:26">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="407:9" pos:end="407:14">break;</break>

    <case pos:start="409:5" pos:end="409:37">case <expr pos:start="409:10" pos:end="409:36"><name pos:start="409:10" pos:end="409:36">CFA_ACCESS_METADATA_STORAGE</name></expr>:</case>

        <switch pos:start="411:9" pos:end="435:9">switch <condition pos:start="411:16" pos:end="411:27">(<expr pos:start="411:17" pos:end="411:26"><name pos:start="411:17" pos:end="411:26"><name pos:start="411:17" pos:end="411:17">s</name><operator pos:start="411:18" pos:end="411:19">-&gt;</operator><name pos:start="411:20" pos:end="411:26">feature</name></name></expr>)</condition> <block pos:start="411:29" pos:end="435:9">{<block_content pos:start="413:9" pos:end="433:27">

        <case pos:start="413:9" pos:end="413:18">case <expr pos:start="413:14" pos:end="413:17"><literal type="number" pos:start="413:14" pos:end="413:17">0x02</literal></expr>:</case>	<comment type="block" pos:start="413:25" pos:end="413:54">/* Inquiry Metadata Storage */</comment>

            <expr_stmt pos:start="415:13" pos:end="415:42"><expr pos:start="415:13" pos:end="415:41"><call pos:start="415:13" pos:end="415:41"><name pos:start="415:13" pos:end="415:38">ide_cfata_metadata_inquiry</name><argument_list pos:start="415:39" pos:end="415:41">(<argument pos:start="415:40" pos:end="415:40"><expr pos:start="415:40" pos:end="415:40"><name pos:start="415:40" pos:end="415:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="417:13" pos:end="417:18">break;</break>

        <case pos:start="419:9" pos:end="419:18">case <expr pos:start="419:14" pos:end="419:17"><literal type="number" pos:start="419:14" pos:end="419:17">0x03</literal></expr>:</case>	<comment type="block" pos:start="419:25" pos:end="419:51">/* Read Metadata Storage */</comment>

            <expr_stmt pos:start="421:13" pos:end="421:39"><expr pos:start="421:13" pos:end="421:38"><call pos:start="421:13" pos:end="421:38"><name pos:start="421:13" pos:end="421:35">ide_cfata_metadata_read</name><argument_list pos:start="421:36" pos:end="421:38">(<argument pos:start="421:37" pos:end="421:37"><expr pos:start="421:37" pos:end="421:37"><name pos:start="421:37" pos:end="421:37">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="423:13" pos:end="423:18">break;</break>

        <case pos:start="425:9" pos:end="425:18">case <expr pos:start="425:14" pos:end="425:17"><literal type="number" pos:start="425:14" pos:end="425:17">0x04</literal></expr>:</case>	<comment type="block" pos:start="425:25" pos:end="425:52">/* Write Metadata Storage */</comment>

            <expr_stmt pos:start="427:13" pos:end="427:40"><expr pos:start="427:13" pos:end="427:39"><call pos:start="427:13" pos:end="427:39"><name pos:start="427:13" pos:end="427:36">ide_cfata_metadata_write</name><argument_list pos:start="427:37" pos:end="427:39">(<argument pos:start="427:38" pos:end="427:38"><expr pos:start="427:38" pos:end="427:38"><name pos:start="427:38" pos:end="427:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="429:13" pos:end="429:18">break;</break>

        <default pos:start="431:9" pos:end="431:16">default:</default>

            <goto pos:start="433:13" pos:end="433:27">goto <name pos:start="433:18" pos:end="433:26">abort_cmd</name>;</goto>

        </block_content>}</block></switch>

        <expr_stmt pos:start="437:9" pos:end="437:70"><expr pos:start="437:9" pos:end="437:69"><call pos:start="437:9" pos:end="437:69"><name pos:start="437:9" pos:end="437:26">ide_transfer_start</name><argument_list pos:start="437:27" pos:end="437:69">(<argument pos:start="437:28" pos:end="437:28"><expr pos:start="437:28" pos:end="437:28"><name pos:start="437:28" pos:end="437:28">s</name></expr></argument>, <argument pos:start="437:31" pos:end="437:42"><expr pos:start="437:31" pos:end="437:42"><name pos:start="437:31" pos:end="437:42"><name pos:start="437:31" pos:end="437:31">s</name><operator pos:start="437:32" pos:end="437:33">-&gt;</operator><name pos:start="437:34" pos:end="437:42">io_buffer</name></name></expr></argument>, <argument pos:start="437:45" pos:end="437:49"><expr pos:start="437:45" pos:end="437:49"><literal type="number" pos:start="437:45" pos:end="437:49">0x200</literal></expr></argument>, <argument pos:start="437:52" pos:end="437:68"><expr pos:start="437:52" pos:end="437:68"><name pos:start="437:52" pos:end="437:68">ide_transfer_stop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="439:9" pos:end="439:25"><expr pos:start="439:9" pos:end="439:24"><name pos:start="439:9" pos:end="439:17"><name pos:start="439:9" pos:end="439:9">s</name><operator pos:start="439:10" pos:end="439:11">-&gt;</operator><name pos:start="439:12" pos:end="439:17">status</name></name> <operator pos:start="439:19" pos:end="439:19">=</operator> <literal type="number" pos:start="439:21" pos:end="439:24">0x00</literal></expr>;</expr_stmt> <comment type="block" pos:start="439:27" pos:end="439:56">/* NOTE: READY is _not_ set */</comment>

        <expr_stmt pos:start="441:9" pos:end="441:28"><expr pos:start="441:9" pos:end="441:27"><call pos:start="441:9" pos:end="441:27"><name pos:start="441:9" pos:end="441:19">ide_set_irq</name><argument_list pos:start="441:20" pos:end="441:27">(<argument pos:start="441:21" pos:end="441:26"><expr pos:start="441:21" pos:end="441:26"><name pos:start="441:21" pos:end="441:26"><name pos:start="441:21" pos:end="441:21">s</name><operator pos:start="441:22" pos:end="441:23">-&gt;</operator><name pos:start="441:24" pos:end="441:26">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="443:9" pos:end="443:14">break;</break>

    <case pos:start="445:5" pos:end="445:29">case <expr pos:start="445:10" pos:end="445:28"><name pos:start="445:10" pos:end="445:28">IBM_SENSE_CONDITION</name></expr>:</case>

        <switch pos:start="447:9" pos:end="459:9">switch <condition pos:start="447:16" pos:end="447:27">(<expr pos:start="447:17" pos:end="447:26"><name pos:start="447:17" pos:end="447:26"><name pos:start="447:17" pos:end="447:17">s</name><operator pos:start="447:18" pos:end="447:19">-&gt;</operator><name pos:start="447:20" pos:end="447:26">feature</name></name></expr>)</condition> <block pos:start="447:29" pos:end="459:9">{<block_content pos:start="449:9" pos:end="457:27">

        <case pos:start="449:9" pos:end="449:18">case <expr pos:start="449:14" pos:end="449:17"><literal type="number" pos:start="449:14" pos:end="449:17">0x01</literal></expr>:</case>  <comment type="block" pos:start="449:21" pos:end="449:53">/* sense temperature in device */</comment>

            <expr_stmt pos:start="451:13" pos:end="451:30"><expr pos:start="451:13" pos:end="451:29"><name pos:start="451:13" pos:end="451:22"><name pos:start="451:13" pos:end="451:13">s</name><operator pos:start="451:14" pos:end="451:15">-&gt;</operator><name pos:start="451:16" pos:end="451:22">nsector</name></name> <operator pos:start="451:24" pos:end="451:24">=</operator> <literal type="number" pos:start="451:26" pos:end="451:29">0x50</literal></expr>;</expr_stmt>      <comment type="block" pos:start="451:37" pos:end="451:47">/* +20 C */</comment>

            <break pos:start="453:13" pos:end="453:18">break;</break>

        <default pos:start="455:9" pos:end="455:16">default:</default>

            <goto pos:start="457:13" pos:end="457:27">goto <name pos:start="457:18" pos:end="457:26">abort_cmd</name>;</goto>

        </block_content>}</block></switch>

        <expr_stmt pos:start="461:9" pos:end="461:43"><expr pos:start="461:9" pos:end="461:42"><name pos:start="461:9" pos:end="461:17"><name pos:start="461:9" pos:end="461:9">s</name><operator pos:start="461:10" pos:end="461:11">-&gt;</operator><name pos:start="461:12" pos:end="461:17">status</name></name> <operator pos:start="461:19" pos:end="461:19">=</operator> <name pos:start="461:21" pos:end="461:30">READY_STAT</name> <operator pos:start="461:32" pos:end="461:32">|</operator> <name pos:start="461:34" pos:end="461:42">SEEK_STAT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="463:9" pos:end="463:28"><expr pos:start="463:9" pos:end="463:27"><call pos:start="463:9" pos:end="463:27"><name pos:start="463:9" pos:end="463:19">ide_set_irq</name><argument_list pos:start="463:20" pos:end="463:27">(<argument pos:start="463:21" pos:end="463:26"><expr pos:start="463:21" pos:end="463:26"><name pos:start="463:21" pos:end="463:26"><name pos:start="463:21" pos:end="463:21">s</name><operator pos:start="463:22" pos:end="463:23">-&gt;</operator><name pos:start="463:24" pos:end="463:26">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="465:9" pos:end="465:14">break;</break>



    <case pos:start="469:5" pos:end="469:19">case <expr pos:start="469:10" pos:end="469:18"><name pos:start="469:10" pos:end="469:18">WIN_SMART</name></expr>:</case>

	<if_stmt pos:start="471:9" pos:end="473:31"><if pos:start="471:9" pos:end="473:31">if <condition pos:start="471:12" pos:end="471:47">(<expr pos:start="471:13" pos:end="471:46"><name pos:start="471:13" pos:end="471:19"><name pos:start="471:13" pos:end="471:13">s</name><operator pos:start="471:14" pos:end="471:15">-&gt;</operator><name pos:start="471:16" pos:end="471:19">hcyl</name></name> <operator pos:start="471:21" pos:end="471:22">!=</operator> <literal type="number" pos:start="471:24" pos:end="471:27">0xc2</literal> <operator pos:start="471:29" pos:end="471:30">||</operator> <name pos:start="471:32" pos:end="471:38"><name pos:start="471:32" pos:end="471:32">s</name><operator pos:start="471:33" pos:end="471:34">-&gt;</operator><name pos:start="471:35" pos:end="471:38">lcyl</name></name> <operator pos:start="471:40" pos:end="471:41">!=</operator> <literal type="number" pos:start="471:43" pos:end="471:46">0x4f</literal></expr>)</condition><block type="pseudo" pos:start="473:17" pos:end="473:31"><block_content pos:start="473:17" pos:end="473:31">

		<goto pos:start="473:17" pos:end="473:31">goto <name pos:start="473:22" pos:end="473:30">abort_cmd</name>;</goto></block_content></block></if></if_stmt>

	<if_stmt pos:start="475:9" pos:end="477:31"><if pos:start="475:9" pos:end="477:31">if <condition pos:start="475:12" pos:end="475:60">(<expr pos:start="475:13" pos:end="475:59"><operator pos:start="475:13" pos:end="475:13">!</operator><name pos:start="475:14" pos:end="475:29"><name pos:start="475:14" pos:end="475:14">s</name><operator pos:start="475:15" pos:end="475:16">-&gt;</operator><name pos:start="475:17" pos:end="475:29">smart_enabled</name></name> <operator pos:start="475:31" pos:end="475:32">&amp;&amp;</operator> <name pos:start="475:34" pos:end="475:43"><name pos:start="475:34" pos:end="475:34">s</name><operator pos:start="475:35" pos:end="475:36">-&gt;</operator><name pos:start="475:37" pos:end="475:43">feature</name></name> <operator pos:start="475:45" pos:end="475:46">!=</operator> <name pos:start="475:48" pos:end="475:59">SMART_ENABLE</name></expr>)</condition><block type="pseudo" pos:start="477:17" pos:end="477:31"><block_content pos:start="477:17" pos:end="477:31">

		<goto pos:start="477:17" pos:end="477:31">goto <name pos:start="477:22" pos:end="477:30">abort_cmd</name>;</goto></block_content></block></if></if_stmt>

	<switch pos:start="479:9" pos:end="763:9">switch <condition pos:start="479:16" pos:end="479:27">(<expr pos:start="479:17" pos:end="479:26"><name pos:start="479:17" pos:end="479:26"><name pos:start="479:17" pos:end="479:17">s</name><operator pos:start="479:18" pos:end="479:19">-&gt;</operator><name pos:start="479:20" pos:end="479:26">feature</name></name></expr>)</condition> <block pos:start="479:29" pos:end="763:9">{<block_content pos:start="481:9" pos:end="761:31">

	<case pos:start="481:9" pos:end="481:27">case <expr pos:start="481:14" pos:end="481:26"><name pos:start="481:14" pos:end="481:26">SMART_DISABLE</name></expr>:</case>

		<expr_stmt pos:start="483:17" pos:end="483:37"><expr pos:start="483:17" pos:end="483:36"><name pos:start="483:17" pos:end="483:32"><name pos:start="483:17" pos:end="483:17">s</name><operator pos:start="483:18" pos:end="483:19">-&gt;</operator><name pos:start="483:20" pos:end="483:32">smart_enabled</name></name> <operator pos:start="483:34" pos:end="483:34">=</operator> <literal type="number" pos:start="483:36" pos:end="483:36">0</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="485:17" pos:end="485:51"><expr pos:start="485:17" pos:end="485:50"><name pos:start="485:17" pos:end="485:25"><name pos:start="485:17" pos:end="485:17">s</name><operator pos:start="485:18" pos:end="485:19">-&gt;</operator><name pos:start="485:20" pos:end="485:25">status</name></name> <operator pos:start="485:27" pos:end="485:27">=</operator> <name pos:start="485:29" pos:end="485:38">READY_STAT</name> <operator pos:start="485:40" pos:end="485:40">|</operator> <name pos:start="485:42" pos:end="485:50">SEEK_STAT</name></expr>;</expr_stmt>

		<expr_stmt pos:start="487:17" pos:end="487:36"><expr pos:start="487:17" pos:end="487:35"><call pos:start="487:17" pos:end="487:35"><name pos:start="487:17" pos:end="487:27">ide_set_irq</name><argument_list pos:start="487:28" pos:end="487:35">(<argument pos:start="487:29" pos:end="487:34"><expr pos:start="487:29" pos:end="487:34"><name pos:start="487:29" pos:end="487:34"><name pos:start="487:29" pos:end="487:29">s</name><operator pos:start="487:30" pos:end="487:31">-&gt;</operator><name pos:start="487:32" pos:end="487:34">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<break pos:start="489:17" pos:end="489:22">break;</break>

	<case pos:start="491:9" pos:end="491:26">case <expr pos:start="491:14" pos:end="491:25"><name pos:start="491:14" pos:end="491:25">SMART_ENABLE</name></expr>:</case>

		<expr_stmt pos:start="493:17" pos:end="493:37"><expr pos:start="493:17" pos:end="493:36"><name pos:start="493:17" pos:end="493:32"><name pos:start="493:17" pos:end="493:17">s</name><operator pos:start="493:18" pos:end="493:19">-&gt;</operator><name pos:start="493:20" pos:end="493:32">smart_enabled</name></name> <operator pos:start="493:34" pos:end="493:34">=</operator> <literal type="number" pos:start="493:36" pos:end="493:36">1</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="495:17" pos:end="495:51"><expr pos:start="495:17" pos:end="495:50"><name pos:start="495:17" pos:end="495:25"><name pos:start="495:17" pos:end="495:17">s</name><operator pos:start="495:18" pos:end="495:19">-&gt;</operator><name pos:start="495:20" pos:end="495:25">status</name></name> <operator pos:start="495:27" pos:end="495:27">=</operator> <name pos:start="495:29" pos:end="495:38">READY_STAT</name> <operator pos:start="495:40" pos:end="495:40">|</operator> <name pos:start="495:42" pos:end="495:50">SEEK_STAT</name></expr>;</expr_stmt>

		<expr_stmt pos:start="497:17" pos:end="497:36"><expr pos:start="497:17" pos:end="497:35"><call pos:start="497:17" pos:end="497:35"><name pos:start="497:17" pos:end="497:27">ide_set_irq</name><argument_list pos:start="497:28" pos:end="497:35">(<argument pos:start="497:29" pos:end="497:34"><expr pos:start="497:29" pos:end="497:34"><name pos:start="497:29" pos:end="497:34"><name pos:start="497:29" pos:end="497:29">s</name><operator pos:start="497:30" pos:end="497:31">-&gt;</operator><name pos:start="497:32" pos:end="497:34">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<break pos:start="499:17" pos:end="499:22">break;</break>

	<case pos:start="501:9" pos:end="501:33">case <expr pos:start="501:14" pos:end="501:32"><name pos:start="501:14" pos:end="501:32">SMART_ATTR_AUTOSAVE</name></expr>:</case>

		<switch pos:start="503:17" pos:end="521:17">switch <condition pos:start="503:24" pos:end="503:34">(<expr pos:start="503:25" pos:end="503:33"><name pos:start="503:25" pos:end="503:33"><name pos:start="503:25" pos:end="503:25">s</name><operator pos:start="503:26" pos:end="503:27">-&gt;</operator><name pos:start="503:28" pos:end="503:33">sector</name></name></expr>)</condition> <block pos:start="503:36" pos:end="521:17">{<block_content pos:start="505:17" pos:end="519:31">

		<case pos:start="505:17" pos:end="505:26">case <expr pos:start="505:22" pos:end="505:25"><literal type="number" pos:start="505:22" pos:end="505:25">0x00</literal></expr>:</case>

		<expr_stmt pos:start="507:17" pos:end="507:38"><expr pos:start="507:17" pos:end="507:37"><name pos:start="507:17" pos:end="507:33"><name pos:start="507:17" pos:end="507:17">s</name><operator pos:start="507:18" pos:end="507:19">-&gt;</operator><name pos:start="507:20" pos:end="507:33">smart_autosave</name></name> <operator pos:start="507:35" pos:end="507:35">=</operator> <literal type="number" pos:start="507:37" pos:end="507:37">0</literal></expr>;</expr_stmt>

		<break pos:start="509:17" pos:end="509:22">break;</break>

		<case pos:start="511:17" pos:end="511:26">case <expr pos:start="511:22" pos:end="511:25"><literal type="number" pos:start="511:22" pos:end="511:25">0xf1</literal></expr>:</case>

		<expr_stmt pos:start="513:17" pos:end="513:38"><expr pos:start="513:17" pos:end="513:37"><name pos:start="513:17" pos:end="513:33"><name pos:start="513:17" pos:end="513:17">s</name><operator pos:start="513:18" pos:end="513:19">-&gt;</operator><name pos:start="513:20" pos:end="513:33">smart_autosave</name></name> <operator pos:start="513:35" pos:end="513:35">=</operator> <literal type="number" pos:start="513:37" pos:end="513:37">1</literal></expr>;</expr_stmt>

		<break pos:start="515:17" pos:end="515:22">break;</break>

		<default pos:start="517:17" pos:end="517:24">default:</default>

		<goto pos:start="519:17" pos:end="519:31">goto <name pos:start="519:22" pos:end="519:30">abort_cmd</name>;</goto>

		</block_content>}</block></switch>

		<expr_stmt pos:start="523:17" pos:end="523:51"><expr pos:start="523:17" pos:end="523:50"><name pos:start="523:17" pos:end="523:25"><name pos:start="523:17" pos:end="523:17">s</name><operator pos:start="523:18" pos:end="523:19">-&gt;</operator><name pos:start="523:20" pos:end="523:25">status</name></name> <operator pos:start="523:27" pos:end="523:27">=</operator> <name pos:start="523:29" pos:end="523:38">READY_STAT</name> <operator pos:start="523:40" pos:end="523:40">|</operator> <name pos:start="523:42" pos:end="523:50">SEEK_STAT</name></expr>;</expr_stmt>

		<expr_stmt pos:start="525:17" pos:end="525:36"><expr pos:start="525:17" pos:end="525:35"><call pos:start="525:17" pos:end="525:35"><name pos:start="525:17" pos:end="525:27">ide_set_irq</name><argument_list pos:start="525:28" pos:end="525:35">(<argument pos:start="525:29" pos:end="525:34"><expr pos:start="525:29" pos:end="525:34"><name pos:start="525:29" pos:end="525:34"><name pos:start="525:29" pos:end="525:29">s</name><operator pos:start="525:30" pos:end="525:31">-&gt;</operator><name pos:start="525:32" pos:end="525:34">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<break pos:start="527:17" pos:end="527:22">break;</break>

	<case pos:start="529:9" pos:end="529:26">case <expr pos:start="529:14" pos:end="529:25"><name pos:start="529:14" pos:end="529:25">SMART_STATUS</name></expr>:</case>

		<if_stmt pos:start="531:17" pos:end="543:17"><if pos:start="531:17" pos:end="537:17">if <condition pos:start="531:20" pos:end="531:37">(<expr pos:start="531:21" pos:end="531:36"><operator pos:start="531:21" pos:end="531:21">!</operator><name pos:start="531:22" pos:end="531:36"><name pos:start="531:22" pos:end="531:22">s</name><operator pos:start="531:23" pos:end="531:24">-&gt;</operator><name pos:start="531:25" pos:end="531:36">smart_errors</name></name></expr>)</condition> <block pos:start="531:39" pos:end="537:17">{<block_content pos:start="533:17" pos:end="535:31">

		<expr_stmt pos:start="533:17" pos:end="533:31"><expr pos:start="533:17" pos:end="533:30"><name pos:start="533:17" pos:end="533:23"><name pos:start="533:17" pos:end="533:17">s</name><operator pos:start="533:18" pos:end="533:19">-&gt;</operator><name pos:start="533:20" pos:end="533:23">hcyl</name></name> <operator pos:start="533:25" pos:end="533:25">=</operator> <literal type="number" pos:start="533:27" pos:end="533:30">0xc2</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="535:17" pos:end="535:31"><expr pos:start="535:17" pos:end="535:30"><name pos:start="535:17" pos:end="535:23"><name pos:start="535:17" pos:end="535:17">s</name><operator pos:start="535:18" pos:end="535:19">-&gt;</operator><name pos:start="535:20" pos:end="535:23">lcyl</name></name> <operator pos:start="535:25" pos:end="535:25">=</operator> <literal type="number" pos:start="535:27" pos:end="535:30">0x4f</literal></expr>;</expr_stmt>

		</block_content>}</block></if> <else pos:start="537:19" pos:end="543:17">else <block pos:start="537:24" pos:end="543:17">{<block_content pos:start="539:17" pos:end="541:31">

		<expr_stmt pos:start="539:17" pos:end="539:31"><expr pos:start="539:17" pos:end="539:30"><name pos:start="539:17" pos:end="539:23"><name pos:start="539:17" pos:end="539:17">s</name><operator pos:start="539:18" pos:end="539:19">-&gt;</operator><name pos:start="539:20" pos:end="539:23">hcyl</name></name> <operator pos:start="539:25" pos:end="539:25">=</operator> <literal type="number" pos:start="539:27" pos:end="539:30">0x2c</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="541:17" pos:end="541:31"><expr pos:start="541:17" pos:end="541:30"><name pos:start="541:17" pos:end="541:23"><name pos:start="541:17" pos:end="541:17">s</name><operator pos:start="541:18" pos:end="541:19">-&gt;</operator><name pos:start="541:20" pos:end="541:23">lcyl</name></name> <operator pos:start="541:25" pos:end="541:25">=</operator> <literal type="number" pos:start="541:27" pos:end="541:30">0xf4</literal></expr>;</expr_stmt>

		</block_content>}</block></else></if_stmt>

		<expr_stmt pos:start="545:17" pos:end="545:51"><expr pos:start="545:17" pos:end="545:50"><name pos:start="545:17" pos:end="545:25"><name pos:start="545:17" pos:end="545:17">s</name><operator pos:start="545:18" pos:end="545:19">-&gt;</operator><name pos:start="545:20" pos:end="545:25">status</name></name> <operator pos:start="545:27" pos:end="545:27">=</operator> <name pos:start="545:29" pos:end="545:38">READY_STAT</name> <operator pos:start="545:40" pos:end="545:40">|</operator> <name pos:start="545:42" pos:end="545:50">SEEK_STAT</name></expr>;</expr_stmt>

		<expr_stmt pos:start="547:17" pos:end="547:36"><expr pos:start="547:17" pos:end="547:35"><call pos:start="547:17" pos:end="547:35"><name pos:start="547:17" pos:end="547:27">ide_set_irq</name><argument_list pos:start="547:28" pos:end="547:35">(<argument pos:start="547:29" pos:end="547:34"><expr pos:start="547:29" pos:end="547:34"><name pos:start="547:29" pos:end="547:34"><name pos:start="547:29" pos:end="547:29">s</name><operator pos:start="547:30" pos:end="547:31">-&gt;</operator><name pos:start="547:32" pos:end="547:34">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<break pos:start="549:17" pos:end="549:22">break;</break>

	<case pos:start="551:9" pos:end="551:31">case <expr pos:start="551:14" pos:end="551:30"><name pos:start="551:14" pos:end="551:30">SMART_READ_THRESH</name></expr>:</case>

		<expr_stmt pos:start="553:17" pos:end="553:47"><expr pos:start="553:17" pos:end="553:46"><call pos:start="553:17" pos:end="553:46"><name pos:start="553:17" pos:end="553:22">memset</name><argument_list pos:start="553:23" pos:end="553:46">(<argument pos:start="553:24" pos:end="553:35"><expr pos:start="553:24" pos:end="553:35"><name pos:start="553:24" pos:end="553:35"><name pos:start="553:24" pos:end="553:24">s</name><operator pos:start="553:25" pos:end="553:26">-&gt;</operator><name pos:start="553:27" pos:end="553:35">io_buffer</name></name></expr></argument>, <argument pos:start="553:38" pos:end="553:38"><expr pos:start="553:38" pos:end="553:38"><literal type="number" pos:start="553:38" pos:end="553:38">0</literal></expr></argument>, <argument pos:start="553:41" pos:end="553:45"><expr pos:start="553:41" pos:end="553:45"><literal type="number" pos:start="553:41" pos:end="553:45">0x200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="555:17" pos:end="555:39"><expr pos:start="555:17" pos:end="555:38"><name pos:start="555:17" pos:end="555:31"><name pos:start="555:17" pos:end="555:17">s</name><operator pos:start="555:18" pos:end="555:19">-&gt;</operator><name pos:start="555:20" pos:end="555:28">io_buffer</name><index pos:start="555:29" pos:end="555:31">[<expr pos:start="555:30" pos:end="555:30"><literal type="number" pos:start="555:30" pos:end="555:30">0</literal></expr>]</index></name> <operator pos:start="555:33" pos:end="555:33">=</operator> <literal type="number" pos:start="555:35" pos:end="555:38">0x01</literal></expr>;</expr_stmt> <comment type="block" pos:start="555:41" pos:end="555:66">/* smart struct version */</comment>

		<for pos:start="557:17" pos:end="563:17">for <control pos:start="557:21" pos:end="557:66">(<init pos:start="557:22" pos:end="557:27"><expr pos:start="557:22" pos:end="557:26"><name pos:start="557:22" pos:end="557:22">n</name> <operator pos:start="557:24" pos:end="557:24">=</operator> <literal type="number" pos:start="557:26" pos:end="557:26">0</literal></expr>;</init> <condition pos:start="557:29" pos:end="557:61"><expr pos:start="557:29" pos:end="557:60"><name pos:start="557:29" pos:end="557:29">n</name> <operator pos:start="557:31" pos:end="557:31">&lt;</operator> <call pos:start="557:33" pos:end="557:60"><name pos:start="557:33" pos:end="557:42">ARRAY_SIZE</name><argument_list pos:start="557:43" pos:end="557:60">(<argument pos:start="557:44" pos:end="557:59"><expr pos:start="557:44" pos:end="557:59"><name pos:start="557:44" pos:end="557:59">smart_attributes</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="557:63" pos:end="557:65"><expr pos:start="557:63" pos:end="557:65"><name pos:start="557:63" pos:end="557:63">n</name><operator pos:start="557:64" pos:end="557:65">++</operator></expr></incr>)</control> <block pos:start="557:68" pos:end="563:17">{<block_content pos:start="559:17" pos:end="561:67">

		<expr_stmt pos:start="559:17" pos:end="559:66"><expr pos:start="559:17" pos:end="559:65"><name pos:start="559:17" pos:end="559:40"><name pos:start="559:17" pos:end="559:17">s</name><operator pos:start="559:18" pos:end="559:19">-&gt;</operator><name pos:start="559:20" pos:end="559:28">io_buffer</name><index pos:start="559:29" pos:end="559:40">[<expr pos:start="559:30" pos:end="559:39"><literal type="number" pos:start="559:30" pos:end="559:31">2</literal><operator pos:start="559:31" pos:end="559:31">+</operator><literal type="number" pos:start="559:32" pos:end="559:33">0</literal><operator pos:start="559:33" pos:end="559:33">+</operator><operator pos:start="559:34" pos:end="559:34">(</operator><name pos:start="559:35" pos:end="559:35">n</name><operator pos:start="559:36" pos:end="559:36">*</operator><literal type="number" pos:start="559:37" pos:end="559:38">12</literal><operator pos:start="559:39" pos:end="559:39">)</operator></expr>]</index></name> <operator pos:start="559:42" pos:end="559:42">=</operator> <name pos:start="559:44" pos:end="559:65"><name pos:start="559:44" pos:end="559:59">smart_attributes</name><index pos:start="559:60" pos:end="559:62">[<expr pos:start="559:61" pos:end="559:61"><name pos:start="559:61" pos:end="559:61">n</name></expr>]</index><index pos:start="559:63" pos:end="559:65">[<expr pos:start="559:64" pos:end="559:64"><literal type="number" pos:start="559:64" pos:end="559:64">0</literal></expr>]</index></name></expr>;</expr_stmt>

		<expr_stmt pos:start="561:17" pos:end="561:67"><expr pos:start="561:17" pos:end="561:66"><name pos:start="561:17" pos:end="561:40"><name pos:start="561:17" pos:end="561:17">s</name><operator pos:start="561:18" pos:end="561:19">-&gt;</operator><name pos:start="561:20" pos:end="561:28">io_buffer</name><index pos:start="561:29" pos:end="561:40">[<expr pos:start="561:30" pos:end="561:39"><literal type="number" pos:start="561:30" pos:end="561:31">2</literal><operator pos:start="561:31" pos:end="561:31">+</operator><literal type="number" pos:start="561:32" pos:end="561:33">1</literal><operator pos:start="561:33" pos:end="561:33">+</operator><operator pos:start="561:34" pos:end="561:34">(</operator><name pos:start="561:35" pos:end="561:35">n</name><operator pos:start="561:36" pos:end="561:36">*</operator><literal type="number" pos:start="561:37" pos:end="561:38">12</literal><operator pos:start="561:39" pos:end="561:39">)</operator></expr>]</index></name> <operator pos:start="561:42" pos:end="561:42">=</operator> <name pos:start="561:44" pos:end="561:66"><name pos:start="561:44" pos:end="561:59">smart_attributes</name><index pos:start="561:60" pos:end="561:62">[<expr pos:start="561:61" pos:end="561:61"><name pos:start="561:61" pos:end="561:61">n</name></expr>]</index><index pos:start="561:63" pos:end="561:66">[<expr pos:start="561:64" pos:end="561:65"><literal type="number" pos:start="561:64" pos:end="561:65">11</literal></expr>]</index></name></expr>;</expr_stmt>

		</block_content>}</block></for>

		<for pos:start="565:17" pos:end="567:53">for <control pos:start="565:21" pos:end="565:37">(<init pos:start="565:22" pos:end="565:25"><expr pos:start="565:22" pos:end="565:24"><name pos:start="565:22" pos:end="565:22">n</name><operator pos:start="565:23" pos:end="565:23">=</operator><literal type="number" pos:start="565:24" pos:end="565:24">0</literal></expr>;</init> <condition pos:start="565:27" pos:end="565:32"><expr pos:start="565:27" pos:end="565:31"><name pos:start="565:27" pos:end="565:27">n</name><operator pos:start="565:28" pos:end="565:28">&lt;</operator><literal type="number" pos:start="565:29" pos:end="565:31">511</literal></expr>;</condition> <incr pos:start="565:34" pos:end="565:36"><expr pos:start="565:34" pos:end="565:36"><name pos:start="565:34" pos:end="565:34">n</name><operator pos:start="565:35" pos:end="565:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="567:17" pos:end="567:53"><block_content pos:start="567:17" pos:end="567:53"> <comment type="block" pos:start="565:39" pos:end="565:52">/* checksum */</comment>

		<expr_stmt pos:start="567:17" pos:end="567:53"><expr pos:start="567:17" pos:end="567:52"><name pos:start="567:17" pos:end="567:33"><name pos:start="567:17" pos:end="567:17">s</name><operator pos:start="567:18" pos:end="567:19">-&gt;</operator><name pos:start="567:20" pos:end="567:28">io_buffer</name><index pos:start="567:29" pos:end="567:33">[<expr pos:start="567:30" pos:end="567:32"><literal type="number" pos:start="567:30" pos:end="567:32">511</literal></expr>]</index></name> <operator pos:start="567:35" pos:end="567:36">+=</operator> <name pos:start="567:38" pos:end="567:52"><name pos:start="567:38" pos:end="567:38">s</name><operator pos:start="567:39" pos:end="567:40">-&gt;</operator><name pos:start="567:41" pos:end="567:49">io_buffer</name><index pos:start="567:50" pos:end="567:52">[<expr pos:start="567:51" pos:end="567:51"><name pos:start="567:51" pos:end="567:51">n</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

		<expr_stmt pos:start="569:17" pos:end="569:62"><expr pos:start="569:17" pos:end="569:61"><name pos:start="569:17" pos:end="569:33"><name pos:start="569:17" pos:end="569:17">s</name><operator pos:start="569:18" pos:end="569:19">-&gt;</operator><name pos:start="569:20" pos:end="569:28">io_buffer</name><index pos:start="569:29" pos:end="569:33">[<expr pos:start="569:30" pos:end="569:32"><literal type="number" pos:start="569:30" pos:end="569:32">511</literal></expr>]</index></name> <operator pos:start="569:35" pos:end="569:35">=</operator> <literal type="number" pos:start="569:37" pos:end="569:43">0x100</literal> <operator pos:start="569:43" pos:end="569:43">-</operator> <name pos:start="569:45" pos:end="569:61"><name pos:start="569:45" pos:end="569:45">s</name><operator pos:start="569:46" pos:end="569:47">-&gt;</operator><name pos:start="569:48" pos:end="569:56">io_buffer</name><index pos:start="569:57" pos:end="569:61">[<expr pos:start="569:58" pos:end="569:60"><literal type="number" pos:start="569:58" pos:end="569:60">511</literal></expr>]</index></name></expr>;</expr_stmt>

		<expr_stmt pos:start="571:17" pos:end="571:51"><expr pos:start="571:17" pos:end="571:50"><name pos:start="571:17" pos:end="571:25"><name pos:start="571:17" pos:end="571:17">s</name><operator pos:start="571:18" pos:end="571:19">-&gt;</operator><name pos:start="571:20" pos:end="571:25">status</name></name> <operator pos:start="571:27" pos:end="571:27">=</operator> <name pos:start="571:29" pos:end="571:38">READY_STAT</name> <operator pos:start="571:40" pos:end="571:40">|</operator> <name pos:start="571:42" pos:end="571:50">SEEK_STAT</name></expr>;</expr_stmt>

		<expr_stmt pos:start="573:17" pos:end="573:78"><expr pos:start="573:17" pos:end="573:77"><call pos:start="573:17" pos:end="573:77"><name pos:start="573:17" pos:end="573:34">ide_transfer_start</name><argument_list pos:start="573:35" pos:end="573:77">(<argument pos:start="573:36" pos:end="573:36"><expr pos:start="573:36" pos:end="573:36"><name pos:start="573:36" pos:end="573:36">s</name></expr></argument>, <argument pos:start="573:39" pos:end="573:50"><expr pos:start="573:39" pos:end="573:50"><name pos:start="573:39" pos:end="573:50"><name pos:start="573:39" pos:end="573:39">s</name><operator pos:start="573:40" pos:end="573:41">-&gt;</operator><name pos:start="573:42" pos:end="573:50">io_buffer</name></name></expr></argument>, <argument pos:start="573:53" pos:end="573:57"><expr pos:start="573:53" pos:end="573:57"><literal type="number" pos:start="573:53" pos:end="573:57">0x200</literal></expr></argument>, <argument pos:start="573:60" pos:end="573:76"><expr pos:start="573:60" pos:end="573:76"><name pos:start="573:60" pos:end="573:76">ide_transfer_stop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="575:17" pos:end="575:36"><expr pos:start="575:17" pos:end="575:35"><call pos:start="575:17" pos:end="575:35"><name pos:start="575:17" pos:end="575:27">ide_set_irq</name><argument_list pos:start="575:28" pos:end="575:35">(<argument pos:start="575:29" pos:end="575:34"><expr pos:start="575:29" pos:end="575:34"><name pos:start="575:29" pos:end="575:34"><name pos:start="575:29" pos:end="575:29">s</name><operator pos:start="575:30" pos:end="575:31">-&gt;</operator><name pos:start="575:32" pos:end="575:34">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<break pos:start="577:17" pos:end="577:22">break;</break>

	<case pos:start="579:9" pos:end="579:29">case <expr pos:start="579:14" pos:end="579:28"><name pos:start="579:14" pos:end="579:28">SMART_READ_DATA</name></expr>:</case>

		<expr_stmt pos:start="581:17" pos:end="581:47"><expr pos:start="581:17" pos:end="581:46"><call pos:start="581:17" pos:end="581:46"><name pos:start="581:17" pos:end="581:22">memset</name><argument_list pos:start="581:23" pos:end="581:46">(<argument pos:start="581:24" pos:end="581:35"><expr pos:start="581:24" pos:end="581:35"><name pos:start="581:24" pos:end="581:35"><name pos:start="581:24" pos:end="581:24">s</name><operator pos:start="581:25" pos:end="581:26">-&gt;</operator><name pos:start="581:27" pos:end="581:35">io_buffer</name></name></expr></argument>, <argument pos:start="581:38" pos:end="581:38"><expr pos:start="581:38" pos:end="581:38"><literal type="number" pos:start="581:38" pos:end="581:38">0</literal></expr></argument>, <argument pos:start="581:41" pos:end="581:45"><expr pos:start="581:41" pos:end="581:45"><literal type="number" pos:start="581:41" pos:end="581:45">0x200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="583:17" pos:end="583:39"><expr pos:start="583:17" pos:end="583:38"><name pos:start="583:17" pos:end="583:31"><name pos:start="583:17" pos:end="583:17">s</name><operator pos:start="583:18" pos:end="583:19">-&gt;</operator><name pos:start="583:20" pos:end="583:28">io_buffer</name><index pos:start="583:29" pos:end="583:31">[<expr pos:start="583:30" pos:end="583:30"><literal type="number" pos:start="583:30" pos:end="583:30">0</literal></expr>]</index></name> <operator pos:start="583:33" pos:end="583:33">=</operator> <literal type="number" pos:start="583:35" pos:end="583:38">0x01</literal></expr>;</expr_stmt> <comment type="block" pos:start="583:41" pos:end="583:66">/* smart struct version */</comment>

		<for pos:start="585:17" pos:end="595:17">for <control pos:start="585:21" pos:end="585:66">(<init pos:start="585:22" pos:end="585:27"><expr pos:start="585:22" pos:end="585:26"><name pos:start="585:22" pos:end="585:22">n</name> <operator pos:start="585:24" pos:end="585:24">=</operator> <literal type="number" pos:start="585:26" pos:end="585:26">0</literal></expr>;</init> <condition pos:start="585:29" pos:end="585:61"><expr pos:start="585:29" pos:end="585:60"><name pos:start="585:29" pos:end="585:29">n</name> <operator pos:start="585:31" pos:end="585:31">&lt;</operator> <call pos:start="585:33" pos:end="585:60"><name pos:start="585:33" pos:end="585:42">ARRAY_SIZE</name><argument_list pos:start="585:43" pos:end="585:60">(<argument pos:start="585:44" pos:end="585:59"><expr pos:start="585:44" pos:end="585:59"><name pos:start="585:44" pos:end="585:59">smart_attributes</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="585:63" pos:end="585:65"><expr pos:start="585:63" pos:end="585:65"><name pos:start="585:63" pos:end="585:63">n</name><operator pos:start="585:64" pos:end="585:65">++</operator></expr></incr>)</control> <block pos:start="585:68" pos:end="595:17">{<block_content pos:start="587:21" pos:end="593:21">

		    <decl_stmt pos:start="587:21" pos:end="587:26"><decl pos:start="587:21" pos:end="587:25"><type pos:start="587:21" pos:end="587:23"><name pos:start="587:21" pos:end="587:23">int</name></type> <name pos:start="587:25" pos:end="587:25">i</name></decl>;</decl_stmt>

		    <for pos:start="589:21" pos:end="593:21">for<control pos:start="589:24" pos:end="589:43">(<init pos:start="589:25" pos:end="589:30"><expr pos:start="589:25" pos:end="589:29"><name pos:start="589:25" pos:end="589:25">i</name> <operator pos:start="589:27" pos:end="589:27">=</operator> <literal type="number" pos:start="589:29" pos:end="589:29">0</literal></expr>;</init> <condition pos:start="589:32" pos:end="589:38"><expr pos:start="589:32" pos:end="589:37"><name pos:start="589:32" pos:end="589:32">i</name> <operator pos:start="589:34" pos:end="589:34">&lt;</operator> <literal type="number" pos:start="589:36" pos:end="589:37">11</literal></expr>;</condition> <incr pos:start="589:40" pos:end="589:42"><expr pos:start="589:40" pos:end="589:42"><name pos:start="589:40" pos:end="589:40">i</name><operator pos:start="589:41" pos:end="589:42">++</operator></expr></incr>)</control> <block pos:start="589:45" pos:end="593:21">{<block_content pos:start="591:25" pos:end="591:74">

			<expr_stmt pos:start="591:25" pos:end="591:74"><expr pos:start="591:25" pos:end="591:73"><name pos:start="591:25" pos:end="591:48"><name pos:start="591:25" pos:end="591:25">s</name><operator pos:start="591:26" pos:end="591:27">-&gt;</operator><name pos:start="591:28" pos:end="591:36">io_buffer</name><index pos:start="591:37" pos:end="591:48">[<expr pos:start="591:38" pos:end="591:47"><literal type="number" pos:start="591:38" pos:end="591:38">2</literal><operator pos:start="591:39" pos:end="591:39">+</operator><name pos:start="591:40" pos:end="591:40">i</name><operator pos:start="591:41" pos:end="591:41">+</operator><operator pos:start="591:42" pos:end="591:42">(</operator><name pos:start="591:43" pos:end="591:43">n</name><operator pos:start="591:44" pos:end="591:44">*</operator><literal type="number" pos:start="591:45" pos:end="591:46">12</literal><operator pos:start="591:47" pos:end="591:47">)</operator></expr>]</index></name> <operator pos:start="591:50" pos:end="591:50">=</operator> <name pos:start="591:52" pos:end="591:73"><name pos:start="591:52" pos:end="591:67">smart_attributes</name><index pos:start="591:68" pos:end="591:70">[<expr pos:start="591:69" pos:end="591:69"><name pos:start="591:69" pos:end="591:69">n</name></expr>]</index><index pos:start="591:71" pos:end="591:73">[<expr pos:start="591:72" pos:end="591:72"><name pos:start="591:72" pos:end="591:72">i</name></expr>]</index></name></expr>;</expr_stmt>

		    </block_content>}</block></for>

		</block_content>}</block></for>

		<expr_stmt pos:start="597:17" pos:end="597:73"><expr pos:start="597:17" pos:end="597:72"><name pos:start="597:17" pos:end="597:33"><name pos:start="597:17" pos:end="597:17">s</name><operator pos:start="597:18" pos:end="597:19">-&gt;</operator><name pos:start="597:20" pos:end="597:28">io_buffer</name><index pos:start="597:29" pos:end="597:33">[<expr pos:start="597:30" pos:end="597:32"><literal type="number" pos:start="597:30" pos:end="597:32">362</literal></expr>]</index></name> <operator pos:start="597:35" pos:end="597:35">=</operator> <literal type="number" pos:start="597:37" pos:end="597:40">0x02</literal> <operator pos:start="597:42" pos:end="597:42">|</operator> <operator pos:start="597:44" pos:end="597:44">(</operator><ternary pos:start="597:45" pos:end="597:71"><condition pos:start="597:45" pos:end="597:62"><expr pos:start="597:45" pos:end="597:61"><name pos:start="597:45" pos:end="597:61"><name pos:start="597:45" pos:end="597:45">s</name><operator pos:start="597:46" pos:end="597:47">-&gt;</operator><name pos:start="597:48" pos:end="597:61">smart_autosave</name></name></expr>?</condition><then pos:start="597:63" pos:end="597:66"><expr pos:start="597:63" pos:end="597:66"><literal type="number" pos:start="597:63" pos:end="597:66">0x80</literal></expr></then><else pos:start="597:67" pos:end="597:71">:<expr pos:start="597:68" pos:end="597:71"><literal type="number" pos:start="597:68" pos:end="597:71">0x00</literal></expr></else></ternary><operator pos:start="597:72" pos:end="597:72">)</operator></expr>;</expr_stmt>

		<if_stmt pos:start="599:17" pos:end="613:17"><if pos:start="599:17" pos:end="603:17">if <condition pos:start="599:20" pos:end="599:49">(<expr pos:start="599:21" pos:end="599:48"><name pos:start="599:21" pos:end="599:43"><name pos:start="599:21" pos:end="599:21">s</name><operator pos:start="599:22" pos:end="599:23">-&gt;</operator><name pos:start="599:24" pos:end="599:43">smart_selftest_count</name></name> <operator pos:start="599:45" pos:end="599:46">==</operator> <literal type="number" pos:start="599:48" pos:end="599:48">0</literal></expr>)</condition> <block pos:start="599:51" pos:end="603:17">{<block_content pos:start="601:17" pos:end="601:38">

		<expr_stmt pos:start="601:17" pos:end="601:38"><expr pos:start="601:17" pos:end="601:37"><name pos:start="601:17" pos:end="601:33"><name pos:start="601:17" pos:end="601:17">s</name><operator pos:start="601:18" pos:end="601:19">-&gt;</operator><name pos:start="601:20" pos:end="601:28">io_buffer</name><index pos:start="601:29" pos:end="601:33">[<expr pos:start="601:30" pos:end="601:32"><literal type="number" pos:start="601:30" pos:end="601:32">363</literal></expr>]</index></name> <operator pos:start="601:35" pos:end="601:35">=</operator> <literal type="number" pos:start="601:37" pos:end="601:37">0</literal></expr>;</expr_stmt>

		</block_content>}</block></if> <else pos:start="603:19" pos:end="613:17">else <block pos:start="603:24" pos:end="613:17">{<block_content pos:start="605:17" pos:end="611:47">

		<expr_stmt pos:start="605:17" pos:end="611:47"><expr pos:start="605:17" pos:end="611:46"><name pos:start="605:17" pos:end="605:33"><name pos:start="605:17" pos:end="605:17">s</name><operator pos:start="605:18" pos:end="605:19">-&gt;</operator><name pos:start="605:20" pos:end="605:28">io_buffer</name><index pos:start="605:29" pos:end="605:33">[<expr pos:start="605:30" pos:end="605:32"><literal type="number" pos:start="605:30" pos:end="605:32">363</literal></expr>]</index></name> <operator pos:start="605:35" pos:end="605:35">=</operator>

			<name pos:start="607:25" pos:end="611:46"><name pos:start="607:25" pos:end="607:25">s</name><operator pos:start="607:26" pos:end="607:27">-&gt;</operator><name pos:start="607:28" pos:end="607:46">smart_selftest_data</name><index pos:start="607:47" pos:end="611:46">[<expr pos:start="607:48" pos:end="611:45"><literal type="number" pos:start="607:48" pos:end="607:50">3</literal> <operator pos:start="607:50" pos:end="607:50">+</operator> 

					   <operator pos:start="609:44" pos:end="609:44">(</operator><name pos:start="609:45" pos:end="609:67"><name pos:start="609:45" pos:end="609:45">s</name><operator pos:start="609:46" pos:end="609:47">-&gt;</operator><name pos:start="609:48" pos:end="609:67">smart_selftest_count</name></name> <operator pos:start="609:69" pos:end="609:69">-</operator> <literal type="number" pos:start="609:71" pos:end="609:71">1</literal><operator pos:start="609:72" pos:end="609:72">)</operator> <operator pos:start="609:74" pos:end="609:74">*</operator>

					   <literal type="number" pos:start="611:44" pos:end="611:45">24</literal></expr>]</index></name></expr>;</expr_stmt>

		</block_content>}</block></else></if_stmt>

		<expr_stmt pos:start="615:17" pos:end="615:41"><expr pos:start="615:17" pos:end="615:40"><name pos:start="615:17" pos:end="615:33"><name pos:start="615:17" pos:end="615:17">s</name><operator pos:start="615:18" pos:end="615:19">-&gt;</operator><name pos:start="615:20" pos:end="615:28">io_buffer</name><index pos:start="615:29" pos:end="615:33">[<expr pos:start="615:30" pos:end="615:32"><literal type="number" pos:start="615:30" pos:end="615:32">364</literal></expr>]</index></name> <operator pos:start="615:35" pos:end="615:35">=</operator> <literal type="number" pos:start="615:37" pos:end="615:40">0x20</literal></expr>;</expr_stmt> 

		<expr_stmt pos:start="617:17" pos:end="617:41"><expr pos:start="617:17" pos:end="617:40"><name pos:start="617:17" pos:end="617:33"><name pos:start="617:17" pos:end="617:17">s</name><operator pos:start="617:18" pos:end="617:19">-&gt;</operator><name pos:start="617:20" pos:end="617:28">io_buffer</name><index pos:start="617:29" pos:end="617:33">[<expr pos:start="617:30" pos:end="617:32"><literal type="number" pos:start="617:30" pos:end="617:32">365</literal></expr>]</index></name> <operator pos:start="617:35" pos:end="617:35">=</operator> <literal type="number" pos:start="617:37" pos:end="617:40">0x01</literal></expr>;</expr_stmt> 

		<comment type="block" pos:start="619:17" pos:end="619:74">/* offline data collection capacity: execute + self-test*/</comment>

		<expr_stmt pos:start="621:17" pos:end="621:54"><expr pos:start="621:17" pos:end="621:53"><name pos:start="621:17" pos:end="621:33"><name pos:start="621:17" pos:end="621:17">s</name><operator pos:start="621:18" pos:end="621:19">-&gt;</operator><name pos:start="621:20" pos:end="621:28">io_buffer</name><index pos:start="621:29" pos:end="621:33">[<expr pos:start="621:30" pos:end="621:32"><literal type="number" pos:start="621:30" pos:end="621:32">367</literal></expr>]</index></name> <operator pos:start="621:35" pos:end="621:35">=</operator> <operator pos:start="621:37" pos:end="621:37">(</operator><literal type="number" pos:start="621:38" pos:end="621:38">1</literal><operator pos:start="621:39" pos:end="621:40">&lt;&lt;</operator><literal type="number" pos:start="621:41" pos:end="621:41">4</literal> <operator pos:start="621:43" pos:end="621:43">|</operator> <literal type="number" pos:start="621:45" pos:end="621:45">1</literal><operator pos:start="621:46" pos:end="621:47">&lt;&lt;</operator><literal type="number" pos:start="621:48" pos:end="621:48">3</literal> <operator pos:start="621:50" pos:end="621:50">|</operator> <literal type="number" pos:start="621:52" pos:end="621:52">1</literal><operator pos:start="621:53" pos:end="621:53">)</operator></expr>;</expr_stmt> 

		<expr_stmt pos:start="623:17" pos:end="623:41"><expr pos:start="623:17" pos:end="623:40"><name pos:start="623:17" pos:end="623:33"><name pos:start="623:17" pos:end="623:17">s</name><operator pos:start="623:18" pos:end="623:19">-&gt;</operator><name pos:start="623:20" pos:end="623:28">io_buffer</name><index pos:start="623:29" pos:end="623:33">[<expr pos:start="623:30" pos:end="623:32"><literal type="number" pos:start="623:30" pos:end="623:32">368</literal></expr>]</index></name> <operator pos:start="623:35" pos:end="623:35">=</operator> <literal type="number" pos:start="623:37" pos:end="623:40">0x03</literal></expr>;</expr_stmt> <comment type="block" pos:start="623:43" pos:end="623:68">/* smart capability (1) */</comment>

		<expr_stmt pos:start="625:17" pos:end="625:41"><expr pos:start="625:17" pos:end="625:40"><name pos:start="625:17" pos:end="625:33"><name pos:start="625:17" pos:end="625:17">s</name><operator pos:start="625:18" pos:end="625:19">-&gt;</operator><name pos:start="625:20" pos:end="625:28">io_buffer</name><index pos:start="625:29" pos:end="625:33">[<expr pos:start="625:30" pos:end="625:32"><literal type="number" pos:start="625:30" pos:end="625:32">369</literal></expr>]</index></name> <operator pos:start="625:35" pos:end="625:35">=</operator> <literal type="number" pos:start="625:37" pos:end="625:40">0x00</literal></expr>;</expr_stmt> <comment type="block" pos:start="625:43" pos:end="625:68">/* smart capability (2) */</comment>

		<expr_stmt pos:start="627:17" pos:end="627:41"><expr pos:start="627:17" pos:end="627:40"><name pos:start="627:17" pos:end="627:33"><name pos:start="627:17" pos:end="627:17">s</name><operator pos:start="627:18" pos:end="627:19">-&gt;</operator><name pos:start="627:20" pos:end="627:28">io_buffer</name><index pos:start="627:29" pos:end="627:33">[<expr pos:start="627:30" pos:end="627:32"><literal type="number" pos:start="627:30" pos:end="627:32">370</literal></expr>]</index></name> <operator pos:start="627:35" pos:end="627:35">=</operator> <literal type="number" pos:start="627:37" pos:end="627:40">0x01</literal></expr>;</expr_stmt> <comment type="block" pos:start="627:43" pos:end="627:71">/* error logging supported */</comment>

		<expr_stmt pos:start="629:17" pos:end="629:41"><expr pos:start="629:17" pos:end="629:40"><name pos:start="629:17" pos:end="629:33"><name pos:start="629:17" pos:end="629:17">s</name><operator pos:start="629:18" pos:end="629:19">-&gt;</operator><name pos:start="629:20" pos:end="629:28">io_buffer</name><index pos:start="629:29" pos:end="629:33">[<expr pos:start="629:30" pos:end="629:32"><literal type="number" pos:start="629:30" pos:end="629:32">372</literal></expr>]</index></name> <operator pos:start="629:35" pos:end="629:35">=</operator> <literal type="number" pos:start="629:37" pos:end="629:40">0x02</literal></expr>;</expr_stmt> <comment type="block" pos:start="629:43" pos:end="629:75">/* minutes for poll short test */</comment>

		<expr_stmt pos:start="631:17" pos:end="631:41"><expr pos:start="631:17" pos:end="631:40"><name pos:start="631:17" pos:end="631:33"><name pos:start="631:17" pos:end="631:17">s</name><operator pos:start="631:18" pos:end="631:19">-&gt;</operator><name pos:start="631:20" pos:end="631:28">io_buffer</name><index pos:start="631:29" pos:end="631:33">[<expr pos:start="631:30" pos:end="631:32"><literal type="number" pos:start="631:30" pos:end="631:32">373</literal></expr>]</index></name> <operator pos:start="631:35" pos:end="631:35">=</operator> <literal type="number" pos:start="631:37" pos:end="631:40">0x36</literal></expr>;</expr_stmt> <comment type="block" pos:start="631:43" pos:end="631:73">/* minutes for poll ext test */</comment>

		<expr_stmt pos:start="633:17" pos:end="633:41"><expr pos:start="633:17" pos:end="633:40"><name pos:start="633:17" pos:end="633:33"><name pos:start="633:17" pos:end="633:17">s</name><operator pos:start="633:18" pos:end="633:19">-&gt;</operator><name pos:start="633:20" pos:end="633:28">io_buffer</name><index pos:start="633:29" pos:end="633:33">[<expr pos:start="633:30" pos:end="633:32"><literal type="number" pos:start="633:30" pos:end="633:32">374</literal></expr>]</index></name> <operator pos:start="633:35" pos:end="633:35">=</operator> <literal type="number" pos:start="633:37" pos:end="633:40">0x01</literal></expr>;</expr_stmt> <comment type="block" pos:start="633:43" pos:end="633:75">/* minutes for poll conveyance */</comment>



		<for pos:start="637:17" pos:end="639:53">for <control pos:start="637:21" pos:end="637:37">(<init pos:start="637:22" pos:end="637:25"><expr pos:start="637:22" pos:end="637:24"><name pos:start="637:22" pos:end="637:22">n</name><operator pos:start="637:23" pos:end="637:23">=</operator><literal type="number" pos:start="637:24" pos:end="637:24">0</literal></expr>;</init> <condition pos:start="637:27" pos:end="637:32"><expr pos:start="637:27" pos:end="637:31"><name pos:start="637:27" pos:end="637:27">n</name><operator pos:start="637:28" pos:end="637:28">&lt;</operator><literal type="number" pos:start="637:29" pos:end="637:31">511</literal></expr>;</condition> <incr pos:start="637:34" pos:end="637:36"><expr pos:start="637:34" pos:end="637:36"><name pos:start="637:34" pos:end="637:34">n</name><operator pos:start="637:35" pos:end="637:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="639:17" pos:end="639:53"><block_content pos:start="639:17" pos:end="639:53"> 

		<expr_stmt pos:start="639:17" pos:end="639:53"><expr pos:start="639:17" pos:end="639:52"><name pos:start="639:17" pos:end="639:33"><name pos:start="639:17" pos:end="639:17">s</name><operator pos:start="639:18" pos:end="639:19">-&gt;</operator><name pos:start="639:20" pos:end="639:28">io_buffer</name><index pos:start="639:29" pos:end="639:33">[<expr pos:start="639:30" pos:end="639:32"><literal type="number" pos:start="639:30" pos:end="639:32">511</literal></expr>]</index></name> <operator pos:start="639:35" pos:end="639:36">+=</operator> <name pos:start="639:38" pos:end="639:52"><name pos:start="639:38" pos:end="639:38">s</name><operator pos:start="639:39" pos:end="639:40">-&gt;</operator><name pos:start="639:41" pos:end="639:49">io_buffer</name><index pos:start="639:50" pos:end="639:52">[<expr pos:start="639:51" pos:end="639:51"><name pos:start="639:51" pos:end="639:51">n</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

		<expr_stmt pos:start="641:17" pos:end="641:62"><expr pos:start="641:17" pos:end="641:61"><name pos:start="641:17" pos:end="641:33"><name pos:start="641:17" pos:end="641:17">s</name><operator pos:start="641:18" pos:end="641:19">-&gt;</operator><name pos:start="641:20" pos:end="641:28">io_buffer</name><index pos:start="641:29" pos:end="641:33">[<expr pos:start="641:30" pos:end="641:32"><literal type="number" pos:start="641:30" pos:end="641:32">511</literal></expr>]</index></name> <operator pos:start="641:35" pos:end="641:35">=</operator> <literal type="number" pos:start="641:37" pos:end="641:43">0x100</literal> <operator pos:start="641:43" pos:end="641:43">-</operator> <name pos:start="641:45" pos:end="641:61"><name pos:start="641:45" pos:end="641:45">s</name><operator pos:start="641:46" pos:end="641:47">-&gt;</operator><name pos:start="641:48" pos:end="641:56">io_buffer</name><index pos:start="641:57" pos:end="641:61">[<expr pos:start="641:58" pos:end="641:60"><literal type="number" pos:start="641:58" pos:end="641:60">511</literal></expr>]</index></name></expr>;</expr_stmt>

		<expr_stmt pos:start="643:17" pos:end="643:51"><expr pos:start="643:17" pos:end="643:50"><name pos:start="643:17" pos:end="643:25"><name pos:start="643:17" pos:end="643:17">s</name><operator pos:start="643:18" pos:end="643:19">-&gt;</operator><name pos:start="643:20" pos:end="643:25">status</name></name> <operator pos:start="643:27" pos:end="643:27">=</operator> <name pos:start="643:29" pos:end="643:38">READY_STAT</name> <operator pos:start="643:40" pos:end="643:40">|</operator> <name pos:start="643:42" pos:end="643:50">SEEK_STAT</name></expr>;</expr_stmt>

		<expr_stmt pos:start="645:17" pos:end="645:78"><expr pos:start="645:17" pos:end="645:77"><call pos:start="645:17" pos:end="645:77"><name pos:start="645:17" pos:end="645:34">ide_transfer_start</name><argument_list pos:start="645:35" pos:end="645:77">(<argument pos:start="645:36" pos:end="645:36"><expr pos:start="645:36" pos:end="645:36"><name pos:start="645:36" pos:end="645:36">s</name></expr></argument>, <argument pos:start="645:39" pos:end="645:50"><expr pos:start="645:39" pos:end="645:50"><name pos:start="645:39" pos:end="645:50"><name pos:start="645:39" pos:end="645:39">s</name><operator pos:start="645:40" pos:end="645:41">-&gt;</operator><name pos:start="645:42" pos:end="645:50">io_buffer</name></name></expr></argument>, <argument pos:start="645:53" pos:end="645:57"><expr pos:start="645:53" pos:end="645:57"><literal type="number" pos:start="645:53" pos:end="645:57">0x200</literal></expr></argument>, <argument pos:start="645:60" pos:end="645:76"><expr pos:start="645:60" pos:end="645:76"><name pos:start="645:60" pos:end="645:76">ide_transfer_stop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="647:17" pos:end="647:36"><expr pos:start="647:17" pos:end="647:35"><call pos:start="647:17" pos:end="647:35"><name pos:start="647:17" pos:end="647:27">ide_set_irq</name><argument_list pos:start="647:28" pos:end="647:35">(<argument pos:start="647:29" pos:end="647:34"><expr pos:start="647:29" pos:end="647:34"><name pos:start="647:29" pos:end="647:34"><name pos:start="647:29" pos:end="647:29">s</name><operator pos:start="647:30" pos:end="647:31">-&gt;</operator><name pos:start="647:32" pos:end="647:34">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<break pos:start="649:17" pos:end="649:22">break;</break>

	<case pos:start="651:9" pos:end="651:28">case <expr pos:start="651:14" pos:end="651:27"><name pos:start="651:14" pos:end="651:27">SMART_READ_LOG</name></expr>:</case>

		<switch pos:start="653:17" pos:end="709:17">switch <condition pos:start="653:24" pos:end="653:34">(<expr pos:start="653:25" pos:end="653:33"><name pos:start="653:25" pos:end="653:33"><name pos:start="653:25" pos:end="653:25">s</name><operator pos:start="653:26" pos:end="653:27">-&gt;</operator><name pos:start="653:28" pos:end="653:33">sector</name></name></expr>)</condition> <block pos:start="653:36" pos:end="709:17">{<block_content pos:start="655:17" pos:end="707:31">

		<case pos:start="655:17" pos:end="655:26">case <expr pos:start="655:22" pos:end="655:25"><literal type="number" pos:start="655:22" pos:end="655:25">0x01</literal></expr>:</case> <comment type="block" pos:start="655:28" pos:end="655:56">/* summary smart error log */</comment>

		<expr_stmt pos:start="657:17" pos:end="657:47"><expr pos:start="657:17" pos:end="657:46"><call pos:start="657:17" pos:end="657:46"><name pos:start="657:17" pos:end="657:22">memset</name><argument_list pos:start="657:23" pos:end="657:46">(<argument pos:start="657:24" pos:end="657:35"><expr pos:start="657:24" pos:end="657:35"><name pos:start="657:24" pos:end="657:35"><name pos:start="657:24" pos:end="657:24">s</name><operator pos:start="657:25" pos:end="657:26">-&gt;</operator><name pos:start="657:27" pos:end="657:35">io_buffer</name></name></expr></argument>, <argument pos:start="657:38" pos:end="657:38"><expr pos:start="657:38" pos:end="657:38"><literal type="number" pos:start="657:38" pos:end="657:38">0</literal></expr></argument>, <argument pos:start="657:41" pos:end="657:45"><expr pos:start="657:41" pos:end="657:45"><literal type="number" pos:start="657:41" pos:end="657:45">0x200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="659:17" pos:end="659:39"><expr pos:start="659:17" pos:end="659:38"><name pos:start="659:17" pos:end="659:31"><name pos:start="659:17" pos:end="659:17">s</name><operator pos:start="659:18" pos:end="659:19">-&gt;</operator><name pos:start="659:20" pos:end="659:28">io_buffer</name><index pos:start="659:29" pos:end="659:31">[<expr pos:start="659:30" pos:end="659:30"><literal type="number" pos:start="659:30" pos:end="659:30">0</literal></expr>]</index></name> <operator pos:start="659:33" pos:end="659:33">=</operator> <literal type="number" pos:start="659:35" pos:end="659:38">0x01</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="661:17" pos:end="661:39"><expr pos:start="661:17" pos:end="661:38"><name pos:start="661:17" pos:end="661:31"><name pos:start="661:17" pos:end="661:17">s</name><operator pos:start="661:18" pos:end="661:19">-&gt;</operator><name pos:start="661:20" pos:end="661:28">io_buffer</name><index pos:start="661:29" pos:end="661:31">[<expr pos:start="661:30" pos:end="661:30"><literal type="number" pos:start="661:30" pos:end="661:30">1</literal></expr>]</index></name> <operator pos:start="661:33" pos:end="661:33">=</operator> <literal type="number" pos:start="661:35" pos:end="661:38">0x00</literal></expr>;</expr_stmt> <comment type="block" pos:start="661:41" pos:end="661:62">/* no error entries */</comment>

		<expr_stmt pos:start="663:17" pos:end="663:59"><expr pos:start="663:17" pos:end="663:58"><name pos:start="663:17" pos:end="663:33"><name pos:start="663:17" pos:end="663:17">s</name><operator pos:start="663:18" pos:end="663:19">-&gt;</operator><name pos:start="663:20" pos:end="663:28">io_buffer</name><index pos:start="663:29" pos:end="663:33">[<expr pos:start="663:30" pos:end="663:32"><literal type="number" pos:start="663:30" pos:end="663:32">452</literal></expr>]</index></name> <operator pos:start="663:35" pos:end="663:35">=</operator> <name pos:start="663:37" pos:end="663:51"><name pos:start="663:37" pos:end="663:37">s</name><operator pos:start="663:38" pos:end="663:39">-&gt;</operator><name pos:start="663:40" pos:end="663:51">smart_errors</name></name> <operator pos:start="663:53" pos:end="663:53">&amp;</operator> <literal type="number" pos:start="663:55" pos:end="663:58">0xff</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="665:17" pos:end="665:68"><expr pos:start="665:17" pos:end="665:67"><name pos:start="665:17" pos:end="665:33"><name pos:start="665:17" pos:end="665:17">s</name><operator pos:start="665:18" pos:end="665:19">-&gt;</operator><name pos:start="665:20" pos:end="665:28">io_buffer</name><index pos:start="665:29" pos:end="665:33">[<expr pos:start="665:30" pos:end="665:32"><literal type="number" pos:start="665:30" pos:end="665:32">453</literal></expr>]</index></name> <operator pos:start="665:35" pos:end="665:35">=</operator> <operator pos:start="665:37" pos:end="665:37">(</operator><name pos:start="665:38" pos:end="665:52"><name pos:start="665:38" pos:end="665:38">s</name><operator pos:start="665:39" pos:end="665:40">-&gt;</operator><name pos:start="665:41" pos:end="665:52">smart_errors</name></name> <operator pos:start="665:54" pos:end="665:54">&amp;</operator> <literal type="number" pos:start="665:56" pos:end="665:61">0xff00</literal><operator pos:start="665:62" pos:end="665:62">)</operator> <operator pos:start="665:64" pos:end="665:65">&gt;&gt;</operator> <literal type="number" pos:start="665:67" pos:end="665:67">8</literal></expr>;</expr_stmt>



		<for pos:start="669:17" pos:end="671:61">for <control pos:start="669:21" pos:end="669:37">(<init pos:start="669:22" pos:end="669:25"><expr pos:start="669:22" pos:end="669:24"><name pos:start="669:22" pos:end="669:22">n</name><operator pos:start="669:23" pos:end="669:23">=</operator><literal type="number" pos:start="669:24" pos:end="669:24">0</literal></expr>;</init> <condition pos:start="669:27" pos:end="669:32"><expr pos:start="669:27" pos:end="669:31"><name pos:start="669:27" pos:end="669:27">n</name><operator pos:start="669:28" pos:end="669:28">&lt;</operator><literal type="number" pos:start="669:29" pos:end="669:31">511</literal></expr>;</condition> <incr pos:start="669:34" pos:end="669:36"><expr pos:start="669:34" pos:end="669:36"><name pos:start="669:34" pos:end="669:34">n</name><operator pos:start="669:35" pos:end="669:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="671:25" pos:end="671:61"><block_content pos:start="671:25" pos:end="671:61">

			<expr_stmt pos:start="671:25" pos:end="671:61"><expr pos:start="671:25" pos:end="671:60"><name pos:start="671:25" pos:end="671:41"><name pos:start="671:25" pos:end="671:25">s</name><operator pos:start="671:26" pos:end="671:27">-&gt;</operator><name pos:start="671:28" pos:end="671:36">io_buffer</name><index pos:start="671:37" pos:end="671:41">[<expr pos:start="671:38" pos:end="671:40"><literal type="number" pos:start="671:38" pos:end="671:40">511</literal></expr>]</index></name> <operator pos:start="671:43" pos:end="671:44">+=</operator> <name pos:start="671:46" pos:end="671:60"><name pos:start="671:46" pos:end="671:46">s</name><operator pos:start="671:47" pos:end="671:48">-&gt;</operator><name pos:start="671:49" pos:end="671:57">io_buffer</name><index pos:start="671:58" pos:end="671:60">[<expr pos:start="671:59" pos:end="671:59"><name pos:start="671:59" pos:end="671:59">n</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

		<expr_stmt pos:start="673:17" pos:end="673:62"><expr pos:start="673:17" pos:end="673:61"><name pos:start="673:17" pos:end="673:33"><name pos:start="673:17" pos:end="673:17">s</name><operator pos:start="673:18" pos:end="673:19">-&gt;</operator><name pos:start="673:20" pos:end="673:28">io_buffer</name><index pos:start="673:29" pos:end="673:33">[<expr pos:start="673:30" pos:end="673:32"><literal type="number" pos:start="673:30" pos:end="673:32">511</literal></expr>]</index></name> <operator pos:start="673:35" pos:end="673:35">=</operator> <literal type="number" pos:start="673:37" pos:end="673:43">0x100</literal> <operator pos:start="673:43" pos:end="673:43">-</operator> <name pos:start="673:45" pos:end="673:61"><name pos:start="673:45" pos:end="673:45">s</name><operator pos:start="673:46" pos:end="673:47">-&gt;</operator><name pos:start="673:48" pos:end="673:56">io_buffer</name><index pos:start="673:57" pos:end="673:61">[<expr pos:start="673:58" pos:end="673:60"><literal type="number" pos:start="673:58" pos:end="673:60">511</literal></expr>]</index></name></expr>;</expr_stmt>

		<break pos:start="675:17" pos:end="675:22">break;</break>

		<case pos:start="677:17" pos:end="677:26">case <expr pos:start="677:22" pos:end="677:25"><literal type="number" pos:start="677:22" pos:end="677:25">0x06</literal></expr>:</case> <comment type="block" pos:start="677:28" pos:end="677:52">/* smart self test log */</comment>

		<expr_stmt pos:start="679:17" pos:end="679:47"><expr pos:start="679:17" pos:end="679:46"><call pos:start="679:17" pos:end="679:46"><name pos:start="679:17" pos:end="679:22">memset</name><argument_list pos:start="679:23" pos:end="679:46">(<argument pos:start="679:24" pos:end="679:35"><expr pos:start="679:24" pos:end="679:35"><name pos:start="679:24" pos:end="679:35"><name pos:start="679:24" pos:end="679:24">s</name><operator pos:start="679:25" pos:end="679:26">-&gt;</operator><name pos:start="679:27" pos:end="679:35">io_buffer</name></name></expr></argument>, <argument pos:start="679:38" pos:end="679:38"><expr pos:start="679:38" pos:end="679:38"><literal type="number" pos:start="679:38" pos:end="679:38">0</literal></expr></argument>, <argument pos:start="679:41" pos:end="679:45"><expr pos:start="679:41" pos:end="679:45"><literal type="number" pos:start="679:41" pos:end="679:45">0x200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="681:17" pos:end="681:39"><expr pos:start="681:17" pos:end="681:38"><name pos:start="681:17" pos:end="681:31"><name pos:start="681:17" pos:end="681:17">s</name><operator pos:start="681:18" pos:end="681:19">-&gt;</operator><name pos:start="681:20" pos:end="681:28">io_buffer</name><index pos:start="681:29" pos:end="681:31">[<expr pos:start="681:30" pos:end="681:30"><literal type="number" pos:start="681:30" pos:end="681:30">0</literal></expr>]</index></name> <operator pos:start="681:33" pos:end="681:33">=</operator> <literal type="number" pos:start="681:35" pos:end="681:38">0x01</literal></expr>;</expr_stmt>

		<if_stmt pos:start="683:17" pos:end="695:17"><if pos:start="683:17" pos:end="687:17">if <condition pos:start="683:20" pos:end="683:49">(<expr pos:start="683:21" pos:end="683:48"><name pos:start="683:21" pos:end="683:43"><name pos:start="683:21" pos:end="683:21">s</name><operator pos:start="683:22" pos:end="683:23">-&gt;</operator><name pos:start="683:24" pos:end="683:43">smart_selftest_count</name></name> <operator pos:start="683:45" pos:end="683:46">==</operator> <literal type="number" pos:start="683:48" pos:end="683:48">0</literal></expr>)</condition> <block pos:start="683:51" pos:end="687:17">{<block_content pos:start="685:25" pos:end="685:46">

			<expr_stmt pos:start="685:25" pos:end="685:46"><expr pos:start="685:25" pos:end="685:45"><name pos:start="685:25" pos:end="685:41"><name pos:start="685:25" pos:end="685:25">s</name><operator pos:start="685:26" pos:end="685:27">-&gt;</operator><name pos:start="685:28" pos:end="685:36">io_buffer</name><index pos:start="685:37" pos:end="685:41">[<expr pos:start="685:38" pos:end="685:40"><literal type="number" pos:start="685:38" pos:end="685:40">508</literal></expr>]</index></name> <operator pos:start="685:43" pos:end="685:43">=</operator> <literal type="number" pos:start="685:45" pos:end="685:45">0</literal></expr>;</expr_stmt>

		</block_content>}</block></if> <else pos:start="687:19" pos:end="695:17">else <block pos:start="687:24" pos:end="695:17">{<block_content pos:start="689:25" pos:end="693:68">

			<expr_stmt pos:start="689:25" pos:end="689:68"><expr pos:start="689:25" pos:end="689:67"><name pos:start="689:25" pos:end="689:41"><name pos:start="689:25" pos:end="689:25">s</name><operator pos:start="689:26" pos:end="689:27">-&gt;</operator><name pos:start="689:28" pos:end="689:36">io_buffer</name><index pos:start="689:37" pos:end="689:41">[<expr pos:start="689:38" pos:end="689:40"><literal type="number" pos:start="689:38" pos:end="689:40">508</literal></expr>]</index></name> <operator pos:start="689:43" pos:end="689:43">=</operator> <name pos:start="689:45" pos:end="689:67"><name pos:start="689:45" pos:end="689:45">s</name><operator pos:start="689:46" pos:end="689:47">-&gt;</operator><name pos:start="689:48" pos:end="689:67">smart_selftest_count</name></name></expr>;</expr_stmt>

			<for pos:start="691:25" pos:end="693:68">for <control pos:start="691:29" pos:end="691:45">(<init pos:start="691:30" pos:end="691:33"><expr pos:start="691:30" pos:end="691:32"><name pos:start="691:30" pos:end="691:30">n</name><operator pos:start="691:31" pos:end="691:31">=</operator><literal type="number" pos:start="691:32" pos:end="691:32">2</literal></expr>;</init> <condition pos:start="691:35" pos:end="691:40"><expr pos:start="691:35" pos:end="691:39"><name pos:start="691:35" pos:end="691:35">n</name><operator pos:start="691:36" pos:end="691:36">&lt;</operator><literal type="number" pos:start="691:37" pos:end="691:39">506</literal></expr>;</condition> <incr pos:start="691:42" pos:end="691:44"><expr pos:start="691:42" pos:end="691:44"><name pos:start="691:42" pos:end="691:42">n</name><operator pos:start="691:43" pos:end="691:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="693:25" pos:end="693:68"><block_content pos:start="693:25" pos:end="693:68"> 

			<expr_stmt pos:start="693:25" pos:end="693:68"><expr pos:start="693:25" pos:end="693:67"><name pos:start="693:25" pos:end="693:39"><name pos:start="693:25" pos:end="693:25">s</name><operator pos:start="693:26" pos:end="693:27">-&gt;</operator><name pos:start="693:28" pos:end="693:36">io_buffer</name><index pos:start="693:37" pos:end="693:39">[<expr pos:start="693:38" pos:end="693:38"><name pos:start="693:38" pos:end="693:38">n</name></expr>]</index></name> <operator pos:start="693:41" pos:end="693:41">=</operator> <name pos:start="693:43" pos:end="693:67"><name pos:start="693:43" pos:end="693:43">s</name><operator pos:start="693:44" pos:end="693:45">-&gt;</operator><name pos:start="693:46" pos:end="693:64">smart_selftest_data</name><index pos:start="693:65" pos:end="693:67">[<expr pos:start="693:66" pos:end="693:66"><name pos:start="693:66" pos:end="693:66">n</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

		</block_content>}</block></else></if_stmt>

		<for pos:start="697:17" pos:end="699:61">for <control pos:start="697:21" pos:end="697:37">(<init pos:start="697:22" pos:end="697:25"><expr pos:start="697:22" pos:end="697:24"><name pos:start="697:22" pos:end="697:22">n</name><operator pos:start="697:23" pos:end="697:23">=</operator><literal type="number" pos:start="697:24" pos:end="697:24">0</literal></expr>;</init> <condition pos:start="697:27" pos:end="697:32"><expr pos:start="697:27" pos:end="697:31"><name pos:start="697:27" pos:end="697:27">n</name><operator pos:start="697:28" pos:end="697:28">&lt;</operator><literal type="number" pos:start="697:29" pos:end="697:31">511</literal></expr>;</condition> <incr pos:start="697:34" pos:end="697:36"><expr pos:start="697:34" pos:end="697:36"><name pos:start="697:34" pos:end="697:34">n</name><operator pos:start="697:35" pos:end="697:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="699:25" pos:end="699:61"><block_content pos:start="699:25" pos:end="699:61">

			<expr_stmt pos:start="699:25" pos:end="699:61"><expr pos:start="699:25" pos:end="699:60"><name pos:start="699:25" pos:end="699:41"><name pos:start="699:25" pos:end="699:25">s</name><operator pos:start="699:26" pos:end="699:27">-&gt;</operator><name pos:start="699:28" pos:end="699:36">io_buffer</name><index pos:start="699:37" pos:end="699:41">[<expr pos:start="699:38" pos:end="699:40"><literal type="number" pos:start="699:38" pos:end="699:40">511</literal></expr>]</index></name> <operator pos:start="699:43" pos:end="699:44">+=</operator> <name pos:start="699:46" pos:end="699:60"><name pos:start="699:46" pos:end="699:46">s</name><operator pos:start="699:47" pos:end="699:48">-&gt;</operator><name pos:start="699:49" pos:end="699:57">io_buffer</name><index pos:start="699:58" pos:end="699:60">[<expr pos:start="699:59" pos:end="699:59"><name pos:start="699:59" pos:end="699:59">n</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

		<expr_stmt pos:start="701:17" pos:end="701:62"><expr pos:start="701:17" pos:end="701:61"><name pos:start="701:17" pos:end="701:33"><name pos:start="701:17" pos:end="701:17">s</name><operator pos:start="701:18" pos:end="701:19">-&gt;</operator><name pos:start="701:20" pos:end="701:28">io_buffer</name><index pos:start="701:29" pos:end="701:33">[<expr pos:start="701:30" pos:end="701:32"><literal type="number" pos:start="701:30" pos:end="701:32">511</literal></expr>]</index></name> <operator pos:start="701:35" pos:end="701:35">=</operator> <literal type="number" pos:start="701:37" pos:end="701:43">0x100</literal> <operator pos:start="701:43" pos:end="701:43">-</operator> <name pos:start="701:45" pos:end="701:61"><name pos:start="701:45" pos:end="701:45">s</name><operator pos:start="701:46" pos:end="701:47">-&gt;</operator><name pos:start="701:48" pos:end="701:56">io_buffer</name><index pos:start="701:57" pos:end="701:61">[<expr pos:start="701:58" pos:end="701:60"><literal type="number" pos:start="701:58" pos:end="701:60">511</literal></expr>]</index></name></expr>;</expr_stmt>

		<break pos:start="703:17" pos:end="703:22">break;</break>

		<default pos:start="705:17" pos:end="705:24">default:</default>

		<goto pos:start="707:17" pos:end="707:31">goto <name pos:start="707:22" pos:end="707:30">abort_cmd</name>;</goto>

		</block_content>}</block></switch>

		<expr_stmt pos:start="711:17" pos:end="711:51"><expr pos:start="711:17" pos:end="711:50"><name pos:start="711:17" pos:end="711:25"><name pos:start="711:17" pos:end="711:17">s</name><operator pos:start="711:18" pos:end="711:19">-&gt;</operator><name pos:start="711:20" pos:end="711:25">status</name></name> <operator pos:start="711:27" pos:end="711:27">=</operator> <name pos:start="711:29" pos:end="711:38">READY_STAT</name> <operator pos:start="711:40" pos:end="711:40">|</operator> <name pos:start="711:42" pos:end="711:50">SEEK_STAT</name></expr>;</expr_stmt>

		<expr_stmt pos:start="713:17" pos:end="713:78"><expr pos:start="713:17" pos:end="713:77"><call pos:start="713:17" pos:end="713:77"><name pos:start="713:17" pos:end="713:34">ide_transfer_start</name><argument_list pos:start="713:35" pos:end="713:77">(<argument pos:start="713:36" pos:end="713:36"><expr pos:start="713:36" pos:end="713:36"><name pos:start="713:36" pos:end="713:36">s</name></expr></argument>, <argument pos:start="713:39" pos:end="713:50"><expr pos:start="713:39" pos:end="713:50"><name pos:start="713:39" pos:end="713:50"><name pos:start="713:39" pos:end="713:39">s</name><operator pos:start="713:40" pos:end="713:41">-&gt;</operator><name pos:start="713:42" pos:end="713:50">io_buffer</name></name></expr></argument>, <argument pos:start="713:53" pos:end="713:57"><expr pos:start="713:53" pos:end="713:57"><literal type="number" pos:start="713:53" pos:end="713:57">0x200</literal></expr></argument>, <argument pos:start="713:60" pos:end="713:76"><expr pos:start="713:60" pos:end="713:76"><name pos:start="713:60" pos:end="713:76">ide_transfer_stop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="715:17" pos:end="715:36"><expr pos:start="715:17" pos:end="715:35"><call pos:start="715:17" pos:end="715:35"><name pos:start="715:17" pos:end="715:27">ide_set_irq</name><argument_list pos:start="715:28" pos:end="715:35">(<argument pos:start="715:29" pos:end="715:34"><expr pos:start="715:29" pos:end="715:34"><name pos:start="715:29" pos:end="715:34"><name pos:start="715:29" pos:end="715:29">s</name><operator pos:start="715:30" pos:end="715:31">-&gt;</operator><name pos:start="715:32" pos:end="715:34">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<break pos:start="717:17" pos:end="717:22">break;</break>

	<case pos:start="719:9" pos:end="719:35">case <expr pos:start="719:14" pos:end="719:34"><name pos:start="719:14" pos:end="719:34">SMART_EXECUTE_OFFLINE</name></expr>:</case>

		<switch pos:start="721:17" pos:end="755:17">switch <condition pos:start="721:24" pos:end="721:34">(<expr pos:start="721:25" pos:end="721:33"><name pos:start="721:25" pos:end="721:33"><name pos:start="721:25" pos:end="721:25">s</name><operator pos:start="721:26" pos:end="721:27">-&gt;</operator><name pos:start="721:28" pos:end="721:33">sector</name></name></expr>)</condition> <block pos:start="721:36" pos:end="755:17">{<block_content pos:start="723:17" pos:end="753:31">

		<case pos:start="723:17" pos:end="723:23">case <expr pos:start="723:22" pos:end="723:22"><literal type="number" pos:start="723:22" pos:end="723:22">0</literal></expr>:</case> <comment type="block" pos:start="723:25" pos:end="723:46">/* off-line routine */</comment>

		<case pos:start="725:17" pos:end="725:23">case <expr pos:start="725:22" pos:end="725:22"><literal type="number" pos:start="725:22" pos:end="725:22">1</literal></expr>:</case> <comment type="block" pos:start="725:25" pos:end="725:45">/* short self test */</comment>

		<case pos:start="727:17" pos:end="727:23">case <expr pos:start="727:22" pos:end="727:22"><literal type="number" pos:start="727:22" pos:end="727:22">2</literal></expr>:</case> <comment type="block" pos:start="727:25" pos:end="727:48">/* extended self test */</comment>

		<expr_stmt pos:start="729:17" pos:end="729:42"><expr pos:start="729:17" pos:end="729:41"><name pos:start="729:17" pos:end="729:39"><name pos:start="729:17" pos:end="729:17">s</name><operator pos:start="729:18" pos:end="729:19">-&gt;</operator><name pos:start="729:20" pos:end="729:39">smart_selftest_count</name></name><operator pos:start="729:40" pos:end="729:41">++</operator></expr>;</expr_stmt>

		<if_stmt pos:start="731:17" pos:end="733:52"><if pos:start="731:17" pos:end="733:52">if<condition pos:start="731:19" pos:end="731:48">(<expr pos:start="731:20" pos:end="731:47"><name pos:start="731:20" pos:end="731:42"><name pos:start="731:20" pos:end="731:20">s</name><operator pos:start="731:21" pos:end="731:22">-&gt;</operator><name pos:start="731:23" pos:end="731:42">smart_selftest_count</name></name> <operator pos:start="731:44" pos:end="731:44">&gt;</operator> <literal type="number" pos:start="731:46" pos:end="731:47">21</literal></expr>)</condition><block type="pseudo" pos:start="733:25" pos:end="733:52"><block_content pos:start="733:25" pos:end="733:52">

			<expr_stmt pos:start="733:25" pos:end="733:52"><expr pos:start="733:25" pos:end="733:51"><name pos:start="733:25" pos:end="733:47"><name pos:start="733:25" pos:end="733:25">s</name><operator pos:start="733:26" pos:end="733:27">-&gt;</operator><name pos:start="733:28" pos:end="733:47">smart_selftest_count</name></name> <operator pos:start="733:49" pos:end="733:49">=</operator> <literal type="number" pos:start="733:51" pos:end="733:51">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

		<expr_stmt pos:start="735:17" pos:end="735:59"><expr pos:start="735:17" pos:end="735:58"><name pos:start="735:17" pos:end="735:17">n</name> <operator pos:start="735:19" pos:end="735:19">=</operator> <literal type="number" pos:start="735:21" pos:end="735:23">2</literal> <operator pos:start="735:23" pos:end="735:23">+</operator> <operator pos:start="735:25" pos:end="735:25">(</operator><name pos:start="735:26" pos:end="735:48"><name pos:start="735:26" pos:end="735:26">s</name><operator pos:start="735:27" pos:end="735:28">-&gt;</operator><name pos:start="735:29" pos:end="735:48">smart_selftest_count</name></name> <operator pos:start="735:50" pos:end="735:50">-</operator> <literal type="number" pos:start="735:52" pos:end="735:52">1</literal><operator pos:start="735:53" pos:end="735:53">)</operator> <operator pos:start="735:55" pos:end="735:55">*</operator> <literal type="number" pos:start="735:57" pos:end="735:58">24</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="737:17" pos:end="737:54"><expr pos:start="737:17" pos:end="737:53"><name pos:start="737:17" pos:end="737:41"><name pos:start="737:17" pos:end="737:17">s</name><operator pos:start="737:18" pos:end="737:19">-&gt;</operator><name pos:start="737:20" pos:end="737:38">smart_selftest_data</name><index pos:start="737:39" pos:end="737:41">[<expr pos:start="737:40" pos:end="737:40"><name pos:start="737:40" pos:end="737:40">n</name></expr>]</index></name> <operator pos:start="737:43" pos:end="737:43">=</operator> <name pos:start="737:45" pos:end="737:53"><name pos:start="737:45" pos:end="737:45">s</name><operator pos:start="737:46" pos:end="737:47">-&gt;</operator><name pos:start="737:48" pos:end="737:53">sector</name></name></expr>;</expr_stmt>

		<expr_stmt pos:start="739:17" pos:end="739:51"><expr pos:start="739:17" pos:end="739:50"><name pos:start="739:17" pos:end="739:43"><name pos:start="739:17" pos:end="739:17">s</name><operator pos:start="739:18" pos:end="739:19">-&gt;</operator><name pos:start="739:20" pos:end="739:38">smart_selftest_data</name><index pos:start="739:39" pos:end="739:43">[<expr pos:start="739:40" pos:end="739:42"><name pos:start="739:40" pos:end="739:40">n</name><operator pos:start="739:41" pos:end="739:41">+</operator><literal type="number" pos:start="739:42" pos:end="739:42">1</literal></expr>]</index></name> <operator pos:start="739:45" pos:end="739:45">=</operator> <literal type="number" pos:start="739:47" pos:end="739:50">0x00</literal></expr>;</expr_stmt> <comment type="block" pos:start="739:53" pos:end="739:73">/* OK and finished */</comment>

		<expr_stmt pos:start="741:17" pos:end="741:51"><expr pos:start="741:17" pos:end="741:50"><name pos:start="741:17" pos:end="741:43"><name pos:start="741:17" pos:end="741:17">s</name><operator pos:start="741:18" pos:end="741:19">-&gt;</operator><name pos:start="741:20" pos:end="741:38">smart_selftest_data</name><index pos:start="741:39" pos:end="741:43">[<expr pos:start="741:40" pos:end="741:42"><name pos:start="741:40" pos:end="741:40">n</name><operator pos:start="741:41" pos:end="741:41">+</operator><literal type="number" pos:start="741:42" pos:end="741:42">2</literal></expr>]</index></name> <operator pos:start="741:45" pos:end="741:45">=</operator> <literal type="number" pos:start="741:47" pos:end="741:50">0x34</literal></expr>;</expr_stmt> <comment type="block" pos:start="741:53" pos:end="741:72">/* hour count lsb */</comment>

		<expr_stmt pos:start="743:17" pos:end="743:51"><expr pos:start="743:17" pos:end="743:50"><name pos:start="743:17" pos:end="743:43"><name pos:start="743:17" pos:end="743:17">s</name><operator pos:start="743:18" pos:end="743:19">-&gt;</operator><name pos:start="743:20" pos:end="743:38">smart_selftest_data</name><index pos:start="743:39" pos:end="743:43">[<expr pos:start="743:40" pos:end="743:42"><name pos:start="743:40" pos:end="743:40">n</name><operator pos:start="743:41" pos:end="743:41">+</operator><literal type="number" pos:start="743:42" pos:end="743:42">3</literal></expr>]</index></name> <operator pos:start="743:45" pos:end="743:45">=</operator> <literal type="number" pos:start="743:47" pos:end="743:50">0x12</literal></expr>;</expr_stmt> <comment type="block" pos:start="743:53" pos:end="743:72">/* hour count msb */</comment>

		<expr_stmt pos:start="745:17" pos:end="745:51"><expr pos:start="745:17" pos:end="745:50"><name pos:start="745:17" pos:end="745:25"><name pos:start="745:17" pos:end="745:17">s</name><operator pos:start="745:18" pos:end="745:19">-&gt;</operator><name pos:start="745:20" pos:end="745:25">status</name></name> <operator pos:start="745:27" pos:end="745:27">=</operator> <name pos:start="745:29" pos:end="745:38">READY_STAT</name> <operator pos:start="745:40" pos:end="745:40">|</operator> <name pos:start="745:42" pos:end="745:50">SEEK_STAT</name></expr>;</expr_stmt>

		<expr_stmt pos:start="747:17" pos:end="747:36"><expr pos:start="747:17" pos:end="747:35"><call pos:start="747:17" pos:end="747:35"><name pos:start="747:17" pos:end="747:27">ide_set_irq</name><argument_list pos:start="747:28" pos:end="747:35">(<argument pos:start="747:29" pos:end="747:34"><expr pos:start="747:29" pos:end="747:34"><name pos:start="747:29" pos:end="747:34"><name pos:start="747:29" pos:end="747:29">s</name><operator pos:start="747:30" pos:end="747:31">-&gt;</operator><name pos:start="747:32" pos:end="747:34">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<break pos:start="749:17" pos:end="749:22">break;</break>

		<default pos:start="751:17" pos:end="751:24">default:</default>

		<goto pos:start="753:17" pos:end="753:31">goto <name pos:start="753:22" pos:end="753:30">abort_cmd</name>;</goto>

		</block_content>}</block></switch>

		<break pos:start="757:17" pos:end="757:22">break;</break>

	<default pos:start="759:9" pos:end="759:16">default:</default>

		<goto pos:start="761:17" pos:end="761:31">goto <name pos:start="761:22" pos:end="761:30">abort_cmd</name>;</goto>

	</block_content>}</block></switch>

	<break pos:start="765:9" pos:end="765:14">break;</break>

    <default pos:start="767:5" pos:end="767:12">default:</default>

        <comment type="block" pos:start="769:9" pos:end="769:37">/* should not be reachable */</comment>

    <label pos:start="771:5" pos:end="771:14"><name pos:start="771:5" pos:end="771:13">abort_cmd</name>:</label>

        <expr_stmt pos:start="773:9" pos:end="773:29"><expr pos:start="773:9" pos:end="773:28"><call pos:start="773:9" pos:end="773:28"><name pos:start="773:9" pos:end="773:25">ide_abort_command</name><argument_list pos:start="773:26" pos:end="773:28">(<argument pos:start="773:27" pos:end="773:27"><expr pos:start="773:27" pos:end="773:27"><name pos:start="773:27" pos:end="773:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="775:9" pos:end="775:28"><expr pos:start="775:9" pos:end="775:27"><call pos:start="775:9" pos:end="775:27"><name pos:start="775:9" pos:end="775:19">ide_set_irq</name><argument_list pos:start="775:20" pos:end="775:27">(<argument pos:start="775:21" pos:end="775:26"><expr pos:start="775:21" pos:end="775:26"><name pos:start="775:21" pos:end="775:26"><name pos:start="775:21" pos:end="775:21">s</name><operator pos:start="775:22" pos:end="775:23">-&gt;</operator><name pos:start="775:24" pos:end="775:26">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="777:9" pos:end="777:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
