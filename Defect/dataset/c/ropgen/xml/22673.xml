<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22673.c" pos:tabs="8"><macro pos:start="1:1" pos:end="7:57"><name pos:start="1:1" pos:end="1:19">altivec_yuv2packedX</name> <argument_list pos:start="1:21" pos:end="7:57">(<argument pos:start="1:22" pos:end="1:34">SwsContext *c</argument>,

		       <argument pos:start="3:24" pos:end="3:41">int16_t *lumFilter</argument>, <argument pos:start="3:44" pos:end="3:59">int16_t **lumSrc</argument>, <argument pos:start="3:62" pos:end="3:78">int lumFilterSize</argument>,

		       <argument pos:start="5:24" pos:end="5:41">int16_t *chrFilter</argument>, <argument pos:start="5:44" pos:end="5:59">int16_t **chrSrc</argument>, <argument pos:start="5:62" pos:end="5:78">int chrFilterSize</argument>,

		       <argument pos:start="7:24" pos:end="7:36">uint8_t *dest</argument>, <argument pos:start="7:39" pos:end="7:46">int dstW</argument>, <argument pos:start="7:49" pos:end="7:56">int dstY</argument>)</argument_list></macro>

<block pos:start="9:1" pos:end="335:1">{<block_content pos:start="11:3" pos:end="331:40">

  <decl_stmt pos:start="11:3" pos:end="11:10"><decl pos:start="11:3" pos:end="11:7"><type pos:start="11:3" pos:end="11:5"><name pos:start="11:3" pos:end="11:5">int</name></type> <name pos:start="11:7" pos:end="11:7">i</name></decl>,<decl pos:start="11:9" pos:end="11:9"><type ref="prev" pos:start="11:3" pos:end="11:5"/><name pos:start="11:9" pos:end="11:9">j</name></decl>;</decl_stmt>

  <decl_stmt pos:start="13:3" pos:end="13:42"><decl pos:start="13:3" pos:end="13:41"><type pos:start="13:3" pos:end="13:11"><name pos:start="13:3" pos:end="13:7">short</name> <name pos:start="13:9" pos:end="13:11">tmp</name></type> <name pos:start="13:13" pos:end="13:25">__attribute__</name><argument_list pos:start="13:26" pos:end="13:41">(<argument pos:start="13:27" pos:end="13:40"><expr pos:start="13:27" pos:end="13:40"><operator pos:start="13:27" pos:end="13:27">(</operator><call pos:start="13:28" pos:end="13:39"><name pos:start="13:28" pos:end="13:34">aligned</name> <argument_list pos:start="13:36" pos:end="13:39">(<argument pos:start="13:37" pos:end="13:38"><expr pos:start="13:37" pos:end="13:38"><literal type="number" pos:start="13:37" pos:end="13:38">16</literal></expr></argument>)</argument_list></call><operator pos:start="13:40" pos:end="13:40">)</operator></expr></argument>)</argument_list></decl>;</decl_stmt>

  <decl_stmt pos:start="15:3" pos:end="15:13"><decl pos:start="15:3" pos:end="15:12"><type pos:start="15:3" pos:end="15:11"><name pos:start="15:3" pos:end="15:9">int16_t</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:12">p</name></decl>;</decl_stmt>

  <decl_stmt pos:start="17:3" pos:end="17:11"><decl pos:start="17:3" pos:end="17:10"><type pos:start="17:3" pos:end="17:9"><name pos:start="17:3" pos:end="17:7">short</name> <modifier pos:start="17:9" pos:end="17:9">*</modifier></type><name pos:start="17:10" pos:end="17:10">f</name></decl>;</decl_stmt>

  <decl_stmt pos:start="19:3" pos:end="19:52"><decl pos:start="19:3" pos:end="19:23"><type pos:start="19:3" pos:end="19:21"><name pos:start="19:3" pos:end="19:8">vector</name> <name pos:start="19:10" pos:end="19:15">signed</name> <name pos:start="19:17" pos:end="19:21">short</name></type> <name pos:start="19:23" pos:end="19:23">X</name></decl>,<decl pos:start="19:25" pos:end="19:26"><type ref="prev" pos:start="19:3" pos:end="19:21"/><name pos:start="19:25" pos:end="19:26">X0</name></decl>,<decl pos:start="19:28" pos:end="19:29"><type ref="prev" pos:start="19:3" pos:end="19:21"/><name pos:start="19:28" pos:end="19:29">X1</name></decl>,<decl pos:start="19:31" pos:end="19:32"><type ref="prev" pos:start="19:3" pos:end="19:21"/><name pos:start="19:31" pos:end="19:32">Y0</name></decl>,<decl pos:start="19:34" pos:end="19:35"><type ref="prev" pos:start="19:3" pos:end="19:21"/><name pos:start="19:34" pos:end="19:35">U0</name></decl>,<decl pos:start="19:37" pos:end="19:38"><type ref="prev" pos:start="19:3" pos:end="19:21"/><name pos:start="19:37" pos:end="19:38">V0</name></decl>,<decl pos:start="19:40" pos:end="19:41"><type ref="prev" pos:start="19:3" pos:end="19:21"/><name pos:start="19:40" pos:end="19:41">Y1</name></decl>,<decl pos:start="19:43" pos:end="19:44"><type ref="prev" pos:start="19:3" pos:end="19:21"/><name pos:start="19:43" pos:end="19:44">U1</name></decl>,<decl pos:start="19:46" pos:end="19:47"><type ref="prev" pos:start="19:3" pos:end="19:21"/><name pos:start="19:46" pos:end="19:47">V1</name></decl>,<decl pos:start="19:49" pos:end="19:49"><type ref="prev" pos:start="19:3" pos:end="19:21"/><name pos:start="19:49" pos:end="19:49">U</name></decl>,<decl pos:start="19:51" pos:end="19:51"><type ref="prev" pos:start="19:3" pos:end="19:21"/><name pos:start="19:51" pos:end="19:51">V</name></decl>;</decl_stmt>

  <decl_stmt pos:start="21:3" pos:end="21:40"><decl pos:start="21:3" pos:end="21:24"><type pos:start="21:3" pos:end="21:21"><name pos:start="21:3" pos:end="21:8">vector</name> <name pos:start="21:10" pos:end="21:15">signed</name> <name pos:start="21:17" pos:end="21:21">short</name></type> <name pos:start="21:23" pos:end="21:24">R0</name></decl>,<decl pos:start="21:26" pos:end="21:27"><type ref="prev" pos:start="21:3" pos:end="21:21"/><name pos:start="21:26" pos:end="21:27">G0</name></decl>,<decl pos:start="21:29" pos:end="21:30"><type ref="prev" pos:start="21:3" pos:end="21:21"/><name pos:start="21:29" pos:end="21:30">B0</name></decl>,<decl pos:start="21:32" pos:end="21:33"><type ref="prev" pos:start="21:3" pos:end="21:21"/><name pos:start="21:32" pos:end="21:33">R1</name></decl>,<decl pos:start="21:35" pos:end="21:36"><type ref="prev" pos:start="21:3" pos:end="21:21"/><name pos:start="21:35" pos:end="21:36">G1</name></decl>,<decl pos:start="21:38" pos:end="21:39"><type ref="prev" pos:start="21:3" pos:end="21:21"/><name pos:start="21:38" pos:end="21:39">B1</name></decl>;</decl_stmt>



  <decl_stmt pos:start="25:3" pos:end="25:37"><decl pos:start="25:3" pos:end="25:24"><type pos:start="25:3" pos:end="25:22"><name pos:start="25:3" pos:end="25:8">vector</name> <name pos:start="25:10" pos:end="25:17">unsigned</name> <name pos:start="25:19" pos:end="25:22">char</name></type> <name pos:start="25:24" pos:end="25:24">R</name></decl>,<decl pos:start="25:26" pos:end="25:26"><type ref="prev" pos:start="25:3" pos:end="25:22"/><name pos:start="25:26" pos:end="25:26">G</name></decl>,<decl pos:start="25:28" pos:end="25:28"><type ref="prev" pos:start="25:3" pos:end="25:22"/><name pos:start="25:28" pos:end="25:28">B</name></decl>,<decl pos:start="25:30" pos:end="25:36"><type ref="prev" pos:start="25:3" pos:end="25:22"/><name pos:start="25:30" pos:end="25:36"><name pos:start="25:30" pos:end="25:33">pels</name><index pos:start="25:34" pos:end="25:36">[<expr pos:start="25:35" pos:end="25:35"><literal type="number" pos:start="25:35" pos:end="25:35">3</literal></expr>]</index></name></decl>;</decl_stmt>

  <decl_stmt pos:start="27:3" pos:end="27:34"><decl pos:start="27:3" pos:end="27:27"><type pos:start="27:3" pos:end="27:24"><name pos:start="27:3" pos:end="27:8">vector</name> <name pos:start="27:10" pos:end="27:17">unsigned</name> <name pos:start="27:19" pos:end="27:22">char</name> <modifier pos:start="27:24" pos:end="27:24">*</modifier></type><name pos:start="27:25" pos:end="27:27">out</name></decl>,<decl pos:start="27:29" pos:end="27:33"><type ref="prev" pos:start="27:3" pos:end="27:24"><modifier pos:start="27:29" pos:end="27:29">*</modifier></type><name pos:start="27:30" pos:end="27:33">nout</name></decl>;</decl_stmt>



  <decl_stmt pos:start="31:3" pos:end="31:74"><decl pos:start="31:3" pos:end="31:73"><type pos:start="31:3" pos:end="31:21"><name pos:start="31:3" pos:end="31:8">vector</name> <name pos:start="31:10" pos:end="31:15">signed</name> <name pos:start="31:17" pos:end="31:21">short</name></type>   <name pos:start="31:25" pos:end="31:27">RND</name> <init pos:start="31:29" pos:end="31:73">= <expr pos:start="31:31" pos:end="31:73"><call pos:start="31:31" pos:end="31:73"><name pos:start="31:31" pos:end="31:39">vec_splat</name><argument_list pos:start="31:40" pos:end="31:73">(<argument pos:start="31:41" pos:end="31:70"><expr pos:start="31:41" pos:end="31:70"><operator pos:start="31:41" pos:end="31:41">(</operator><name pos:start="31:42" pos:end="31:47">vector</name> <name pos:start="31:49" pos:end="31:54">signed</name> <name pos:start="31:56" pos:end="31:60">short</name><operator pos:start="31:61" pos:end="31:61">)</operator><call pos:start="31:62" pos:end="31:70"><name pos:start="31:62" pos:end="31:64">AVV</name><argument_list pos:start="31:65" pos:end="31:70">(<argument pos:start="31:66" pos:end="31:69"><expr pos:start="31:66" pos:end="31:69"><literal type="number" pos:start="31:66" pos:end="31:66">1</literal><operator pos:start="31:67" pos:end="31:68">&lt;&lt;</operator><literal type="number" pos:start="31:69" pos:end="31:69">3</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="31:72" pos:end="31:72"><expr pos:start="31:72" pos:end="31:72"><literal type="number" pos:start="31:72" pos:end="31:72">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="33:3" pos:end="33:73"><decl pos:start="33:3" pos:end="33:72"><type pos:start="33:3" pos:end="33:23"><name pos:start="33:3" pos:end="33:8">vector</name> <name pos:start="33:10" pos:end="33:17">unsigned</name> <name pos:start="33:19" pos:end="33:23">short</name></type> <name pos:start="33:25" pos:end="33:27">SCL</name> <init pos:start="33:29" pos:end="33:72">= <expr pos:start="33:31" pos:end="33:72"><call pos:start="33:31" pos:end="33:72"><name pos:start="33:31" pos:end="33:39">vec_splat</name><argument_list pos:start="33:40" pos:end="33:72">(<argument pos:start="33:41" pos:end="33:69"><expr pos:start="33:41" pos:end="33:69"><operator pos:start="33:41" pos:end="33:41">(</operator><name pos:start="33:42" pos:end="33:47">vector</name> <name pos:start="33:49" pos:end="33:56">unsigned</name> <name pos:start="33:58" pos:end="33:62">short</name><operator pos:start="33:63" pos:end="33:63">)</operator><call pos:start="33:64" pos:end="33:69"><name pos:start="33:64" pos:end="33:66">AVV</name><argument_list pos:start="33:67" pos:end="33:69">(<argument pos:start="33:68" pos:end="33:68"><expr pos:start="33:68" pos:end="33:68"><literal type="number" pos:start="33:68" pos:end="33:68">4</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="33:71" pos:end="33:71"><expr pos:start="33:71" pos:end="33:71"><literal type="number" pos:start="33:71" pos:end="33:71">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="35:3" pos:end="35:59"><decl pos:start="35:3" pos:end="35:58"><type pos:start="35:3" pos:end="35:27"><name pos:start="35:3" pos:end="35:10">unsigned</name> <name pos:start="35:12" pos:end="35:15">long</name> <name pos:start="35:17" pos:end="35:27"><name pos:start="35:17" pos:end="35:23">scratch</name><index pos:start="35:24" pos:end="35:27">[<expr pos:start="35:25" pos:end="35:26"><literal type="number" pos:start="35:25" pos:end="35:26">16</literal></expr>]</index></name></type> <name pos:start="35:29" pos:end="35:41">__attribute__</name> <argument_list pos:start="35:43" pos:end="35:58">(<argument pos:start="35:44" pos:end="35:57"><expr pos:start="35:44" pos:end="35:57"><operator pos:start="35:44" pos:end="35:44">(</operator><call pos:start="35:45" pos:end="35:56"><name pos:start="35:45" pos:end="35:51">aligned</name> <argument_list pos:start="35:53" pos:end="35:56">(<argument pos:start="35:54" pos:end="35:55"><expr pos:start="35:54" pos:end="35:55"><literal type="number" pos:start="35:54" pos:end="35:55">16</literal></expr></argument>)</argument_list></call><operator pos:start="35:57" pos:end="35:57">)</operator></expr></argument>)</argument_list></decl>;</decl_stmt>



  <decl_stmt pos:start="39:3" pos:end="39:51"><decl pos:start="39:3" pos:end="39:35"><type pos:start="39:3" pos:end="39:23"><name pos:start="39:3" pos:end="39:8">vector</name> <name pos:start="39:10" pos:end="39:15">signed</name> <name pos:start="39:17" pos:end="39:21">short</name> <modifier pos:start="39:23" pos:end="39:23">*</modifier></type><name pos:start="39:24" pos:end="39:35">vYCoeffsBank</name></decl>, <decl pos:start="39:38" pos:end="39:50"><type ref="prev" pos:start="39:3" pos:end="39:23"><modifier pos:start="39:38" pos:end="39:38">*</modifier></type><name pos:start="39:39" pos:end="39:50">vCCoeffsBank</name></decl>;</decl_stmt>



  <decl_stmt pos:start="43:3" pos:end="43:41"><decl pos:start="43:3" pos:end="43:30"><type pos:start="43:3" pos:end="43:23"><name pos:start="43:3" pos:end="43:8">vector</name> <name pos:start="43:10" pos:end="43:15">signed</name> <name pos:start="43:17" pos:end="43:21">short</name> <modifier pos:start="43:23" pos:end="43:23">*</modifier></type><name pos:start="43:24" pos:end="43:30">YCoeffs</name></decl>, <decl pos:start="43:33" pos:end="43:40"><type ref="prev" pos:start="43:3" pos:end="43:23"><modifier pos:start="43:33" pos:end="43:33">*</modifier></type><name pos:start="43:34" pos:end="43:40">CCoeffs</name></decl>;</decl_stmt>



  <expr_stmt pos:start="47:3" pos:end="47:74"><expr pos:start="47:3" pos:end="47:73"><name pos:start="47:3" pos:end="47:14">vYCoeffsBank</name> <operator pos:start="47:16" pos:end="47:16">=</operator> <call pos:start="47:18" pos:end="47:73"><name pos:start="47:18" pos:end="47:23">malloc</name> <argument_list pos:start="47:25" pos:end="47:73">(<argument pos:start="47:26" pos:end="47:72"><expr pos:start="47:26" pos:end="47:72">sizeof <operator pos:start="47:33" pos:end="47:33">(</operator><name pos:start="47:34" pos:end="47:39">vector</name> <name pos:start="47:41" pos:end="47:46">signed</name> <name pos:start="47:48" pos:end="47:52">short</name><operator pos:start="47:53" pos:end="47:53">)</operator><operator pos:start="47:54" pos:end="47:54">*</operator><name pos:start="47:55" pos:end="47:67">lumFilterSize</name><operator pos:start="47:68" pos:end="47:68">*</operator><name pos:start="47:69" pos:end="47:72">dstW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt pos:start="49:3" pos:end="49:74"><expr pos:start="49:3" pos:end="49:73"><name pos:start="49:3" pos:end="49:14">vCCoeffsBank</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <call pos:start="49:18" pos:end="49:73"><name pos:start="49:18" pos:end="49:23">malloc</name> <argument_list pos:start="49:25" pos:end="49:73">(<argument pos:start="49:26" pos:end="49:72"><expr pos:start="49:26" pos:end="49:72">sizeof <operator pos:start="49:33" pos:end="49:33">(</operator><name pos:start="49:34" pos:end="49:39">vector</name> <name pos:start="49:41" pos:end="49:46">signed</name> <name pos:start="49:48" pos:end="49:52">short</name><operator pos:start="49:53" pos:end="49:53">)</operator><operator pos:start="49:54" pos:end="49:54">*</operator><name pos:start="49:55" pos:end="49:67">chrFilterSize</name><operator pos:start="49:68" pos:end="49:68">*</operator><name pos:start="49:69" pos:end="49:72">dstW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



  <for pos:start="53:3" pos:end="63:3">for <control pos:start="53:7" pos:end="53:36">(<init pos:start="53:8" pos:end="53:11"><expr pos:start="53:8" pos:end="53:10"><name pos:start="53:8" pos:end="53:8">i</name><operator pos:start="53:9" pos:end="53:9">=</operator><literal type="number" pos:start="53:10" pos:end="53:10">0</literal></expr>;</init><condition pos:start="53:12" pos:end="53:32"><expr pos:start="53:12" pos:end="53:31"><name pos:start="53:12" pos:end="53:12">i</name><operator pos:start="53:13" pos:end="53:13">&lt;</operator><name pos:start="53:14" pos:end="53:26">lumFilterSize</name><operator pos:start="53:27" pos:end="53:27">*</operator><name pos:start="53:28" pos:end="53:31">dstW</name></expr>;</condition><incr pos:start="53:33" pos:end="53:35"><expr pos:start="53:33" pos:end="53:35"><name pos:start="53:33" pos:end="53:33">i</name><operator pos:start="53:34" pos:end="53:35">++</operator></expr></incr>)</control> <block pos:start="53:38" pos:end="63:3">{<block_content pos:start="55:5" pos:end="61:17">

    <expr_stmt pos:start="55:5" pos:end="55:27"><expr pos:start="55:5" pos:end="55:26"><name pos:start="55:5" pos:end="55:7">tmp</name> <operator pos:start="55:9" pos:end="55:9">=</operator> <name pos:start="55:11" pos:end="55:26"><name pos:start="55:11" pos:end="55:11">c</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:23">vLumFilter</name><index pos:start="55:24" pos:end="55:26">[<expr pos:start="55:25" pos:end="55:25"><name pos:start="55:25" pos:end="55:25">i</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:25"><expr pos:start="57:5" pos:end="57:24"><name pos:start="57:5" pos:end="57:5">p</name> <operator pos:start="57:7" pos:end="57:7">=</operator> <operator pos:start="57:9" pos:end="57:9">&amp;</operator><name pos:start="57:10" pos:end="57:24"><name pos:start="57:10" pos:end="57:21">vYCoeffsBank</name><index pos:start="57:22" pos:end="57:24">[<expr pos:start="57:23" pos:end="57:23"><name pos:start="57:23" pos:end="57:23">i</name></expr>]</index></name></expr>;</expr_stmt>

    <for pos:start="59:5" pos:end="61:17">for <control pos:start="59:9" pos:end="59:21">(<init pos:start="59:10" pos:end="59:13"><expr pos:start="59:10" pos:end="59:12"><name pos:start="59:10" pos:end="59:10">j</name><operator pos:start="59:11" pos:end="59:11">=</operator><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</init><condition pos:start="59:14" pos:end="59:17"><expr pos:start="59:14" pos:end="59:16"><name pos:start="59:14" pos:end="59:14">j</name><operator pos:start="59:15" pos:end="59:15">&lt;</operator><literal type="number" pos:start="59:16" pos:end="59:16">8</literal></expr>;</condition><incr pos:start="59:18" pos:end="59:20"><expr pos:start="59:18" pos:end="59:20"><name pos:start="59:18" pos:end="59:18">j</name><operator pos:start="59:19" pos:end="59:20">++</operator></expr></incr>)</control><block type="pseudo" pos:start="61:7" pos:end="61:17"><block_content pos:start="61:7" pos:end="61:17">

      <expr_stmt pos:start="61:7" pos:end="61:17"><expr pos:start="61:7" pos:end="61:16"><name pos:start="61:7" pos:end="61:10"><name pos:start="61:7" pos:end="61:7">p</name><index pos:start="61:8" pos:end="61:10">[<expr pos:start="61:9" pos:end="61:9"><name pos:start="61:9" pos:end="61:9">j</name></expr>]</index></name> <operator pos:start="61:12" pos:end="61:12">=</operator> <name pos:start="61:14" pos:end="61:16">tmp</name></expr>;</expr_stmt></block_content></block></for>

  </block_content>}</block></for>



  <for pos:start="67:3" pos:end="77:3">for <control pos:start="67:7" pos:end="67:36">(<init pos:start="67:8" pos:end="67:11"><expr pos:start="67:8" pos:end="67:10"><name pos:start="67:8" pos:end="67:8">i</name><operator pos:start="67:9" pos:end="67:9">=</operator><literal type="number" pos:start="67:10" pos:end="67:10">0</literal></expr>;</init><condition pos:start="67:12" pos:end="67:32"><expr pos:start="67:12" pos:end="67:31"><name pos:start="67:12" pos:end="67:12">i</name><operator pos:start="67:13" pos:end="67:13">&lt;</operator><name pos:start="67:14" pos:end="67:26">chrFilterSize</name><operator pos:start="67:27" pos:end="67:27">*</operator><name pos:start="67:28" pos:end="67:31">dstW</name></expr>;</condition><incr pos:start="67:33" pos:end="67:35"><expr pos:start="67:33" pos:end="67:35"><name pos:start="67:33" pos:end="67:33">i</name><operator pos:start="67:34" pos:end="67:35">++</operator></expr></incr>)</control> <block pos:start="67:38" pos:end="77:3">{<block_content pos:start="69:5" pos:end="75:17">

    <expr_stmt pos:start="69:5" pos:end="69:27"><expr pos:start="69:5" pos:end="69:26"><name pos:start="69:5" pos:end="69:7">tmp</name> <operator pos:start="69:9" pos:end="69:9">=</operator> <name pos:start="69:11" pos:end="69:26"><name pos:start="69:11" pos:end="69:11">c</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:23">vChrFilter</name><index pos:start="69:24" pos:end="69:26">[<expr pos:start="69:25" pos:end="69:25"><name pos:start="69:25" pos:end="69:25">i</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:25"><expr pos:start="71:5" pos:end="71:24"><name pos:start="71:5" pos:end="71:5">p</name> <operator pos:start="71:7" pos:end="71:7">=</operator> <operator pos:start="71:9" pos:end="71:9">&amp;</operator><name pos:start="71:10" pos:end="71:24"><name pos:start="71:10" pos:end="71:21">vCCoeffsBank</name><index pos:start="71:22" pos:end="71:24">[<expr pos:start="71:23" pos:end="71:23"><name pos:start="71:23" pos:end="71:23">i</name></expr>]</index></name></expr>;</expr_stmt>

    <for pos:start="73:5" pos:end="75:17">for <control pos:start="73:9" pos:end="73:21">(<init pos:start="73:10" pos:end="73:13"><expr pos:start="73:10" pos:end="73:12"><name pos:start="73:10" pos:end="73:10">j</name><operator pos:start="73:11" pos:end="73:11">=</operator><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</init><condition pos:start="73:14" pos:end="73:17"><expr pos:start="73:14" pos:end="73:16"><name pos:start="73:14" pos:end="73:14">j</name><operator pos:start="73:15" pos:end="73:15">&lt;</operator><literal type="number" pos:start="73:16" pos:end="73:16">8</literal></expr>;</condition><incr pos:start="73:18" pos:end="73:20"><expr pos:start="73:18" pos:end="73:20"><name pos:start="73:18" pos:end="73:18">j</name><operator pos:start="73:19" pos:end="73:20">++</operator></expr></incr>)</control><block type="pseudo" pos:start="75:7" pos:end="75:17"><block_content pos:start="75:7" pos:end="75:17">

      <expr_stmt pos:start="75:7" pos:end="75:17"><expr pos:start="75:7" pos:end="75:16"><name pos:start="75:7" pos:end="75:10"><name pos:start="75:7" pos:end="75:7">p</name><index pos:start="75:8" pos:end="75:10">[<expr pos:start="75:9" pos:end="75:9"><name pos:start="75:9" pos:end="75:9">j</name></expr>]</index></name> <operator pos:start="75:12" pos:end="75:12">=</operator> <name pos:start="75:14" pos:end="75:16">tmp</name></expr>;</expr_stmt></block_content></block></for>

  </block_content>}</block></for>



  <expr_stmt pos:start="81:3" pos:end="81:44"><expr pos:start="81:3" pos:end="81:43"><name pos:start="81:3" pos:end="81:9">YCoeffs</name> <operator pos:start="81:11" pos:end="81:11">=</operator> <name pos:start="81:13" pos:end="81:24">vYCoeffsBank</name><operator pos:start="81:25" pos:end="81:25">+</operator><name pos:start="81:26" pos:end="81:29">dstY</name><operator pos:start="81:30" pos:end="81:30">*</operator><name pos:start="81:31" pos:end="81:43">lumFilterSize</name></expr>;</expr_stmt>

  <expr_stmt pos:start="83:3" pos:end="83:44"><expr pos:start="83:3" pos:end="83:43"><name pos:start="83:3" pos:end="83:9">CCoeffs</name> <operator pos:start="83:11" pos:end="83:11">=</operator> <name pos:start="83:13" pos:end="83:24">vCCoeffsBank</name><operator pos:start="83:25" pos:end="83:25">+</operator><name pos:start="83:26" pos:end="83:29">dstY</name><operator pos:start="83:30" pos:end="83:30">*</operator><name pos:start="83:31" pos:end="83:43">chrFilterSize</name></expr>;</expr_stmt>



  <expr_stmt pos:start="87:3" pos:end="87:37"><expr pos:start="87:3" pos:end="87:36"><name pos:start="87:3" pos:end="87:5">out</name> <operator pos:start="87:7" pos:end="87:7">=</operator> <operator pos:start="87:9" pos:end="87:9">(</operator><name pos:start="87:10" pos:end="87:15">vector</name> <name pos:start="87:17" pos:end="87:24">unsigned</name> <name pos:start="87:26" pos:end="87:29">char</name> <operator pos:start="87:31" pos:end="87:31">*</operator><operator pos:start="87:32" pos:end="87:32">)</operator><name pos:start="87:33" pos:end="87:36">dest</name></expr>;</expr_stmt>



  <for pos:start="91:3" pos:end="201:3">for<control pos:start="91:6" pos:end="91:25">(<init pos:start="91:7" pos:end="91:10"><expr pos:start="91:7" pos:end="91:9"><name pos:start="91:7" pos:end="91:7">i</name><operator pos:start="91:8" pos:end="91:8">=</operator><literal type="number" pos:start="91:9" pos:end="91:9">0</literal></expr>;</init> <condition pos:start="91:12" pos:end="91:18"><expr pos:start="91:12" pos:end="91:17"><name pos:start="91:12" pos:end="91:12">i</name><operator pos:start="91:13" pos:end="91:13">&lt;</operator><name pos:start="91:14" pos:end="91:17">dstW</name></expr>;</condition> <incr pos:start="91:20" pos:end="91:24"><expr pos:start="91:20" pos:end="91:24"><name pos:start="91:20" pos:end="91:20">i</name><operator pos:start="91:21" pos:end="91:22">+=</operator><literal type="number" pos:start="91:23" pos:end="91:24">16</literal></expr></incr>)</control><block pos:start="91:26" pos:end="201:3">{<block_content pos:start="93:5" pos:end="199:25">

    <expr_stmt pos:start="93:5" pos:end="93:13"><expr pos:start="93:5" pos:end="93:12"><name pos:start="93:5" pos:end="93:6">Y0</name> <operator pos:start="93:8" pos:end="93:8">=</operator> <name pos:start="93:10" pos:end="93:12">RND</name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:13"><expr pos:start="95:5" pos:end="95:12"><name pos:start="95:5" pos:end="95:6">Y1</name> <operator pos:start="95:8" pos:end="95:8">=</operator> <name pos:start="95:10" pos:end="95:12">RND</name></expr>;</expr_stmt>

    <comment type="block" pos:start="97:5" pos:end="97:39">/* extract 16 coeffs from lumSrc */</comment>

    <for pos:start="99:5" pos:end="109:5">for<control pos:start="99:8" pos:end="99:34">(<init pos:start="99:9" pos:end="99:12"><expr pos:start="99:9" pos:end="99:11"><name pos:start="99:9" pos:end="99:9">j</name><operator pos:start="99:10" pos:end="99:10">=</operator><literal type="number" pos:start="99:11" pos:end="99:11">0</literal></expr>;</init> <condition pos:start="99:14" pos:end="99:29"><expr pos:start="99:14" pos:end="99:28"><name pos:start="99:14" pos:end="99:14">j</name><operator pos:start="99:15" pos:end="99:15">&lt;</operator><name pos:start="99:16" pos:end="99:28">lumFilterSize</name></expr>;</condition> <incr pos:start="99:31" pos:end="99:33"><expr pos:start="99:31" pos:end="99:33"><name pos:start="99:31" pos:end="99:31">j</name><operator pos:start="99:32" pos:end="99:33">++</operator></expr></incr>)</control> <block pos:start="99:36" pos:end="109:5">{<block_content pos:start="101:7" pos:end="107:43">

      <expr_stmt pos:start="101:7" pos:end="101:38"><expr pos:start="101:7" pos:end="101:37"><name pos:start="101:7" pos:end="101:8">X0</name> <operator pos:start="101:10" pos:end="101:10">=</operator> <call pos:start="101:12" pos:end="101:37"><name pos:start="101:12" pos:end="101:17">vec_ld</name> <argument_list pos:start="101:19" pos:end="101:37">(<argument pos:start="101:20" pos:end="101:20"><expr pos:start="101:20" pos:end="101:20"><literal type="number" pos:start="101:20" pos:end="101:20">0</literal></expr></argument>,  <argument pos:start="101:24" pos:end="101:36"><expr pos:start="101:24" pos:end="101:36"><operator pos:start="101:24" pos:end="101:24">&amp;</operator><name pos:start="101:25" pos:end="101:36"><name pos:start="101:25" pos:end="101:30">lumSrc</name><index pos:start="101:31" pos:end="101:33">[<expr pos:start="101:32" pos:end="101:32"><name pos:start="101:32" pos:end="101:32">j</name></expr>]</index><index pos:start="101:34" pos:end="101:36">[<expr pos:start="101:35" pos:end="101:35"><name pos:start="101:35" pos:end="101:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="103:7" pos:end="103:38"><expr pos:start="103:7" pos:end="103:37"><name pos:start="103:7" pos:end="103:8">X1</name> <operator pos:start="103:10" pos:end="103:10">=</operator> <call pos:start="103:12" pos:end="103:37"><name pos:start="103:12" pos:end="103:17">vec_ld</name> <argument_list pos:start="103:19" pos:end="103:37">(<argument pos:start="103:20" pos:end="103:21"><expr pos:start="103:20" pos:end="103:21"><literal type="number" pos:start="103:20" pos:end="103:21">16</literal></expr></argument>, <argument pos:start="103:24" pos:end="103:36"><expr pos:start="103:24" pos:end="103:36"><operator pos:start="103:24" pos:end="103:24">&amp;</operator><name pos:start="103:25" pos:end="103:36"><name pos:start="103:25" pos:end="103:30">lumSrc</name><index pos:start="103:31" pos:end="103:33">[<expr pos:start="103:32" pos:end="103:32"><name pos:start="103:32" pos:end="103:32">j</name></expr>]</index><index pos:start="103:34" pos:end="103:36">[<expr pos:start="103:35" pos:end="103:35"><name pos:start="103:35" pos:end="103:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="105:7" pos:end="105:43"><expr pos:start="105:7" pos:end="105:42"><name pos:start="105:7" pos:end="105:8">Y0</name> <operator pos:start="105:10" pos:end="105:10">=</operator> <call pos:start="105:12" pos:end="105:42"><name pos:start="105:12" pos:end="105:21">vec_mradds</name> <argument_list pos:start="105:23" pos:end="105:42">(<argument pos:start="105:24" pos:end="105:25"><expr pos:start="105:24" pos:end="105:25"><name pos:start="105:24" pos:end="105:25">X0</name></expr></argument>, <argument pos:start="105:28" pos:end="105:37"><expr pos:start="105:28" pos:end="105:37"><name pos:start="105:28" pos:end="105:37"><name pos:start="105:28" pos:end="105:34">YCoeffs</name><index pos:start="105:35" pos:end="105:37">[<expr pos:start="105:36" pos:end="105:36"><name pos:start="105:36" pos:end="105:36">j</name></expr>]</index></name></expr></argument>, <argument pos:start="105:40" pos:end="105:41"><expr pos:start="105:40" pos:end="105:41"><name pos:start="105:40" pos:end="105:41">Y0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="107:7" pos:end="107:43"><expr pos:start="107:7" pos:end="107:42"><name pos:start="107:7" pos:end="107:8">Y1</name> <operator pos:start="107:10" pos:end="107:10">=</operator> <call pos:start="107:12" pos:end="107:42"><name pos:start="107:12" pos:end="107:21">vec_mradds</name> <argument_list pos:start="107:23" pos:end="107:42">(<argument pos:start="107:24" pos:end="107:25"><expr pos:start="107:24" pos:end="107:25"><name pos:start="107:24" pos:end="107:25">X1</name></expr></argument>, <argument pos:start="107:28" pos:end="107:37"><expr pos:start="107:28" pos:end="107:37"><name pos:start="107:28" pos:end="107:37"><name pos:start="107:28" pos:end="107:34">YCoeffs</name><index pos:start="107:35" pos:end="107:37">[<expr pos:start="107:36" pos:end="107:36"><name pos:start="107:36" pos:end="107:36">j</name></expr>]</index></name></expr></argument>, <argument pos:start="107:40" pos:end="107:41"><expr pos:start="107:40" pos:end="107:41"><name pos:start="107:40" pos:end="107:41">Y1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="113:5" pos:end="113:12"><expr pos:start="113:5" pos:end="113:11"><name pos:start="113:5" pos:end="113:5">U</name> <operator pos:start="113:7" pos:end="113:7">=</operator> <name pos:start="113:9" pos:end="113:11">RND</name></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:12"><expr pos:start="115:5" pos:end="115:11"><name pos:start="115:5" pos:end="115:5">V</name> <operator pos:start="115:7" pos:end="115:7">=</operator> <name pos:start="115:9" pos:end="115:11">RND</name></expr>;</expr_stmt>

    <comment type="block" pos:start="117:5" pos:end="117:35">/* extract 8 coeffs from U,V */</comment>

    <for pos:start="119:5" pos:end="129:5">for<control pos:start="119:8" pos:end="119:34">(<init pos:start="119:9" pos:end="119:12"><expr pos:start="119:9" pos:end="119:11"><name pos:start="119:9" pos:end="119:9">j</name><operator pos:start="119:10" pos:end="119:10">=</operator><literal type="number" pos:start="119:11" pos:end="119:11">0</literal></expr>;</init> <condition pos:start="119:14" pos:end="119:29"><expr pos:start="119:14" pos:end="119:28"><name pos:start="119:14" pos:end="119:14">j</name><operator pos:start="119:15" pos:end="119:15">&lt;</operator><name pos:start="119:16" pos:end="119:28">chrFilterSize</name></expr>;</condition> <incr pos:start="119:31" pos:end="119:33"><expr pos:start="119:31" pos:end="119:33"><name pos:start="119:31" pos:end="119:31">j</name><operator pos:start="119:32" pos:end="119:33">++</operator></expr></incr>)</control> <block pos:start="119:36" pos:end="129:5">{<block_content pos:start="121:7" pos:end="127:41">

      <expr_stmt pos:start="121:7" pos:end="121:39"><expr pos:start="121:7" pos:end="121:38"><name pos:start="121:7" pos:end="121:7">X</name>  <operator pos:start="121:10" pos:end="121:10">=</operator> <call pos:start="121:12" pos:end="121:38"><name pos:start="121:12" pos:end="121:17">vec_ld</name> <argument_list pos:start="121:19" pos:end="121:38">(<argument pos:start="121:20" pos:end="121:20"><expr pos:start="121:20" pos:end="121:20"><literal type="number" pos:start="121:20" pos:end="121:20">0</literal></expr></argument>, <argument pos:start="121:23" pos:end="121:37"><expr pos:start="121:23" pos:end="121:37"><operator pos:start="121:23" pos:end="121:23">&amp;</operator><name pos:start="121:24" pos:end="121:37"><name pos:start="121:24" pos:end="121:29">chrSrc</name><index pos:start="121:30" pos:end="121:32">[<expr pos:start="121:31" pos:end="121:31"><name pos:start="121:31" pos:end="121:31">j</name></expr>]</index><index pos:start="121:33" pos:end="121:37">[<expr pos:start="121:34" pos:end="121:36"><name pos:start="121:34" pos:end="121:34">i</name><operator pos:start="121:35" pos:end="121:35">/</operator><literal type="number" pos:start="121:36" pos:end="121:36">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="123:7" pos:end="123:41"><expr pos:start="123:7" pos:end="123:40"><name pos:start="123:7" pos:end="123:7">U</name>  <operator pos:start="123:10" pos:end="123:10">=</operator> <call pos:start="123:12" pos:end="123:40"><name pos:start="123:12" pos:end="123:21">vec_mradds</name> <argument_list pos:start="123:23" pos:end="123:40">(<argument pos:start="123:24" pos:end="123:24"><expr pos:start="123:24" pos:end="123:24"><name pos:start="123:24" pos:end="123:24">X</name></expr></argument>, <argument pos:start="123:27" pos:end="123:36"><expr pos:start="123:27" pos:end="123:36"><name pos:start="123:27" pos:end="123:36"><name pos:start="123:27" pos:end="123:33">CCoeffs</name><index pos:start="123:34" pos:end="123:36">[<expr pos:start="123:35" pos:end="123:35"><name pos:start="123:35" pos:end="123:35">j</name></expr>]</index></name></expr></argument>, <argument pos:start="123:39" pos:end="123:39"><expr pos:start="123:39" pos:end="123:39"><name pos:start="123:39" pos:end="123:39">U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="125:7" pos:end="125:44"><expr pos:start="125:7" pos:end="125:43"><name pos:start="125:7" pos:end="125:7">X</name>  <operator pos:start="125:10" pos:end="125:10">=</operator> <call pos:start="125:12" pos:end="125:43"><name pos:start="125:12" pos:end="125:17">vec_ld</name> <argument_list pos:start="125:19" pos:end="125:43">(<argument pos:start="125:20" pos:end="125:20"><expr pos:start="125:20" pos:end="125:20"><literal type="number" pos:start="125:20" pos:end="125:20">0</literal></expr></argument>, <argument pos:start="125:23" pos:end="125:42"><expr pos:start="125:23" pos:end="125:42"><operator pos:start="125:23" pos:end="125:23">&amp;</operator><name pos:start="125:24" pos:end="125:42"><name pos:start="125:24" pos:end="125:29">chrSrc</name><index pos:start="125:30" pos:end="125:32">[<expr pos:start="125:31" pos:end="125:31"><name pos:start="125:31" pos:end="125:31">j</name></expr>]</index><index pos:start="125:33" pos:end="125:42">[<expr pos:start="125:34" pos:end="125:41"><name pos:start="125:34" pos:end="125:34">i</name><operator pos:start="125:35" pos:end="125:35">/</operator><literal type="number" pos:start="125:36" pos:end="125:37">2</literal><operator pos:start="125:37" pos:end="125:37">+</operator><literal type="number" pos:start="125:38" pos:end="125:41">2048</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="127:7" pos:end="127:41"><expr pos:start="127:7" pos:end="127:40"><name pos:start="127:7" pos:end="127:7">V</name>  <operator pos:start="127:10" pos:end="127:10">=</operator> <call pos:start="127:12" pos:end="127:40"><name pos:start="127:12" pos:end="127:21">vec_mradds</name> <argument_list pos:start="127:23" pos:end="127:40">(<argument pos:start="127:24" pos:end="127:24"><expr pos:start="127:24" pos:end="127:24"><name pos:start="127:24" pos:end="127:24">X</name></expr></argument>, <argument pos:start="127:27" pos:end="127:36"><expr pos:start="127:27" pos:end="127:36"><name pos:start="127:27" pos:end="127:36"><name pos:start="127:27" pos:end="127:33">CCoeffs</name><index pos:start="127:34" pos:end="127:36">[<expr pos:start="127:35" pos:end="127:35"><name pos:start="127:35" pos:end="127:35">j</name></expr>]</index></name></expr></argument>, <argument pos:start="127:39" pos:end="127:39"><expr pos:start="127:39" pos:end="127:39"><name pos:start="127:39" pos:end="127:39">V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="133:5" pos:end="133:32">/* scale and clip signals */</comment>

    <expr_stmt pos:start="135:5" pos:end="135:27"><expr pos:start="135:5" pos:end="135:26"><name pos:start="135:5" pos:end="135:6">Y0</name> <operator pos:start="135:8" pos:end="135:8">=</operator> <call pos:start="135:10" pos:end="135:26"><name pos:start="135:10" pos:end="135:16">vec_sra</name> <argument_list pos:start="135:18" pos:end="135:26">(<argument pos:start="135:19" pos:end="135:20"><expr pos:start="135:19" pos:end="135:20"><name pos:start="135:19" pos:end="135:20">Y0</name></expr></argument>, <argument pos:start="135:23" pos:end="135:25"><expr pos:start="135:23" pos:end="135:25"><name pos:start="135:23" pos:end="135:25">SCL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:27"><expr pos:start="137:5" pos:end="137:26"><name pos:start="137:5" pos:end="137:6">Y1</name> <operator pos:start="137:8" pos:end="137:8">=</operator> <call pos:start="137:10" pos:end="137:26"><name pos:start="137:10" pos:end="137:16">vec_sra</name> <argument_list pos:start="137:18" pos:end="137:26">(<argument pos:start="137:19" pos:end="137:20"><expr pos:start="137:19" pos:end="137:20"><name pos:start="137:19" pos:end="137:20">Y1</name></expr></argument>, <argument pos:start="137:23" pos:end="137:25"><expr pos:start="137:23" pos:end="137:25"><name pos:start="137:23" pos:end="137:25">SCL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:27"><expr pos:start="139:5" pos:end="139:26"><name pos:start="139:5" pos:end="139:5">U</name>  <operator pos:start="139:8" pos:end="139:8">=</operator> <call pos:start="139:10" pos:end="139:26"><name pos:start="139:10" pos:end="139:16">vec_sra</name> <argument_list pos:start="139:18" pos:end="139:26">(<argument pos:start="139:19" pos:end="139:19"><expr pos:start="139:19" pos:end="139:19"><name pos:start="139:19" pos:end="139:19">U</name></expr></argument>,  <argument pos:start="139:23" pos:end="139:25"><expr pos:start="139:23" pos:end="139:25"><name pos:start="139:23" pos:end="139:25">SCL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:27"><expr pos:start="141:5" pos:end="141:26"><name pos:start="141:5" pos:end="141:5">V</name>  <operator pos:start="141:8" pos:end="141:8">=</operator> <call pos:start="141:10" pos:end="141:26"><name pos:start="141:10" pos:end="141:16">vec_sra</name> <argument_list pos:start="141:18" pos:end="141:26">(<argument pos:start="141:19" pos:end="141:19"><expr pos:start="141:19" pos:end="141:19"><name pos:start="141:19" pos:end="141:19">V</name></expr></argument>,  <argument pos:start="141:23" pos:end="141:25"><expr pos:start="141:23" pos:end="141:25"><name pos:start="141:23" pos:end="141:25">SCL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:23"><expr pos:start="145:5" pos:end="145:22"><name pos:start="145:5" pos:end="145:6">Y0</name> <operator pos:start="145:8" pos:end="145:8">=</operator> <call pos:start="145:10" pos:end="145:22"><name pos:start="145:10" pos:end="145:17">vec_clip</name> <argument_list pos:start="145:19" pos:end="145:22">(<argument pos:start="145:20" pos:end="145:21"><expr pos:start="145:20" pos:end="145:21"><name pos:start="145:20" pos:end="145:21">Y0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:23"><expr pos:start="147:5" pos:end="147:22"><name pos:start="147:5" pos:end="147:6">Y1</name> <operator pos:start="147:8" pos:end="147:8">=</operator> <call pos:start="147:10" pos:end="147:22"><name pos:start="147:10" pos:end="147:17">vec_clip</name> <argument_list pos:start="147:19" pos:end="147:22">(<argument pos:start="147:20" pos:end="147:21"><expr pos:start="147:20" pos:end="147:21"><name pos:start="147:20" pos:end="147:21">Y1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:22"><expr pos:start="149:5" pos:end="149:21"><name pos:start="149:5" pos:end="149:5">U</name>  <operator pos:start="149:8" pos:end="149:8">=</operator> <call pos:start="149:10" pos:end="149:21"><name pos:start="149:10" pos:end="149:17">vec_clip</name> <argument_list pos:start="149:19" pos:end="149:21">(<argument pos:start="149:20" pos:end="149:20"><expr pos:start="149:20" pos:end="149:20"><name pos:start="149:20" pos:end="149:20">U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:22"><expr pos:start="151:5" pos:end="151:21"><name pos:start="151:5" pos:end="151:5">V</name>  <operator pos:start="151:8" pos:end="151:8">=</operator> <call pos:start="151:10" pos:end="151:21"><name pos:start="151:10" pos:end="151:17">vec_clip</name> <argument_list pos:start="151:19" pos:end="151:21">(<argument pos:start="151:20" pos:end="151:20"><expr pos:start="151:20" pos:end="151:20"><name pos:start="151:20" pos:end="151:20">V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="155:5" pos:end="169:6">/* now we have

      Y0= y0 y1 y2 y3 y4 y5 y6 y7     Y1= y8 y9 y10 y11 y12 y13 y14 y15

      U= u0 u1 u2 u3 u4 u5 u6 u7      V= v0 v1 v2 v3 v4 v5 v6 v7



      Y0= y0 y1 y2 y3 y4 y5 y6 y7    Y1= y8 y9 y10 y11 y12 y13 y14 y15

      U0= u0 u0 u1 u1 u2 u2 u3 u3    U1= u4 u4 u5 u5 u6 u6 u7 u7

      V0= v0 v0 v1 v1 v2 v2 v3 v3    V1= v4 v4 v5 v5 v6 v6 v7 v7

    */</comment>



    <expr_stmt pos:start="173:5" pos:end="173:26"><expr pos:start="173:5" pos:end="173:25"><name pos:start="173:5" pos:end="173:6">U0</name> <operator pos:start="173:8" pos:end="173:8">=</operator> <call pos:start="173:10" pos:end="173:25"><name pos:start="173:10" pos:end="173:19">vec_mergeh</name> <argument_list pos:start="173:21" pos:end="173:25">(<argument pos:start="173:22" pos:end="173:22"><expr pos:start="173:22" pos:end="173:22"><name pos:start="173:22" pos:end="173:22">U</name></expr></argument>,<argument pos:start="173:24" pos:end="173:24"><expr pos:start="173:24" pos:end="173:24"><name pos:start="173:24" pos:end="173:24">U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:26"><expr pos:start="175:5" pos:end="175:25"><name pos:start="175:5" pos:end="175:6">V0</name> <operator pos:start="175:8" pos:end="175:8">=</operator> <call pos:start="175:10" pos:end="175:25"><name pos:start="175:10" pos:end="175:19">vec_mergeh</name> <argument_list pos:start="175:21" pos:end="175:25">(<argument pos:start="175:22" pos:end="175:22"><expr pos:start="175:22" pos:end="175:22"><name pos:start="175:22" pos:end="175:22">V</name></expr></argument>,<argument pos:start="175:24" pos:end="175:24"><expr pos:start="175:24" pos:end="175:24"><name pos:start="175:24" pos:end="175:24">V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="179:5" pos:end="179:26"><expr pos:start="179:5" pos:end="179:25"><name pos:start="179:5" pos:end="179:6">U1</name> <operator pos:start="179:8" pos:end="179:8">=</operator> <call pos:start="179:10" pos:end="179:25"><name pos:start="179:10" pos:end="179:19">vec_mergel</name> <argument_list pos:start="179:21" pos:end="179:25">(<argument pos:start="179:22" pos:end="179:22"><expr pos:start="179:22" pos:end="179:22"><name pos:start="179:22" pos:end="179:22">U</name></expr></argument>,<argument pos:start="179:24" pos:end="179:24"><expr pos:start="179:24" pos:end="179:24"><name pos:start="179:24" pos:end="179:24">U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:26"><expr pos:start="181:5" pos:end="181:25"><name pos:start="181:5" pos:end="181:6">V1</name> <operator pos:start="181:8" pos:end="181:8">=</operator> <call pos:start="181:10" pos:end="181:25"><name pos:start="181:10" pos:end="181:19">vec_mergel</name> <argument_list pos:start="181:21" pos:end="181:25">(<argument pos:start="181:22" pos:end="181:22"><expr pos:start="181:22" pos:end="181:22"><name pos:start="181:22" pos:end="181:22">V</name></expr></argument>,<argument pos:start="181:24" pos:end="181:24"><expr pos:start="181:24" pos:end="181:24"><name pos:start="181:24" pos:end="181:24">V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="185:5" pos:end="185:42"><expr pos:start="185:5" pos:end="185:41"><call pos:start="185:5" pos:end="185:41"><name pos:start="185:5" pos:end="185:15">cvtyuvtoRGB</name> <argument_list pos:start="185:17" pos:end="185:41">(<argument pos:start="185:18" pos:end="185:18"><expr pos:start="185:18" pos:end="185:18"><name pos:start="185:18" pos:end="185:18">c</name></expr></argument>, <argument pos:start="185:21" pos:end="185:22"><expr pos:start="185:21" pos:end="185:22"><name pos:start="185:21" pos:end="185:22">Y0</name></expr></argument>,<argument pos:start="185:24" pos:end="185:25"><expr pos:start="185:24" pos:end="185:25"><name pos:start="185:24" pos:end="185:25">U0</name></expr></argument>,<argument pos:start="185:27" pos:end="185:28"><expr pos:start="185:27" pos:end="185:28"><name pos:start="185:27" pos:end="185:28">V0</name></expr></argument>,<argument pos:start="185:30" pos:end="185:32"><expr pos:start="185:30" pos:end="185:32"><operator pos:start="185:30" pos:end="185:30">&amp;</operator><name pos:start="185:31" pos:end="185:32">R0</name></expr></argument>,<argument pos:start="185:34" pos:end="185:36"><expr pos:start="185:34" pos:end="185:36"><operator pos:start="185:34" pos:end="185:34">&amp;</operator><name pos:start="185:35" pos:end="185:36">G0</name></expr></argument>,<argument pos:start="185:38" pos:end="185:40"><expr pos:start="185:38" pos:end="185:40"><operator pos:start="185:38" pos:end="185:38">&amp;</operator><name pos:start="185:39" pos:end="185:40">B0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:42"><expr pos:start="187:5" pos:end="187:41"><call pos:start="187:5" pos:end="187:41"><name pos:start="187:5" pos:end="187:15">cvtyuvtoRGB</name> <argument_list pos:start="187:17" pos:end="187:41">(<argument pos:start="187:18" pos:end="187:18"><expr pos:start="187:18" pos:end="187:18"><name pos:start="187:18" pos:end="187:18">c</name></expr></argument>, <argument pos:start="187:21" pos:end="187:22"><expr pos:start="187:21" pos:end="187:22"><name pos:start="187:21" pos:end="187:22">Y1</name></expr></argument>,<argument pos:start="187:24" pos:end="187:25"><expr pos:start="187:24" pos:end="187:25"><name pos:start="187:24" pos:end="187:25">U1</name></expr></argument>,<argument pos:start="187:27" pos:end="187:28"><expr pos:start="187:27" pos:end="187:28"><name pos:start="187:27" pos:end="187:28">V1</name></expr></argument>,<argument pos:start="187:30" pos:end="187:32"><expr pos:start="187:30" pos:end="187:32"><operator pos:start="187:30" pos:end="187:30">&amp;</operator><name pos:start="187:31" pos:end="187:32">R1</name></expr></argument>,<argument pos:start="187:34" pos:end="187:36"><expr pos:start="187:34" pos:end="187:36"><operator pos:start="187:34" pos:end="187:34">&amp;</operator><name pos:start="187:35" pos:end="187:36">G1</name></expr></argument>,<argument pos:start="187:38" pos:end="187:40"><expr pos:start="187:38" pos:end="187:40"><operator pos:start="187:38" pos:end="187:38">&amp;</operator><name pos:start="187:39" pos:end="187:40">B1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:29"><expr pos:start="191:5" pos:end="191:28"><name pos:start="191:5" pos:end="191:5">R</name>  <operator pos:start="191:8" pos:end="191:8">=</operator> <call pos:start="191:10" pos:end="191:28"><name pos:start="191:10" pos:end="191:20">vec_packclp</name> <argument_list pos:start="191:22" pos:end="191:28">(<argument pos:start="191:23" pos:end="191:24"><expr pos:start="191:23" pos:end="191:24"><name pos:start="191:23" pos:end="191:24">R0</name></expr></argument>,<argument pos:start="191:26" pos:end="191:27"><expr pos:start="191:26" pos:end="191:27"><name pos:start="191:26" pos:end="191:27">R1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:29"><expr pos:start="193:5" pos:end="193:28"><name pos:start="193:5" pos:end="193:5">G</name>  <operator pos:start="193:8" pos:end="193:8">=</operator> <call pos:start="193:10" pos:end="193:28"><name pos:start="193:10" pos:end="193:20">vec_packclp</name> <argument_list pos:start="193:22" pos:end="193:28">(<argument pos:start="193:23" pos:end="193:24"><expr pos:start="193:23" pos:end="193:24"><name pos:start="193:23" pos:end="193:24">G0</name></expr></argument>,<argument pos:start="193:26" pos:end="193:27"><expr pos:start="193:26" pos:end="193:27"><name pos:start="193:26" pos:end="193:27">G1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:29"><expr pos:start="195:5" pos:end="195:28"><name pos:start="195:5" pos:end="195:5">B</name>  <operator pos:start="195:8" pos:end="195:8">=</operator> <call pos:start="195:10" pos:end="195:28"><name pos:start="195:10" pos:end="195:20">vec_packclp</name> <argument_list pos:start="195:22" pos:end="195:28">(<argument pos:start="195:23" pos:end="195:24"><expr pos:start="195:23" pos:end="195:24"><name pos:start="195:23" pos:end="195:24">B0</name></expr></argument>,<argument pos:start="195:26" pos:end="195:27"><expr pos:start="195:26" pos:end="195:27"><name pos:start="195:26" pos:end="195:27">B1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="199:5" pos:end="199:25"><expr pos:start="199:5" pos:end="199:24"><call pos:start="199:5" pos:end="199:24"><name pos:start="199:5" pos:end="199:12">out_rgba</name> <argument_list pos:start="199:14" pos:end="199:24">(<argument pos:start="199:15" pos:end="199:15"><expr pos:start="199:15" pos:end="199:15"><name pos:start="199:15" pos:end="199:15">R</name></expr></argument>,<argument pos:start="199:17" pos:end="199:17"><expr pos:start="199:17" pos:end="199:17"><name pos:start="199:17" pos:end="199:17">G</name></expr></argument>,<argument pos:start="199:19" pos:end="199:19"><expr pos:start="199:19" pos:end="199:19"><name pos:start="199:19" pos:end="199:19">B</name></expr></argument>,<argument pos:start="199:21" pos:end="199:23"><expr pos:start="199:21" pos:end="199:23"><name pos:start="199:21" pos:end="199:23">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  </block_content>}</block></for>



  <if_stmt pos:start="205:3" pos:end="325:3"><if pos:start="205:3" pos:end="325:3">if <condition pos:start="205:6" pos:end="205:15">(<expr pos:start="205:7" pos:end="205:14"><name pos:start="205:7" pos:end="205:7">i</name> <operator pos:start="205:9" pos:end="205:9">&lt;</operator> <name pos:start="205:11" pos:end="205:14">dstW</name></expr>)</condition> <block pos:start="205:17" pos:end="325:3">{<block_content pos:start="207:5" pos:end="323:56">

    <expr_stmt pos:start="207:5" pos:end="207:12"><expr pos:start="207:5" pos:end="207:11"><name pos:start="207:5" pos:end="207:5">i</name> <operator pos:start="207:7" pos:end="207:8">-=</operator> <literal type="number" pos:start="207:10" pos:end="207:11">16</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="211:5" pos:end="211:13"><expr pos:start="211:5" pos:end="211:12"><name pos:start="211:5" pos:end="211:6">Y0</name> <operator pos:start="211:8" pos:end="211:8">=</operator> <name pos:start="211:10" pos:end="211:12">RND</name></expr>;</expr_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:13"><expr pos:start="213:5" pos:end="213:12"><name pos:start="213:5" pos:end="213:6">Y1</name> <operator pos:start="213:8" pos:end="213:8">=</operator> <name pos:start="213:10" pos:end="213:12">RND</name></expr>;</expr_stmt>

    <comment type="block" pos:start="215:5" pos:end="215:39">/* extract 16 coeffs from lumSrc */</comment>

    <for pos:start="217:5" pos:end="227:5">for<control pos:start="217:8" pos:end="217:34">(<init pos:start="217:9" pos:end="217:12"><expr pos:start="217:9" pos:end="217:11"><name pos:start="217:9" pos:end="217:9">j</name><operator pos:start="217:10" pos:end="217:10">=</operator><literal type="number" pos:start="217:11" pos:end="217:11">0</literal></expr>;</init> <condition pos:start="217:14" pos:end="217:29"><expr pos:start="217:14" pos:end="217:28"><name pos:start="217:14" pos:end="217:14">j</name><operator pos:start="217:15" pos:end="217:15">&lt;</operator><name pos:start="217:16" pos:end="217:28">lumFilterSize</name></expr>;</condition> <incr pos:start="217:31" pos:end="217:33"><expr pos:start="217:31" pos:end="217:33"><name pos:start="217:31" pos:end="217:31">j</name><operator pos:start="217:32" pos:end="217:33">++</operator></expr></incr>)</control> <block pos:start="217:36" pos:end="227:5">{<block_content pos:start="219:7" pos:end="225:43">

      <expr_stmt pos:start="219:7" pos:end="219:38"><expr pos:start="219:7" pos:end="219:37"><name pos:start="219:7" pos:end="219:8">X0</name> <operator pos:start="219:10" pos:end="219:10">=</operator> <call pos:start="219:12" pos:end="219:37"><name pos:start="219:12" pos:end="219:17">vec_ld</name> <argument_list pos:start="219:19" pos:end="219:37">(<argument pos:start="219:20" pos:end="219:20"><expr pos:start="219:20" pos:end="219:20"><literal type="number" pos:start="219:20" pos:end="219:20">0</literal></expr></argument>,  <argument pos:start="219:24" pos:end="219:36"><expr pos:start="219:24" pos:end="219:36"><operator pos:start="219:24" pos:end="219:24">&amp;</operator><name pos:start="219:25" pos:end="219:36"><name pos:start="219:25" pos:end="219:30">lumSrc</name><index pos:start="219:31" pos:end="219:33">[<expr pos:start="219:32" pos:end="219:32"><name pos:start="219:32" pos:end="219:32">j</name></expr>]</index><index pos:start="219:34" pos:end="219:36">[<expr pos:start="219:35" pos:end="219:35"><name pos:start="219:35" pos:end="219:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="221:7" pos:end="221:38"><expr pos:start="221:7" pos:end="221:37"><name pos:start="221:7" pos:end="221:8">X1</name> <operator pos:start="221:10" pos:end="221:10">=</operator> <call pos:start="221:12" pos:end="221:37"><name pos:start="221:12" pos:end="221:17">vec_ld</name> <argument_list pos:start="221:19" pos:end="221:37">(<argument pos:start="221:20" pos:end="221:21"><expr pos:start="221:20" pos:end="221:21"><literal type="number" pos:start="221:20" pos:end="221:21">16</literal></expr></argument>, <argument pos:start="221:24" pos:end="221:36"><expr pos:start="221:24" pos:end="221:36"><operator pos:start="221:24" pos:end="221:24">&amp;</operator><name pos:start="221:25" pos:end="221:36"><name pos:start="221:25" pos:end="221:30">lumSrc</name><index pos:start="221:31" pos:end="221:33">[<expr pos:start="221:32" pos:end="221:32"><name pos:start="221:32" pos:end="221:32">j</name></expr>]</index><index pos:start="221:34" pos:end="221:36">[<expr pos:start="221:35" pos:end="221:35"><name pos:start="221:35" pos:end="221:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="223:7" pos:end="223:43"><expr pos:start="223:7" pos:end="223:42"><name pos:start="223:7" pos:end="223:8">Y0</name> <operator pos:start="223:10" pos:end="223:10">=</operator> <call pos:start="223:12" pos:end="223:42"><name pos:start="223:12" pos:end="223:21">vec_mradds</name> <argument_list pos:start="223:23" pos:end="223:42">(<argument pos:start="223:24" pos:end="223:25"><expr pos:start="223:24" pos:end="223:25"><name pos:start="223:24" pos:end="223:25">X0</name></expr></argument>, <argument pos:start="223:28" pos:end="223:37"><expr pos:start="223:28" pos:end="223:37"><name pos:start="223:28" pos:end="223:37"><name pos:start="223:28" pos:end="223:34">YCoeffs</name><index pos:start="223:35" pos:end="223:37">[<expr pos:start="223:36" pos:end="223:36"><name pos:start="223:36" pos:end="223:36">j</name></expr>]</index></name></expr></argument>, <argument pos:start="223:40" pos:end="223:41"><expr pos:start="223:40" pos:end="223:41"><name pos:start="223:40" pos:end="223:41">Y0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="225:7" pos:end="225:43"><expr pos:start="225:7" pos:end="225:42"><name pos:start="225:7" pos:end="225:8">Y1</name> <operator pos:start="225:10" pos:end="225:10">=</operator> <call pos:start="225:12" pos:end="225:42"><name pos:start="225:12" pos:end="225:21">vec_mradds</name> <argument_list pos:start="225:23" pos:end="225:42">(<argument pos:start="225:24" pos:end="225:25"><expr pos:start="225:24" pos:end="225:25"><name pos:start="225:24" pos:end="225:25">X1</name></expr></argument>, <argument pos:start="225:28" pos:end="225:37"><expr pos:start="225:28" pos:end="225:37"><name pos:start="225:28" pos:end="225:37"><name pos:start="225:28" pos:end="225:34">YCoeffs</name><index pos:start="225:35" pos:end="225:37">[<expr pos:start="225:36" pos:end="225:36"><name pos:start="225:36" pos:end="225:36">j</name></expr>]</index></name></expr></argument>, <argument pos:start="225:40" pos:end="225:41"><expr pos:start="225:40" pos:end="225:41"><name pos:start="225:40" pos:end="225:41">Y1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="231:5" pos:end="231:12"><expr pos:start="231:5" pos:end="231:11"><name pos:start="231:5" pos:end="231:5">U</name> <operator pos:start="231:7" pos:end="231:7">=</operator> <name pos:start="231:9" pos:end="231:11">RND</name></expr>;</expr_stmt>

    <expr_stmt pos:start="233:5" pos:end="233:12"><expr pos:start="233:5" pos:end="233:11"><name pos:start="233:5" pos:end="233:5">V</name> <operator pos:start="233:7" pos:end="233:7">=</operator> <name pos:start="233:9" pos:end="233:11">RND</name></expr>;</expr_stmt>

    <comment type="block" pos:start="235:5" pos:end="235:35">/* extract 8 coeffs from U,V */</comment>

    <for pos:start="237:5" pos:end="247:5">for<control pos:start="237:8" pos:end="237:34">(<init pos:start="237:9" pos:end="237:12"><expr pos:start="237:9" pos:end="237:11"><name pos:start="237:9" pos:end="237:9">j</name><operator pos:start="237:10" pos:end="237:10">=</operator><literal type="number" pos:start="237:11" pos:end="237:11">0</literal></expr>;</init> <condition pos:start="237:14" pos:end="237:29"><expr pos:start="237:14" pos:end="237:28"><name pos:start="237:14" pos:end="237:14">j</name><operator pos:start="237:15" pos:end="237:15">&lt;</operator><name pos:start="237:16" pos:end="237:28">chrFilterSize</name></expr>;</condition> <incr pos:start="237:31" pos:end="237:33"><expr pos:start="237:31" pos:end="237:33"><name pos:start="237:31" pos:end="237:31">j</name><operator pos:start="237:32" pos:end="237:33">++</operator></expr></incr>)</control> <block pos:start="237:36" pos:end="247:5">{<block_content pos:start="239:7" pos:end="245:41">

      <expr_stmt pos:start="239:7" pos:end="239:39"><expr pos:start="239:7" pos:end="239:38"><name pos:start="239:7" pos:end="239:7">X</name>  <operator pos:start="239:10" pos:end="239:10">=</operator> <call pos:start="239:12" pos:end="239:38"><name pos:start="239:12" pos:end="239:17">vec_ld</name> <argument_list pos:start="239:19" pos:end="239:38">(<argument pos:start="239:20" pos:end="239:20"><expr pos:start="239:20" pos:end="239:20"><literal type="number" pos:start="239:20" pos:end="239:20">0</literal></expr></argument>, <argument pos:start="239:23" pos:end="239:37"><expr pos:start="239:23" pos:end="239:37"><operator pos:start="239:23" pos:end="239:23">&amp;</operator><name pos:start="239:24" pos:end="239:37"><name pos:start="239:24" pos:end="239:29">chrSrc</name><index pos:start="239:30" pos:end="239:32">[<expr pos:start="239:31" pos:end="239:31"><name pos:start="239:31" pos:end="239:31">j</name></expr>]</index><index pos:start="239:33" pos:end="239:37">[<expr pos:start="239:34" pos:end="239:36"><name pos:start="239:34" pos:end="239:34">i</name><operator pos:start="239:35" pos:end="239:35">/</operator><literal type="number" pos:start="239:36" pos:end="239:36">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="241:7" pos:end="241:41"><expr pos:start="241:7" pos:end="241:40"><name pos:start="241:7" pos:end="241:7">U</name>  <operator pos:start="241:10" pos:end="241:10">=</operator> <call pos:start="241:12" pos:end="241:40"><name pos:start="241:12" pos:end="241:21">vec_mradds</name> <argument_list pos:start="241:23" pos:end="241:40">(<argument pos:start="241:24" pos:end="241:24"><expr pos:start="241:24" pos:end="241:24"><name pos:start="241:24" pos:end="241:24">X</name></expr></argument>, <argument pos:start="241:27" pos:end="241:36"><expr pos:start="241:27" pos:end="241:36"><name pos:start="241:27" pos:end="241:36"><name pos:start="241:27" pos:end="241:33">CCoeffs</name><index pos:start="241:34" pos:end="241:36">[<expr pos:start="241:35" pos:end="241:35"><name pos:start="241:35" pos:end="241:35">j</name></expr>]</index></name></expr></argument>, <argument pos:start="241:39" pos:end="241:39"><expr pos:start="241:39" pos:end="241:39"><name pos:start="241:39" pos:end="241:39">U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="243:7" pos:end="243:44"><expr pos:start="243:7" pos:end="243:43"><name pos:start="243:7" pos:end="243:7">X</name>  <operator pos:start="243:10" pos:end="243:10">=</operator> <call pos:start="243:12" pos:end="243:43"><name pos:start="243:12" pos:end="243:17">vec_ld</name> <argument_list pos:start="243:19" pos:end="243:43">(<argument pos:start="243:20" pos:end="243:20"><expr pos:start="243:20" pos:end="243:20"><literal type="number" pos:start="243:20" pos:end="243:20">0</literal></expr></argument>, <argument pos:start="243:23" pos:end="243:42"><expr pos:start="243:23" pos:end="243:42"><operator pos:start="243:23" pos:end="243:23">&amp;</operator><name pos:start="243:24" pos:end="243:42"><name pos:start="243:24" pos:end="243:29">chrSrc</name><index pos:start="243:30" pos:end="243:32">[<expr pos:start="243:31" pos:end="243:31"><name pos:start="243:31" pos:end="243:31">j</name></expr>]</index><index pos:start="243:33" pos:end="243:42">[<expr pos:start="243:34" pos:end="243:41"><name pos:start="243:34" pos:end="243:34">i</name><operator pos:start="243:35" pos:end="243:35">/</operator><literal type="number" pos:start="243:36" pos:end="243:37">2</literal><operator pos:start="243:37" pos:end="243:37">+</operator><literal type="number" pos:start="243:38" pos:end="243:41">2048</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="245:7" pos:end="245:41"><expr pos:start="245:7" pos:end="245:40"><name pos:start="245:7" pos:end="245:7">V</name>  <operator pos:start="245:10" pos:end="245:10">=</operator> <call pos:start="245:12" pos:end="245:40"><name pos:start="245:12" pos:end="245:21">vec_mradds</name> <argument_list pos:start="245:23" pos:end="245:40">(<argument pos:start="245:24" pos:end="245:24"><expr pos:start="245:24" pos:end="245:24"><name pos:start="245:24" pos:end="245:24">X</name></expr></argument>, <argument pos:start="245:27" pos:end="245:36"><expr pos:start="245:27" pos:end="245:36"><name pos:start="245:27" pos:end="245:36"><name pos:start="245:27" pos:end="245:33">CCoeffs</name><index pos:start="245:34" pos:end="245:36">[<expr pos:start="245:35" pos:end="245:35"><name pos:start="245:35" pos:end="245:35">j</name></expr>]</index></name></expr></argument>, <argument pos:start="245:39" pos:end="245:39"><expr pos:start="245:39" pos:end="245:39"><name pos:start="245:39" pos:end="245:39">V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="251:5" pos:end="251:32">/* scale and clip signals */</comment>

    <expr_stmt pos:start="253:5" pos:end="253:27"><expr pos:start="253:5" pos:end="253:26"><name pos:start="253:5" pos:end="253:6">Y0</name> <operator pos:start="253:8" pos:end="253:8">=</operator> <call pos:start="253:10" pos:end="253:26"><name pos:start="253:10" pos:end="253:16">vec_sra</name> <argument_list pos:start="253:18" pos:end="253:26">(<argument pos:start="253:19" pos:end="253:20"><expr pos:start="253:19" pos:end="253:20"><name pos:start="253:19" pos:end="253:20">Y0</name></expr></argument>, <argument pos:start="253:23" pos:end="253:25"><expr pos:start="253:23" pos:end="253:25"><name pos:start="253:23" pos:end="253:25">SCL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="255:5" pos:end="255:27"><expr pos:start="255:5" pos:end="255:26"><name pos:start="255:5" pos:end="255:6">Y1</name> <operator pos:start="255:8" pos:end="255:8">=</operator> <call pos:start="255:10" pos:end="255:26"><name pos:start="255:10" pos:end="255:16">vec_sra</name> <argument_list pos:start="255:18" pos:end="255:26">(<argument pos:start="255:19" pos:end="255:20"><expr pos:start="255:19" pos:end="255:20"><name pos:start="255:19" pos:end="255:20">Y1</name></expr></argument>, <argument pos:start="255:23" pos:end="255:25"><expr pos:start="255:23" pos:end="255:25"><name pos:start="255:23" pos:end="255:25">SCL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="257:5" pos:end="257:27"><expr pos:start="257:5" pos:end="257:26"><name pos:start="257:5" pos:end="257:5">U</name>  <operator pos:start="257:8" pos:end="257:8">=</operator> <call pos:start="257:10" pos:end="257:26"><name pos:start="257:10" pos:end="257:16">vec_sra</name> <argument_list pos:start="257:18" pos:end="257:26">(<argument pos:start="257:19" pos:end="257:19"><expr pos:start="257:19" pos:end="257:19"><name pos:start="257:19" pos:end="257:19">U</name></expr></argument>,  <argument pos:start="257:23" pos:end="257:25"><expr pos:start="257:23" pos:end="257:25"><name pos:start="257:23" pos:end="257:25">SCL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="259:5" pos:end="259:27"><expr pos:start="259:5" pos:end="259:26"><name pos:start="259:5" pos:end="259:5">V</name>  <operator pos:start="259:8" pos:end="259:8">=</operator> <call pos:start="259:10" pos:end="259:26"><name pos:start="259:10" pos:end="259:16">vec_sra</name> <argument_list pos:start="259:18" pos:end="259:26">(<argument pos:start="259:19" pos:end="259:19"><expr pos:start="259:19" pos:end="259:19"><name pos:start="259:19" pos:end="259:19">V</name></expr></argument>,  <argument pos:start="259:23" pos:end="259:25"><expr pos:start="259:23" pos:end="259:25"><name pos:start="259:23" pos:end="259:25">SCL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="263:5" pos:end="263:23"><expr pos:start="263:5" pos:end="263:22"><name pos:start="263:5" pos:end="263:6">Y0</name> <operator pos:start="263:8" pos:end="263:8">=</operator> <call pos:start="263:10" pos:end="263:22"><name pos:start="263:10" pos:end="263:17">vec_clip</name> <argument_list pos:start="263:19" pos:end="263:22">(<argument pos:start="263:20" pos:end="263:21"><expr pos:start="263:20" pos:end="263:21"><name pos:start="263:20" pos:end="263:21">Y0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="265:5" pos:end="265:23"><expr pos:start="265:5" pos:end="265:22"><name pos:start="265:5" pos:end="265:6">Y1</name> <operator pos:start="265:8" pos:end="265:8">=</operator> <call pos:start="265:10" pos:end="265:22"><name pos:start="265:10" pos:end="265:17">vec_clip</name> <argument_list pos:start="265:19" pos:end="265:22">(<argument pos:start="265:20" pos:end="265:21"><expr pos:start="265:20" pos:end="265:21"><name pos:start="265:20" pos:end="265:21">Y1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="267:5" pos:end="267:22"><expr pos:start="267:5" pos:end="267:21"><name pos:start="267:5" pos:end="267:5">U</name>  <operator pos:start="267:8" pos:end="267:8">=</operator> <call pos:start="267:10" pos:end="267:21"><name pos:start="267:10" pos:end="267:17">vec_clip</name> <argument_list pos:start="267:19" pos:end="267:21">(<argument pos:start="267:20" pos:end="267:20"><expr pos:start="267:20" pos:end="267:20"><name pos:start="267:20" pos:end="267:20">U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="269:5" pos:end="269:22"><expr pos:start="269:5" pos:end="269:21"><name pos:start="269:5" pos:end="269:5">V</name>  <operator pos:start="269:8" pos:end="269:8">=</operator> <call pos:start="269:10" pos:end="269:21"><name pos:start="269:10" pos:end="269:17">vec_clip</name> <argument_list pos:start="269:19" pos:end="269:21">(<argument pos:start="269:20" pos:end="269:20"><expr pos:start="269:20" pos:end="269:20"><name pos:start="269:20" pos:end="269:20">V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="273:5" pos:end="287:6">/* now we have

       Y0= y0 y1 y2 y3 y4 y5 y6 y7     Y1= y8 y9 y10 y11 y12 y13 y14 y15

       U= u0 u1 u2 u3 u4 u5 u6 u7      V= v0 v1 v2 v3 v4 v5 v6 v7



       Y0= y0 y1 y2 y3 y4 y5 y6 y7    Y1= y8 y9 y10 y11 y12 y13 y14 y15

       U0= u0 u0 u1 u1 u2 u2 u3 u3    U1= u4 u4 u5 u5 u6 u6 u7 u7

       V0= v0 v0 v1 v1 v2 v2 v3 v3    V1= v4 v4 v5 v5 v6 v6 v7 v7

    */</comment>



    <expr_stmt pos:start="291:5" pos:end="291:26"><expr pos:start="291:5" pos:end="291:25"><name pos:start="291:5" pos:end="291:6">U0</name> <operator pos:start="291:8" pos:end="291:8">=</operator> <call pos:start="291:10" pos:end="291:25"><name pos:start="291:10" pos:end="291:19">vec_mergeh</name> <argument_list pos:start="291:21" pos:end="291:25">(<argument pos:start="291:22" pos:end="291:22"><expr pos:start="291:22" pos:end="291:22"><name pos:start="291:22" pos:end="291:22">U</name></expr></argument>,<argument pos:start="291:24" pos:end="291:24"><expr pos:start="291:24" pos:end="291:24"><name pos:start="291:24" pos:end="291:24">U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="293:5" pos:end="293:26"><expr pos:start="293:5" pos:end="293:25"><name pos:start="293:5" pos:end="293:6">V0</name> <operator pos:start="293:8" pos:end="293:8">=</operator> <call pos:start="293:10" pos:end="293:25"><name pos:start="293:10" pos:end="293:19">vec_mergeh</name> <argument_list pos:start="293:21" pos:end="293:25">(<argument pos:start="293:22" pos:end="293:22"><expr pos:start="293:22" pos:end="293:22"><name pos:start="293:22" pos:end="293:22">V</name></expr></argument>,<argument pos:start="293:24" pos:end="293:24"><expr pos:start="293:24" pos:end="293:24"><name pos:start="293:24" pos:end="293:24">V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="297:5" pos:end="297:26"><expr pos:start="297:5" pos:end="297:25"><name pos:start="297:5" pos:end="297:6">U1</name> <operator pos:start="297:8" pos:end="297:8">=</operator> <call pos:start="297:10" pos:end="297:25"><name pos:start="297:10" pos:end="297:19">vec_mergel</name> <argument_list pos:start="297:21" pos:end="297:25">(<argument pos:start="297:22" pos:end="297:22"><expr pos:start="297:22" pos:end="297:22"><name pos:start="297:22" pos:end="297:22">U</name></expr></argument>,<argument pos:start="297:24" pos:end="297:24"><expr pos:start="297:24" pos:end="297:24"><name pos:start="297:24" pos:end="297:24">U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="299:5" pos:end="299:26"><expr pos:start="299:5" pos:end="299:25"><name pos:start="299:5" pos:end="299:6">V1</name> <operator pos:start="299:8" pos:end="299:8">=</operator> <call pos:start="299:10" pos:end="299:25"><name pos:start="299:10" pos:end="299:19">vec_mergel</name> <argument_list pos:start="299:21" pos:end="299:25">(<argument pos:start="299:22" pos:end="299:22"><expr pos:start="299:22" pos:end="299:22"><name pos:start="299:22" pos:end="299:22">V</name></expr></argument>,<argument pos:start="299:24" pos:end="299:24"><expr pos:start="299:24" pos:end="299:24"><name pos:start="299:24" pos:end="299:24">V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="303:5" pos:end="303:42"><expr pos:start="303:5" pos:end="303:41"><call pos:start="303:5" pos:end="303:41"><name pos:start="303:5" pos:end="303:15">cvtyuvtoRGB</name> <argument_list pos:start="303:17" pos:end="303:41">(<argument pos:start="303:18" pos:end="303:18"><expr pos:start="303:18" pos:end="303:18"><name pos:start="303:18" pos:end="303:18">c</name></expr></argument>, <argument pos:start="303:21" pos:end="303:22"><expr pos:start="303:21" pos:end="303:22"><name pos:start="303:21" pos:end="303:22">Y0</name></expr></argument>,<argument pos:start="303:24" pos:end="303:25"><expr pos:start="303:24" pos:end="303:25"><name pos:start="303:24" pos:end="303:25">U0</name></expr></argument>,<argument pos:start="303:27" pos:end="303:28"><expr pos:start="303:27" pos:end="303:28"><name pos:start="303:27" pos:end="303:28">V0</name></expr></argument>,<argument pos:start="303:30" pos:end="303:32"><expr pos:start="303:30" pos:end="303:32"><operator pos:start="303:30" pos:end="303:30">&amp;</operator><name pos:start="303:31" pos:end="303:32">R0</name></expr></argument>,<argument pos:start="303:34" pos:end="303:36"><expr pos:start="303:34" pos:end="303:36"><operator pos:start="303:34" pos:end="303:34">&amp;</operator><name pos:start="303:35" pos:end="303:36">G0</name></expr></argument>,<argument pos:start="303:38" pos:end="303:40"><expr pos:start="303:38" pos:end="303:40"><operator pos:start="303:38" pos:end="303:38">&amp;</operator><name pos:start="303:39" pos:end="303:40">B0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="305:5" pos:end="305:42"><expr pos:start="305:5" pos:end="305:41"><call pos:start="305:5" pos:end="305:41"><name pos:start="305:5" pos:end="305:15">cvtyuvtoRGB</name> <argument_list pos:start="305:17" pos:end="305:41">(<argument pos:start="305:18" pos:end="305:18"><expr pos:start="305:18" pos:end="305:18"><name pos:start="305:18" pos:end="305:18">c</name></expr></argument>, <argument pos:start="305:21" pos:end="305:22"><expr pos:start="305:21" pos:end="305:22"><name pos:start="305:21" pos:end="305:22">Y1</name></expr></argument>,<argument pos:start="305:24" pos:end="305:25"><expr pos:start="305:24" pos:end="305:25"><name pos:start="305:24" pos:end="305:25">U1</name></expr></argument>,<argument pos:start="305:27" pos:end="305:28"><expr pos:start="305:27" pos:end="305:28"><name pos:start="305:27" pos:end="305:28">V1</name></expr></argument>,<argument pos:start="305:30" pos:end="305:32"><expr pos:start="305:30" pos:end="305:32"><operator pos:start="305:30" pos:end="305:30">&amp;</operator><name pos:start="305:31" pos:end="305:32">R1</name></expr></argument>,<argument pos:start="305:34" pos:end="305:36"><expr pos:start="305:34" pos:end="305:36"><operator pos:start="305:34" pos:end="305:34">&amp;</operator><name pos:start="305:35" pos:end="305:36">G1</name></expr></argument>,<argument pos:start="305:38" pos:end="305:40"><expr pos:start="305:38" pos:end="305:40"><operator pos:start="305:38" pos:end="305:38">&amp;</operator><name pos:start="305:39" pos:end="305:40">B1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="309:5" pos:end="309:29"><expr pos:start="309:5" pos:end="309:28"><name pos:start="309:5" pos:end="309:5">R</name>  <operator pos:start="309:8" pos:end="309:8">=</operator> <call pos:start="309:10" pos:end="309:28"><name pos:start="309:10" pos:end="309:20">vec_packclp</name> <argument_list pos:start="309:22" pos:end="309:28">(<argument pos:start="309:23" pos:end="309:24"><expr pos:start="309:23" pos:end="309:24"><name pos:start="309:23" pos:end="309:24">R0</name></expr></argument>,<argument pos:start="309:26" pos:end="309:27"><expr pos:start="309:26" pos:end="309:27"><name pos:start="309:26" pos:end="309:27">R1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="311:5" pos:end="311:29"><expr pos:start="311:5" pos:end="311:28"><name pos:start="311:5" pos:end="311:5">G</name>  <operator pos:start="311:8" pos:end="311:8">=</operator> <call pos:start="311:10" pos:end="311:28"><name pos:start="311:10" pos:end="311:20">vec_packclp</name> <argument_list pos:start="311:22" pos:end="311:28">(<argument pos:start="311:23" pos:end="311:24"><expr pos:start="311:23" pos:end="311:24"><name pos:start="311:23" pos:end="311:24">G0</name></expr></argument>,<argument pos:start="311:26" pos:end="311:27"><expr pos:start="311:26" pos:end="311:27"><name pos:start="311:26" pos:end="311:27">G1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="313:5" pos:end="313:29"><expr pos:start="313:5" pos:end="313:28"><name pos:start="313:5" pos:end="313:5">B</name>  <operator pos:start="313:8" pos:end="313:8">=</operator> <call pos:start="313:10" pos:end="313:28"><name pos:start="313:10" pos:end="313:20">vec_packclp</name> <argument_list pos:start="313:22" pos:end="313:28">(<argument pos:start="313:23" pos:end="313:24"><expr pos:start="313:23" pos:end="313:24"><name pos:start="313:23" pos:end="313:24">B0</name></expr></argument>,<argument pos:start="313:26" pos:end="313:27"><expr pos:start="313:26" pos:end="313:27"><name pos:start="313:26" pos:end="313:27">B1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="317:5" pos:end="317:43"><expr pos:start="317:5" pos:end="317:42"><name pos:start="317:5" pos:end="317:8">nout</name> <operator pos:start="317:10" pos:end="317:10">=</operator> <operator pos:start="317:12" pos:end="317:12">(</operator><name pos:start="317:13" pos:end="317:18">vector</name> <name pos:start="317:20" pos:end="317:27">unsigned</name> <name pos:start="317:29" pos:end="317:32">char</name> <operator pos:start="317:34" pos:end="317:34">*</operator><operator pos:start="317:35" pos:end="317:35">)</operator><name pos:start="317:36" pos:end="317:42">scratch</name></expr>;</expr_stmt>

    <expr_stmt pos:start="319:5" pos:end="319:26"><expr pos:start="319:5" pos:end="319:25"><call pos:start="319:5" pos:end="319:25"><name pos:start="319:5" pos:end="319:12">out_rgba</name> <argument_list pos:start="319:14" pos:end="319:25">(<argument pos:start="319:15" pos:end="319:15"><expr pos:start="319:15" pos:end="319:15"><name pos:start="319:15" pos:end="319:15">R</name></expr></argument>,<argument pos:start="319:17" pos:end="319:17"><expr pos:start="319:17" pos:end="319:17"><name pos:start="319:17" pos:end="319:17">G</name></expr></argument>,<argument pos:start="319:19" pos:end="319:19"><expr pos:start="319:19" pos:end="319:19"><name pos:start="319:19" pos:end="319:19">B</name></expr></argument>,<argument pos:start="319:21" pos:end="319:24"><expr pos:start="319:21" pos:end="319:24"><name pos:start="319:21" pos:end="319:24">nout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="323:5" pos:end="323:56"><expr pos:start="323:5" pos:end="323:55"><call pos:start="323:5" pos:end="323:55"><name pos:start="323:5" pos:end="323:10">memcpy</name> <argument_list pos:start="323:12" pos:end="323:55">(<argument pos:start="323:13" pos:end="323:33"><expr pos:start="323:13" pos:end="323:33"><operator pos:start="323:13" pos:end="323:13">&amp;</operator><operator pos:start="323:14" pos:end="323:14">(</operator><operator pos:start="323:15" pos:end="323:15">(</operator><name pos:start="323:16" pos:end="323:23">uint32_t</name><operator pos:start="323:24" pos:end="323:24">*</operator><operator pos:start="323:25" pos:end="323:25">)</operator><name pos:start="323:26" pos:end="323:29">dest</name><operator pos:start="323:30" pos:end="323:30">)</operator><index pos:start="323:31" pos:end="323:33">[<expr pos:start="323:32" pos:end="323:32"><name pos:start="323:32" pos:end="323:32">i</name></expr>]</index></expr></argument>, <argument pos:start="323:36" pos:end="323:42"><expr pos:start="323:36" pos:end="323:42"><name pos:start="323:36" pos:end="323:42">scratch</name></expr></argument>, <argument pos:start="323:45" pos:end="323:54"><expr pos:start="323:45" pos:end="323:54"><operator pos:start="323:45" pos:end="323:45">(</operator><name pos:start="323:46" pos:end="323:49">dstW</name><operator pos:start="323:50" pos:end="323:50">-</operator><name pos:start="323:51" pos:end="323:51">i</name><operator pos:start="323:52" pos:end="323:52">)</operator><operator pos:start="323:53" pos:end="323:53">/</operator><literal type="number" pos:start="323:54" pos:end="323:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  </block_content>}</block></if></if_stmt>



  <if_stmt pos:start="329:3" pos:end="329:40"><if pos:start="329:3" pos:end="329:40">if <condition pos:start="329:6" pos:end="329:19">(<expr pos:start="329:7" pos:end="329:18"><name pos:start="329:7" pos:end="329:18">vYCoeffsBank</name></expr>)</condition><block type="pseudo" pos:start="329:21" pos:end="329:40"><block_content pos:start="329:21" pos:end="329:40"> <expr_stmt pos:start="329:21" pos:end="329:40"><expr pos:start="329:21" pos:end="329:39"><call pos:start="329:21" pos:end="329:39"><name pos:start="329:21" pos:end="329:24">free</name> <argument_list pos:start="329:26" pos:end="329:39">(<argument pos:start="329:27" pos:end="329:38"><expr pos:start="329:27" pos:end="329:38"><name pos:start="329:27" pos:end="329:38">vYCoeffsBank</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

  <if_stmt pos:start="331:3" pos:end="331:40"><if pos:start="331:3" pos:end="331:40">if <condition pos:start="331:6" pos:end="331:19">(<expr pos:start="331:7" pos:end="331:18"><name pos:start="331:7" pos:end="331:18">vCCoeffsBank</name></expr>)</condition><block type="pseudo" pos:start="331:21" pos:end="331:40"><block_content pos:start="331:21" pos:end="331:40"> <expr_stmt pos:start="331:21" pos:end="331:40"><expr pos:start="331:21" pos:end="331:39"><call pos:start="331:21" pos:end="331:39"><name pos:start="331:21" pos:end="331:24">free</name> <argument_list pos:start="331:26" pos:end="331:39">(<argument pos:start="331:27" pos:end="331:38"><expr pos:start="331:27" pos:end="331:38"><name pos:start="331:27" pos:end="331:38">vCCoeffsBank</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



</block_content>}</block>
</unit>
