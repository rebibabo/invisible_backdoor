<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4259.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">av_blowfish_crypt</name><parameter_list pos:start="1:23" pos:end="3:59">(<parameter pos:start="1:24" pos:end="1:38"><decl pos:start="1:24" pos:end="1:38"><type pos:start="1:24" pos:end="1:38"><name pos:start="1:24" pos:end="1:33">AVBlowfish</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">ctx</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:52"><decl pos:start="1:41" pos:end="1:52"><type pos:start="1:41" pos:end="1:52"><name pos:start="1:41" pos:end="1:47">uint8_t</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">dst</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:72"><decl pos:start="1:55" pos:end="1:72"><type pos:start="1:55" pos:end="1:72"><specifier pos:start="1:55" pos:end="1:59">const</specifier> <name pos:start="1:61" pos:end="1:67">uint8_t</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:72">src</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:32"><decl pos:start="3:24" pos:end="3:32"><type pos:start="3:24" pos:end="3:32"><name pos:start="3:24" pos:end="3:26">int</name></type> <name pos:start="3:28" pos:end="3:32">count</name></decl></parameter>, <parameter pos:start="3:35" pos:end="3:45"><decl pos:start="3:35" pos:end="3:45"><type pos:start="3:35" pos:end="3:45"><name pos:start="3:35" pos:end="3:41">uint8_t</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:45">iv</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:58"><decl pos:start="3:48" pos:end="3:58"><type pos:start="3:48" pos:end="3:58"><name pos:start="3:48" pos:end="3:50">int</name></type> <name pos:start="3:52" pos:end="3:58">decrypt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="91:1">{<block_content pos:start="7:5" pos:end="89:5">

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:15">v0</name></decl>, <decl pos:start="7:18" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:18" pos:end="7:19">v1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <while pos:start="13:5" pos:end="89:5">while <condition pos:start="13:11" pos:end="13:21">(<expr pos:start="13:12" pos:end="13:20"><name pos:start="13:12" pos:end="13:16">count</name> <operator pos:start="13:18" pos:end="13:18">&gt;</operator> <literal type="number" pos:start="13:20" pos:end="13:20">0</literal></expr>)</condition> <block pos:start="13:23" pos:end="89:5">{<block_content pos:start="15:9" pos:end="87:19">

        <if_stmt pos:start="15:9" pos:end="79:9"><if pos:start="15:9" pos:end="43:9">if <condition pos:start="15:12" pos:end="15:20">(<expr pos:start="15:13" pos:end="15:19"><name pos:start="15:13" pos:end="15:19">decrypt</name></expr>)</condition> <block pos:start="15:22" pos:end="43:9">{<block_content pos:start="17:13" pos:end="41:13">

            <expr_stmt pos:start="17:13" pos:end="17:30"><expr pos:start="17:13" pos:end="17:29"><name pos:start="17:13" pos:end="17:14">v0</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <call pos:start="17:18" pos:end="17:29"><name pos:start="17:18" pos:end="17:24">AV_RB32</name><argument_list pos:start="17:25" pos:end="17:29">(<argument pos:start="17:26" pos:end="17:28"><expr pos:start="17:26" pos:end="17:28"><name pos:start="17:26" pos:end="17:28">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="19:13" pos:end="19:34"><expr pos:start="19:13" pos:end="19:33"><name pos:start="19:13" pos:end="19:14">v1</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <call pos:start="19:18" pos:end="19:33"><name pos:start="19:18" pos:end="19:24">AV_RB32</name><argument_list pos:start="19:25" pos:end="19:33">(<argument pos:start="19:26" pos:end="19:32"><expr pos:start="19:26" pos:end="19:32"><name pos:start="19:26" pos:end="19:28">src</name> <operator pos:start="19:30" pos:end="19:30">+</operator> <literal type="number" pos:start="19:32" pos:end="19:32">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="23:13" pos:end="23:58"><expr pos:start="23:13" pos:end="23:57"><call pos:start="23:13" pos:end="23:57"><name pos:start="23:13" pos:end="23:33">av_blowfish_crypt_ecb</name><argument_list pos:start="23:34" pos:end="23:57">(<argument pos:start="23:35" pos:end="23:37"><expr pos:start="23:35" pos:end="23:37"><name pos:start="23:35" pos:end="23:37">ctx</name></expr></argument>, <argument pos:start="23:40" pos:end="23:42"><expr pos:start="23:40" pos:end="23:42"><operator pos:start="23:40" pos:end="23:40">&amp;</operator><name pos:start="23:41" pos:end="23:42">v0</name></expr></argument>, <argument pos:start="23:45" pos:end="23:47"><expr pos:start="23:45" pos:end="23:47"><operator pos:start="23:45" pos:end="23:45">&amp;</operator><name pos:start="23:46" pos:end="23:47">v1</name></expr></argument>, <argument pos:start="23:50" pos:end="23:56"><expr pos:start="23:50" pos:end="23:56"><name pos:start="23:50" pos:end="23:56">decrypt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="27:13" pos:end="27:29"><expr pos:start="27:13" pos:end="27:28"><call pos:start="27:13" pos:end="27:28"><name pos:start="27:13" pos:end="27:19">AV_WB32</name><argument_list pos:start="27:20" pos:end="27:28">(<argument pos:start="27:21" pos:end="27:23"><expr pos:start="27:21" pos:end="27:23"><name pos:start="27:21" pos:end="27:23">dst</name></expr></argument>, <argument pos:start="27:26" pos:end="27:27"><expr pos:start="27:26" pos:end="27:27"><name pos:start="27:26" pos:end="27:27">v0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:33"><expr pos:start="29:13" pos:end="29:32"><call pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:19">AV_WB32</name><argument_list pos:start="29:20" pos:end="29:32">(<argument pos:start="29:21" pos:end="29:27"><expr pos:start="29:21" pos:end="29:27"><name pos:start="29:21" pos:end="29:23">dst</name> <operator pos:start="29:25" pos:end="29:25">+</operator> <literal type="number" pos:start="29:27" pos:end="29:27">4</literal></expr></argument>, <argument pos:start="29:30" pos:end="29:31"><expr pos:start="29:30" pos:end="29:31"><name pos:start="29:30" pos:end="29:31">v1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="33:13" pos:end="41:13"><if pos:start="33:13" pos:end="41:13">if <condition pos:start="33:16" pos:end="33:19">(<expr pos:start="33:17" pos:end="33:18"><name pos:start="33:17" pos:end="33:18">iv</name></expr>)</condition> <block pos:start="33:21" pos:end="41:13">{<block_content pos:start="35:17" pos:end="39:35">

                <for pos:start="35:17" pos:end="37:44">for <control pos:start="35:21" pos:end="35:39">(<init pos:start="35:22" pos:end="35:27"><expr pos:start="35:22" pos:end="35:26"><name pos:start="35:22" pos:end="35:22">i</name> <operator pos:start="35:24" pos:end="35:24">=</operator> <literal type="number" pos:start="35:26" pos:end="35:26">0</literal></expr>;</init> <condition pos:start="35:29" pos:end="35:34"><expr pos:start="35:29" pos:end="35:33"><name pos:start="35:29" pos:end="35:29">i</name> <operator pos:start="35:31" pos:end="35:31">&lt;</operator> <literal type="number" pos:start="35:33" pos:end="35:33">8</literal></expr>;</condition> <incr pos:start="35:36" pos:end="35:38"><expr pos:start="35:36" pos:end="35:38"><name pos:start="35:36" pos:end="35:36">i</name><operator pos:start="35:37" pos:end="35:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="37:21" pos:end="37:44"><block_content pos:start="37:21" pos:end="37:44">

                    <expr_stmt pos:start="37:21" pos:end="37:44"><expr pos:start="37:21" pos:end="37:43"><name pos:start="37:21" pos:end="37:26"><name pos:start="37:21" pos:end="37:23">dst</name><index pos:start="37:24" pos:end="37:26">[<expr pos:start="37:25" pos:end="37:25"><name pos:start="37:25" pos:end="37:25">i</name></expr>]</index></name> <operator pos:start="37:28" pos:end="37:28">=</operator> <name pos:start="37:30" pos:end="37:35"><name pos:start="37:30" pos:end="37:32">dst</name><index pos:start="37:33" pos:end="37:35">[<expr pos:start="37:34" pos:end="37:34"><name pos:start="37:34" pos:end="37:34">i</name></expr>]</index></name> <operator pos:start="37:37" pos:end="37:37">^</operator> <name pos:start="37:39" pos:end="37:43"><name pos:start="37:39" pos:end="37:40">iv</name><index pos:start="37:41" pos:end="37:43">[<expr pos:start="37:42" pos:end="37:42"><name pos:start="37:42" pos:end="37:42">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="39:17" pos:end="39:35"><expr pos:start="39:17" pos:end="39:34"><call pos:start="39:17" pos:end="39:34"><name pos:start="39:17" pos:end="39:22">memcpy</name><argument_list pos:start="39:23" pos:end="39:34">(<argument pos:start="39:24" pos:end="39:25"><expr pos:start="39:24" pos:end="39:25"><name pos:start="39:24" pos:end="39:25">iv</name></expr></argument>, <argument pos:start="39:28" pos:end="39:30"><expr pos:start="39:28" pos:end="39:30"><name pos:start="39:28" pos:end="39:30">src</name></expr></argument>, <argument pos:start="39:33" pos:end="39:33"><expr pos:start="39:33" pos:end="39:33"><literal type="number" pos:start="39:33" pos:end="39:33">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="43:11" pos:end="79:9">else <block pos:start="43:16" pos:end="79:9">{<block_content pos:start="45:13" pos:end="77:35">

            <if_stmt pos:start="45:13" pos:end="61:13"><if pos:start="45:13" pos:end="55:13">if <condition pos:start="45:16" pos:end="45:19">(<expr pos:start="45:17" pos:end="45:18"><name pos:start="45:17" pos:end="45:18">iv</name></expr>)</condition> <block pos:start="45:21" pos:end="55:13">{<block_content pos:start="47:17" pos:end="53:38">

                <for pos:start="47:17" pos:end="49:44">for <control pos:start="47:21" pos:end="47:39">(<init pos:start="47:22" pos:end="47:27"><expr pos:start="47:22" pos:end="47:26"><name pos:start="47:22" pos:end="47:22">i</name> <operator pos:start="47:24" pos:end="47:24">=</operator> <literal type="number" pos:start="47:26" pos:end="47:26">0</literal></expr>;</init> <condition pos:start="47:29" pos:end="47:34"><expr pos:start="47:29" pos:end="47:33"><name pos:start="47:29" pos:end="47:29">i</name> <operator pos:start="47:31" pos:end="47:31">&lt;</operator> <literal type="number" pos:start="47:33" pos:end="47:33">8</literal></expr>;</condition> <incr pos:start="47:36" pos:end="47:38"><expr pos:start="47:36" pos:end="47:38"><name pos:start="47:36" pos:end="47:36">i</name><operator pos:start="47:37" pos:end="47:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="49:21" pos:end="49:44"><block_content pos:start="49:21" pos:end="49:44">

                    <expr_stmt pos:start="49:21" pos:end="49:44"><expr pos:start="49:21" pos:end="49:43"><name pos:start="49:21" pos:end="49:26"><name pos:start="49:21" pos:end="49:23">dst</name><index pos:start="49:24" pos:end="49:26">[<expr pos:start="49:25" pos:end="49:25"><name pos:start="49:25" pos:end="49:25">i</name></expr>]</index></name> <operator pos:start="49:28" pos:end="49:28">=</operator> <name pos:start="49:30" pos:end="49:35"><name pos:start="49:30" pos:end="49:32">src</name><index pos:start="49:33" pos:end="49:35">[<expr pos:start="49:34" pos:end="49:34"><name pos:start="49:34" pos:end="49:34">i</name></expr>]</index></name> <operator pos:start="49:37" pos:end="49:37">^</operator> <name pos:start="49:39" pos:end="49:43"><name pos:start="49:39" pos:end="49:40">iv</name><index pos:start="49:41" pos:end="49:43">[<expr pos:start="49:42" pos:end="49:42"><name pos:start="49:42" pos:end="49:42">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="51:17" pos:end="51:34"><expr pos:start="51:17" pos:end="51:33"><name pos:start="51:17" pos:end="51:18">v0</name> <operator pos:start="51:20" pos:end="51:20">=</operator> <call pos:start="51:22" pos:end="51:33"><name pos:start="51:22" pos:end="51:28">AV_RB32</name><argument_list pos:start="51:29" pos:end="51:33">(<argument pos:start="51:30" pos:end="51:32"><expr pos:start="51:30" pos:end="51:32"><name pos:start="51:30" pos:end="51:32">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:38"><expr pos:start="53:17" pos:end="53:37"><name pos:start="53:17" pos:end="53:18">v1</name> <operator pos:start="53:20" pos:end="53:20">=</operator> <call pos:start="53:22" pos:end="53:37"><name pos:start="53:22" pos:end="53:28">AV_RB32</name><argument_list pos:start="53:29" pos:end="53:37">(<argument pos:start="53:30" pos:end="53:36"><expr pos:start="53:30" pos:end="53:36"><name pos:start="53:30" pos:end="53:32">dst</name> <operator pos:start="53:34" pos:end="53:34">+</operator> <literal type="number" pos:start="53:36" pos:end="53:36">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="55:15" pos:end="61:13">else <block pos:start="55:20" pos:end="61:13">{<block_content pos:start="57:17" pos:end="59:38">

                <expr_stmt pos:start="57:17" pos:end="57:34"><expr pos:start="57:17" pos:end="57:33"><name pos:start="57:17" pos:end="57:18">v0</name> <operator pos:start="57:20" pos:end="57:20">=</operator> <call pos:start="57:22" pos:end="57:33"><name pos:start="57:22" pos:end="57:28">AV_RB32</name><argument_list pos:start="57:29" pos:end="57:33">(<argument pos:start="57:30" pos:end="57:32"><expr pos:start="57:30" pos:end="57:32"><name pos:start="57:30" pos:end="57:32">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:38"><expr pos:start="59:17" pos:end="59:37"><name pos:start="59:17" pos:end="59:18">v1</name> <operator pos:start="59:20" pos:end="59:20">=</operator> <call pos:start="59:22" pos:end="59:37"><name pos:start="59:22" pos:end="59:28">AV_RB32</name><argument_list pos:start="59:29" pos:end="59:37">(<argument pos:start="59:30" pos:end="59:36"><expr pos:start="59:30" pos:end="59:36"><name pos:start="59:30" pos:end="59:32">src</name> <operator pos:start="59:34" pos:end="59:34">+</operator> <literal type="number" pos:start="59:36" pos:end="59:36">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="65:13" pos:end="65:58"><expr pos:start="65:13" pos:end="65:57"><call pos:start="65:13" pos:end="65:57"><name pos:start="65:13" pos:end="65:33">av_blowfish_crypt_ecb</name><argument_list pos:start="65:34" pos:end="65:57">(<argument pos:start="65:35" pos:end="65:37"><expr pos:start="65:35" pos:end="65:37"><name pos:start="65:35" pos:end="65:37">ctx</name></expr></argument>, <argument pos:start="65:40" pos:end="65:42"><expr pos:start="65:40" pos:end="65:42"><operator pos:start="65:40" pos:end="65:40">&amp;</operator><name pos:start="65:41" pos:end="65:42">v0</name></expr></argument>, <argument pos:start="65:45" pos:end="65:47"><expr pos:start="65:45" pos:end="65:47"><operator pos:start="65:45" pos:end="65:45">&amp;</operator><name pos:start="65:46" pos:end="65:47">v1</name></expr></argument>, <argument pos:start="65:50" pos:end="65:56"><expr pos:start="65:50" pos:end="65:56"><name pos:start="65:50" pos:end="65:56">decrypt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="69:13" pos:end="69:29"><expr pos:start="69:13" pos:end="69:28"><call pos:start="69:13" pos:end="69:28"><name pos:start="69:13" pos:end="69:19">AV_WB32</name><argument_list pos:start="69:20" pos:end="69:28">(<argument pos:start="69:21" pos:end="69:23"><expr pos:start="69:21" pos:end="69:23"><name pos:start="69:21" pos:end="69:23">dst</name></expr></argument>, <argument pos:start="69:26" pos:end="69:27"><expr pos:start="69:26" pos:end="69:27"><name pos:start="69:26" pos:end="69:27">v0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:33"><expr pos:start="71:13" pos:end="71:32"><call pos:start="71:13" pos:end="71:32"><name pos:start="71:13" pos:end="71:19">AV_WB32</name><argument_list pos:start="71:20" pos:end="71:32">(<argument pos:start="71:21" pos:end="71:27"><expr pos:start="71:21" pos:end="71:27"><name pos:start="71:21" pos:end="71:23">dst</name> <operator pos:start="71:25" pos:end="71:25">+</operator> <literal type="number" pos:start="71:27" pos:end="71:27">4</literal></expr></argument>, <argument pos:start="71:30" pos:end="71:31"><expr pos:start="71:30" pos:end="71:31"><name pos:start="71:30" pos:end="71:31">v1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="75:13" pos:end="77:35"><if pos:start="75:13" pos:end="77:35">if <condition pos:start="75:16" pos:end="75:19">(<expr pos:start="75:17" pos:end="75:18"><name pos:start="75:17" pos:end="75:18">iv</name></expr>)</condition><block type="pseudo" pos:start="77:17" pos:end="77:35"><block_content pos:start="77:17" pos:end="77:35">

                <expr_stmt pos:start="77:17" pos:end="77:35"><expr pos:start="77:17" pos:end="77:34"><call pos:start="77:17" pos:end="77:34"><name pos:start="77:17" pos:end="77:22">memcpy</name><argument_list pos:start="77:23" pos:end="77:34">(<argument pos:start="77:24" pos:end="77:25"><expr pos:start="77:24" pos:end="77:25"><name pos:start="77:24" pos:end="77:25">iv</name></expr></argument>, <argument pos:start="77:28" pos:end="77:30"><expr pos:start="77:28" pos:end="77:30"><name pos:start="77:28" pos:end="77:30">dst</name></expr></argument>, <argument pos:start="77:33" pos:end="77:33"><expr pos:start="77:33" pos:end="77:33"><literal type="number" pos:start="77:33" pos:end="77:33">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:19"><expr pos:start="83:9" pos:end="83:18"><name pos:start="83:9" pos:end="83:11">src</name>   <operator pos:start="83:15" pos:end="83:16">+=</operator> <literal type="number" pos:start="83:18" pos:end="83:18">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:19"><expr pos:start="85:9" pos:end="85:18"><name pos:start="85:9" pos:end="85:11">dst</name>   <operator pos:start="85:15" pos:end="85:16">+=</operator> <literal type="number" pos:start="85:18" pos:end="85:18">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:19"><expr pos:start="87:9" pos:end="87:18"><name pos:start="87:9" pos:end="87:13">count</name> <operator pos:start="87:15" pos:end="87:16">-=</operator> <literal type="number" pos:start="87:18" pos:end="87:18">8</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
