<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18109.c" pos:tabs="8"><macro pos:start="1:1" pos:end="5:58"><name pos:start="1:1" pos:end="1:12">build_header</name><argument_list pos:start="1:13" pos:end="5:58">(<argument pos:start="1:14" pos:end="1:31">BIOSLinker *linker</argument>, <argument pos:start="1:34" pos:end="1:51">GArray *table_data</argument>,

             <argument pos:start="3:14" pos:end="3:31">AcpiTableHeader *h</argument>, <argument pos:start="3:34" pos:end="3:48">const char *sig</argument>, <argument pos:start="3:51" pos:end="3:57">int len</argument>, <argument pos:start="3:60" pos:end="3:70">uint8_t rev</argument>,

             <argument pos:start="5:14" pos:end="5:31">const char *oem_id</argument>, <argument pos:start="5:34" pos:end="5:57">const char *oem_table_id</argument>)</argument_list></macro>

<block pos:start="7:1" pos:end="57:1">{<block_content pos:start="9:5" pos:end="55:58">

    <expr_stmt pos:start="9:5" pos:end="9:34"><expr pos:start="9:5" pos:end="9:33"><call pos:start="9:5" pos:end="9:33"><name pos:start="9:5" pos:end="9:10">memcpy</name><argument_list pos:start="9:11" pos:end="9:33">(<argument pos:start="9:12" pos:end="9:24"><expr pos:start="9:12" pos:end="9:24"><operator pos:start="9:12" pos:end="9:12">&amp;</operator><name pos:start="9:13" pos:end="9:24"><name pos:start="9:13" pos:end="9:13">h</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:24">signature</name></name></expr></argument>, <argument pos:start="9:27" pos:end="9:29"><expr pos:start="9:27" pos:end="9:29"><name pos:start="9:27" pos:end="9:29">sig</name></expr></argument>, <argument pos:start="9:32" pos:end="9:32"><expr pos:start="9:32" pos:end="9:32"><literal type="number" pos:start="9:32" pos:end="9:32">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:33"><expr pos:start="11:5" pos:end="11:32"><name pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:5">h</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:13">length</name></name> <operator pos:start="11:15" pos:end="11:15">=</operator> <call pos:start="11:17" pos:end="11:32"><name pos:start="11:17" pos:end="11:27">cpu_to_le32</name><argument_list pos:start="11:28" pos:end="11:32">(<argument pos:start="11:29" pos:end="11:31"><expr pos:start="11:29" pos:end="11:31"><name pos:start="11:29" pos:end="11:31">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:22"><expr pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:5">h</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:15">revision</name></name> <operator pos:start="13:17" pos:end="13:17">=</operator> <name pos:start="13:19" pos:end="13:21">rev</name></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:15">(<expr pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:14">oem_id</name></expr>)</condition> <block pos:start="17:17" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:61">

        <expr_stmt pos:start="19:9" pos:end="19:61"><expr pos:start="19:9" pos:end="19:60"><call pos:start="19:9" pos:end="19:60"><name pos:start="19:9" pos:end="19:15">strncpy</name><argument_list pos:start="19:16" pos:end="19:60">(<argument pos:start="19:17" pos:end="19:33"><expr pos:start="19:17" pos:end="19:33"><operator pos:start="19:17" pos:end="19:17">(</operator><name pos:start="19:18" pos:end="19:21">char</name> <operator pos:start="19:23" pos:end="19:23">*</operator><operator pos:start="19:24" pos:end="19:24">)</operator><name pos:start="19:25" pos:end="19:33"><name pos:start="19:25" pos:end="19:25">h</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:33">oem_id</name></name></expr></argument>, <argument pos:start="19:36" pos:end="19:41"><expr pos:start="19:36" pos:end="19:41"><name pos:start="19:36" pos:end="19:41">oem_id</name></expr></argument>, <argument pos:start="19:44" pos:end="19:59"><expr pos:start="19:44" pos:end="19:59"><sizeof pos:start="19:44" pos:end="19:59">sizeof <name pos:start="19:51" pos:end="19:59"><name pos:start="19:51" pos:end="19:51">h</name><operator pos:start="19:52" pos:end="19:53">-&gt;</operator><name pos:start="19:54" pos:end="19:59">oem_id</name></name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="25:5">else <block pos:start="21:12" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:50">

        <expr_stmt pos:start="23:9" pos:end="23:50"><expr pos:start="23:9" pos:end="23:49"><call pos:start="23:9" pos:end="23:49"><name pos:start="23:9" pos:end="23:14">memcpy</name><argument_list pos:start="23:15" pos:end="23:49">(<argument pos:start="23:16" pos:end="23:24"><expr pos:start="23:16" pos:end="23:24"><name pos:start="23:16" pos:end="23:24"><name pos:start="23:16" pos:end="23:16">h</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:24">oem_id</name></name></expr></argument>, <argument pos:start="23:27" pos:end="23:45"><expr pos:start="23:27" pos:end="23:45"><name pos:start="23:27" pos:end="23:45">ACPI_BUILD_APPNAME6</name></expr></argument>, <argument pos:start="23:48" pos:end="23:48"><expr pos:start="23:48" pos:end="23:48"><literal type="number" pos:start="23:48" pos:end="23:48">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="29:5" pos:end="39:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:21">(<expr pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:20">oem_table_id</name></expr>)</condition> <block pos:start="29:23" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:80">

        <expr_stmt pos:start="31:9" pos:end="31:80"><expr pos:start="31:9" pos:end="31:79"><call pos:start="31:9" pos:end="31:79"><name pos:start="31:9" pos:end="31:15">strncpy</name><argument_list pos:start="31:16" pos:end="31:79">(<argument pos:start="31:17" pos:end="31:39"><expr pos:start="31:17" pos:end="31:39"><operator pos:start="31:17" pos:end="31:17">(</operator><name pos:start="31:18" pos:end="31:21">char</name> <operator pos:start="31:23" pos:end="31:23">*</operator><operator pos:start="31:24" pos:end="31:24">)</operator><name pos:start="31:25" pos:end="31:39"><name pos:start="31:25" pos:end="31:25">h</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:39">oem_table_id</name></name></expr></argument>, <argument pos:start="31:42" pos:end="31:53"><expr pos:start="31:42" pos:end="31:53"><name pos:start="31:42" pos:end="31:53">oem_table_id</name></expr></argument>, <argument pos:start="31:56" pos:end="31:78"><expr pos:start="31:56" pos:end="31:78"><sizeof pos:start="31:56" pos:end="31:78">sizeof<argument_list pos:start="31:62" pos:end="31:78">(<argument pos:start="31:63" pos:end="31:77"><expr pos:start="31:63" pos:end="31:77"><name pos:start="31:63" pos:end="31:77"><name pos:start="31:63" pos:end="31:63">h</name><operator pos:start="31:64" pos:end="31:65">-&gt;</operator><name pos:start="31:66" pos:end="31:77">oem_table_id</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="39:5">else <block pos:start="33:12" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:44">

        <expr_stmt pos:start="35:9" pos:end="35:56"><expr pos:start="35:9" pos:end="35:55"><call pos:start="35:9" pos:end="35:55"><name pos:start="35:9" pos:end="35:14">memcpy</name><argument_list pos:start="35:15" pos:end="35:55">(<argument pos:start="35:16" pos:end="35:30"><expr pos:start="35:16" pos:end="35:30"><name pos:start="35:16" pos:end="35:30"><name pos:start="35:16" pos:end="35:16">h</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:30">oem_table_id</name></name></expr></argument>, <argument pos:start="35:33" pos:end="35:51"><expr pos:start="35:33" pos:end="35:51"><name pos:start="35:33" pos:end="35:51">ACPI_BUILD_APPNAME4</name></expr></argument>, <argument pos:start="35:54" pos:end="35:54"><expr pos:start="35:54" pos:end="35:54"><literal type="number" pos:start="35:54" pos:end="35:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:44"><expr pos:start="37:9" pos:end="37:43"><call pos:start="37:9" pos:end="37:43"><name pos:start="37:9" pos:end="37:14">memcpy</name><argument_list pos:start="37:15" pos:end="37:43">(<argument pos:start="37:16" pos:end="37:34"><expr pos:start="37:16" pos:end="37:34"><name pos:start="37:16" pos:end="37:30"><name pos:start="37:16" pos:end="37:16">h</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:30">oem_table_id</name></name> <operator pos:start="37:32" pos:end="37:32">+</operator> <literal type="number" pos:start="37:34" pos:end="37:34">4</literal></expr></argument>, <argument pos:start="37:37" pos:end="37:39"><expr pos:start="37:37" pos:end="37:39"><name pos:start="37:37" pos:end="37:39">sig</name></expr></argument>, <argument pos:start="37:42" pos:end="37:42"><expr pos:start="37:42" pos:end="37:42"><literal type="number" pos:start="37:42" pos:end="37:42">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:37"><expr pos:start="43:5" pos:end="43:36"><name pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:5">h</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:19">oem_revision</name></name> <operator pos:start="43:21" pos:end="43:21">=</operator> <call pos:start="43:23" pos:end="43:36"><name pos:start="43:23" pos:end="43:33">cpu_to_le32</name><argument_list pos:start="43:34" pos:end="43:36">(<argument pos:start="43:35" pos:end="43:35"><expr pos:start="43:35" pos:end="43:35"><literal type="number" pos:start="43:35" pos:end="43:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:55"><expr pos:start="45:5" pos:end="45:54"><call pos:start="45:5" pos:end="45:54"><name pos:start="45:5" pos:end="45:10">memcpy</name><argument_list pos:start="45:11" pos:end="45:54">(<argument pos:start="45:12" pos:end="45:29"><expr pos:start="45:12" pos:end="45:29"><name pos:start="45:12" pos:end="45:29"><name pos:start="45:12" pos:end="45:12">h</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:29">asl_compiler_id</name></name></expr></argument>, <argument pos:start="45:32" pos:end="45:50"><expr pos:start="45:32" pos:end="45:50"><name pos:start="45:32" pos:end="45:50">ACPI_BUILD_APPNAME4</name></expr></argument>, <argument pos:start="45:53" pos:end="45:53"><expr pos:start="45:53" pos:end="45:53"><literal type="number" pos:start="45:53" pos:end="45:53">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:46"><expr pos:start="47:5" pos:end="47:45"><name pos:start="47:5" pos:end="47:28"><name pos:start="47:5" pos:end="47:5">h</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:28">asl_compiler_revision</name></name> <operator pos:start="47:30" pos:end="47:30">=</operator> <call pos:start="47:32" pos:end="47:45"><name pos:start="47:32" pos:end="47:42">cpu_to_le32</name><argument_list pos:start="47:43" pos:end="47:45">(<argument pos:start="47:44" pos:end="47:44"><expr pos:start="47:44" pos:end="47:44"><literal type="number" pos:start="47:44" pos:end="47:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:20"><expr pos:start="49:5" pos:end="49:19"><name pos:start="49:5" pos:end="49:15"><name pos:start="49:5" pos:end="49:5">h</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:15">checksum</name></name> <operator pos:start="49:17" pos:end="49:17">=</operator> <literal type="number" pos:start="49:19" pos:end="49:19">0</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="51:5" pos:end="51:50">/* Checksum to be filled in by Guest linker */</comment>

    <expr_stmt pos:start="53:5" pos:end="55:58"><expr pos:start="53:5" pos:end="55:57"><call pos:start="53:5" pos:end="55:57"><name pos:start="53:5" pos:end="53:35">bios_linker_loader_add_checksum</name><argument_list pos:start="53:36" pos:end="55:57">(<argument pos:start="53:37" pos:end="53:42"><expr pos:start="53:37" pos:end="53:42"><name pos:start="53:37" pos:end="53:42">linker</name></expr></argument>, <argument pos:start="53:45" pos:end="53:65"><expr pos:start="53:45" pos:end="53:65"><name pos:start="53:45" pos:end="53:65">ACPI_BUILD_TABLE_FILE</name></expr></argument>,

                                    <argument pos:start="55:37" pos:end="55:37"><expr pos:start="55:37" pos:end="55:37"><name pos:start="55:37" pos:end="55:37">h</name></expr></argument>, <argument pos:start="55:40" pos:end="55:42"><expr pos:start="55:40" pos:end="55:42"><name pos:start="55:40" pos:end="55:42">len</name></expr></argument>, <argument pos:start="55:45" pos:end="55:56"><expr pos:start="55:45" pos:end="55:56"><operator pos:start="55:45" pos:end="55:45">&amp;</operator><name pos:start="55:46" pos:end="55:56"><name pos:start="55:46" pos:end="55:46">h</name><operator pos:start="55:47" pos:end="55:48">-&gt;</operator><name pos:start="55:49" pos:end="55:56">checksum</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
