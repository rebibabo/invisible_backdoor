<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15829.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:35">bdrv_exceed_iops_limits</name><parameter_list pos:start="1:36" pos:end="3:65">(<parameter pos:start="1:37" pos:end="1:56"><decl pos:start="1:37" pos:end="1:56"><type pos:start="1:37" pos:end="1:56"><name pos:start="1:37" pos:end="1:52">BlockDriverState</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:56">bs</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:71"><decl pos:start="1:59" pos:end="1:71"><type pos:start="1:59" pos:end="1:71"><name pos:start="1:59" pos:end="1:62">bool</name></type> <name pos:start="1:64" pos:end="1:71">is_write</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:48"><decl pos:start="3:30" pos:end="3:48"><type pos:start="3:30" pos:end="3:48"><name pos:start="3:30" pos:end="3:35">double</name></type> <name pos:start="3:37" pos:end="3:48">elapsed_time</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:64"><decl pos:start="3:51" pos:end="3:64"><type pos:start="3:51" pos:end="3:64"><name pos:start="3:51" pos:end="3:58">uint64_t</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:64">wait</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="101:1">{<block_content pos:start="7:5" pos:end="99:16">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:23">iops_limit</name> <init pos:start="7:25" pos:end="7:27">= <expr pos:start="7:27" pos:end="7:27"><literal type="number" pos:start="7:27" pos:end="7:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">double</name></type>   <name pos:start="9:14" pos:end="9:22">ios_limit</name></decl>, <decl pos:start="9:25" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:10"/><name pos:start="9:25" pos:end="9:32">ios_base</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">double</name></type>   <name pos:start="11:14" pos:end="11:23">slice_time</name></decl>, <decl pos:start="11:26" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:10"/><name pos:start="11:26" pos:end="11:34">wait_time</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="35:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:49">(<expr pos:start="15:9" pos:end="15:48"><name pos:start="15:9" pos:end="15:48"><name pos:start="15:9" pos:end="15:10">bs</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:21">io_limits</name><operator pos:start="15:22" pos:end="15:22">.</operator><name pos:start="15:23" pos:end="15:26">iops</name><index pos:start="15:27" pos:end="15:48">[<expr pos:start="15:28" pos:end="15:47"><name pos:start="15:28" pos:end="15:47">BLOCK_IO_LIMIT_TOTAL</name></expr>]</index></name></expr>)</condition> <block pos:start="15:51" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:62">

        <expr_stmt pos:start="17:9" pos:end="17:62"><expr pos:start="17:9" pos:end="17:61"><name pos:start="17:9" pos:end="17:18">iops_limit</name> <operator pos:start="17:20" pos:end="17:20">=</operator> <name pos:start="17:22" pos:end="17:61"><name pos:start="17:22" pos:end="17:23">bs</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:34">io_limits</name><operator pos:start="17:35" pos:end="17:35">.</operator><name pos:start="17:36" pos:end="17:39">iops</name><index pos:start="17:40" pos:end="17:61">[<expr pos:start="17:41" pos:end="17:60"><name pos:start="17:41" pos:end="17:60">BLOCK_IO_LIMIT_TOTAL</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="19:7" pos:end="23:5">else if <condition pos:start="19:15" pos:end="19:44">(<expr pos:start="19:16" pos:end="19:43"><name pos:start="19:16" pos:end="19:43"><name pos:start="19:16" pos:end="19:17">bs</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:28">io_limits</name><operator pos:start="19:29" pos:end="19:29">.</operator><name pos:start="19:30" pos:end="19:33">iops</name><index pos:start="19:34" pos:end="19:43">[<expr pos:start="19:35" pos:end="19:42"><name pos:start="19:35" pos:end="19:42">is_write</name></expr>]</index></name></expr>)</condition> <block pos:start="19:46" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:50">

        <expr_stmt pos:start="21:9" pos:end="21:50"><expr pos:start="21:9" pos:end="21:49"><name pos:start="21:9" pos:end="21:18">iops_limit</name> <operator pos:start="21:20" pos:end="21:20">=</operator> <name pos:start="21:22" pos:end="21:49"><name pos:start="21:22" pos:end="21:23">bs</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:34">io_limits</name><operator pos:start="21:35" pos:end="21:35">.</operator><name pos:start="21:36" pos:end="21:39">iops</name><index pos:start="21:40" pos:end="21:49">[<expr pos:start="21:41" pos:end="21:48"><name pos:start="21:41" pos:end="21:48">is_write</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="35:5">else <block pos:start="23:12" pos:end="35:5">{<block_content pos:start="25:9" pos:end="33:21">

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:17">(<expr pos:start="25:13" pos:end="25:16"><name pos:start="25:13" pos:end="25:16">wait</name></expr>)</condition> <block pos:start="25:19" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:22">

            <expr_stmt pos:start="27:13" pos:end="27:22"><expr pos:start="27:13" pos:end="27:21"><operator pos:start="27:13" pos:end="27:13">*</operator><name pos:start="27:14" pos:end="27:17">wait</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <literal type="number" pos:start="27:21" pos:end="27:21">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <return pos:start="33:9" pos:end="33:21">return <expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">false</name></expr>;</return>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:49"><expr pos:start="39:5" pos:end="39:48"><name pos:start="39:5" pos:end="39:14">slice_time</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <name pos:start="39:18" pos:end="39:30"><name pos:start="39:18" pos:end="39:19">bs</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:30">slice_end</name></name> <operator pos:start="39:32" pos:end="39:32">-</operator> <name pos:start="39:34" pos:end="39:48"><name pos:start="39:34" pos:end="39:35">bs</name><operator pos:start="39:36" pos:end="39:37">-&gt;</operator><name pos:start="39:38" pos:end="39:48">slice_start</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:43"><expr pos:start="41:5" pos:end="41:42"><name pos:start="41:5" pos:end="41:14">slice_time</name> <operator pos:start="41:16" pos:end="41:17">/=</operator> <operator pos:start="41:19" pos:end="41:19">(</operator><name pos:start="41:20" pos:end="41:41">NANOSECONDS_PER_SECOND</name><operator pos:start="41:42" pos:end="41:42">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:41"><expr pos:start="43:5" pos:end="43:40"><name pos:start="43:5" pos:end="43:13">ios_limit</name>  <operator pos:start="43:16" pos:end="43:16">=</operator> <name pos:start="43:18" pos:end="43:27">iops_limit</name> <operator pos:start="43:29" pos:end="43:29">*</operator> <name pos:start="43:31" pos:end="43:40">slice_time</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:66"><expr pos:start="45:5" pos:end="45:65"><name pos:start="45:5" pos:end="45:12">ios_base</name>   <operator pos:start="45:16" pos:end="45:16">=</operator> <name pos:start="45:18" pos:end="45:37"><name pos:start="45:18" pos:end="45:19">bs</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:27">nr_ops</name><index pos:start="45:28" pos:end="45:37">[<expr pos:start="45:29" pos:end="45:36"><name pos:start="45:29" pos:end="45:36">is_write</name></expr>]</index></name> <operator pos:start="45:39" pos:end="45:39">-</operator> <name pos:start="45:41" pos:end="45:65"><name pos:start="45:41" pos:end="45:42">bs</name><operator pos:start="45:43" pos:end="45:44">-&gt;</operator><name pos:start="45:45" pos:end="45:51">io_base</name><operator pos:start="45:52" pos:end="45:52">.</operator><name pos:start="45:53" pos:end="45:55">ios</name><index pos:start="45:56" pos:end="45:65">[<expr pos:start="45:57" pos:end="45:64"><name pos:start="45:57" pos:end="45:64">is_write</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:49">(<expr pos:start="47:9" pos:end="47:48"><name pos:start="47:9" pos:end="47:48"><name pos:start="47:9" pos:end="47:10">bs</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:21">io_limits</name><operator pos:start="47:22" pos:end="47:22">.</operator><name pos:start="47:23" pos:end="47:26">iops</name><index pos:start="47:27" pos:end="47:48">[<expr pos:start="47:28" pos:end="47:47"><name pos:start="47:28" pos:end="47:47">BLOCK_IO_LIMIT_TOTAL</name></expr>]</index></name></expr>)</condition> <block pos:start="47:51" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:71">

        <expr_stmt pos:start="49:9" pos:end="49:71"><expr pos:start="49:9" pos:end="49:70"><name pos:start="49:9" pos:end="49:16">ios_base</name> <operator pos:start="49:18" pos:end="49:19">+=</operator> <name pos:start="49:21" pos:end="49:41"><name pos:start="49:21" pos:end="49:22">bs</name><operator pos:start="49:23" pos:end="49:24">-&gt;</operator><name pos:start="49:25" pos:end="49:30">nr_ops</name><index pos:start="49:31" pos:end="49:41">[<expr pos:start="49:32" pos:end="49:40"><operator pos:start="49:32" pos:end="49:32">!</operator><name pos:start="49:33" pos:end="49:40">is_write</name></expr>]</index></name> <operator pos:start="49:43" pos:end="49:43">-</operator> <name pos:start="49:45" pos:end="49:70"><name pos:start="49:45" pos:end="49:46">bs</name><operator pos:start="49:47" pos:end="49:48">-&gt;</operator><name pos:start="49:49" pos:end="49:55">io_base</name><operator pos:start="49:56" pos:end="49:56">.</operator><name pos:start="49:57" pos:end="49:59">ios</name><index pos:start="49:60" pos:end="49:70">[<expr pos:start="49:61" pos:end="49:69"><operator pos:start="49:61" pos:end="49:61">!</operator><name pos:start="49:62" pos:end="49:69">is_write</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="67:5"><if pos:start="55:5" pos:end="67:5">if <condition pos:start="55:8" pos:end="55:34">(<expr pos:start="55:9" pos:end="55:33"><name pos:start="55:9" pos:end="55:16">ios_base</name> <operator pos:start="55:18" pos:end="55:18">+</operator> <literal type="number" pos:start="55:20" pos:end="55:20">1</literal> <operator pos:start="55:22" pos:end="55:23">&lt;=</operator> <name pos:start="55:25" pos:end="55:33">ios_limit</name></expr>)</condition> <block pos:start="55:36" pos:end="67:5">{<block_content pos:start="57:9" pos:end="65:21">

        <if_stmt pos:start="57:9" pos:end="61:9"><if pos:start="57:9" pos:end="61:9">if <condition pos:start="57:12" pos:end="57:17">(<expr pos:start="57:13" pos:end="57:16"><name pos:start="57:13" pos:end="57:16">wait</name></expr>)</condition> <block pos:start="57:19" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:22">

            <expr_stmt pos:start="59:13" pos:end="59:22"><expr pos:start="59:13" pos:end="59:21"><operator pos:start="59:13" pos:end="59:13">*</operator><name pos:start="59:14" pos:end="59:17">wait</name> <operator pos:start="59:19" pos:end="59:19">=</operator> <literal type="number" pos:start="59:21" pos:end="59:21">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <return pos:start="65:9" pos:end="65:21">return <expr pos:start="65:16" pos:end="65:20"><name pos:start="65:16" pos:end="65:20">false</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="71:5" pos:end="71:38">/* Calc approx time to dispatch */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:44"><expr pos:start="73:5" pos:end="73:43"><name pos:start="73:5" pos:end="73:13">wait_time</name> <operator pos:start="73:15" pos:end="73:15">=</operator> <operator pos:start="73:17" pos:end="73:17">(</operator><name pos:start="73:18" pos:end="73:25">ios_base</name> <operator pos:start="73:27" pos:end="73:27">+</operator> <literal type="number" pos:start="73:29" pos:end="73:29">1</literal><operator pos:start="73:30" pos:end="73:30">)</operator> <operator pos:start="73:32" pos:end="73:32">/</operator> <name pos:start="73:34" pos:end="73:43">iops_limit</name></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="83:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:33">(<expr pos:start="75:9" pos:end="75:32"><name pos:start="75:9" pos:end="75:17">wait_time</name> <operator pos:start="75:19" pos:end="75:19">&gt;</operator> <name pos:start="75:21" pos:end="75:32">elapsed_time</name></expr>)</condition> <block pos:start="75:35" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:45">

        <expr_stmt pos:start="77:9" pos:end="77:45"><expr pos:start="77:9" pos:end="77:44"><name pos:start="77:9" pos:end="77:17">wait_time</name> <operator pos:start="77:19" pos:end="77:19">=</operator> <name pos:start="77:21" pos:end="77:29">wait_time</name> <operator pos:start="77:31" pos:end="77:31">-</operator> <name pos:start="77:33" pos:end="77:44">elapsed_time</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="79:7" pos:end="83:5">else <block pos:start="79:12" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:22">

        <expr_stmt pos:start="81:9" pos:end="81:22"><expr pos:start="81:9" pos:end="81:21"><name pos:start="81:9" pos:end="81:17">wait_time</name> <operator pos:start="81:19" pos:end="81:19">=</operator> <literal type="number" pos:start="81:21" pos:end="81:21">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:58"><expr pos:start="87:5" pos:end="87:57"><name pos:start="87:5" pos:end="87:18"><name pos:start="87:5" pos:end="87:6">bs</name><operator pos:start="87:7" pos:end="87:8">-&gt;</operator><name pos:start="87:9" pos:end="87:18">slice_time</name></name> <operator pos:start="87:20" pos:end="87:20">=</operator> <name pos:start="87:22" pos:end="87:30">wait_time</name> <operator pos:start="87:32" pos:end="87:32">*</operator> <name pos:start="87:34" pos:end="87:52">BLOCK_IO_SLICE_TIME</name> <operator pos:start="87:54" pos:end="87:54">*</operator> <literal type="number" pos:start="87:56" pos:end="87:57">10</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:62"><expr pos:start="89:5" pos:end="89:61"><name pos:start="89:5" pos:end="89:17"><name pos:start="89:5" pos:end="89:6">bs</name><operator pos:start="89:7" pos:end="89:8">-&gt;</operator><name pos:start="89:9" pos:end="89:17">slice_end</name></name> <operator pos:start="89:19" pos:end="89:20">+=</operator> <name pos:start="89:22" pos:end="89:35"><name pos:start="89:22" pos:end="89:23">bs</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:35">slice_time</name></name> <operator pos:start="89:37" pos:end="89:37">-</operator> <literal type="number" pos:start="89:39" pos:end="89:39">3</literal> <operator pos:start="89:41" pos:end="89:41">*</operator> <name pos:start="89:43" pos:end="89:61">BLOCK_IO_SLICE_TIME</name></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="95:5"><if pos:start="91:5" pos:end="95:5">if <condition pos:start="91:8" pos:end="91:13">(<expr pos:start="91:9" pos:end="91:12"><name pos:start="91:9" pos:end="91:12">wait</name></expr>)</condition> <block pos:start="91:15" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:53">

        <expr_stmt pos:start="93:9" pos:end="93:53"><expr pos:start="93:9" pos:end="93:52"><operator pos:start="93:9" pos:end="93:9">*</operator><name pos:start="93:10" pos:end="93:13">wait</name> <operator pos:start="93:15" pos:end="93:15">=</operator> <name pos:start="93:17" pos:end="93:25">wait_time</name> <operator pos:start="93:27" pos:end="93:27">*</operator> <name pos:start="93:29" pos:end="93:47">BLOCK_IO_SLICE_TIME</name> <operator pos:start="93:49" pos:end="93:49">*</operator> <literal type="number" pos:start="93:51" pos:end="93:52">10</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="99:5" pos:end="99:16">return <expr pos:start="99:12" pos:end="99:15"><name pos:start="99:12" pos:end="99:15">true</name></expr>;</return>

</block_content>}</block></function>
</unit>
