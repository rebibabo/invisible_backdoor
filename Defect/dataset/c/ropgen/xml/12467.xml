<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12467.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:41">kvm_physical_sync_dirty_bitmap</name><parameter_list pos:start="1:42" pos:end="3:70">(<parameter pos:start="1:43" pos:end="1:71"><decl pos:start="1:43" pos:end="1:71"><type pos:start="1:43" pos:end="1:71"><name pos:start="1:43" pos:end="1:60">target_phys_addr_t</name></type> <name pos:start="1:62" pos:end="1:71">start_addr</name></decl></parameter>,

					  <parameter pos:start="3:43" pos:end="3:69"><decl pos:start="3:43" pos:end="3:69"><type pos:start="3:43" pos:end="3:69"><name pos:start="3:43" pos:end="3:60">target_phys_addr_t</name></type> <name pos:start="3:62" pos:end="3:69">end_addr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="81:1">{<block_content pos:start="7:5" pos:end="79:15">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">KVMState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">s</name> <init pos:start="7:17" pos:end="7:27">= <expr pos:start="7:19" pos:end="7:27"><name pos:start="7:19" pos:end="7:27">kvm_state</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">long</name></type> <name pos:start="9:19" pos:end="9:22">size</name></decl>, <decl pos:start="9:25" pos:end="9:42"><type ref="prev" pos:start="9:5" pos:end="9:17"/><name pos:start="9:25" pos:end="9:38">allocated_size</name> <init pos:start="9:40" pos:end="9:42">= <expr pos:start="9:42" pos:end="9:42"><literal type="number" pos:start="9:42" pos:end="9:42">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:15">KVMDirtyLog</name></type> <name pos:start="11:17" pos:end="11:17">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">KVMSlot</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:16">mem</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name> <init pos:start="15:13" pos:end="15:15">= <expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:26"><expr pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:5">d</name><operator pos:start="19:6" pos:end="19:6">.</operator><name pos:start="19:7" pos:end="19:18">dirty_bitmap</name></name> <operator pos:start="19:20" pos:end="19:20">=</operator> <name pos:start="19:22" pos:end="19:25">NULL</name></expr>;</expr_stmt>

    <while pos:start="21:5" pos:end="73:5">while <condition pos:start="21:11" pos:end="21:33">(<expr pos:start="21:12" pos:end="21:32"><name pos:start="21:12" pos:end="21:21">start_addr</name> <operator pos:start="21:23" pos:end="21:23">&lt;</operator> <name pos:start="21:25" pos:end="21:32">end_addr</name></expr>)</condition> <block pos:start="21:35" pos:end="73:5">{<block_content pos:start="23:9" pos:end="71:56">

        <expr_stmt pos:start="23:9" pos:end="23:67"><expr pos:start="23:9" pos:end="23:66"><name pos:start="23:9" pos:end="23:11">mem</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:66"><name pos:start="23:15" pos:end="23:41">kvm_lookup_overlapping_slot</name><argument_list pos:start="23:42" pos:end="23:66">(<argument pos:start="23:43" pos:end="23:43"><expr pos:start="23:43" pos:end="23:43"><name pos:start="23:43" pos:end="23:43">s</name></expr></argument>, <argument pos:start="23:46" pos:end="23:55"><expr pos:start="23:46" pos:end="23:55"><name pos:start="23:46" pos:end="23:55">start_addr</name></expr></argument>, <argument pos:start="23:58" pos:end="23:65"><expr pos:start="23:58" pos:end="23:65"><name pos:start="23:58" pos:end="23:65">end_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:24">(<expr pos:start="25:13" pos:end="25:23"><name pos:start="25:13" pos:end="25:15">mem</name> <operator pos:start="25:17" pos:end="25:18">==</operator> <name pos:start="25:20" pos:end="25:23">NULL</name></expr>)</condition> <block pos:start="25:26" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:18">

            <break pos:start="27:13" pos:end="27:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:83"><expr pos:start="33:9" pos:end="33:82"><name pos:start="33:9" pos:end="33:12">size</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <call pos:start="33:16" pos:end="33:78"><name pos:start="33:16" pos:end="33:20">ALIGN</name><argument_list pos:start="33:21" pos:end="33:78">(<argument pos:start="33:22" pos:end="33:61"><expr pos:start="33:22" pos:end="33:61"><operator pos:start="33:22" pos:end="33:22">(</operator><operator pos:start="33:23" pos:end="33:23">(</operator><name pos:start="33:24" pos:end="33:39"><name pos:start="33:24" pos:end="33:26">mem</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:39">memory_size</name></name><operator pos:start="33:40" pos:end="33:40">)</operator> <operator pos:start="33:42" pos:end="33:43">&gt;&gt;</operator> <name pos:start="33:45" pos:end="33:60">TARGET_PAGE_BITS</name><operator pos:start="33:61" pos:end="33:61">)</operator></expr></argument>, <argument pos:start="33:64" pos:end="33:77"><expr pos:start="33:64" pos:end="33:77"><name pos:start="33:64" pos:end="33:77">HOST_LONG_BITS</name></expr></argument>)</argument_list></call> <operator pos:start="33:80" pos:end="33:80">/</operator> <literal type="number" pos:start="33:82" pos:end="33:82">8</literal></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="43:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:28">(<expr pos:start="35:13" pos:end="35:27"><operator pos:start="35:13" pos:end="35:13">!</operator><name pos:start="35:14" pos:end="35:27"><name pos:start="35:14" pos:end="35:14">d</name><operator pos:start="35:15" pos:end="35:15">.</operator><name pos:start="35:16" pos:end="35:27">dirty_bitmap</name></name></expr>)</condition> <block pos:start="35:30" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:47">

            <expr_stmt pos:start="37:13" pos:end="37:47"><expr pos:start="37:13" pos:end="37:46"><name pos:start="37:13" pos:end="37:26"><name pos:start="37:13" pos:end="37:13">d</name><operator pos:start="37:14" pos:end="37:14">.</operator><name pos:start="37:15" pos:end="37:26">dirty_bitmap</name></name> <operator pos:start="37:28" pos:end="37:28">=</operator> <call pos:start="37:30" pos:end="37:46"><name pos:start="37:30" pos:end="37:40">qemu_malloc</name><argument_list pos:start="37:41" pos:end="37:46">(<argument pos:start="37:42" pos:end="37:45"><expr pos:start="37:42" pos:end="37:45"><name pos:start="37:42" pos:end="37:45">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="39:11" pos:end="43:9">else if <condition pos:start="39:19" pos:end="39:41">(<expr pos:start="39:20" pos:end="39:40"><name pos:start="39:20" pos:end="39:23">size</name> <operator pos:start="39:25" pos:end="39:25">&gt;</operator> <name pos:start="39:27" pos:end="39:40">allocated_size</name></expr>)</condition> <block pos:start="39:43" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:64">

            <expr_stmt pos:start="41:13" pos:end="41:64"><expr pos:start="41:13" pos:end="41:63"><name pos:start="41:13" pos:end="41:26"><name pos:start="41:13" pos:end="41:13">d</name><operator pos:start="41:14" pos:end="41:14">.</operator><name pos:start="41:15" pos:end="41:26">dirty_bitmap</name></name> <operator pos:start="41:28" pos:end="41:28">=</operator> <call pos:start="41:30" pos:end="41:63"><name pos:start="41:30" pos:end="41:41">qemu_realloc</name><argument_list pos:start="41:42" pos:end="41:63">(<argument pos:start="41:43" pos:end="41:56"><expr pos:start="41:43" pos:end="41:56"><name pos:start="41:43" pos:end="41:56"><name pos:start="41:43" pos:end="41:43">d</name><operator pos:start="41:44" pos:end="41:44">.</operator><name pos:start="41:45" pos:end="41:56">dirty_bitmap</name></name></expr></argument>, <argument pos:start="41:59" pos:end="41:62"><expr pos:start="41:59" pos:end="41:62"><name pos:start="41:59" pos:end="41:62">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:30"><expr pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:22">allocated_size</name> <operator pos:start="45:24" pos:end="45:24">=</operator> <name pos:start="45:26" pos:end="45:29">size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:50"><expr pos:start="47:9" pos:end="47:49"><call pos:start="47:9" pos:end="47:49"><name pos:start="47:9" pos:end="47:14">memset</name><argument_list pos:start="47:15" pos:end="47:49">(<argument pos:start="47:16" pos:end="47:29"><expr pos:start="47:16" pos:end="47:29"><name pos:start="47:16" pos:end="47:29"><name pos:start="47:16" pos:end="47:16">d</name><operator pos:start="47:17" pos:end="47:17">.</operator><name pos:start="47:18" pos:end="47:29">dirty_bitmap</name></name></expr></argument>, <argument pos:start="47:32" pos:end="47:32"><expr pos:start="47:32" pos:end="47:32"><literal type="number" pos:start="47:32" pos:end="47:32">0</literal></expr></argument>, <argument pos:start="47:35" pos:end="47:48"><expr pos:start="47:35" pos:end="47:48"><name pos:start="47:35" pos:end="47:48">allocated_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:27"><expr pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:14"><name pos:start="51:9" pos:end="51:9">d</name><operator pos:start="51:10" pos:end="51:10">.</operator><name pos:start="51:11" pos:end="51:14">slot</name></name> <operator pos:start="51:16" pos:end="51:16">=</operator> <name pos:start="51:18" pos:end="51:26"><name pos:start="51:18" pos:end="51:20">mem</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:26">slot</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="55:9" pos:end="63:9"><if pos:start="55:9" pos:end="63:9">if <condition pos:start="55:12" pos:end="55:57">(<expr pos:start="55:13" pos:end="55:56"><call pos:start="55:13" pos:end="55:50"><name pos:start="55:13" pos:end="55:24">kvm_vm_ioctl</name><argument_list pos:start="55:25" pos:end="55:50">(<argument pos:start="55:26" pos:end="55:26"><expr pos:start="55:26" pos:end="55:26"><name pos:start="55:26" pos:end="55:26">s</name></expr></argument>, <argument pos:start="55:29" pos:end="55:45"><expr pos:start="55:29" pos:end="55:45"><name pos:start="55:29" pos:end="55:45">KVM_GET_DIRTY_LOG</name></expr></argument>, <argument pos:start="55:48" pos:end="55:49"><expr pos:start="55:48" pos:end="55:49"><operator pos:start="55:48" pos:end="55:48">&amp;</operator><name pos:start="55:49" pos:end="55:49">d</name></expr></argument>)</argument_list></call> <operator pos:start="55:52" pos:end="55:53">==</operator> <operator pos:start="55:55" pos:end="55:55">-</operator><literal type="number" pos:start="55:56" pos:end="55:56">1</literal></expr>)</condition> <block pos:start="55:59" pos:end="63:9">{<block_content pos:start="57:13" pos:end="61:18">

            <expr_stmt pos:start="57:13" pos:end="57:48"><expr pos:start="57:13" pos:end="57:47"><call pos:start="57:13" pos:end="57:47"><name pos:start="57:13" pos:end="57:19">DPRINTF</name><argument_list pos:start="57:20" pos:end="57:47">(<argument pos:start="57:21" pos:end="57:39"><expr pos:start="57:21" pos:end="57:39"><literal type="string" pos:start="57:21" pos:end="57:39">"ioctl failed %d\n"</literal></expr></argument>, <argument pos:start="57:42" pos:end="57:46"><expr pos:start="57:42" pos:end="57:46"><name pos:start="57:42" pos:end="57:46">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:21"><expr pos:start="59:13" pos:end="59:20"><name pos:start="59:13" pos:end="59:15">ret</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <operator pos:start="59:19" pos:end="59:19">-</operator><literal type="number" pos:start="59:20" pos:end="59:20">1</literal></expr>;</expr_stmt>

            <break pos:start="61:13" pos:end="61:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="67:9" pos:end="69:73"><expr pos:start="67:9" pos:end="69:72"><call pos:start="67:9" pos:end="69:72"><name pos:start="67:9" pos:end="67:37">kvm_get_dirty_pages_log_range</name><argument_list pos:start="67:38" pos:end="69:72">(<argument pos:start="67:39" pos:end="67:53"><expr pos:start="67:39" pos:end="67:53"><name pos:start="67:39" pos:end="67:53"><name pos:start="67:39" pos:end="67:41">mem</name><operator pos:start="67:42" pos:end="67:43">-&gt;</operator><name pos:start="67:44" pos:end="67:53">start_addr</name></name></expr></argument>, <argument pos:start="67:56" pos:end="67:69"><expr pos:start="67:56" pos:end="67:69"><name pos:start="67:56" pos:end="67:69"><name pos:start="67:56" pos:end="67:56">d</name><operator pos:start="67:57" pos:end="67:57">.</operator><name pos:start="67:58" pos:end="67:69">dirty_bitmap</name></name></expr></argument>,

                                      <argument pos:start="69:39" pos:end="69:53"><expr pos:start="69:39" pos:end="69:53"><name pos:start="69:39" pos:end="69:53"><name pos:start="69:39" pos:end="69:41">mem</name><operator pos:start="69:42" pos:end="69:43">-&gt;</operator><name pos:start="69:44" pos:end="69:53">start_addr</name></name></expr></argument>, <argument pos:start="69:56" pos:end="69:71"><expr pos:start="69:56" pos:end="69:71"><name pos:start="69:56" pos:end="69:71"><name pos:start="69:56" pos:end="69:58">mem</name><operator pos:start="69:59" pos:end="69:60">-&gt;</operator><name pos:start="69:61" pos:end="69:71">memory_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:56"><expr pos:start="71:9" pos:end="71:55"><name pos:start="71:9" pos:end="71:18">start_addr</name> <operator pos:start="71:20" pos:end="71:20">=</operator> <name pos:start="71:22" pos:end="71:36"><name pos:start="71:22" pos:end="71:24">mem</name><operator pos:start="71:25" pos:end="71:26">-&gt;</operator><name pos:start="71:27" pos:end="71:36">start_addr</name></name> <operator pos:start="71:38" pos:end="71:38">+</operator> <name pos:start="71:40" pos:end="71:55"><name pos:start="71:40" pos:end="71:42">mem</name><operator pos:start="71:43" pos:end="71:44">-&gt;</operator><name pos:start="71:45" pos:end="71:55">memory_size</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="75:5" pos:end="75:30"><expr pos:start="75:5" pos:end="75:29"><call pos:start="75:5" pos:end="75:29"><name pos:start="75:5" pos:end="75:13">qemu_free</name><argument_list pos:start="75:14" pos:end="75:29">(<argument pos:start="75:15" pos:end="75:28"><expr pos:start="75:15" pos:end="75:28"><name pos:start="75:15" pos:end="75:28"><name pos:start="75:15" pos:end="75:15">d</name><operator pos:start="75:16" pos:end="75:16">.</operator><name pos:start="75:17" pos:end="75:28">dirty_bitmap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="79:5" pos:end="79:15">return <expr pos:start="79:12" pos:end="79:14"><name pos:start="79:12" pos:end="79:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
