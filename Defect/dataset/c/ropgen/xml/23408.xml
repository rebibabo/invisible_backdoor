<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23408.c" pos:tabs="8"><function pos:start="1:1" pos:end="447:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">kqemu_cpu_exec</name><parameter_list pos:start="1:19" pos:end="1:33">(<parameter pos:start="1:20" pos:end="1:32"><decl pos:start="1:20" pos:end="1:32"><type pos:start="1:20" pos:end="1:29"><name pos:start="1:20" pos:end="1:27">CPUState</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:32">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="447:1">{<block_content pos:start="5:5" pos:end="445:13">

    <decl_stmt pos:start="5:5" pos:end="5:59"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:26">kqemu_cpu_state</name></name></type> <name pos:start="5:28" pos:end="5:37">kcpu_state</name></decl>, <decl pos:start="5:40" pos:end="5:58"><type ref="prev" pos:start="5:5" pos:end="5:26"><modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:44">kenv</name> <init pos:start="5:46" pos:end="5:58">= <expr pos:start="5:48" pos:end="5:58"><operator pos:start="5:48" pos:end="5:48">&amp;</operator><name pos:start="5:49" pos:end="5:58">kcpu_state</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="10:0"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:16">cpl</name></decl>, <decl pos:start="7:19" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:19">i</name></decl>;</decl_stmt>

<cpp:ifdef pos:start="9:1" pos:end="9:22">#<cpp:directive pos:start="9:2" pos:end="9:6">ifdef</cpp:directive> <name pos:start="9:8" pos:end="9:22">CONFIG_PROFILER</name></cpp:ifdef>

    <decl_stmt pos:start="11:5" pos:end="16:0"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:14">ti</name></decl>;</decl_stmt>

<cpp:endif pos:start="13:1" pos:end="13:6">#<cpp:directive pos:start="13:2" pos:end="13:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="15:1" pos:end="15:13">#<cpp:directive pos:start="15:2" pos:end="15:6">ifdef</cpp:directive> <name pos:start="15:8" pos:end="15:13">_WIN32</name></cpp:ifdef>

    <decl_stmt pos:start="17:5" pos:end="24:0"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:9"><name pos:start="17:5" pos:end="17:9">DWORD</name></type> <name pos:start="17:11" pos:end="17:14">temp</name></decl>;</decl_stmt>

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="23:1" pos:end="23:22">#<cpp:directive pos:start="23:2" pos:end="23:6">ifdef</cpp:directive> <name pos:start="23:8" pos:end="23:22">CONFIG_PROFILER</name></cpp:ifdef>

    <expr_stmt pos:start="25:5" pos:end="28:0"><expr pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:6">ti</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <call pos:start="25:10" pos:end="25:27"><name pos:start="25:10" pos:end="25:25">profile_getclock</name><argument_list pos:start="25:26" pos:end="25:27">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="29:5" pos:end="29:40"><expr pos:start="29:5" pos:end="29:39"><call pos:start="29:5" pos:end="29:39"><name pos:start="29:5" pos:end="29:11">LOG_INT</name><argument_list pos:start="29:12" pos:end="29:39">(<argument pos:start="29:13" pos:end="29:38"><expr pos:start="29:13" pos:end="29:38"><literal type="string" pos:start="29:13" pos:end="29:38">"kqemu: cpu_exec: enter\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:23"><expr pos:start="31:5" pos:end="31:22"><call pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:17">LOG_INT_STATE</name><argument_list pos:start="31:18" pos:end="31:22">(<argument pos:start="31:19" pos:end="31:21"><expr pos:start="31:19" pos:end="31:21"><name pos:start="31:19" pos:end="31:21">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="33:5" pos:end="35:37">for<control pos:start="33:8" pos:end="33:36">(<init pos:start="33:9" pos:end="33:14"><expr pos:start="33:9" pos:end="33:13"><name pos:start="33:9" pos:end="33:9">i</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <literal type="number" pos:start="33:13" pos:end="33:13">0</literal></expr>;</init> <condition pos:start="33:16" pos:end="33:31"><expr pos:start="33:16" pos:end="33:30"><name pos:start="33:16" pos:end="33:16">i</name> <operator pos:start="33:18" pos:end="33:18">&lt;</operator> <name pos:start="33:20" pos:end="33:30">CPU_NB_REGS</name></expr>;</condition> <incr pos:start="33:33" pos:end="33:35"><expr pos:start="33:33" pos:end="33:35"><name pos:start="33:33" pos:end="33:33">i</name><operator pos:start="33:34" pos:end="33:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="35:9" pos:end="35:37"><block_content pos:start="35:9" pos:end="35:37">

        <expr_stmt pos:start="35:9" pos:end="35:37"><expr pos:start="35:9" pos:end="35:36"><name pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:12">kenv</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:18">regs</name><index pos:start="35:19" pos:end="35:21">[<expr pos:start="35:20" pos:end="35:20"><name pos:start="35:20" pos:end="35:20">i</name></expr>]</index></name> <operator pos:start="35:23" pos:end="35:23">=</operator> <name pos:start="35:25" pos:end="35:36"><name pos:start="35:25" pos:end="35:27">env</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:33">regs</name><index pos:start="35:34" pos:end="35:36">[<expr pos:start="35:35" pos:end="35:35"><name pos:start="35:35" pos:end="35:35">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="37:5" pos:end="37:25"><expr pos:start="37:5" pos:end="37:24"><name pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:8">kenv</name><operator pos:start="37:9" pos:end="37:10">-&gt;</operator><name pos:start="37:11" pos:end="37:13">eip</name></name> <operator pos:start="37:15" pos:end="37:15">=</operator> <name pos:start="37:17" pos:end="37:24"><name pos:start="37:17" pos:end="37:19">env</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:24">eip</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:31"><expr pos:start="39:5" pos:end="39:30"><name pos:start="39:5" pos:end="39:16"><name pos:start="39:5" pos:end="39:8">kenv</name><operator pos:start="39:9" pos:end="39:10">-&gt;</operator><name pos:start="39:11" pos:end="39:16">eflags</name></name> <operator pos:start="39:18" pos:end="39:18">=</operator> <name pos:start="39:20" pos:end="39:30"><name pos:start="39:20" pos:end="39:22">env</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:30">eflags</name></name></expr>;</expr_stmt>

    <for pos:start="41:5" pos:end="43:54">for<control pos:start="41:8" pos:end="41:26">(<init pos:start="41:9" pos:end="41:14"><expr pos:start="41:9" pos:end="41:13"><name pos:start="41:9" pos:end="41:9">i</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <literal type="number" pos:start="41:13" pos:end="41:13">0</literal></expr>;</init> <condition pos:start="41:16" pos:end="41:21"><expr pos:start="41:16" pos:end="41:20"><name pos:start="41:16" pos:end="41:16">i</name> <operator pos:start="41:18" pos:end="41:18">&lt;</operator> <literal type="number" pos:start="41:20" pos:end="41:20">6</literal></expr>;</condition> <incr pos:start="41:23" pos:end="41:25"><expr pos:start="41:23" pos:end="41:25"><name pos:start="41:23" pos:end="41:23">i</name><operator pos:start="41:24" pos:end="41:25">++</operator></expr></incr>)</control><block type="pseudo" pos:start="43:9" pos:end="43:54"><block_content pos:start="43:9" pos:end="43:54">

        <expr_stmt pos:start="43:9" pos:end="43:54"><expr pos:start="43:9" pos:end="43:53"><call pos:start="43:9" pos:end="43:53"><name pos:start="43:9" pos:end="43:22">kqemu_load_seg</name><argument_list pos:start="43:23" pos:end="43:53">(<argument pos:start="43:24" pos:end="43:37"><expr pos:start="43:24" pos:end="43:37"><operator pos:start="43:24" pos:end="43:24">&amp;</operator><name pos:start="43:25" pos:end="43:37"><name pos:start="43:25" pos:end="43:28">kenv</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:34">segs</name><index pos:start="43:35" pos:end="43:37">[<expr pos:start="43:36" pos:end="43:36"><name pos:start="43:36" pos:end="43:36">i</name></expr>]</index></name></expr></argument>, <argument pos:start="43:40" pos:end="43:52"><expr pos:start="43:40" pos:end="43:52"><operator pos:start="43:40" pos:end="43:40">&amp;</operator><name pos:start="43:41" pos:end="43:52"><name pos:start="43:41" pos:end="43:43">env</name><operator pos:start="43:44" pos:end="43:45">-&gt;</operator><name pos:start="43:46" pos:end="43:49">segs</name><index pos:start="43:50" pos:end="43:52">[<expr pos:start="43:51" pos:end="43:51"><name pos:start="43:51" pos:end="43:51">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="45:5" pos:end="45:42"><expr pos:start="45:5" pos:end="45:41"><call pos:start="45:5" pos:end="45:41"><name pos:start="45:5" pos:end="45:18">kqemu_load_seg</name><argument_list pos:start="45:19" pos:end="45:41">(<argument pos:start="45:20" pos:end="45:29"><expr pos:start="45:20" pos:end="45:29"><operator pos:start="45:20" pos:end="45:20">&amp;</operator><name pos:start="45:21" pos:end="45:29"><name pos:start="45:21" pos:end="45:24">kenv</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:29">ldt</name></name></expr></argument>, <argument pos:start="45:32" pos:end="45:40"><expr pos:start="45:32" pos:end="45:40"><operator pos:start="45:32" pos:end="45:32">&amp;</operator><name pos:start="45:33" pos:end="45:40"><name pos:start="45:33" pos:end="45:35">env</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:40">ldt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:40"><expr pos:start="47:5" pos:end="47:39"><call pos:start="47:5" pos:end="47:39"><name pos:start="47:5" pos:end="47:18">kqemu_load_seg</name><argument_list pos:start="47:19" pos:end="47:39">(<argument pos:start="47:20" pos:end="47:28"><expr pos:start="47:20" pos:end="47:28"><operator pos:start="47:20" pos:end="47:20">&amp;</operator><name pos:start="47:21" pos:end="47:28"><name pos:start="47:21" pos:end="47:24">kenv</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:28">tr</name></name></expr></argument>, <argument pos:start="47:31" pos:end="47:38"><expr pos:start="47:31" pos:end="47:38"><operator pos:start="47:31" pos:end="47:31">&amp;</operator><name pos:start="47:32" pos:end="47:38"><name pos:start="47:32" pos:end="47:34">env</name><operator pos:start="47:35" pos:end="47:36">-&gt;</operator><name pos:start="47:37" pos:end="47:38">tr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:42"><expr pos:start="49:5" pos:end="49:41"><call pos:start="49:5" pos:end="49:41"><name pos:start="49:5" pos:end="49:18">kqemu_load_seg</name><argument_list pos:start="49:19" pos:end="49:41">(<argument pos:start="49:20" pos:end="49:29"><expr pos:start="49:20" pos:end="49:29"><operator pos:start="49:20" pos:end="49:20">&amp;</operator><name pos:start="49:21" pos:end="49:29"><name pos:start="49:21" pos:end="49:24">kenv</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:29">gdt</name></name></expr></argument>, <argument pos:start="49:32" pos:end="49:40"><expr pos:start="49:32" pos:end="49:40"><operator pos:start="49:32" pos:end="49:32">&amp;</operator><name pos:start="49:33" pos:end="49:40"><name pos:start="49:33" pos:end="49:35">env</name><operator pos:start="49:36" pos:end="49:37">-&gt;</operator><name pos:start="49:38" pos:end="49:40">gdt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:42"><expr pos:start="51:5" pos:end="51:41"><call pos:start="51:5" pos:end="51:41"><name pos:start="51:5" pos:end="51:18">kqemu_load_seg</name><argument_list pos:start="51:19" pos:end="51:41">(<argument pos:start="51:20" pos:end="51:29"><expr pos:start="51:20" pos:end="51:29"><operator pos:start="51:20" pos:end="51:20">&amp;</operator><name pos:start="51:21" pos:end="51:29"><name pos:start="51:21" pos:end="51:24">kenv</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:29">idt</name></name></expr></argument>, <argument pos:start="51:32" pos:end="51:40"><expr pos:start="51:32" pos:end="51:40"><operator pos:start="51:32" pos:end="51:32">&amp;</operator><name pos:start="51:33" pos:end="51:40"><name pos:start="51:33" pos:end="51:35">env</name><operator pos:start="51:36" pos:end="51:37">-&gt;</operator><name pos:start="51:38" pos:end="51:40">idt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:27"><expr pos:start="53:5" pos:end="53:26"><name pos:start="53:5" pos:end="53:13"><name pos:start="53:5" pos:end="53:8">kenv</name><operator pos:start="53:9" pos:end="53:10">-&gt;</operator><name pos:start="53:11" pos:end="53:13">cr0</name></name> <operator pos:start="53:15" pos:end="53:15">=</operator> <name pos:start="53:17" pos:end="53:26"><name pos:start="53:17" pos:end="53:19">env</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:23">cr</name><index pos:start="53:24" pos:end="53:26">[<expr pos:start="53:25" pos:end="53:25"><literal type="number" pos:start="53:25" pos:end="53:25">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:27"><expr pos:start="55:5" pos:end="55:26"><name pos:start="55:5" pos:end="55:13"><name pos:start="55:5" pos:end="55:8">kenv</name><operator pos:start="55:9" pos:end="55:10">-&gt;</operator><name pos:start="55:11" pos:end="55:13">cr2</name></name> <operator pos:start="55:15" pos:end="55:15">=</operator> <name pos:start="55:17" pos:end="55:26"><name pos:start="55:17" pos:end="55:19">env</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:23">cr</name><index pos:start="55:24" pos:end="55:26">[<expr pos:start="55:25" pos:end="55:25"><literal type="number" pos:start="55:25" pos:end="55:25">2</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:27"><expr pos:start="57:5" pos:end="57:26"><name pos:start="57:5" pos:end="57:13"><name pos:start="57:5" pos:end="57:8">kenv</name><operator pos:start="57:9" pos:end="57:10">-&gt;</operator><name pos:start="57:11" pos:end="57:13">cr3</name></name> <operator pos:start="57:15" pos:end="57:15">=</operator> <name pos:start="57:17" pos:end="57:26"><name pos:start="57:17" pos:end="57:19">env</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:23">cr</name><index pos:start="57:24" pos:end="57:26">[<expr pos:start="57:25" pos:end="57:25"><literal type="number" pos:start="57:25" pos:end="57:25">3</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:27"><expr pos:start="59:5" pos:end="59:26"><name pos:start="59:5" pos:end="59:13"><name pos:start="59:5" pos:end="59:8">kenv</name><operator pos:start="59:9" pos:end="59:10">-&gt;</operator><name pos:start="59:11" pos:end="59:13">cr4</name></name> <operator pos:start="59:15" pos:end="59:15">=</operator> <name pos:start="59:17" pos:end="59:26"><name pos:start="59:17" pos:end="59:19">env</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:23">cr</name><index pos:start="59:24" pos:end="59:26">[<expr pos:start="59:25" pos:end="59:25"><literal type="number" pos:start="59:25" pos:end="59:25">4</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:35"><expr pos:start="61:5" pos:end="61:34"><name pos:start="61:5" pos:end="61:18"><name pos:start="61:5" pos:end="61:8">kenv</name><operator pos:start="61:9" pos:end="61:10">-&gt;</operator><name pos:start="61:11" pos:end="61:18">a20_mask</name></name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:34"><name pos:start="61:22" pos:end="61:24">env</name><operator pos:start="61:25" pos:end="61:26">-&gt;</operator><name pos:start="61:27" pos:end="61:34">a20_mask</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:27"><expr pos:start="63:5" pos:end="63:26"><name pos:start="63:5" pos:end="63:14"><name pos:start="63:5" pos:end="63:8">kenv</name><operator pos:start="63:9" pos:end="63:10">-&gt;</operator><name pos:start="63:11" pos:end="63:14">efer</name></name> <operator pos:start="63:16" pos:end="63:16">=</operator> <name pos:start="63:18" pos:end="63:26"><name pos:start="63:18" pos:end="63:20">env</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:26">efer</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:25"><expr pos:start="65:5" pos:end="65:24"><name pos:start="65:5" pos:end="65:20"><name pos:start="65:5" pos:end="65:8">kenv</name><operator pos:start="65:9" pos:end="65:10">-&gt;</operator><name pos:start="65:11" pos:end="65:20">tsc_offset</name></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <literal type="number" pos:start="65:24" pos:end="65:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:27"><expr pos:start="67:5" pos:end="67:26"><name pos:start="67:5" pos:end="67:14"><name pos:start="67:5" pos:end="67:8">kenv</name><operator pos:start="67:9" pos:end="67:10">-&gt;</operator><name pos:start="67:11" pos:end="67:14">star</name></name> <operator pos:start="67:16" pos:end="67:16">=</operator> <name pos:start="67:18" pos:end="67:26"><name pos:start="67:18" pos:end="67:20">env</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:26">star</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:41"><expr pos:start="69:5" pos:end="69:40"><name pos:start="69:5" pos:end="69:21"><name pos:start="69:5" pos:end="69:8">kenv</name><operator pos:start="69:9" pos:end="69:10">-&gt;</operator><name pos:start="69:11" pos:end="69:21">sysenter_cs</name></name> <operator pos:start="69:23" pos:end="69:23">=</operator> <name pos:start="69:25" pos:end="69:40"><name pos:start="69:25" pos:end="69:27">env</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:40">sysenter_cs</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:43"><expr pos:start="71:5" pos:end="71:42"><name pos:start="71:5" pos:end="71:22"><name pos:start="71:5" pos:end="71:8">kenv</name><operator pos:start="71:9" pos:end="71:10">-&gt;</operator><name pos:start="71:11" pos:end="71:22">sysenter_esp</name></name> <operator pos:start="71:24" pos:end="71:24">=</operator> <name pos:start="71:26" pos:end="71:42"><name pos:start="71:26" pos:end="71:28">env</name><operator pos:start="71:29" pos:end="71:30">-&gt;</operator><name pos:start="71:31" pos:end="71:42">sysenter_esp</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="76:0"><expr pos:start="73:5" pos:end="73:42"><name pos:start="73:5" pos:end="73:22"><name pos:start="73:5" pos:end="73:8">kenv</name><operator pos:start="73:9" pos:end="73:10">-&gt;</operator><name pos:start="73:11" pos:end="73:22">sysenter_eip</name></name> <operator pos:start="73:24" pos:end="73:24">=</operator> <name pos:start="73:26" pos:end="73:42"><name pos:start="73:26" pos:end="73:28">env</name><operator pos:start="73:29" pos:end="73:30">-&gt;</operator><name pos:start="73:31" pos:end="73:42">sysenter_eip</name></name></expr>;</expr_stmt>

<cpp:ifdef pos:start="75:1" pos:end="75:20">#<cpp:directive pos:start="75:2" pos:end="75:6">ifdef</cpp:directive> <name pos:start="75:8" pos:end="75:20">TARGET_X86_64</name></cpp:ifdef>

    <expr_stmt pos:start="77:5" pos:end="77:29"><expr pos:start="77:5" pos:end="77:28"><name pos:start="77:5" pos:end="77:15"><name pos:start="77:5" pos:end="77:8">kenv</name><operator pos:start="77:9" pos:end="77:10">-&gt;</operator><name pos:start="77:11" pos:end="77:15">lstar</name></name> <operator pos:start="77:17" pos:end="77:17">=</operator> <name pos:start="77:19" pos:end="77:28"><name pos:start="77:19" pos:end="77:21">env</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:28">lstar</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:29"><expr pos:start="79:5" pos:end="79:28"><name pos:start="79:5" pos:end="79:15"><name pos:start="79:5" pos:end="79:8">kenv</name><operator pos:start="79:9" pos:end="79:10">-&gt;</operator><name pos:start="79:11" pos:end="79:15">cstar</name></name> <operator pos:start="79:17" pos:end="79:17">=</operator> <name pos:start="79:19" pos:end="79:28"><name pos:start="79:19" pos:end="79:21">env</name><operator pos:start="79:22" pos:end="79:23">-&gt;</operator><name pos:start="79:24" pos:end="79:28">cstar</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:29"><expr pos:start="81:5" pos:end="81:28"><name pos:start="81:5" pos:end="81:15"><name pos:start="81:5" pos:end="81:8">kenv</name><operator pos:start="81:9" pos:end="81:10">-&gt;</operator><name pos:start="81:11" pos:end="81:15">fmask</name></name> <operator pos:start="81:17" pos:end="81:17">=</operator> <name pos:start="81:19" pos:end="81:28"><name pos:start="81:19" pos:end="81:21">env</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:28">fmask</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="86:0"><expr pos:start="83:5" pos:end="83:42"><name pos:start="83:5" pos:end="83:22"><name pos:start="83:5" pos:end="83:8">kenv</name><operator pos:start="83:9" pos:end="83:10">-&gt;</operator><name pos:start="83:11" pos:end="83:22">kernelgsbase</name></name> <operator pos:start="83:24" pos:end="83:24">=</operator> <name pos:start="83:26" pos:end="83:42"><name pos:start="83:26" pos:end="83:28">env</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:42">kernelgsbase</name></name></expr>;</expr_stmt>

<cpp:endif pos:start="85:1" pos:end="85:6">#<cpp:directive pos:start="85:2" pos:end="85:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="87:5" pos:end="103:5"><if pos:start="87:5" pos:end="99:5">if <condition pos:start="87:8" pos:end="87:26">(<expr pos:start="87:9" pos:end="87:25"><name pos:start="87:9" pos:end="87:18"><name pos:start="87:9" pos:end="87:11">env</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:15">dr</name><index pos:start="87:16" pos:end="87:18">[<expr pos:start="87:17" pos:end="87:17"><literal type="number" pos:start="87:17" pos:end="87:17">7</literal></expr>]</index></name> <operator pos:start="87:20" pos:end="87:20">&amp;</operator> <literal type="number" pos:start="87:22" pos:end="87:25">0xff</literal></expr>)</condition> <block pos:start="87:28" pos:end="99:5">{<block_content pos:start="89:9" pos:end="97:31">

        <expr_stmt pos:start="89:9" pos:end="89:31"><expr pos:start="89:9" pos:end="89:30"><name pos:start="89:9" pos:end="89:17"><name pos:start="89:9" pos:end="89:12">kenv</name><operator pos:start="89:13" pos:end="89:14">-&gt;</operator><name pos:start="89:15" pos:end="89:17">dr7</name></name> <operator pos:start="89:19" pos:end="89:19">=</operator> <name pos:start="89:21" pos:end="89:30"><name pos:start="89:21" pos:end="89:23">env</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:27">dr</name><index pos:start="89:28" pos:end="89:30">[<expr pos:start="89:29" pos:end="89:29"><literal type="number" pos:start="89:29" pos:end="89:29">7</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:31"><expr pos:start="91:9" pos:end="91:30"><name pos:start="91:9" pos:end="91:17"><name pos:start="91:9" pos:end="91:12">kenv</name><operator pos:start="91:13" pos:end="91:14">-&gt;</operator><name pos:start="91:15" pos:end="91:17">dr0</name></name> <operator pos:start="91:19" pos:end="91:19">=</operator> <name pos:start="91:21" pos:end="91:30"><name pos:start="91:21" pos:end="91:23">env</name><operator pos:start="91:24" pos:end="91:25">-&gt;</operator><name pos:start="91:26" pos:end="91:27">dr</name><index pos:start="91:28" pos:end="91:30">[<expr pos:start="91:29" pos:end="91:29"><literal type="number" pos:start="91:29" pos:end="91:29">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:31"><expr pos:start="93:9" pos:end="93:30"><name pos:start="93:9" pos:end="93:17"><name pos:start="93:9" pos:end="93:12">kenv</name><operator pos:start="93:13" pos:end="93:14">-&gt;</operator><name pos:start="93:15" pos:end="93:17">dr1</name></name> <operator pos:start="93:19" pos:end="93:19">=</operator> <name pos:start="93:21" pos:end="93:30"><name pos:start="93:21" pos:end="93:23">env</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:27">dr</name><index pos:start="93:28" pos:end="93:30">[<expr pos:start="93:29" pos:end="93:29"><literal type="number" pos:start="93:29" pos:end="93:29">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:31"><expr pos:start="95:9" pos:end="95:30"><name pos:start="95:9" pos:end="95:17"><name pos:start="95:9" pos:end="95:12">kenv</name><operator pos:start="95:13" pos:end="95:14">-&gt;</operator><name pos:start="95:15" pos:end="95:17">dr2</name></name> <operator pos:start="95:19" pos:end="95:19">=</operator> <name pos:start="95:21" pos:end="95:30"><name pos:start="95:21" pos:end="95:23">env</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:27">dr</name><index pos:start="95:28" pos:end="95:30">[<expr pos:start="95:29" pos:end="95:29"><literal type="number" pos:start="95:29" pos:end="95:29">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:31"><expr pos:start="97:9" pos:end="97:30"><name pos:start="97:9" pos:end="97:17"><name pos:start="97:9" pos:end="97:12">kenv</name><operator pos:start="97:13" pos:end="97:14">-&gt;</operator><name pos:start="97:15" pos:end="97:17">dr3</name></name> <operator pos:start="97:19" pos:end="97:19">=</operator> <name pos:start="97:21" pos:end="97:30"><name pos:start="97:21" pos:end="97:23">env</name><operator pos:start="97:24" pos:end="97:25">-&gt;</operator><name pos:start="97:26" pos:end="97:27">dr</name><index pos:start="97:28" pos:end="97:30">[<expr pos:start="97:29" pos:end="97:29"><literal type="number" pos:start="97:29" pos:end="97:29">3</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="99:7" pos:end="103:5">else <block pos:start="99:12" pos:end="103:5">{<block_content pos:start="101:9" pos:end="101:22">

        <expr_stmt pos:start="101:9" pos:end="101:22"><expr pos:start="101:9" pos:end="101:21"><name pos:start="101:9" pos:end="101:17"><name pos:start="101:9" pos:end="101:12">kenv</name><operator pos:start="101:13" pos:end="101:14">-&gt;</operator><name pos:start="101:15" pos:end="101:17">dr7</name></name> <operator pos:start="101:19" pos:end="101:19">=</operator> <literal type="number" pos:start="101:21" pos:end="101:21">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:27"><expr pos:start="105:5" pos:end="105:26"><name pos:start="105:5" pos:end="105:13"><name pos:start="105:5" pos:end="105:8">kenv</name><operator pos:start="105:9" pos:end="105:10">-&gt;</operator><name pos:start="105:11" pos:end="105:13">dr6</name></name> <operator pos:start="105:15" pos:end="105:15">=</operator> <name pos:start="105:17" pos:end="105:26"><name pos:start="105:17" pos:end="105:19">env</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:23">dr</name><index pos:start="105:24" pos:end="105:26">[<expr pos:start="105:25" pos:end="105:25"><literal type="number" pos:start="105:25" pos:end="105:25">6</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:38"><expr pos:start="107:5" pos:end="107:37"><name pos:start="107:5" pos:end="107:7">cpl</name> <operator pos:start="107:9" pos:end="107:9">=</operator> <operator pos:start="107:11" pos:end="107:11">(</operator><name pos:start="107:12" pos:end="107:22"><name pos:start="107:12" pos:end="107:14">env</name><operator pos:start="107:15" pos:end="107:16">-&gt;</operator><name pos:start="107:17" pos:end="107:22">hflags</name></name> <operator pos:start="107:24" pos:end="107:24">&amp;</operator> <name pos:start="107:26" pos:end="107:36">HF_CPL_MASK</name><operator pos:start="107:37" pos:end="107:37">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:20"><expr pos:start="109:5" pos:end="109:19"><name pos:start="109:5" pos:end="109:13"><name pos:start="109:5" pos:end="109:8">kenv</name><operator pos:start="109:9" pos:end="109:10">-&gt;</operator><name pos:start="109:11" pos:end="109:13">cpl</name></name> <operator pos:start="109:15" pos:end="109:15">=</operator> <name pos:start="109:17" pos:end="109:19">cpl</name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:48"><expr pos:start="111:5" pos:end="111:47"><name pos:start="111:5" pos:end="111:27"><name pos:start="111:5" pos:end="111:8">kenv</name><operator pos:start="111:9" pos:end="111:10">-&gt;</operator><name pos:start="111:11" pos:end="111:27">nb_pages_to_flush</name></name> <operator pos:start="111:29" pos:end="111:29">=</operator> <name pos:start="111:31" pos:end="111:47">nb_pages_to_flush</name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:48"><expr pos:start="113:5" pos:end="113:47"><name pos:start="113:5" pos:end="113:19"><name pos:start="113:5" pos:end="113:8">kenv</name><operator pos:start="113:9" pos:end="113:10">-&gt;</operator><name pos:start="113:11" pos:end="113:19">user_only</name></name> <operator pos:start="113:21" pos:end="113:21">=</operator> <operator pos:start="113:23" pos:end="113:23">(</operator><name pos:start="113:24" pos:end="113:41"><name pos:start="113:24" pos:end="113:26">env</name><operator pos:start="113:27" pos:end="113:28">-&gt;</operator><name pos:start="113:29" pos:end="113:41">kqemu_enabled</name></name> <operator pos:start="113:43" pos:end="113:44">==</operator> <literal type="number" pos:start="113:46" pos:end="113:46">1</literal><operator pos:start="113:47" pos:end="113:47">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:58"><expr pos:start="115:5" pos:end="115:57"><name pos:start="115:5" pos:end="115:32"><name pos:start="115:5" pos:end="115:8">kenv</name><operator pos:start="115:9" pos:end="115:10">-&gt;</operator><name pos:start="115:11" pos:end="115:32">nb_ram_pages_to_update</name></name> <operator pos:start="115:34" pos:end="115:34">=</operator> <name pos:start="115:36" pos:end="115:57">nb_ram_pages_to_update</name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:31"><expr pos:start="117:5" pos:end="117:30"><name pos:start="117:5" pos:end="117:26">nb_ram_pages_to_update</name> <operator pos:start="117:28" pos:end="117:28">=</operator> <literal type="number" pos:start="117:30" pos:end="117:30">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:56"><expr pos:start="119:5" pos:end="119:55"><name pos:start="119:5" pos:end="119:31"><name pos:start="119:5" pos:end="119:8">kenv</name><operator pos:start="119:9" pos:end="119:10">-&gt;</operator><name pos:start="119:11" pos:end="119:31">nb_modified_ram_pages</name></name> <operator pos:start="119:33" pos:end="119:33">=</operator> <name pos:start="119:35" pos:end="119:55">nb_modified_ram_pages</name></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:37"><expr pos:start="123:5" pos:end="123:36"><call pos:start="123:5" pos:end="123:36"><name pos:start="123:5" pos:end="123:34">kqemu_reset_modified_ram_pages</name><argument_list pos:start="123:35" pos:end="123:36">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="127:5" pos:end="138:0"><if pos:start="127:5" pos:end="129:39">if <condition pos:start="127:8" pos:end="127:41">(<expr pos:start="127:9" pos:end="127:40"><name pos:start="127:9" pos:end="127:27"><name pos:start="127:9" pos:end="127:11">env</name><operator pos:start="127:12" pos:end="127:13">-&gt;</operator><name pos:start="127:14" pos:end="127:27">cpuid_features</name></name> <operator pos:start="127:29" pos:end="127:29">&amp;</operator> <name pos:start="127:31" pos:end="127:40">CPUID_FXSR</name></expr>)</condition><block type="pseudo" pos:start="129:9" pos:end="129:39"><block_content pos:start="129:9" pos:end="129:39">

        <expr_stmt pos:start="129:9" pos:end="129:39"><expr pos:start="129:9" pos:end="129:38"><call pos:start="129:9" pos:end="129:38"><name pos:start="129:9" pos:end="129:33">restore_native_fp_fxrstor</name><argument_list pos:start="129:34" pos:end="129:38">(<argument pos:start="129:35" pos:end="129:37"><expr pos:start="129:35" pos:end="129:37"><name pos:start="129:35" pos:end="129:37">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="131:5" pos:end="138:0">else<block type="pseudo" pos:start="133:9" pos:end="138:0"><block_content pos:start="133:9" pos:end="138:0">

        <expr_stmt pos:start="133:9" pos:end="138:0"><expr pos:start="133:9" pos:end="133:37"><call pos:start="133:9" pos:end="133:37"><name pos:start="133:9" pos:end="133:32">restore_native_fp_frstor</name><argument_list pos:start="133:33" pos:end="133:37">(<argument pos:start="133:34" pos:end="133:36"><expr pos:start="133:34" pos:end="133:36"><name pos:start="133:34" pos:end="133:36">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



<cpp:ifdef pos:start="137:1" pos:end="137:13">#<cpp:directive pos:start="137:2" pos:end="137:6">ifdef</cpp:directive> <name pos:start="137:8" pos:end="137:13">_WIN32</name></cpp:ifdef>

    <if_stmt pos:start="139:5" pos:end="156:0"><if pos:start="139:5" pos:end="149:5">if <condition pos:start="139:8" pos:end="145:37">(<expr pos:start="139:9" pos:end="145:36"><call pos:start="139:9" pos:end="145:36"><name pos:start="139:9" pos:end="139:23">DeviceIoControl</name><argument_list pos:start="139:24" pos:end="145:36">(<argument pos:start="139:25" pos:end="139:32"><expr pos:start="139:25" pos:end="139:32"><name pos:start="139:25" pos:end="139:32">kqemu_fd</name></expr></argument>, <argument pos:start="139:35" pos:end="139:44"><expr pos:start="139:35" pos:end="139:44"><name pos:start="139:35" pos:end="139:44">KQEMU_EXEC</name></expr></argument>,

                        <argument pos:start="141:25" pos:end="141:28"><expr pos:start="141:25" pos:end="141:28"><name pos:start="141:25" pos:end="141:28">kenv</name></expr></argument>, <argument pos:start="141:31" pos:end="141:60"><expr pos:start="141:31" pos:end="141:60"><sizeof pos:start="141:31" pos:end="141:60">sizeof<argument_list pos:start="141:37" pos:end="141:60">(<argument pos:start="141:38" pos:end="141:59"><expr pos:start="141:38" pos:end="141:59">struct <name pos:start="141:45" pos:end="141:59">kqemu_cpu_state</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                        <argument pos:start="143:25" pos:end="143:28"><expr pos:start="143:25" pos:end="143:28"><name pos:start="143:25" pos:end="143:28">kenv</name></expr></argument>, <argument pos:start="143:31" pos:end="143:60"><expr pos:start="143:31" pos:end="143:60"><sizeof pos:start="143:31" pos:end="143:60">sizeof<argument_list pos:start="143:37" pos:end="143:60">(<argument pos:start="143:38" pos:end="143:59"><expr pos:start="143:38" pos:end="143:59">struct <name pos:start="143:45" pos:end="143:59">kqemu_cpu_state</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                        <argument pos:start="145:25" pos:end="145:29"><expr pos:start="145:25" pos:end="145:29"><operator pos:start="145:25" pos:end="145:25">&amp;</operator><name pos:start="145:26" pos:end="145:29">temp</name></expr></argument>, <argument pos:start="145:32" pos:end="145:35"><expr pos:start="145:32" pos:end="145:35"><name pos:start="145:32" pos:end="145:35">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="145:39" pos:end="149:5">{<block_content pos:start="147:9" pos:end="147:27">

        <expr_stmt pos:start="147:9" pos:end="147:27"><expr pos:start="147:9" pos:end="147:26"><name pos:start="147:9" pos:end="147:11">ret</name> <operator pos:start="147:13" pos:end="147:13">=</operator> <name pos:start="147:15" pos:end="147:26"><name pos:start="147:15" pos:end="147:18">kenv</name><operator pos:start="147:19" pos:end="147:20">-&gt;</operator><name pos:start="147:21" pos:end="147:26">retval</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="149:7" pos:end="156:0">else <block pos:start="149:12" pos:end="156:0">{<block_content pos:start="151:9" pos:end="151:17">

        <expr_stmt pos:start="151:9" pos:end="151:17"><expr pos:start="151:9" pos:end="151:16"><name pos:start="151:9" pos:end="151:11">ret</name> <operator pos:start="151:13" pos:end="151:13">=</operator> <operator pos:start="151:15" pos:end="151:15">-</operator><literal type="number" pos:start="151:16" pos:end="151:16">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

<cpp:else pos:start="155:1" pos:end="155:5">#<cpp:directive pos:start="155:2" pos:end="155:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="157:5" pos:end="157:38"><expr pos:start="157:5" pos:end="157:37"><call pos:start="157:5" pos:end="157:37"><name pos:start="157:5" pos:end="157:9">ioctl</name><argument_list pos:start="157:10" pos:end="157:37">(<argument pos:start="157:11" pos:end="157:18"><expr pos:start="157:11" pos:end="157:18"><name pos:start="157:11" pos:end="157:18">kqemu_fd</name></expr></argument>, <argument pos:start="157:21" pos:end="157:30"><expr pos:start="157:21" pos:end="157:30"><name pos:start="157:21" pos:end="157:30">KQEMU_EXEC</name></expr></argument>, <argument pos:start="157:33" pos:end="157:36"><expr pos:start="157:33" pos:end="157:36"><name pos:start="157:33" pos:end="157:36">kenv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="162:0"><expr pos:start="159:5" pos:end="159:22"><name pos:start="159:5" pos:end="159:7">ret</name> <operator pos:start="159:9" pos:end="159:9">=</operator> <name pos:start="159:11" pos:end="159:22"><name pos:start="159:11" pos:end="159:14">kenv</name><operator pos:start="159:15" pos:end="159:16">-&gt;</operator><name pos:start="159:17" pos:end="159:22">retval</name></name></expr>;</expr_stmt>

<cpp:endif pos:start="161:1" pos:end="161:6">#<cpp:directive pos:start="161:2" pos:end="161:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="163:5" pos:end="169:34"><if pos:start="163:5" pos:end="165:35">if <condition pos:start="163:8" pos:end="163:41">(<expr pos:start="163:9" pos:end="163:40"><name pos:start="163:9" pos:end="163:27"><name pos:start="163:9" pos:end="163:11">env</name><operator pos:start="163:12" pos:end="163:13">-&gt;</operator><name pos:start="163:14" pos:end="163:27">cpuid_features</name></name> <operator pos:start="163:29" pos:end="163:29">&amp;</operator> <name pos:start="163:31" pos:end="163:40">CPUID_FXSR</name></expr>)</condition><block type="pseudo" pos:start="165:9" pos:end="165:35"><block_content pos:start="165:9" pos:end="165:35">

        <expr_stmt pos:start="165:9" pos:end="165:35"><expr pos:start="165:9" pos:end="165:34"><call pos:start="165:9" pos:end="165:34"><name pos:start="165:9" pos:end="165:29">save_native_fp_fxsave</name><argument_list pos:start="165:30" pos:end="165:34">(<argument pos:start="165:31" pos:end="165:33"><expr pos:start="165:31" pos:end="165:33"><name pos:start="165:31" pos:end="165:33">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="167:5" pos:end="169:34">else<block type="pseudo" pos:start="169:9" pos:end="169:34"><block_content pos:start="169:9" pos:end="169:34">

        <expr_stmt pos:start="169:9" pos:end="169:34"><expr pos:start="169:9" pos:end="169:33"><call pos:start="169:9" pos:end="169:33"><name pos:start="169:9" pos:end="169:28">save_native_fp_fsave</name><argument_list pos:start="169:29" pos:end="169:33">(<argument pos:start="169:30" pos:end="169:32"><expr pos:start="169:30" pos:end="169:32"><name pos:start="169:30" pos:end="169:32">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <for pos:start="173:5" pos:end="175:37">for<control pos:start="173:8" pos:end="173:36">(<init pos:start="173:9" pos:end="173:14"><expr pos:start="173:9" pos:end="173:13"><name pos:start="173:9" pos:end="173:9">i</name> <operator pos:start="173:11" pos:end="173:11">=</operator> <literal type="number" pos:start="173:13" pos:end="173:13">0</literal></expr>;</init> <condition pos:start="173:16" pos:end="173:31"><expr pos:start="173:16" pos:end="173:30"><name pos:start="173:16" pos:end="173:16">i</name> <operator pos:start="173:18" pos:end="173:18">&lt;</operator> <name pos:start="173:20" pos:end="173:30">CPU_NB_REGS</name></expr>;</condition> <incr pos:start="173:33" pos:end="173:35"><expr pos:start="173:33" pos:end="173:35"><name pos:start="173:33" pos:end="173:33">i</name><operator pos:start="173:34" pos:end="173:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="175:9" pos:end="175:37"><block_content pos:start="175:9" pos:end="175:37">

        <expr_stmt pos:start="175:9" pos:end="175:37"><expr pos:start="175:9" pos:end="175:36"><name pos:start="175:9" pos:end="175:20"><name pos:start="175:9" pos:end="175:11">env</name><operator pos:start="175:12" pos:end="175:13">-&gt;</operator><name pos:start="175:14" pos:end="175:17">regs</name><index pos:start="175:18" pos:end="175:20">[<expr pos:start="175:19" pos:end="175:19"><name pos:start="175:19" pos:end="175:19">i</name></expr>]</index></name> <operator pos:start="175:22" pos:end="175:22">=</operator> <name pos:start="175:24" pos:end="175:36"><name pos:start="175:24" pos:end="175:27">kenv</name><operator pos:start="175:28" pos:end="175:29">-&gt;</operator><name pos:start="175:30" pos:end="175:33">regs</name><index pos:start="175:34" pos:end="175:36">[<expr pos:start="175:35" pos:end="175:35"><name pos:start="175:35" pos:end="175:35">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="177:5" pos:end="177:25"><expr pos:start="177:5" pos:end="177:24"><name pos:start="177:5" pos:end="177:12"><name pos:start="177:5" pos:end="177:7">env</name><operator pos:start="177:8" pos:end="177:9">-&gt;</operator><name pos:start="177:10" pos:end="177:12">eip</name></name> <operator pos:start="177:14" pos:end="177:14">=</operator> <name pos:start="177:16" pos:end="177:24"><name pos:start="177:16" pos:end="177:19">kenv</name><operator pos:start="177:20" pos:end="177:21">-&gt;</operator><name pos:start="177:22" pos:end="177:24">eip</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:31"><expr pos:start="179:5" pos:end="179:30"><name pos:start="179:5" pos:end="179:15"><name pos:start="179:5" pos:end="179:7">env</name><operator pos:start="179:8" pos:end="179:9">-&gt;</operator><name pos:start="179:10" pos:end="179:15">eflags</name></name> <operator pos:start="179:17" pos:end="179:17">=</operator> <name pos:start="179:19" pos:end="179:30"><name pos:start="179:19" pos:end="179:22">kenv</name><operator pos:start="179:23" pos:end="179:24">-&gt;</operator><name pos:start="179:25" pos:end="179:30">eflags</name></name></expr>;</expr_stmt>

    <for pos:start="181:5" pos:end="183:54">for<control pos:start="181:8" pos:end="181:26">(<init pos:start="181:9" pos:end="181:14"><expr pos:start="181:9" pos:end="181:13"><name pos:start="181:9" pos:end="181:9">i</name> <operator pos:start="181:11" pos:end="181:11">=</operator> <literal type="number" pos:start="181:13" pos:end="181:13">0</literal></expr>;</init> <condition pos:start="181:16" pos:end="181:21"><expr pos:start="181:16" pos:end="181:20"><name pos:start="181:16" pos:end="181:16">i</name> <operator pos:start="181:18" pos:end="181:18">&lt;</operator> <literal type="number" pos:start="181:20" pos:end="181:20">6</literal></expr>;</condition> <incr pos:start="181:23" pos:end="181:25"><expr pos:start="181:23" pos:end="181:25"><name pos:start="181:23" pos:end="181:23">i</name><operator pos:start="181:24" pos:end="181:25">++</operator></expr></incr>)</control><block type="pseudo" pos:start="183:9" pos:end="183:54"><block_content pos:start="183:9" pos:end="183:54">

        <expr_stmt pos:start="183:9" pos:end="183:54"><expr pos:start="183:9" pos:end="183:53"><call pos:start="183:9" pos:end="183:53"><name pos:start="183:9" pos:end="183:22">kqemu_save_seg</name><argument_list pos:start="183:23" pos:end="183:53">(<argument pos:start="183:24" pos:end="183:36"><expr pos:start="183:24" pos:end="183:36"><operator pos:start="183:24" pos:end="183:24">&amp;</operator><name pos:start="183:25" pos:end="183:36"><name pos:start="183:25" pos:end="183:27">env</name><operator pos:start="183:28" pos:end="183:29">-&gt;</operator><name pos:start="183:30" pos:end="183:33">segs</name><index pos:start="183:34" pos:end="183:36">[<expr pos:start="183:35" pos:end="183:35"><name pos:start="183:35" pos:end="183:35">i</name></expr>]</index></name></expr></argument>, <argument pos:start="183:39" pos:end="183:52"><expr pos:start="183:39" pos:end="183:52"><operator pos:start="183:39" pos:end="183:39">&amp;</operator><name pos:start="183:40" pos:end="183:52"><name pos:start="183:40" pos:end="183:43">kenv</name><operator pos:start="183:44" pos:end="183:45">-&gt;</operator><name pos:start="183:46" pos:end="183:49">segs</name><index pos:start="183:50" pos:end="183:52">[<expr pos:start="183:51" pos:end="183:51"><name pos:start="183:51" pos:end="183:51">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="185:5" pos:end="185:36"><expr pos:start="185:5" pos:end="185:35"><call pos:start="185:5" pos:end="185:35"><name pos:start="185:5" pos:end="185:19">cpu_x86_set_cpl</name><argument_list pos:start="185:20" pos:end="185:35">(<argument pos:start="185:21" pos:end="185:23"><expr pos:start="185:21" pos:end="185:23"><name pos:start="185:21" pos:end="185:23">env</name></expr></argument>, <argument pos:start="185:26" pos:end="185:34"><expr pos:start="185:26" pos:end="185:34"><name pos:start="185:26" pos:end="185:34"><name pos:start="185:26" pos:end="185:29">kenv</name><operator pos:start="185:30" pos:end="185:31">-&gt;</operator><name pos:start="185:32" pos:end="185:34">cpl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:42"><expr pos:start="187:5" pos:end="187:41"><call pos:start="187:5" pos:end="187:41"><name pos:start="187:5" pos:end="187:18">kqemu_save_seg</name><argument_list pos:start="187:19" pos:end="187:41">(<argument pos:start="187:20" pos:end="187:28"><expr pos:start="187:20" pos:end="187:28"><operator pos:start="187:20" pos:end="187:20">&amp;</operator><name pos:start="187:21" pos:end="187:28"><name pos:start="187:21" pos:end="187:23">env</name><operator pos:start="187:24" pos:end="187:25">-&gt;</operator><name pos:start="187:26" pos:end="187:28">ldt</name></name></expr></argument>, <argument pos:start="187:31" pos:end="187:40"><expr pos:start="187:31" pos:end="187:40"><operator pos:start="187:31" pos:end="187:31">&amp;</operator><name pos:start="187:32" pos:end="187:40"><name pos:start="187:32" pos:end="187:35">kenv</name><operator pos:start="187:36" pos:end="187:37">-&gt;</operator><name pos:start="187:38" pos:end="187:40">ldt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:27"><expr pos:start="189:5" pos:end="189:26"><name pos:start="189:5" pos:end="189:14"><name pos:start="189:5" pos:end="189:7">env</name><operator pos:start="189:8" pos:end="189:9">-&gt;</operator><name pos:start="189:10" pos:end="189:11">cr</name><index pos:start="189:12" pos:end="189:14">[<expr pos:start="189:13" pos:end="189:13"><literal type="number" pos:start="189:13" pos:end="189:13">0</literal></expr>]</index></name> <operator pos:start="189:16" pos:end="189:16">=</operator> <name pos:start="189:18" pos:end="189:26"><name pos:start="189:18" pos:end="189:21">kenv</name><operator pos:start="189:22" pos:end="189:23">-&gt;</operator><name pos:start="189:24" pos:end="189:26">cr0</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:27"><expr pos:start="191:5" pos:end="191:26"><name pos:start="191:5" pos:end="191:14"><name pos:start="191:5" pos:end="191:7">env</name><operator pos:start="191:8" pos:end="191:9">-&gt;</operator><name pos:start="191:10" pos:end="191:11">cr</name><index pos:start="191:12" pos:end="191:14">[<expr pos:start="191:13" pos:end="191:13"><literal type="number" pos:start="191:13" pos:end="191:13">4</literal></expr>]</index></name> <operator pos:start="191:16" pos:end="191:16">=</operator> <name pos:start="191:18" pos:end="191:26"><name pos:start="191:18" pos:end="191:21">kenv</name><operator pos:start="191:22" pos:end="191:23">-&gt;</operator><name pos:start="191:24" pos:end="191:26">cr4</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:27"><expr pos:start="193:5" pos:end="193:26"><name pos:start="193:5" pos:end="193:14"><name pos:start="193:5" pos:end="193:7">env</name><operator pos:start="193:8" pos:end="193:9">-&gt;</operator><name pos:start="193:10" pos:end="193:11">cr</name><index pos:start="193:12" pos:end="193:14">[<expr pos:start="193:13" pos:end="193:13"><literal type="number" pos:start="193:13" pos:end="193:13">3</literal></expr>]</index></name> <operator pos:start="193:16" pos:end="193:16">=</operator> <name pos:start="193:18" pos:end="193:26"><name pos:start="193:18" pos:end="193:21">kenv</name><operator pos:start="193:22" pos:end="193:23">-&gt;</operator><name pos:start="193:24" pos:end="193:26">cr3</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:27"><expr pos:start="195:5" pos:end="195:26"><name pos:start="195:5" pos:end="195:14"><name pos:start="195:5" pos:end="195:7">env</name><operator pos:start="195:8" pos:end="195:9">-&gt;</operator><name pos:start="195:10" pos:end="195:11">cr</name><index pos:start="195:12" pos:end="195:14">[<expr pos:start="195:13" pos:end="195:13"><literal type="number" pos:start="195:13" pos:end="195:13">2</literal></expr>]</index></name> <operator pos:start="195:16" pos:end="195:16">=</operator> <name pos:start="195:18" pos:end="195:26"><name pos:start="195:18" pos:end="195:21">kenv</name><operator pos:start="195:22" pos:end="195:23">-&gt;</operator><name pos:start="195:24" pos:end="195:26">cr2</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="200:0"><expr pos:start="197:5" pos:end="197:26"><name pos:start="197:5" pos:end="197:14"><name pos:start="197:5" pos:end="197:7">env</name><operator pos:start="197:8" pos:end="197:9">-&gt;</operator><name pos:start="197:10" pos:end="197:11">dr</name><index pos:start="197:12" pos:end="197:14">[<expr pos:start="197:13" pos:end="197:13"><literal type="number" pos:start="197:13" pos:end="197:13">6</literal></expr>]</index></name> <operator pos:start="197:16" pos:end="197:16">=</operator> <name pos:start="197:18" pos:end="197:26"><name pos:start="197:18" pos:end="197:21">kenv</name><operator pos:start="197:22" pos:end="197:23">-&gt;</operator><name pos:start="197:24" pos:end="197:26">dr6</name></name></expr>;</expr_stmt>

<cpp:ifdef pos:start="199:1" pos:end="199:20">#<cpp:directive pos:start="199:2" pos:end="199:6">ifdef</cpp:directive> <name pos:start="199:8" pos:end="199:20">TARGET_X86_64</name></cpp:ifdef>

    <expr_stmt pos:start="201:5" pos:end="204:0"><expr pos:start="201:5" pos:end="201:42"><name pos:start="201:5" pos:end="201:21"><name pos:start="201:5" pos:end="201:7">env</name><operator pos:start="201:8" pos:end="201:9">-&gt;</operator><name pos:start="201:10" pos:end="201:21">kernelgsbase</name></name> <operator pos:start="201:23" pos:end="201:23">=</operator> <name pos:start="201:25" pos:end="201:42"><name pos:start="201:25" pos:end="201:28">kenv</name><operator pos:start="201:29" pos:end="201:30">-&gt;</operator><name pos:start="201:31" pos:end="201:42">kernelgsbase</name></name></expr>;</expr_stmt>

<cpp:endif pos:start="203:1" pos:end="203:6">#<cpp:directive pos:start="203:2" pos:end="203:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="207:5" pos:end="207:43">/* flush pages as indicated by kqemu */</comment>

    <if_stmt pos:start="209:5" pos:end="221:5"><if pos:start="209:5" pos:end="213:5">if <condition pos:start="209:8" pos:end="209:51">(<expr pos:start="209:9" pos:end="209:50"><name pos:start="209:9" pos:end="209:31"><name pos:start="209:9" pos:end="209:12">kenv</name><operator pos:start="209:13" pos:end="209:14">-&gt;</operator><name pos:start="209:15" pos:end="209:31">nb_pages_to_flush</name></name> <operator pos:start="209:33" pos:end="209:34">&gt;=</operator> <name pos:start="209:36" pos:end="209:50">KQEMU_FLUSH_ALL</name></expr>)</condition> <block pos:start="209:53" pos:end="213:5">{<block_content pos:start="211:9" pos:end="211:26">

        <expr_stmt pos:start="211:9" pos:end="211:26"><expr pos:start="211:9" pos:end="211:25"><call pos:start="211:9" pos:end="211:25"><name pos:start="211:9" pos:end="211:17">tlb_flush</name><argument_list pos:start="211:18" pos:end="211:25">(<argument pos:start="211:19" pos:end="211:21"><expr pos:start="211:19" pos:end="211:21"><name pos:start="211:19" pos:end="211:21">env</name></expr></argument>, <argument pos:start="211:24" pos:end="211:24"><expr pos:start="211:24" pos:end="211:24"><literal type="number" pos:start="211:24" pos:end="211:24">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="213:7" pos:end="221:5">else <block pos:start="213:12" pos:end="221:5">{<block_content pos:start="215:9" pos:end="219:9">

        <for pos:start="215:9" pos:end="219:9">for<control pos:start="215:12" pos:end="215:52">(<init pos:start="215:13" pos:end="215:18"><expr pos:start="215:13" pos:end="215:17"><name pos:start="215:13" pos:end="215:13">i</name> <operator pos:start="215:15" pos:end="215:15">=</operator> <literal type="number" pos:start="215:17" pos:end="215:17">0</literal></expr>;</init> <condition pos:start="215:20" pos:end="215:47"><expr pos:start="215:20" pos:end="215:46"><name pos:start="215:20" pos:end="215:20">i</name> <operator pos:start="215:22" pos:end="215:22">&lt;</operator> <name pos:start="215:24" pos:end="215:46"><name pos:start="215:24" pos:end="215:27">kenv</name><operator pos:start="215:28" pos:end="215:29">-&gt;</operator><name pos:start="215:30" pos:end="215:46">nb_pages_to_flush</name></name></expr>;</condition> <incr pos:start="215:49" pos:end="215:51"><expr pos:start="215:49" pos:end="215:51"><name pos:start="215:49" pos:end="215:49">i</name><operator pos:start="215:50" pos:end="215:51">++</operator></expr></incr>)</control> <block pos:start="215:54" pos:end="219:9">{<block_content pos:start="217:13" pos:end="217:51">

            <expr_stmt pos:start="217:13" pos:end="217:51"><expr pos:start="217:13" pos:end="217:50"><call pos:start="217:13" pos:end="217:50"><name pos:start="217:13" pos:end="217:26">tlb_flush_page</name><argument_list pos:start="217:27" pos:end="217:50">(<argument pos:start="217:28" pos:end="217:30"><expr pos:start="217:28" pos:end="217:30"><name pos:start="217:28" pos:end="217:30">env</name></expr></argument>, <argument pos:start="217:33" pos:end="217:49"><expr pos:start="217:33" pos:end="217:49"><name pos:start="217:33" pos:end="217:49"><name pos:start="217:33" pos:end="217:46">pages_to_flush</name><index pos:start="217:47" pos:end="217:49">[<expr pos:start="217:48" pos:end="217:48"><name pos:start="217:48" pos:end="217:48">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="223:5" pos:end="228:0"><expr pos:start="223:5" pos:end="223:25"><name pos:start="223:5" pos:end="223:21">nb_pages_to_flush</name> <operator pos:start="223:23" pos:end="223:23">=</operator> <literal type="number" pos:start="223:25" pos:end="223:25">0</literal></expr>;</expr_stmt>



<cpp:ifdef pos:start="227:1" pos:end="227:22">#<cpp:directive pos:start="227:2" pos:end="227:6">ifdef</cpp:directive> <name pos:start="227:8" pos:end="227:22">CONFIG_PROFILER</name></cpp:ifdef>

    <expr_stmt pos:start="229:5" pos:end="229:42"><expr pos:start="229:5" pos:end="229:41"><name pos:start="229:5" pos:end="229:14">kqemu_time</name> <operator pos:start="229:16" pos:end="229:17">+=</operator> <call pos:start="229:19" pos:end="229:36"><name pos:start="229:19" pos:end="229:34">profile_getclock</name><argument_list pos:start="229:35" pos:end="229:36">()</argument_list></call> <operator pos:start="229:38" pos:end="229:38">-</operator> <name pos:start="229:40" pos:end="229:41">ti</name></expr>;</expr_stmt>

    <expr_stmt pos:start="231:5" pos:end="234:0"><expr pos:start="231:5" pos:end="231:22"><name pos:start="231:5" pos:end="231:20">kqemu_exec_count</name><operator pos:start="231:21" pos:end="231:22">++</operator></expr>;</expr_stmt>

<cpp:endif pos:start="233:1" pos:end="233:6">#<cpp:directive pos:start="233:2" pos:end="233:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="237:5" pos:end="241:5"><if pos:start="237:5" pos:end="241:5">if <condition pos:start="237:8" pos:end="237:41">(<expr pos:start="237:9" pos:end="237:40"><name pos:start="237:9" pos:end="237:36"><name pos:start="237:9" pos:end="237:12">kenv</name><operator pos:start="237:13" pos:end="237:14">-&gt;</operator><name pos:start="237:15" pos:end="237:36">nb_ram_pages_to_update</name></name> <operator pos:start="237:38" pos:end="237:38">&gt;</operator> <literal type="number" pos:start="237:40" pos:end="237:40">0</literal></expr>)</condition> <block pos:start="237:43" pos:end="241:5">{<block_content pos:start="239:9" pos:end="239:34">

        <expr_stmt pos:start="239:9" pos:end="239:34"><expr pos:start="239:9" pos:end="239:33"><call pos:start="239:9" pos:end="239:33"><name pos:start="239:9" pos:end="239:28">cpu_tlb_update_dirty</name><argument_list pos:start="239:29" pos:end="239:33">(<argument pos:start="239:30" pos:end="239:32"><expr pos:start="239:30" pos:end="239:32"><name pos:start="239:30" pos:end="239:32">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="245:5" pos:end="257:5"><if pos:start="245:5" pos:end="257:5">if <condition pos:start="245:8" pos:end="245:40">(<expr pos:start="245:9" pos:end="245:39"><name pos:start="245:9" pos:end="245:35"><name pos:start="245:9" pos:end="245:12">kenv</name><operator pos:start="245:13" pos:end="245:14">-&gt;</operator><name pos:start="245:15" pos:end="245:35">nb_modified_ram_pages</name></name> <operator pos:start="245:37" pos:end="245:37">&gt;</operator> <literal type="number" pos:start="245:39" pos:end="245:39">0</literal></expr>)</condition> <block pos:start="245:42" pos:end="257:5">{<block_content pos:start="247:9" pos:end="255:9">

        <for pos:start="247:9" pos:end="255:9">for<control pos:start="247:12" pos:end="247:56">(<init pos:start="247:13" pos:end="247:18"><expr pos:start="247:13" pos:end="247:17"><name pos:start="247:13" pos:end="247:13">i</name> <operator pos:start="247:15" pos:end="247:15">=</operator> <literal type="number" pos:start="247:17" pos:end="247:17">0</literal></expr>;</init> <condition pos:start="247:20" pos:end="247:51"><expr pos:start="247:20" pos:end="247:50"><name pos:start="247:20" pos:end="247:20">i</name> <operator pos:start="247:22" pos:end="247:22">&lt;</operator> <name pos:start="247:24" pos:end="247:50"><name pos:start="247:24" pos:end="247:27">kenv</name><operator pos:start="247:28" pos:end="247:29">-&gt;</operator><name pos:start="247:30" pos:end="247:50">nb_modified_ram_pages</name></name></expr>;</condition> <incr pos:start="247:53" pos:end="247:55"><expr pos:start="247:53" pos:end="247:55"><name pos:start="247:53" pos:end="247:53">i</name><operator pos:start="247:54" pos:end="247:55">++</operator></expr></incr>)</control> <block pos:start="247:58" pos:end="255:9">{<block_content pos:start="249:13" pos:end="253:76">

            <decl_stmt pos:start="249:13" pos:end="249:31"><decl pos:start="249:13" pos:end="249:30"><type pos:start="249:13" pos:end="249:25"><name pos:start="249:13" pos:end="249:20">unsigned</name> <name pos:start="249:22" pos:end="249:25">long</name></type> <name pos:start="249:27" pos:end="249:30">addr</name></decl>;</decl_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:41"><expr pos:start="251:13" pos:end="251:40"><name pos:start="251:13" pos:end="251:16">addr</name> <operator pos:start="251:18" pos:end="251:18">=</operator> <name pos:start="251:20" pos:end="251:40"><name pos:start="251:20" pos:end="251:37">modified_ram_pages</name><index pos:start="251:38" pos:end="251:40">[<expr pos:start="251:39" pos:end="251:39"><name pos:start="251:39" pos:end="251:39">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:76"><expr pos:start="253:13" pos:end="253:75"><call pos:start="253:13" pos:end="253:75"><name pos:start="253:13" pos:end="253:41">tb_invalidate_phys_page_range</name><argument_list pos:start="253:42" pos:end="253:75">(<argument pos:start="253:43" pos:end="253:46"><expr pos:start="253:43" pos:end="253:46"><name pos:start="253:43" pos:end="253:46">addr</name></expr></argument>, <argument pos:start="253:49" pos:end="253:71"><expr pos:start="253:49" pos:end="253:71"><name pos:start="253:49" pos:end="253:52">addr</name> <operator pos:start="253:54" pos:end="253:54">+</operator> <name pos:start="253:56" pos:end="253:71">TARGET_PAGE_SIZE</name></expr></argument>, <argument pos:start="253:74" pos:end="253:74"><expr pos:start="253:74" pos:end="253:74"><literal type="number" pos:start="253:74" pos:end="253:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="261:5" pos:end="261:34">/* restore the hidden flags */</comment>

    <block pos:start="263:5" pos:end="331:5">{<block_content pos:start="265:9" pos:end="329:23">

        <decl_stmt pos:start="265:9" pos:end="268:0"><decl pos:start="265:9" pos:end="265:31"><type pos:start="265:9" pos:end="265:20"><name pos:start="265:9" pos:end="265:16">unsigned</name> <name pos:start="265:18" pos:end="265:20">int</name></type> <name pos:start="265:22" pos:end="265:31">new_hflags</name></decl>;</decl_stmt>

<cpp:ifdef pos:start="267:1" pos:end="267:20">#<cpp:directive pos:start="267:2" pos:end="267:6">ifdef</cpp:directive> <name pos:start="267:8" pos:end="267:20">TARGET_X86_64</name></cpp:ifdef>

        <if_stmt pos:start="269:9" pos:end="323:9"><if pos:start="269:9" pos:end="277:9">if <condition pos:start="269:12" pos:end="271:50">(<expr pos:start="269:13" pos:end="271:49"><operator pos:start="269:13" pos:end="269:13">(</operator><name pos:start="269:14" pos:end="269:24"><name pos:start="269:14" pos:end="269:16">env</name><operator pos:start="269:17" pos:end="269:18">-&gt;</operator><name pos:start="269:19" pos:end="269:24">hflags</name></name> <operator pos:start="269:26" pos:end="269:26">&amp;</operator> <name pos:start="269:28" pos:end="269:38">HF_LMA_MASK</name><operator pos:start="269:39" pos:end="269:39">)</operator> <operator pos:start="269:41" pos:end="269:42">&amp;&amp;</operator>

            <operator pos:start="271:13" pos:end="271:13">(</operator><name pos:start="271:14" pos:end="271:28"><name pos:start="271:14" pos:end="271:16">env</name><operator pos:start="271:17" pos:end="271:18">-&gt;</operator><name pos:start="271:19" pos:end="271:22">segs</name><index pos:start="271:23" pos:end="271:28">[<expr pos:start="271:24" pos:end="271:27"><name pos:start="271:24" pos:end="271:27">R_CS</name></expr>]</index></name><operator pos:start="271:29" pos:end="271:29">.</operator><name pos:start="271:30" pos:end="271:34">flags</name> <operator pos:start="271:36" pos:end="271:36">&amp;</operator> <name pos:start="271:38" pos:end="271:48">DESC_L_MASK</name><operator pos:start="271:49" pos:end="271:49">)</operator></expr>)</condition> <block pos:start="271:52" pos:end="277:9">{<block_content pos:start="275:13" pos:end="275:68">

            <comment type="block" pos:start="273:13" pos:end="273:27">/* long mode */</comment>

            <expr_stmt pos:start="275:13" pos:end="275:68"><expr pos:start="275:13" pos:end="275:67"><name pos:start="275:13" pos:end="275:22">new_hflags</name> <operator pos:start="275:24" pos:end="275:24">=</operator> <name pos:start="275:26" pos:end="275:37">HF_CS32_MASK</name> <operator pos:start="275:39" pos:end="275:39">|</operator> <name pos:start="275:41" pos:end="275:52">HF_SS32_MASK</name> <operator pos:start="275:54" pos:end="275:54">|</operator> <name pos:start="275:56" pos:end="275:67">HF_CS64_MASK</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="277:11" pos:end="323:9">else

<cpp:endif pos:start="279:1" pos:end="279:6">#<cpp:directive pos:start="279:2" pos:end="279:6">endif</cpp:directive></cpp:endif>

        <block pos:start="281:9" pos:end="323:9">{<block_content pos:start="285:13" pos:end="321:13">

            <comment type="block" pos:start="283:13" pos:end="283:45">/* legacy / compatibility case */</comment>

            <expr_stmt pos:start="285:13" pos:end="287:50"><expr pos:start="285:13" pos:end="287:49"><name pos:start="285:13" pos:end="285:22">new_hflags</name> <operator pos:start="285:24" pos:end="285:24">=</operator> <operator pos:start="285:26" pos:end="285:26">(</operator><name pos:start="285:27" pos:end="285:41"><name pos:start="285:27" pos:end="285:29">env</name><operator pos:start="285:30" pos:end="285:31">-&gt;</operator><name pos:start="285:32" pos:end="285:35">segs</name><index pos:start="285:36" pos:end="285:41">[<expr pos:start="285:37" pos:end="285:40"><name pos:start="285:37" pos:end="285:40">R_CS</name></expr>]</index></name><operator pos:start="285:42" pos:end="285:42">.</operator><name pos:start="285:43" pos:end="285:47">flags</name> <operator pos:start="285:49" pos:end="285:49">&amp;</operator> <name pos:start="285:51" pos:end="285:61">DESC_B_MASK</name><operator pos:start="285:62" pos:end="285:62">)</operator>

                <operator pos:start="287:17" pos:end="287:18">&gt;&gt;</operator> <operator pos:start="287:20" pos:end="287:20">(</operator><name pos:start="287:21" pos:end="287:32">DESC_B_SHIFT</name> <operator pos:start="287:34" pos:end="287:34">-</operator> <name pos:start="287:36" pos:end="287:48">HF_CS32_SHIFT</name><operator pos:start="287:49" pos:end="287:49">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="289:13" pos:end="291:50"><expr pos:start="289:13" pos:end="291:49"><name pos:start="289:13" pos:end="289:22">new_hflags</name> <operator pos:start="289:24" pos:end="289:25">|=</operator> <operator pos:start="289:27" pos:end="289:27">(</operator><name pos:start="289:28" pos:end="289:42"><name pos:start="289:28" pos:end="289:30">env</name><operator pos:start="289:31" pos:end="289:32">-&gt;</operator><name pos:start="289:33" pos:end="289:36">segs</name><index pos:start="289:37" pos:end="289:42">[<expr pos:start="289:38" pos:end="289:41"><name pos:start="289:38" pos:end="289:41">R_SS</name></expr>]</index></name><operator pos:start="289:43" pos:end="289:43">.</operator><name pos:start="289:44" pos:end="289:48">flags</name> <operator pos:start="289:50" pos:end="289:50">&amp;</operator> <name pos:start="289:52" pos:end="289:62">DESC_B_MASK</name><operator pos:start="289:63" pos:end="289:63">)</operator>

                <operator pos:start="291:17" pos:end="291:18">&gt;&gt;</operator> <operator pos:start="291:20" pos:end="291:20">(</operator><name pos:start="291:21" pos:end="291:32">DESC_B_SHIFT</name> <operator pos:start="291:34" pos:end="291:34">-</operator> <name pos:start="291:36" pos:end="291:48">HF_SS32_SHIFT</name><operator pos:start="291:49" pos:end="291:49">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="293:13" pos:end="321:13"><if pos:start="293:13" pos:end="311:13">if <condition pos:start="293:16" pos:end="297:49">(<expr pos:start="293:17" pos:end="297:48"><operator pos:start="293:17" pos:end="293:17">!</operator><operator pos:start="293:18" pos:end="293:18">(</operator><name pos:start="293:19" pos:end="293:28"><name pos:start="293:19" pos:end="293:21">env</name><operator pos:start="293:22" pos:end="293:23">-&gt;</operator><name pos:start="293:24" pos:end="293:25">cr</name><index pos:start="293:26" pos:end="293:28">[<expr pos:start="293:27" pos:end="293:27"><literal type="number" pos:start="293:27" pos:end="293:27">0</literal></expr>]</index></name> <operator pos:start="293:30" pos:end="293:30">&amp;</operator> <name pos:start="293:32" pos:end="293:42">CR0_PE_MASK</name><operator pos:start="293:43" pos:end="293:43">)</operator> <operator pos:start="293:45" pos:end="293:46">||</operator>

                   <operator pos:start="295:20" pos:end="295:20">(</operator><name pos:start="295:21" pos:end="295:31"><name pos:start="295:21" pos:end="295:23">env</name><operator pos:start="295:24" pos:end="295:25">-&gt;</operator><name pos:start="295:26" pos:end="295:31">eflags</name></name> <operator pos:start="295:33" pos:end="295:33">&amp;</operator> <name pos:start="295:35" pos:end="295:41">VM_MASK</name><operator pos:start="295:42" pos:end="295:42">)</operator> <operator pos:start="295:44" pos:end="295:45">||</operator>

                   <operator pos:start="297:20" pos:end="297:20">!</operator><operator pos:start="297:21" pos:end="297:21">(</operator><name pos:start="297:22" pos:end="297:32"><name pos:start="297:22" pos:end="297:24">env</name><operator pos:start="297:25" pos:end="297:26">-&gt;</operator><name pos:start="297:27" pos:end="297:32">hflags</name></name> <operator pos:start="297:34" pos:end="297:34">&amp;</operator> <name pos:start="297:36" pos:end="297:47">HF_CS32_MASK</name><operator pos:start="297:48" pos:end="297:48">)</operator></expr>)</condition> <block pos:start="297:51" pos:end="311:13">{<block_content pos:start="309:17" pos:end="309:45">

                <comment type="block" pos:start="299:17" pos:end="307:39">/* XXX: try to avoid this test. The problem comes from the

                   fact that is real mode or vm86 mode we only modify the

                   'base' and 'selector' fields of the segment cache to go

                   faster. A solution may be to force addseg to one in

                   translate-i386.c. */</comment>

                <expr_stmt pos:start="309:17" pos:end="309:45"><expr pos:start="309:17" pos:end="309:44"><name pos:start="309:17" pos:end="309:26">new_hflags</name> <operator pos:start="309:28" pos:end="309:29">|=</operator> <name pos:start="309:31" pos:end="309:44">HF_ADDSEG_MASK</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="311:15" pos:end="321:13">else <block pos:start="311:20" pos:end="321:13">{<block_content pos:start="313:17" pos:end="319:36">

                <expr_stmt pos:start="313:17" pos:end="319:36"><expr pos:start="313:17" pos:end="319:35"><name pos:start="313:17" pos:end="313:26">new_hflags</name> <operator pos:start="313:28" pos:end="313:29">|=</operator> <operator pos:start="313:31" pos:end="313:31">(</operator><operator pos:start="313:32" pos:end="313:32">(</operator><name pos:start="313:33" pos:end="313:47"><name pos:start="313:33" pos:end="313:35">env</name><operator pos:start="313:36" pos:end="313:37">-&gt;</operator><name pos:start="313:38" pos:end="313:41">segs</name><index pos:start="313:42" pos:end="313:47">[<expr pos:start="313:43" pos:end="313:46"><name pos:start="313:43" pos:end="313:46">R_DS</name></expr>]</index></name><operator pos:start="313:48" pos:end="313:48">.</operator><name pos:start="313:49" pos:end="313:52">base</name> <operator pos:start="313:54" pos:end="313:54">|</operator>

                                <name pos:start="315:33" pos:end="315:47"><name pos:start="315:33" pos:end="315:35">env</name><operator pos:start="315:36" pos:end="315:37">-&gt;</operator><name pos:start="315:38" pos:end="315:41">segs</name><index pos:start="315:42" pos:end="315:47">[<expr pos:start="315:43" pos:end="315:46"><name pos:start="315:43" pos:end="315:46">R_ES</name></expr>]</index></name><operator pos:start="315:48" pos:end="315:48">.</operator><name pos:start="315:49" pos:end="315:52">base</name> <operator pos:start="315:54" pos:end="315:54">|</operator>

                                <name pos:start="317:33" pos:end="317:47"><name pos:start="317:33" pos:end="317:35">env</name><operator pos:start="317:36" pos:end="317:37">-&gt;</operator><name pos:start="317:38" pos:end="317:41">segs</name><index pos:start="317:42" pos:end="317:47">[<expr pos:start="317:43" pos:end="317:46"><name pos:start="317:43" pos:end="317:46">R_SS</name></expr>]</index></name><operator pos:start="317:48" pos:end="317:48">.</operator><name pos:start="317:49" pos:end="317:52">base</name><operator pos:start="317:53" pos:end="317:53">)</operator> <operator pos:start="317:55" pos:end="317:56">!=</operator> <literal type="number" pos:start="317:58" pos:end="317:58">0</literal><operator pos:start="317:59" pos:end="317:59">)</operator> <operator pos:start="317:61" pos:end="317:62">&lt;&lt;</operator>

                    <name pos:start="319:21" pos:end="319:35">HF_ADDSEG_SHIFT</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="325:9" pos:end="329:23"><expr pos:start="325:9" pos:end="329:22"><name pos:start="325:9" pos:end="325:19"><name pos:start="325:9" pos:end="325:11">env</name><operator pos:start="325:12" pos:end="325:13">-&gt;</operator><name pos:start="325:14" pos:end="325:19">hflags</name></name> <operator pos:start="325:21" pos:end="325:21">=</operator> <operator pos:start="325:23" pos:end="325:23">(</operator><name pos:start="325:24" pos:end="325:34"><name pos:start="325:24" pos:end="325:26">env</name><operator pos:start="325:27" pos:end="325:28">-&gt;</operator><name pos:start="325:29" pos:end="325:34">hflags</name></name> <operator pos:start="325:36" pos:end="325:36">&amp;</operator>

           <operator pos:start="327:12" pos:end="327:12">~</operator><operator pos:start="327:13" pos:end="327:13">(</operator><name pos:start="327:14" pos:end="327:25">HF_CS32_MASK</name> <operator pos:start="327:27" pos:end="327:27">|</operator> <name pos:start="327:29" pos:end="327:40">HF_SS32_MASK</name> <operator pos:start="327:42" pos:end="327:42">|</operator> <name pos:start="327:44" pos:end="327:55">HF_CS64_MASK</name> <operator pos:start="327:57" pos:end="327:57">|</operator> <name pos:start="327:59" pos:end="327:72">HF_ADDSEG_MASK</name><operator pos:start="327:73" pos:end="327:73">)</operator><operator pos:start="327:74" pos:end="327:74">)</operator> <operator pos:start="327:76" pos:end="327:76">|</operator>

            <name pos:start="329:13" pos:end="329:22">new_hflags</name></expr>;</expr_stmt>

    </block_content>}</block>

    <comment type="block" pos:start="333:5" pos:end="333:26">/* update FPU flags */</comment>

    <expr_stmt pos:start="335:5" pos:end="337:85"><expr pos:start="335:5" pos:end="337:84"><name pos:start="335:5" pos:end="335:15"><name pos:start="335:5" pos:end="335:7">env</name><operator pos:start="335:8" pos:end="335:9">-&gt;</operator><name pos:start="335:10" pos:end="335:15">hflags</name></name> <operator pos:start="335:17" pos:end="335:17">=</operator> <operator pos:start="335:19" pos:end="335:19">(</operator><name pos:start="335:20" pos:end="335:30"><name pos:start="335:20" pos:end="335:22">env</name><operator pos:start="335:23" pos:end="335:24">-&gt;</operator><name pos:start="335:25" pos:end="335:30">hflags</name></name> <operator pos:start="335:32" pos:end="335:32">&amp;</operator> <operator pos:start="335:34" pos:end="335:34">~</operator><operator pos:start="335:35" pos:end="335:35">(</operator><name pos:start="335:36" pos:end="335:45">HF_MP_MASK</name> <operator pos:start="335:47" pos:end="335:47">|</operator> <name pos:start="335:49" pos:end="335:58">HF_EM_MASK</name> <operator pos:start="335:60" pos:end="335:60">|</operator> <name pos:start="335:62" pos:end="335:71">HF_TS_MASK</name><operator pos:start="335:72" pos:end="335:72">)</operator><operator pos:start="335:73" pos:end="335:73">)</operator> <operator pos:start="335:75" pos:end="335:75">|</operator>

        <operator pos:start="337:9" pos:end="337:9">(</operator><operator pos:start="337:10" pos:end="337:10">(</operator><name pos:start="337:11" pos:end="337:20"><name pos:start="337:11" pos:end="337:13">env</name><operator pos:start="337:14" pos:end="337:15">-&gt;</operator><name pos:start="337:16" pos:end="337:17">cr</name><index pos:start="337:18" pos:end="337:20">[<expr pos:start="337:19" pos:end="337:19"><literal type="number" pos:start="337:19" pos:end="337:19">0</literal></expr>]</index></name> <operator pos:start="337:22" pos:end="337:23">&lt;&lt;</operator> <operator pos:start="337:25" pos:end="337:25">(</operator><name pos:start="337:26" pos:end="337:36">HF_MP_SHIFT</name> <operator pos:start="337:38" pos:end="337:38">-</operator> <literal type="number" pos:start="337:40" pos:end="337:40">1</literal><operator pos:start="337:41" pos:end="337:41">)</operator><operator pos:start="337:42" pos:end="337:42">)</operator> <operator pos:start="337:44" pos:end="337:44">&amp;</operator> <operator pos:start="337:46" pos:end="337:46">(</operator><name pos:start="337:47" pos:end="337:56">HF_MP_MASK</name> <operator pos:start="337:58" pos:end="337:58">|</operator> <name pos:start="337:60" pos:end="337:69">HF_EM_MASK</name> <operator pos:start="337:71" pos:end="337:71">|</operator> <name pos:start="337:73" pos:end="337:82">HF_TS_MASK</name><operator pos:start="337:83" pos:end="337:83">)</operator><operator pos:start="337:84" pos:end="337:84">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="339:5" pos:end="345:39"><if pos:start="339:5" pos:end="341:38">if <condition pos:start="339:8" pos:end="339:37">(<expr pos:start="339:9" pos:end="339:36"><name pos:start="339:9" pos:end="339:18"><name pos:start="339:9" pos:end="339:11">env</name><operator pos:start="339:12" pos:end="339:13">-&gt;</operator><name pos:start="339:14" pos:end="339:15">cr</name><index pos:start="339:16" pos:end="339:18">[<expr pos:start="339:17" pos:end="339:17"><literal type="number" pos:start="339:17" pos:end="339:17">4</literal></expr>]</index></name> <operator pos:start="339:20" pos:end="339:20">&amp;</operator> <name pos:start="339:22" pos:end="339:36">CR4_OSFXSR_MASK</name></expr>)</condition><block type="pseudo" pos:start="341:9" pos:end="341:38"><block_content pos:start="341:9" pos:end="341:38">

        <expr_stmt pos:start="341:9" pos:end="341:38"><expr pos:start="341:9" pos:end="341:37"><name pos:start="341:9" pos:end="341:19"><name pos:start="341:9" pos:end="341:11">env</name><operator pos:start="341:12" pos:end="341:13">-&gt;</operator><name pos:start="341:14" pos:end="341:19">hflags</name></name> <operator pos:start="341:21" pos:end="341:22">|=</operator> <name pos:start="341:24" pos:end="341:37">HF_OSFXSR_MASK</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="343:5" pos:end="345:39">else<block type="pseudo" pos:start="345:9" pos:end="345:39"><block_content pos:start="345:9" pos:end="345:39">

        <expr_stmt pos:start="345:9" pos:end="345:39"><expr pos:start="345:9" pos:end="345:38"><name pos:start="345:9" pos:end="345:19"><name pos:start="345:9" pos:end="345:11">env</name><operator pos:start="345:12" pos:end="345:13">-&gt;</operator><name pos:start="345:14" pos:end="345:19">hflags</name></name> <operator pos:start="345:21" pos:end="345:22">&amp;=</operator> <operator pos:start="345:24" pos:end="345:24">~</operator><name pos:start="345:25" pos:end="345:38">HF_OSFXSR_MASK</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="349:5" pos:end="349:54"><expr pos:start="349:5" pos:end="349:53"><call pos:start="349:5" pos:end="349:53"><name pos:start="349:5" pos:end="349:11">LOG_INT</name><argument_list pos:start="349:12" pos:end="349:53">(<argument pos:start="349:13" pos:end="349:47"><expr pos:start="349:13" pos:end="349:47"><literal type="string" pos:start="349:13" pos:end="349:47">"kqemu: kqemu_cpu_exec: ret=0x%x\n"</literal></expr></argument>, <argument pos:start="349:50" pos:end="349:52"><expr pos:start="349:50" pos:end="349:52"><name pos:start="349:50" pos:end="349:52">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="351:5" pos:end="443:5"><if pos:start="351:5" pos:end="357:5">if <condition pos:start="351:8" pos:end="351:33">(<expr pos:start="351:9" pos:end="351:32"><name pos:start="351:9" pos:end="351:11">ret</name> <operator pos:start="351:13" pos:end="351:14">==</operator> <name pos:start="351:16" pos:end="351:32">KQEMU_RET_SYSCALL</name></expr>)</condition> <block pos:start="351:35" pos:end="357:5">{<block_content pos:start="355:9" pos:end="355:37">

        <comment type="block" pos:start="353:9" pos:end="353:33">/* syscall instruction */</comment>

        <return pos:start="355:9" pos:end="355:37">return <expr pos:start="355:16" pos:end="355:36"><call pos:start="355:16" pos:end="355:36"><name pos:start="355:16" pos:end="355:25">do_syscall</name><argument_list pos:start="355:26" pos:end="355:36">(<argument pos:start="355:27" pos:end="355:29"><expr pos:start="355:27" pos:end="355:29"><name pos:start="355:27" pos:end="355:29">env</name></expr></argument>, <argument pos:start="355:32" pos:end="355:35"><expr pos:start="355:32" pos:end="355:35"><name pos:start="355:32" pos:end="355:35">kenv</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="357:7" pos:end="381:5">else

    if <condition pos:start="359:8" pos:end="359:40">(<expr pos:start="359:9" pos:end="359:39"><operator pos:start="359:9" pos:end="359:9">(</operator><name pos:start="359:10" pos:end="359:12">ret</name> <operator pos:start="359:14" pos:end="359:14">&amp;</operator> <literal type="number" pos:start="359:16" pos:end="359:21">0xff00</literal><operator pos:start="359:22" pos:end="359:22">)</operator> <operator pos:start="359:24" pos:end="359:25">==</operator> <name pos:start="359:27" pos:end="359:39">KQEMU_RET_INT</name></expr>)</condition> <block pos:start="359:42" pos:end="381:5">{<block_content pos:start="361:9" pos:end="379:17">

        <expr_stmt pos:start="361:9" pos:end="361:42"><expr pos:start="361:9" pos:end="361:41"><name pos:start="361:9" pos:end="361:28"><name pos:start="361:9" pos:end="361:11">env</name><operator pos:start="361:12" pos:end="361:13">-&gt;</operator><name pos:start="361:14" pos:end="361:28">exception_index</name></name> <operator pos:start="361:30" pos:end="361:30">=</operator> <name pos:start="361:32" pos:end="361:34">ret</name> <operator pos:start="361:36" pos:end="361:36">&amp;</operator> <literal type="number" pos:start="361:38" pos:end="361:41">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="363:9" pos:end="363:28"><expr pos:start="363:9" pos:end="363:27"><name pos:start="363:9" pos:end="363:23"><name pos:start="363:9" pos:end="363:11">env</name><operator pos:start="363:12" pos:end="363:13">-&gt;</operator><name pos:start="363:14" pos:end="363:23">error_code</name></name> <operator pos:start="363:25" pos:end="363:25">=</operator> <literal type="number" pos:start="363:27" pos:end="363:27">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="365:9" pos:end="365:34"><expr pos:start="365:9" pos:end="365:33"><name pos:start="365:9" pos:end="365:29"><name pos:start="365:9" pos:end="365:11">env</name><operator pos:start="365:12" pos:end="365:13">-&gt;</operator><name pos:start="365:14" pos:end="365:29">exception_is_int</name></name> <operator pos:start="365:31" pos:end="365:31">=</operator> <literal type="number" pos:start="365:33" pos:end="365:33">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="367:9" pos:end="370:0"><expr pos:start="367:9" pos:end="367:48"><name pos:start="367:9" pos:end="367:31"><name pos:start="367:9" pos:end="367:11">env</name><operator pos:start="367:12" pos:end="367:13">-&gt;</operator><name pos:start="367:14" pos:end="367:31">exception_next_eip</name></name> <operator pos:start="367:33" pos:end="367:33">=</operator> <name pos:start="367:35" pos:end="367:48"><name pos:start="367:35" pos:end="367:38">kenv</name><operator pos:start="367:39" pos:end="367:40">-&gt;</operator><name pos:start="367:41" pos:end="367:48">next_eip</name></name></expr>;</expr_stmt>

<cpp:ifdef pos:start="369:1" pos:end="369:22">#<cpp:directive pos:start="369:2" pos:end="369:6">ifdef</cpp:directive> <name pos:start="369:8" pos:end="369:22">CONFIG_PROFILER</name></cpp:ifdef>

        <expr_stmt pos:start="371:9" pos:end="374:0"><expr pos:start="371:9" pos:end="371:29"><name pos:start="371:9" pos:end="371:27">kqemu_ret_int_count</name><operator pos:start="371:28" pos:end="371:29">++</operator></expr>;</expr_stmt>

<cpp:endif pos:start="373:1" pos:end="373:6">#<cpp:directive pos:start="373:2" pos:end="373:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="375:9" pos:end="375:68"><expr pos:start="375:9" pos:end="375:67"><call pos:start="375:9" pos:end="375:67"><name pos:start="375:9" pos:end="375:15">LOG_INT</name><argument_list pos:start="375:16" pos:end="375:67">(<argument pos:start="375:17" pos:end="375:44"><expr pos:start="375:17" pos:end="375:44"><literal type="string" pos:start="375:17" pos:end="375:44">"kqemu: interrupt v=%02x:\n"</literal></expr></argument>, <argument pos:start="375:47" pos:end="375:66"><expr pos:start="375:47" pos:end="375:66"><name pos:start="375:47" pos:end="375:66"><name pos:start="375:47" pos:end="375:49">env</name><operator pos:start="375:50" pos:end="375:51">-&gt;</operator><name pos:start="375:52" pos:end="375:66">exception_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="377:9" pos:end="377:27"><expr pos:start="377:9" pos:end="377:26"><call pos:start="377:9" pos:end="377:26"><name pos:start="377:9" pos:end="377:21">LOG_INT_STATE</name><argument_list pos:start="377:22" pos:end="377:26">(<argument pos:start="377:23" pos:end="377:25"><expr pos:start="377:23" pos:end="377:25"><name pos:start="377:23" pos:end="377:25">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="379:9" pos:end="379:17">return <expr pos:start="379:16" pos:end="379:16"><literal type="number" pos:start="379:16" pos:end="379:16">1</literal></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="381:7" pos:end="405:5">else if <condition pos:start="381:15" pos:end="381:53">(<expr pos:start="381:16" pos:end="381:52"><operator pos:start="381:16" pos:end="381:16">(</operator><name pos:start="381:17" pos:end="381:19">ret</name> <operator pos:start="381:21" pos:end="381:21">&amp;</operator> <literal type="number" pos:start="381:23" pos:end="381:28">0xff00</literal><operator pos:start="381:29" pos:end="381:29">)</operator> <operator pos:start="381:31" pos:end="381:32">==</operator> <name pos:start="381:34" pos:end="381:52">KQEMU_RET_EXCEPTION</name></expr>)</condition> <block pos:start="381:55" pos:end="405:5">{<block_content pos:start="383:9" pos:end="403:17">

        <expr_stmt pos:start="383:9" pos:end="383:42"><expr pos:start="383:9" pos:end="383:41"><name pos:start="383:9" pos:end="383:28"><name pos:start="383:9" pos:end="383:11">env</name><operator pos:start="383:12" pos:end="383:13">-&gt;</operator><name pos:start="383:14" pos:end="383:28">exception_index</name></name> <operator pos:start="383:30" pos:end="383:30">=</operator> <name pos:start="383:32" pos:end="383:34">ret</name> <operator pos:start="383:36" pos:end="383:36">&amp;</operator> <literal type="number" pos:start="383:38" pos:end="383:41">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="385:9" pos:end="385:43"><expr pos:start="385:9" pos:end="385:42"><name pos:start="385:9" pos:end="385:23"><name pos:start="385:9" pos:end="385:11">env</name><operator pos:start="385:12" pos:end="385:13">-&gt;</operator><name pos:start="385:14" pos:end="385:23">error_code</name></name> <operator pos:start="385:25" pos:end="385:25">=</operator> <name pos:start="385:27" pos:end="385:42"><name pos:start="385:27" pos:end="385:30">kenv</name><operator pos:start="385:31" pos:end="385:32">-&gt;</operator><name pos:start="385:33" pos:end="385:42">error_code</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="387:9" pos:end="387:34"><expr pos:start="387:9" pos:end="387:33"><name pos:start="387:9" pos:end="387:29"><name pos:start="387:9" pos:end="387:11">env</name><operator pos:start="387:12" pos:end="387:13">-&gt;</operator><name pos:start="387:14" pos:end="387:29">exception_is_int</name></name> <operator pos:start="387:31" pos:end="387:31">=</operator> <literal type="number" pos:start="387:33" pos:end="387:33">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="389:9" pos:end="392:0"><expr pos:start="389:9" pos:end="389:35"><name pos:start="389:9" pos:end="389:31"><name pos:start="389:9" pos:end="389:11">env</name><operator pos:start="389:12" pos:end="389:13">-&gt;</operator><name pos:start="389:14" pos:end="389:31">exception_next_eip</name></name> <operator pos:start="389:33" pos:end="389:33">=</operator> <literal type="number" pos:start="389:35" pos:end="389:35">0</literal></expr>;</expr_stmt>

<cpp:ifdef pos:start="391:1" pos:end="391:22">#<cpp:directive pos:start="391:2" pos:end="391:6">ifdef</cpp:directive> <name pos:start="391:8" pos:end="391:22">CONFIG_PROFILER</name></cpp:ifdef>

        <expr_stmt pos:start="393:9" pos:end="396:0"><expr pos:start="393:9" pos:end="393:30"><name pos:start="393:9" pos:end="393:28">kqemu_ret_excp_count</name><operator pos:start="393:29" pos:end="393:30">++</operator></expr>;</expr_stmt>

<cpp:endif pos:start="395:1" pos:end="395:6">#<cpp:directive pos:start="395:2" pos:end="395:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="397:9" pos:end="399:59"><expr pos:start="397:9" pos:end="399:58"><call pos:start="397:9" pos:end="399:58"><name pos:start="397:9" pos:end="397:15">LOG_INT</name><argument_list pos:start="397:16" pos:end="399:58">(<argument pos:start="397:17" pos:end="397:51"><expr pos:start="397:17" pos:end="397:51"><literal type="string" pos:start="397:17" pos:end="397:51">"kqemu: exception v=%02x e=%04x:\n"</literal></expr></argument>,

                    <argument pos:start="399:21" pos:end="399:40"><expr pos:start="399:21" pos:end="399:40"><name pos:start="399:21" pos:end="399:40"><name pos:start="399:21" pos:end="399:23">env</name><operator pos:start="399:24" pos:end="399:25">-&gt;</operator><name pos:start="399:26" pos:end="399:40">exception_index</name></name></expr></argument>, <argument pos:start="399:43" pos:end="399:57"><expr pos:start="399:43" pos:end="399:57"><name pos:start="399:43" pos:end="399:57"><name pos:start="399:43" pos:end="399:45">env</name><operator pos:start="399:46" pos:end="399:47">-&gt;</operator><name pos:start="399:48" pos:end="399:57">error_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="401:9" pos:end="401:27"><expr pos:start="401:9" pos:end="401:26"><call pos:start="401:9" pos:end="401:26"><name pos:start="401:9" pos:end="401:21">LOG_INT_STATE</name><argument_list pos:start="401:22" pos:end="401:26">(<argument pos:start="401:23" pos:end="401:25"><expr pos:start="401:23" pos:end="401:25"><name pos:start="401:23" pos:end="401:25">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="403:9" pos:end="403:17">return <expr pos:start="403:16" pos:end="403:16"><literal type="number" pos:start="403:16" pos:end="403:16">1</literal></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="405:7" pos:end="417:5">else if <condition pos:start="405:15" pos:end="405:37">(<expr pos:start="405:16" pos:end="405:36"><name pos:start="405:16" pos:end="405:18">ret</name> <operator pos:start="405:20" pos:end="405:21">==</operator> <name pos:start="405:23" pos:end="405:36">KQEMU_RET_INTR</name></expr>)</condition> <block pos:start="405:39" pos:end="417:5">{<block_content pos:start="409:9" pos:end="415:17">

<cpp:ifdef pos:start="407:1" pos:end="407:22">#<cpp:directive pos:start="407:2" pos:end="407:6">ifdef</cpp:directive> <name pos:start="407:8" pos:end="407:22">CONFIG_PROFILER</name></cpp:ifdef>

        <expr_stmt pos:start="409:9" pos:end="412:0"><expr pos:start="409:9" pos:end="409:30"><name pos:start="409:9" pos:end="409:28">kqemu_ret_intr_count</name><operator pos:start="409:29" pos:end="409:30">++</operator></expr>;</expr_stmt>

<cpp:endif pos:start="411:1" pos:end="411:6">#<cpp:directive pos:start="411:2" pos:end="411:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="413:9" pos:end="413:27"><expr pos:start="413:9" pos:end="413:26"><call pos:start="413:9" pos:end="413:26"><name pos:start="413:9" pos:end="413:21">LOG_INT_STATE</name><argument_list pos:start="413:22" pos:end="413:26">(<argument pos:start="413:23" pos:end="413:25"><expr pos:start="413:23" pos:end="413:25"><name pos:start="413:23" pos:end="413:25">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="415:9" pos:end="415:17">return <expr pos:start="415:16" pos:end="415:16"><literal type="number" pos:start="415:16" pos:end="415:16">0</literal></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="417:7" pos:end="435:5">else if <condition pos:start="417:15" pos:end="417:40">(<expr pos:start="417:16" pos:end="417:39"><name pos:start="417:16" pos:end="417:18">ret</name> <operator pos:start="417:20" pos:end="417:21">==</operator> <name pos:start="417:23" pos:end="417:39">KQEMU_RET_SOFTMMU</name></expr>)</condition> <block pos:start="417:42" pos:end="435:5">{<block_content pos:start="421:9" pos:end="433:17">

<cpp:ifdef pos:start="419:1" pos:end="419:22">#<cpp:directive pos:start="419:2" pos:end="419:6">ifdef</cpp:directive> <name pos:start="419:8" pos:end="419:22">CONFIG_PROFILER</name></cpp:ifdef>

        <block pos:start="421:9" pos:end="430:0">{<block_content pos:start="423:13" pos:end="425:32">

            <decl_stmt pos:start="423:13" pos:end="423:63"><decl pos:start="423:13" pos:end="423:62"><type pos:start="423:13" pos:end="423:25"><name pos:start="423:13" pos:end="423:20">unsigned</name> <name pos:start="423:22" pos:end="423:25">long</name></type> <name pos:start="423:27" pos:end="423:28">pc</name> <init pos:start="423:30" pos:end="423:62">= <expr pos:start="423:32" pos:end="423:62"><name pos:start="423:32" pos:end="423:39"><name pos:start="423:32" pos:end="423:34">env</name><operator pos:start="423:35" pos:end="423:36">-&gt;</operator><name pos:start="423:37" pos:end="423:39">eip</name></name> <operator pos:start="423:41" pos:end="423:41">+</operator> <name pos:start="423:43" pos:end="423:57"><name pos:start="423:43" pos:end="423:45">env</name><operator pos:start="423:46" pos:end="423:47">-&gt;</operator><name pos:start="423:48" pos:end="423:51">segs</name><index pos:start="423:52" pos:end="423:57">[<expr pos:start="423:53" pos:end="423:56"><name pos:start="423:53" pos:end="423:56">R_CS</name></expr>]</index></name><operator pos:start="423:58" pos:end="423:58">.</operator><name pos:start="423:59" pos:end="423:62">base</name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="425:13" pos:end="425:32"><expr pos:start="425:13" pos:end="425:31"><call pos:start="425:13" pos:end="425:31"><name pos:start="425:13" pos:end="425:27">kqemu_record_pc</name><argument_list pos:start="425:28" pos:end="425:31">(<argument pos:start="425:29" pos:end="425:30"><expr pos:start="425:29" pos:end="425:30"><name pos:start="425:29" pos:end="425:30">pc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

<cpp:endif pos:start="429:1" pos:end="429:6">#<cpp:directive pos:start="429:2" pos:end="429:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="431:9" pos:end="431:27"><expr pos:start="431:9" pos:end="431:26"><call pos:start="431:9" pos:end="431:26"><name pos:start="431:9" pos:end="431:21">LOG_INT_STATE</name><argument_list pos:start="431:22" pos:end="431:26">(<argument pos:start="431:23" pos:end="431:25"><expr pos:start="431:23" pos:end="431:25"><name pos:start="431:23" pos:end="431:25">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="433:9" pos:end="433:17">return <expr pos:start="433:16" pos:end="433:16"><literal type="number" pos:start="433:16" pos:end="433:16">2</literal></expr>;</return>

    </block_content>}</block></if> <else pos:start="435:7" pos:end="443:5">else <block pos:start="435:12" pos:end="443:5">{<block_content pos:start="437:9" pos:end="441:16">

        <expr_stmt pos:start="437:9" pos:end="437:48"><expr pos:start="437:9" pos:end="437:47"><call pos:start="437:9" pos:end="437:47"><name pos:start="437:9" pos:end="437:22">cpu_dump_state</name><argument_list pos:start="437:23" pos:end="437:47">(<argument pos:start="437:24" pos:end="437:26"><expr pos:start="437:24" pos:end="437:26"><name pos:start="437:24" pos:end="437:26">env</name></expr></argument>, <argument pos:start="437:29" pos:end="437:34"><expr pos:start="437:29" pos:end="437:34"><name pos:start="437:29" pos:end="437:34">stderr</name></expr></argument>, <argument pos:start="437:37" pos:end="437:43"><expr pos:start="437:37" pos:end="437:43"><name pos:start="437:37" pos:end="437:43">fprintf</name></expr></argument>, <argument pos:start="437:46" pos:end="437:46"><expr pos:start="437:46" pos:end="437:46"><literal type="number" pos:start="437:46" pos:end="437:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="439:9" pos:end="439:65"><expr pos:start="439:9" pos:end="439:64"><call pos:start="439:9" pos:end="439:64"><name pos:start="439:9" pos:end="439:15">fprintf</name><argument_list pos:start="439:16" pos:end="439:64">(<argument pos:start="439:17" pos:end="439:22"><expr pos:start="439:17" pos:end="439:22"><name pos:start="439:17" pos:end="439:22">stderr</name></expr></argument>, <argument pos:start="439:25" pos:end="439:58"><expr pos:start="439:25" pos:end="439:58"><literal type="string" pos:start="439:25" pos:end="439:58">"Unsupported return value: 0x%x\n"</literal></expr></argument>, <argument pos:start="439:61" pos:end="439:63"><expr pos:start="439:61" pos:end="439:63"><name pos:start="439:61" pos:end="439:63">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="441:9" pos:end="441:16"><expr pos:start="441:9" pos:end="441:15"><call pos:start="441:9" pos:end="441:15"><name pos:start="441:9" pos:end="441:12">exit</name><argument_list pos:start="441:13" pos:end="441:15">(<argument pos:start="441:14" pos:end="441:14"><expr pos:start="441:14" pos:end="441:14"><literal type="number" pos:start="441:14" pos:end="441:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="445:5" pos:end="445:13">return <expr pos:start="445:12" pos:end="445:12"><literal type="number" pos:start="445:12" pos:end="445:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
