<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19230.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">decode_band_types</name><parameter_list pos:start="1:29" pos:end="5:58">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:39">AACContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">ac</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:73"><decl pos:start="1:46" pos:end="1:73"><type pos:start="1:46" pos:end="1:68"><name pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:49">enum</name> <name pos:start="1:51" pos:end="1:58">BandType</name></name></type> <name pos:start="1:60" pos:end="1:73"><name pos:start="1:60" pos:end="1:68">band_type</name><index pos:start="1:69" pos:end="1:73">[<expr pos:start="1:70" pos:end="1:72"><literal type="number" pos:start="1:70" pos:end="1:72">120</literal></expr>]</index></name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:55"><decl pos:start="3:30" pos:end="3:55"><type pos:start="3:30" pos:end="3:50"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:55"><name pos:start="3:34" pos:end="3:50">band_type_run_end</name><index pos:start="3:51" pos:end="3:55">[<expr pos:start="3:52" pos:end="3:54"><literal type="number" pos:start="3:52" pos:end="3:54">120</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:74"><decl pos:start="3:58" pos:end="3:74"><type pos:start="3:58" pos:end="3:74"><name pos:start="3:58" pos:end="3:70">GetBitContext</name> <modifier pos:start="3:72" pos:end="3:72">*</modifier></type><name pos:start="3:73" pos:end="3:74">gb</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:57"><decl pos:start="5:30" pos:end="5:57"><type pos:start="5:30" pos:end="5:57"><name pos:start="5:30" pos:end="5:52">IndividualChannelStream</name> <modifier pos:start="5:54" pos:end="5:54">*</modifier></type><name pos:start="5:55" pos:end="5:57">ics</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="75:1">{<block_content pos:start="9:5" pos:end="73:13">

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">g</name></decl>, <decl pos:start="9:12" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">idx</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:79"><decl pos:start="11:5" pos:end="11:78"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:18">bits</name> <init pos:start="11:20" pos:end="11:78">= <expr pos:start="11:22" pos:end="11:78"><ternary pos:start="11:22" pos:end="11:78"><condition pos:start="11:22" pos:end="11:72"><expr pos:start="11:22" pos:end="11:70"><operator pos:start="11:22" pos:end="11:22">(</operator><name pos:start="11:23" pos:end="11:45"><name pos:start="11:23" pos:end="11:25">ics</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:42">window_sequence</name><index pos:start="11:43" pos:end="11:45">[<expr pos:start="11:44" pos:end="11:44"><literal type="number" pos:start="11:44" pos:end="11:44">0</literal></expr>]</index></name> <operator pos:start="11:47" pos:end="11:48">==</operator> <name pos:start="11:50" pos:end="11:69">EIGHT_SHORT_SEQUENCE</name><operator pos:start="11:70" pos:end="11:70">)</operator></expr> ?</condition><then pos:start="11:74" pos:end="11:74"> <expr pos:start="11:74" pos:end="11:74"><literal type="number" pos:start="11:74" pos:end="11:74">3</literal></expr> </then><else pos:start="11:76" pos:end="11:78">: <expr pos:start="11:78" pos:end="11:78"><literal type="number" pos:start="11:78" pos:end="11:78">5</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <for pos:start="13:5" pos:end="71:5">for <control pos:start="13:9" pos:end="13:48">(<init pos:start="13:10" pos:end="13:15"><expr pos:start="13:10" pos:end="13:14"><name pos:start="13:10" pos:end="13:10">g</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</init> <condition pos:start="13:17" pos:end="13:43"><expr pos:start="13:17" pos:end="13:42"><name pos:start="13:17" pos:end="13:17">g</name> <operator pos:start="13:19" pos:end="13:19">&lt;</operator> <name pos:start="13:21" pos:end="13:42"><name pos:start="13:21" pos:end="13:23">ics</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:42">num_window_groups</name></name></expr>;</condition> <incr pos:start="13:45" pos:end="13:47"><expr pos:start="13:45" pos:end="13:47"><name pos:start="13:45" pos:end="13:45">g</name><operator pos:start="13:46" pos:end="13:47">++</operator></expr></incr>)</control> <block pos:start="13:50" pos:end="71:5">{<block_content pos:start="15:9" pos:end="69:9">

        <decl_stmt pos:start="15:9" pos:end="15:18"><decl pos:start="15:9" pos:end="15:17"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:13">k</name> <init pos:start="15:15" pos:end="15:17">= <expr pos:start="15:17" pos:end="15:17"><literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr></init></decl>;</decl_stmt>

        <while pos:start="17:9" pos:end="69:9">while <condition pos:start="17:15" pos:end="17:32">(<expr pos:start="17:16" pos:end="17:31"><name pos:start="17:16" pos:end="17:16">k</name> <operator pos:start="17:18" pos:end="17:18">&lt;</operator> <name pos:start="17:20" pos:end="17:31"><name pos:start="17:20" pos:end="17:22">ics</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:31">max_sfb</name></name></expr>)</condition> <block pos:start="17:34" pos:end="69:9">{<block_content pos:start="19:13" pos:end="67:13">

            <decl_stmt pos:start="19:13" pos:end="19:33"><decl pos:start="19:13" pos:end="19:32"><type pos:start="19:13" pos:end="19:19"><name pos:start="19:13" pos:end="19:19">uint8_t</name></type> <name pos:start="19:21" pos:end="19:28">sect_end</name> <init pos:start="19:30" pos:end="19:32">= <expr pos:start="19:32" pos:end="19:32"><name pos:start="19:32" pos:end="19:32">k</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="21:13" pos:end="21:30"><decl pos:start="21:13" pos:end="21:29"><type pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:15">int</name></type> <name pos:start="21:17" pos:end="21:29">sect_len_incr</name></decl>;</decl_stmt>

            <decl_stmt pos:start="23:13" pos:end="23:49"><decl pos:start="23:13" pos:end="23:48"><type pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:15">int</name></type> <name pos:start="23:17" pos:end="23:30">sect_band_type</name> <init pos:start="23:32" pos:end="23:48">= <expr pos:start="23:34" pos:end="23:48"><call pos:start="23:34" pos:end="23:48"><name pos:start="23:34" pos:end="23:41">get_bits</name><argument_list pos:start="23:42" pos:end="23:48">(<argument pos:start="23:43" pos:end="23:44"><expr pos:start="23:43" pos:end="23:44"><name pos:start="23:43" pos:end="23:44">gb</name></expr></argument>, <argument pos:start="23:47" pos:end="23:47"><expr pos:start="23:47" pos:end="23:47"><literal type="number" pos:start="23:47" pos:end="23:47">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="25:13" pos:end="31:13"><if pos:start="25:13" pos:end="31:13">if <condition pos:start="25:16" pos:end="25:37">(<expr pos:start="25:17" pos:end="25:36"><name pos:start="25:17" pos:end="25:30">sect_band_type</name> <operator pos:start="25:32" pos:end="25:33">==</operator> <literal type="number" pos:start="25:35" pos:end="25:36">12</literal></expr>)</condition> <block pos:start="25:39" pos:end="31:13">{<block_content pos:start="27:17" pos:end="29:26">

                <expr_stmt pos:start="27:17" pos:end="27:71"><expr pos:start="27:17" pos:end="27:70"><call pos:start="27:17" pos:end="27:70"><name pos:start="27:17" pos:end="27:22">av_log</name><argument_list pos:start="27:23" pos:end="27:70">(<argument pos:start="27:24" pos:end="27:32"><expr pos:start="27:24" pos:end="27:32"><name pos:start="27:24" pos:end="27:32"><name pos:start="27:24" pos:end="27:25">ac</name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:32">avctx</name></name></expr></argument>, <argument pos:start="27:35" pos:end="27:46"><expr pos:start="27:35" pos:end="27:46"><name pos:start="27:35" pos:end="27:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:49" pos:end="27:69"><expr pos:start="27:49" pos:end="27:69"><literal type="string" pos:start="27:49" pos:end="27:69">"invalid band type\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="29:17" pos:end="29:26">return <expr pos:start="29:24" pos:end="29:25"><operator pos:start="29:24" pos:end="29:24">-</operator><literal type="number" pos:start="29:25" pos:end="29:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <do pos:start="33:13" pos:end="59:55">do <block pos:start="33:16" pos:end="59:13">{<block_content pos:start="35:17" pos:end="57:17">

                <expr_stmt pos:start="35:17" pos:end="35:51"><expr pos:start="35:17" pos:end="35:50"><name pos:start="35:17" pos:end="35:29">sect_len_incr</name> <operator pos:start="35:31" pos:end="35:31">=</operator> <call pos:start="35:33" pos:end="35:50"><name pos:start="35:33" pos:end="35:40">get_bits</name><argument_list pos:start="35:41" pos:end="35:50">(<argument pos:start="35:42" pos:end="35:43"><expr pos:start="35:42" pos:end="35:43"><name pos:start="35:42" pos:end="35:43">gb</name></expr></argument>, <argument pos:start="35:46" pos:end="35:49"><expr pos:start="35:46" pos:end="35:49"><name pos:start="35:46" pos:end="35:49">bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:42"><expr pos:start="37:17" pos:end="37:41"><name pos:start="37:17" pos:end="37:24">sect_end</name> <operator pos:start="37:26" pos:end="37:27">+=</operator> <name pos:start="37:29" pos:end="37:41">sect_len_incr</name></expr>;</expr_stmt>

                <if_stmt pos:start="39:17" pos:end="45:17"><if pos:start="39:17" pos:end="45:17">if <condition pos:start="39:20" pos:end="39:42">(<expr pos:start="39:21" pos:end="39:41"><call pos:start="39:21" pos:end="39:37"><name pos:start="39:21" pos:end="39:33">get_bits_left</name><argument_list pos:start="39:34" pos:end="39:37">(<argument pos:start="39:35" pos:end="39:36"><expr pos:start="39:35" pos:end="39:36"><name pos:start="39:35" pos:end="39:36">gb</name></expr></argument>)</argument_list></call> <operator pos:start="39:39" pos:end="39:39">&lt;</operator> <literal type="number" pos:start="39:41" pos:end="39:41">0</literal></expr>)</condition> <block pos:start="39:44" pos:end="45:17">{<block_content pos:start="41:21" pos:end="43:30">

                    <expr_stmt pos:start="41:21" pos:end="41:66"><expr pos:start="41:21" pos:end="41:65"><call pos:start="41:21" pos:end="41:65"><name pos:start="41:21" pos:end="41:26">av_log</name><argument_list pos:start="41:27" pos:end="41:65">(<argument pos:start="41:28" pos:end="41:36"><expr pos:start="41:28" pos:end="41:36"><name pos:start="41:28" pos:end="41:36"><name pos:start="41:28" pos:end="41:29">ac</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:36">avctx</name></name></expr></argument>, <argument pos:start="41:39" pos:end="41:50"><expr pos:start="41:39" pos:end="41:50"><name pos:start="41:39" pos:end="41:50">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:53" pos:end="41:64"><expr pos:start="41:53" pos:end="41:64"><name pos:start="41:53" pos:end="41:64">overread_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="43:21" pos:end="43:30">return <expr pos:start="43:28" pos:end="43:29"><operator pos:start="43:28" pos:end="43:28">-</operator><literal type="number" pos:start="43:29" pos:end="43:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="47:17" pos:end="57:17"><if pos:start="47:17" pos:end="57:17">if <condition pos:start="47:20" pos:end="47:44">(<expr pos:start="47:21" pos:end="47:43"><name pos:start="47:21" pos:end="47:28">sect_end</name> <operator pos:start="47:30" pos:end="47:30">&gt;</operator> <name pos:start="47:32" pos:end="47:43"><name pos:start="47:32" pos:end="47:34">ics</name><operator pos:start="47:35" pos:end="47:36">-&gt;</operator><name pos:start="47:37" pos:end="47:43">max_sfb</name></name></expr>)</condition> <block pos:start="47:46" pos:end="57:17">{<block_content pos:start="49:21" pos:end="55:30">

                    <expr_stmt pos:start="49:21" pos:end="53:51"><expr pos:start="49:21" pos:end="53:50"><call pos:start="49:21" pos:end="53:50"><name pos:start="49:21" pos:end="49:26">av_log</name><argument_list pos:start="49:27" pos:end="53:50">(<argument pos:start="49:28" pos:end="49:36"><expr pos:start="49:28" pos:end="49:36"><name pos:start="49:28" pos:end="49:36"><name pos:start="49:28" pos:end="49:29">ac</name><operator pos:start="49:30" pos:end="49:31">-&gt;</operator><name pos:start="49:32" pos:end="49:36">avctx</name></name></expr></argument>, <argument pos:start="49:39" pos:end="49:50"><expr pos:start="49:39" pos:end="49:50"><name pos:start="49:39" pos:end="49:50">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="51:28" pos:end="51:71"><expr pos:start="51:28" pos:end="51:71"><literal type="string" pos:start="51:28" pos:end="51:71">"Number of bands (%d) exceeds limit (%d).\n"</literal></expr></argument>,

                           <argument pos:start="53:28" pos:end="53:35"><expr pos:start="53:28" pos:end="53:35"><name pos:start="53:28" pos:end="53:35">sect_end</name></expr></argument>, <argument pos:start="53:38" pos:end="53:49"><expr pos:start="53:38" pos:end="53:49"><name pos:start="53:38" pos:end="53:49"><name pos:start="53:38" pos:end="53:40">ics</name><operator pos:start="53:41" pos:end="53:42">-&gt;</operator><name pos:start="53:43" pos:end="53:49">max_sfb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="55:21" pos:end="55:30">return <expr pos:start="55:28" pos:end="55:29"><operator pos:start="55:28" pos:end="55:28">-</operator><literal type="number" pos:start="55:29" pos:end="55:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block> while <condition pos:start="59:21" pos:end="59:54">(<expr pos:start="59:22" pos:end="59:53"><name pos:start="59:22" pos:end="59:34">sect_len_incr</name> <operator pos:start="59:36" pos:end="59:37">==</operator> <operator pos:start="59:39" pos:end="59:39">(</operator><literal type="number" pos:start="59:40" pos:end="59:40">1</literal> <operator pos:start="59:42" pos:end="59:43">&lt;&lt;</operator> <name pos:start="59:45" pos:end="59:48">bits</name><operator pos:start="59:49" pos:end="59:49">)</operator> <operator pos:start="59:51" pos:end="59:51">-</operator> <literal type="number" pos:start="59:53" pos:end="59:53">1</literal></expr>)</condition>;</do>

            <for pos:start="61:13" pos:end="67:13">for <control pos:start="61:17" pos:end="61:37">(<init pos:start="61:18" pos:end="61:18">;</init> <condition pos:start="61:20" pos:end="61:32"><expr pos:start="61:20" pos:end="61:31"><name pos:start="61:20" pos:end="61:20">k</name> <operator pos:start="61:22" pos:end="61:22">&lt;</operator> <name pos:start="61:24" pos:end="61:31">sect_end</name></expr>;</condition> <incr pos:start="61:34" pos:end="61:36"><expr pos:start="61:34" pos:end="61:36"><name pos:start="61:34" pos:end="61:34">k</name><operator pos:start="61:35" pos:end="61:36">++</operator></expr></incr>)</control> <block pos:start="61:39" pos:end="67:13">{<block_content pos:start="63:17" pos:end="65:52">

                <expr_stmt pos:start="63:17" pos:end="63:58"><expr pos:start="63:17" pos:end="63:57"><name pos:start="63:17" pos:end="63:38"><name pos:start="63:17" pos:end="63:25">band_type</name>        <index pos:start="63:34" pos:end="63:38">[<expr pos:start="63:35" pos:end="63:37"><name pos:start="63:35" pos:end="63:37">idx</name></expr>]</index></name>   <operator pos:start="63:42" pos:end="63:42">=</operator> <name pos:start="63:44" pos:end="63:57">sect_band_type</name></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:52"><expr pos:start="65:17" pos:end="65:51"><name pos:start="65:17" pos:end="65:40"><name pos:start="65:17" pos:end="65:33">band_type_run_end</name><index pos:start="65:34" pos:end="65:40">[<expr pos:start="65:35" pos:end="65:39"><name pos:start="65:35" pos:end="65:37">idx</name><operator pos:start="65:38" pos:end="65:39">++</operator></expr>]</index></name> <operator pos:start="65:42" pos:end="65:42">=</operator> <name pos:start="65:44" pos:end="65:51">sect_end</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></while>

    </block_content>}</block></for>

    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
