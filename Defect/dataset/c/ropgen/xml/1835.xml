<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1835.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">open_url</name><parameter_list pos:start="1:20" pos:end="3:60">(<parameter pos:start="1:21" pos:end="1:38"><decl pos:start="1:21" pos:end="1:38"><type pos:start="1:21" pos:end="1:38"><name pos:start="1:21" pos:end="1:35">AVFormatContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:56"><decl pos:start="1:41" pos:end="1:56"><type pos:start="1:41" pos:end="1:56"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier><modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:56">pb</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:73"><decl pos:start="1:59" pos:end="1:73"><type pos:start="1:59" pos:end="1:73"><specifier pos:start="1:59" pos:end="1:63">const</specifier> <name pos:start="1:65" pos:end="1:68">char</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:73">url</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:38"><decl pos:start="3:21" pos:end="3:38"><type pos:start="3:21" pos:end="3:38"><name pos:start="3:21" pos:end="3:32">AVDictionary</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">opts</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:59"><decl pos:start="3:41" pos:end="3:59"><type pos:start="3:41" pos:end="3:59"><name pos:start="3:41" pos:end="3:52">AVDictionary</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:59">opts2</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="67:1">{<block_content pos:start="7:5" pos:end="65:15">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">HLSContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">c</name> <init pos:start="7:19" pos:end="7:32">= <expr pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:21">s</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">AVDictionary</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">tmp</name> <init pos:start="9:23" pos:end="9:28">= <expr pos:start="9:25" pos:end="9:28"><name pos:start="9:25" pos:end="9:28">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:58"><decl pos:start="11:5" pos:end="11:57"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:26">proto_name</name> <init pos:start="11:28" pos:end="11:57">= <expr pos:start="11:30" pos:end="11:57"><call pos:start="11:30" pos:end="11:57"><name pos:start="11:30" pos:end="11:52">avio_find_protocol_name</name><argument_list pos:start="11:53" pos:end="11:57">(<argument pos:start="11:54" pos:end="11:56"><expr pos:start="11:54" pos:end="11:56"><name pos:start="11:54" pos:end="11:56">url</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:32"><expr pos:start="17:5" pos:end="17:31"><call pos:start="17:5" pos:end="17:31"><name pos:start="17:5" pos:end="17:16">av_dict_copy</name><argument_list pos:start="17:17" pos:end="17:31">(<argument pos:start="17:18" pos:end="17:21"><expr pos:start="17:18" pos:end="17:21"><operator pos:start="17:18" pos:end="17:18">&amp;</operator><name pos:start="17:19" pos:end="17:21">tmp</name></expr></argument>, <argument pos:start="17:24" pos:end="17:27"><expr pos:start="17:24" pos:end="17:27"><name pos:start="17:24" pos:end="17:27">opts</name></expr></argument>, <argument pos:start="17:30" pos:end="17:30"><expr pos:start="17:30" pos:end="17:30"><literal type="number" pos:start="17:30" pos:end="17:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:33"><expr pos:start="19:5" pos:end="19:32"><call pos:start="19:5" pos:end="19:32"><name pos:start="19:5" pos:end="19:16">av_dict_copy</name><argument_list pos:start="19:17" pos:end="19:32">(<argument pos:start="19:18" pos:end="19:21"><expr pos:start="19:18" pos:end="19:21"><operator pos:start="19:18" pos:end="19:18">&amp;</operator><name pos:start="19:19" pos:end="19:21">tmp</name></expr></argument>, <argument pos:start="19:24" pos:end="19:28"><expr pos:start="19:24" pos:end="19:28"><name pos:start="19:24" pos:end="19:28">opts2</name></expr></argument>, <argument pos:start="19:31" pos:end="19:31"><expr pos:start="19:31" pos:end="19:31"><literal type="number" pos:start="19:31" pos:end="19:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="25:35"><if pos:start="23:5" pos:end="25:35">if <condition pos:start="23:8" pos:end="23:20">(<expr pos:start="23:9" pos:end="23:19"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:19">proto_name</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:35"><block_content pos:start="25:9" pos:end="25:35">

        <return pos:start="25:9" pos:end="25:35">return <expr pos:start="25:16" pos:end="25:34"><name pos:start="25:16" pos:end="25:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="29:5" pos:end="29:38">// only http(s) &amp; file are allowed</comment>

    <if_stmt pos:start="31:5" pos:end="33:35"><if pos:start="31:5" pos:end="33:35">if <condition pos:start="31:8" pos:end="31:89">(<expr pos:start="31:9" pos:end="31:88"><operator pos:start="31:9" pos:end="31:9">!</operator><call pos:start="31:10" pos:end="31:46"><name pos:start="31:10" pos:end="31:20">av_strstart</name><argument_list pos:start="31:21" pos:end="31:46">(<argument pos:start="31:22" pos:end="31:31"><expr pos:start="31:22" pos:end="31:31"><name pos:start="31:22" pos:end="31:31">proto_name</name></expr></argument>, <argument pos:start="31:34" pos:end="31:39"><expr pos:start="31:34" pos:end="31:39"><literal type="string" pos:start="31:34" pos:end="31:39">"http"</literal></expr></argument>, <argument pos:start="31:42" pos:end="31:45"><expr pos:start="31:42" pos:end="31:45"><name pos:start="31:42" pos:end="31:45">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="31:48" pos:end="31:49">&amp;&amp;</operator> <operator pos:start="31:51" pos:end="31:51">!</operator><call pos:start="31:52" pos:end="31:88"><name pos:start="31:52" pos:end="31:62">av_strstart</name><argument_list pos:start="31:63" pos:end="31:88">(<argument pos:start="31:64" pos:end="31:73"><expr pos:start="31:64" pos:end="31:73"><name pos:start="31:64" pos:end="31:73">proto_name</name></expr></argument>, <argument pos:start="31:76" pos:end="31:81"><expr pos:start="31:76" pos:end="31:81"><literal type="string" pos:start="31:76" pos:end="31:81">"file"</literal></expr></argument>, <argument pos:start="31:84" pos:end="31:87"><expr pos:start="31:84" pos:end="31:87"><name pos:start="31:84" pos:end="31:87">NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:35"><block_content pos:start="33:9" pos:end="33:35">

        <return pos:start="33:9" pos:end="33:35">return <expr pos:start="33:16" pos:end="33:34"><name pos:start="33:16" pos:end="33:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="41:35"><if pos:start="35:5" pos:end="37:9">if <condition pos:start="35:8" pos:end="35:88">(<expr pos:start="35:9" pos:end="35:87"><operator pos:start="35:9" pos:end="35:9">!</operator><call pos:start="35:10" pos:end="35:53"><name pos:start="35:10" pos:end="35:16">strncmp</name><argument_list pos:start="35:17" pos:end="35:53">(<argument pos:start="35:18" pos:end="35:27"><expr pos:start="35:18" pos:end="35:27"><name pos:start="35:18" pos:end="35:27">proto_name</name></expr></argument>, <argument pos:start="35:30" pos:end="35:32"><expr pos:start="35:30" pos:end="35:32"><name pos:start="35:30" pos:end="35:32">url</name></expr></argument>, <argument pos:start="35:35" pos:end="35:52"><expr pos:start="35:35" pos:end="35:52"><call pos:start="35:35" pos:end="35:52"><name pos:start="35:35" pos:end="35:40">strlen</name><argument_list pos:start="35:41" pos:end="35:52">(<argument pos:start="35:42" pos:end="35:51"><expr pos:start="35:42" pos:end="35:51"><name pos:start="35:42" pos:end="35:51">proto_name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="35:55" pos:end="35:56">&amp;&amp;</operator> <name pos:start="35:58" pos:end="35:80"><name pos:start="35:58" pos:end="35:60">url</name><index pos:start="35:61" pos:end="35:80">[<expr pos:start="35:62" pos:end="35:79"><call pos:start="35:62" pos:end="35:79"><name pos:start="35:62" pos:end="35:67">strlen</name><argument_list pos:start="35:68" pos:end="35:79">(<argument pos:start="35:69" pos:end="35:78"><expr pos:start="35:69" pos:end="35:78"><name pos:start="35:69" pos:end="35:78">proto_name</name></expr></argument>)</argument_list></call></expr>]</index></name> <operator pos:start="35:82" pos:end="35:83">==</operator> <literal type="char" pos:start="35:85" pos:end="35:87">':'</literal></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:9"><block_content pos:start="37:9" pos:end="37:9">

        <empty_stmt pos:start="37:9" pos:end="37:9">;</empty_stmt></block_content></block></if>

    <if type="elseif" pos:start="39:5" pos:end="41:35">else if <condition pos:start="39:13" pos:end="39:69">(<expr pos:start="39:14" pos:end="39:68"><call pos:start="39:14" pos:end="39:39"><name pos:start="39:14" pos:end="39:19">strcmp</name><argument_list pos:start="39:20" pos:end="39:39">(<argument pos:start="39:21" pos:end="39:30"><expr pos:start="39:21" pos:end="39:30"><name pos:start="39:21" pos:end="39:30">proto_name</name></expr></argument>, <argument pos:start="39:33" pos:end="39:38"><expr pos:start="39:33" pos:end="39:38"><literal type="string" pos:start="39:33" pos:end="39:38">"file"</literal></expr></argument>)</argument_list></call> <operator pos:start="39:41" pos:end="39:42">||</operator> <operator pos:start="39:44" pos:end="39:44">!</operator><call pos:start="39:45" pos:end="39:68"><name pos:start="39:45" pos:end="39:51">strncmp</name><argument_list pos:start="39:52" pos:end="39:68">(<argument pos:start="39:53" pos:end="39:55"><expr pos:start="39:53" pos:end="39:55"><name pos:start="39:53" pos:end="39:55">url</name></expr></argument>, <argument pos:start="39:58" pos:end="39:64"><expr pos:start="39:58" pos:end="39:64"><literal type="string" pos:start="39:58" pos:end="39:64">"file,"</literal></expr></argument>, <argument pos:start="39:67" pos:end="39:67"><expr pos:start="39:67" pos:end="39:67"><literal type="number" pos:start="39:67" pos:end="39:67">5</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:35"><block_content pos:start="41:9" pos:end="41:35">

        <return pos:start="41:9" pos:end="41:35">return <expr pos:start="41:16" pos:end="41:34"><name pos:start="41:16" pos:end="41:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:55"><expr pos:start="45:5" pos:end="45:54"><name pos:start="45:5" pos:end="45:7">ret</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:54"><name pos:start="45:11" pos:end="45:20"><name pos:start="45:11" pos:end="45:11">s</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:20">io_open</name></name><argument_list pos:start="45:21" pos:end="45:54">(<argument pos:start="45:22" pos:end="45:22"><expr pos:start="45:22" pos:end="45:22"><name pos:start="45:22" pos:end="45:22">s</name></expr></argument>, <argument pos:start="45:25" pos:end="45:26"><expr pos:start="45:25" pos:end="45:26"><name pos:start="45:25" pos:end="45:26">pb</name></expr></argument>, <argument pos:start="45:29" pos:end="45:31"><expr pos:start="45:29" pos:end="45:31"><name pos:start="45:29" pos:end="45:31">url</name></expr></argument>, <argument pos:start="45:34" pos:end="45:47"><expr pos:start="45:34" pos:end="45:47"><name pos:start="45:34" pos:end="45:47">AVIO_FLAG_READ</name></expr></argument>, <argument pos:start="45:50" pos:end="45:53"><expr pos:start="45:50" pos:end="45:53"><operator pos:start="45:50" pos:end="45:50">&amp;</operator><name pos:start="45:51" pos:end="45:53">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="57:5"><if pos:start="47:5" pos:end="57:5">if <condition pos:start="47:8" pos:end="47:17">(<expr pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:14">&gt;=</operator> <literal type="number" pos:start="47:16" pos:end="47:16">0</literal></expr>)</condition> <block pos:start="47:19" pos:end="57:5">{<block_content pos:start="51:9" pos:end="55:53">

        <comment type="line" pos:start="49:9" pos:end="49:59">// update cookies on http response with setcookies.</comment>

        <decl_stmt pos:start="51:9" pos:end="51:67"><decl pos:start="51:9" pos:end="51:66"><type pos:start="51:9" pos:end="51:14"><name pos:start="51:9" pos:end="51:12">void</name> <modifier pos:start="51:14" pos:end="51:14">*</modifier></type><name pos:start="51:15" pos:end="51:15">u</name> <init pos:start="51:17" pos:end="51:66">= <expr pos:start="51:19" pos:end="51:66"><ternary pos:start="51:19" pos:end="51:66"><condition pos:start="51:19" pos:end="51:53"><expr pos:start="51:19" pos:end="51:51"><operator pos:start="51:19" pos:end="51:19">(</operator><name pos:start="51:20" pos:end="51:27"><name pos:start="51:20" pos:end="51:20">s</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:27">flags</name></name> <operator pos:start="51:29" pos:end="51:29">&amp;</operator> <name pos:start="51:31" pos:end="51:50">AVFMT_FLAG_CUSTOM_IO</name><operator pos:start="51:51" pos:end="51:51">)</operator></expr> ?</condition><then pos:start="51:55" pos:end="51:58"> <expr pos:start="51:55" pos:end="51:58"><name pos:start="51:55" pos:end="51:58">NULL</name></expr> </then><else pos:start="51:60" pos:end="51:66">: <expr pos:start="51:62" pos:end="51:66"><name pos:start="51:62" pos:end="51:66"><name pos:start="51:62" pos:end="51:62">s</name><operator pos:start="51:63" pos:end="51:64">-&gt;</operator><name pos:start="51:65" pos:end="51:66">pb</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:50"><expr pos:start="53:9" pos:end="53:49"><call pos:start="53:9" pos:end="53:49"><name pos:start="53:9" pos:end="53:22">update_options</name><argument_list pos:start="53:23" pos:end="53:49">(<argument pos:start="53:24" pos:end="53:34"><expr pos:start="53:24" pos:end="53:34"><operator pos:start="53:24" pos:end="53:24">&amp;</operator><name pos:start="53:25" pos:end="53:34"><name pos:start="53:25" pos:end="53:25">c</name><operator pos:start="53:26" pos:end="53:27">-&gt;</operator><name pos:start="53:28" pos:end="53:34">cookies</name></name></expr></argument>, <argument pos:start="53:37" pos:end="53:45"><expr pos:start="53:37" pos:end="53:45"><literal type="string" pos:start="53:37" pos:end="53:45">"cookies"</literal></expr></argument>, <argument pos:start="53:48" pos:end="53:48"><expr pos:start="53:48" pos:end="53:48"><name pos:start="53:48" pos:end="53:48">u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:53"><expr pos:start="55:9" pos:end="55:52"><call pos:start="55:9" pos:end="55:52"><name pos:start="55:9" pos:end="55:19">av_dict_set</name><argument_list pos:start="55:20" pos:end="55:52">(<argument pos:start="55:21" pos:end="55:25"><expr pos:start="55:21" pos:end="55:25"><operator pos:start="55:21" pos:end="55:21">&amp;</operator><name pos:start="55:22" pos:end="55:25">opts</name></expr></argument>, <argument pos:start="55:28" pos:end="55:36"><expr pos:start="55:28" pos:end="55:36"><literal type="string" pos:start="55:28" pos:end="55:36">"cookies"</literal></expr></argument>, <argument pos:start="55:39" pos:end="55:48"><expr pos:start="55:39" pos:end="55:48"><name pos:start="55:39" pos:end="55:48"><name pos:start="55:39" pos:end="55:39">c</name><operator pos:start="55:40" pos:end="55:41">-&gt;</operator><name pos:start="55:42" pos:end="55:48">cookies</name></name></expr></argument>, <argument pos:start="55:51" pos:end="55:51"><expr pos:start="55:51" pos:end="55:51"><literal type="number" pos:start="55:51" pos:end="55:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:23"><expr pos:start="61:5" pos:end="61:22"><call pos:start="61:5" pos:end="61:22"><name pos:start="61:5" pos:end="61:16">av_dict_free</name><argument_list pos:start="61:17" pos:end="61:22">(<argument pos:start="61:18" pos:end="61:21"><expr pos:start="61:18" pos:end="61:21"><operator pos:start="61:18" pos:end="61:18">&amp;</operator><name pos:start="61:19" pos:end="61:21">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="65:5" pos:end="65:15">return <expr pos:start="65:12" pos:end="65:14"><name pos:start="65:12" pos:end="65:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
