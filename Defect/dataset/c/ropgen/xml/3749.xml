<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3749.c" pos:tabs="8"><function pos:start="1:1" pos:end="221:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">vmsvga_value_write</name><parameter_list pos:start="1:31" pos:end="1:78">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:61"><decl pos:start="1:46" pos:end="1:61"><type pos:start="1:46" pos:end="1:61"><name pos:start="1:46" pos:end="1:53">uint32_t</name></type> <name pos:start="1:55" pos:end="1:61">address</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:77"><decl pos:start="1:64" pos:end="1:77"><type pos:start="1:64" pos:end="1:77"><name pos:start="1:64" pos:end="1:71">uint32_t</name></type> <name pos:start="1:73" pos:end="1:77">value</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="221:1">{<block_content pos:start="5:5" pos:end="219:5">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:27"><name pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:25">vmsvga_state_s</name></name> <modifier pos:start="5:27" pos:end="5:27">*</modifier></type><name pos:start="5:28" pos:end="5:28">s</name> <init pos:start="5:30" pos:end="5:37">= <expr pos:start="5:32" pos:end="5:37"><name pos:start="5:32" pos:end="5:37">opaque</name></expr></init></decl>;</decl_stmt>

    <switch pos:start="7:5" pos:end="219:5">switch <condition pos:start="7:12" pos:end="7:21">(<expr pos:start="7:13" pos:end="7:20"><name pos:start="7:13" pos:end="7:20"><name pos:start="7:13" pos:end="7:13">s</name><operator pos:start="7:14" pos:end="7:15">-&gt;</operator><name pos:start="7:16" pos:end="7:20">index</name></name></expr>)</condition> <block pos:start="7:23" pos:end="219:5">{<block_content pos:start="9:5" pos:end="217:66">

    <case pos:start="9:5" pos:end="9:21">case <expr pos:start="9:10" pos:end="9:20"><name pos:start="9:10" pos:end="9:20">SVGA_REG_ID</name></expr>:</case>

        <if_stmt pos:start="11:9" pos:end="13:30"><if pos:start="11:9" pos:end="13:30">if <condition pos:start="11:12" pos:end="11:75">(<expr pos:start="11:13" pos:end="11:74"><name pos:start="11:13" pos:end="11:17">value</name> <operator pos:start="11:19" pos:end="11:20">==</operator> <name pos:start="11:22" pos:end="11:30">SVGA_ID_2</name> <operator pos:start="11:32" pos:end="11:33">||</operator> <name pos:start="11:35" pos:end="11:39">value</name> <operator pos:start="11:41" pos:end="11:42">==</operator> <name pos:start="11:44" pos:end="11:52">SVGA_ID_1</name> <operator pos:start="11:54" pos:end="11:55">||</operator> <name pos:start="11:57" pos:end="11:61">value</name> <operator pos:start="11:63" pos:end="11:64">==</operator> <name pos:start="11:66" pos:end="11:74">SVGA_ID_0</name></expr>)</condition><block type="pseudo" pos:start="13:13" pos:end="13:30"><block_content pos:start="13:13" pos:end="13:30">

            <expr_stmt pos:start="13:13" pos:end="13:30"><expr pos:start="13:13" pos:end="13:29"><name pos:start="13:13" pos:end="13:21"><name pos:start="13:13" pos:end="13:13">s</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:21">svgaid</name></name> <operator pos:start="13:23" pos:end="13:23">=</operator> <name pos:start="13:25" pos:end="13:29">value</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="15:9" pos:end="15:14">break;</break>



    <case pos:start="19:5" pos:end="19:25">case <expr pos:start="19:10" pos:end="19:24"><name pos:start="19:10" pos:end="19:24">SVGA_REG_ENABLE</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:26"><expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:17">enable</name></name> <operator pos:start="21:19" pos:end="21:19">=</operator> <name pos:start="21:21" pos:end="21:25">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:29"><expr pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:17">config</name></name> <operator pos:start="23:19" pos:end="23:20">&amp;=</operator> <operator pos:start="23:22" pos:end="23:22">!</operator><operator pos:start="23:23" pos:end="23:23">!</operator><name pos:start="23:24" pos:end="23:28">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:22"><expr pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:16">width</name></name> <operator pos:start="25:18" pos:end="25:18">=</operator> <operator pos:start="25:20" pos:end="25:20">-</operator><literal type="number" pos:start="25:21" pos:end="25:21">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:23"><expr pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:17">height</name></name> <operator pos:start="27:19" pos:end="27:19">=</operator> <operator pos:start="27:21" pos:end="27:21">-</operator><literal type="number" pos:start="27:22" pos:end="27:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:27"><expr pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:22">invalidated</name></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <literal type="number" pos:start="29:26" pos:end="29:26">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:35"><expr pos:start="31:9" pos:end="31:34"><call pos:start="31:9" pos:end="31:34"><name pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:14">vga</name><operator pos:start="31:15" pos:end="31:15">.</operator><name pos:start="31:16" pos:end="31:25">invalidate</name></name><argument_list pos:start="31:26" pos:end="31:34">(<argument pos:start="31:27" pos:end="31:33"><expr pos:start="31:27" pos:end="31:33"><operator pos:start="31:27" pos:end="31:27">&amp;</operator><name pos:start="31:28" pos:end="31:33"><name pos:start="31:28" pos:end="31:28">s</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:33">vga</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="43:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:22">(<expr pos:start="33:13" pos:end="33:21"><name pos:start="33:13" pos:end="33:21"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:21">enable</name></name></expr>)</condition> <block pos:start="33:24" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:40">

            <expr_stmt pos:start="35:13" pos:end="35:78"><expr pos:start="35:13" pos:end="35:77"><name pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:22">fb_size</name></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <operator pos:start="35:26" pos:end="35:26">(</operator><operator pos:start="35:27" pos:end="35:27">(</operator><name pos:start="35:28" pos:end="35:35"><name pos:start="35:28" pos:end="35:28">s</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:35">depth</name></name> <operator pos:start="35:37" pos:end="35:37">+</operator> <literal type="number" pos:start="35:39" pos:end="35:39">7</literal><operator pos:start="35:40" pos:end="35:40">)</operator> <operator pos:start="35:42" pos:end="35:43">&gt;&gt;</operator> <literal type="number" pos:start="35:45" pos:end="35:45">3</literal><operator pos:start="35:46" pos:end="35:46">)</operator> <operator pos:start="35:48" pos:end="35:48">*</operator> <name pos:start="35:50" pos:end="35:61"><name pos:start="35:50" pos:end="35:50">s</name><operator pos:start="35:51" pos:end="35:52">-&gt;</operator><name pos:start="35:53" pos:end="35:61">new_width</name></name> <operator pos:start="35:63" pos:end="35:63">*</operator> <name pos:start="35:65" pos:end="35:77"><name pos:start="35:65" pos:end="35:65">s</name><operator pos:start="35:66" pos:end="35:67">-&gt;</operator><name pos:start="35:68" pos:end="35:77">new_height</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:40"><expr pos:start="37:13" pos:end="37:39"><call pos:start="37:13" pos:end="37:39"><name pos:start="37:13" pos:end="37:30">vga_dirty_log_stop</name><argument_list pos:start="37:31" pos:end="37:39">(<argument pos:start="37:32" pos:end="37:38"><expr pos:start="37:32" pos:end="37:38"><operator pos:start="37:32" pos:end="37:32">&amp;</operator><name pos:start="37:33" pos:end="37:38"><name pos:start="37:33" pos:end="37:33">s</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:38">vga</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="39:11" pos:end="43:9">else <block pos:start="39:16" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:41">

            <expr_stmt pos:start="41:13" pos:end="41:41"><expr pos:start="41:13" pos:end="41:40"><call pos:start="41:13" pos:end="41:40"><name pos:start="41:13" pos:end="41:31">vga_dirty_log_start</name><argument_list pos:start="41:32" pos:end="41:40">(<argument pos:start="41:33" pos:end="41:39"><expr pos:start="41:33" pos:end="41:39"><operator pos:start="41:33" pos:end="41:33">&amp;</operator><name pos:start="41:34" pos:end="41:39"><name pos:start="41:34" pos:end="41:34">s</name><operator pos:start="41:35" pos:end="41:36">-&gt;</operator><name pos:start="41:37" pos:end="41:39">vga</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>



    <case pos:start="49:5" pos:end="49:24">case <expr pos:start="49:10" pos:end="49:23"><name pos:start="49:10" pos:end="49:23">SVGA_REG_WIDTH</name></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:29"><expr pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:20">new_width</name></name> <operator pos:start="51:22" pos:end="51:22">=</operator> <name pos:start="51:24" pos:end="51:28">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:27"><expr pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:22">invalidated</name></name> <operator pos:start="53:24" pos:end="53:24">=</operator> <literal type="number" pos:start="53:26" pos:end="53:26">1</literal></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>



    <case pos:start="59:5" pos:end="59:25">case <expr pos:start="59:10" pos:end="59:24"><name pos:start="59:10" pos:end="59:24">SVGA_REG_HEIGHT</name></expr>:</case>

        <expr_stmt pos:start="61:9" pos:end="61:30"><expr pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:21">new_height</name></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <name pos:start="61:25" pos:end="61:29">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:27"><expr pos:start="63:9" pos:end="63:26"><name pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:22">invalidated</name></name> <operator pos:start="63:24" pos:end="63:24">=</operator> <literal type="number" pos:start="63:26" pos:end="63:26">1</literal></expr>;</expr_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>



    <case pos:start="69:5" pos:end="69:24">case <expr pos:start="69:10" pos:end="69:23"><name pos:start="69:10" pos:end="69:23">SVGA_REG_DEPTH</name></expr>:</case>

    <case pos:start="71:5" pos:end="71:33">case <expr pos:start="71:10" pos:end="71:32"><name pos:start="71:10" pos:end="71:32">SVGA_REG_BITS_PER_PIXEL</name></expr>:</case>

        <if_stmt pos:start="73:9" pos:end="79:9"><if pos:start="73:9" pos:end="79:9">if <condition pos:start="73:12" pos:end="73:30">(<expr pos:start="73:13" pos:end="73:29"><name pos:start="73:13" pos:end="73:17">value</name> <operator pos:start="73:19" pos:end="73:20">!=</operator> <name pos:start="73:22" pos:end="73:29"><name pos:start="73:22" pos:end="73:22">s</name><operator pos:start="73:23" pos:end="73:24">-&gt;</operator><name pos:start="73:25" pos:end="73:29">depth</name></name></expr>)</condition> <block pos:start="73:32" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:26">

            <expr_stmt pos:start="75:13" pos:end="75:75"><expr pos:start="75:13" pos:end="75:74"><call pos:start="75:13" pos:end="75:74"><name pos:start="75:13" pos:end="75:18">printf</name><argument_list pos:start="75:19" pos:end="75:74">(<argument pos:start="75:20" pos:end="75:52"><expr pos:start="75:20" pos:end="75:52"><literal type="string" pos:start="75:20" pos:end="75:52">"%s: Bad colour depth: %i bits\n"</literal></expr></argument>, <argument pos:start="75:55" pos:end="75:66"><expr pos:start="75:55" pos:end="75:66"><name pos:start="75:55" pos:end="75:66">__FUNCTION__</name></expr></argument>, <argument pos:start="75:69" pos:end="75:73"><expr pos:start="75:69" pos:end="75:73"><name pos:start="75:69" pos:end="75:73">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:26"><expr pos:start="77:13" pos:end="77:25"><name pos:start="77:13" pos:end="77:21"><name pos:start="77:13" pos:end="77:13">s</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:21">config</name></name> <operator pos:start="77:23" pos:end="77:23">=</operator> <literal type="number" pos:start="77:25" pos:end="77:25">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="81:9" pos:end="81:14">break;</break>



    <case pos:start="85:5" pos:end="85:30">case <expr pos:start="85:10" pos:end="85:29"><name pos:start="85:10" pos:end="85:29">SVGA_REG_CONFIG_DONE</name></expr>:</case>

        <if_stmt pos:start="87:9" pos:end="111:9"><if pos:start="87:9" pos:end="111:9">if <condition pos:start="87:12" pos:end="87:18">(<expr pos:start="87:13" pos:end="87:17"><name pos:start="87:13" pos:end="87:17">value</name></expr>)</condition> <block pos:start="87:20" pos:end="111:9">{<block_content pos:start="89:13" pos:end="109:22">

            <expr_stmt pos:start="89:13" pos:end="89:47"><expr pos:start="89:13" pos:end="89:46"><name pos:start="89:13" pos:end="89:19"><name pos:start="89:13" pos:end="89:13">s</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:19">fifo</name></name> <operator pos:start="89:21" pos:end="89:21">=</operator> <operator pos:start="89:23" pos:end="89:23">(</operator><name pos:start="89:24" pos:end="89:31">uint32_t</name> <operator pos:start="89:33" pos:end="89:33">*</operator><operator pos:start="89:34" pos:end="89:34">)</operator> <name pos:start="89:36" pos:end="89:46"><name pos:start="89:36" pos:end="89:36">s</name><operator pos:start="89:37" pos:end="89:38">-&gt;</operator><name pos:start="89:39" pos:end="89:46">fifo_ptr</name></name></expr>;</expr_stmt>

            <comment type="block" pos:start="91:13" pos:end="91:45">/* Check range and alignment.  */</comment>

            <if_stmt pos:start="93:13" pos:end="97:22"><if pos:start="93:13" pos:end="97:22">if <condition pos:start="93:16" pos:end="95:55">(<expr pos:start="93:17" pos:end="95:54"><operator pos:start="93:17" pos:end="93:17">(</operator><call pos:start="93:18" pos:end="93:25"><name pos:start="93:18" pos:end="93:20">CMD</name><argument_list pos:start="93:21" pos:end="93:25">(<argument pos:start="93:22" pos:end="93:24"><expr pos:start="93:22" pos:end="93:24"><name pos:start="93:22" pos:end="93:24">min</name></expr></argument>)</argument_list></call> <operator pos:start="93:27" pos:end="93:27">|</operator> <call pos:start="93:29" pos:end="93:36"><name pos:start="93:29" pos:end="93:31">CMD</name><argument_list pos:start="93:32" pos:end="93:36">(<argument pos:start="93:33" pos:end="93:35"><expr pos:start="93:33" pos:end="93:35"><name pos:start="93:33" pos:end="93:35">max</name></expr></argument>)</argument_list></call> <operator pos:start="93:38" pos:end="93:38">|</operator>

                        <call pos:start="95:25" pos:end="95:37"><name pos:start="95:25" pos:end="95:27">CMD</name><argument_list pos:start="95:28" pos:end="95:37">(<argument pos:start="95:29" pos:end="95:36"><expr pos:start="95:29" pos:end="95:36"><name pos:start="95:29" pos:end="95:36">next_cmd</name></expr></argument>)</argument_list></call> <operator pos:start="95:39" pos:end="95:39">|</operator> <call pos:start="95:41" pos:end="95:49"><name pos:start="95:41" pos:end="95:43">CMD</name><argument_list pos:start="95:44" pos:end="95:49">(<argument pos:start="95:45" pos:end="95:48"><expr pos:start="95:45" pos:end="95:48"><name pos:start="95:45" pos:end="95:48">stop</name></expr></argument>)</argument_list></call><operator pos:start="95:50" pos:end="95:50">)</operator> <operator pos:start="95:52" pos:end="95:52">&amp;</operator> <literal type="number" pos:start="95:54" pos:end="95:54">3</literal></expr>)</condition><block type="pseudo" pos:start="97:17" pos:end="97:22"><block_content pos:start="97:17" pos:end="97:22">

                <break pos:start="97:17" pos:end="97:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="99:13" pos:end="101:22"><if pos:start="99:13" pos:end="101:22">if <condition pos:start="99:16" pos:end="99:74">(<expr pos:start="99:17" pos:end="99:73"><call pos:start="99:17" pos:end="99:24"><name pos:start="99:17" pos:end="99:19">CMD</name><argument_list pos:start="99:20" pos:end="99:24">(<argument pos:start="99:21" pos:end="99:23"><expr pos:start="99:21" pos:end="99:23"><name pos:start="99:21" pos:end="99:23">min</name></expr></argument>)</argument_list></call> <operator pos:start="99:26" pos:end="99:26">&lt;</operator> <operator pos:start="99:28" pos:end="99:28">(</operator><name pos:start="99:29" pos:end="99:35">uint8_t</name> <operator pos:start="99:37" pos:end="99:37">*</operator><operator pos:start="99:38" pos:end="99:38">)</operator> <name pos:start="99:40" pos:end="99:51"><name pos:start="99:40" pos:end="99:40">s</name><operator pos:start="99:41" pos:end="99:42">-&gt;</operator><name pos:start="99:43" pos:end="99:45">cmd</name><operator pos:start="99:46" pos:end="99:47">-&gt;</operator><name pos:start="99:48" pos:end="99:51">fifo</name></name> <operator pos:start="99:53" pos:end="99:53">-</operator> <operator pos:start="99:55" pos:end="99:55">(</operator><name pos:start="99:56" pos:end="99:62">uint8_t</name> <operator pos:start="99:64" pos:end="99:64">*</operator><operator pos:start="99:65" pos:end="99:65">)</operator> <name pos:start="99:67" pos:end="99:73"><name pos:start="99:67" pos:end="99:67">s</name><operator pos:start="99:68" pos:end="99:69">-&gt;</operator><name pos:start="99:70" pos:end="99:73">fifo</name></name></expr>)</condition><block type="pseudo" pos:start="101:17" pos:end="101:22"><block_content pos:start="101:17" pos:end="101:22">

                <break pos:start="101:17" pos:end="101:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="103:13" pos:end="105:22"><if pos:start="103:13" pos:end="105:22">if <condition pos:start="103:16" pos:end="103:42">(<expr pos:start="103:17" pos:end="103:41"><call pos:start="103:17" pos:end="103:24"><name pos:start="103:17" pos:end="103:19">CMD</name><argument_list pos:start="103:20" pos:end="103:24">(<argument pos:start="103:21" pos:end="103:23"><expr pos:start="103:21" pos:end="103:23"><name pos:start="103:21" pos:end="103:23">max</name></expr></argument>)</argument_list></call> <operator pos:start="103:26" pos:end="103:26">&gt;</operator> <name pos:start="103:28" pos:end="103:41">SVGA_FIFO_SIZE</name></expr>)</condition><block type="pseudo" pos:start="105:17" pos:end="105:22"><block_content pos:start="105:17" pos:end="105:22">

                <break pos:start="105:17" pos:end="105:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="107:13" pos:end="109:22"><if pos:start="107:13" pos:end="109:22">if <condition pos:start="107:16" pos:end="107:48">(<expr pos:start="107:17" pos:end="107:47"><call pos:start="107:17" pos:end="107:24"><name pos:start="107:17" pos:end="107:19">CMD</name><argument_list pos:start="107:20" pos:end="107:24">(<argument pos:start="107:21" pos:end="107:23"><expr pos:start="107:21" pos:end="107:23"><name pos:start="107:21" pos:end="107:23">max</name></expr></argument>)</argument_list></call> <operator pos:start="107:26" pos:end="107:26">&lt;</operator> <call pos:start="107:28" pos:end="107:35"><name pos:start="107:28" pos:end="107:30">CMD</name><argument_list pos:start="107:31" pos:end="107:35">(<argument pos:start="107:32" pos:end="107:34"><expr pos:start="107:32" pos:end="107:34"><name pos:start="107:32" pos:end="107:34">min</name></expr></argument>)</argument_list></call> <operator pos:start="107:37" pos:end="107:37">+</operator> <literal type="number" pos:start="107:39" pos:end="107:40">10</literal> <operator pos:start="107:42" pos:end="107:42">*</operator> <literal type="number" pos:start="107:44" pos:end="107:47">1024</literal></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:22"><block_content pos:start="109:17" pos:end="109:22">

                <break pos:start="109:17" pos:end="109:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:28"><expr pos:start="113:9" pos:end="113:27"><name pos:start="113:9" pos:end="113:17"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:17">config</name></name> <operator pos:start="113:19" pos:end="113:19">=</operator> <operator pos:start="113:21" pos:end="113:21">!</operator><operator pos:start="113:22" pos:end="113:22">!</operator><name pos:start="113:23" pos:end="113:27">value</name></expr>;</expr_stmt>

        <break pos:start="115:9" pos:end="115:14">break;</break>



    <case pos:start="119:5" pos:end="119:23">case <expr pos:start="119:10" pos:end="119:22"><name pos:start="119:10" pos:end="119:22">SVGA_REG_SYNC</name></expr>:</case>

        <expr_stmt pos:start="121:9" pos:end="121:23"><expr pos:start="121:9" pos:end="121:22"><name pos:start="121:9" pos:end="121:18"><name pos:start="121:9" pos:end="121:9">s</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:18">syncing</name></name> <operator pos:start="121:20" pos:end="121:20">=</operator> <literal type="number" pos:start="121:22" pos:end="121:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:27"><expr pos:start="123:9" pos:end="123:26"><call pos:start="123:9" pos:end="123:26"><name pos:start="123:9" pos:end="123:23">vmsvga_fifo_run</name><argument_list pos:start="123:24" pos:end="123:26">(<argument pos:start="123:25" pos:end="123:25"><expr pos:start="123:25" pos:end="123:25"><name pos:start="123:25" pos:end="123:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="123:29" pos:end="123:76">/* Or should we just wait for update_display? */</comment>

        <break pos:start="125:9" pos:end="125:14">break;</break>



    <case pos:start="129:5" pos:end="129:27">case <expr pos:start="129:10" pos:end="129:26"><name pos:start="129:10" pos:end="129:26">SVGA_REG_GUEST_ID</name></expr>:</case>

        <expr_stmt pos:start="131:9" pos:end="134:0"><expr pos:start="131:9" pos:end="131:24"><name pos:start="131:9" pos:end="131:16"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:16">guest</name></name> <operator pos:start="131:18" pos:end="131:18">=</operator> <name pos:start="131:20" pos:end="131:24">value</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="133:1" pos:end="133:14">#<cpp:directive pos:start="133:2" pos:end="133:6">ifdef</cpp:directive> <name pos:start="133:8" pos:end="133:14">VERBOSE</name></cpp:ifdef>

        <if_stmt pos:start="135:9" pos:end="144:0"><if pos:start="135:9" pos:end="144:0">if <condition pos:start="135:12" pos:end="137:44">(<expr pos:start="135:13" pos:end="137:43"><name pos:start="135:13" pos:end="135:17">value</name> <operator pos:start="135:19" pos:end="135:20">&gt;=</operator> <name pos:start="135:22" pos:end="135:34">GUEST_OS_BASE</name> <operator pos:start="135:36" pos:end="135:37">&amp;&amp;</operator> <name pos:start="135:39" pos:end="135:43">value</name> <operator pos:start="135:45" pos:end="135:45">&lt;</operator> <name pos:start="135:47" pos:end="135:59">GUEST_OS_BASE</name> <operator pos:start="135:61" pos:end="135:61">+</operator>

                <call pos:start="137:17" pos:end="137:43"><name pos:start="137:17" pos:end="137:26">ARRAY_SIZE</name><argument_list pos:start="137:27" pos:end="137:43">(<argument pos:start="137:28" pos:end="137:42"><expr pos:start="137:28" pos:end="137:42"><name pos:start="137:28" pos:end="137:42">vmsvga_guest_id</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="139:13" pos:end="144:0"><block_content pos:start="139:13" pos:end="144:0">

            <expr_stmt pos:start="139:13" pos:end="144:0"><expr pos:start="139:13" pos:end="141:67"><call pos:start="139:13" pos:end="141:67"><name pos:start="139:13" pos:end="139:18">printf</name><argument_list pos:start="139:19" pos:end="141:67">(<argument pos:start="139:20" pos:end="139:41"><expr pos:start="139:20" pos:end="139:41"><literal type="string" pos:start="139:20" pos:end="139:41">"%s: guest runs %s.\n"</literal></expr></argument>, <argument pos:start="139:44" pos:end="139:55"><expr pos:start="139:44" pos:end="139:55"><name pos:start="139:44" pos:end="139:55">__FUNCTION__</name></expr></argument>,

                            <argument pos:start="141:29" pos:end="141:66"><expr pos:start="141:29" pos:end="141:66"><name pos:start="141:29" pos:end="141:66"><name pos:start="141:29" pos:end="141:43">vmsvga_guest_id</name><index pos:start="141:44" pos:end="141:66">[<expr pos:start="141:45" pos:end="141:65"><name pos:start="141:45" pos:end="141:49">value</name> <operator pos:start="141:51" pos:end="141:51">-</operator> <name pos:start="141:53" pos:end="141:65">GUEST_OS_BASE</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="143:1" pos:end="143:6">#<cpp:directive pos:start="143:2" pos:end="143:6">endif</cpp:directive></cpp:endif>

        <break pos:start="145:9" pos:end="145:14">break;</break>



    <case pos:start="149:5" pos:end="149:28">case <expr pos:start="149:10" pos:end="149:27"><name pos:start="149:10" pos:end="149:27">SVGA_REG_CURSOR_ID</name></expr>:</case>

        <expr_stmt pos:start="151:9" pos:end="151:29"><expr pos:start="151:9" pos:end="151:28"><name pos:start="151:9" pos:end="151:20"><name pos:start="151:9" pos:end="151:9">s</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:17">cursor</name><operator pos:start="151:18" pos:end="151:18">.</operator><name pos:start="151:19" pos:end="151:20">id</name></name> <operator pos:start="151:22" pos:end="151:22">=</operator> <name pos:start="151:24" pos:end="151:28">value</name></expr>;</expr_stmt>

        <break pos:start="153:9" pos:end="153:14">break;</break>



    <case pos:start="157:5" pos:end="157:27">case <expr pos:start="157:10" pos:end="157:26"><name pos:start="157:10" pos:end="157:26">SVGA_REG_CURSOR_X</name></expr>:</case>

        <expr_stmt pos:start="159:9" pos:end="159:28"><expr pos:start="159:9" pos:end="159:27"><name pos:start="159:9" pos:end="159:19"><name pos:start="159:9" pos:end="159:9">s</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:17">cursor</name><operator pos:start="159:18" pos:end="159:18">.</operator><name pos:start="159:19" pos:end="159:19">x</name></name> <operator pos:start="159:21" pos:end="159:21">=</operator> <name pos:start="159:23" pos:end="159:27">value</name></expr>;</expr_stmt>

        <break pos:start="161:9" pos:end="161:14">break;</break>



    <case pos:start="165:5" pos:end="165:27">case <expr pos:start="165:10" pos:end="165:26"><name pos:start="165:10" pos:end="165:26">SVGA_REG_CURSOR_Y</name></expr>:</case>

        <expr_stmt pos:start="167:9" pos:end="167:28"><expr pos:start="167:9" pos:end="167:27"><name pos:start="167:9" pos:end="167:19"><name pos:start="167:9" pos:end="167:9">s</name><operator pos:start="167:10" pos:end="167:11">-&gt;</operator><name pos:start="167:12" pos:end="167:17">cursor</name><operator pos:start="167:18" pos:end="167:18">.</operator><name pos:start="167:19" pos:end="167:19">y</name></name> <operator pos:start="167:21" pos:end="167:21">=</operator> <name pos:start="167:23" pos:end="167:27">value</name></expr>;</expr_stmt>

        <break pos:start="169:9" pos:end="169:14">break;</break>



    <case pos:start="173:5" pos:end="173:28">case <expr pos:start="173:10" pos:end="173:27"><name pos:start="173:10" pos:end="173:27">SVGA_REG_CURSOR_ON</name></expr>:</case>

        <expr_stmt pos:start="175:9" pos:end="175:55"><expr pos:start="175:9" pos:end="175:54"><name pos:start="175:9" pos:end="175:20"><name pos:start="175:9" pos:end="175:9">s</name><operator pos:start="175:10" pos:end="175:11">-&gt;</operator><name pos:start="175:12" pos:end="175:17">cursor</name><operator pos:start="175:18" pos:end="175:18">.</operator><name pos:start="175:19" pos:end="175:20">on</name></name> <operator pos:start="175:22" pos:end="175:23">|=</operator> <operator pos:start="175:25" pos:end="175:25">(</operator><name pos:start="175:26" pos:end="175:30">value</name> <operator pos:start="175:32" pos:end="175:33">==</operator> <name pos:start="175:35" pos:end="175:53">SVGA_CURSOR_ON_SHOW</name><operator pos:start="175:54" pos:end="175:54">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="180:0"><expr pos:start="177:9" pos:end="177:54"><name pos:start="177:9" pos:end="177:20"><name pos:start="177:9" pos:end="177:9">s</name><operator pos:start="177:10" pos:end="177:11">-&gt;</operator><name pos:start="177:12" pos:end="177:17">cursor</name><operator pos:start="177:18" pos:end="177:18">.</operator><name pos:start="177:19" pos:end="177:20">on</name></name> <operator pos:start="177:22" pos:end="177:23">&amp;=</operator> <operator pos:start="177:25" pos:end="177:25">(</operator><name pos:start="177:26" pos:end="177:30">value</name> <operator pos:start="177:32" pos:end="177:33">!=</operator> <name pos:start="177:35" pos:end="177:53">SVGA_CURSOR_ON_HIDE</name><operator pos:start="177:54" pos:end="177:54">)</operator></expr>;</expr_stmt>

<cpp:ifdef pos:start="179:1" pos:end="179:21">#<cpp:directive pos:start="179:2" pos:end="179:6">ifdef</cpp:directive> <name pos:start="179:8" pos:end="179:21">HW_MOUSE_ACCEL</name></cpp:ifdef>

        <if_stmt pos:start="181:9" pos:end="188:0"><if pos:start="181:9" pos:end="188:0">if <condition pos:start="181:12" pos:end="181:41">(<expr pos:start="181:13" pos:end="181:40"><name pos:start="181:13" pos:end="181:17">value</name> <operator pos:start="181:19" pos:end="181:20">&lt;=</operator> <name pos:start="181:22" pos:end="181:40">SVGA_CURSOR_ON_SHOW</name></expr>)</condition> <block pos:start="181:43" pos:end="188:0">{<block_content pos:start="183:13" pos:end="183:77">

            <expr_stmt pos:start="183:13" pos:end="183:77"><expr pos:start="183:13" pos:end="183:76"><call pos:start="183:13" pos:end="183:76"><name pos:start="183:13" pos:end="183:25">dpy_mouse_set</name><argument_list pos:start="183:26" pos:end="183:76">(<argument pos:start="183:27" pos:end="183:35"><expr pos:start="183:27" pos:end="183:35"><name pos:start="183:27" pos:end="183:35"><name pos:start="183:27" pos:end="183:27">s</name><operator pos:start="183:28" pos:end="183:29">-&gt;</operator><name pos:start="183:30" pos:end="183:32">vga</name><operator pos:start="183:33" pos:end="183:33">.</operator><name pos:start="183:34" pos:end="183:35">ds</name></name></expr></argument>, <argument pos:start="183:38" pos:end="183:48"><expr pos:start="183:38" pos:end="183:48"><name pos:start="183:38" pos:end="183:48"><name pos:start="183:38" pos:end="183:38">s</name><operator pos:start="183:39" pos:end="183:40">-&gt;</operator><name pos:start="183:41" pos:end="183:46">cursor</name><operator pos:start="183:47" pos:end="183:47">.</operator><name pos:start="183:48" pos:end="183:48">x</name></name></expr></argument>, <argument pos:start="183:51" pos:end="183:61"><expr pos:start="183:51" pos:end="183:61"><name pos:start="183:51" pos:end="183:61"><name pos:start="183:51" pos:end="183:51">s</name><operator pos:start="183:52" pos:end="183:53">-&gt;</operator><name pos:start="183:54" pos:end="183:59">cursor</name><operator pos:start="183:60" pos:end="183:60">.</operator><name pos:start="183:61" pos:end="183:61">y</name></name></expr></argument>, <argument pos:start="183:64" pos:end="183:75"><expr pos:start="183:64" pos:end="183:75"><name pos:start="183:64" pos:end="183:75"><name pos:start="183:64" pos:end="183:64">s</name><operator pos:start="183:65" pos:end="183:66">-&gt;</operator><name pos:start="183:67" pos:end="183:72">cursor</name><operator pos:start="183:73" pos:end="183:73">.</operator><name pos:start="183:74" pos:end="183:75">on</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="187:1" pos:end="187:6">#<cpp:directive pos:start="187:2" pos:end="187:6">endif</cpp:directive></cpp:endif>

        <break pos:start="189:9" pos:end="189:14">break;</break>



    <case pos:start="193:5" pos:end="193:27">case <expr pos:start="193:10" pos:end="193:26"><name pos:start="193:10" pos:end="193:26">SVGA_REG_MEM_REGS</name></expr>:</case>

    <case pos:start="195:5" pos:end="195:31">case <expr pos:start="195:10" pos:end="195:30"><name pos:start="195:10" pos:end="195:30">SVGA_REG_NUM_DISPLAYS</name></expr>:</case>

    <case pos:start="197:5" pos:end="197:28">case <expr pos:start="197:10" pos:end="197:27"><name pos:start="197:10" pos:end="197:27">SVGA_REG_PITCHLOCK</name></expr>:</case>

    <case pos:start="199:5" pos:end="199:48">case <expr pos:start="199:10" pos:end="199:47"><name pos:start="199:10" pos:end="199:26">SVGA_PALETTE_BASE</name> <operator pos:start="199:28" pos:end="199:30">...</operator> <name pos:start="199:32" pos:end="199:47">SVGA_PALETTE_END</name></expr>:</case>

        <break pos:start="201:9" pos:end="201:14">break;</break>



    <default pos:start="205:5" pos:end="205:12">default:</default>

        <if_stmt pos:start="207:9" pos:end="215:9"><if pos:start="207:9" pos:end="215:9">if <condition pos:start="207:12" pos:end="209:63">(<expr pos:start="207:13" pos:end="209:62"><name pos:start="207:13" pos:end="207:20"><name pos:start="207:13" pos:end="207:13">s</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:20">index</name></name> <operator pos:start="207:22" pos:end="207:23">&gt;=</operator> <name pos:start="207:25" pos:end="207:41">SVGA_SCRATCH_BASE</name> <operator pos:start="207:43" pos:end="207:44">&amp;&amp;</operator>

                <name pos:start="209:17" pos:end="209:24"><name pos:start="209:17" pos:end="209:17">s</name><operator pos:start="209:18" pos:end="209:19">-&gt;</operator><name pos:start="209:20" pos:end="209:24">index</name></name> <operator pos:start="209:26" pos:end="209:26">&lt;</operator> <name pos:start="209:28" pos:end="209:44">SVGA_SCRATCH_BASE</name> <operator pos:start="209:46" pos:end="209:46">+</operator> <name pos:start="209:48" pos:end="209:62"><name pos:start="209:48" pos:end="209:48">s</name><operator pos:start="209:49" pos:end="209:50">-&gt;</operator><name pos:start="209:51" pos:end="209:62">scratch_size</name></name></expr>)</condition> <block pos:start="209:65" pos:end="215:9">{<block_content pos:start="211:13" pos:end="213:18">

            <expr_stmt pos:start="211:13" pos:end="211:61"><expr pos:start="211:13" pos:end="211:60"><name pos:start="211:13" pos:end="211:52"><name pos:start="211:13" pos:end="211:13">s</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:22">scratch</name><index pos:start="211:23" pos:end="211:52">[<expr pos:start="211:24" pos:end="211:51"><name pos:start="211:24" pos:end="211:31"><name pos:start="211:24" pos:end="211:24">s</name><operator pos:start="211:25" pos:end="211:26">-&gt;</operator><name pos:start="211:27" pos:end="211:31">index</name></name> <operator pos:start="211:33" pos:end="211:33">-</operator> <name pos:start="211:35" pos:end="211:51">SVGA_SCRATCH_BASE</name></expr>]</index></name> <operator pos:start="211:54" pos:end="211:54">=</operator> <name pos:start="211:56" pos:end="211:60">value</name></expr>;</expr_stmt>

            <break pos:start="213:13" pos:end="213:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:66"><expr pos:start="217:9" pos:end="217:65"><call pos:start="217:9" pos:end="217:65"><name pos:start="217:9" pos:end="217:14">printf</name><argument_list pos:start="217:15" pos:end="217:65">(<argument pos:start="217:16" pos:end="217:40"><expr pos:start="217:16" pos:end="217:40"><literal type="string" pos:start="217:16" pos:end="217:40">"%s: Bad register %02x\n"</literal></expr></argument>, <argument pos:start="217:43" pos:end="217:54"><expr pos:start="217:43" pos:end="217:54"><name pos:start="217:43" pos:end="217:54">__FUNCTION__</name></expr></argument>, <argument pos:start="217:57" pos:end="217:64"><expr pos:start="217:57" pos:end="217:64"><name pos:start="217:57" pos:end="217:64"><name pos:start="217:57" pos:end="217:57">s</name><operator pos:start="217:58" pos:end="217:59">-&gt;</operator><name pos:start="217:60" pos:end="217:64">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
