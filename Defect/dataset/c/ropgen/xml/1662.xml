<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1662.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">qemu_create_pidfile</name><parameter_list pos:start="1:24" pos:end="1:45">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:36"><specifier pos:start="1:25" pos:end="1:29">const</specifier> <name pos:start="1:31" pos:end="1:34">char</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:44">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:13">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:20"><name pos:start="5:10" pos:end="5:15">buffer</name><index pos:start="5:16" pos:end="5:20">[<expr pos:start="5:17" pos:end="5:19"><literal type="number" pos:start="5:17" pos:end="5:19">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:11"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">fd</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:53"><expr pos:start="13:5" pos:end="13:52"><name pos:start="13:5" pos:end="13:6">fd</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <call pos:start="13:10" pos:end="13:52"><name pos:start="13:10" pos:end="13:18">qemu_open</name><argument_list pos:start="13:19" pos:end="13:52">(<argument pos:start="13:20" pos:end="13:27"><expr pos:start="13:20" pos:end="13:27"><name pos:start="13:20" pos:end="13:27">filename</name></expr></argument>, <argument pos:start="13:30" pos:end="13:45"><expr pos:start="13:30" pos:end="13:45"><name pos:start="13:30" pos:end="13:35">O_RDWR</name> <operator pos:start="13:37" pos:end="13:37">|</operator> <name pos:start="13:39" pos:end="13:45">O_CREAT</name></expr></argument>, <argument pos:start="13:48" pos:end="13:51"><expr pos:start="13:48" pos:end="13:51"><literal type="number" pos:start="13:48" pos:end="13:51">0600</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:17">(<expr pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:10">fd</name> <operator pos:start="15:12" pos:end="15:13">==</operator> <operator pos:start="15:15" pos:end="15:15">-</operator><literal type="number" pos:start="15:16" pos:end="15:16">1</literal></expr>)</condition> <block pos:start="15:19" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:18">

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:36">(<expr pos:start="21:9" pos:end="21:35"><call pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:13">lockf</name><argument_list pos:start="21:14" pos:end="21:29">(<argument pos:start="21:15" pos:end="21:16"><expr pos:start="21:15" pos:end="21:16"><name pos:start="21:15" pos:end="21:16">fd</name></expr></argument>, <argument pos:start="21:19" pos:end="21:25"><expr pos:start="21:19" pos:end="21:25"><name pos:start="21:19" pos:end="21:25">F_TLOCK</name></expr></argument>, <argument pos:start="21:28" pos:end="21:28"><expr pos:start="21:28" pos:end="21:28"><literal type="number" pos:start="21:28" pos:end="21:28">0</literal></expr></argument>)</argument_list></call> <operator pos:start="21:31" pos:end="21:32">==</operator> <operator pos:start="21:34" pos:end="21:34">-</operator><literal type="number" pos:start="21:35" pos:end="21:35">1</literal></expr>)</condition> <block pos:start="21:38" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:18">

        <expr_stmt pos:start="23:9" pos:end="23:18"><expr pos:start="23:9" pos:end="23:17"><call pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:13">close</name><argument_list pos:start="23:14" pos:end="23:17">(<argument pos:start="23:15" pos:end="23:16"><expr pos:start="23:15" pos:end="23:16"><name pos:start="23:15" pos:end="23:16">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:67"><expr pos:start="29:5" pos:end="29:66"><name pos:start="29:5" pos:end="29:7">len</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="29:66"><name pos:start="29:11" pos:end="29:18">snprintf</name><argument_list pos:start="29:19" pos:end="29:66">(<argument pos:start="29:20" pos:end="29:25"><expr pos:start="29:20" pos:end="29:25"><name pos:start="29:20" pos:end="29:25">buffer</name></expr></argument>, <argument pos:start="29:28" pos:end="29:41"><expr pos:start="29:28" pos:end="29:41"><sizeof pos:start="29:28" pos:end="29:41">sizeof<argument_list pos:start="29:34" pos:end="29:41">(<argument pos:start="29:35" pos:end="29:40"><expr pos:start="29:35" pos:end="29:40"><name pos:start="29:35" pos:end="29:40">buffer</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="29:44" pos:end="29:55"><expr pos:start="29:44" pos:end="29:55"><name pos:start="29:44" pos:end="29:50">FMT_pid</name> <literal type="string" pos:start="29:52" pos:end="29:55">"\n"</literal></expr></argument>, <argument pos:start="29:58" pos:end="29:65"><expr pos:start="29:58" pos:end="29:65"><call pos:start="29:58" pos:end="29:65"><name pos:start="29:58" pos:end="29:63">getpid</name><argument_list pos:start="29:64" pos:end="29:65">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:38">(<expr pos:start="31:9" pos:end="31:37"><call pos:start="31:9" pos:end="31:30"><name pos:start="31:9" pos:end="31:13">write</name><argument_list pos:start="31:14" pos:end="31:30">(<argument pos:start="31:15" pos:end="31:16"><expr pos:start="31:15" pos:end="31:16"><name pos:start="31:15" pos:end="31:16">fd</name></expr></argument>, <argument pos:start="31:19" pos:end="31:24"><expr pos:start="31:19" pos:end="31:24"><name pos:start="31:19" pos:end="31:24">buffer</name></expr></argument>, <argument pos:start="31:27" pos:end="31:29"><expr pos:start="31:27" pos:end="31:29"><name pos:start="31:27" pos:end="31:29">len</name></expr></argument>)</argument_list></call> <operator pos:start="31:32" pos:end="31:33">!=</operator> <name pos:start="31:35" pos:end="31:37">len</name></expr>)</condition> <block pos:start="31:40" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:18">

        <expr_stmt pos:start="33:9" pos:end="33:18"><expr pos:start="33:9" pos:end="33:17"><call pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:13">close</name><argument_list pos:start="33:14" pos:end="33:17">(<argument pos:start="33:15" pos:end="33:16"><expr pos:start="33:15" pos:end="33:16"><name pos:start="33:15" pos:end="33:16">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:18">return <expr pos:start="35:16" pos:end="35:17"><operator pos:start="35:16" pos:end="35:16">-</operator><literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:14"><expr pos:start="41:5" pos:end="41:13"><call pos:start="41:5" pos:end="41:13"><name pos:start="41:5" pos:end="41:9">close</name><argument_list pos:start="41:10" pos:end="41:13">(<argument pos:start="41:11" pos:end="41:12"><expr pos:start="41:11" pos:end="41:12"><name pos:start="41:11" pos:end="41:12">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
