<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3604.c" pos:tabs="8"><function pos:start="1:1" pos:end="1301:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">transcode</name><parameter_list pos:start="1:21" pos:end="7:40">(<parameter pos:start="1:22" pos:end="1:45"><decl pos:start="1:22" pos:end="1:45"><type pos:start="1:22" pos:end="1:45"><name pos:start="1:22" pos:end="1:31">OutputFile</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:45">output_files</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:40"><decl pos:start="3:22" pos:end="3:40"><type pos:start="3:22" pos:end="3:40"><name pos:start="3:22" pos:end="3:24">int</name></type> <name pos:start="3:26" pos:end="3:40">nb_output_files</name></decl></parameter>,

                     <parameter pos:start="5:22" pos:end="5:43"><decl pos:start="5:22" pos:end="5:43"><type pos:start="5:22" pos:end="5:43"><name pos:start="5:22" pos:end="5:30">InputFile</name> <modifier pos:start="5:32" pos:end="5:32">*</modifier></type><name pos:start="5:33" pos:end="5:43">input_files</name></decl></parameter>,

                     <parameter pos:start="7:22" pos:end="7:39"><decl pos:start="7:22" pos:end="7:39"><type pos:start="7:22" pos:end="7:39"><name pos:start="7:22" pos:end="7:24">int</name></type> <name pos:start="7:26" pos:end="7:39">nb_input_files</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="1301:1">{<block_content pos:start="11:5" pos:end="1299:15">

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>, <decl pos:start="11:18" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:19">AVFormatContext</name> <modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:23">is</name></decl>, <decl pos:start="13:26" pos:end="13:28"><type ref="prev" pos:start="13:5" pos:end="13:21"><modifier pos:start="13:26" pos:end="13:26">*</modifier></type><name pos:start="13:27" pos:end="13:28">os</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:35"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">AVCodecContext</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:25">codec</name></decl>, <decl pos:start="15:28" pos:end="15:34"><type ref="prev" pos:start="15:5" pos:end="15:20"><modifier pos:start="15:28" pos:end="15:28">*</modifier></type><name pos:start="15:29" pos:end="15:34">icodec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:16">OutputStream</name> <modifier pos:start="17:18" pos:end="17:18">*</modifier></type><name pos:start="17:19" pos:end="17:21">ost</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:15">InputStream</name> <modifier pos:start="19:17" pos:end="19:17">*</modifier></type><name pos:start="19:18" pos:end="19:20">ist</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:21"><decl pos:start="21:5" pos:end="21:20"><type pos:start="21:5" pos:end="21:8"><name pos:start="21:5" pos:end="21:8">char</name></type> <name pos:start="21:10" pos:end="21:20"><name pos:start="21:10" pos:end="21:14">error</name><index pos:start="21:15" pos:end="21:20">[<expr pos:start="21:16" pos:end="21:19"><literal type="number" pos:start="21:16" pos:end="21:19">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:12"><decl pos:start="23:5" pos:end="23:11"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:11">key</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:21"><decl pos:start="25:5" pos:end="25:20"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:16">want_sdp</name> <init pos:start="25:18" pos:end="25:20">= <expr pos:start="25:20" pos:end="25:20"><literal type="number" pos:start="25:20" pos:end="25:20">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:23"><decl pos:start="27:5" pos:end="27:22"><type pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:11">uint8_t</name> <modifier pos:start="27:13" pos:end="27:13">*</modifier></type><name pos:start="27:14" pos:end="27:22">no_packet</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:26"><decl pos:start="29:5" pos:end="29:25"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:23">no_packet_count</name><init pos:start="29:24" pos:end="29:25">=<expr pos:start="29:25" pos:end="29:25"><literal type="number" pos:start="29:25" pos:end="29:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:24"><decl pos:start="31:5" pos:end="31:23"><type pos:start="31:5" pos:end="31:11"><name pos:start="31:5" pos:end="31:11">int64_t</name></type> <name pos:start="31:13" pos:end="31:23">timer_start</name></decl>;</decl_stmt>



    <if_stmt pos:start="35:5" pos:end="37:24"><if pos:start="35:5" pos:end="37:24">if <condition pos:start="35:8" pos:end="35:50">(<expr pos:start="35:9" pos:end="35:49"><operator pos:start="35:9" pos:end="35:9">!</operator><operator pos:start="35:10" pos:end="35:10">(</operator><name pos:start="35:11" pos:end="35:19">no_packet</name> <operator pos:start="35:21" pos:end="35:21">=</operator> <call pos:start="35:23" pos:end="35:48"><name pos:start="35:23" pos:end="35:32">av_mallocz</name><argument_list pos:start="35:33" pos:end="35:48">(<argument pos:start="35:34" pos:end="35:47"><expr pos:start="35:34" pos:end="35:47"><name pos:start="35:34" pos:end="35:47">nb_input_files</name></expr></argument>)</argument_list></call><operator pos:start="35:49" pos:end="35:49">)</operator></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:24"><block_content pos:start="37:9" pos:end="37:24">

        <expr_stmt pos:start="37:9" pos:end="37:24"><expr pos:start="37:9" pos:end="37:23"><call pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:20">exit_program</name><argument_list pos:start="37:21" pos:end="37:23">(<argument pos:start="37:22" pos:end="37:22"><expr pos:start="37:22" pos:end="37:22"><literal type="number" pos:start="37:22" pos:end="37:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="45:50"><if pos:start="41:5" pos:end="45:50">if <condition pos:start="41:8" pos:end="41:17">(<expr pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:16">rate_emu</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="45:50"><block_content pos:start="43:9" pos:end="45:50">

        <for pos:start="43:9" pos:end="45:50">for <control pos:start="43:13" pos:end="43:46">(<init pos:start="43:14" pos:end="43:19"><expr pos:start="43:14" pos:end="43:18"><name pos:start="43:14" pos:end="43:14">i</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr>;</init> <condition pos:start="43:21" pos:end="43:41"><expr pos:start="43:21" pos:end="43:40"><name pos:start="43:21" pos:end="43:21">i</name> <operator pos:start="43:23" pos:end="43:23">&lt;</operator> <name pos:start="43:25" pos:end="43:40">nb_input_streams</name></expr>;</condition> <incr pos:start="43:43" pos:end="43:45"><expr pos:start="43:43" pos:end="43:45"><name pos:start="43:43" pos:end="43:43">i</name><operator pos:start="43:44" pos:end="43:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="45:13" pos:end="45:50"><block_content pos:start="45:13" pos:end="45:50">

            <expr_stmt pos:start="45:13" pos:end="45:50"><expr pos:start="45:13" pos:end="45:49"><name pos:start="45:13" pos:end="45:28"><name pos:start="45:13" pos:end="45:25">input_streams</name><index pos:start="45:26" pos:end="45:28">[<expr pos:start="45:27" pos:end="45:27"><name pos:start="45:27" pos:end="45:27">i</name></expr>]</index></name><operator pos:start="45:29" pos:end="45:29">.</operator><name pos:start="45:30" pos:end="45:34">start</name> <operator pos:start="45:36" pos:end="45:36">=</operator> <call pos:start="45:38" pos:end="45:49"><name pos:start="45:38" pos:end="45:47">av_gettime</name><argument_list pos:start="45:48" pos:end="45:49">()</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:28">/* output stream init */</comment>

    <for pos:start="51:5" pos:end="67:5">for<control pos:start="51:8" pos:end="51:34">(<init pos:start="51:9" pos:end="51:12"><expr pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:9">i</name><operator pos:start="51:10" pos:end="51:10">=</operator><literal type="number" pos:start="51:11" pos:end="51:11">0</literal></expr>;</init><condition pos:start="51:13" pos:end="51:30"><expr pos:start="51:13" pos:end="51:29"><name pos:start="51:13" pos:end="51:13">i</name><operator pos:start="51:14" pos:end="51:14">&lt;</operator><name pos:start="51:15" pos:end="51:29">nb_output_files</name></expr>;</condition><incr pos:start="51:31" pos:end="51:33"><expr pos:start="51:31" pos:end="51:33"><name pos:start="51:31" pos:end="51:31">i</name><operator pos:start="51:32" pos:end="51:33">++</operator></expr></incr>)</control> <block pos:start="51:36" pos:end="67:5">{<block_content pos:start="53:9" pos:end="65:9">

        <expr_stmt pos:start="53:9" pos:end="53:33"><expr pos:start="53:9" pos:end="53:32"><name pos:start="53:9" pos:end="53:10">os</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <name pos:start="53:14" pos:end="53:28"><name pos:start="53:14" pos:end="53:25">output_files</name><index pos:start="53:26" pos:end="53:28">[<expr pos:start="53:27" pos:end="53:27"><name pos:start="53:27" pos:end="53:27">i</name></expr>]</index></name><operator pos:start="53:29" pos:end="53:29">.</operator><name pos:start="53:30" pos:end="53:32">ctx</name></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="65:9"><if pos:start="55:9" pos:end="65:9">if <condition pos:start="55:12" pos:end="55:71">(<expr pos:start="55:13" pos:end="55:70"><operator pos:start="55:13" pos:end="55:13">!</operator><name pos:start="55:14" pos:end="55:27"><name pos:start="55:14" pos:end="55:15">os</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:27">nb_streams</name></name> <operator pos:start="55:29" pos:end="55:30">&amp;&amp;</operator> <operator pos:start="55:32" pos:end="55:32">!</operator><operator pos:start="55:33" pos:end="55:33">(</operator><name pos:start="55:34" pos:end="55:51"><name pos:start="55:34" pos:end="55:35">os</name><operator pos:start="55:36" pos:end="55:37">-&gt;</operator><name pos:start="55:38" pos:end="55:44">oformat</name><operator pos:start="55:45" pos:end="55:46">-&gt;</operator><name pos:start="55:47" pos:end="55:51">flags</name></name> <operator pos:start="55:53" pos:end="55:53">&amp;</operator> <name pos:start="55:55" pos:end="55:69">AVFMT_NOSTREAMS</name><operator pos:start="55:70" pos:end="55:70">)</operator></expr>)</condition> <block pos:start="55:73" pos:end="65:9">{<block_content pos:start="57:13" pos:end="63:22">

            <expr_stmt pos:start="57:13" pos:end="57:51"><expr pos:start="57:13" pos:end="57:50"><call pos:start="57:13" pos:end="57:50"><name pos:start="57:13" pos:end="57:26">av_dump_format</name><argument_list pos:start="57:27" pos:end="57:50">(<argument pos:start="57:28" pos:end="57:29"><expr pos:start="57:28" pos:end="57:29"><name pos:start="57:28" pos:end="57:29">os</name></expr></argument>, <argument pos:start="57:32" pos:end="57:32"><expr pos:start="57:32" pos:end="57:32"><name pos:start="57:32" pos:end="57:32">i</name></expr></argument>, <argument pos:start="57:35" pos:end="57:46"><expr pos:start="57:35" pos:end="57:46"><name pos:start="57:35" pos:end="57:46"><name pos:start="57:35" pos:end="57:36">os</name><operator pos:start="57:37" pos:end="57:38">-&gt;</operator><name pos:start="57:39" pos:end="57:46">filename</name></name></expr></argument>, <argument pos:start="57:49" pos:end="57:49"><expr pos:start="57:49" pos:end="57:49"><literal type="number" pos:start="57:49" pos:end="57:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:80"><expr pos:start="59:13" pos:end="59:79"><call pos:start="59:13" pos:end="59:79"><name pos:start="59:13" pos:end="59:19">fprintf</name><argument_list pos:start="59:20" pos:end="59:79">(<argument pos:start="59:21" pos:end="59:26"><expr pos:start="59:21" pos:end="59:26"><name pos:start="59:21" pos:end="59:26">stderr</name></expr></argument>, <argument pos:start="59:29" pos:end="59:75"><expr pos:start="59:29" pos:end="59:75"><literal type="string" pos:start="59:29" pos:end="59:75">"Output file #%d does not contain any stream\n"</literal></expr></argument>, <argument pos:start="59:78" pos:end="59:78"><expr pos:start="59:78" pos:end="59:78"><name pos:start="59:78" pos:end="59:78">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:34"><expr pos:start="61:13" pos:end="61:33"><name pos:start="61:13" pos:end="61:15">ret</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <call pos:start="61:19" pos:end="61:33"><name pos:start="61:19" pos:end="61:25">AVERROR</name><argument_list pos:start="61:26" pos:end="61:33">(<argument pos:start="61:27" pos:end="61:32"><expr pos:start="61:27" pos:end="61:32"><name pos:start="61:27" pos:end="61:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="63:13" pos:end="63:22">goto <name pos:start="63:18" pos:end="63:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="71:5" pos:end="71:74">/* for each output stream, we compute the right encoding parameters */</comment>

    <for pos:start="73:5" pos:end="509:5">for <control pos:start="73:9" pos:end="73:43">(<init pos:start="73:10" pos:end="73:15"><expr pos:start="73:10" pos:end="73:14"><name pos:start="73:10" pos:end="73:10">i</name> <operator pos:start="73:12" pos:end="73:12">=</operator> <literal type="number" pos:start="73:14" pos:end="73:14">0</literal></expr>;</init> <condition pos:start="73:17" pos:end="73:38"><expr pos:start="73:17" pos:end="73:37"><name pos:start="73:17" pos:end="73:17">i</name> <operator pos:start="73:19" pos:end="73:19">&lt;</operator> <name pos:start="73:21" pos:end="73:37">nb_output_streams</name></expr>;</condition> <incr pos:start="73:40" pos:end="73:42"><expr pos:start="73:40" pos:end="73:42"><name pos:start="73:40" pos:end="73:40">i</name><operator pos:start="73:41" pos:end="73:42">++</operator></expr></incr>)</control> <block pos:start="73:45" pos:end="509:5">{<block_content pos:start="75:9" pos:end="507:9">

        <expr_stmt pos:start="75:9" pos:end="75:33"><expr pos:start="75:9" pos:end="75:32"><name pos:start="75:9" pos:end="75:11">ost</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <operator pos:start="75:15" pos:end="75:15">&amp;</operator><name pos:start="75:16" pos:end="75:32"><name pos:start="75:16" pos:end="75:29">output_streams</name><index pos:start="75:30" pos:end="75:32">[<expr pos:start="75:31" pos:end="75:31"><name pos:start="75:31" pos:end="75:31">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:47"><expr pos:start="77:9" pos:end="77:46"><name pos:start="77:9" pos:end="77:10">os</name> <operator pos:start="77:12" pos:end="77:12">=</operator> <name pos:start="77:14" pos:end="77:42"><name pos:start="77:14" pos:end="77:25">output_files</name><index pos:start="77:26" pos:end="77:42">[<expr pos:start="77:27" pos:end="77:41"><name pos:start="77:27" pos:end="77:41"><name pos:start="77:27" pos:end="77:29">ost</name><operator pos:start="77:30" pos:end="77:31">-&gt;</operator><name pos:start="77:32" pos:end="77:41">file_index</name></name></expr>]</index></name><operator pos:start="77:43" pos:end="77:43">.</operator><name pos:start="77:44" pos:end="77:46">ctx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:48"><expr pos:start="79:9" pos:end="79:47"><name pos:start="79:9" pos:end="79:11">ist</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <operator pos:start="79:15" pos:end="79:15">&amp;</operator><name pos:start="79:16" pos:end="79:47"><name pos:start="79:16" pos:end="79:28">input_streams</name><index pos:start="79:29" pos:end="79:47">[<expr pos:start="79:30" pos:end="79:46"><name pos:start="79:30" pos:end="79:46"><name pos:start="79:30" pos:end="79:32">ost</name><operator pos:start="79:33" pos:end="79:34">-&gt;</operator><name pos:start="79:35" pos:end="79:46">source_index</name></name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:31"><expr pos:start="83:9" pos:end="83:30"><name pos:start="83:9" pos:end="83:13">codec</name> <operator pos:start="83:15" pos:end="83:15">=</operator> <name pos:start="83:17" pos:end="83:30"><name pos:start="83:17" pos:end="83:19">ost</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:23">st</name><operator pos:start="83:24" pos:end="83:25">-&gt;</operator><name pos:start="83:26" pos:end="83:30">codec</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:32"><expr pos:start="85:9" pos:end="85:31"><name pos:start="85:9" pos:end="85:14">icodec</name> <operator pos:start="85:16" pos:end="85:16">=</operator> <name pos:start="85:18" pos:end="85:31"><name pos:start="85:18" pos:end="85:20">ist</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:24">st</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:31">codec</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:52"><expr pos:start="89:9" pos:end="89:51"><name pos:start="89:9" pos:end="89:28"><name pos:start="89:9" pos:end="89:11">ost</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:15">st</name><operator pos:start="89:16" pos:end="89:17">-&gt;</operator><name pos:start="89:18" pos:end="89:28">disposition</name></name> <operator pos:start="89:30" pos:end="89:30">=</operator> <name pos:start="89:32" pos:end="89:51"><name pos:start="89:32" pos:end="89:34">ist</name><operator pos:start="89:35" pos:end="89:36">-&gt;</operator><name pos:start="89:37" pos:end="89:38">st</name><operator pos:start="89:39" pos:end="89:40">-&gt;</operator><name pos:start="89:41" pos:end="89:51">disposition</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:64"><expr pos:start="91:9" pos:end="91:63"><name pos:start="91:9" pos:end="91:34"><name pos:start="91:9" pos:end="91:13">codec</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:34">bits_per_raw_sample</name></name><operator pos:start="91:35" pos:end="91:35">=</operator> <name pos:start="91:37" pos:end="91:63"><name pos:start="91:37" pos:end="91:42">icodec</name><operator pos:start="91:43" pos:end="91:44">-&gt;</operator><name pos:start="91:45" pos:end="91:63">bits_per_raw_sample</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:71"><expr pos:start="93:9" pos:end="93:70"><name pos:start="93:9" pos:end="93:37"><name pos:start="93:9" pos:end="93:13">codec</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:37">chroma_sample_location</name></name> <operator pos:start="93:39" pos:end="93:39">=</operator> <name pos:start="93:41" pos:end="93:70"><name pos:start="93:41" pos:end="93:46">icodec</name><operator pos:start="93:47" pos:end="93:48">-&gt;</operator><name pos:start="93:49" pos:end="93:70">chroma_sample_location</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="97:9" pos:end="497:9"><if pos:start="97:9" pos:end="267:9">if <condition pos:start="97:12" pos:end="97:33">(<expr pos:start="97:13" pos:end="97:32"><name pos:start="97:13" pos:end="97:32"><name pos:start="97:13" pos:end="97:15">ost</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:19">st</name><operator pos:start="97:20" pos:end="97:21">-&gt;</operator><name pos:start="97:22" pos:end="97:32">stream_copy</name></name></expr>)</condition> <block pos:start="97:35" pos:end="267:9">{<block_content pos:start="99:13" pos:end="265:13">

            <decl_stmt pos:start="99:13" pos:end="99:98"><decl pos:start="99:13" pos:end="99:97"><type pos:start="99:13" pos:end="99:20"><name pos:start="99:13" pos:end="99:20">uint64_t</name></type> <name pos:start="99:22" pos:end="99:31">extra_size</name> <init pos:start="99:33" pos:end="99:97">= <expr pos:start="99:35" pos:end="99:97"><operator pos:start="99:35" pos:end="99:35">(</operator><name pos:start="99:36" pos:end="99:43">uint64_t</name><operator pos:start="99:44" pos:end="99:44">)</operator><name pos:start="99:45" pos:end="99:66"><name pos:start="99:45" pos:end="99:50">icodec</name><operator pos:start="99:51" pos:end="99:52">-&gt;</operator><name pos:start="99:53" pos:end="99:66">extradata_size</name></name> <operator pos:start="99:68" pos:end="99:68">+</operator> <name pos:start="99:70" pos:end="99:97">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="103:13" pos:end="109:13"><if pos:start="103:13" pos:end="109:13">if <condition pos:start="103:16" pos:end="103:37">(<expr pos:start="103:17" pos:end="103:36"><name pos:start="103:17" pos:end="103:26">extra_size</name> <operator pos:start="103:28" pos:end="103:28">&gt;</operator> <name pos:start="103:30" pos:end="103:36">INT_MAX</name></expr>)</condition> <block pos:start="103:39" pos:end="109:13">{<block_content pos:start="105:17" pos:end="107:26">

                <expr_stmt pos:start="105:17" pos:end="105:38"><expr pos:start="105:17" pos:end="105:37"><name pos:start="105:17" pos:end="105:19">ret</name> <operator pos:start="105:21" pos:end="105:21">=</operator> <call pos:start="105:23" pos:end="105:37"><name pos:start="105:23" pos:end="105:29">AVERROR</name><argument_list pos:start="105:30" pos:end="105:37">(<argument pos:start="105:31" pos:end="105:36"><expr pos:start="105:31" pos:end="105:36"><name pos:start="105:31" pos:end="105:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="107:17" pos:end="107:26">goto <name pos:start="107:22" pos:end="107:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="113:13" pos:end="113:73">/* if stream_copy is selected, no need to decode or encode */</comment>

            <expr_stmt pos:start="115:13" pos:end="115:47"><expr pos:start="115:13" pos:end="115:46"><name pos:start="115:13" pos:end="115:27"><name pos:start="115:13" pos:end="115:17">codec</name><operator pos:start="115:18" pos:end="115:19">-&gt;</operator><name pos:start="115:20" pos:end="115:27">codec_id</name></name> <operator pos:start="115:29" pos:end="115:29">=</operator> <name pos:start="115:31" pos:end="115:46"><name pos:start="115:31" pos:end="115:36">icodec</name><operator pos:start="115:37" pos:end="115:38">-&gt;</operator><name pos:start="115:39" pos:end="115:46">codec_id</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:51"><expr pos:start="117:13" pos:end="117:50"><name pos:start="117:13" pos:end="117:29"><name pos:start="117:13" pos:end="117:17">codec</name><operator pos:start="117:18" pos:end="117:19">-&gt;</operator><name pos:start="117:20" pos:end="117:29">codec_type</name></name> <operator pos:start="117:31" pos:end="117:31">=</operator> <name pos:start="117:33" pos:end="117:50"><name pos:start="117:33" pos:end="117:38">icodec</name><operator pos:start="117:39" pos:end="117:40">-&gt;</operator><name pos:start="117:41" pos:end="117:50">codec_type</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="121:13" pos:end="131:13"><if pos:start="121:13" pos:end="131:13">if<condition pos:start="121:15" pos:end="121:33">(<expr pos:start="121:16" pos:end="121:32"><operator pos:start="121:16" pos:end="121:16">!</operator><name pos:start="121:17" pos:end="121:32"><name pos:start="121:17" pos:end="121:21">codec</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:32">codec_tag</name></name></expr>)</condition><block pos:start="121:34" pos:end="131:13">{<block_content pos:start="123:17" pos:end="129:57">

                <if_stmt pos:start="123:17" pos:end="129:57"><if pos:start="123:17" pos:end="129:57">if<condition pos:start="123:19" pos:end="127:86">(   <expr pos:start="123:23" pos:end="127:85"><operator pos:start="123:23" pos:end="123:23">!</operator><name pos:start="123:24" pos:end="123:45"><name pos:start="123:24" pos:end="123:25">os</name><operator pos:start="123:26" pos:end="123:27">-&gt;</operator><name pos:start="123:28" pos:end="123:34">oformat</name><operator pos:start="123:35" pos:end="123:36">-&gt;</operator><name pos:start="123:37" pos:end="123:45">codec_tag</name></name>

                   <operator pos:start="125:20" pos:end="125:21">||</operator> <call pos:start="125:23" pos:end="125:81"><name pos:start="125:23" pos:end="125:37">av_codec_get_id</name> <argument_list pos:start="125:39" pos:end="125:81">(<argument pos:start="125:40" pos:end="125:61"><expr pos:start="125:40" pos:end="125:61"><name pos:start="125:40" pos:end="125:61"><name pos:start="125:40" pos:end="125:41">os</name><operator pos:start="125:42" pos:end="125:43">-&gt;</operator><name pos:start="125:44" pos:end="125:50">oformat</name><operator pos:start="125:51" pos:end="125:52">-&gt;</operator><name pos:start="125:53" pos:end="125:61">codec_tag</name></name></expr></argument>, <argument pos:start="125:64" pos:end="125:80"><expr pos:start="125:64" pos:end="125:80"><name pos:start="125:64" pos:end="125:80"><name pos:start="125:64" pos:end="125:69">icodec</name><operator pos:start="125:70" pos:end="125:71">-&gt;</operator><name pos:start="125:72" pos:end="125:80">codec_tag</name></name></expr></argument>)</argument_list></call> <operator pos:start="125:83" pos:end="125:84">==</operator> <name pos:start="125:86" pos:end="125:100"><name pos:start="125:86" pos:end="125:90">codec</name><operator pos:start="125:91" pos:end="125:92">-&gt;</operator><name pos:start="125:93" pos:end="125:100">codec_id</name></name>

                   <operator pos:start="127:20" pos:end="127:21">||</operator> <call pos:start="127:23" pos:end="127:80"><name pos:start="127:23" pos:end="127:38">av_codec_get_tag</name><argument_list pos:start="127:39" pos:end="127:80">(<argument pos:start="127:40" pos:end="127:61"><expr pos:start="127:40" pos:end="127:61"><name pos:start="127:40" pos:end="127:61"><name pos:start="127:40" pos:end="127:41">os</name><operator pos:start="127:42" pos:end="127:43">-&gt;</operator><name pos:start="127:44" pos:end="127:50">oformat</name><operator pos:start="127:51" pos:end="127:52">-&gt;</operator><name pos:start="127:53" pos:end="127:61">codec_tag</name></name></expr></argument>, <argument pos:start="127:64" pos:end="127:79"><expr pos:start="127:64" pos:end="127:79"><name pos:start="127:64" pos:end="127:79"><name pos:start="127:64" pos:end="127:69">icodec</name><operator pos:start="127:70" pos:end="127:71">-&gt;</operator><name pos:start="127:72" pos:end="127:79">codec_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="127:82" pos:end="127:83">&lt;=</operator> <literal type="number" pos:start="127:85" pos:end="127:85">0</literal></expr>)</condition><block type="pseudo" pos:start="129:21" pos:end="129:57"><block_content pos:start="129:21" pos:end="129:57">

                    <expr_stmt pos:start="129:21" pos:end="129:57"><expr pos:start="129:21" pos:end="129:56"><name pos:start="129:21" pos:end="129:36"><name pos:start="129:21" pos:end="129:25">codec</name><operator pos:start="129:26" pos:end="129:27">-&gt;</operator><name pos:start="129:28" pos:end="129:36">codec_tag</name></name> <operator pos:start="129:38" pos:end="129:38">=</operator> <name pos:start="129:40" pos:end="129:56"><name pos:start="129:40" pos:end="129:45">icodec</name><operator pos:start="129:46" pos:end="129:47">-&gt;</operator><name pos:start="129:48" pos:end="129:56">codec_tag</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="135:13" pos:end="135:47"><expr pos:start="135:13" pos:end="135:46"><name pos:start="135:13" pos:end="135:27"><name pos:start="135:13" pos:end="135:17">codec</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:27">bit_rate</name></name> <operator pos:start="135:29" pos:end="135:29">=</operator> <name pos:start="135:31" pos:end="135:46"><name pos:start="135:31" pos:end="135:36">icodec</name><operator pos:start="135:37" pos:end="135:38">-&gt;</operator><name pos:start="135:39" pos:end="135:46">bit_rate</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:56"><expr pos:start="137:13" pos:end="137:55"><name pos:start="137:13" pos:end="137:30"><name pos:start="137:13" pos:end="137:17">codec</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:30">rc_max_rate</name></name>    <operator pos:start="137:35" pos:end="137:35">=</operator> <name pos:start="137:37" pos:end="137:55"><name pos:start="137:37" pos:end="137:42">icodec</name><operator pos:start="137:43" pos:end="137:44">-&gt;</operator><name pos:start="137:45" pos:end="137:55">rc_max_rate</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:59"><expr pos:start="139:13" pos:end="139:58"><name pos:start="139:13" pos:end="139:33"><name pos:start="139:13" pos:end="139:17">codec</name><operator pos:start="139:18" pos:end="139:19">-&gt;</operator><name pos:start="139:20" pos:end="139:33">rc_buffer_size</name></name> <operator pos:start="139:35" pos:end="139:35">=</operator> <name pos:start="139:37" pos:end="139:58"><name pos:start="139:37" pos:end="139:42">icodec</name><operator pos:start="139:43" pos:end="139:44">-&gt;</operator><name pos:start="139:45" pos:end="139:58">rc_buffer_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:53"><expr pos:start="141:13" pos:end="141:52"><name pos:start="141:13" pos:end="141:28"><name pos:start="141:13" pos:end="141:17">codec</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:28">extradata</name></name><operator pos:start="141:29" pos:end="141:29">=</operator> <call pos:start="141:31" pos:end="141:52"><name pos:start="141:31" pos:end="141:40">av_mallocz</name><argument_list pos:start="141:41" pos:end="141:52">(<argument pos:start="141:42" pos:end="141:51"><expr pos:start="141:42" pos:end="141:51"><name pos:start="141:42" pos:end="141:51">extra_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="143:13" pos:end="149:13"><if pos:start="143:13" pos:end="149:13">if <condition pos:start="143:16" pos:end="143:34">(<expr pos:start="143:17" pos:end="143:33"><operator pos:start="143:17" pos:end="143:17">!</operator><name pos:start="143:18" pos:end="143:33"><name pos:start="143:18" pos:end="143:22">codec</name><operator pos:start="143:23" pos:end="143:24">-&gt;</operator><name pos:start="143:25" pos:end="143:33">extradata</name></name></expr>)</condition> <block pos:start="143:36" pos:end="149:13">{<block_content pos:start="145:17" pos:end="147:26">

                <expr_stmt pos:start="145:17" pos:end="145:38"><expr pos:start="145:17" pos:end="145:37"><name pos:start="145:17" pos:end="145:19">ret</name> <operator pos:start="145:21" pos:end="145:21">=</operator> <call pos:start="145:23" pos:end="145:37"><name pos:start="145:23" pos:end="145:29">AVERROR</name><argument_list pos:start="145:30" pos:end="145:37">(<argument pos:start="145:31" pos:end="145:36"><expr pos:start="145:31" pos:end="145:36"><name pos:start="145:31" pos:end="145:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="147:17" pos:end="147:26">goto <name pos:start="147:22" pos:end="147:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:80"><expr pos:start="151:13" pos:end="151:79"><call pos:start="151:13" pos:end="151:79"><name pos:start="151:13" pos:end="151:18">memcpy</name><argument_list pos:start="151:19" pos:end="151:79">(<argument pos:start="151:20" pos:end="151:35"><expr pos:start="151:20" pos:end="151:35"><name pos:start="151:20" pos:end="151:35"><name pos:start="151:20" pos:end="151:24">codec</name><operator pos:start="151:25" pos:end="151:26">-&gt;</operator><name pos:start="151:27" pos:end="151:35">extradata</name></name></expr></argument>, <argument pos:start="151:38" pos:end="151:54"><expr pos:start="151:38" pos:end="151:54"><name pos:start="151:38" pos:end="151:54"><name pos:start="151:38" pos:end="151:43">icodec</name><operator pos:start="151:44" pos:end="151:45">-&gt;</operator><name pos:start="151:46" pos:end="151:54">extradata</name></name></expr></argument>, <argument pos:start="151:57" pos:end="151:78"><expr pos:start="151:57" pos:end="151:78"><name pos:start="151:57" pos:end="151:78"><name pos:start="151:57" pos:end="151:62">icodec</name><operator pos:start="151:63" pos:end="151:64">-&gt;</operator><name pos:start="151:65" pos:end="151:78">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:58"><expr pos:start="153:13" pos:end="153:57"><name pos:start="153:13" pos:end="153:33"><name pos:start="153:13" pos:end="153:17">codec</name><operator pos:start="153:18" pos:end="153:19">-&gt;</operator><name pos:start="153:20" pos:end="153:33">extradata_size</name></name><operator pos:start="153:34" pos:end="153:34">=</operator> <name pos:start="153:36" pos:end="153:57"><name pos:start="153:36" pos:end="153:41">icodec</name><operator pos:start="153:42" pos:end="153:43">-&gt;</operator><name pos:start="153:44" pos:end="153:57">extradata_size</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="157:13" pos:end="157:50"><expr pos:start="157:13" pos:end="157:49"><name pos:start="157:13" pos:end="157:28"><name pos:start="157:13" pos:end="157:17">codec</name><operator pos:start="157:18" pos:end="157:19">-&gt;</operator><name pos:start="157:20" pos:end="157:28">time_base</name></name> <operator pos:start="157:30" pos:end="157:30">=</operator> <name pos:start="157:32" pos:end="157:49"><name pos:start="157:32" pos:end="157:34">ist</name><operator pos:start="157:35" pos:end="157:36">-&gt;</operator><name pos:start="157:37" pos:end="157:38">st</name><operator pos:start="157:39" pos:end="157:40">-&gt;</operator><name pos:start="157:41" pos:end="157:49">time_base</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="159:13" pos:end="181:13"><if pos:start="159:13" pos:end="171:13">if<condition pos:start="159:15" pos:end="159:49">(<expr pos:start="159:16" pos:end="159:48"><operator pos:start="159:16" pos:end="159:16">!</operator><call pos:start="159:17" pos:end="159:48"><name pos:start="159:17" pos:end="159:22">strcmp</name><argument_list pos:start="159:23" pos:end="159:48">(<argument pos:start="159:24" pos:end="159:40"><expr pos:start="159:24" pos:end="159:40"><name pos:start="159:24" pos:end="159:40"><name pos:start="159:24" pos:end="159:25">os</name><operator pos:start="159:26" pos:end="159:27">-&gt;</operator><name pos:start="159:28" pos:end="159:34">oformat</name><operator pos:start="159:35" pos:end="159:36">-&gt;</operator><name pos:start="159:37" pos:end="159:40">name</name></name></expr></argument>, <argument pos:start="159:43" pos:end="159:47"><expr pos:start="159:43" pos:end="159:47"><literal type="string" pos:start="159:43" pos:end="159:47">"avi"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="159:51" pos:end="171:13">{<block_content pos:start="161:17" pos:end="169:17">

                <if_stmt pos:start="161:17" pos:end="169:17"><if pos:start="161:17" pos:end="169:17">if<condition pos:start="161:19" pos:end="161:152">(<expr pos:start="161:20" pos:end="161:151"><operator pos:start="161:20" pos:end="161:20">!</operator><name pos:start="161:21" pos:end="161:27">copy_tb</name> <operator pos:start="161:29" pos:end="161:30">&amp;&amp;</operator> <call pos:start="161:32" pos:end="161:56"><name pos:start="161:32" pos:end="161:37">av_q2d</name><argument_list pos:start="161:38" pos:end="161:56">(<argument pos:start="161:39" pos:end="161:55"><expr pos:start="161:39" pos:end="161:55"><name pos:start="161:39" pos:end="161:55"><name pos:start="161:39" pos:end="161:44">icodec</name><operator pos:start="161:45" pos:end="161:46">-&gt;</operator><name pos:start="161:47" pos:end="161:55">time_base</name></name></expr></argument>)</argument_list></call><operator pos:start="161:57" pos:end="161:57">*</operator><name pos:start="161:58" pos:end="161:80"><name pos:start="161:58" pos:end="161:63">icodec</name><operator pos:start="161:64" pos:end="161:65">-&gt;</operator><name pos:start="161:66" pos:end="161:80">ticks_per_frame</name></name> <operator pos:start="161:82" pos:end="161:82">&gt;</operator> <literal type="number" pos:start="161:84" pos:end="161:84">2</literal><operator pos:start="161:85" pos:end="161:85">*</operator><call pos:start="161:86" pos:end="161:111"><name pos:start="161:86" pos:end="161:91">av_q2d</name><argument_list pos:start="161:92" pos:end="161:111">(<argument pos:start="161:93" pos:end="161:110"><expr pos:start="161:93" pos:end="161:110"><name pos:start="161:93" pos:end="161:110"><name pos:start="161:93" pos:end="161:95">ist</name><operator pos:start="161:96" pos:end="161:97">-&gt;</operator><name pos:start="161:98" pos:end="161:99">st</name><operator pos:start="161:100" pos:end="161:101">-&gt;</operator><name pos:start="161:102" pos:end="161:110">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="161:113" pos:end="161:114">&amp;&amp;</operator> <call pos:start="161:116" pos:end="161:141"><name pos:start="161:116" pos:end="161:121">av_q2d</name><argument_list pos:start="161:122" pos:end="161:141">(<argument pos:start="161:123" pos:end="161:140"><expr pos:start="161:123" pos:end="161:140"><name pos:start="161:123" pos:end="161:140"><name pos:start="161:123" pos:end="161:125">ist</name><operator pos:start="161:126" pos:end="161:127">-&gt;</operator><name pos:start="161:128" pos:end="161:129">st</name><operator pos:start="161:130" pos:end="161:131">-&gt;</operator><name pos:start="161:132" pos:end="161:140">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="161:143" pos:end="161:143">&lt;</operator> <literal type="number" pos:start="161:145" pos:end="161:147">1.0</literal><operator pos:start="161:148" pos:end="161:148">/</operator><literal type="number" pos:start="161:149" pos:end="161:151">500</literal></expr>)</condition><block pos:start="161:153" pos:end="169:17">{<block_content pos:start="163:21" pos:end="167:46">

                    <expr_stmt pos:start="163:21" pos:end="163:57"><expr pos:start="163:21" pos:end="163:56"><name pos:start="163:21" pos:end="163:36"><name pos:start="163:21" pos:end="163:25">codec</name><operator pos:start="163:26" pos:end="163:27">-&gt;</operator><name pos:start="163:28" pos:end="163:36">time_base</name></name> <operator pos:start="163:38" pos:end="163:38">=</operator> <name pos:start="163:40" pos:end="163:56"><name pos:start="163:40" pos:end="163:45">icodec</name><operator pos:start="163:46" pos:end="163:47">-&gt;</operator><name pos:start="163:48" pos:end="163:56">time_base</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="165:21" pos:end="165:68"><expr pos:start="165:21" pos:end="165:67"><name pos:start="165:21" pos:end="165:40"><name pos:start="165:21" pos:end="165:25">codec</name><operator pos:start="165:26" pos:end="165:27">-&gt;</operator><name pos:start="165:28" pos:end="165:36">time_base</name><operator pos:start="165:37" pos:end="165:37">.</operator><name pos:start="165:38" pos:end="165:40">num</name></name> <operator pos:start="165:42" pos:end="165:43">*=</operator> <name pos:start="165:45" pos:end="165:67"><name pos:start="165:45" pos:end="165:50">icodec</name><operator pos:start="165:51" pos:end="165:52">-&gt;</operator><name pos:start="165:53" pos:end="165:67">ticks_per_frame</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="167:21" pos:end="167:46"><expr pos:start="167:21" pos:end="167:45"><name pos:start="167:21" pos:end="167:40"><name pos:start="167:21" pos:end="167:25">codec</name><operator pos:start="167:26" pos:end="167:27">-&gt;</operator><name pos:start="167:28" pos:end="167:36">time_base</name><operator pos:start="167:37" pos:end="167:37">.</operator><name pos:start="167:38" pos:end="167:40">den</name></name> <operator pos:start="167:42" pos:end="167:43">*=</operator> <literal type="number" pos:start="167:45" pos:end="167:45">2</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="171:15" pos:end="181:13">else if<condition pos:start="171:22" pos:end="171:65">(<expr pos:start="171:23" pos:end="171:64"><operator pos:start="171:23" pos:end="171:23">!</operator><operator pos:start="171:24" pos:end="171:24">(</operator><name pos:start="171:25" pos:end="171:42"><name pos:start="171:25" pos:end="171:26">os</name><operator pos:start="171:27" pos:end="171:28">-&gt;</operator><name pos:start="171:29" pos:end="171:35">oformat</name><operator pos:start="171:36" pos:end="171:37">-&gt;</operator><name pos:start="171:38" pos:end="171:42">flags</name></name> <operator pos:start="171:44" pos:end="171:44">&amp;</operator> <name pos:start="171:46" pos:end="171:63">AVFMT_VARIABLE_FPS</name><operator pos:start="171:64" pos:end="171:64">)</operator></expr>)</condition> <block pos:start="171:67" pos:end="181:13">{<block_content pos:start="173:17" pos:end="179:17">

                <if_stmt pos:start="173:17" pos:end="179:17"><if pos:start="173:17" pos:end="179:17">if<condition pos:start="173:19" pos:end="173:150">(<expr pos:start="173:20" pos:end="173:149"><operator pos:start="173:20" pos:end="173:20">!</operator><name pos:start="173:21" pos:end="173:27">copy_tb</name> <operator pos:start="173:29" pos:end="173:30">&amp;&amp;</operator> <call pos:start="173:32" pos:end="173:56"><name pos:start="173:32" pos:end="173:37">av_q2d</name><argument_list pos:start="173:38" pos:end="173:56">(<argument pos:start="173:39" pos:end="173:55"><expr pos:start="173:39" pos:end="173:55"><name pos:start="173:39" pos:end="173:55"><name pos:start="173:39" pos:end="173:44">icodec</name><operator pos:start="173:45" pos:end="173:46">-&gt;</operator><name pos:start="173:47" pos:end="173:55">time_base</name></name></expr></argument>)</argument_list></call><operator pos:start="173:57" pos:end="173:57">*</operator><name pos:start="173:58" pos:end="173:80"><name pos:start="173:58" pos:end="173:63">icodec</name><operator pos:start="173:64" pos:end="173:65">-&gt;</operator><name pos:start="173:66" pos:end="173:80">ticks_per_frame</name></name> <operator pos:start="173:82" pos:end="173:82">&gt;</operator> <call pos:start="173:84" pos:end="173:109"><name pos:start="173:84" pos:end="173:89">av_q2d</name><argument_list pos:start="173:90" pos:end="173:109">(<argument pos:start="173:91" pos:end="173:108"><expr pos:start="173:91" pos:end="173:108"><name pos:start="173:91" pos:end="173:108"><name pos:start="173:91" pos:end="173:93">ist</name><operator pos:start="173:94" pos:end="173:95">-&gt;</operator><name pos:start="173:96" pos:end="173:97">st</name><operator pos:start="173:98" pos:end="173:99">-&gt;</operator><name pos:start="173:100" pos:end="173:108">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="173:111" pos:end="173:112">&amp;&amp;</operator> <call pos:start="173:114" pos:end="173:139"><name pos:start="173:114" pos:end="173:119">av_q2d</name><argument_list pos:start="173:120" pos:end="173:139">(<argument pos:start="173:121" pos:end="173:138"><expr pos:start="173:121" pos:end="173:138"><name pos:start="173:121" pos:end="173:138"><name pos:start="173:121" pos:end="173:123">ist</name><operator pos:start="173:124" pos:end="173:125">-&gt;</operator><name pos:start="173:126" pos:end="173:127">st</name><operator pos:start="173:128" pos:end="173:129">-&gt;</operator><name pos:start="173:130" pos:end="173:138">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="173:141" pos:end="173:141">&lt;</operator> <literal type="number" pos:start="173:143" pos:end="173:145">1.0</literal><operator pos:start="173:146" pos:end="173:146">/</operator><literal type="number" pos:start="173:147" pos:end="173:149">500</literal></expr>)</condition><block pos:start="173:151" pos:end="179:17">{<block_content pos:start="175:21" pos:end="177:68">

                    <expr_stmt pos:start="175:21" pos:end="175:57"><expr pos:start="175:21" pos:end="175:56"><name pos:start="175:21" pos:end="175:36"><name pos:start="175:21" pos:end="175:25">codec</name><operator pos:start="175:26" pos:end="175:27">-&gt;</operator><name pos:start="175:28" pos:end="175:36">time_base</name></name> <operator pos:start="175:38" pos:end="175:38">=</operator> <name pos:start="175:40" pos:end="175:56"><name pos:start="175:40" pos:end="175:45">icodec</name><operator pos:start="175:46" pos:end="175:47">-&gt;</operator><name pos:start="175:48" pos:end="175:56">time_base</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="177:21" pos:end="177:68"><expr pos:start="177:21" pos:end="177:67"><name pos:start="177:21" pos:end="177:40"><name pos:start="177:21" pos:end="177:25">codec</name><operator pos:start="177:26" pos:end="177:27">-&gt;</operator><name pos:start="177:28" pos:end="177:36">time_base</name><operator pos:start="177:37" pos:end="177:37">.</operator><name pos:start="177:38" pos:end="177:40">num</name></name> <operator pos:start="177:42" pos:end="177:43">*=</operator> <name pos:start="177:45" pos:end="177:67"><name pos:start="177:45" pos:end="177:50">icodec</name><operator pos:start="177:51" pos:end="177:52">-&gt;</operator><name pos:start="177:53" pos:end="177:67">ticks_per_frame</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="183:13" pos:end="185:77"><expr pos:start="183:13" pos:end="185:76"><call pos:start="183:13" pos:end="185:76"><name pos:start="183:13" pos:end="183:21">av_reduce</name><argument_list pos:start="183:22" pos:end="185:76">(<argument pos:start="183:23" pos:end="183:43"><expr pos:start="183:23" pos:end="183:43"><operator pos:start="183:23" pos:end="183:23">&amp;</operator><name pos:start="183:24" pos:end="183:43"><name pos:start="183:24" pos:end="183:28">codec</name><operator pos:start="183:29" pos:end="183:30">-&gt;</operator><name pos:start="183:31" pos:end="183:39">time_base</name><operator pos:start="183:40" pos:end="183:40">.</operator><name pos:start="183:41" pos:end="183:43">num</name></name></expr></argument>, <argument pos:start="183:46" pos:end="183:66"><expr pos:start="183:46" pos:end="183:66"><operator pos:start="183:46" pos:end="183:46">&amp;</operator><name pos:start="183:47" pos:end="183:66"><name pos:start="183:47" pos:end="183:51">codec</name><operator pos:start="183:52" pos:end="183:53">-&gt;</operator><name pos:start="183:54" pos:end="183:62">time_base</name><operator pos:start="183:63" pos:end="183:63">.</operator><name pos:start="183:64" pos:end="183:66">den</name></name></expr></argument>,

                        <argument pos:start="185:25" pos:end="185:44"><expr pos:start="185:25" pos:end="185:44"><name pos:start="185:25" pos:end="185:44"><name pos:start="185:25" pos:end="185:29">codec</name><operator pos:start="185:30" pos:end="185:31">-&gt;</operator><name pos:start="185:32" pos:end="185:40">time_base</name><operator pos:start="185:41" pos:end="185:41">.</operator><name pos:start="185:42" pos:end="185:44">num</name></name></expr></argument>, <argument pos:start="185:47" pos:end="185:66"><expr pos:start="185:47" pos:end="185:66"><name pos:start="185:47" pos:end="185:66"><name pos:start="185:47" pos:end="185:51">codec</name><operator pos:start="185:52" pos:end="185:53">-&gt;</operator><name pos:start="185:54" pos:end="185:62">time_base</name><operator pos:start="185:63" pos:end="185:63">.</operator><name pos:start="185:64" pos:end="185:66">den</name></name></expr></argument>, <argument pos:start="185:69" pos:end="185:75"><expr pos:start="185:69" pos:end="185:75"><name pos:start="185:69" pos:end="185:75">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <switch pos:start="189:13" pos:end="265:13">switch<condition pos:start="189:19" pos:end="189:37">(<expr pos:start="189:20" pos:end="189:36"><name pos:start="189:20" pos:end="189:36"><name pos:start="189:20" pos:end="189:24">codec</name><operator pos:start="189:25" pos:end="189:26">-&gt;</operator><name pos:start="189:27" pos:end="189:36">codec_type</name></name></expr>)</condition> <block pos:start="189:39" pos:end="265:13">{<block_content pos:start="191:13" pos:end="263:24">

            <case pos:start="191:13" pos:end="191:36">case <expr pos:start="191:18" pos:end="191:35"><name pos:start="191:18" pos:end="191:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                <if_stmt pos:start="193:17" pos:end="199:17"><if pos:start="193:17" pos:end="199:17">if<condition pos:start="193:19" pos:end="193:39">(<expr pos:start="193:20" pos:end="193:38"><name pos:start="193:20" pos:end="193:31">audio_volume</name> <operator pos:start="193:33" pos:end="193:34">!=</operator> <literal type="number" pos:start="193:36" pos:end="193:38">256</literal></expr>)</condition> <block pos:start="193:41" pos:end="199:17">{<block_content pos:start="195:21" pos:end="197:36">

                    <expr_stmt pos:start="195:21" pos:end="195:104"><expr pos:start="195:21" pos:end="195:103"><call pos:start="195:21" pos:end="195:103"><name pos:start="195:21" pos:end="195:27">fprintf</name><argument_list pos:start="195:28" pos:end="195:103">(<argument pos:start="195:29" pos:end="195:34"><expr pos:start="195:29" pos:end="195:34"><name pos:start="195:29" pos:end="195:34">stderr</name></expr></argument>,<argument pos:start="195:36" pos:end="195:102"><expr pos:start="195:36" pos:end="195:102"><literal type="string" pos:start="195:36" pos:end="195:102">"-acodec copy and -vol are incompatible (frames are not decoded)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="197:21" pos:end="197:36"><expr pos:start="197:21" pos:end="197:35"><call pos:start="197:21" pos:end="197:35"><name pos:start="197:21" pos:end="197:32">exit_program</name><argument_list pos:start="197:33" pos:end="197:35">(<argument pos:start="197:34" pos:end="197:34"><expr pos:start="197:34" pos:end="197:34"><literal type="number" pos:start="197:34" pos:end="197:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="201:17" pos:end="201:63"><expr pos:start="201:17" pos:end="201:62"><name pos:start="201:17" pos:end="201:37"><name pos:start="201:17" pos:end="201:21">codec</name><operator pos:start="201:22" pos:end="201:23">-&gt;</operator><name pos:start="201:24" pos:end="201:37">channel_layout</name></name> <operator pos:start="201:39" pos:end="201:39">=</operator> <name pos:start="201:41" pos:end="201:62"><name pos:start="201:41" pos:end="201:46">icodec</name><operator pos:start="201:47" pos:end="201:48">-&gt;</operator><name pos:start="201:49" pos:end="201:62">channel_layout</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="203:17" pos:end="203:57"><expr pos:start="203:17" pos:end="203:56"><name pos:start="203:17" pos:end="203:34"><name pos:start="203:17" pos:end="203:21">codec</name><operator pos:start="203:22" pos:end="203:23">-&gt;</operator><name pos:start="203:24" pos:end="203:34">sample_rate</name></name> <operator pos:start="203:36" pos:end="203:36">=</operator> <name pos:start="203:38" pos:end="203:56"><name pos:start="203:38" pos:end="203:43">icodec</name><operator pos:start="203:44" pos:end="203:45">-&gt;</operator><name pos:start="203:46" pos:end="203:56">sample_rate</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="205:17" pos:end="205:51"><expr pos:start="205:17" pos:end="205:50"><name pos:start="205:17" pos:end="205:31"><name pos:start="205:17" pos:end="205:21">codec</name><operator pos:start="205:22" pos:end="205:23">-&gt;</operator><name pos:start="205:24" pos:end="205:31">channels</name></name> <operator pos:start="205:33" pos:end="205:33">=</operator> <name pos:start="205:35" pos:end="205:50"><name pos:start="205:35" pos:end="205:40">icodec</name><operator pos:start="205:41" pos:end="205:42">-&gt;</operator><name pos:start="205:43" pos:end="205:50">channels</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="207:17" pos:end="207:55"><expr pos:start="207:17" pos:end="207:54"><name pos:start="207:17" pos:end="207:33"><name pos:start="207:17" pos:end="207:21">codec</name><operator pos:start="207:22" pos:end="207:23">-&gt;</operator><name pos:start="207:24" pos:end="207:33">frame_size</name></name> <operator pos:start="207:35" pos:end="207:35">=</operator> <name pos:start="207:37" pos:end="207:54"><name pos:start="207:37" pos:end="207:42">icodec</name><operator pos:start="207:43" pos:end="207:44">-&gt;</operator><name pos:start="207:45" pos:end="207:54">frame_size</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="209:17" pos:end="209:71"><expr pos:start="209:17" pos:end="209:70"><name pos:start="209:17" pos:end="209:41"><name pos:start="209:17" pos:end="209:21">codec</name><operator pos:start="209:22" pos:end="209:23">-&gt;</operator><name pos:start="209:24" pos:end="209:41">audio_service_type</name></name> <operator pos:start="209:43" pos:end="209:43">=</operator> <name pos:start="209:45" pos:end="209:70"><name pos:start="209:45" pos:end="209:50">icodec</name><operator pos:start="209:51" pos:end="209:52">-&gt;</operator><name pos:start="209:53" pos:end="209:70">audio_service_type</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="211:17" pos:end="211:56"><expr pos:start="211:17" pos:end="211:55"><name pos:start="211:17" pos:end="211:34"><name pos:start="211:17" pos:end="211:21">codec</name><operator pos:start="211:22" pos:end="211:23">-&gt;</operator><name pos:start="211:24" pos:end="211:34">block_align</name></name><operator pos:start="211:35" pos:end="211:35">=</operator> <name pos:start="211:37" pos:end="211:55"><name pos:start="211:37" pos:end="211:42">icodec</name><operator pos:start="211:43" pos:end="211:44">-&gt;</operator><name pos:start="211:45" pos:end="211:55">block_align</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="213:17" pos:end="215:42"><if pos:start="213:17" pos:end="215:42">if<condition pos:start="213:19" pos:end="213:78">(<expr pos:start="213:20" pos:end="213:77"><name pos:start="213:20" pos:end="213:37"><name pos:start="213:20" pos:end="213:24">codec</name><operator pos:start="213:25" pos:end="213:26">-&gt;</operator><name pos:start="213:27" pos:end="213:37">block_align</name></name> <operator pos:start="213:39" pos:end="213:40">==</operator> <literal type="number" pos:start="213:42" pos:end="213:42">1</literal> <operator pos:start="213:44" pos:end="213:45">&amp;&amp;</operator> <name pos:start="213:47" pos:end="213:61"><name pos:start="213:47" pos:end="213:51">codec</name><operator pos:start="213:52" pos:end="213:53">-&gt;</operator><name pos:start="213:54" pos:end="213:61">codec_id</name></name> <operator pos:start="213:63" pos:end="213:64">==</operator> <name pos:start="213:66" pos:end="213:77">CODEC_ID_MP3</name></expr>)</condition><block type="pseudo" pos:start="215:21" pos:end="215:42"><block_content pos:start="215:21" pos:end="215:42">

                    <expr_stmt pos:start="215:21" pos:end="215:42"><expr pos:start="215:21" pos:end="215:41"><name pos:start="215:21" pos:end="215:38"><name pos:start="215:21" pos:end="215:25">codec</name><operator pos:start="215:26" pos:end="215:27">-&gt;</operator><name pos:start="215:28" pos:end="215:38">block_align</name></name><operator pos:start="215:39" pos:end="215:39">=</operator> <literal type="number" pos:start="215:41" pos:end="215:41">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="217:17" pos:end="219:42"><if pos:start="217:17" pos:end="219:42">if<condition pos:start="217:19" pos:end="217:51">(<expr pos:start="217:20" pos:end="217:50"><name pos:start="217:20" pos:end="217:34"><name pos:start="217:20" pos:end="217:24">codec</name><operator pos:start="217:25" pos:end="217:26">-&gt;</operator><name pos:start="217:27" pos:end="217:34">codec_id</name></name> <operator pos:start="217:36" pos:end="217:37">==</operator> <name pos:start="217:39" pos:end="217:50">CODEC_ID_AC3</name></expr>)</condition><block type="pseudo" pos:start="219:21" pos:end="219:42"><block_content pos:start="219:21" pos:end="219:42">

                    <expr_stmt pos:start="219:21" pos:end="219:42"><expr pos:start="219:21" pos:end="219:41"><name pos:start="219:21" pos:end="219:38"><name pos:start="219:21" pos:end="219:25">codec</name><operator pos:start="219:26" pos:end="219:27">-&gt;</operator><name pos:start="219:28" pos:end="219:38">block_align</name></name><operator pos:start="219:39" pos:end="219:39">=</operator> <literal type="number" pos:start="219:41" pos:end="219:41">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <break pos:start="221:17" pos:end="221:22">break;</break>

            <case pos:start="223:13" pos:end="223:36">case <expr pos:start="223:18" pos:end="223:35"><name pos:start="223:18" pos:end="223:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                <expr_stmt pos:start="225:17" pos:end="225:49"><expr pos:start="225:17" pos:end="225:48"><name pos:start="225:17" pos:end="225:30"><name pos:start="225:17" pos:end="225:21">codec</name><operator pos:start="225:22" pos:end="225:23">-&gt;</operator><name pos:start="225:24" pos:end="225:30">pix_fmt</name></name> <operator pos:start="225:32" pos:end="225:32">=</operator> <name pos:start="225:34" pos:end="225:48"><name pos:start="225:34" pos:end="225:39">icodec</name><operator pos:start="225:40" pos:end="225:41">-&gt;</operator><name pos:start="225:42" pos:end="225:48">pix_fmt</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="227:17" pos:end="227:45"><expr pos:start="227:17" pos:end="227:44"><name pos:start="227:17" pos:end="227:28"><name pos:start="227:17" pos:end="227:21">codec</name><operator pos:start="227:22" pos:end="227:23">-&gt;</operator><name pos:start="227:24" pos:end="227:28">width</name></name> <operator pos:start="227:30" pos:end="227:30">=</operator> <name pos:start="227:32" pos:end="227:44"><name pos:start="227:32" pos:end="227:37">icodec</name><operator pos:start="227:38" pos:end="227:39">-&gt;</operator><name pos:start="227:40" pos:end="227:44">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="229:17" pos:end="229:47"><expr pos:start="229:17" pos:end="229:46"><name pos:start="229:17" pos:end="229:29"><name pos:start="229:17" pos:end="229:21">codec</name><operator pos:start="229:22" pos:end="229:23">-&gt;</operator><name pos:start="229:24" pos:end="229:29">height</name></name> <operator pos:start="229:31" pos:end="229:31">=</operator> <name pos:start="229:33" pos:end="229:46"><name pos:start="229:33" pos:end="229:38">icodec</name><operator pos:start="229:39" pos:end="229:40">-&gt;</operator><name pos:start="229:41" pos:end="229:46">height</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="231:17" pos:end="231:59"><expr pos:start="231:17" pos:end="231:58"><name pos:start="231:17" pos:end="231:35"><name pos:start="231:17" pos:end="231:21">codec</name><operator pos:start="231:22" pos:end="231:23">-&gt;</operator><name pos:start="231:24" pos:end="231:35">has_b_frames</name></name> <operator pos:start="231:37" pos:end="231:37">=</operator> <name pos:start="231:39" pos:end="231:58"><name pos:start="231:39" pos:end="231:44">icodec</name><operator pos:start="231:45" pos:end="231:46">-&gt;</operator><name pos:start="231:47" pos:end="231:58">has_b_frames</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="233:17" pos:end="245:17"><if pos:start="233:17" pos:end="245:17">if <condition pos:start="233:20" pos:end="233:52">(<expr pos:start="233:21" pos:end="233:51"><operator pos:start="233:21" pos:end="233:21">!</operator><name pos:start="233:22" pos:end="233:51"><name pos:start="233:22" pos:end="233:26">codec</name><operator pos:start="233:27" pos:end="233:28">-&gt;</operator><name pos:start="233:29" pos:end="233:47">sample_aspect_ratio</name><operator pos:start="233:48" pos:end="233:48">.</operator><name pos:start="233:49" pos:end="233:51">num</name></name></expr>)</condition> <block pos:start="233:54" pos:end="245:17">{<block_content pos:start="235:21" pos:end="243:81">

                    <expr_stmt pos:start="235:21" pos:end="243:81"><expr pos:start="235:21" pos:end="243:80"><name pos:start="235:21" pos:end="235:46"><name pos:start="235:21" pos:end="235:25">codec</name><operator pos:start="235:26" pos:end="235:27">-&gt;</operator><name pos:start="235:28" pos:end="235:46">sample_aspect_ratio</name></name> <operator pos:start="235:48" pos:end="235:48">=</operator>

                    <name pos:start="237:21" pos:end="237:48"><name pos:start="237:21" pos:end="237:23">ost</name><operator pos:start="237:24" pos:end="237:25">-&gt;</operator><name pos:start="237:26" pos:end="237:27">st</name><operator pos:start="237:28" pos:end="237:29">-&gt;</operator><name pos:start="237:30" pos:end="237:48">sample_aspect_ratio</name></name> <operator pos:start="237:50" pos:end="237:50">=</operator>

                        <ternary pos:start="239:25" pos:end="243:80"><condition pos:start="239:25" pos:end="239:58"><expr pos:start="239:25" pos:end="239:56"><name pos:start="239:25" pos:end="239:56"><name pos:start="239:25" pos:end="239:27">ist</name><operator pos:start="239:28" pos:end="239:29">-&gt;</operator><name pos:start="239:30" pos:end="239:31">st</name><operator pos:start="239:32" pos:end="239:33">-&gt;</operator><name pos:start="239:34" pos:end="239:52">sample_aspect_ratio</name><operator pos:start="239:53" pos:end="239:53">.</operator><name pos:start="239:54" pos:end="239:56">num</name></name></expr> ?</condition><then pos:start="239:60" pos:end="239:87"> <expr pos:start="239:60" pos:end="239:87"><name pos:start="239:60" pos:end="239:87"><name pos:start="239:60" pos:end="239:62">ist</name><operator pos:start="239:63" pos:end="239:64">-&gt;</operator><name pos:start="239:65" pos:end="239:66">st</name><operator pos:start="239:67" pos:end="239:68">-&gt;</operator><name pos:start="239:69" pos:end="239:87">sample_aspect_ratio</name></name></expr> </then><else pos:start="239:89" pos:end="243:80">:

                        <expr pos:start="241:25" pos:end="243:80"><ternary pos:start="241:25" pos:end="243:80"><condition pos:start="241:25" pos:end="241:65"><expr pos:start="241:25" pos:end="241:63"><name pos:start="241:25" pos:end="241:63"><name pos:start="241:25" pos:end="241:27">ist</name><operator pos:start="241:28" pos:end="241:29">-&gt;</operator><name pos:start="241:30" pos:end="241:31">st</name><operator pos:start="241:32" pos:end="241:33">-&gt;</operator><name pos:start="241:34" pos:end="241:38">codec</name><operator pos:start="241:39" pos:end="241:40">-&gt;</operator><name pos:start="241:41" pos:end="241:59">sample_aspect_ratio</name><operator pos:start="241:60" pos:end="241:60">.</operator><name pos:start="241:61" pos:end="241:63">num</name></name></expr> ?</condition><then pos:start="243:25" pos:end="243:59">

                        <expr pos:start="243:25" pos:end="243:59"><name pos:start="243:25" pos:end="243:59"><name pos:start="243:25" pos:end="243:27">ist</name><operator pos:start="243:28" pos:end="243:29">-&gt;</operator><name pos:start="243:30" pos:end="243:31">st</name><operator pos:start="243:32" pos:end="243:33">-&gt;</operator><name pos:start="243:34" pos:end="243:38">codec</name><operator pos:start="243:39" pos:end="243:40">-&gt;</operator><name pos:start="243:41" pos:end="243:59">sample_aspect_ratio</name></name></expr> </then><else pos:start="243:61" pos:end="243:80">: <expr pos:start="243:63" pos:end="243:80"><operator pos:start="243:63" pos:end="243:63">(</operator><name pos:start="243:64" pos:end="243:73">AVRational</name><operator pos:start="243:74" pos:end="243:74">)</operator><block pos:start="243:75" pos:end="243:80">{<expr pos:start="243:76" pos:end="243:76"><literal type="number" pos:start="243:76" pos:end="243:76">0</literal></expr>, <expr pos:start="243:79" pos:end="243:79"><literal type="number" pos:start="243:79" pos:end="243:79">1</literal></expr>}</block></expr></else></ternary></expr></else></ternary></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="247:17" pos:end="247:22">break;</break>

            <case pos:start="249:13" pos:end="249:39">case <expr pos:start="249:18" pos:end="249:38"><name pos:start="249:18" pos:end="249:38">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

                <expr_stmt pos:start="251:17" pos:end="251:45"><expr pos:start="251:17" pos:end="251:44"><name pos:start="251:17" pos:end="251:28"><name pos:start="251:17" pos:end="251:21">codec</name><operator pos:start="251:22" pos:end="251:23">-&gt;</operator><name pos:start="251:24" pos:end="251:28">width</name></name> <operator pos:start="251:30" pos:end="251:30">=</operator> <name pos:start="251:32" pos:end="251:44"><name pos:start="251:32" pos:end="251:37">icodec</name><operator pos:start="251:38" pos:end="251:39">-&gt;</operator><name pos:start="251:40" pos:end="251:44">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="253:17" pos:end="253:47"><expr pos:start="253:17" pos:end="253:46"><name pos:start="253:17" pos:end="253:29"><name pos:start="253:17" pos:end="253:21">codec</name><operator pos:start="253:22" pos:end="253:23">-&gt;</operator><name pos:start="253:24" pos:end="253:29">height</name></name> <operator pos:start="253:31" pos:end="253:31">=</operator> <name pos:start="253:33" pos:end="253:46"><name pos:start="253:33" pos:end="253:38">icodec</name><operator pos:start="253:39" pos:end="253:40">-&gt;</operator><name pos:start="253:41" pos:end="253:46">height</name></name></expr>;</expr_stmt>

                <break pos:start="255:17" pos:end="255:22">break;</break>

            <case pos:start="257:13" pos:end="257:35">case <expr pos:start="257:18" pos:end="257:34"><name pos:start="257:18" pos:end="257:34">AVMEDIA_TYPE_DATA</name></expr>:</case>

                <break pos:start="259:17" pos:end="259:22">break;</break>

            <default pos:start="261:13" pos:end="261:20">default:</default>

                <expr_stmt pos:start="263:17" pos:end="263:24"><expr pos:start="263:17" pos:end="263:23"><call pos:start="263:17" pos:end="263:23"><name pos:start="263:17" pos:end="263:21">abort</name><argument_list pos:start="263:22" pos:end="263:23">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="267:11" pos:end="497:9">else <block pos:start="267:16" pos:end="497:9">{<block_content pos:start="269:13" pos:end="495:13">

            <if_stmt pos:start="269:13" pos:end="271:74"><if pos:start="269:13" pos:end="271:74">if <condition pos:start="269:16" pos:end="269:26">(<expr pos:start="269:17" pos:end="269:25"><operator pos:start="269:17" pos:end="269:17">!</operator><name pos:start="269:18" pos:end="269:25"><name pos:start="269:18" pos:end="269:20">ost</name><operator pos:start="269:21" pos:end="269:22">-&gt;</operator><name pos:start="269:23" pos:end="269:25">enc</name></name></expr>)</condition><block type="pseudo" pos:start="271:17" pos:end="271:74"><block_content pos:start="271:17" pos:end="271:74">

                <expr_stmt pos:start="271:17" pos:end="271:74"><expr pos:start="271:17" pos:end="271:73"><name pos:start="271:17" pos:end="271:24"><name pos:start="271:17" pos:end="271:19">ost</name><operator pos:start="271:20" pos:end="271:21">-&gt;</operator><name pos:start="271:22" pos:end="271:24">enc</name></name> <operator pos:start="271:26" pos:end="271:26">=</operator> <call pos:start="271:28" pos:end="271:73"><name pos:start="271:28" pos:end="271:47">avcodec_find_encoder</name><argument_list pos:start="271:48" pos:end="271:73">(<argument pos:start="271:49" pos:end="271:72"><expr pos:start="271:49" pos:end="271:72"><name pos:start="271:49" pos:end="271:72"><name pos:start="271:49" pos:end="271:51">ost</name><operator pos:start="271:52" pos:end="271:53">-&gt;</operator><name pos:start="271:54" pos:end="271:55">st</name><operator pos:start="271:56" pos:end="271:57">-&gt;</operator><name pos:start="271:58" pos:end="271:62">codec</name><operator pos:start="271:63" pos:end="271:64">-&gt;</operator><name pos:start="271:65" pos:end="271:72">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <switch pos:start="273:13" pos:end="443:13">switch<condition pos:start="273:19" pos:end="273:37">(<expr pos:start="273:20" pos:end="273:36"><name pos:start="273:20" pos:end="273:36"><name pos:start="273:20" pos:end="273:24">codec</name><operator pos:start="273:25" pos:end="273:26">-&gt;</operator><name pos:start="273:27" pos:end="273:36">codec_type</name></name></expr>)</condition> <block pos:start="273:39" pos:end="443:13">{<block_content pos:start="275:13" pos:end="441:22">

            <case pos:start="275:13" pos:end="275:36">case <expr pos:start="275:18" pos:end="275:35"><name pos:start="275:18" pos:end="275:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                <expr_stmt pos:start="277:17" pos:end="277:47"><expr pos:start="277:17" pos:end="277:46"><name pos:start="277:17" pos:end="277:25"><name pos:start="277:17" pos:end="277:19">ost</name><operator pos:start="277:20" pos:end="277:21">-&gt;</operator><name pos:start="277:22" pos:end="277:25">fifo</name></name><operator pos:start="277:26" pos:end="277:26">=</operator> <call pos:start="277:28" pos:end="277:46"><name pos:start="277:28" pos:end="277:40">av_fifo_alloc</name><argument_list pos:start="277:41" pos:end="277:46">(<argument pos:start="277:42" pos:end="277:45"><expr pos:start="277:42" pos:end="277:45"><literal type="number" pos:start="277:42" pos:end="277:45">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="279:17" pos:end="285:17"><if pos:start="279:17" pos:end="285:17">if <condition pos:start="279:20" pos:end="279:31">(<expr pos:start="279:21" pos:end="279:30"><operator pos:start="279:21" pos:end="279:21">!</operator><name pos:start="279:22" pos:end="279:30"><name pos:start="279:22" pos:end="279:24">ost</name><operator pos:start="279:25" pos:end="279:26">-&gt;</operator><name pos:start="279:27" pos:end="279:30">fifo</name></name></expr>)</condition> <block pos:start="279:33" pos:end="285:17">{<block_content pos:start="281:21" pos:end="283:30">

                    <expr_stmt pos:start="281:21" pos:end="281:42"><expr pos:start="281:21" pos:end="281:41"><name pos:start="281:21" pos:end="281:23">ret</name> <operator pos:start="281:25" pos:end="281:25">=</operator> <call pos:start="281:27" pos:end="281:41"><name pos:start="281:27" pos:end="281:33">AVERROR</name><argument_list pos:start="281:34" pos:end="281:41">(<argument pos:start="281:35" pos:end="281:40"><expr pos:start="281:35" pos:end="281:40"><name pos:start="281:35" pos:end="281:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="283:21" pos:end="283:30">goto <name pos:start="283:26" pos:end="283:29">fail</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="287:17" pos:end="287:91"><expr pos:start="287:17" pos:end="287:90"><name pos:start="287:17" pos:end="287:34"><name pos:start="287:17" pos:end="287:19">ost</name><operator pos:start="287:20" pos:end="287:21">-&gt;</operator><name pos:start="287:22" pos:end="287:34">reformat_pair</name></name> <operator pos:start="287:36" pos:end="287:36">=</operator> <call pos:start="287:38" pos:end="287:90"><name pos:start="287:38" pos:end="287:51">MAKE_SFMT_PAIR</name><argument_list pos:start="287:52" pos:end="287:90">(<argument pos:start="287:53" pos:end="287:70"><expr pos:start="287:53" pos:end="287:70"><name pos:start="287:53" pos:end="287:70">AV_SAMPLE_FMT_NONE</name></expr></argument>,<argument pos:start="287:72" pos:end="287:89"><expr pos:start="287:72" pos:end="287:89"><name pos:start="287:72" pos:end="287:89">AV_SAMPLE_FMT_NONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="289:17" pos:end="293:17"><if pos:start="289:17" pos:end="293:17">if <condition pos:start="289:20" pos:end="289:40">(<expr pos:start="289:21" pos:end="289:39"><operator pos:start="289:21" pos:end="289:21">!</operator><name pos:start="289:22" pos:end="289:39"><name pos:start="289:22" pos:end="289:26">codec</name><operator pos:start="289:27" pos:end="289:28">-&gt;</operator><name pos:start="289:29" pos:end="289:39">sample_rate</name></name></expr>)</condition> <block pos:start="289:42" pos:end="293:17">{<block_content pos:start="291:21" pos:end="291:61">

                    <expr_stmt pos:start="291:21" pos:end="291:61"><expr pos:start="291:21" pos:end="291:60"><name pos:start="291:21" pos:end="291:38"><name pos:start="291:21" pos:end="291:25">codec</name><operator pos:start="291:26" pos:end="291:27">-&gt;</operator><name pos:start="291:28" pos:end="291:38">sample_rate</name></name> <operator pos:start="291:40" pos:end="291:40">=</operator> <name pos:start="291:42" pos:end="291:60"><name pos:start="291:42" pos:end="291:47">icodec</name><operator pos:start="291:48" pos:end="291:49">-&gt;</operator><name pos:start="291:50" pos:end="291:60">sample_rate</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="295:17" pos:end="295:54"><expr pos:start="295:17" pos:end="295:53"><call pos:start="295:17" pos:end="295:53"><name pos:start="295:17" pos:end="295:34">choose_sample_rate</name><argument_list pos:start="295:35" pos:end="295:53">(<argument pos:start="295:36" pos:end="295:42"><expr pos:start="295:36" pos:end="295:42"><name pos:start="295:36" pos:end="295:42"><name pos:start="295:36" pos:end="295:38">ost</name><operator pos:start="295:39" pos:end="295:40">-&gt;</operator><name pos:start="295:41" pos:end="295:42">st</name></name></expr></argument>, <argument pos:start="295:45" pos:end="295:52"><expr pos:start="295:45" pos:end="295:52"><name pos:start="295:45" pos:end="295:52"><name pos:start="295:45" pos:end="295:47">ost</name><operator pos:start="295:48" pos:end="295:49">-&gt;</operator><name pos:start="295:50" pos:end="295:52">enc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="297:17" pos:end="297:71"><expr pos:start="297:17" pos:end="297:70"><name pos:start="297:17" pos:end="297:32"><name pos:start="297:17" pos:end="297:21">codec</name><operator pos:start="297:22" pos:end="297:23">-&gt;</operator><name pos:start="297:24" pos:end="297:32">time_base</name></name> <operator pos:start="297:34" pos:end="297:34">=</operator> <operator pos:start="297:36" pos:end="297:36">(</operator><name pos:start="297:37" pos:end="297:46">AVRational</name><operator pos:start="297:47" pos:end="297:47">)</operator><block pos:start="297:48" pos:end="297:70">{<expr pos:start="297:49" pos:end="297:49"><literal type="number" pos:start="297:49" pos:end="297:49">1</literal></expr>, <expr pos:start="297:52" pos:end="297:69"><name pos:start="297:52" pos:end="297:69"><name pos:start="297:52" pos:end="297:56">codec</name><operator pos:start="297:57" pos:end="297:58">-&gt;</operator><name pos:start="297:59" pos:end="297:69">sample_rate</name></name></expr>}</block></expr>;</expr_stmt>

                <if_stmt pos:start="299:17" pos:end="301:59"><if pos:start="299:17" pos:end="301:59">if <condition pos:start="299:20" pos:end="299:60">(<expr pos:start="299:21" pos:end="299:59"><name pos:start="299:21" pos:end="299:37"><name pos:start="299:21" pos:end="299:25">codec</name><operator pos:start="299:26" pos:end="299:27">-&gt;</operator><name pos:start="299:28" pos:end="299:37">sample_fmt</name></name> <operator pos:start="299:39" pos:end="299:40">==</operator> <name pos:start="299:42" pos:end="299:59">AV_SAMPLE_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="301:21" pos:end="301:59"><block_content pos:start="301:21" pos:end="301:59">

                    <expr_stmt pos:start="301:21" pos:end="301:59"><expr pos:start="301:21" pos:end="301:58"><name pos:start="301:21" pos:end="301:37"><name pos:start="301:21" pos:end="301:25">codec</name><operator pos:start="301:26" pos:end="301:27">-&gt;</operator><name pos:start="301:28" pos:end="301:37">sample_fmt</name></name> <operator pos:start="301:39" pos:end="301:39">=</operator> <name pos:start="301:41" pos:end="301:58"><name pos:start="301:41" pos:end="301:46">icodec</name><operator pos:start="301:47" pos:end="301:48">-&gt;</operator><name pos:start="301:49" pos:end="301:58">sample_fmt</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="303:17" pos:end="303:53"><expr pos:start="303:17" pos:end="303:52"><call pos:start="303:17" pos:end="303:52"><name pos:start="303:17" pos:end="303:33">choose_sample_fmt</name><argument_list pos:start="303:34" pos:end="303:52">(<argument pos:start="303:35" pos:end="303:41"><expr pos:start="303:35" pos:end="303:41"><name pos:start="303:35" pos:end="303:41"><name pos:start="303:35" pos:end="303:37">ost</name><operator pos:start="303:38" pos:end="303:39">-&gt;</operator><name pos:start="303:40" pos:end="303:41">st</name></name></expr></argument>, <argument pos:start="303:44" pos:end="303:51"><expr pos:start="303:44" pos:end="303:51"><name pos:start="303:44" pos:end="303:51"><name pos:start="303:44" pos:end="303:46">ost</name><operator pos:start="303:47" pos:end="303:48">-&gt;</operator><name pos:start="303:49" pos:end="303:51">enc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="305:17" pos:end="311:17"><if pos:start="305:17" pos:end="311:17">if <condition pos:start="305:20" pos:end="305:37">(<expr pos:start="305:21" pos:end="305:36"><operator pos:start="305:21" pos:end="305:21">!</operator><name pos:start="305:22" pos:end="305:36"><name pos:start="305:22" pos:end="305:26">codec</name><operator pos:start="305:27" pos:end="305:28">-&gt;</operator><name pos:start="305:29" pos:end="305:36">channels</name></name></expr>)</condition> <block pos:start="305:39" pos:end="311:17">{<block_content pos:start="307:21" pos:end="309:67">

                    <expr_stmt pos:start="307:21" pos:end="307:55"><expr pos:start="307:21" pos:end="307:54"><name pos:start="307:21" pos:end="307:35"><name pos:start="307:21" pos:end="307:25">codec</name><operator pos:start="307:26" pos:end="307:27">-&gt;</operator><name pos:start="307:28" pos:end="307:35">channels</name></name> <operator pos:start="307:37" pos:end="307:37">=</operator> <name pos:start="307:39" pos:end="307:54"><name pos:start="307:39" pos:end="307:44">icodec</name><operator pos:start="307:45" pos:end="307:46">-&gt;</operator><name pos:start="307:47" pos:end="307:54">channels</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="309:21" pos:end="309:67"><expr pos:start="309:21" pos:end="309:66"><name pos:start="309:21" pos:end="309:41"><name pos:start="309:21" pos:end="309:25">codec</name><operator pos:start="309:26" pos:end="309:27">-&gt;</operator><name pos:start="309:28" pos:end="309:41">channel_layout</name></name> <operator pos:start="309:43" pos:end="309:43">=</operator> <name pos:start="309:45" pos:end="309:66"><name pos:start="309:45" pos:end="309:50">icodec</name><operator pos:start="309:51" pos:end="309:52">-&gt;</operator><name pos:start="309:53" pos:end="309:66">channel_layout</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="313:17" pos:end="315:46"><if pos:start="313:17" pos:end="315:46">if <condition pos:start="313:20" pos:end="313:96">(<expr pos:start="313:21" pos:end="313:95"><call pos:start="313:21" pos:end="313:76"><name pos:start="313:21" pos:end="313:53">av_get_channel_layout_nb_channels</name><argument_list pos:start="313:54" pos:end="313:76">(<argument pos:start="313:55" pos:end="313:75"><expr pos:start="313:55" pos:end="313:75"><name pos:start="313:55" pos:end="313:75"><name pos:start="313:55" pos:end="313:59">codec</name><operator pos:start="313:60" pos:end="313:61">-&gt;</operator><name pos:start="313:62" pos:end="313:75">channel_layout</name></name></expr></argument>)</argument_list></call> <operator pos:start="313:78" pos:end="313:79">!=</operator> <name pos:start="313:81" pos:end="313:95"><name pos:start="313:81" pos:end="313:85">codec</name><operator pos:start="313:86" pos:end="313:87">-&gt;</operator><name pos:start="313:88" pos:end="313:95">channels</name></name></expr>)</condition><block type="pseudo" pos:start="315:21" pos:end="315:46"><block_content pos:start="315:21" pos:end="315:46">

                    <expr_stmt pos:start="315:21" pos:end="315:46"><expr pos:start="315:21" pos:end="315:45"><name pos:start="315:21" pos:end="315:41"><name pos:start="315:21" pos:end="315:25">codec</name><operator pos:start="315:26" pos:end="315:27">-&gt;</operator><name pos:start="315:28" pos:end="315:41">channel_layout</name></name> <operator pos:start="315:43" pos:end="315:43">=</operator> <literal type="number" pos:start="315:45" pos:end="315:45">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="317:17" pos:end="317:105"><expr pos:start="317:17" pos:end="317:104"><name pos:start="317:17" pos:end="317:35"><name pos:start="317:17" pos:end="317:19">ost</name><operator pos:start="317:20" pos:end="317:21">-&gt;</operator><name pos:start="317:22" pos:end="317:35">audio_resample</name></name> <operator pos:start="317:37" pos:end="317:37">=</operator> <name pos:start="317:39" pos:end="317:56"><name pos:start="317:39" pos:end="317:43">codec</name><operator pos:start="317:44" pos:end="317:45">-&gt;</operator><name pos:start="317:46" pos:end="317:56">sample_rate</name></name> <operator pos:start="317:58" pos:end="317:59">!=</operator> <name pos:start="317:61" pos:end="317:79"><name pos:start="317:61" pos:end="317:66">icodec</name><operator pos:start="317:67" pos:end="317:68">-&gt;</operator><name pos:start="317:69" pos:end="317:79">sample_rate</name></name> <operator pos:start="317:81" pos:end="317:82">||</operator> <name pos:start="317:84" pos:end="317:100">audio_sync_method</name> <operator pos:start="317:102" pos:end="317:102">&gt;</operator> <literal type="number" pos:start="317:104" pos:end="317:104">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="319:17" pos:end="319:59"><expr pos:start="319:17" pos:end="319:58"><name pos:start="319:17" pos:end="319:40"><name pos:start="319:17" pos:end="319:22">icodec</name><operator pos:start="319:23" pos:end="319:24">-&gt;</operator><name pos:start="319:25" pos:end="319:40">request_channels</name></name> <operator pos:start="319:42" pos:end="319:42">=</operator> <name pos:start="319:44" pos:end="319:58"><name pos:start="319:44" pos:end="319:48">codec</name><operator pos:start="319:49" pos:end="319:50">-&gt;</operator><name pos:start="319:51" pos:end="319:58">channels</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="321:17" pos:end="321:41"><expr pos:start="321:17" pos:end="321:40"><name pos:start="321:17" pos:end="321:36"><name pos:start="321:17" pos:end="321:19">ist</name><operator pos:start="321:20" pos:end="321:21">-&gt;</operator><name pos:start="321:22" pos:end="321:36">decoding_needed</name></name> <operator pos:start="321:38" pos:end="321:38">=</operator> <literal type="number" pos:start="321:40" pos:end="321:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="323:17" pos:end="323:41"><expr pos:start="323:17" pos:end="323:40"><name pos:start="323:17" pos:end="323:36"><name pos:start="323:17" pos:end="323:19">ost</name><operator pos:start="323:20" pos:end="323:21">-&gt;</operator><name pos:start="323:22" pos:end="323:36">encoding_needed</name></name> <operator pos:start="323:38" pos:end="323:38">=</operator> <literal type="number" pos:start="323:40" pos:end="323:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="325:17" pos:end="325:63"><expr pos:start="325:17" pos:end="325:62"><name pos:start="325:17" pos:end="325:40"><name pos:start="325:17" pos:end="325:19">ost</name><operator pos:start="325:20" pos:end="325:21">-&gt;</operator><name pos:start="325:22" pos:end="325:40">resample_sample_fmt</name></name>  <operator pos:start="325:43" pos:end="325:43">=</operator> <name pos:start="325:45" pos:end="325:62"><name pos:start="325:45" pos:end="325:50">icodec</name><operator pos:start="325:51" pos:end="325:52">-&gt;</operator><name pos:start="325:53" pos:end="325:62">sample_fmt</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="327:17" pos:end="327:64"><expr pos:start="327:17" pos:end="327:63"><name pos:start="327:17" pos:end="327:41"><name pos:start="327:17" pos:end="327:19">ost</name><operator pos:start="327:20" pos:end="327:21">-&gt;</operator><name pos:start="327:22" pos:end="327:41">resample_sample_rate</name></name> <operator pos:start="327:43" pos:end="327:43">=</operator> <name pos:start="327:45" pos:end="327:63"><name pos:start="327:45" pos:end="327:50">icodec</name><operator pos:start="327:51" pos:end="327:52">-&gt;</operator><name pos:start="327:53" pos:end="327:63">sample_rate</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="329:17" pos:end="329:61"><expr pos:start="329:17" pos:end="329:60"><name pos:start="329:17" pos:end="329:38"><name pos:start="329:17" pos:end="329:19">ost</name><operator pos:start="329:20" pos:end="329:21">-&gt;</operator><name pos:start="329:22" pos:end="329:38">resample_channels</name></name>    <operator pos:start="329:43" pos:end="329:43">=</operator> <name pos:start="329:45" pos:end="329:60"><name pos:start="329:45" pos:end="329:50">icodec</name><operator pos:start="329:51" pos:end="329:52">-&gt;</operator><name pos:start="329:53" pos:end="329:60">channels</name></name></expr>;</expr_stmt>

                <break pos:start="331:17" pos:end="331:22">break;</break>

            <case pos:start="333:13" pos:end="333:36">case <expr pos:start="333:18" pos:end="333:35"><name pos:start="333:18" pos:end="333:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                <if_stmt pos:start="335:17" pos:end="337:53"><if pos:start="335:17" pos:end="337:53">if <condition pos:start="335:20" pos:end="335:51">(<expr pos:start="335:21" pos:end="335:50"><name pos:start="335:21" pos:end="335:34"><name pos:start="335:21" pos:end="335:25">codec</name><operator pos:start="335:26" pos:end="335:27">-&gt;</operator><name pos:start="335:28" pos:end="335:34">pix_fmt</name></name> <operator pos:start="335:36" pos:end="335:37">==</operator> <name pos:start="335:39" pos:end="335:50">PIX_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="337:21" pos:end="337:53"><block_content pos:start="337:21" pos:end="337:53">

                    <expr_stmt pos:start="337:21" pos:end="337:53"><expr pos:start="337:21" pos:end="337:52"><name pos:start="337:21" pos:end="337:34"><name pos:start="337:21" pos:end="337:25">codec</name><operator pos:start="337:26" pos:end="337:27">-&gt;</operator><name pos:start="337:28" pos:end="337:34">pix_fmt</name></name> <operator pos:start="337:36" pos:end="337:36">=</operator> <name pos:start="337:38" pos:end="337:52"><name pos:start="337:38" pos:end="337:43">icodec</name><operator pos:start="337:44" pos:end="337:45">-&gt;</operator><name pos:start="337:46" pos:end="337:52">pix_fmt</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="339:17" pos:end="339:52"><expr pos:start="339:17" pos:end="339:51"><call pos:start="339:17" pos:end="339:51"><name pos:start="339:17" pos:end="339:32">choose_pixel_fmt</name><argument_list pos:start="339:33" pos:end="339:51">(<argument pos:start="339:34" pos:end="339:40"><expr pos:start="339:34" pos:end="339:40"><name pos:start="339:34" pos:end="339:40"><name pos:start="339:34" pos:end="339:36">ost</name><operator pos:start="339:37" pos:end="339:38">-&gt;</operator><name pos:start="339:39" pos:end="339:40">st</name></name></expr></argument>, <argument pos:start="339:43" pos:end="339:50"><expr pos:start="339:43" pos:end="339:50"><name pos:start="339:43" pos:end="339:50"><name pos:start="339:43" pos:end="339:45">ost</name><operator pos:start="339:46" pos:end="339:47">-&gt;</operator><name pos:start="339:48" pos:end="339:50">enc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="343:17" pos:end="349:17"><if pos:start="343:17" pos:end="349:17">if <condition pos:start="343:20" pos:end="343:60">(<expr pos:start="343:21" pos:end="343:59"><name pos:start="343:21" pos:end="343:43"><name pos:start="343:21" pos:end="343:23">ost</name><operator pos:start="343:24" pos:end="343:25">-&gt;</operator><name pos:start="343:26" pos:end="343:27">st</name><operator pos:start="343:28" pos:end="343:29">-&gt;</operator><name pos:start="343:30" pos:end="343:34">codec</name><operator pos:start="343:35" pos:end="343:36">-&gt;</operator><name pos:start="343:37" pos:end="343:43">pix_fmt</name></name> <operator pos:start="343:45" pos:end="343:46">==</operator> <name pos:start="343:48" pos:end="343:59">PIX_FMT_NONE</name></expr>)</condition> <block pos:start="343:62" pos:end="349:17">{<block_content pos:start="345:21" pos:end="347:36">

                    <expr_stmt pos:start="345:21" pos:end="345:97"><expr pos:start="345:21" pos:end="345:96"><call pos:start="345:21" pos:end="345:96"><name pos:start="345:21" pos:end="345:27">fprintf</name><argument_list pos:start="345:28" pos:end="345:96">(<argument pos:start="345:29" pos:end="345:34"><expr pos:start="345:29" pos:end="345:34"><name pos:start="345:29" pos:end="345:34">stderr</name></expr></argument>, <argument pos:start="345:37" pos:end="345:95"><expr pos:start="345:37" pos:end="345:95"><literal type="string" pos:start="345:37" pos:end="345:95">"Video pixel format is unknown, stream cannot be encoded\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="347:21" pos:end="347:36"><expr pos:start="347:21" pos:end="347:35"><call pos:start="347:21" pos:end="347:35"><name pos:start="347:21" pos:end="347:32">exit_program</name><argument_list pos:start="347:33" pos:end="347:35">(<argument pos:start="347:34" pos:end="347:34"><expr pos:start="347:34" pos:end="347:34"><literal type="number" pos:start="347:34" pos:end="347:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="353:17" pos:end="359:17"><if pos:start="353:17" pos:end="359:17">if <condition pos:start="353:20" pos:end="353:52">(<expr pos:start="353:21" pos:end="353:51"><operator pos:start="353:21" pos:end="353:21">!</operator><name pos:start="353:22" pos:end="353:33"><name pos:start="353:22" pos:end="353:26">codec</name><operator pos:start="353:27" pos:end="353:28">-&gt;</operator><name pos:start="353:29" pos:end="353:33">width</name></name> <operator pos:start="353:35" pos:end="353:36">||</operator> <operator pos:start="353:38" pos:end="353:38">!</operator><name pos:start="353:39" pos:end="353:51"><name pos:start="353:39" pos:end="353:43">codec</name><operator pos:start="353:44" pos:end="353:45">-&gt;</operator><name pos:start="353:46" pos:end="353:51">height</name></name></expr>)</condition> <block pos:start="353:54" pos:end="359:17">{<block_content pos:start="355:21" pos:end="357:51">

                    <expr_stmt pos:start="355:21" pos:end="355:50"><expr pos:start="355:21" pos:end="355:49"><name pos:start="355:21" pos:end="355:32"><name pos:start="355:21" pos:end="355:25">codec</name><operator pos:start="355:26" pos:end="355:27">-&gt;</operator><name pos:start="355:28" pos:end="355:32">width</name></name>  <operator pos:start="355:35" pos:end="355:35">=</operator> <name pos:start="355:37" pos:end="355:49"><name pos:start="355:37" pos:end="355:42">icodec</name><operator pos:start="355:43" pos:end="355:44">-&gt;</operator><name pos:start="355:45" pos:end="355:49">width</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="357:21" pos:end="357:51"><expr pos:start="357:21" pos:end="357:50"><name pos:start="357:21" pos:end="357:33"><name pos:start="357:21" pos:end="357:25">codec</name><operator pos:start="357:26" pos:end="357:27">-&gt;</operator><name pos:start="357:28" pos:end="357:33">height</name></name> <operator pos:start="357:35" pos:end="357:35">=</operator> <name pos:start="357:37" pos:end="357:50"><name pos:start="357:37" pos:end="357:42">icodec</name><operator pos:start="357:43" pos:end="357:44">-&gt;</operator><name pos:start="357:45" pos:end="357:50">height</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="363:17" pos:end="367:72"><expr pos:start="363:17" pos:end="367:71"><name pos:start="363:17" pos:end="363:35"><name pos:start="363:17" pos:end="363:19">ost</name><operator pos:start="363:20" pos:end="363:21">-&gt;</operator><name pos:start="363:22" pos:end="363:35">video_resample</name></name> <operator pos:start="363:37" pos:end="363:37">=</operator> <name pos:start="363:39" pos:end="363:50"><name pos:start="363:39" pos:end="363:43">codec</name><operator pos:start="363:44" pos:end="363:45">-&gt;</operator><name pos:start="363:46" pos:end="363:50">width</name></name>   <operator pos:start="363:54" pos:end="363:55">!=</operator> <name pos:start="363:57" pos:end="363:69"><name pos:start="363:57" pos:end="363:62">icodec</name><operator pos:start="363:63" pos:end="363:64">-&gt;</operator><name pos:start="363:65" pos:end="363:69">width</name></name>  <operator pos:start="363:72" pos:end="363:73">||</operator>

                                      <name pos:start="365:39" pos:end="365:51"><name pos:start="365:39" pos:end="365:43">codec</name><operator pos:start="365:44" pos:end="365:45">-&gt;</operator><name pos:start="365:46" pos:end="365:51">height</name></name>  <operator pos:start="365:54" pos:end="365:55">!=</operator> <name pos:start="365:57" pos:end="365:70"><name pos:start="365:57" pos:end="365:62">icodec</name><operator pos:start="365:63" pos:end="365:64">-&gt;</operator><name pos:start="365:65" pos:end="365:70">height</name></name> <operator pos:start="365:72" pos:end="365:73">||</operator>

                                      <name pos:start="367:39" pos:end="367:52"><name pos:start="367:39" pos:end="367:43">codec</name><operator pos:start="367:44" pos:end="367:45">-&gt;</operator><name pos:start="367:46" pos:end="367:52">pix_fmt</name></name> <operator pos:start="367:54" pos:end="367:55">!=</operator> <name pos:start="367:57" pos:end="367:71"><name pos:start="367:57" pos:end="367:62">icodec</name><operator pos:start="367:63" pos:end="367:64">-&gt;</operator><name pos:start="367:65" pos:end="367:71">pix_fmt</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="369:17" pos:end="373:17"><if pos:start="369:17" pos:end="373:17">if <condition pos:start="369:20" pos:end="369:40">(<expr pos:start="369:21" pos:end="369:39"><name pos:start="369:21" pos:end="369:39"><name pos:start="369:21" pos:end="369:23">ost</name><operator pos:start="369:24" pos:end="369:25">-&gt;</operator><name pos:start="369:26" pos:end="369:39">video_resample</name></name></expr>)</condition> <block pos:start="369:42" pos:end="373:17">{<block_content pos:start="371:21" pos:end="371:74">

                    <expr_stmt pos:start="371:21" pos:end="371:74"><expr pos:start="371:21" pos:end="371:73"><name pos:start="371:21" pos:end="371:46"><name pos:start="371:21" pos:end="371:25">codec</name><operator pos:start="371:26" pos:end="371:27">-&gt;</operator><name pos:start="371:28" pos:end="371:46">bits_per_raw_sample</name></name><operator pos:start="371:47" pos:end="371:47">=</operator> <name pos:start="371:49" pos:end="371:73">frame_bits_per_raw_sample</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="377:17" pos:end="377:54"><expr pos:start="377:17" pos:end="377:53"><name pos:start="377:17" pos:end="377:36"><name pos:start="377:17" pos:end="377:19">ost</name><operator pos:start="377:20" pos:end="377:21">-&gt;</operator><name pos:start="377:22" pos:end="377:36">resample_height</name></name> <operator pos:start="377:38" pos:end="377:38">=</operator> <name pos:start="377:40" pos:end="377:53"><name pos:start="377:40" pos:end="377:45">icodec</name><operator pos:start="377:46" pos:end="377:47">-&gt;</operator><name pos:start="377:48" pos:end="377:53">height</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="379:17" pos:end="379:53"><expr pos:start="379:17" pos:end="379:52"><name pos:start="379:17" pos:end="379:35"><name pos:start="379:17" pos:end="379:19">ost</name><operator pos:start="379:20" pos:end="379:21">-&gt;</operator><name pos:start="379:22" pos:end="379:35">resample_width</name></name>  <operator pos:start="379:38" pos:end="379:38">=</operator> <name pos:start="379:40" pos:end="379:52"><name pos:start="379:40" pos:end="379:45">icodec</name><operator pos:start="379:46" pos:end="379:47">-&gt;</operator><name pos:start="379:48" pos:end="379:52">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="381:17" pos:end="381:55"><expr pos:start="381:17" pos:end="381:54"><name pos:start="381:17" pos:end="381:37"><name pos:start="381:17" pos:end="381:19">ost</name><operator pos:start="381:20" pos:end="381:21">-&gt;</operator><name pos:start="381:22" pos:end="381:37">resample_pix_fmt</name></name><operator pos:start="381:38" pos:end="381:38">=</operator> <name pos:start="381:40" pos:end="381:54"><name pos:start="381:40" pos:end="381:45">icodec</name><operator pos:start="381:46" pos:end="381:47">-&gt;</operator><name pos:start="381:48" pos:end="381:54">pix_fmt</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="383:17" pos:end="383:41"><expr pos:start="383:17" pos:end="383:40"><name pos:start="383:17" pos:end="383:36"><name pos:start="383:17" pos:end="383:19">ost</name><operator pos:start="383:20" pos:end="383:21">-&gt;</operator><name pos:start="383:22" pos:end="383:36">encoding_needed</name></name> <operator pos:start="383:38" pos:end="383:38">=</operator> <literal type="number" pos:start="383:40" pos:end="383:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="385:17" pos:end="385:41"><expr pos:start="385:17" pos:end="385:40"><name pos:start="385:17" pos:end="385:36"><name pos:start="385:17" pos:end="385:19">ist</name><operator pos:start="385:20" pos:end="385:21">-&gt;</operator><name pos:start="385:22" pos:end="385:36">decoding_needed</name></name> <operator pos:start="385:38" pos:end="385:38">=</operator> <literal type="number" pos:start="385:40" pos:end="385:40">1</literal></expr>;</expr_stmt>



                <if_stmt pos:start="389:17" pos:end="391:109"><if pos:start="389:17" pos:end="391:109">if <condition pos:start="389:20" pos:end="389:41">(<expr pos:start="389:21" pos:end="389:40"><operator pos:start="389:21" pos:end="389:21">!</operator><name pos:start="389:22" pos:end="389:40"><name pos:start="389:22" pos:end="389:24">ost</name><operator pos:start="389:25" pos:end="389:26">-&gt;</operator><name pos:start="389:27" pos:end="389:36">frame_rate</name><operator pos:start="389:37" pos:end="389:37">.</operator><name pos:start="389:38" pos:end="389:40">num</name></name></expr>)</condition><block type="pseudo" pos:start="391:21" pos:end="391:109"><block_content pos:start="391:21" pos:end="391:109">

                    <expr_stmt pos:start="391:21" pos:end="391:109"><expr pos:start="391:21" pos:end="391:108"><name pos:start="391:21" pos:end="391:35"><name pos:start="391:21" pos:end="391:23">ost</name><operator pos:start="391:24" pos:end="391:25">-&gt;</operator><name pos:start="391:26" pos:end="391:35">frame_rate</name></name> <operator pos:start="391:37" pos:end="391:37">=</operator> <ternary pos:start="391:39" pos:end="391:108"><condition pos:start="391:39" pos:end="391:65"><expr pos:start="391:39" pos:end="391:63"><name pos:start="391:39" pos:end="391:63"><name pos:start="391:39" pos:end="391:41">ist</name><operator pos:start="391:42" pos:end="391:43">-&gt;</operator><name pos:start="391:44" pos:end="391:45">st</name><operator pos:start="391:46" pos:end="391:47">-&gt;</operator><name pos:start="391:48" pos:end="391:59">r_frame_rate</name><operator pos:start="391:60" pos:end="391:60">.</operator><name pos:start="391:61" pos:end="391:63">num</name></name></expr> ?</condition><then pos:start="391:67" pos:end="391:87"> <expr pos:start="391:67" pos:end="391:87"><name pos:start="391:67" pos:end="391:87"><name pos:start="391:67" pos:end="391:69">ist</name><operator pos:start="391:70" pos:end="391:71">-&gt;</operator><name pos:start="391:72" pos:end="391:73">st</name><operator pos:start="391:74" pos:end="391:75">-&gt;</operator><name pos:start="391:76" pos:end="391:87">r_frame_rate</name></name></expr> </then><else pos:start="391:89" pos:end="391:108">: <expr pos:start="391:91" pos:end="391:108"><operator pos:start="391:91" pos:end="391:91">(</operator><name pos:start="391:92" pos:end="391:101">AVRational</name><operator pos:start="391:102" pos:end="391:102">)</operator><block pos:start="391:103" pos:end="391:108">{<expr pos:start="391:104" pos:end="391:105"><literal type="number" pos:start="391:104" pos:end="391:105">25</literal></expr>,<expr pos:start="391:107" pos:end="391:107"><literal type="number" pos:start="391:107" pos:end="391:107">1</literal></expr>}</block></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="393:17" pos:end="399:17"><if pos:start="393:17" pos:end="399:17">if <condition pos:start="393:20" pos:end="393:77">(<expr pos:start="393:21" pos:end="393:76"><name pos:start="393:21" pos:end="393:28"><name pos:start="393:21" pos:end="393:23">ost</name><operator pos:start="393:24" pos:end="393:25">-&gt;</operator><name pos:start="393:26" pos:end="393:28">enc</name></name> <operator pos:start="393:30" pos:end="393:31">&amp;&amp;</operator> <name pos:start="393:33" pos:end="393:62"><name pos:start="393:33" pos:end="393:35">ost</name><operator pos:start="393:36" pos:end="393:37">-&gt;</operator><name pos:start="393:38" pos:end="393:40">enc</name><operator pos:start="393:41" pos:end="393:42">-&gt;</operator><name pos:start="393:43" pos:end="393:62">supported_framerates</name></name> <operator pos:start="393:64" pos:end="393:65">&amp;&amp;</operator> <operator pos:start="393:67" pos:end="393:67">!</operator><name pos:start="393:68" pos:end="393:76">force_fps</name></expr>)</condition> <block pos:start="393:79" pos:end="399:17">{<block_content pos:start="395:21" pos:end="397:74">

                    <decl_stmt pos:start="395:21" pos:end="395:101"><decl pos:start="395:21" pos:end="395:100"><type pos:start="395:21" pos:end="395:23"><name pos:start="395:21" pos:end="395:23">int</name></type> <name pos:start="395:25" pos:end="395:27">idx</name> <init pos:start="395:29" pos:end="395:100">= <expr pos:start="395:31" pos:end="395:100"><call pos:start="395:31" pos:end="395:100"><name pos:start="395:31" pos:end="395:51">av_find_nearest_q_idx</name><argument_list pos:start="395:52" pos:end="395:100">(<argument pos:start="395:53" pos:end="395:67"><expr pos:start="395:53" pos:end="395:67"><name pos:start="395:53" pos:end="395:67"><name pos:start="395:53" pos:end="395:55">ost</name><operator pos:start="395:56" pos:end="395:57">-&gt;</operator><name pos:start="395:58" pos:end="395:67">frame_rate</name></name></expr></argument>, <argument pos:start="395:70" pos:end="395:99"><expr pos:start="395:70" pos:end="395:99"><name pos:start="395:70" pos:end="395:99"><name pos:start="395:70" pos:end="395:72">ost</name><operator pos:start="395:73" pos:end="395:74">-&gt;</operator><name pos:start="395:75" pos:end="395:77">enc</name><operator pos:start="395:78" pos:end="395:79">-&gt;</operator><name pos:start="395:80" pos:end="395:99">supported_framerates</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="397:21" pos:end="397:74"><expr pos:start="397:21" pos:end="397:73"><name pos:start="397:21" pos:end="397:35"><name pos:start="397:21" pos:end="397:23">ost</name><operator pos:start="397:24" pos:end="397:25">-&gt;</operator><name pos:start="397:26" pos:end="397:35">frame_rate</name></name> <operator pos:start="397:37" pos:end="397:37">=</operator> <name pos:start="397:39" pos:end="397:73"><name pos:start="397:39" pos:end="397:41">ost</name><operator pos:start="397:42" pos:end="397:43">-&gt;</operator><name pos:start="397:44" pos:end="397:46">enc</name><operator pos:start="397:47" pos:end="397:48">-&gt;</operator><name pos:start="397:49" pos:end="397:68">supported_framerates</name><index pos:start="397:69" pos:end="397:73">[<expr pos:start="397:70" pos:end="397:72"><name pos:start="397:70" pos:end="397:72">idx</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="401:17" pos:end="401:90"><expr pos:start="401:17" pos:end="401:89"><name pos:start="401:17" pos:end="401:32"><name pos:start="401:17" pos:end="401:21">codec</name><operator pos:start="401:22" pos:end="401:23">-&gt;</operator><name pos:start="401:24" pos:end="401:32">time_base</name></name> <operator pos:start="401:34" pos:end="401:34">=</operator> <operator pos:start="401:36" pos:end="401:36">(</operator><name pos:start="401:37" pos:end="401:46">AVRational</name><operator pos:start="401:47" pos:end="401:47">)</operator><block pos:start="401:48" pos:end="401:89">{<expr pos:start="401:49" pos:end="401:67"><name pos:start="401:49" pos:end="401:67"><name pos:start="401:49" pos:end="401:51">ost</name><operator pos:start="401:52" pos:end="401:53">-&gt;</operator><name pos:start="401:54" pos:end="401:63">frame_rate</name><operator pos:start="401:64" pos:end="401:64">.</operator><name pos:start="401:65" pos:end="401:67">den</name></name></expr>, <expr pos:start="401:70" pos:end="401:88"><name pos:start="401:70" pos:end="401:88"><name pos:start="401:70" pos:end="401:72">ost</name><operator pos:start="401:73" pos:end="401:74">-&gt;</operator><name pos:start="401:75" pos:end="401:84">frame_rate</name><operator pos:start="401:85" pos:end="401:85">.</operator><name pos:start="401:86" pos:end="401:88">num</name></name></expr>}</block></expr>;</expr_stmt>

                <if_stmt pos:start="403:17" pos:end="416:0"><if pos:start="403:17" pos:end="416:0">if<condition pos:start="403:19" pos:end="405:116">(   <expr pos:start="403:23" pos:end="405:115"><call pos:start="403:23" pos:end="403:46"><name pos:start="403:23" pos:end="403:28">av_q2d</name><argument_list pos:start="403:29" pos:end="403:46">(<argument pos:start="403:30" pos:end="403:45"><expr pos:start="403:30" pos:end="403:45"><name pos:start="403:30" pos:end="403:45"><name pos:start="403:30" pos:end="403:34">codec</name><operator pos:start="403:35" pos:end="403:36">-&gt;</operator><name pos:start="403:37" pos:end="403:45">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="403:48" pos:end="403:48">&lt;</operator> <literal type="number" pos:start="403:50" pos:end="403:54">0.001</literal> <operator pos:start="403:56" pos:end="403:57">&amp;&amp;</operator> <name pos:start="403:59" pos:end="403:75">video_sync_method</name>

                   <operator pos:start="405:20" pos:end="405:21">&amp;&amp;</operator> <operator pos:start="405:23" pos:end="405:23">(</operator><name pos:start="405:24" pos:end="405:40">video_sync_method</name><operator pos:start="405:41" pos:end="405:42">==</operator><literal type="number" pos:start="405:43" pos:end="405:43">1</literal> <operator pos:start="405:45" pos:end="405:46">||</operator> <operator pos:start="405:48" pos:end="405:48">(</operator><name pos:start="405:49" pos:end="405:65">video_sync_method</name><operator pos:start="405:66" pos:end="405:66">&lt;</operator><literal type="number" pos:start="405:67" pos:end="405:67">0</literal> <operator pos:start="405:69" pos:end="405:70">&amp;&amp;</operator> <operator pos:start="405:72" pos:end="405:72">!</operator><operator pos:start="405:73" pos:end="405:73">(</operator><name pos:start="405:74" pos:end="405:91"><name pos:start="405:74" pos:end="405:75">os</name><operator pos:start="405:76" pos:end="405:77">-&gt;</operator><name pos:start="405:78" pos:end="405:84">oformat</name><operator pos:start="405:85" pos:end="405:86">-&gt;</operator><name pos:start="405:87" pos:end="405:91">flags</name></name> <operator pos:start="405:93" pos:end="405:93">&amp;</operator> <name pos:start="405:95" pos:end="405:112">AVFMT_VARIABLE_FPS</name><operator pos:start="405:113" pos:end="405:113">)</operator><operator pos:start="405:114" pos:end="405:114">)</operator><operator pos:start="405:115" pos:end="405:115">)</operator></expr>)</condition><block pos:start="405:117" pos:end="416:0">{<block_content pos:start="407:21" pos:end="409:129">

                    <expr_stmt pos:start="407:21" pos:end="409:129"><expr pos:start="407:21" pos:end="409:128"><call pos:start="407:21" pos:end="409:128"><name pos:start="407:21" pos:end="407:26">av_log</name><argument_list pos:start="407:27" pos:end="409:128">(<argument pos:start="407:28" pos:end="407:29"><expr pos:start="407:28" pos:end="407:29"><name pos:start="407:28" pos:end="407:29">os</name></expr></argument>, <argument pos:start="407:32" pos:end="407:45"><expr pos:start="407:32" pos:end="407:45"><name pos:start="407:32" pos:end="407:45">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="407:48" pos:end="409:127"><expr pos:start="407:48" pos:end="409:127"><literal type="string" pos:start="407:48" pos:end="407:115">"Frame rate very high for a muxer not effciciently supporting it.\n"</literal>

                                               <literal type="string" pos:start="409:48" pos:end="409:127">"Please consider specifiying a lower framerate, a different muxer or -vsync 2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



<cpp:if pos:start="415:1" pos:end="415:19">#<cpp:directive pos:start="415:2" pos:end="415:3">if</cpp:directive> <expr pos:start="415:5" pos:end="415:19"><name pos:start="415:5" pos:end="415:19">CONFIG_AVFILTER</name></expr></cpp:if>

                <if_stmt pos:start="417:17" pos:end="426:0"><if pos:start="417:17" pos:end="426:0">if <condition pos:start="417:20" pos:end="417:54">(<expr pos:start="417:21" pos:end="417:53"><call pos:start="417:21" pos:end="417:53"><name pos:start="417:21" pos:end="417:43">configure_video_filters</name><argument_list pos:start="417:44" pos:end="417:53">(<argument pos:start="417:45" pos:end="417:47"><expr pos:start="417:45" pos:end="417:47"><name pos:start="417:45" pos:end="417:47">ist</name></expr></argument>, <argument pos:start="417:50" pos:end="417:52"><expr pos:start="417:50" pos:end="417:52"><name pos:start="417:50" pos:end="417:52">ost</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="417:56" pos:end="426:0">{<block_content pos:start="419:21" pos:end="421:28">

                    <expr_stmt pos:start="419:21" pos:end="419:64"><expr pos:start="419:21" pos:end="419:63"><call pos:start="419:21" pos:end="419:63"><name pos:start="419:21" pos:end="419:27">fprintf</name><argument_list pos:start="419:28" pos:end="419:63">(<argument pos:start="419:29" pos:end="419:34"><expr pos:start="419:29" pos:end="419:34"><name pos:start="419:29" pos:end="419:34">stderr</name></expr></argument>, <argument pos:start="419:37" pos:end="419:62"><expr pos:start="419:37" pos:end="419:62"><literal type="string" pos:start="419:37" pos:end="419:62">"Error opening filters!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="421:21" pos:end="421:28"><expr pos:start="421:21" pos:end="421:27"><call pos:start="421:21" pos:end="421:27"><name pos:start="421:21" pos:end="421:24">exit</name><argument_list pos:start="421:25" pos:end="421:27">(<argument pos:start="421:26" pos:end="421:26"><expr pos:start="421:26" pos:end="421:26"><literal type="number" pos:start="421:26" pos:end="421:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="425:1" pos:end="425:6">#<cpp:directive pos:start="425:2" pos:end="425:6">endif</cpp:directive></cpp:endif>

                <break pos:start="427:17" pos:end="427:22">break;</break>

            <case pos:start="429:13" pos:end="429:39">case <expr pos:start="429:18" pos:end="429:38"><name pos:start="429:18" pos:end="429:38">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

                <expr_stmt pos:start="431:17" pos:end="431:41"><expr pos:start="431:17" pos:end="431:40"><name pos:start="431:17" pos:end="431:36"><name pos:start="431:17" pos:end="431:19">ost</name><operator pos:start="431:20" pos:end="431:21">-&gt;</operator><name pos:start="431:22" pos:end="431:36">encoding_needed</name></name> <operator pos:start="431:38" pos:end="431:38">=</operator> <literal type="number" pos:start="431:40" pos:end="431:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="433:17" pos:end="433:41"><expr pos:start="433:17" pos:end="433:40"><name pos:start="433:17" pos:end="433:36"><name pos:start="433:17" pos:end="433:19">ist</name><operator pos:start="433:20" pos:end="433:21">-&gt;</operator><name pos:start="433:22" pos:end="433:36">decoding_needed</name></name> <operator pos:start="433:38" pos:end="433:38">=</operator> <literal type="number" pos:start="433:40" pos:end="433:40">1</literal></expr>;</expr_stmt>

                <break pos:start="435:17" pos:end="435:22">break;</break>

            <default pos:start="437:13" pos:end="437:20">default:</default>

                <expr_stmt pos:start="439:17" pos:end="439:24"><expr pos:start="439:17" pos:end="439:23"><call pos:start="439:17" pos:end="439:23"><name pos:start="439:17" pos:end="439:21">abort</name><argument_list pos:start="439:22" pos:end="439:23">()</argument_list></call></expr>;</expr_stmt>

                <break pos:start="441:17" pos:end="441:22">break;</break>

            </block_content>}</block></switch>

            <comment type="block" pos:start="445:13" pos:end="445:31">/* two pass mode */</comment>

            <if_stmt pos:start="447:13" pos:end="495:13"><if pos:start="447:13" pos:end="495:13">if <condition pos:start="447:16" pos:end="449:71">(<expr pos:start="447:17" pos:end="449:70"><name pos:start="447:17" pos:end="447:36"><name pos:start="447:17" pos:end="447:19">ost</name><operator pos:start="447:20" pos:end="447:21">-&gt;</operator><name pos:start="447:22" pos:end="447:36">encoding_needed</name></name> <operator pos:start="447:38" pos:end="447:39">&amp;&amp;</operator> <name pos:start="447:41" pos:end="447:55"><name pos:start="447:41" pos:end="447:45">codec</name><operator pos:start="447:46" pos:end="447:47">-&gt;</operator><name pos:start="447:48" pos:end="447:55">codec_id</name></name> <operator pos:start="447:57" pos:end="447:58">!=</operator> <name pos:start="447:60" pos:end="447:72">CODEC_ID_H264</name> <operator pos:start="447:74" pos:end="447:75">&amp;&amp;</operator>

                <operator pos:start="449:17" pos:end="449:17">(</operator><name pos:start="449:18" pos:end="449:29"><name pos:start="449:18" pos:end="449:22">codec</name><operator pos:start="449:23" pos:end="449:24">-&gt;</operator><name pos:start="449:25" pos:end="449:29">flags</name></name> <operator pos:start="449:31" pos:end="449:31">&amp;</operator> <operator pos:start="449:33" pos:end="449:33">(</operator><name pos:start="449:34" pos:end="449:49">CODEC_FLAG_PASS1</name> <operator pos:start="449:51" pos:end="449:51">|</operator> <name pos:start="449:53" pos:end="449:68">CODEC_FLAG_PASS2</name><operator pos:start="449:69" pos:end="449:69">)</operator><operator pos:start="449:70" pos:end="449:70">)</operator></expr>)</condition> <block pos:start="449:73" pos:end="495:13">{<block_content pos:start="451:17" pos:end="493:17">

                <decl_stmt pos:start="451:17" pos:end="451:39"><decl pos:start="451:17" pos:end="451:38"><type pos:start="451:17" pos:end="451:20"><name pos:start="451:17" pos:end="451:20">char</name></type> <name pos:start="451:22" pos:end="451:38"><name pos:start="451:22" pos:end="451:32">logfilename</name><index pos:start="451:33" pos:end="451:38">[<expr pos:start="451:34" pos:end="451:37"><literal type="number" pos:start="451:34" pos:end="451:37">1024</literal></expr>]</index></name></decl>;</decl_stmt>

                <decl_stmt pos:start="453:17" pos:end="453:24"><decl pos:start="453:17" pos:end="453:23"><type pos:start="453:17" pos:end="453:22"><name pos:start="453:17" pos:end="453:20">FILE</name> <modifier pos:start="453:22" pos:end="453:22">*</modifier></type><name pos:start="453:23" pos:end="453:23">f</name></decl>;</decl_stmt>



                <expr_stmt pos:start="457:17" pos:end="461:28"><expr pos:start="457:17" pos:end="461:27"><call pos:start="457:17" pos:end="461:27"><name pos:start="457:17" pos:end="457:24">snprintf</name><argument_list pos:start="457:25" pos:end="461:27">(<argument pos:start="457:26" pos:end="457:36"><expr pos:start="457:26" pos:end="457:36"><name pos:start="457:26" pos:end="457:36">logfilename</name></expr></argument>, <argument pos:start="457:39" pos:end="457:57"><expr pos:start="457:39" pos:end="457:57"><sizeof pos:start="457:39" pos:end="457:57">sizeof<argument_list pos:start="457:45" pos:end="457:57">(<argument pos:start="457:46" pos:end="457:56"><expr pos:start="457:46" pos:end="457:56"><name pos:start="457:46" pos:end="457:56">logfilename</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="457:60" pos:end="457:70"><expr pos:start="457:60" pos:end="457:70"><literal type="string" pos:start="457:60" pos:end="457:70">"%s-%d.log"</literal></expr></argument>,

                         <argument pos:start="459:26" pos:end="459:108"><expr pos:start="459:26" pos:end="459:108"><ternary pos:start="459:26" pos:end="459:108"><condition pos:start="459:26" pos:end="459:50"><expr pos:start="459:26" pos:end="459:48"><name pos:start="459:26" pos:end="459:48">pass_logfilename_prefix</name></expr> ?</condition><then pos:start="459:52" pos:end="459:74"> <expr pos:start="459:52" pos:end="459:74"><name pos:start="459:52" pos:end="459:74">pass_logfilename_prefix</name></expr> </then><else pos:start="459:76" pos:end="459:108">: <expr pos:start="459:78" pos:end="459:108"><name pos:start="459:78" pos:end="459:108">DEFAULT_PASS_LOGFILENAME_PREFIX</name></expr></else></ternary></expr></argument>,

                         <argument pos:start="461:26" pos:end="461:26"><expr pos:start="461:26" pos:end="461:26"><name pos:start="461:26" pos:end="461:26">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="463:17" pos:end="493:17"><if pos:start="463:17" pos:end="477:17">if <condition pos:start="463:20" pos:end="463:52">(<expr pos:start="463:21" pos:end="463:51"><name pos:start="463:21" pos:end="463:32"><name pos:start="463:21" pos:end="463:25">codec</name><operator pos:start="463:26" pos:end="463:27">-&gt;</operator><name pos:start="463:28" pos:end="463:32">flags</name></name> <operator pos:start="463:34" pos:end="463:34">&amp;</operator> <name pos:start="463:36" pos:end="463:51">CODEC_FLAG_PASS1</name></expr>)</condition> <block pos:start="463:54" pos:end="477:17">{<block_content pos:start="465:21" pos:end="475:37">

                    <expr_stmt pos:start="465:21" pos:end="465:49"><expr pos:start="465:21" pos:end="465:48"><name pos:start="465:21" pos:end="465:21">f</name> <operator pos:start="465:23" pos:end="465:23">=</operator> <call pos:start="465:25" pos:end="465:48"><name pos:start="465:25" pos:end="465:29">fopen</name><argument_list pos:start="465:30" pos:end="465:48">(<argument pos:start="465:31" pos:end="465:41"><expr pos:start="465:31" pos:end="465:41"><name pos:start="465:31" pos:end="465:41">logfilename</name></expr></argument>, <argument pos:start="465:44" pos:end="465:47"><expr pos:start="465:44" pos:end="465:47"><literal type="string" pos:start="465:44" pos:end="465:47">"wb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="467:21" pos:end="473:21"><if pos:start="467:21" pos:end="473:21">if <condition pos:start="467:24" pos:end="467:27">(<expr pos:start="467:25" pos:end="467:26"><operator pos:start="467:25" pos:end="467:25">!</operator><name pos:start="467:26" pos:end="467:26">f</name></expr>)</condition> <block pos:start="467:29" pos:end="473:21">{<block_content pos:start="469:25" pos:end="471:40">

                        <expr_stmt pos:start="469:25" pos:end="469:126"><expr pos:start="469:25" pos:end="469:125"><call pos:start="469:25" pos:end="469:125"><name pos:start="469:25" pos:end="469:31">fprintf</name><argument_list pos:start="469:32" pos:end="469:125">(<argument pos:start="469:33" pos:end="469:38"><expr pos:start="469:33" pos:end="469:38"><name pos:start="469:33" pos:end="469:38">stderr</name></expr></argument>, <argument pos:start="469:41" pos:end="469:94"><expr pos:start="469:41" pos:end="469:94"><literal type="string" pos:start="469:41" pos:end="469:94">"Cannot write log file '%s' for pass-1 encoding: %s\n"</literal></expr></argument>, <argument pos:start="469:97" pos:end="469:107"><expr pos:start="469:97" pos:end="469:107"><name pos:start="469:97" pos:end="469:107">logfilename</name></expr></argument>, <argument pos:start="469:110" pos:end="469:124"><expr pos:start="469:110" pos:end="469:124"><call pos:start="469:110" pos:end="469:124"><name pos:start="469:110" pos:end="469:117">strerror</name><argument_list pos:start="469:118" pos:end="469:124">(<argument pos:start="469:119" pos:end="469:123"><expr pos:start="469:119" pos:end="469:123"><name pos:start="469:119" pos:end="469:123">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="471:25" pos:end="471:40"><expr pos:start="471:25" pos:end="471:39"><call pos:start="471:25" pos:end="471:39"><name pos:start="471:25" pos:end="471:36">exit_program</name><argument_list pos:start="471:37" pos:end="471:39">(<argument pos:start="471:38" pos:end="471:38"><expr pos:start="471:38" pos:end="471:38"><literal type="number" pos:start="471:38" pos:end="471:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="475:21" pos:end="475:37"><expr pos:start="475:21" pos:end="475:36"><name pos:start="475:21" pos:end="475:32"><name pos:start="475:21" pos:end="475:23">ost</name><operator pos:start="475:24" pos:end="475:25">-&gt;</operator><name pos:start="475:26" pos:end="475:32">logfile</name></name> <operator pos:start="475:34" pos:end="475:34">=</operator> <name pos:start="475:36" pos:end="475:36">f</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="477:19" pos:end="493:17">else <block pos:start="477:24" pos:end="493:17">{<block_content pos:start="479:21" pos:end="491:48">

                    <decl_stmt pos:start="479:21" pos:end="479:37"><decl pos:start="479:21" pos:end="479:36"><type pos:start="479:21" pos:end="479:27"><name pos:start="479:21" pos:end="479:24">char</name>  <modifier pos:start="479:27" pos:end="479:27">*</modifier></type><name pos:start="479:28" pos:end="479:36">logbuffer</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="481:21" pos:end="481:42"><decl pos:start="481:21" pos:end="481:41"><type pos:start="481:21" pos:end="481:26"><name pos:start="481:21" pos:end="481:26">size_t</name></type> <name pos:start="481:28" pos:end="481:41">logbuffer_size</name></decl>;</decl_stmt>

                    <if_stmt pos:start="483:21" pos:end="489:21"><if pos:start="483:21" pos:end="489:21">if <condition pos:start="483:24" pos:end="483:80">(<expr pos:start="483:25" pos:end="483:79"><call pos:start="483:25" pos:end="483:75"><name pos:start="483:25" pos:end="483:33">read_file</name><argument_list pos:start="483:34" pos:end="483:75">(<argument pos:start="483:35" pos:end="483:45"><expr pos:start="483:35" pos:end="483:45"><name pos:start="483:35" pos:end="483:45">logfilename</name></expr></argument>, <argument pos:start="483:48" pos:end="483:57"><expr pos:start="483:48" pos:end="483:57"><operator pos:start="483:48" pos:end="483:48">&amp;</operator><name pos:start="483:49" pos:end="483:57">logbuffer</name></expr></argument>, <argument pos:start="483:60" pos:end="483:74"><expr pos:start="483:60" pos:end="483:74"><operator pos:start="483:60" pos:end="483:60">&amp;</operator><name pos:start="483:61" pos:end="483:74">logbuffer_size</name></expr></argument>)</argument_list></call> <operator pos:start="483:77" pos:end="483:77">&lt;</operator> <literal type="number" pos:start="483:79" pos:end="483:79">0</literal></expr>)</condition> <block pos:start="483:82" pos:end="489:21">{<block_content pos:start="485:25" pos:end="487:40">

                        <expr_stmt pos:start="485:25" pos:end="485:106"><expr pos:start="485:25" pos:end="485:105"><call pos:start="485:25" pos:end="485:105"><name pos:start="485:25" pos:end="485:31">fprintf</name><argument_list pos:start="485:32" pos:end="485:105">(<argument pos:start="485:33" pos:end="485:38"><expr pos:start="485:33" pos:end="485:38"><name pos:start="485:33" pos:end="485:38">stderr</name></expr></argument>, <argument pos:start="485:41" pos:end="485:91"><expr pos:start="485:41" pos:end="485:91"><literal type="string" pos:start="485:41" pos:end="485:91">"Error reading log file '%s' for pass-2 encoding\n"</literal></expr></argument>, <argument pos:start="485:94" pos:end="485:104"><expr pos:start="485:94" pos:end="485:104"><name pos:start="485:94" pos:end="485:104">logfilename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="487:25" pos:end="487:40"><expr pos:start="487:25" pos:end="487:39"><call pos:start="487:25" pos:end="487:39"><name pos:start="487:25" pos:end="487:36">exit_program</name><argument_list pos:start="487:37" pos:end="487:39">(<argument pos:start="487:38" pos:end="487:38"><expr pos:start="487:38" pos:end="487:38"><literal type="number" pos:start="487:38" pos:end="487:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="491:21" pos:end="491:48"><expr pos:start="491:21" pos:end="491:47"><name pos:start="491:21" pos:end="491:35"><name pos:start="491:21" pos:end="491:25">codec</name><operator pos:start="491:26" pos:end="491:27">-&gt;</operator><name pos:start="491:28" pos:end="491:35">stats_in</name></name> <operator pos:start="491:37" pos:end="491:37">=</operator> <name pos:start="491:39" pos:end="491:47">logbuffer</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="499:9" pos:end="507:9"><if pos:start="499:9" pos:end="507:9">if<condition pos:start="499:11" pos:end="499:51">(<expr pos:start="499:12" pos:end="499:50"><name pos:start="499:12" pos:end="499:28"><name pos:start="499:12" pos:end="499:16">codec</name><operator pos:start="499:17" pos:end="499:18">-&gt;</operator><name pos:start="499:19" pos:end="499:28">codec_type</name></name> <operator pos:start="499:30" pos:end="499:31">==</operator> <name pos:start="499:33" pos:end="499:50">AVMEDIA_TYPE_VIDEO</name></expr>)</condition><block pos:start="499:52" pos:end="507:9">{<block_content pos:start="503:13" pos:end="505:67">

            <comment type="block" pos:start="501:13" pos:end="501:86">/* maximum video buffer size is 6-bytes per pixel, plus DPX header size */</comment>

            <decl_stmt pos:start="503:13" pos:end="503:51"><decl pos:start="503:13" pos:end="503:50"><type pos:start="503:13" pos:end="503:15"><name pos:start="503:13" pos:end="503:15">int</name></type> <name pos:start="503:17" pos:end="503:20">size</name><init pos:start="503:21" pos:end="503:50">= <expr pos:start="503:23" pos:end="503:50"><name pos:start="503:23" pos:end="503:34"><name pos:start="503:23" pos:end="503:27">codec</name><operator pos:start="503:28" pos:end="503:29">-&gt;</operator><name pos:start="503:30" pos:end="503:34">width</name></name> <operator pos:start="503:36" pos:end="503:36">*</operator> <name pos:start="503:38" pos:end="503:50"><name pos:start="503:38" pos:end="503:42">codec</name><operator pos:start="503:43" pos:end="503:44">-&gt;</operator><name pos:start="503:45" pos:end="503:50">height</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="505:13" pos:end="505:67"><expr pos:start="505:13" pos:end="505:66"><name pos:start="505:13" pos:end="505:27">bit_buffer_size</name><operator pos:start="505:28" pos:end="505:28">=</operator> <call pos:start="505:30" pos:end="505:66"><name pos:start="505:30" pos:end="505:34">FFMAX</name><argument_list pos:start="505:35" pos:end="505:66">(<argument pos:start="505:36" pos:end="505:50"><expr pos:start="505:36" pos:end="505:50"><name pos:start="505:36" pos:end="505:50">bit_buffer_size</name></expr></argument>, <argument pos:start="505:53" pos:end="505:65"><expr pos:start="505:53" pos:end="505:65"><literal type="number" pos:start="505:53" pos:end="505:53">6</literal><operator pos:start="505:54" pos:end="505:54">*</operator><name pos:start="505:55" pos:end="505:58">size</name> <operator pos:start="505:60" pos:end="505:60">+</operator> <literal type="number" pos:start="505:62" pos:end="505:65">1664</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="513:5" pos:end="515:48"><if pos:start="513:5" pos:end="515:48">if <condition pos:start="513:8" pos:end="513:20">(<expr pos:start="513:9" pos:end="513:19"><operator pos:start="513:9" pos:end="513:9">!</operator><name pos:start="513:10" pos:end="513:19">bit_buffer</name></expr>)</condition><block type="pseudo" pos:start="515:9" pos:end="515:48"><block_content pos:start="515:9" pos:end="515:48">

        <expr_stmt pos:start="515:9" pos:end="515:48"><expr pos:start="515:9" pos:end="515:47"><name pos:start="515:9" pos:end="515:18">bit_buffer</name> <operator pos:start="515:20" pos:end="515:20">=</operator> <call pos:start="515:22" pos:end="515:47"><name pos:start="515:22" pos:end="515:30">av_malloc</name><argument_list pos:start="515:31" pos:end="515:47">(<argument pos:start="515:32" pos:end="515:46"><expr pos:start="515:32" pos:end="515:46"><name pos:start="515:32" pos:end="515:46">bit_buffer_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="517:5" pos:end="527:5"><if pos:start="517:5" pos:end="527:5">if <condition pos:start="517:8" pos:end="517:20">(<expr pos:start="517:9" pos:end="517:19"><operator pos:start="517:9" pos:end="517:9">!</operator><name pos:start="517:10" pos:end="517:19">bit_buffer</name></expr>)</condition> <block pos:start="517:22" pos:end="527:5">{<block_content pos:start="519:9" pos:end="525:18">

        <expr_stmt pos:start="519:9" pos:end="521:33"><expr pos:start="519:9" pos:end="521:32"><call pos:start="519:9" pos:end="521:32"><name pos:start="519:9" pos:end="519:15">fprintf</name><argument_list pos:start="519:16" pos:end="521:32">(<argument pos:start="519:17" pos:end="519:22"><expr pos:start="519:17" pos:end="519:22"><name pos:start="519:17" pos:end="519:22">stderr</name></expr></argument>, <argument pos:start="519:25" pos:end="519:66"><expr pos:start="519:25" pos:end="519:66"><literal type="string" pos:start="519:25" pos:end="519:66">"Cannot allocate %d bytes output buffer\n"</literal></expr></argument>,

                <argument pos:start="521:17" pos:end="521:31"><expr pos:start="521:17" pos:end="521:31"><name pos:start="521:17" pos:end="521:31">bit_buffer_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="523:9" pos:end="523:30"><expr pos:start="523:9" pos:end="523:29"><name pos:start="523:9" pos:end="523:11">ret</name> <operator pos:start="523:13" pos:end="523:13">=</operator> <call pos:start="523:15" pos:end="523:29"><name pos:start="523:15" pos:end="523:21">AVERROR</name><argument_list pos:start="523:22" pos:end="523:29">(<argument pos:start="523:23" pos:end="523:28"><expr pos:start="523:23" pos:end="523:28"><name pos:start="523:23" pos:end="523:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="525:9" pos:end="525:18">goto <name pos:start="525:14" pos:end="525:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="531:5" pos:end="531:27">/* open each encoder */</comment>

    <for pos:start="533:5" pos:end="599:5">for <control pos:start="533:9" pos:end="533:43">(<init pos:start="533:10" pos:end="533:15"><expr pos:start="533:10" pos:end="533:14"><name pos:start="533:10" pos:end="533:10">i</name> <operator pos:start="533:12" pos:end="533:12">=</operator> <literal type="number" pos:start="533:14" pos:end="533:14">0</literal></expr>;</init> <condition pos:start="533:17" pos:end="533:38"><expr pos:start="533:17" pos:end="533:37"><name pos:start="533:17" pos:end="533:17">i</name> <operator pos:start="533:19" pos:end="533:19">&lt;</operator> <name pos:start="533:21" pos:end="533:37">nb_output_streams</name></expr>;</condition> <incr pos:start="533:40" pos:end="533:42"><expr pos:start="533:40" pos:end="533:42"><name pos:start="533:40" pos:end="533:40">i</name><operator pos:start="533:41" pos:end="533:42">++</operator></expr></incr>)</control> <block pos:start="533:45" pos:end="599:5">{<block_content pos:start="535:9" pos:end="597:9">

        <expr_stmt pos:start="535:9" pos:end="535:33"><expr pos:start="535:9" pos:end="535:32"><name pos:start="535:9" pos:end="535:11">ost</name> <operator pos:start="535:13" pos:end="535:13">=</operator> <operator pos:start="535:15" pos:end="535:15">&amp;</operator><name pos:start="535:16" pos:end="535:32"><name pos:start="535:16" pos:end="535:29">output_streams</name><index pos:start="535:30" pos:end="535:32">[<expr pos:start="535:31" pos:end="535:31"><name pos:start="535:31" pos:end="535:31">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="537:9" pos:end="597:9"><if pos:start="537:9" pos:end="597:9">if <condition pos:start="537:12" pos:end="537:33">(<expr pos:start="537:13" pos:end="537:32"><name pos:start="537:13" pos:end="537:32"><name pos:start="537:13" pos:end="537:15">ost</name><operator pos:start="537:16" pos:end="537:17">-&gt;</operator><name pos:start="537:18" pos:end="537:32">encoding_needed</name></name></expr>)</condition> <block pos:start="537:35" pos:end="597:9">{<block_content pos:start="539:13" pos:end="595:57">

            <decl_stmt pos:start="539:13" pos:end="539:38"><decl pos:start="539:13" pos:end="539:37"><type pos:start="539:13" pos:end="539:21"><name pos:start="539:13" pos:end="539:19">AVCodec</name> <modifier pos:start="539:21" pos:end="539:21">*</modifier></type><name pos:start="539:22" pos:end="539:26">codec</name> <init pos:start="539:28" pos:end="539:37">= <expr pos:start="539:30" pos:end="539:37"><name pos:start="539:30" pos:end="539:37"><name pos:start="539:30" pos:end="539:32">ost</name><operator pos:start="539:33" pos:end="539:34">-&gt;</operator><name pos:start="539:35" pos:end="539:37">enc</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="541:13" pos:end="541:77"><decl pos:start="541:13" pos:end="541:76"><type pos:start="541:13" pos:end="541:28"><name pos:start="541:13" pos:end="541:26">AVCodecContext</name> <modifier pos:start="541:28" pos:end="541:28">*</modifier></type><name pos:start="541:29" pos:end="541:31">dec</name> <init pos:start="541:33" pos:end="541:76">= <expr pos:start="541:35" pos:end="541:76"><name pos:start="541:35" pos:end="541:66"><name pos:start="541:35" pos:end="541:47">input_streams</name><index pos:start="541:48" pos:end="541:66">[<expr pos:start="541:49" pos:end="541:65"><name pos:start="541:49" pos:end="541:65"><name pos:start="541:49" pos:end="541:51">ost</name><operator pos:start="541:52" pos:end="541:53">-&gt;</operator><name pos:start="541:54" pos:end="541:65">source_index</name></name></expr>]</index></name><operator pos:start="541:67" pos:end="541:67">.</operator><name pos:start="541:68" pos:end="541:76"><name pos:start="541:68" pos:end="541:69">st</name><operator pos:start="541:70" pos:end="541:71">-&gt;</operator><name pos:start="541:72" pos:end="541:76">codec</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="543:13" pos:end="553:13"><if pos:start="543:13" pos:end="553:13">if <condition pos:start="543:16" pos:end="543:23">(<expr pos:start="543:17" pos:end="543:22"><operator pos:start="543:17" pos:end="543:17">!</operator><name pos:start="543:18" pos:end="543:22">codec</name></expr>)</condition> <block pos:start="543:25" pos:end="553:13">{<block_content pos:start="545:17" pos:end="551:33">

                <expr_stmt pos:start="545:17" pos:end="547:98"><expr pos:start="545:17" pos:end="547:97"><call pos:start="545:17" pos:end="547:97"><name pos:start="545:17" pos:end="545:24">snprintf</name><argument_list pos:start="545:25" pos:end="547:97">(<argument pos:start="545:26" pos:end="545:30"><expr pos:start="545:26" pos:end="545:30"><name pos:start="545:26" pos:end="545:30">error</name></expr></argument>, <argument pos:start="545:33" pos:end="545:45"><expr pos:start="545:33" pos:end="545:45"><sizeof pos:start="545:33" pos:end="545:45">sizeof<argument_list pos:start="545:39" pos:end="545:45">(<argument pos:start="545:40" pos:end="545:44"><expr pos:start="545:40" pos:end="545:44"><name pos:start="545:40" pos:end="545:44">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="545:48" pos:end="545:102"><expr pos:start="545:48" pos:end="545:102"><literal type="string" pos:start="545:48" pos:end="545:102">"Encoder (codec %s) not found for output stream #%d.%d"</literal></expr></argument>,

                         <argument pos:start="547:26" pos:end="547:67"><expr pos:start="547:26" pos:end="547:67"><call pos:start="547:26" pos:end="547:67"><name pos:start="547:26" pos:end="547:41">avcodec_get_name</name><argument_list pos:start="547:42" pos:end="547:67">(<argument pos:start="547:43" pos:end="547:66"><expr pos:start="547:43" pos:end="547:66"><name pos:start="547:43" pos:end="547:66"><name pos:start="547:43" pos:end="547:45">ost</name><operator pos:start="547:46" pos:end="547:47">-&gt;</operator><name pos:start="547:48" pos:end="547:49">st</name><operator pos:start="547:50" pos:end="547:51">-&gt;</operator><name pos:start="547:52" pos:end="547:56">codec</name><operator pos:start="547:57" pos:end="547:58">-&gt;</operator><name pos:start="547:59" pos:end="547:66">codec_id</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="547:70" pos:end="547:84"><expr pos:start="547:70" pos:end="547:84"><name pos:start="547:70" pos:end="547:84"><name pos:start="547:70" pos:end="547:72">ost</name><operator pos:start="547:73" pos:end="547:74">-&gt;</operator><name pos:start="547:75" pos:end="547:84">file_index</name></name></expr></argument>, <argument pos:start="547:87" pos:end="547:96"><expr pos:start="547:87" pos:end="547:96"><name pos:start="547:87" pos:end="547:96"><name pos:start="547:87" pos:end="547:89">ost</name><operator pos:start="547:90" pos:end="547:91">-&gt;</operator><name pos:start="547:92" pos:end="547:96">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="549:17" pos:end="549:38"><expr pos:start="549:17" pos:end="549:37"><name pos:start="549:17" pos:end="549:19">ret</name> <operator pos:start="549:21" pos:end="549:21">=</operator> <call pos:start="549:23" pos:end="549:37"><name pos:start="549:23" pos:end="549:29">AVERROR</name><argument_list pos:start="549:30" pos:end="549:37">(<argument pos:start="549:31" pos:end="549:36"><expr pos:start="549:31" pos:end="549:36"><name pos:start="549:31" pos:end="549:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="551:17" pos:end="551:33">goto <name pos:start="551:22" pos:end="551:32">dump_format</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="555:13" pos:end="571:13"><if pos:start="555:13" pos:end="571:13">if <condition pos:start="555:16" pos:end="555:37">(<expr pos:start="555:17" pos:end="555:36"><name pos:start="555:17" pos:end="555:36"><name pos:start="555:17" pos:end="555:19">dec</name><operator pos:start="555:20" pos:end="555:21">-&gt;</operator><name pos:start="555:22" pos:end="555:36">subtitle_header</name></name></expr>)</condition> <block pos:start="555:39" pos:end="571:13">{<block_content pos:start="557:17" pos:end="569:81">

                <expr_stmt pos:start="557:17" pos:end="557:87"><expr pos:start="557:17" pos:end="557:86"><name pos:start="557:17" pos:end="557:47"><name pos:start="557:17" pos:end="557:19">ost</name><operator pos:start="557:20" pos:end="557:21">-&gt;</operator><name pos:start="557:22" pos:end="557:23">st</name><operator pos:start="557:24" pos:end="557:25">-&gt;</operator><name pos:start="557:26" pos:end="557:30">codec</name><operator pos:start="557:31" pos:end="557:32">-&gt;</operator><name pos:start="557:33" pos:end="557:47">subtitle_header</name></name> <operator pos:start="557:49" pos:end="557:49">=</operator> <call pos:start="557:51" pos:end="557:86"><name pos:start="557:51" pos:end="557:59">av_malloc</name><argument_list pos:start="557:60" pos:end="557:86">(<argument pos:start="557:61" pos:end="557:85"><expr pos:start="557:61" pos:end="557:85"><name pos:start="557:61" pos:end="557:85"><name pos:start="557:61" pos:end="557:63">dec</name><operator pos:start="557:64" pos:end="557:65">-&gt;</operator><name pos:start="557:66" pos:end="557:85">subtitle_header_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="559:17" pos:end="565:17"><if pos:start="559:17" pos:end="565:17">if <condition pos:start="559:20" pos:end="559:53">(<expr pos:start="559:21" pos:end="559:52"><operator pos:start="559:21" pos:end="559:21">!</operator><name pos:start="559:22" pos:end="559:52"><name pos:start="559:22" pos:end="559:24">ost</name><operator pos:start="559:25" pos:end="559:26">-&gt;</operator><name pos:start="559:27" pos:end="559:28">st</name><operator pos:start="559:29" pos:end="559:30">-&gt;</operator><name pos:start="559:31" pos:end="559:35">codec</name><operator pos:start="559:36" pos:end="559:37">-&gt;</operator><name pos:start="559:38" pos:end="559:52">subtitle_header</name></name></expr>)</condition> <block pos:start="559:55" pos:end="565:17">{<block_content pos:start="561:21" pos:end="563:37">

                    <expr_stmt pos:start="561:21" pos:end="561:42"><expr pos:start="561:21" pos:end="561:41"><name pos:start="561:21" pos:end="561:23">ret</name> <operator pos:start="561:25" pos:end="561:25">=</operator> <call pos:start="561:27" pos:end="561:41"><name pos:start="561:27" pos:end="561:33">AVERROR</name><argument_list pos:start="561:34" pos:end="561:41">(<argument pos:start="561:35" pos:end="561:40"><expr pos:start="561:35" pos:end="561:40"><name pos:start="561:35" pos:end="561:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="563:21" pos:end="563:37">goto <name pos:start="563:26" pos:end="563:36">dump_format</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="567:17" pos:end="567:105"><expr pos:start="567:17" pos:end="567:104"><call pos:start="567:17" pos:end="567:104"><name pos:start="567:17" pos:end="567:22">memcpy</name><argument_list pos:start="567:23" pos:end="567:104">(<argument pos:start="567:24" pos:end="567:54"><expr pos:start="567:24" pos:end="567:54"><name pos:start="567:24" pos:end="567:54"><name pos:start="567:24" pos:end="567:26">ost</name><operator pos:start="567:27" pos:end="567:28">-&gt;</operator><name pos:start="567:29" pos:end="567:30">st</name><operator pos:start="567:31" pos:end="567:32">-&gt;</operator><name pos:start="567:33" pos:end="567:37">codec</name><operator pos:start="567:38" pos:end="567:39">-&gt;</operator><name pos:start="567:40" pos:end="567:54">subtitle_header</name></name></expr></argument>, <argument pos:start="567:57" pos:end="567:76"><expr pos:start="567:57" pos:end="567:76"><name pos:start="567:57" pos:end="567:76"><name pos:start="567:57" pos:end="567:59">dec</name><operator pos:start="567:60" pos:end="567:61">-&gt;</operator><name pos:start="567:62" pos:end="567:76">subtitle_header</name></name></expr></argument>, <argument pos:start="567:79" pos:end="567:103"><expr pos:start="567:79" pos:end="567:103"><name pos:start="567:79" pos:end="567:103"><name pos:start="567:79" pos:end="567:81">dec</name><operator pos:start="567:82" pos:end="567:83">-&gt;</operator><name pos:start="567:84" pos:end="567:103">subtitle_header_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="569:17" pos:end="569:81"><expr pos:start="569:17" pos:end="569:80"><name pos:start="569:17" pos:end="569:52"><name pos:start="569:17" pos:end="569:19">ost</name><operator pos:start="569:20" pos:end="569:21">-&gt;</operator><name pos:start="569:22" pos:end="569:23">st</name><operator pos:start="569:24" pos:end="569:25">-&gt;</operator><name pos:start="569:26" pos:end="569:30">codec</name><operator pos:start="569:31" pos:end="569:32">-&gt;</operator><name pos:start="569:33" pos:end="569:52">subtitle_header_size</name></name> <operator pos:start="569:54" pos:end="569:54">=</operator> <name pos:start="569:56" pos:end="569:80"><name pos:start="569:56" pos:end="569:58">dec</name><operator pos:start="569:59" pos:end="569:60">-&gt;</operator><name pos:start="569:61" pos:end="569:80">subtitle_header_size</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="573:13" pos:end="583:13"><if pos:start="573:13" pos:end="583:13">if <condition pos:start="573:16" pos:end="573:69">(<expr pos:start="573:17" pos:end="573:68"><call pos:start="573:17" pos:end="573:64"><name pos:start="573:17" pos:end="573:29">avcodec_open2</name><argument_list pos:start="573:30" pos:end="573:64">(<argument pos:start="573:31" pos:end="573:44"><expr pos:start="573:31" pos:end="573:44"><name pos:start="573:31" pos:end="573:44"><name pos:start="573:31" pos:end="573:33">ost</name><operator pos:start="573:34" pos:end="573:35">-&gt;</operator><name pos:start="573:36" pos:end="573:37">st</name><operator pos:start="573:38" pos:end="573:39">-&gt;</operator><name pos:start="573:40" pos:end="573:44">codec</name></name></expr></argument>, <argument pos:start="573:47" pos:end="573:51"><expr pos:start="573:47" pos:end="573:51"><name pos:start="573:47" pos:end="573:51">codec</name></expr></argument>, <argument pos:start="573:54" pos:end="573:63"><expr pos:start="573:54" pos:end="573:63"><operator pos:start="573:54" pos:end="573:54">&amp;</operator><name pos:start="573:55" pos:end="573:63"><name pos:start="573:55" pos:end="573:57">ost</name><operator pos:start="573:58" pos:end="573:59">-&gt;</operator><name pos:start="573:60" pos:end="573:63">opts</name></name></expr></argument>)</argument_list></call> <operator pos:start="573:66" pos:end="573:66">&lt;</operator> <literal type="number" pos:start="573:68" pos:end="573:68">0</literal></expr>)</condition> <block pos:start="573:71" pos:end="583:13">{<block_content pos:start="575:17" pos:end="581:33">

                <expr_stmt pos:start="575:17" pos:end="577:53"><expr pos:start="575:17" pos:end="577:52"><call pos:start="575:17" pos:end="577:52"><name pos:start="575:17" pos:end="575:24">snprintf</name><argument_list pos:start="575:25" pos:end="577:52">(<argument pos:start="575:26" pos:end="575:30"><expr pos:start="575:26" pos:end="575:30"><name pos:start="575:26" pos:end="575:30">error</name></expr></argument>, <argument pos:start="575:33" pos:end="575:45"><expr pos:start="575:33" pos:end="575:45"><sizeof pos:start="575:33" pos:end="575:45">sizeof<argument_list pos:start="575:39" pos:end="575:45">(<argument pos:start="575:40" pos:end="575:44"><expr pos:start="575:40" pos:end="575:44"><name pos:start="575:40" pos:end="575:44">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="575:48" pos:end="575:170"><expr pos:start="575:48" pos:end="575:170"><literal type="string" pos:start="575:48" pos:end="575:170">"Error while opening encoder for output stream #%d.%d - maybe incorrect parameters such as bit_rate, rate, width or height"</literal></expr></argument>,

                        <argument pos:start="577:25" pos:end="577:39"><expr pos:start="577:25" pos:end="577:39"><name pos:start="577:25" pos:end="577:39"><name pos:start="577:25" pos:end="577:27">ost</name><operator pos:start="577:28" pos:end="577:29">-&gt;</operator><name pos:start="577:30" pos:end="577:39">file_index</name></name></expr></argument>, <argument pos:start="577:42" pos:end="577:51"><expr pos:start="577:42" pos:end="577:51"><name pos:start="577:42" pos:end="577:51"><name pos:start="577:42" pos:end="577:44">ost</name><operator pos:start="577:45" pos:end="577:46">-&gt;</operator><name pos:start="577:47" pos:end="577:51">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="579:17" pos:end="579:38"><expr pos:start="579:17" pos:end="579:37"><name pos:start="579:17" pos:end="579:19">ret</name> <operator pos:start="579:21" pos:end="579:21">=</operator> <call pos:start="579:23" pos:end="579:37"><name pos:start="579:23" pos:end="579:29">AVERROR</name><argument_list pos:start="579:30" pos:end="579:37">(<argument pos:start="579:31" pos:end="579:36"><expr pos:start="579:31" pos:end="579:36"><name pos:start="579:31" pos:end="579:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="581:17" pos:end="581:33">goto <name pos:start="581:22" pos:end="581:32">dump_format</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="585:13" pos:end="585:57"><expr pos:start="585:13" pos:end="585:56"><call pos:start="585:13" pos:end="585:56"><name pos:start="585:13" pos:end="585:37">assert_codec_experimental</name><argument_list pos:start="585:38" pos:end="585:56">(<argument pos:start="585:39" pos:end="585:52"><expr pos:start="585:39" pos:end="585:52"><name pos:start="585:39" pos:end="585:52"><name pos:start="585:39" pos:end="585:41">ost</name><operator pos:start="585:42" pos:end="585:43">-&gt;</operator><name pos:start="585:44" pos:end="585:45">st</name><operator pos:start="585:46" pos:end="585:47">-&gt;</operator><name pos:start="585:48" pos:end="585:52">codec</name></name></expr></argument>, <argument pos:start="585:55" pos:end="585:55"><expr pos:start="585:55" pos:end="585:55"><literal type="number" pos:start="585:55" pos:end="585:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="587:13" pos:end="587:40"><expr pos:start="587:13" pos:end="587:39"><call pos:start="587:13" pos:end="587:39"><name pos:start="587:13" pos:end="587:28">assert_avoptions</name><argument_list pos:start="587:29" pos:end="587:39">(<argument pos:start="587:30" pos:end="587:38"><expr pos:start="587:30" pos:end="587:38"><name pos:start="587:30" pos:end="587:38"><name pos:start="587:30" pos:end="587:32">ost</name><operator pos:start="587:33" pos:end="587:34">-&gt;</operator><name pos:start="587:35" pos:end="587:38">opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="589:13" pos:end="593:91"><if pos:start="589:13" pos:end="593:91">if <condition pos:start="589:16" pos:end="589:76">(<expr pos:start="589:17" pos:end="589:75"><name pos:start="589:17" pos:end="589:40"><name pos:start="589:17" pos:end="589:19">ost</name><operator pos:start="589:20" pos:end="589:21">-&gt;</operator><name pos:start="589:22" pos:end="589:23">st</name><operator pos:start="589:24" pos:end="589:25">-&gt;</operator><name pos:start="589:26" pos:end="589:30">codec</name><operator pos:start="589:31" pos:end="589:32">-&gt;</operator><name pos:start="589:33" pos:end="589:40">bit_rate</name></name> <operator pos:start="589:42" pos:end="589:43">&amp;&amp;</operator> <name pos:start="589:45" pos:end="589:68"><name pos:start="589:45" pos:end="589:47">ost</name><operator pos:start="589:48" pos:end="589:49">-&gt;</operator><name pos:start="589:50" pos:end="589:51">st</name><operator pos:start="589:52" pos:end="589:53">-&gt;</operator><name pos:start="589:54" pos:end="589:58">codec</name><operator pos:start="589:59" pos:end="589:60">-&gt;</operator><name pos:start="589:61" pos:end="589:68">bit_rate</name></name> <operator pos:start="589:70" pos:end="589:70">&lt;</operator> <literal type="number" pos:start="589:72" pos:end="589:75">1000</literal></expr>)</condition><block type="pseudo" pos:start="591:17" pos:end="593:91"><block_content pos:start="591:17" pos:end="593:91">

                <expr_stmt pos:start="591:17" pos:end="593:91"><expr pos:start="591:17" pos:end="593:90"><call pos:start="591:17" pos:end="593:90"><name pos:start="591:17" pos:end="591:22">av_log</name><argument_list pos:start="591:23" pos:end="593:90">(<argument pos:start="591:24" pos:end="591:27"><expr pos:start="591:24" pos:end="591:27"><name pos:start="591:24" pos:end="591:27">NULL</name></expr></argument>, <argument pos:start="591:30" pos:end="591:43"><expr pos:start="591:30" pos:end="591:43"><name pos:start="591:30" pos:end="591:43">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="591:46" pos:end="593:89"><expr pos:start="591:46" pos:end="593:89"><literal type="string" pos:start="591:46" pos:end="591:84">"The bitrate parameter is set too low."</literal>

                                             <literal type="string" pos:start="593:46" pos:end="593:89">"It takes bits/s as argument, not kbits/s\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="595:13" pos:end="595:57"><expr pos:start="595:13" pos:end="595:56"><name pos:start="595:13" pos:end="595:22">extra_size</name> <operator pos:start="595:24" pos:end="595:25">+=</operator> <name pos:start="595:27" pos:end="595:56"><name pos:start="595:27" pos:end="595:29">ost</name><operator pos:start="595:30" pos:end="595:31">-&gt;</operator><name pos:start="595:32" pos:end="595:33">st</name><operator pos:start="595:34" pos:end="595:35">-&gt;</operator><name pos:start="595:36" pos:end="595:40">codec</name><operator pos:start="595:41" pos:end="595:42">-&gt;</operator><name pos:start="595:43" pos:end="595:56">extradata_size</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="603:5" pos:end="603:28">/* init input streams */</comment>

    <for pos:start="605:5" pos:end="609:29">for <control pos:start="605:9" pos:end="605:42">(<init pos:start="605:10" pos:end="605:15"><expr pos:start="605:10" pos:end="605:14"><name pos:start="605:10" pos:end="605:10">i</name> <operator pos:start="605:12" pos:end="605:12">=</operator> <literal type="number" pos:start="605:14" pos:end="605:14">0</literal></expr>;</init> <condition pos:start="605:17" pos:end="605:37"><expr pos:start="605:17" pos:end="605:36"><name pos:start="605:17" pos:end="605:17">i</name> <operator pos:start="605:19" pos:end="605:19">&lt;</operator> <name pos:start="605:21" pos:end="605:36">nb_input_streams</name></expr>;</condition> <incr pos:start="605:39" pos:end="605:41"><expr pos:start="605:39" pos:end="605:41"><name pos:start="605:39" pos:end="605:39">i</name><operator pos:start="605:40" pos:end="605:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="607:9" pos:end="609:29"><block_content pos:start="607:9" pos:end="609:29">

        <if_stmt pos:start="607:9" pos:end="609:29"><if pos:start="607:9" pos:end="609:29">if <condition pos:start="607:12" pos:end="607:102">(<expr pos:start="607:13" pos:end="607:101"><operator pos:start="607:13" pos:end="607:13">(</operator><name pos:start="607:14" pos:end="607:16">ret</name> <operator pos:start="607:18" pos:end="607:18">=</operator> <call pos:start="607:20" pos:end="607:96"><name pos:start="607:20" pos:end="607:36">init_input_stream</name><argument_list pos:start="607:37" pos:end="607:96">(<argument pos:start="607:38" pos:end="607:38"><expr pos:start="607:38" pos:end="607:38"><name pos:start="607:38" pos:end="607:38">i</name></expr></argument>, <argument pos:start="607:41" pos:end="607:54"><expr pos:start="607:41" pos:end="607:54"><name pos:start="607:41" pos:end="607:54">output_streams</name></expr></argument>, <argument pos:start="607:57" pos:end="607:73"><expr pos:start="607:57" pos:end="607:73"><name pos:start="607:57" pos:end="607:73">nb_output_streams</name></expr></argument>, <argument pos:start="607:76" pos:end="607:80"><expr pos:start="607:76" pos:end="607:80"><name pos:start="607:76" pos:end="607:80">error</name></expr></argument>, <argument pos:start="607:83" pos:end="607:95"><expr pos:start="607:83" pos:end="607:95"><sizeof pos:start="607:83" pos:end="607:95">sizeof<argument_list pos:start="607:89" pos:end="607:95">(<argument pos:start="607:90" pos:end="607:94"><expr pos:start="607:90" pos:end="607:94"><name pos:start="607:90" pos:end="607:94">error</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="607:98" pos:end="607:98">&lt;</operator> <literal type="number" pos:start="607:100" pos:end="607:100">0</literal><operator pos:start="607:101" pos:end="607:101">)</operator></expr>)</condition><block type="pseudo" pos:start="609:13" pos:end="609:29"><block_content pos:start="609:13" pos:end="609:29">

            <goto pos:start="609:13" pos:end="609:29">goto <name pos:start="609:18" pos:end="609:28">dump_format</name>;</goto></block_content></block></if></if_stmt></block_content></block></for>



    <comment type="block" pos:start="613:5" pos:end="613:43">/* open files and write file headers */</comment>

    <for pos:start="615:5" pos:end="637:5">for <control pos:start="615:9" pos:end="615:41">(<init pos:start="615:10" pos:end="615:15"><expr pos:start="615:10" pos:end="615:14"><name pos:start="615:10" pos:end="615:10">i</name> <operator pos:start="615:12" pos:end="615:12">=</operator> <literal type="number" pos:start="615:14" pos:end="615:14">0</literal></expr>;</init> <condition pos:start="615:17" pos:end="615:36"><expr pos:start="615:17" pos:end="615:35"><name pos:start="615:17" pos:end="615:17">i</name> <operator pos:start="615:19" pos:end="615:19">&lt;</operator> <name pos:start="615:21" pos:end="615:35">nb_output_files</name></expr>;</condition> <incr pos:start="615:38" pos:end="615:40"><expr pos:start="615:38" pos:end="615:40"><name pos:start="615:38" pos:end="615:38">i</name><operator pos:start="615:39" pos:end="615:40">++</operator></expr></incr>)</control> <block pos:start="615:43" pos:end="637:5">{<block_content pos:start="617:9" pos:end="635:9">

        <expr_stmt pos:start="617:9" pos:end="617:33"><expr pos:start="617:9" pos:end="617:32"><name pos:start="617:9" pos:end="617:10">os</name> <operator pos:start="617:12" pos:end="617:12">=</operator> <name pos:start="617:14" pos:end="617:28"><name pos:start="617:14" pos:end="617:25">output_files</name><index pos:start="617:26" pos:end="617:28">[<expr pos:start="617:27" pos:end="617:27"><name pos:start="617:27" pos:end="617:27">i</name></expr>]</index></name><operator pos:start="617:29" pos:end="617:29">.</operator><name pos:start="617:30" pos:end="617:32">ctx</name></expr>;</expr_stmt>

        <if_stmt pos:start="619:9" pos:end="627:9"><if pos:start="619:9" pos:end="627:9">if <condition pos:start="619:12" pos:end="619:65">(<expr pos:start="619:13" pos:end="619:64"><call pos:start="619:13" pos:end="619:60"><name pos:start="619:13" pos:end="619:33">avformat_write_header</name><argument_list pos:start="619:34" pos:end="619:60">(<argument pos:start="619:35" pos:end="619:36"><expr pos:start="619:35" pos:end="619:36"><name pos:start="619:35" pos:end="619:36">os</name></expr></argument>, <argument pos:start="619:39" pos:end="619:59"><expr pos:start="619:39" pos:end="619:59"><operator pos:start="619:39" pos:end="619:39">&amp;</operator><name pos:start="619:40" pos:end="619:54"><name pos:start="619:40" pos:end="619:51">output_files</name><index pos:start="619:52" pos:end="619:54">[<expr pos:start="619:53" pos:end="619:53"><name pos:start="619:53" pos:end="619:53">i</name></expr>]</index></name><operator pos:start="619:55" pos:end="619:55">.</operator><name pos:start="619:56" pos:end="619:59">opts</name></expr></argument>)</argument_list></call> <operator pos:start="619:62" pos:end="619:62">&lt;</operator> <literal type="number" pos:start="619:64" pos:end="619:64">0</literal></expr>)</condition> <block pos:start="619:67" pos:end="627:9">{<block_content pos:start="621:13" pos:end="625:29">

            <expr_stmt pos:start="621:13" pos:end="621:123"><expr pos:start="621:13" pos:end="621:122"><call pos:start="621:13" pos:end="621:122"><name pos:start="621:13" pos:end="621:20">snprintf</name><argument_list pos:start="621:21" pos:end="621:122">(<argument pos:start="621:22" pos:end="621:26"><expr pos:start="621:22" pos:end="621:26"><name pos:start="621:22" pos:end="621:26">error</name></expr></argument>, <argument pos:start="621:29" pos:end="621:41"><expr pos:start="621:29" pos:end="621:41"><sizeof pos:start="621:29" pos:end="621:41">sizeof<argument_list pos:start="621:35" pos:end="621:41">(<argument pos:start="621:36" pos:end="621:40"><expr pos:start="621:36" pos:end="621:40"><name pos:start="621:36" pos:end="621:40">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="621:44" pos:end="621:118"><expr pos:start="621:44" pos:end="621:118"><literal type="string" pos:start="621:44" pos:end="621:118">"Could not write header for output file #%d (incorrect codec parameters ?)"</literal></expr></argument>, <argument pos:start="621:121" pos:end="621:121"><expr pos:start="621:121" pos:end="621:121"><name pos:start="621:121" pos:end="621:121">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="623:13" pos:end="623:34"><expr pos:start="623:13" pos:end="623:33"><name pos:start="623:13" pos:end="623:15">ret</name> <operator pos:start="623:17" pos:end="623:17">=</operator> <call pos:start="623:19" pos:end="623:33"><name pos:start="623:19" pos:end="623:25">AVERROR</name><argument_list pos:start="623:26" pos:end="623:33">(<argument pos:start="623:27" pos:end="623:32"><expr pos:start="623:27" pos:end="623:32"><name pos:start="623:27" pos:end="623:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="625:13" pos:end="625:29">goto <name pos:start="625:18" pos:end="625:28">dump_format</name>;</goto>

        </block_content>}</block></if></if_stmt>

<comment type="line" pos:start="629:1" pos:end="629:49">//        assert_avoptions(output_files[i].opts);</comment>

        <if_stmt pos:start="631:9" pos:end="635:9"><if pos:start="631:9" pos:end="635:9">if <condition pos:start="631:12" pos:end="631:45">(<expr pos:start="631:13" pos:end="631:44"><call pos:start="631:13" pos:end="631:44"><name pos:start="631:13" pos:end="631:18">strcmp</name><argument_list pos:start="631:19" pos:end="631:44">(<argument pos:start="631:20" pos:end="631:36"><expr pos:start="631:20" pos:end="631:36"><name pos:start="631:20" pos:end="631:36"><name pos:start="631:20" pos:end="631:21">os</name><operator pos:start="631:22" pos:end="631:23">-&gt;</operator><name pos:start="631:24" pos:end="631:30">oformat</name><operator pos:start="631:31" pos:end="631:32">-&gt;</operator><name pos:start="631:33" pos:end="631:36">name</name></name></expr></argument>, <argument pos:start="631:39" pos:end="631:43"><expr pos:start="631:39" pos:end="631:43"><literal type="string" pos:start="631:39" pos:end="631:43">"rtp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="631:47" pos:end="635:9">{<block_content pos:start="633:13" pos:end="633:25">

            <expr_stmt pos:start="633:13" pos:end="633:25"><expr pos:start="633:13" pos:end="633:24"><name pos:start="633:13" pos:end="633:20">want_sdp</name> <operator pos:start="633:22" pos:end="633:22">=</operator> <literal type="number" pos:start="633:24" pos:end="633:24">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



 <label pos:start="641:2" pos:end="641:13"><name pos:start="641:2" pos:end="641:12">dump_format</name>:</label>

    <comment type="block" pos:start="643:5" pos:end="645:24">/* dump the file output parameters - cannot be done before in case

       of stream copy */</comment>

    <for pos:start="647:5" pos:end="651:5">for<control pos:start="647:8" pos:end="647:34">(<init pos:start="647:9" pos:end="647:12"><expr pos:start="647:9" pos:end="647:11"><name pos:start="647:9" pos:end="647:9">i</name><operator pos:start="647:10" pos:end="647:10">=</operator><literal type="number" pos:start="647:11" pos:end="647:11">0</literal></expr>;</init><condition pos:start="647:13" pos:end="647:30"><expr pos:start="647:13" pos:end="647:29"><name pos:start="647:13" pos:end="647:13">i</name><operator pos:start="647:14" pos:end="647:14">&lt;</operator><name pos:start="647:15" pos:end="647:29">nb_output_files</name></expr>;</condition><incr pos:start="647:31" pos:end="647:33"><expr pos:start="647:31" pos:end="647:33"><name pos:start="647:31" pos:end="647:31">i</name><operator pos:start="647:32" pos:end="647:33">++</operator></expr></incr>)</control> <block pos:start="647:36" pos:end="651:5">{<block_content pos:start="649:9" pos:end="649:81">

        <expr_stmt pos:start="649:9" pos:end="649:81"><expr pos:start="649:9" pos:end="649:80"><call pos:start="649:9" pos:end="649:80"><name pos:start="649:9" pos:end="649:22">av_dump_format</name><argument_list pos:start="649:23" pos:end="649:80">(<argument pos:start="649:24" pos:end="649:42"><expr pos:start="649:24" pos:end="649:42"><name pos:start="649:24" pos:end="649:38"><name pos:start="649:24" pos:end="649:35">output_files</name><index pos:start="649:36" pos:end="649:38">[<expr pos:start="649:37" pos:end="649:37"><name pos:start="649:37" pos:end="649:37">i</name></expr>]</index></name><operator pos:start="649:39" pos:end="649:39">.</operator><name pos:start="649:40" pos:end="649:42">ctx</name></expr></argument>, <argument pos:start="649:45" pos:end="649:45"><expr pos:start="649:45" pos:end="649:45"><name pos:start="649:45" pos:end="649:45">i</name></expr></argument>, <argument pos:start="649:48" pos:end="649:76"><expr pos:start="649:48" pos:end="649:76"><name pos:start="649:48" pos:end="649:62"><name pos:start="649:48" pos:end="649:59">output_files</name><index pos:start="649:60" pos:end="649:62">[<expr pos:start="649:61" pos:end="649:61"><name pos:start="649:61" pos:end="649:61">i</name></expr>]</index></name><operator pos:start="649:63" pos:end="649:63">.</operator><name pos:start="649:64" pos:end="649:76"><name pos:start="649:64" pos:end="649:66">ctx</name><operator pos:start="649:67" pos:end="649:68">-&gt;</operator><name pos:start="649:69" pos:end="649:76">filename</name></name></expr></argument>, <argument pos:start="649:79" pos:end="649:79"><expr pos:start="649:79" pos:end="649:79"><literal type="number" pos:start="649:79" pos:end="649:79">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="655:5" pos:end="655:33">/* dump the stream mapping */</comment>

    <if_stmt pos:start="657:5" pos:end="701:5"><if pos:start="657:5" pos:end="701:5">if <condition pos:start="657:8" pos:end="657:21">(<expr pos:start="657:9" pos:end="657:20"><name pos:start="657:9" pos:end="657:15">verbose</name> <operator pos:start="657:17" pos:end="657:18">&gt;=</operator> <literal type="number" pos:start="657:20" pos:end="657:20">0</literal></expr>)</condition> <block pos:start="657:23" pos:end="701:5">{<block_content pos:start="659:9" pos:end="699:9">

        <expr_stmt pos:start="659:9" pos:end="659:45"><expr pos:start="659:9" pos:end="659:44"><call pos:start="659:9" pos:end="659:44"><name pos:start="659:9" pos:end="659:15">fprintf</name><argument_list pos:start="659:16" pos:end="659:44">(<argument pos:start="659:17" pos:end="659:22"><expr pos:start="659:17" pos:end="659:22"><name pos:start="659:17" pos:end="659:22">stderr</name></expr></argument>, <argument pos:start="659:25" pos:end="659:43"><expr pos:start="659:25" pos:end="659:43"><literal type="string" pos:start="659:25" pos:end="659:43">"Stream mapping:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="661:9" pos:end="699:9">for <control pos:start="661:13" pos:end="661:47">(<init pos:start="661:14" pos:end="661:19"><expr pos:start="661:14" pos:end="661:18"><name pos:start="661:14" pos:end="661:14">i</name> <operator pos:start="661:16" pos:end="661:16">=</operator> <literal type="number" pos:start="661:18" pos:end="661:18">0</literal></expr>;</init> <condition pos:start="661:21" pos:end="661:42"><expr pos:start="661:21" pos:end="661:41"><name pos:start="661:21" pos:end="661:21">i</name> <operator pos:start="661:23" pos:end="661:23">&lt;</operator> <name pos:start="661:25" pos:end="661:41">nb_output_streams</name></expr>;</condition><incr pos:start="661:43" pos:end="661:46"><expr pos:start="661:43" pos:end="661:46"><name pos:start="661:43" pos:end="661:43">i</name> <operator pos:start="661:45" pos:end="661:46">++</operator></expr></incr>)</control> <block pos:start="661:49" pos:end="699:9">{<block_content pos:start="663:13" pos:end="697:34">

            <expr_stmt pos:start="663:13" pos:end="663:37"><expr pos:start="663:13" pos:end="663:36"><name pos:start="663:13" pos:end="663:15">ost</name> <operator pos:start="663:17" pos:end="663:17">=</operator> <operator pos:start="663:19" pos:end="663:19">&amp;</operator><name pos:start="663:20" pos:end="663:36"><name pos:start="663:20" pos:end="663:33">output_streams</name><index pos:start="663:34" pos:end="663:36">[<expr pos:start="663:35" pos:end="663:35"><name pos:start="663:35" pos:end="663:35">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="665:13" pos:end="673:32"><expr pos:start="665:13" pos:end="673:31"><call pos:start="665:13" pos:end="673:31"><name pos:start="665:13" pos:end="665:19">fprintf</name><argument_list pos:start="665:20" pos:end="673:31">(<argument pos:start="665:21" pos:end="665:26"><expr pos:start="665:21" pos:end="665:26"><name pos:start="665:21" pos:end="665:26">stderr</name></expr></argument>, <argument pos:start="665:29" pos:end="665:55"><expr pos:start="665:29" pos:end="665:55"><literal type="string" pos:start="665:29" pos:end="665:55">"  Stream #%d.%d -&gt; #%d.%d"</literal></expr></argument>,

                    <argument pos:start="667:21" pos:end="667:63"><expr pos:start="667:21" pos:end="667:63"><name pos:start="667:21" pos:end="667:52"><name pos:start="667:21" pos:end="667:33">input_streams</name><index pos:start="667:34" pos:end="667:52">[<expr pos:start="667:35" pos:end="667:51"><name pos:start="667:35" pos:end="667:51"><name pos:start="667:35" pos:end="667:37">ost</name><operator pos:start="667:38" pos:end="667:39">-&gt;</operator><name pos:start="667:40" pos:end="667:51">source_index</name></name></expr>]</index></name><operator pos:start="667:53" pos:end="667:53">.</operator><name pos:start="667:54" pos:end="667:63">file_index</name></expr></argument>,

                    <argument pos:start="669:21" pos:end="669:62"><expr pos:start="669:21" pos:end="669:62"><name pos:start="669:21" pos:end="669:52"><name pos:start="669:21" pos:end="669:33">input_streams</name><index pos:start="669:34" pos:end="669:52">[<expr pos:start="669:35" pos:end="669:51"><name pos:start="669:35" pos:end="669:51"><name pos:start="669:35" pos:end="669:37">ost</name><operator pos:start="669:38" pos:end="669:39">-&gt;</operator><name pos:start="669:40" pos:end="669:51">source_index</name></name></expr>]</index></name><operator pos:start="669:53" pos:end="669:53">.</operator><name pos:start="669:54" pos:end="669:62"><name pos:start="669:54" pos:end="669:55">st</name><operator pos:start="669:56" pos:end="669:57">-&gt;</operator><name pos:start="669:58" pos:end="669:62">index</name></name></expr></argument>,

                    <argument pos:start="671:21" pos:end="671:35"><expr pos:start="671:21" pos:end="671:35"><name pos:start="671:21" pos:end="671:35"><name pos:start="671:21" pos:end="671:23">ost</name><operator pos:start="671:24" pos:end="671:25">-&gt;</operator><name pos:start="671:26" pos:end="671:35">file_index</name></name></expr></argument>,

                    <argument pos:start="673:21" pos:end="673:30"><expr pos:start="673:21" pos:end="673:30"><name pos:start="673:21" pos:end="673:30"><name pos:start="673:21" pos:end="673:23">ost</name><operator pos:start="673:24" pos:end="673:25">-&gt;</operator><name pos:start="673:26" pos:end="673:30">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="675:13" pos:end="681:50"><if pos:start="675:13" pos:end="681:50">if <condition pos:start="675:16" pos:end="675:67">(<expr pos:start="675:17" pos:end="675:66"><name pos:start="675:17" pos:end="675:29"><name pos:start="675:17" pos:end="675:19">ost</name><operator pos:start="675:20" pos:end="675:21">-&gt;</operator><name pos:start="675:22" pos:end="675:29">sync_ist</name></name> <operator pos:start="675:31" pos:end="675:32">!=</operator> <operator pos:start="675:34" pos:end="675:34">&amp;</operator><name pos:start="675:35" pos:end="675:66"><name pos:start="675:35" pos:end="675:47">input_streams</name><index pos:start="675:48" pos:end="675:66">[<expr pos:start="675:49" pos:end="675:65"><name pos:start="675:49" pos:end="675:65"><name pos:start="675:49" pos:end="675:51">ost</name><operator pos:start="675:52" pos:end="675:53">-&gt;</operator><name pos:start="675:54" pos:end="675:65">source_index</name></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="677:17" pos:end="681:50"><block_content pos:start="677:17" pos:end="681:50">

                <expr_stmt pos:start="677:17" pos:end="681:50"><expr pos:start="677:17" pos:end="681:49"><call pos:start="677:17" pos:end="681:49"><name pos:start="677:17" pos:end="677:23">fprintf</name><argument_list pos:start="677:24" pos:end="681:49">(<argument pos:start="677:25" pos:end="677:30"><expr pos:start="677:25" pos:end="677:30"><name pos:start="677:25" pos:end="677:30">stderr</name></expr></argument>, <argument pos:start="677:33" pos:end="677:48"><expr pos:start="677:33" pos:end="677:48"><literal type="string" pos:start="677:33" pos:end="677:48">" [sync #%d.%d]"</literal></expr></argument>,

                        <argument pos:start="679:25" pos:end="679:49"><expr pos:start="679:25" pos:end="679:49"><name pos:start="679:25" pos:end="679:49"><name pos:start="679:25" pos:end="679:27">ost</name><operator pos:start="679:28" pos:end="679:29">-&gt;</operator><name pos:start="679:30" pos:end="679:37">sync_ist</name><operator pos:start="679:38" pos:end="679:39">-&gt;</operator><name pos:start="679:40" pos:end="679:49">file_index</name></name></expr></argument>,

                        <argument pos:start="681:25" pos:end="681:48"><expr pos:start="681:25" pos:end="681:48"><name pos:start="681:25" pos:end="681:48"><name pos:start="681:25" pos:end="681:27">ost</name><operator pos:start="681:28" pos:end="681:29">-&gt;</operator><name pos:start="681:30" pos:end="681:37">sync_ist</name><operator pos:start="681:38" pos:end="681:39">-&gt;</operator><name pos:start="681:40" pos:end="681:41">st</name><operator pos:start="681:42" pos:end="681:43">-&gt;</operator><name pos:start="681:44" pos:end="681:48">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="683:13" pos:end="695:42"><if pos:start="683:13" pos:end="691:53">if<condition pos:start="683:15" pos:end="683:36">(<expr pos:start="683:16" pos:end="683:35"><name pos:start="683:16" pos:end="683:35"><name pos:start="683:16" pos:end="683:18">ost</name><operator pos:start="683:19" pos:end="683:20">-&gt;</operator><name pos:start="683:21" pos:end="683:35">encoding_needed</name></name></expr>)</condition><block type="pseudo" pos:start="685:17" pos:end="691:53"><block_content pos:start="685:17" pos:end="691:53">

                <expr_stmt pos:start="685:17" pos:end="691:53"><expr pos:start="685:17" pos:end="691:52"><call pos:start="685:17" pos:end="691:52"><name pos:start="685:17" pos:end="685:23">fprintf</name><argument_list pos:start="685:24" pos:end="691:52">(<argument pos:start="685:25" pos:end="685:30"><expr pos:start="685:25" pos:end="685:30"><name pos:start="685:25" pos:end="685:30">stderr</name></expr></argument>, <argument pos:start="685:33" pos:end="685:44"><expr pos:start="685:33" pos:end="685:44"><literal type="string" pos:start="685:33" pos:end="685:44">": %s -&gt; %s"</literal></expr></argument>,

                    <argument pos:start="687:21" pos:end="689:72"><expr pos:start="687:21" pos:end="689:72"><ternary pos:start="687:21" pos:end="689:72"><condition pos:start="687:21" pos:end="687:58"><expr pos:start="687:21" pos:end="687:56"><name pos:start="687:21" pos:end="687:52"><name pos:start="687:21" pos:end="687:33">input_streams</name><index pos:start="687:34" pos:end="687:52">[<expr pos:start="687:35" pos:end="687:51"><name pos:start="687:35" pos:end="687:51"><name pos:start="687:35" pos:end="687:37">ost</name><operator pos:start="687:38" pos:end="687:39">-&gt;</operator><name pos:start="687:40" pos:end="687:51">source_index</name></name></expr>]</index></name><operator pos:start="687:53" pos:end="687:53">.</operator><name pos:start="687:54" pos:end="687:56">dec</name></expr> ?</condition><then pos:start="689:25" pos:end="689:66">

                        <expr pos:start="689:25" pos:end="689:66"><name pos:start="689:25" pos:end="689:56"><name pos:start="689:25" pos:end="689:37">input_streams</name><index pos:start="689:38" pos:end="689:56">[<expr pos:start="689:39" pos:end="689:55"><name pos:start="689:39" pos:end="689:55"><name pos:start="689:39" pos:end="689:41">ost</name><operator pos:start="689:42" pos:end="689:43">-&gt;</operator><name pos:start="689:44" pos:end="689:55">source_index</name></name></expr>]</index></name><operator pos:start="689:57" pos:end="689:57">.</operator><name pos:start="689:58" pos:end="689:66"><name pos:start="689:58" pos:end="689:60">dec</name><operator pos:start="689:61" pos:end="689:62">-&gt;</operator><name pos:start="689:63" pos:end="689:66">name</name></name></expr> </then><else pos:start="689:68" pos:end="689:72">: <expr pos:start="689:70" pos:end="689:72"><literal type="string" pos:start="689:70" pos:end="689:72">"?"</literal></expr></else></ternary></expr></argument>,

                    <argument pos:start="691:21" pos:end="691:51"><expr pos:start="691:21" pos:end="691:51"><ternary pos:start="691:21" pos:end="691:51"><condition pos:start="691:21" pos:end="691:30"><expr pos:start="691:21" pos:end="691:28"><name pos:start="691:21" pos:end="691:28"><name pos:start="691:21" pos:end="691:23">ost</name><operator pos:start="691:24" pos:end="691:25">-&gt;</operator><name pos:start="691:26" pos:end="691:28">enc</name></name></expr> ?</condition><then pos:start="691:32" pos:end="691:45"> <expr pos:start="691:32" pos:end="691:45"><name pos:start="691:32" pos:end="691:45"><name pos:start="691:32" pos:end="691:34">ost</name><operator pos:start="691:35" pos:end="691:36">-&gt;</operator><name pos:start="691:37" pos:end="691:39">enc</name><operator pos:start="691:40" pos:end="691:41">-&gt;</operator><name pos:start="691:42" pos:end="691:45">name</name></name></expr> </then><else pos:start="691:47" pos:end="691:51">: <expr pos:start="691:49" pos:end="691:51"><literal type="string" pos:start="691:49" pos:end="691:51">"?"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="693:13" pos:end="695:42">else<block type="pseudo" pos:start="695:17" pos:end="695:42"><block_content pos:start="695:17" pos:end="695:42">

                <expr_stmt pos:start="695:17" pos:end="695:42"><expr pos:start="695:17" pos:end="695:41"><call pos:start="695:17" pos:end="695:41"><name pos:start="695:17" pos:end="695:23">fprintf</name><argument_list pos:start="695:24" pos:end="695:41">(<argument pos:start="695:25" pos:end="695:30"><expr pos:start="695:25" pos:end="695:30"><name pos:start="695:25" pos:end="695:30">stderr</name></expr></argument>, <argument pos:start="695:33" pos:end="695:40"><expr pos:start="695:33" pos:end="695:40"><literal type="string" pos:start="695:33" pos:end="695:40">": copy"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="697:13" pos:end="697:34"><expr pos:start="697:13" pos:end="697:33"><call pos:start="697:13" pos:end="697:33"><name pos:start="697:13" pos:end="697:19">fprintf</name><argument_list pos:start="697:20" pos:end="697:33">(<argument pos:start="697:21" pos:end="697:26"><expr pos:start="697:21" pos:end="697:26"><name pos:start="697:21" pos:end="697:26">stderr</name></expr></argument>, <argument pos:start="697:29" pos:end="697:32"><expr pos:start="697:29" pos:end="697:32"><literal type="string" pos:start="697:29" pos:end="697:32">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="705:5" pos:end="711:5"><if pos:start="705:5" pos:end="711:5">if <condition pos:start="705:8" pos:end="705:12">(<expr pos:start="705:9" pos:end="705:11"><name pos:start="705:9" pos:end="705:11">ret</name></expr>)</condition> <block pos:start="705:14" pos:end="711:5">{<block_content pos:start="707:9" pos:end="709:18">

        <expr_stmt pos:start="707:9" pos:end="707:39"><expr pos:start="707:9" pos:end="707:38"><call pos:start="707:9" pos:end="707:38"><name pos:start="707:9" pos:end="707:15">fprintf</name><argument_list pos:start="707:16" pos:end="707:38">(<argument pos:start="707:17" pos:end="707:22"><expr pos:start="707:17" pos:end="707:22"><name pos:start="707:17" pos:end="707:22">stderr</name></expr></argument>, <argument pos:start="707:25" pos:end="707:30"><expr pos:start="707:25" pos:end="707:30"><literal type="string" pos:start="707:25" pos:end="707:30">"%s\n"</literal></expr></argument>, <argument pos:start="707:33" pos:end="707:37"><expr pos:start="707:33" pos:end="707:37"><name pos:start="707:33" pos:end="707:37">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="709:9" pos:end="709:18">goto <name pos:start="709:14" pos:end="709:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="715:5" pos:end="719:5"><if pos:start="715:5" pos:end="719:5">if <condition pos:start="715:8" pos:end="715:17">(<expr pos:start="715:9" pos:end="715:16"><name pos:start="715:9" pos:end="715:16">want_sdp</name></expr>)</condition> <block pos:start="715:19" pos:end="719:5">{<block_content pos:start="717:9" pos:end="717:49">

        <expr_stmt pos:start="717:9" pos:end="717:49"><expr pos:start="717:9" pos:end="717:48"><call pos:start="717:9" pos:end="717:48"><name pos:start="717:9" pos:end="717:17">print_sdp</name><argument_list pos:start="717:18" pos:end="717:48">(<argument pos:start="717:19" pos:end="717:30"><expr pos:start="717:19" pos:end="717:30"><name pos:start="717:19" pos:end="717:30">output_files</name></expr></argument>, <argument pos:start="717:33" pos:end="717:47"><expr pos:start="717:33" pos:end="717:47"><name pos:start="717:33" pos:end="717:47">nb_output_files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="723:5" pos:end="731:5"><if pos:start="723:5" pos:end="731:5">if <condition pos:start="723:8" pos:end="723:21">(<expr pos:start="723:9" pos:end="723:20"><operator pos:start="723:9" pos:end="723:9">!</operator><name pos:start="723:10" pos:end="723:20">using_stdin</name></expr>)</condition> <block pos:start="723:23" pos:end="731:5">{<block_content pos:start="725:9" pos:end="729:51">

        <if_stmt pos:start="725:9" pos:end="727:65"><if pos:start="725:9" pos:end="727:65">if<condition pos:start="725:11" pos:end="725:24">(<expr pos:start="725:12" pos:end="725:23"><name pos:start="725:12" pos:end="725:18">verbose</name> <operator pos:start="725:20" pos:end="725:21">&gt;=</operator> <literal type="number" pos:start="725:23" pos:end="725:23">0</literal></expr>)</condition><block type="pseudo" pos:start="727:13" pos:end="727:65"><block_content pos:start="727:13" pos:end="727:65">

            <expr_stmt pos:start="727:13" pos:end="727:65"><expr pos:start="727:13" pos:end="727:64"><call pos:start="727:13" pos:end="727:64"><name pos:start="727:13" pos:end="727:19">fprintf</name><argument_list pos:start="727:20" pos:end="727:64">(<argument pos:start="727:21" pos:end="727:26"><expr pos:start="727:21" pos:end="727:26"><name pos:start="727:21" pos:end="727:26">stderr</name></expr></argument>, <argument pos:start="727:29" pos:end="727:63"><expr pos:start="727:29" pos:end="727:63"><literal type="string" pos:start="727:29" pos:end="727:63">"Press [q] to stop, [?] for help\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="729:9" pos:end="729:51"><expr pos:start="729:9" pos:end="729:50"><call pos:start="729:9" pos:end="729:50"><name pos:start="729:9" pos:end="729:29">avio_set_interrupt_cb</name><argument_list pos:start="729:30" pos:end="729:50">(<argument pos:start="729:31" pos:end="729:49"><expr pos:start="729:31" pos:end="729:49"><name pos:start="729:31" pos:end="729:49">decode_interrupt_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="733:5" pos:end="733:16"><expr pos:start="733:5" pos:end="733:15"><call pos:start="733:5" pos:end="733:15"><name pos:start="733:5" pos:end="733:13">term_init</name><argument_list pos:start="733:14" pos:end="733:15">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="737:5" pos:end="737:31"><expr pos:start="737:5" pos:end="737:30"><name pos:start="737:5" pos:end="737:15">timer_start</name> <operator pos:start="737:17" pos:end="737:17">=</operator> <call pos:start="737:19" pos:end="737:30"><name pos:start="737:19" pos:end="737:28">av_gettime</name><argument_list pos:start="737:29" pos:end="737:30">()</argument_list></call></expr>;</expr_stmt>



    <for pos:start="741:5" pos:end="1151:5">for<control pos:start="741:8" pos:end="741:33">(<init pos:start="741:9" pos:end="741:9">;</init> <condition pos:start="741:11" pos:end="741:32"><expr pos:start="741:11" pos:end="741:31"><name pos:start="741:11" pos:end="741:26">received_sigterm</name> <operator pos:start="741:28" pos:end="741:29">==</operator> <literal type="number" pos:start="741:31" pos:end="741:31">0</literal></expr>;</condition><incr/>)</control> <block pos:start="741:35" pos:end="1151:5">{<block_content pos:start="743:9" pos:end="1149:86">

        <decl_stmt pos:start="743:9" pos:end="743:34"><decl pos:start="743:9" pos:end="743:22"><type pos:start="743:9" pos:end="743:11"><name pos:start="743:9" pos:end="743:11">int</name></type> <name pos:start="743:13" pos:end="743:22">file_index</name></decl>, <decl pos:start="743:25" pos:end="743:33"><type ref="prev" pos:start="743:9" pos:end="743:11"/><name pos:start="743:25" pos:end="743:33">ist_index</name></decl>;</decl_stmt>

        <decl_stmt pos:start="745:9" pos:end="745:21"><decl pos:start="745:9" pos:end="745:20"><type pos:start="745:9" pos:end="745:16"><name pos:start="745:9" pos:end="745:16">AVPacket</name></type> <name pos:start="745:18" pos:end="745:20">pkt</name></decl>;</decl_stmt>

        <decl_stmt pos:start="747:9" pos:end="747:25"><decl pos:start="747:9" pos:end="747:24"><type pos:start="747:9" pos:end="747:15"><name pos:start="747:9" pos:end="747:15">int64_t</name></type> <name pos:start="747:17" pos:end="747:24">ipts_min</name></decl>;</decl_stmt>

        <decl_stmt pos:start="749:9" pos:end="749:24"><decl pos:start="749:9" pos:end="749:23"><type pos:start="749:9" pos:end="749:14"><name pos:start="749:9" pos:end="749:14">double</name></type> <name pos:start="749:16" pos:end="749:23">opts_min</name></decl>;</decl_stmt>



    <label pos:start="753:5" pos:end="753:9"><name pos:start="753:5" pos:end="753:8">redo</name>:</label>

        <expr_stmt pos:start="755:9" pos:end="755:28"><expr pos:start="755:9" pos:end="755:27"><name pos:start="755:9" pos:end="755:16">ipts_min</name><operator pos:start="755:17" pos:end="755:17">=</operator> <name pos:start="755:19" pos:end="755:27">INT64_MAX</name></expr>;</expr_stmt>

        <expr_stmt pos:start="757:9" pos:end="757:24"><expr pos:start="757:9" pos:end="757:23"><name pos:start="757:9" pos:end="757:16">opts_min</name><operator pos:start="757:17" pos:end="757:17">=</operator> <literal type="number" pos:start="757:19" pos:end="757:23">1e100</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="759:9" pos:end="759:35">/* if 'q' pressed, exits */</comment>

        <if_stmt pos:start="761:9" pos:end="903:9"><if pos:start="761:9" pos:end="903:9">if <condition pos:start="761:12" pos:end="761:25">(<expr pos:start="761:13" pos:end="761:24"><operator pos:start="761:13" pos:end="761:13">!</operator><name pos:start="761:14" pos:end="761:24">using_stdin</name></expr>)</condition> <block pos:start="761:27" pos:end="903:9">{<block_content pos:start="763:13" pos:end="901:13">

            <if_stmt pos:start="763:13" pos:end="765:22"><if pos:start="763:13" pos:end="765:22">if <condition pos:start="763:16" pos:end="763:26">(<expr pos:start="763:17" pos:end="763:25"><name pos:start="763:17" pos:end="763:25">q_pressed</name></expr>)</condition><block type="pseudo" pos:start="765:17" pos:end="765:22"><block_content pos:start="765:17" pos:end="765:22">

                <break pos:start="765:17" pos:end="765:22">break;</break></block_content></block></if></if_stmt>

            <comment type="block" pos:start="767:13" pos:end="767:45">/* read_key() returns 0 on EOF */</comment>

            <expr_stmt pos:start="769:13" pos:end="769:29"><expr pos:start="769:13" pos:end="769:28"><name pos:start="769:13" pos:end="769:15">key</name> <operator pos:start="769:17" pos:end="769:17">=</operator> <call pos:start="769:19" pos:end="769:28"><name pos:start="769:19" pos:end="769:26">read_key</name><argument_list pos:start="769:27" pos:end="769:28">()</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="771:13" pos:end="773:22"><if pos:start="771:13" pos:end="773:22">if <condition pos:start="771:16" pos:end="771:27">(<expr pos:start="771:17" pos:end="771:26"><name pos:start="771:17" pos:end="771:19">key</name> <operator pos:start="771:21" pos:end="771:22">==</operator> <literal type="char" pos:start="771:24" pos:end="771:26">'q'</literal></expr>)</condition><block type="pseudo" pos:start="773:17" pos:end="773:22"><block_content pos:start="773:17" pos:end="773:22">

                <break pos:start="773:17" pos:end="773:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="775:13" pos:end="775:38"><if pos:start="775:13" pos:end="775:38">if <condition pos:start="775:16" pos:end="775:27">(<expr pos:start="775:17" pos:end="775:26"><name pos:start="775:17" pos:end="775:19">key</name> <operator pos:start="775:21" pos:end="775:22">==</operator> <literal type="char" pos:start="775:24" pos:end="775:26">'+'</literal></expr>)</condition><block type="pseudo" pos:start="775:29" pos:end="775:38"><block_content pos:start="775:29" pos:end="775:38"> <expr_stmt pos:start="775:29" pos:end="775:38"><expr pos:start="775:29" pos:end="775:37"><name pos:start="775:29" pos:end="775:35">verbose</name><operator pos:start="775:36" pos:end="775:37">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="777:13" pos:end="777:38"><if pos:start="777:13" pos:end="777:38">if <condition pos:start="777:16" pos:end="777:27">(<expr pos:start="777:17" pos:end="777:26"><name pos:start="777:17" pos:end="777:19">key</name> <operator pos:start="777:21" pos:end="777:22">==</operator> <literal type="char" pos:start="777:24" pos:end="777:26">'-'</literal></expr>)</condition><block type="pseudo" pos:start="777:29" pos:end="777:38"><block_content pos:start="777:29" pos:end="777:38"> <expr_stmt pos:start="777:29" pos:end="777:38"><expr pos:start="777:29" pos:end="777:37"><name pos:start="777:29" pos:end="777:35">verbose</name><operator pos:start="777:36" pos:end="777:37">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="779:13" pos:end="779:45"><if pos:start="779:13" pos:end="779:45">if <condition pos:start="779:16" pos:end="779:27">(<expr pos:start="779:17" pos:end="779:26"><name pos:start="779:17" pos:end="779:19">key</name> <operator pos:start="779:21" pos:end="779:22">==</operator> <literal type="char" pos:start="779:24" pos:end="779:26">'s'</literal></expr>)</condition><block type="pseudo" pos:start="779:29" pos:end="779:45"><block_content pos:start="779:29" pos:end="779:45"> <expr_stmt pos:start="779:29" pos:end="779:45"><expr pos:start="779:29" pos:end="779:44"><name pos:start="779:29" pos:end="779:35">qp_hist</name>     <operator pos:start="779:41" pos:end="779:42">^=</operator> <literal type="number" pos:start="779:44" pos:end="779:44">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="781:13" pos:end="797:13"><if pos:start="781:13" pos:end="797:13">if <condition pos:start="781:16" pos:end="781:27">(<expr pos:start="781:17" pos:end="781:26"><name pos:start="781:17" pos:end="781:19">key</name> <operator pos:start="781:21" pos:end="781:22">==</operator> <literal type="char" pos:start="781:24" pos:end="781:26">'h'</literal></expr>)</condition><block pos:start="781:28" pos:end="797:13">{<block_content pos:start="783:17" pos:end="795:47">

                <if_stmt pos:start="783:17" pos:end="793:36"><if pos:start="783:17" pos:end="787:17">if <condition pos:start="783:20" pos:end="783:32">(<expr pos:start="783:21" pos:end="783:31"><name pos:start="783:21" pos:end="783:31">do_hex_dump</name></expr>)</condition><block pos:start="783:33" pos:end="787:17">{<block_content pos:start="785:21" pos:end="785:50">

                    <expr_stmt pos:start="785:21" pos:end="785:50"><expr pos:start="785:21" pos:end="785:49"><name pos:start="785:21" pos:end="785:31">do_hex_dump</name> <operator pos:start="785:33" pos:end="785:33">=</operator> <name pos:start="785:35" pos:end="785:45">do_pkt_dump</name> <operator pos:start="785:47" pos:end="785:47">=</operator> <literal type="number" pos:start="785:49" pos:end="785:49">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="787:19" pos:end="791:17">else if<condition pos:start="787:26" pos:end="787:38">(<expr pos:start="787:27" pos:end="787:37"><name pos:start="787:27" pos:end="787:37">do_pkt_dump</name></expr>)</condition><block pos:start="787:39" pos:end="791:17">{<block_content pos:start="789:21" pos:end="789:36">

                    <expr_stmt pos:start="789:21" pos:end="789:36"><expr pos:start="789:21" pos:end="789:35"><name pos:start="789:21" pos:end="789:31">do_hex_dump</name> <operator pos:start="789:33" pos:end="789:33">=</operator> <literal type="number" pos:start="789:35" pos:end="789:35">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="791:19" pos:end="793:36">else<block type="pseudo" pos:start="793:21" pos:end="793:36"><block_content pos:start="793:21" pos:end="793:36">

                    <expr_stmt pos:start="793:21" pos:end="793:36"><expr pos:start="793:21" pos:end="793:35"><name pos:start="793:21" pos:end="793:31">do_pkt_dump</name> <operator pos:start="793:33" pos:end="793:33">=</operator> <literal type="number" pos:start="793:35" pos:end="793:35">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="795:17" pos:end="795:47"><expr pos:start="795:17" pos:end="795:46"><call pos:start="795:17" pos:end="795:46"><name pos:start="795:17" pos:end="795:32">av_log_set_level</name><argument_list pos:start="795:33" pos:end="795:46">(<argument pos:start="795:34" pos:end="795:45"><expr pos:start="795:34" pos:end="795:45"><name pos:start="795:34" pos:end="795:45">AV_LOG_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="799:13" pos:end="839:13"><if pos:start="799:13" pos:end="839:13">if <condition pos:start="799:16" pos:end="799:41">(<expr pos:start="799:17" pos:end="799:40"><name pos:start="799:17" pos:end="799:19">key</name> <operator pos:start="799:21" pos:end="799:22">==</operator> <literal type="char" pos:start="799:24" pos:end="799:26">'c'</literal> <operator pos:start="799:28" pos:end="799:29">||</operator> <name pos:start="799:31" pos:end="799:33">key</name> <operator pos:start="799:35" pos:end="799:36">==</operator> <literal type="char" pos:start="799:38" pos:end="799:40">'C'</literal></expr>)</condition><block pos:start="799:42" pos:end="839:13">{<block_content pos:start="801:17" pos:end="837:17">

                <decl_stmt pos:start="801:17" pos:end="801:67"><decl pos:start="801:17" pos:end="801:30"><type pos:start="801:17" pos:end="801:20"><name pos:start="801:17" pos:end="801:20">char</name></type> <name pos:start="801:22" pos:end="801:30"><name pos:start="801:22" pos:end="801:24">ret</name><index pos:start="801:25" pos:end="801:30">[<expr pos:start="801:26" pos:end="801:29"><literal type="number" pos:start="801:26" pos:end="801:29">4096</literal></expr>]</index></name></decl>, <decl pos:start="801:33" pos:end="801:42"><type ref="prev" pos:start="801:17" pos:end="801:20"/><name pos:start="801:33" pos:end="801:42"><name pos:start="801:33" pos:end="801:38">target</name><index pos:start="801:39" pos:end="801:42">[<expr pos:start="801:40" pos:end="801:41"><literal type="number" pos:start="801:40" pos:end="801:41">64</literal></expr>]</index></name></decl>, <decl pos:start="801:45" pos:end="801:52"><type ref="prev" pos:start="801:17" pos:end="801:20"/><name pos:start="801:45" pos:end="801:52"><name pos:start="801:45" pos:end="801:47">cmd</name><index pos:start="801:48" pos:end="801:52">[<expr pos:start="801:49" pos:end="801:51"><literal type="number" pos:start="801:49" pos:end="801:51">256</literal></expr>]</index></name></decl>, <decl pos:start="801:55" pos:end="801:66"><type ref="prev" pos:start="801:17" pos:end="801:20"/><name pos:start="801:55" pos:end="801:62"><name pos:start="801:55" pos:end="801:57">arg</name><index pos:start="801:58" pos:end="801:62">[<expr pos:start="801:59" pos:end="801:61"><literal type="number" pos:start="801:59" pos:end="801:61">256</literal></expr>]</index></name><init pos:start="801:63" pos:end="801:66">=<expr pos:start="801:64" pos:end="801:66"><block pos:start="801:64" pos:end="801:66">{<expr pos:start="801:65" pos:end="801:65"><literal type="number" pos:start="801:65" pos:end="801:65">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="803:17" pos:end="803:26"><decl pos:start="803:17" pos:end="803:25"><type pos:start="803:17" pos:end="803:22"><name pos:start="803:17" pos:end="803:22">double</name></type> <name pos:start="803:24" pos:end="803:25">ts</name></decl>;</decl_stmt>

                <expr_stmt pos:start="805:17" pos:end="805:93"><expr pos:start="805:17" pos:end="805:92"><call pos:start="805:17" pos:end="805:92"><name pos:start="805:17" pos:end="805:23">fprintf</name><argument_list pos:start="805:24" pos:end="805:92">(<argument pos:start="805:25" pos:end="805:30"><expr pos:start="805:25" pos:end="805:30"><name pos:start="805:25" pos:end="805:30">stderr</name></expr></argument>, <argument pos:start="805:33" pos:end="805:91"><expr pos:start="805:33" pos:end="805:91"><literal type="string" pos:start="805:33" pos:end="805:91">"\nEnter command: &lt;target&gt; &lt;time&gt; &lt;command&gt;[ &lt;argument&gt;]\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="807:17" pos:end="837:17"><if pos:start="807:17" pos:end="833:17">if<condition pos:start="807:19" pos:end="807:131">(<expr pos:start="807:20" pos:end="807:130"><call pos:start="807:20" pos:end="807:48"><name pos:start="807:20" pos:end="807:24">scanf</name><argument_list pos:start="807:25" pos:end="807:48">(<argument pos:start="807:26" pos:end="807:42"><expr pos:start="807:26" pos:end="807:42"><literal type="string" pos:start="807:26" pos:end="807:42">"%4095[^\n\r]%*c"</literal></expr></argument>, <argument pos:start="807:45" pos:end="807:47"><expr pos:start="807:45" pos:end="807:47"><name pos:start="807:45" pos:end="807:47">ret</name></expr></argument>)</argument_list></call> <operator pos:start="807:50" pos:end="807:51">==</operator> <literal type="number" pos:start="807:53" pos:end="807:53">1</literal> <operator pos:start="807:55" pos:end="807:56">&amp;&amp;</operator> <call pos:start="807:58" pos:end="807:125"><name pos:start="807:58" pos:end="807:63">sscanf</name><argument_list pos:start="807:64" pos:end="807:125">(<argument pos:start="807:65" pos:end="807:67"><expr pos:start="807:65" pos:end="807:67"><name pos:start="807:65" pos:end="807:67">ret</name></expr></argument>, <argument pos:start="807:70" pos:end="807:101"><expr pos:start="807:70" pos:end="807:101"><literal type="string" pos:start="807:70" pos:end="807:101">"%63[^ ] %lf %255[^ ] %255[^\n]"</literal></expr></argument>, <argument pos:start="807:104" pos:end="807:109"><expr pos:start="807:104" pos:end="807:109"><name pos:start="807:104" pos:end="807:109">target</name></expr></argument>, <argument pos:start="807:112" pos:end="807:114"><expr pos:start="807:112" pos:end="807:114"><operator pos:start="807:112" pos:end="807:112">&amp;</operator><name pos:start="807:113" pos:end="807:114">ts</name></expr></argument>, <argument pos:start="807:117" pos:end="807:119"><expr pos:start="807:117" pos:end="807:119"><name pos:start="807:117" pos:end="807:119">cmd</name></expr></argument>, <argument pos:start="807:122" pos:end="807:124"><expr pos:start="807:122" pos:end="807:124"><name pos:start="807:122" pos:end="807:124">arg</name></expr></argument>)</argument_list></call> <operator pos:start="807:127" pos:end="807:128">&gt;=</operator> <literal type="number" pos:start="807:130" pos:end="807:130">3</literal></expr>)</condition><block pos:start="807:132" pos:end="833:17">{<block_content pos:start="809:21" pos:end="831:21">

                    <for pos:start="809:21" pos:end="831:21">for<control pos:start="809:24" pos:end="809:52">(<init pos:start="809:25" pos:end="809:28"><expr pos:start="809:25" pos:end="809:27"><name pos:start="809:25" pos:end="809:25">i</name><operator pos:start="809:26" pos:end="809:26">=</operator><literal type="number" pos:start="809:27" pos:end="809:27">0</literal></expr>;</init><condition pos:start="809:29" pos:end="809:48"><expr pos:start="809:29" pos:end="809:47"><name pos:start="809:29" pos:end="809:29">i</name><operator pos:start="809:30" pos:end="809:30">&lt;</operator><name pos:start="809:31" pos:end="809:47">nb_output_streams</name></expr>;</condition><incr pos:start="809:49" pos:end="809:51"><expr pos:start="809:49" pos:end="809:51"><name pos:start="809:49" pos:end="809:49">i</name><operator pos:start="809:50" pos:end="809:51">++</operator></expr></incr>)</control> <block pos:start="809:54" pos:end="831:21">{<block_content pos:start="811:25" pos:end="829:25">

                        <decl_stmt pos:start="811:25" pos:end="811:30"><decl pos:start="811:25" pos:end="811:29"><type pos:start="811:25" pos:end="811:27"><name pos:start="811:25" pos:end="811:27">int</name></type> <name pos:start="811:29" pos:end="811:29">r</name></decl>;</decl_stmt>

                        <expr_stmt pos:start="813:25" pos:end="813:49"><expr pos:start="813:25" pos:end="813:48"><name pos:start="813:25" pos:end="813:27">ost</name> <operator pos:start="813:29" pos:end="813:29">=</operator> <operator pos:start="813:31" pos:end="813:31">&amp;</operator><name pos:start="813:32" pos:end="813:48"><name pos:start="813:32" pos:end="813:45">output_streams</name><index pos:start="813:46" pos:end="813:48">[<expr pos:start="813:47" pos:end="813:47"><name pos:start="813:47" pos:end="813:47">i</name></expr>]</index></name></expr>;</expr_stmt>

                        <if_stmt pos:start="815:25" pos:end="829:25"><if pos:start="815:25" pos:end="829:25">if<condition pos:start="815:27" pos:end="815:38">(<expr pos:start="815:28" pos:end="815:37"><name pos:start="815:28" pos:end="815:37"><name pos:start="815:28" pos:end="815:30">ost</name><operator pos:start="815:31" pos:end="815:32">-&gt;</operator><name pos:start="815:33" pos:end="815:37">graph</name></name></expr>)</condition><block pos:start="815:39" pos:end="829:25">{<block_content pos:start="817:29" pos:end="827:29">

                            <if_stmt pos:start="817:29" pos:end="827:29"><if pos:start="817:29" pos:end="823:29">if<condition pos:start="817:31" pos:end="817:36">(<expr pos:start="817:32" pos:end="817:35"><name pos:start="817:32" pos:end="817:33">ts</name><operator pos:start="817:34" pos:end="817:34">&lt;</operator><literal type="number" pos:start="817:35" pos:end="817:35">0</literal></expr>)</condition><block pos:start="817:37" pos:end="823:29">{<block_content pos:start="819:33" pos:end="821:93">

                                <expr_stmt pos:start="819:33" pos:end="819:151"><expr pos:start="819:33" pos:end="819:150"><name pos:start="819:33" pos:end="819:33">r</name><operator pos:start="819:34" pos:end="819:34">=</operator> <call pos:start="819:36" pos:end="819:150"><name pos:start="819:36" pos:end="819:62">avfilter_graph_send_command</name><argument_list pos:start="819:63" pos:end="819:150">(<argument pos:start="819:64" pos:end="819:73"><expr pos:start="819:64" pos:end="819:73"><name pos:start="819:64" pos:end="819:73"><name pos:start="819:64" pos:end="819:66">ost</name><operator pos:start="819:67" pos:end="819:68">-&gt;</operator><name pos:start="819:69" pos:end="819:73">graph</name></name></expr></argument>, <argument pos:start="819:76" pos:end="819:81"><expr pos:start="819:76" pos:end="819:81"><name pos:start="819:76" pos:end="819:81">target</name></expr></argument>, <argument pos:start="819:84" pos:end="819:86"><expr pos:start="819:84" pos:end="819:86"><name pos:start="819:84" pos:end="819:86">cmd</name></expr></argument>, <argument pos:start="819:89" pos:end="819:91"><expr pos:start="819:89" pos:end="819:91"><name pos:start="819:89" pos:end="819:91">arg</name></expr></argument>, <argument pos:start="819:94" pos:end="819:96"><expr pos:start="819:94" pos:end="819:96"><name pos:start="819:94" pos:end="819:96">ret</name></expr></argument>, <argument pos:start="819:99" pos:end="819:109"><expr pos:start="819:99" pos:end="819:109"><sizeof pos:start="819:99" pos:end="819:109">sizeof<argument_list pos:start="819:105" pos:end="819:109">(<argument pos:start="819:106" pos:end="819:108"><expr pos:start="819:106" pos:end="819:108"><name pos:start="819:106" pos:end="819:108">ret</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="819:112" pos:end="819:149"><expr pos:start="819:112" pos:end="819:149"><ternary pos:start="819:112" pos:end="819:149"><condition pos:start="819:112" pos:end="819:123"><expr pos:start="819:112" pos:end="819:121"><name pos:start="819:112" pos:end="819:114">key</name> <operator pos:start="819:116" pos:end="819:117">==</operator> <literal type="char" pos:start="819:119" pos:end="819:121">'c'</literal></expr> ?</condition><then pos:start="819:125" pos:end="819:145"> <expr pos:start="819:125" pos:end="819:145"><name pos:start="819:125" pos:end="819:145">AVFILTER_CMD_FLAG_ONE</name></expr> </then><else pos:start="819:147" pos:end="819:149">: <expr pos:start="819:149" pos:end="819:149"><literal type="number" pos:start="819:149" pos:end="819:149">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="821:33" pos:end="821:93"><expr pos:start="821:33" pos:end="821:92"><call pos:start="821:33" pos:end="821:92"><name pos:start="821:33" pos:end="821:39">fprintf</name><argument_list pos:start="821:40" pos:end="821:92">(<argument pos:start="821:41" pos:end="821:46"><expr pos:start="821:41" pos:end="821:46"><name pos:start="821:41" pos:end="821:46">stderr</name></expr></argument>, <argument pos:start="821:49" pos:end="821:80"><expr pos:start="821:49" pos:end="821:80"><literal type="string" pos:start="821:49" pos:end="821:80">"Command reply for %d: %d, %s\n"</literal></expr></argument>, <argument pos:start="821:83" pos:end="821:83"><expr pos:start="821:83" pos:end="821:83"><name pos:start="821:83" pos:end="821:83">i</name></expr></argument>, <argument pos:start="821:86" pos:end="821:86"><expr pos:start="821:86" pos:end="821:86"><name pos:start="821:86" pos:end="821:86">r</name></expr></argument>, <argument pos:start="821:89" pos:end="821:91"><expr pos:start="821:89" pos:end="821:91"><name pos:start="821:89" pos:end="821:91">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if><else pos:start="823:30" pos:end="827:29">else<block pos:start="823:34" pos:end="827:29">{<block_content pos:start="825:33" pos:end="825:101">

                                <expr_stmt pos:start="825:33" pos:end="825:101"><expr pos:start="825:33" pos:end="825:100"><name pos:start="825:33" pos:end="825:33">r</name><operator pos:start="825:34" pos:end="825:34">=</operator> <call pos:start="825:36" pos:end="825:100"><name pos:start="825:36" pos:end="825:63">avfilter_graph_queue_command</name><argument_list pos:start="825:64" pos:end="825:100">(<argument pos:start="825:65" pos:end="825:74"><expr pos:start="825:65" pos:end="825:74"><name pos:start="825:65" pos:end="825:74"><name pos:start="825:65" pos:end="825:67">ost</name><operator pos:start="825:68" pos:end="825:69">-&gt;</operator><name pos:start="825:70" pos:end="825:74">graph</name></name></expr></argument>, <argument pos:start="825:77" pos:end="825:82"><expr pos:start="825:77" pos:end="825:82"><name pos:start="825:77" pos:end="825:82">target</name></expr></argument>, <argument pos:start="825:85" pos:end="825:87"><expr pos:start="825:85" pos:end="825:87"><name pos:start="825:85" pos:end="825:87">cmd</name></expr></argument>, <argument pos:start="825:90" pos:end="825:92"><expr pos:start="825:90" pos:end="825:92"><name pos:start="825:90" pos:end="825:92">arg</name></expr></argument>, <argument pos:start="825:95" pos:end="825:95"><expr pos:start="825:95" pos:end="825:95"><literal type="number" pos:start="825:95" pos:end="825:95">0</literal></expr></argument>, <argument pos:start="825:98" pos:end="825:99"><expr pos:start="825:98" pos:end="825:99"><name pos:start="825:98" pos:end="825:99">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if><else pos:start="833:18" pos:end="837:17">else<block pos:start="833:22" pos:end="837:17">{<block_content pos:start="835:21" pos:end="835:53">

                    <expr_stmt pos:start="835:21" pos:end="835:53"><expr pos:start="835:21" pos:end="835:52"><call pos:start="835:21" pos:end="835:52"><name pos:start="835:21" pos:end="835:27">fprintf</name><argument_list pos:start="835:28" pos:end="835:52">(<argument pos:start="835:29" pos:end="835:34"><expr pos:start="835:29" pos:end="835:34"><name pos:start="835:29" pos:end="835:34">stderr</name></expr></argument>, <argument pos:start="835:37" pos:end="835:51"><expr pos:start="835:37" pos:end="835:51"><literal type="string" pos:start="835:37" pos:end="835:51">"Parse error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="841:13" pos:end="877:13"><if pos:start="841:13" pos:end="877:13">if <condition pos:start="841:16" pos:end="841:41">(<expr pos:start="841:17" pos:end="841:40"><name pos:start="841:17" pos:end="841:19">key</name> <operator pos:start="841:21" pos:end="841:22">==</operator> <literal type="char" pos:start="841:24" pos:end="841:26">'d'</literal> <operator pos:start="841:28" pos:end="841:29">||</operator> <name pos:start="841:31" pos:end="841:33">key</name> <operator pos:start="841:35" pos:end="841:36">==</operator> <literal type="char" pos:start="841:38" pos:end="841:40">'D'</literal></expr>)</condition><block pos:start="841:42" pos:end="877:13">{<block_content pos:start="843:17" pos:end="875:52">

                <decl_stmt pos:start="843:17" pos:end="843:28"><decl pos:start="843:17" pos:end="843:27"><type pos:start="843:17" pos:end="843:19"><name pos:start="843:17" pos:end="843:19">int</name></type> <name pos:start="843:21" pos:end="843:25">debug</name><init pos:start="843:26" pos:end="843:27">=<expr pos:start="843:27" pos:end="843:27"><literal type="number" pos:start="843:27" pos:end="843:27">0</literal></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="845:17" pos:end="857:40"><if pos:start="845:17" pos:end="855:17">if<condition pos:start="845:19" pos:end="845:30">(<expr pos:start="845:20" pos:end="845:29"><name pos:start="845:20" pos:end="845:22">key</name> <operator pos:start="845:24" pos:end="845:25">==</operator> <literal type="char" pos:start="845:27" pos:end="845:29">'D'</literal></expr>)</condition> <block pos:start="845:32" pos:end="855:17">{<block_content pos:start="847:21" pos:end="853:39">

                    <expr_stmt pos:start="847:21" pos:end="847:65"><expr pos:start="847:21" pos:end="847:64"><name pos:start="847:21" pos:end="847:25">debug</name> <operator pos:start="847:27" pos:end="847:27">=</operator> <name pos:start="847:29" pos:end="847:44"><name pos:start="847:29" pos:end="847:41">input_streams</name><index pos:start="847:42" pos:end="847:44">[<expr pos:start="847:43" pos:end="847:43"><literal type="number" pos:start="847:43" pos:end="847:43">0</literal></expr>]</index></name><operator pos:start="847:45" pos:end="847:45">.</operator><name pos:start="847:46" pos:end="847:61"><name pos:start="847:46" pos:end="847:47">st</name><operator pos:start="847:48" pos:end="847:49">-&gt;</operator><name pos:start="847:50" pos:end="847:54">codec</name><operator pos:start="847:55" pos:end="847:56">-&gt;</operator><name pos:start="847:57" pos:end="847:61">debug</name></name><operator pos:start="847:62" pos:end="847:63">&lt;&lt;</operator><literal type="number" pos:start="847:64" pos:end="847:64">1</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="849:21" pos:end="849:41"><if pos:start="849:21" pos:end="849:41">if<condition pos:start="849:23" pos:end="849:30">(<expr pos:start="849:24" pos:end="849:29"><operator pos:start="849:24" pos:end="849:24">!</operator><name pos:start="849:25" pos:end="849:29">debug</name></expr>)</condition><block type="pseudo" pos:start="849:32" pos:end="849:41"><block_content pos:start="849:32" pos:end="849:41"> <expr_stmt pos:start="849:32" pos:end="849:41"><expr pos:start="849:32" pos:end="849:40"><name pos:start="849:32" pos:end="849:36">debug</name> <operator pos:start="849:38" pos:end="849:38">=</operator> <literal type="number" pos:start="849:40" pos:end="849:40">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <while pos:start="851:21" pos:end="853:39">while<condition pos:start="851:26" pos:end="851:92">(<expr pos:start="851:27" pos:end="851:91"><name pos:start="851:27" pos:end="851:31">debug</name> <operator pos:start="851:33" pos:end="851:33">&amp;</operator> <operator pos:start="851:35" pos:end="851:35">(</operator><name pos:start="851:36" pos:end="851:53">FF_DEBUG_DCT_COEFF</name><operator pos:start="851:54" pos:end="851:54">|</operator><name pos:start="851:55" pos:end="851:69">FF_DEBUG_VIS_QP</name><operator pos:start="851:70" pos:end="851:70">|</operator><name pos:start="851:71" pos:end="851:90">FF_DEBUG_VIS_MB_TYPE</name><operator pos:start="851:91" pos:end="851:91">)</operator></expr>)</condition><block type="pseudo" pos:start="853:25" pos:end="853:39"><block_content pos:start="853:25" pos:end="853:39"> <comment type="line" pos:start="851:94" pos:end="851:124">//unsupported, would just crash</comment>

                        <expr_stmt pos:start="853:25" pos:end="853:39"><expr pos:start="853:25" pos:end="853:38"><name pos:start="853:25" pos:end="853:29">debug</name> <operator pos:start="853:31" pos:end="853:32">+=</operator> <name pos:start="853:34" pos:end="853:38">debug</name></expr>;</expr_stmt></block_content></block></while>

                </block_content>}</block></if><else pos:start="855:18" pos:end="857:40">else<block type="pseudo" pos:start="857:21" pos:end="857:40"><block_content pos:start="857:21" pos:end="857:40">

                    <expr_stmt pos:start="857:21" pos:end="857:40"><expr pos:start="857:21" pos:end="857:39"><call pos:start="857:21" pos:end="857:39"><name pos:start="857:21" pos:end="857:25">scanf</name><argument_list pos:start="857:26" pos:end="857:39">(<argument pos:start="857:27" pos:end="857:30"><expr pos:start="857:27" pos:end="857:30"><literal type="string" pos:start="857:27" pos:end="857:30">"%d"</literal></expr></argument>, <argument pos:start="857:33" pos:end="857:38"><expr pos:start="857:33" pos:end="857:38"><operator pos:start="857:33" pos:end="857:33">&amp;</operator><name pos:start="857:34" pos:end="857:38">debug</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <for pos:start="859:17" pos:end="863:17">for<control pos:start="859:20" pos:end="859:47">(<init pos:start="859:21" pos:end="859:24"><expr pos:start="859:21" pos:end="859:23"><name pos:start="859:21" pos:end="859:21">i</name><operator pos:start="859:22" pos:end="859:22">=</operator><literal type="number" pos:start="859:23" pos:end="859:23">0</literal></expr>;</init><condition pos:start="859:25" pos:end="859:43"><expr pos:start="859:25" pos:end="859:42"><name pos:start="859:25" pos:end="859:25">i</name><operator pos:start="859:26" pos:end="859:26">&lt;</operator><name pos:start="859:27" pos:end="859:42">nb_input_streams</name></expr>;</condition><incr pos:start="859:44" pos:end="859:46"><expr pos:start="859:44" pos:end="859:46"><name pos:start="859:44" pos:end="859:44">i</name><operator pos:start="859:45" pos:end="859:46">++</operator></expr></incr>)</control> <block pos:start="859:49" pos:end="863:17">{<block_content pos:start="861:21" pos:end="861:62">

                    <expr_stmt pos:start="861:21" pos:end="861:62"><expr pos:start="861:21" pos:end="861:61"><name pos:start="861:21" pos:end="861:36"><name pos:start="861:21" pos:end="861:33">input_streams</name><index pos:start="861:34" pos:end="861:36">[<expr pos:start="861:35" pos:end="861:35"><name pos:start="861:35" pos:end="861:35">i</name></expr>]</index></name><operator pos:start="861:37" pos:end="861:37">.</operator><name pos:start="861:38" pos:end="861:53"><name pos:start="861:38" pos:end="861:39">st</name><operator pos:start="861:40" pos:end="861:41">-&gt;</operator><name pos:start="861:42" pos:end="861:46">codec</name><operator pos:start="861:47" pos:end="861:48">-&gt;</operator><name pos:start="861:49" pos:end="861:53">debug</name></name> <operator pos:start="861:55" pos:end="861:55">=</operator> <name pos:start="861:57" pos:end="861:61">debug</name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <for pos:start="865:17" pos:end="871:17">for<control pos:start="865:20" pos:end="865:48">(<init pos:start="865:21" pos:end="865:24"><expr pos:start="865:21" pos:end="865:23"><name pos:start="865:21" pos:end="865:21">i</name><operator pos:start="865:22" pos:end="865:22">=</operator><literal type="number" pos:start="865:23" pos:end="865:23">0</literal></expr>;</init><condition pos:start="865:25" pos:end="865:44"><expr pos:start="865:25" pos:end="865:43"><name pos:start="865:25" pos:end="865:25">i</name><operator pos:start="865:26" pos:end="865:26">&lt;</operator><name pos:start="865:27" pos:end="865:43">nb_output_streams</name></expr>;</condition><incr pos:start="865:45" pos:end="865:47"><expr pos:start="865:45" pos:end="865:47"><name pos:start="865:45" pos:end="865:45">i</name><operator pos:start="865:46" pos:end="865:47">++</operator></expr></incr>)</control> <block pos:start="865:50" pos:end="871:17">{<block_content pos:start="867:21" pos:end="869:50">

                    <expr_stmt pos:start="867:21" pos:end="867:45"><expr pos:start="867:21" pos:end="867:44"><name pos:start="867:21" pos:end="867:23">ost</name> <operator pos:start="867:25" pos:end="867:25">=</operator> <operator pos:start="867:27" pos:end="867:27">&amp;</operator><name pos:start="867:28" pos:end="867:44"><name pos:start="867:28" pos:end="867:41">output_streams</name><index pos:start="867:42" pos:end="867:44">[<expr pos:start="867:43" pos:end="867:43"><name pos:start="867:43" pos:end="867:43">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="869:21" pos:end="869:50"><expr pos:start="869:21" pos:end="869:49"><name pos:start="869:21" pos:end="869:41"><name pos:start="869:21" pos:end="869:23">ost</name><operator pos:start="869:24" pos:end="869:25">-&gt;</operator><name pos:start="869:26" pos:end="869:27">st</name><operator pos:start="869:28" pos:end="869:29">-&gt;</operator><name pos:start="869:30" pos:end="869:34">codec</name><operator pos:start="869:35" pos:end="869:36">-&gt;</operator><name pos:start="869:37" pos:end="869:41">debug</name></name> <operator pos:start="869:43" pos:end="869:43">=</operator> <name pos:start="869:45" pos:end="869:49">debug</name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <if_stmt pos:start="873:17" pos:end="873:57"><if pos:start="873:17" pos:end="873:57">if<condition pos:start="873:19" pos:end="873:25">(<expr pos:start="873:20" pos:end="873:24"><name pos:start="873:20" pos:end="873:24">debug</name></expr>)</condition><block type="pseudo" pos:start="873:27" pos:end="873:57"><block_content pos:start="873:27" pos:end="873:57"> <expr_stmt pos:start="873:27" pos:end="873:57"><expr pos:start="873:27" pos:end="873:56"><call pos:start="873:27" pos:end="873:56"><name pos:start="873:27" pos:end="873:42">av_log_set_level</name><argument_list pos:start="873:43" pos:end="873:56">(<argument pos:start="873:44" pos:end="873:55"><expr pos:start="873:44" pos:end="873:55"><name pos:start="873:44" pos:end="873:55">AV_LOG_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="875:17" pos:end="875:52"><expr pos:start="875:17" pos:end="875:51"><call pos:start="875:17" pos:end="875:51"><name pos:start="875:17" pos:end="875:23">fprintf</name><argument_list pos:start="875:24" pos:end="875:51">(<argument pos:start="875:25" pos:end="875:30"><expr pos:start="875:25" pos:end="875:30"><name pos:start="875:25" pos:end="875:30">stderr</name></expr></argument>,<argument pos:start="875:32" pos:end="875:43"><expr pos:start="875:32" pos:end="875:43"><literal type="string" pos:start="875:32" pos:end="875:43">"debug=%d\n"</literal></expr></argument>, <argument pos:start="875:46" pos:end="875:50"><expr pos:start="875:46" pos:end="875:50"><name pos:start="875:46" pos:end="875:50">debug</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="879:13" pos:end="901:13"><if pos:start="879:13" pos:end="901:13">if <condition pos:start="879:16" pos:end="879:27">(<expr pos:start="879:17" pos:end="879:26"><name pos:start="879:17" pos:end="879:19">key</name> <operator pos:start="879:21" pos:end="879:22">==</operator> <literal type="char" pos:start="879:24" pos:end="879:26">'?'</literal></expr>)</condition><block pos:start="879:28" pos:end="901:13">{<block_content pos:start="881:17" pos:end="899:18">

                <expr_stmt pos:start="881:17" pos:end="899:18"><expr pos:start="881:17" pos:end="899:17"><call pos:start="881:17" pos:end="899:17"><name pos:start="881:17" pos:end="881:23">fprintf</name><argument_list pos:start="881:24" pos:end="899:17">(<argument pos:start="881:25" pos:end="881:30"><expr pos:start="881:25" pos:end="881:30"><name pos:start="881:25" pos:end="881:30">stderr</name></expr></argument>, <argument pos:start="881:33" pos:end="897:60"><expr pos:start="881:33" pos:end="897:60"><literal type="string" pos:start="881:33" pos:end="881:51">"key    function\n"</literal>

                                <literal type="string" pos:start="883:33" pos:end="883:57">"?      show this help\n"</literal>

                                <literal type="string" pos:start="885:33" pos:end="885:61">"+      increase verbosity\n"</literal>

                                <literal type="string" pos:start="887:33" pos:end="887:61">"-      decrease verbosity\n"</literal>

                                <literal type="string" pos:start="889:33" pos:end="889:70">"c      Send command to filtergraph\n"</literal>

                                <literal type="string" pos:start="891:33" pos:end="891:78">"D      cycle through available debug modes\n"</literal>

                                <literal type="string" pos:start="893:33" pos:end="893:95">"h      dump packets/hex press to cycle through the 3 states\n"</literal>

                                <literal type="string" pos:start="895:33" pos:end="895:47">"q      quit\n"</literal>

                                <literal type="string" pos:start="897:33" pos:end="897:60">"s      Show QP histogram\n"</literal></expr></argument>

                )</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="907:9" pos:end="909:33">/* select the stream that we must read now by looking at the

           smallest output pts */</comment>

        <expr_stmt pos:start="911:9" pos:end="911:24"><expr pos:start="911:9" pos:end="911:23"><name pos:start="911:9" pos:end="911:18">file_index</name> <operator pos:start="911:20" pos:end="911:20">=</operator> <operator pos:start="911:22" pos:end="911:22">-</operator><literal type="number" pos:start="911:23" pos:end="911:23">1</literal></expr>;</expr_stmt>

        <for pos:start="913:9" pos:end="967:9">for <control pos:start="913:13" pos:end="913:47">(<init pos:start="913:14" pos:end="913:19"><expr pos:start="913:14" pos:end="913:18"><name pos:start="913:14" pos:end="913:14">i</name> <operator pos:start="913:16" pos:end="913:16">=</operator> <literal type="number" pos:start="913:18" pos:end="913:18">0</literal></expr>;</init> <condition pos:start="913:21" pos:end="913:42"><expr pos:start="913:21" pos:end="913:41"><name pos:start="913:21" pos:end="913:21">i</name> <operator pos:start="913:23" pos:end="913:23">&lt;</operator> <name pos:start="913:25" pos:end="913:41">nb_output_streams</name></expr>;</condition> <incr pos:start="913:44" pos:end="913:46"><expr pos:start="913:44" pos:end="913:46"><name pos:start="913:44" pos:end="913:44">i</name><operator pos:start="913:45" pos:end="913:46">++</operator></expr></incr>)</control> <block pos:start="913:49" pos:end="967:9">{<block_content pos:start="915:13" pos:end="965:13">

            <decl_stmt pos:start="915:13" pos:end="915:27"><decl pos:start="915:13" pos:end="915:26"><type pos:start="915:13" pos:end="915:24"><name pos:start="915:13" pos:end="915:22">OutputFile</name> <modifier pos:start="915:24" pos:end="915:24">*</modifier></type><name pos:start="915:25" pos:end="915:26">of</name></decl>;</decl_stmt>

            <decl_stmt pos:start="917:13" pos:end="917:25"><decl pos:start="917:13" pos:end="917:24"><type pos:start="917:13" pos:end="917:19"><name pos:start="917:13" pos:end="917:19">int64_t</name></type> <name pos:start="917:21" pos:end="917:24">ipts</name></decl>;</decl_stmt>

            <decl_stmt pos:start="919:13" pos:end="919:25"><decl pos:start="919:13" pos:end="919:24"><type pos:start="919:13" pos:end="919:18"><name pos:start="919:13" pos:end="919:18">double</name></type>  <name pos:start="919:21" pos:end="919:24">opts</name></decl>;</decl_stmt>

            <expr_stmt pos:start="921:13" pos:end="921:37"><expr pos:start="921:13" pos:end="921:36"><name pos:start="921:13" pos:end="921:15">ost</name> <operator pos:start="921:17" pos:end="921:17">=</operator> <operator pos:start="921:19" pos:end="921:19">&amp;</operator><name pos:start="921:20" pos:end="921:36"><name pos:start="921:20" pos:end="921:33">output_streams</name><index pos:start="921:34" pos:end="921:36">[<expr pos:start="921:35" pos:end="921:35"><name pos:start="921:35" pos:end="921:35">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="923:13" pos:end="923:48"><expr pos:start="923:13" pos:end="923:47"><name pos:start="923:13" pos:end="923:14">of</name> <operator pos:start="923:16" pos:end="923:16">=</operator> <operator pos:start="923:18" pos:end="923:18">&amp;</operator><name pos:start="923:19" pos:end="923:47"><name pos:start="923:19" pos:end="923:30">output_files</name><index pos:start="923:31" pos:end="923:47">[<expr pos:start="923:32" pos:end="923:46"><name pos:start="923:32" pos:end="923:46"><name pos:start="923:32" pos:end="923:34">ost</name><operator pos:start="923:35" pos:end="923:36">-&gt;</operator><name pos:start="923:37" pos:end="923:46">file_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="925:13" pos:end="925:51"><expr pos:start="925:13" pos:end="925:50"><name pos:start="925:13" pos:end="925:14">os</name> <operator pos:start="925:16" pos:end="925:16">=</operator> <name pos:start="925:18" pos:end="925:46"><name pos:start="925:18" pos:end="925:29">output_files</name><index pos:start="925:30" pos:end="925:46">[<expr pos:start="925:31" pos:end="925:45"><name pos:start="925:31" pos:end="925:45"><name pos:start="925:31" pos:end="925:33">ost</name><operator pos:start="925:34" pos:end="925:35">-&gt;</operator><name pos:start="925:36" pos:end="925:45">file_index</name></name></expr>]</index></name><operator pos:start="925:47" pos:end="925:47">.</operator><name pos:start="925:48" pos:end="925:50">ctx</name></expr>;</expr_stmt>

            <expr_stmt pos:start="927:13" pos:end="927:52"><expr pos:start="927:13" pos:end="927:51"><name pos:start="927:13" pos:end="927:15">ist</name> <operator pos:start="927:17" pos:end="927:17">=</operator> <operator pos:start="927:19" pos:end="927:19">&amp;</operator><name pos:start="927:20" pos:end="927:51"><name pos:start="927:20" pos:end="927:32">input_streams</name><index pos:start="927:33" pos:end="927:51">[<expr pos:start="927:34" pos:end="927:50"><name pos:start="927:34" pos:end="927:50"><name pos:start="927:34" pos:end="927:36">ost</name><operator pos:start="927:37" pos:end="927:38">-&gt;</operator><name pos:start="927:39" pos:end="927:50">source_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="929:13" pos:end="933:25"><if pos:start="929:13" pos:end="933:25">if <condition pos:start="929:16" pos:end="931:68">(<expr pos:start="929:17" pos:end="931:67"><name pos:start="929:17" pos:end="929:43"><name pos:start="929:17" pos:end="929:19">ost</name><operator pos:start="929:20" pos:end="929:21">-&gt;</operator><name pos:start="929:22" pos:end="929:43">is_past_recording_time</name></name> <operator pos:start="929:45" pos:end="929:46">||</operator> <name pos:start="929:48" pos:end="929:73"><name pos:start="929:48" pos:end="929:56">no_packet</name><index pos:start="929:57" pos:end="929:73">[<expr pos:start="929:58" pos:end="929:72"><name pos:start="929:58" pos:end="929:72"><name pos:start="929:58" pos:end="929:60">ist</name><operator pos:start="929:61" pos:end="929:62">-&gt;</operator><name pos:start="929:63" pos:end="929:72">file_index</name></name></expr>]</index></name> <operator pos:start="929:75" pos:end="929:76">||</operator>

                <operator pos:start="931:17" pos:end="931:17">(</operator><name pos:start="931:18" pos:end="931:23"><name pos:start="931:18" pos:end="931:19">os</name><operator pos:start="931:20" pos:end="931:21">-&gt;</operator><name pos:start="931:22" pos:end="931:23">pb</name></name> <operator pos:start="931:25" pos:end="931:26">&amp;&amp;</operator> <call pos:start="931:28" pos:end="931:44"><name pos:start="931:28" pos:end="931:36">avio_tell</name><argument_list pos:start="931:37" pos:end="931:44">(<argument pos:start="931:38" pos:end="931:43"><expr pos:start="931:38" pos:end="931:43"><name pos:start="931:38" pos:end="931:43"><name pos:start="931:38" pos:end="931:39">os</name><operator pos:start="931:40" pos:end="931:41">-&gt;</operator><name pos:start="931:42" pos:end="931:43">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="931:46" pos:end="931:47">&gt;=</operator> <name pos:start="931:49" pos:end="931:66"><name pos:start="931:49" pos:end="931:50">of</name><operator pos:start="931:51" pos:end="931:52">-&gt;</operator><name pos:start="931:53" pos:end="931:66">limit_filesize</name></name><operator pos:start="931:67" pos:end="931:67">)</operator></expr>)</condition><block type="pseudo" pos:start="933:17" pos:end="933:25"><block_content pos:start="933:17" pos:end="933:25">

                <continue pos:start="933:17" pos:end="933:25">continue;</continue></block_content></block></if></if_stmt>

            <expr_stmt pos:start="935:13" pos:end="935:65"><expr pos:start="935:13" pos:end="935:64"><name pos:start="935:13" pos:end="935:16">opts</name> <operator pos:start="935:18" pos:end="935:18">=</operator> <name pos:start="935:20" pos:end="935:35"><name pos:start="935:20" pos:end="935:22">ost</name><operator pos:start="935:23" pos:end="935:24">-&gt;</operator><name pos:start="935:25" pos:end="935:26">st</name><operator pos:start="935:27" pos:end="935:28">-&gt;</operator><name pos:start="935:29" pos:end="935:31">pts</name><operator pos:start="935:32" pos:end="935:32">.</operator><name pos:start="935:33" pos:end="935:35">val</name></name> <operator pos:start="935:37" pos:end="935:37">*</operator> <call pos:start="935:39" pos:end="935:64"><name pos:start="935:39" pos:end="935:44">av_q2d</name><argument_list pos:start="935:45" pos:end="935:64">(<argument pos:start="935:46" pos:end="935:63"><expr pos:start="935:46" pos:end="935:63"><name pos:start="935:46" pos:end="935:63"><name pos:start="935:46" pos:end="935:48">ost</name><operator pos:start="935:49" pos:end="935:50">-&gt;</operator><name pos:start="935:51" pos:end="935:52">st</name><operator pos:start="935:53" pos:end="935:54">-&gt;</operator><name pos:start="935:55" pos:end="935:63">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="937:13" pos:end="937:28"><expr pos:start="937:13" pos:end="937:27"><name pos:start="937:13" pos:end="937:16">ipts</name> <operator pos:start="937:18" pos:end="937:18">=</operator> <name pos:start="937:20" pos:end="937:27"><name pos:start="937:20" pos:end="937:22">ist</name><operator pos:start="937:23" pos:end="937:24">-&gt;</operator><name pos:start="937:25" pos:end="937:27">pts</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="939:13" pos:end="957:13"><if pos:start="939:13" pos:end="957:13">if <condition pos:start="939:16" pos:end="939:58">(<expr pos:start="939:17" pos:end="939:57"><operator pos:start="939:17" pos:end="939:17">!</operator><name pos:start="939:18" pos:end="939:45"><name pos:start="939:18" pos:end="939:28">input_files</name><index pos:start="939:29" pos:end="939:45">[<expr pos:start="939:30" pos:end="939:44"><name pos:start="939:30" pos:end="939:44"><name pos:start="939:30" pos:end="939:32">ist</name><operator pos:start="939:33" pos:end="939:34">-&gt;</operator><name pos:start="939:35" pos:end="939:44">file_index</name></name></expr>]</index></name><operator pos:start="939:46" pos:end="939:46">.</operator><name pos:start="939:47" pos:end="939:57">eof_reached</name></expr>)</condition><block pos:start="939:59" pos:end="957:13">{<block_content pos:start="941:17" pos:end="955:17">

                <if_stmt pos:start="941:17" pos:end="947:17"><if pos:start="941:17" pos:end="947:17">if<condition pos:start="941:19" pos:end="941:35">(<expr pos:start="941:20" pos:end="941:34"><name pos:start="941:20" pos:end="941:23">ipts</name> <operator pos:start="941:25" pos:end="941:25">&lt;</operator> <name pos:start="941:27" pos:end="941:34">ipts_min</name></expr>)</condition> <block pos:start="941:37" pos:end="947:17">{<block_content pos:start="943:21" pos:end="945:65">

                    <expr_stmt pos:start="943:21" pos:end="943:36"><expr pos:start="943:21" pos:end="943:35"><name pos:start="943:21" pos:end="943:28">ipts_min</name> <operator pos:start="943:30" pos:end="943:30">=</operator> <name pos:start="943:32" pos:end="943:35">ipts</name></expr>;</expr_stmt>

                    <if_stmt pos:start="945:21" pos:end="945:65"><if pos:start="945:21" pos:end="945:65">if<condition pos:start="945:23" pos:end="945:35">(<expr pos:start="945:24" pos:end="945:33"><name pos:start="945:24" pos:end="945:33">input_sync</name></expr> )</condition><block type="pseudo" pos:start="945:37" pos:end="945:65"><block_content pos:start="945:37" pos:end="945:65"> <expr_stmt pos:start="945:37" pos:end="945:65"><expr pos:start="945:37" pos:end="945:64"><name pos:start="945:37" pos:end="945:46">file_index</name> <operator pos:start="945:48" pos:end="945:48">=</operator> <name pos:start="945:50" pos:end="945:64"><name pos:start="945:50" pos:end="945:52">ist</name><operator pos:start="945:53" pos:end="945:54">-&gt;</operator><name pos:start="945:55" pos:end="945:64">file_index</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="949:17" pos:end="955:17"><if pos:start="949:17" pos:end="955:17">if<condition pos:start="949:19" pos:end="949:35">(<expr pos:start="949:20" pos:end="949:34"><name pos:start="949:20" pos:end="949:23">opts</name> <operator pos:start="949:25" pos:end="949:25">&lt;</operator> <name pos:start="949:27" pos:end="949:34">opts_min</name></expr>)</condition> <block pos:start="949:37" pos:end="955:17">{<block_content pos:start="951:21" pos:end="953:65">

                    <expr_stmt pos:start="951:21" pos:end="951:36"><expr pos:start="951:21" pos:end="951:35"><name pos:start="951:21" pos:end="951:28">opts_min</name> <operator pos:start="951:30" pos:end="951:30">=</operator> <name pos:start="951:32" pos:end="951:35">opts</name></expr>;</expr_stmt>

                    <if_stmt pos:start="953:21" pos:end="953:65"><if pos:start="953:21" pos:end="953:65">if<condition pos:start="953:23" pos:end="953:35">(<expr pos:start="953:24" pos:end="953:34"><operator pos:start="953:24" pos:end="953:24">!</operator><name pos:start="953:25" pos:end="953:34">input_sync</name></expr>)</condition><block type="pseudo" pos:start="953:37" pos:end="953:65"><block_content pos:start="953:37" pos:end="953:65"> <expr_stmt pos:start="953:37" pos:end="953:65"><expr pos:start="953:37" pos:end="953:64"><name pos:start="953:37" pos:end="953:46">file_index</name> <operator pos:start="953:48" pos:end="953:48">=</operator> <name pos:start="953:50" pos:end="953:64"><name pos:start="953:50" pos:end="953:52">ist</name><operator pos:start="953:53" pos:end="953:54">-&gt;</operator><name pos:start="953:55" pos:end="953:64">file_index</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="959:13" pos:end="965:13"><if pos:start="959:13" pos:end="965:13">if<condition pos:start="959:15" pos:end="959:75">(<expr pos:start="959:16" pos:end="959:74"><name pos:start="959:16" pos:end="959:32"><name pos:start="959:16" pos:end="959:18">ost</name><operator pos:start="959:19" pos:end="959:20">-&gt;</operator><name pos:start="959:21" pos:end="959:32">frame_number</name></name> <operator pos:start="959:34" pos:end="959:35">&gt;=</operator> <name pos:start="959:37" pos:end="959:74"><name pos:start="959:37" pos:end="959:46">max_frames</name><index pos:start="959:47" pos:end="959:74">[<expr pos:start="959:48" pos:end="959:73"><name pos:start="959:48" pos:end="959:73"><name pos:start="959:48" pos:end="959:50">ost</name><operator pos:start="959:51" pos:end="959:52">-&gt;</operator><name pos:start="959:53" pos:end="959:54">st</name><operator pos:start="959:55" pos:end="959:56">-&gt;</operator><name pos:start="959:57" pos:end="959:61">codec</name><operator pos:start="959:62" pos:end="959:63">-&gt;</operator><name pos:start="959:64" pos:end="959:73">codec_type</name></name></expr>]</index></name></expr>)</condition><block pos:start="959:76" pos:end="965:13">{<block_content pos:start="961:17" pos:end="963:22">

                <expr_stmt pos:start="961:17" pos:end="961:31"><expr pos:start="961:17" pos:end="961:30"><name pos:start="961:17" pos:end="961:26">file_index</name><operator pos:start="961:27" pos:end="961:27">=</operator> <operator pos:start="961:29" pos:end="961:29">-</operator><literal type="number" pos:start="961:30" pos:end="961:30">1</literal></expr>;</expr_stmt>

                <break pos:start="963:17" pos:end="963:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <comment type="block" pos:start="969:9" pos:end="969:37">/* if none, if is finished */</comment>

        <if_stmt pos:start="971:9" pos:end="987:9"><if pos:start="971:9" pos:end="987:9">if <condition pos:start="971:12" pos:end="971:27">(<expr pos:start="971:13" pos:end="971:26"><name pos:start="971:13" pos:end="971:22">file_index</name> <operator pos:start="971:24" pos:end="971:24">&lt;</operator> <literal type="number" pos:start="971:26" pos:end="971:26">0</literal></expr>)</condition> <block pos:start="971:29" pos:end="987:9">{<block_content pos:start="973:13" pos:end="985:18">

            <if_stmt pos:start="973:13" pos:end="983:13"><if pos:start="973:13" pos:end="983:13">if<condition pos:start="973:15" pos:end="973:31">(<expr pos:start="973:16" pos:end="973:30"><name pos:start="973:16" pos:end="973:30">no_packet_count</name></expr>)</condition><block pos:start="973:32" pos:end="983:13">{<block_content pos:start="975:17" pos:end="981:25">

                <expr_stmt pos:start="975:17" pos:end="975:34"><expr pos:start="975:17" pos:end="975:33"><name pos:start="975:17" pos:end="975:31">no_packet_count</name><operator pos:start="975:32" pos:end="975:32">=</operator><literal type="number" pos:start="975:33" pos:end="975:33">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="977:17" pos:end="977:53"><expr pos:start="977:17" pos:end="977:52"><call pos:start="977:17" pos:end="977:52"><name pos:start="977:17" pos:end="977:22">memset</name><argument_list pos:start="977:23" pos:end="977:52">(<argument pos:start="977:24" pos:end="977:32"><expr pos:start="977:24" pos:end="977:32"><name pos:start="977:24" pos:end="977:32">no_packet</name></expr></argument>, <argument pos:start="977:35" pos:end="977:35"><expr pos:start="977:35" pos:end="977:35"><literal type="number" pos:start="977:35" pos:end="977:35">0</literal></expr></argument>, <argument pos:start="977:38" pos:end="977:51"><expr pos:start="977:38" pos:end="977:51"><name pos:start="977:38" pos:end="977:51">nb_input_files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="979:17" pos:end="979:30"><expr pos:start="979:17" pos:end="979:29"><call pos:start="979:17" pos:end="979:29"><name pos:start="979:17" pos:end="979:22">usleep</name><argument_list pos:start="979:23" pos:end="979:29">(<argument pos:start="979:24" pos:end="979:28"><expr pos:start="979:24" pos:end="979:28"><literal type="number" pos:start="979:24" pos:end="979:28">10000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="981:17" pos:end="981:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <break pos:start="985:13" pos:end="985:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="991:9" pos:end="991:60">/* read a frame from it and output it in the fifo */</comment>

        <expr_stmt pos:start="993:9" pos:end="993:41"><expr pos:start="993:9" pos:end="993:40"><name pos:start="993:9" pos:end="993:10">is</name> <operator pos:start="993:12" pos:end="993:12">=</operator> <name pos:start="993:14" pos:end="993:36"><name pos:start="993:14" pos:end="993:24">input_files</name><index pos:start="993:25" pos:end="993:36">[<expr pos:start="993:26" pos:end="993:35"><name pos:start="993:26" pos:end="993:35">file_index</name></expr>]</index></name><operator pos:start="993:37" pos:end="993:37">.</operator><name pos:start="993:38" pos:end="993:40">ctx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="995:9" pos:end="995:37"><expr pos:start="995:9" pos:end="995:36"><name pos:start="995:9" pos:end="995:11">ret</name><operator pos:start="995:12" pos:end="995:12">=</operator> <call pos:start="995:14" pos:end="995:36"><name pos:start="995:14" pos:end="995:26">av_read_frame</name><argument_list pos:start="995:27" pos:end="995:36">(<argument pos:start="995:28" pos:end="995:29"><expr pos:start="995:28" pos:end="995:29"><name pos:start="995:28" pos:end="995:29">is</name></expr></argument>, <argument pos:start="995:32" pos:end="995:35"><expr pos:start="995:32" pos:end="995:35"><operator pos:start="995:32" pos:end="995:32">&amp;</operator><name pos:start="995:33" pos:end="995:35">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="997:9" pos:end="1005:9"><if pos:start="997:9" pos:end="1005:9">if<condition pos:start="997:11" pos:end="997:34">(<expr pos:start="997:12" pos:end="997:33"><name pos:start="997:12" pos:end="997:14">ret</name> <operator pos:start="997:16" pos:end="997:17">==</operator> <call pos:start="997:19" pos:end="997:33"><name pos:start="997:19" pos:end="997:25">AVERROR</name><argument_list pos:start="997:26" pos:end="997:33">(<argument pos:start="997:27" pos:end="997:32"><expr pos:start="997:27" pos:end="997:32"><name pos:start="997:27" pos:end="997:32">EAGAIN</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="997:35" pos:end="1005:9">{<block_content pos:start="999:13" pos:end="1003:21">

            <expr_stmt pos:start="999:13" pos:end="999:36"><expr pos:start="999:13" pos:end="999:35"><name pos:start="999:13" pos:end="999:33"><name pos:start="999:13" pos:end="999:21">no_packet</name><index pos:start="999:22" pos:end="999:33">[<expr pos:start="999:23" pos:end="999:32"><name pos:start="999:23" pos:end="999:32">file_index</name></expr>]</index></name><operator pos:start="999:34" pos:end="999:34">=</operator><literal type="number" pos:start="999:35" pos:end="999:35">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="1001:13" pos:end="1001:30"><expr pos:start="1001:13" pos:end="1001:29"><name pos:start="1001:13" pos:end="1001:27">no_packet_count</name><operator pos:start="1001:28" pos:end="1001:29">++</operator></expr>;</expr_stmt>

            <continue pos:start="1003:13" pos:end="1003:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="1007:9" pos:end="1019:9"><if pos:start="1007:9" pos:end="1019:9">if <condition pos:start="1007:12" pos:end="1007:20">(<expr pos:start="1007:13" pos:end="1007:19"><name pos:start="1007:13" pos:end="1007:15">ret</name> <operator pos:start="1007:17" pos:end="1007:17">&lt;</operator> <literal type="number" pos:start="1007:19" pos:end="1007:19">0</literal></expr>)</condition> <block pos:start="1007:22" pos:end="1019:9">{<block_content pos:start="1009:13" pos:end="1017:25">

            <expr_stmt pos:start="1009:13" pos:end="1009:52"><expr pos:start="1009:13" pos:end="1009:51"><name pos:start="1009:13" pos:end="1009:35"><name pos:start="1009:13" pos:end="1009:23">input_files</name><index pos:start="1009:24" pos:end="1009:35">[<expr pos:start="1009:25" pos:end="1009:34"><name pos:start="1009:25" pos:end="1009:34">file_index</name></expr>]</index></name><operator pos:start="1009:36" pos:end="1009:36">.</operator><name pos:start="1009:37" pos:end="1009:47">eof_reached</name> <operator pos:start="1009:49" pos:end="1009:49">=</operator> <literal type="number" pos:start="1009:51" pos:end="1009:51">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1011:13" pos:end="1017:25"><if pos:start="1011:13" pos:end="1013:22">if <condition pos:start="1011:16" pos:end="1011:29">(<expr pos:start="1011:17" pos:end="1011:28"><name pos:start="1011:17" pos:end="1011:28">opt_shortest</name></expr>)</condition><block type="pseudo" pos:start="1013:17" pos:end="1013:22"><block_content pos:start="1013:17" pos:end="1013:22">

                <break pos:start="1013:17" pos:end="1013:22">break;</break></block_content></block></if>

            <else pos:start="1015:13" pos:end="1017:25">else<block type="pseudo" pos:start="1017:17" pos:end="1017:25"><block_content pos:start="1017:17" pos:end="1017:25">

                <continue pos:start="1017:17" pos:end="1017:25">continue;</continue></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="1023:9" pos:end="1023:26"><expr pos:start="1023:9" pos:end="1023:25"><name pos:start="1023:9" pos:end="1023:23">no_packet_count</name><operator pos:start="1023:24" pos:end="1023:24">=</operator><literal type="number" pos:start="1023:25" pos:end="1023:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1025:9" pos:end="1025:45"><expr pos:start="1025:9" pos:end="1025:44"><call pos:start="1025:9" pos:end="1025:44"><name pos:start="1025:9" pos:end="1025:14">memset</name><argument_list pos:start="1025:15" pos:end="1025:44">(<argument pos:start="1025:16" pos:end="1025:24"><expr pos:start="1025:16" pos:end="1025:24"><name pos:start="1025:16" pos:end="1025:24">no_packet</name></expr></argument>, <argument pos:start="1025:27" pos:end="1025:27"><expr pos:start="1025:27" pos:end="1025:27"><literal type="number" pos:start="1025:27" pos:end="1025:27">0</literal></expr></argument>, <argument pos:start="1025:30" pos:end="1025:43"><expr pos:start="1025:30" pos:end="1025:43"><name pos:start="1025:30" pos:end="1025:43">nb_input_files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="1029:9" pos:end="1035:9"><if pos:start="1029:9" pos:end="1035:9">if <condition pos:start="1029:12" pos:end="1029:24">(<expr pos:start="1029:13" pos:end="1029:23"><name pos:start="1029:13" pos:end="1029:23">do_pkt_dump</name></expr>)</condition> <block pos:start="1029:26" pos:end="1035:9">{<block_content pos:start="1031:13" pos:end="1033:60">

            <expr_stmt pos:start="1031:13" pos:end="1033:60"><expr pos:start="1031:13" pos:end="1033:59"><call pos:start="1031:13" pos:end="1033:59"><name pos:start="1031:13" pos:end="1031:28">av_pkt_dump_log2</name><argument_list pos:start="1031:29" pos:end="1033:59">(<argument pos:start="1031:30" pos:end="1031:33"><expr pos:start="1031:30" pos:end="1031:33"><name pos:start="1031:30" pos:end="1031:33">NULL</name></expr></argument>, <argument pos:start="1031:36" pos:end="1031:47"><expr pos:start="1031:36" pos:end="1031:47"><name pos:start="1031:36" pos:end="1031:47">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="1031:50" pos:end="1031:53"><expr pos:start="1031:50" pos:end="1031:53"><operator pos:start="1031:50" pos:end="1031:50">&amp;</operator><name pos:start="1031:51" pos:end="1031:53">pkt</name></expr></argument>, <argument pos:start="1031:56" pos:end="1031:66"><expr pos:start="1031:56" pos:end="1031:66"><name pos:start="1031:56" pos:end="1031:66">do_hex_dump</name></expr></argument>,

                             <argument pos:start="1033:30" pos:end="1033:58"><expr pos:start="1033:30" pos:end="1033:58"><name pos:start="1033:30" pos:end="1033:58"><name pos:start="1033:30" pos:end="1033:31">is</name><operator pos:start="1033:32" pos:end="1033:33">-&gt;</operator><name pos:start="1033:34" pos:end="1033:40">streams</name><index pos:start="1033:41" pos:end="1033:58">[<expr pos:start="1033:42" pos:end="1033:57"><name pos:start="1033:42" pos:end="1033:57"><name pos:start="1033:42" pos:end="1033:44">pkt</name><operator pos:start="1033:45" pos:end="1033:45">.</operator><name pos:start="1033:46" pos:end="1033:57">stream_index</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="1037:9" pos:end="1039:52">/* the following test is needed in case new streams appear

           dynamically in stream : we ignore them */</comment>

        <if_stmt pos:start="1041:9" pos:end="1043:32"><if pos:start="1041:9" pos:end="1043:32">if <condition pos:start="1041:12" pos:end="1041:67">(<expr pos:start="1041:13" pos:end="1041:66"><name pos:start="1041:13" pos:end="1041:28"><name pos:start="1041:13" pos:end="1041:15">pkt</name><operator pos:start="1041:16" pos:end="1041:16">.</operator><name pos:start="1041:17" pos:end="1041:28">stream_index</name></name> <operator pos:start="1041:30" pos:end="1041:31">&gt;=</operator> <name pos:start="1041:33" pos:end="1041:55"><name pos:start="1041:33" pos:end="1041:43">input_files</name><index pos:start="1041:44" pos:end="1041:55">[<expr pos:start="1041:45" pos:end="1041:54"><name pos:start="1041:45" pos:end="1041:54">file_index</name></expr>]</index></name><operator pos:start="1041:56" pos:end="1041:56">.</operator><name pos:start="1041:57" pos:end="1041:66">nb_streams</name></expr>)</condition><block type="pseudo" pos:start="1043:13" pos:end="1043:32"><block_content pos:start="1043:13" pos:end="1043:32">

            <goto pos:start="1043:13" pos:end="1043:32">goto <name pos:start="1043:18" pos:end="1043:31">discard_packet</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="1045:9" pos:end="1045:73"><expr pos:start="1045:9" pos:end="1045:72"><name pos:start="1045:9" pos:end="1045:17">ist_index</name> <operator pos:start="1045:19" pos:end="1045:19">=</operator> <name pos:start="1045:21" pos:end="1045:43"><name pos:start="1045:21" pos:end="1045:31">input_files</name><index pos:start="1045:32" pos:end="1045:43">[<expr pos:start="1045:33" pos:end="1045:42"><name pos:start="1045:33" pos:end="1045:42">file_index</name></expr>]</index></name><operator pos:start="1045:44" pos:end="1045:44">.</operator><name pos:start="1045:45" pos:end="1045:53">ist_index</name> <operator pos:start="1045:55" pos:end="1045:55">+</operator> <name pos:start="1045:57" pos:end="1045:72"><name pos:start="1045:57" pos:end="1045:59">pkt</name><operator pos:start="1045:60" pos:end="1045:60">.</operator><name pos:start="1045:61" pos:end="1045:72">stream_index</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1047:9" pos:end="1047:40"><expr pos:start="1047:9" pos:end="1047:39"><name pos:start="1047:9" pos:end="1047:11">ist</name> <operator pos:start="1047:13" pos:end="1047:13">=</operator> <operator pos:start="1047:15" pos:end="1047:15">&amp;</operator><name pos:start="1047:16" pos:end="1047:39"><name pos:start="1047:16" pos:end="1047:28">input_streams</name><index pos:start="1047:29" pos:end="1047:39">[<expr pos:start="1047:30" pos:end="1047:38"><name pos:start="1047:30" pos:end="1047:38">ist_index</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="1049:9" pos:end="1051:32"><if pos:start="1049:9" pos:end="1051:32">if <condition pos:start="1049:12" pos:end="1049:25">(<expr pos:start="1049:13" pos:end="1049:24"><name pos:start="1049:13" pos:end="1049:24"><name pos:start="1049:13" pos:end="1049:15">ist</name><operator pos:start="1049:16" pos:end="1049:17">-&gt;</operator><name pos:start="1049:18" pos:end="1049:24">discard</name></name></expr>)</condition><block type="pseudo" pos:start="1051:13" pos:end="1051:32"><block_content pos:start="1051:13" pos:end="1051:32">

            <goto pos:start="1051:13" pos:end="1051:32">goto <name pos:start="1051:18" pos:end="1051:31">discard_packet</name>;</goto></block_content></block></if></if_stmt>



        <if_stmt pos:start="1055:9" pos:end="1057:112"><if pos:start="1055:9" pos:end="1057:112">if <condition pos:start="1055:12" pos:end="1055:38">(<expr pos:start="1055:13" pos:end="1055:37"><name pos:start="1055:13" pos:end="1055:19"><name pos:start="1055:13" pos:end="1055:15">pkt</name><operator pos:start="1055:16" pos:end="1055:16">.</operator><name pos:start="1055:17" pos:end="1055:19">dts</name></name> <operator pos:start="1055:21" pos:end="1055:22">!=</operator> <name pos:start="1055:24" pos:end="1055:37">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="1057:13" pos:end="1057:112"><block_content pos:start="1057:13" pos:end="1057:112">

            <expr_stmt pos:start="1057:13" pos:end="1057:112"><expr pos:start="1057:13" pos:end="1057:111"><name pos:start="1057:13" pos:end="1057:19"><name pos:start="1057:13" pos:end="1057:15">pkt</name><operator pos:start="1057:16" pos:end="1057:16">.</operator><name pos:start="1057:17" pos:end="1057:19">dts</name></name> <operator pos:start="1057:21" pos:end="1057:22">+=</operator> <call pos:start="1057:24" pos:end="1057:111"><name pos:start="1057:24" pos:end="1057:35">av_rescale_q</name><argument_list pos:start="1057:36" pos:end="1057:111">(<argument pos:start="1057:37" pos:end="1057:74"><expr pos:start="1057:37" pos:end="1057:74"><name pos:start="1057:37" pos:end="1057:64"><name pos:start="1057:37" pos:end="1057:47">input_files</name><index pos:start="1057:48" pos:end="1057:64">[<expr pos:start="1057:49" pos:end="1057:63"><name pos:start="1057:49" pos:end="1057:63"><name pos:start="1057:49" pos:end="1057:51">ist</name><operator pos:start="1057:52" pos:end="1057:53">-&gt;</operator><name pos:start="1057:54" pos:end="1057:63">file_index</name></name></expr>]</index></name><operator pos:start="1057:65" pos:end="1057:65">.</operator><name pos:start="1057:66" pos:end="1057:74">ts_offset</name></expr></argument>, <argument pos:start="1057:77" pos:end="1057:90"><expr pos:start="1057:77" pos:end="1057:90"><name pos:start="1057:77" pos:end="1057:90">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="1057:93" pos:end="1057:110"><expr pos:start="1057:93" pos:end="1057:110"><name pos:start="1057:93" pos:end="1057:110"><name pos:start="1057:93" pos:end="1057:95">ist</name><operator pos:start="1057:96" pos:end="1057:97">-&gt;</operator><name pos:start="1057:98" pos:end="1057:99">st</name><operator pos:start="1057:100" pos:end="1057:101">-&gt;</operator><name pos:start="1057:102" pos:end="1057:110">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="1059:9" pos:end="1061:112"><if pos:start="1059:9" pos:end="1061:112">if <condition pos:start="1059:12" pos:end="1059:38">(<expr pos:start="1059:13" pos:end="1059:37"><name pos:start="1059:13" pos:end="1059:19"><name pos:start="1059:13" pos:end="1059:15">pkt</name><operator pos:start="1059:16" pos:end="1059:16">.</operator><name pos:start="1059:17" pos:end="1059:19">pts</name></name> <operator pos:start="1059:21" pos:end="1059:22">!=</operator> <name pos:start="1059:24" pos:end="1059:37">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="1061:13" pos:end="1061:112"><block_content pos:start="1061:13" pos:end="1061:112">

            <expr_stmt pos:start="1061:13" pos:end="1061:112"><expr pos:start="1061:13" pos:end="1061:111"><name pos:start="1061:13" pos:end="1061:19"><name pos:start="1061:13" pos:end="1061:15">pkt</name><operator pos:start="1061:16" pos:end="1061:16">.</operator><name pos:start="1061:17" pos:end="1061:19">pts</name></name> <operator pos:start="1061:21" pos:end="1061:22">+=</operator> <call pos:start="1061:24" pos:end="1061:111"><name pos:start="1061:24" pos:end="1061:35">av_rescale_q</name><argument_list pos:start="1061:36" pos:end="1061:111">(<argument pos:start="1061:37" pos:end="1061:74"><expr pos:start="1061:37" pos:end="1061:74"><name pos:start="1061:37" pos:end="1061:64"><name pos:start="1061:37" pos:end="1061:47">input_files</name><index pos:start="1061:48" pos:end="1061:64">[<expr pos:start="1061:49" pos:end="1061:63"><name pos:start="1061:49" pos:end="1061:63"><name pos:start="1061:49" pos:end="1061:51">ist</name><operator pos:start="1061:52" pos:end="1061:53">-&gt;</operator><name pos:start="1061:54" pos:end="1061:63">file_index</name></name></expr>]</index></name><operator pos:start="1061:65" pos:end="1061:65">.</operator><name pos:start="1061:66" pos:end="1061:74">ts_offset</name></expr></argument>, <argument pos:start="1061:77" pos:end="1061:90"><expr pos:start="1061:77" pos:end="1061:90"><name pos:start="1061:77" pos:end="1061:90">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="1061:93" pos:end="1061:110"><expr pos:start="1061:93" pos:end="1061:110"><name pos:start="1061:93" pos:end="1061:110"><name pos:start="1061:93" pos:end="1061:95">ist</name><operator pos:start="1061:96" pos:end="1061:97">-&gt;</operator><name pos:start="1061:98" pos:end="1061:99">st</name><operator pos:start="1061:100" pos:end="1061:101">-&gt;</operator><name pos:start="1061:102" pos:end="1061:110">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="1065:9" pos:end="1075:9"><if pos:start="1065:9" pos:end="1075:9">if <condition pos:start="1065:12" pos:end="1065:26">(<expr pos:start="1065:13" pos:end="1065:25"><name pos:start="1065:13" pos:end="1065:25"><name pos:start="1065:13" pos:end="1065:15">ist</name><operator pos:start="1065:16" pos:end="1065:17">-&gt;</operator><name pos:start="1065:18" pos:end="1065:25">ts_scale</name></name></expr>)</condition> <block pos:start="1065:28" pos:end="1075:9">{<block_content pos:start="1067:13" pos:end="1073:41">

            <if_stmt pos:start="1067:13" pos:end="1069:41"><if pos:start="1067:13" pos:end="1069:41">if<condition pos:start="1067:15" pos:end="1067:41">(<expr pos:start="1067:16" pos:end="1067:40"><name pos:start="1067:16" pos:end="1067:22"><name pos:start="1067:16" pos:end="1067:18">pkt</name><operator pos:start="1067:19" pos:end="1067:19">.</operator><name pos:start="1067:20" pos:end="1067:22">pts</name></name> <operator pos:start="1067:24" pos:end="1067:25">!=</operator> <name pos:start="1067:27" pos:end="1067:40">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="1069:17" pos:end="1069:41"><block_content pos:start="1069:17" pos:end="1069:41">

                <expr_stmt pos:start="1069:17" pos:end="1069:41"><expr pos:start="1069:17" pos:end="1069:40"><name pos:start="1069:17" pos:end="1069:23"><name pos:start="1069:17" pos:end="1069:19">pkt</name><operator pos:start="1069:20" pos:end="1069:20">.</operator><name pos:start="1069:21" pos:end="1069:23">pts</name></name> <operator pos:start="1069:25" pos:end="1069:26">*=</operator> <name pos:start="1069:28" pos:end="1069:40"><name pos:start="1069:28" pos:end="1069:30">ist</name><operator pos:start="1069:31" pos:end="1069:32">-&gt;</operator><name pos:start="1069:33" pos:end="1069:40">ts_scale</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="1071:13" pos:end="1073:41"><if pos:start="1071:13" pos:end="1073:41">if<condition pos:start="1071:15" pos:end="1071:41">(<expr pos:start="1071:16" pos:end="1071:40"><name pos:start="1071:16" pos:end="1071:22"><name pos:start="1071:16" pos:end="1071:18">pkt</name><operator pos:start="1071:19" pos:end="1071:19">.</operator><name pos:start="1071:20" pos:end="1071:22">dts</name></name> <operator pos:start="1071:24" pos:end="1071:25">!=</operator> <name pos:start="1071:27" pos:end="1071:40">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="1073:17" pos:end="1073:41"><block_content pos:start="1073:17" pos:end="1073:41">

                <expr_stmt pos:start="1073:17" pos:end="1073:41"><expr pos:start="1073:17" pos:end="1073:40"><name pos:start="1073:17" pos:end="1073:23"><name pos:start="1073:17" pos:end="1073:19">pkt</name><operator pos:start="1073:20" pos:end="1073:20">.</operator><name pos:start="1073:21" pos:end="1073:23">dts</name></name> <operator pos:start="1073:25" pos:end="1073:26">*=</operator> <name pos:start="1073:28" pos:end="1073:40"><name pos:start="1073:28" pos:end="1073:30">ist</name><operator pos:start="1073:31" pos:end="1073:32">-&gt;</operator><name pos:start="1073:33" pos:end="1073:40">ts_scale</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



<comment type="line" pos:start="1079:1" pos:end="1079:169">//        fprintf(stderr, "next:%"PRId64" dts:%"PRId64" off:%"PRId64" %d\n", ist-&gt;next_pts, pkt.dts, input_files[ist-&gt;file_index].ts_offset, ist-&gt;st-&gt;codec-&gt;codec_type);</comment>

        <if_stmt pos:start="1081:9" pos:end="1113:9"><if pos:start="1081:9" pos:end="1113:9">if <condition pos:start="1081:12" pos:end="1083:55">(<expr pos:start="1081:13" pos:end="1083:54"><name pos:start="1081:13" pos:end="1081:19"><name pos:start="1081:13" pos:end="1081:15">pkt</name><operator pos:start="1081:16" pos:end="1081:16">.</operator><name pos:start="1081:17" pos:end="1081:19">dts</name></name> <operator pos:start="1081:21" pos:end="1081:22">!=</operator> <name pos:start="1081:24" pos:end="1081:37">AV_NOPTS_VALUE</name> <operator pos:start="1081:39" pos:end="1081:40">&amp;&amp;</operator> <name pos:start="1081:42" pos:end="1081:54"><name pos:start="1081:42" pos:end="1081:44">ist</name><operator pos:start="1081:45" pos:end="1081:46">-&gt;</operator><name pos:start="1081:47" pos:end="1081:54">next_pts</name></name> <operator pos:start="1081:56" pos:end="1081:57">!=</operator> <name pos:start="1081:59" pos:end="1081:72">AV_NOPTS_VALUE</name>

            <operator pos:start="1083:13" pos:end="1083:14">&amp;&amp;</operator> <operator pos:start="1083:16" pos:end="1083:16">(</operator><name pos:start="1083:17" pos:end="1083:34"><name pos:start="1083:17" pos:end="1083:18">is</name><operator pos:start="1083:19" pos:end="1083:20">-&gt;</operator><name pos:start="1083:21" pos:end="1083:27">iformat</name><operator pos:start="1083:28" pos:end="1083:29">-&gt;</operator><name pos:start="1083:30" pos:end="1083:34">flags</name></name> <operator pos:start="1083:36" pos:end="1083:36">&amp;</operator> <name pos:start="1083:38" pos:end="1083:53">AVFMT_TS_DISCONT</name><operator pos:start="1083:54" pos:end="1083:54">)</operator></expr>)</condition> <block pos:start="1083:57" pos:end="1113:9">{<block_content pos:start="1085:13" pos:end="1111:13">

            <decl_stmt pos:start="1085:13" pos:end="1085:87"><decl pos:start="1085:13" pos:end="1085:86"><type pos:start="1085:13" pos:end="1085:19"><name pos:start="1085:13" pos:end="1085:19">int64_t</name></type> <name pos:start="1085:21" pos:end="1085:27">pkt_dts</name><init pos:start="1085:28" pos:end="1085:86">= <expr pos:start="1085:30" pos:end="1085:86"><call pos:start="1085:30" pos:end="1085:86"><name pos:start="1085:30" pos:end="1085:41">av_rescale_q</name><argument_list pos:start="1085:42" pos:end="1085:86">(<argument pos:start="1085:43" pos:end="1085:49"><expr pos:start="1085:43" pos:end="1085:49"><name pos:start="1085:43" pos:end="1085:49"><name pos:start="1085:43" pos:end="1085:45">pkt</name><operator pos:start="1085:46" pos:end="1085:46">.</operator><name pos:start="1085:47" pos:end="1085:49">dts</name></name></expr></argument>, <argument pos:start="1085:52" pos:end="1085:69"><expr pos:start="1085:52" pos:end="1085:69"><name pos:start="1085:52" pos:end="1085:69"><name pos:start="1085:52" pos:end="1085:54">ist</name><operator pos:start="1085:55" pos:end="1085:56">-&gt;</operator><name pos:start="1085:57" pos:end="1085:58">st</name><operator pos:start="1085:59" pos:end="1085:60">-&gt;</operator><name pos:start="1085:61" pos:end="1085:69">time_base</name></name></expr></argument>, <argument pos:start="1085:72" pos:end="1085:85"><expr pos:start="1085:72" pos:end="1085:85"><name pos:start="1085:72" pos:end="1085:85">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1087:13" pos:end="1087:51"><decl pos:start="1087:13" pos:end="1087:50"><type pos:start="1087:13" pos:end="1087:19"><name pos:start="1087:13" pos:end="1087:19">int64_t</name></type> <name pos:start="1087:21" pos:end="1087:25">delta</name><init pos:start="1087:26" pos:end="1087:50">= <expr pos:start="1087:28" pos:end="1087:50"><name pos:start="1087:28" pos:end="1087:34">pkt_dts</name> <operator pos:start="1087:36" pos:end="1087:36">-</operator> <name pos:start="1087:38" pos:end="1087:50"><name pos:start="1087:38" pos:end="1087:40">ist</name><operator pos:start="1087:41" pos:end="1087:42">-&gt;</operator><name pos:start="1087:43" pos:end="1087:50">next_pts</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="1089:13" pos:end="1111:13"><if pos:start="1089:13" pos:end="1111:13">if<condition pos:start="1089:15" pos:end="1095:47">(<expr pos:start="1089:16" pos:end="1095:46"><operator pos:start="1089:16" pos:end="1089:16">(</operator><name pos:start="1089:17" pos:end="1089:21">delta</name> <operator pos:start="1089:23" pos:end="1089:23">&lt;</operator> <operator pos:start="1089:25" pos:end="1089:25">-</operator><literal type="number" pos:start="1089:26" pos:end="1089:28">1LL</literal><operator pos:start="1089:29" pos:end="1089:29">*</operator><name pos:start="1089:30" pos:end="1089:48">dts_delta_threshold</name><operator pos:start="1089:49" pos:end="1089:49">*</operator><name pos:start="1089:50" pos:end="1089:61">AV_TIME_BASE</name> <operator pos:start="1089:63" pos:end="1089:64">||</operator>

                <operator pos:start="1091:17" pos:end="1091:17">(</operator><name pos:start="1091:18" pos:end="1091:22">delta</name> <operator pos:start="1091:24" pos:end="1091:24">&gt;</operator> <literal type="number" pos:start="1091:26" pos:end="1091:28">1LL</literal><operator pos:start="1091:29" pos:end="1091:29">*</operator><name pos:start="1091:30" pos:end="1091:48">dts_delta_threshold</name><operator pos:start="1091:49" pos:end="1091:49">*</operator><name pos:start="1091:50" pos:end="1091:61">AV_TIME_BASE</name> <operator pos:start="1091:63" pos:end="1091:64">&amp;&amp;</operator>

                 <name pos:start="1093:18" pos:end="1093:43"><name pos:start="1093:18" pos:end="1093:20">ist</name><operator pos:start="1093:21" pos:end="1093:22">-&gt;</operator><name pos:start="1093:23" pos:end="1093:24">st</name><operator pos:start="1093:25" pos:end="1093:26">-&gt;</operator><name pos:start="1093:27" pos:end="1093:31">codec</name><operator pos:start="1093:32" pos:end="1093:33">-&gt;</operator><name pos:start="1093:34" pos:end="1093:43">codec_type</name></name> <operator pos:start="1093:45" pos:end="1093:46">!=</operator> <name pos:start="1093:48" pos:end="1093:68">AVMEDIA_TYPE_SUBTITLE</name><operator pos:start="1093:69" pos:end="1093:69">)</operator> <operator pos:start="1093:71" pos:end="1093:72">||</operator>

                <name pos:start="1095:17" pos:end="1095:23">pkt_dts</name><operator pos:start="1095:24" pos:end="1095:24">+</operator><literal type="number" pos:start="1095:25" pos:end="1095:25">1</literal><operator pos:start="1095:26" pos:end="1095:26">&lt;</operator><name pos:start="1095:27" pos:end="1095:34"><name pos:start="1095:27" pos:end="1095:29">ist</name><operator pos:start="1095:30" pos:end="1095:31">-&gt;</operator><name pos:start="1095:32" pos:end="1095:34">pts</name></name><operator pos:start="1095:35" pos:end="1095:35">)</operator><operator pos:start="1095:36" pos:end="1095:37">&amp;&amp;</operator> <operator pos:start="1095:39" pos:end="1095:39">!</operator><name pos:start="1095:40" pos:end="1095:46">copy_ts</name></expr>)</condition><block pos:start="1095:48" pos:end="1111:13">{<block_content pos:start="1097:17" pos:end="1109:86">

                <expr_stmt pos:start="1097:17" pos:end="1097:64"><expr pos:start="1097:17" pos:end="1097:63"><name pos:start="1097:17" pos:end="1097:44"><name pos:start="1097:17" pos:end="1097:27">input_files</name><index pos:start="1097:28" pos:end="1097:44">[<expr pos:start="1097:29" pos:end="1097:43"><name pos:start="1097:29" pos:end="1097:43"><name pos:start="1097:29" pos:end="1097:31">ist</name><operator pos:start="1097:32" pos:end="1097:33">-&gt;</operator><name pos:start="1097:34" pos:end="1097:43">file_index</name></name></expr>]</index></name><operator pos:start="1097:45" pos:end="1097:45">.</operator><name pos:start="1097:46" pos:end="1097:54">ts_offset</name> <operator pos:start="1097:56" pos:end="1097:57">-=</operator> <name pos:start="1097:59" pos:end="1097:63">delta</name></expr>;</expr_stmt>

                <if_stmt pos:start="1099:17" pos:end="1103:75"><if pos:start="1099:17" pos:end="1103:75">if <condition pos:start="1099:20" pos:end="1099:32">(<expr pos:start="1099:21" pos:end="1099:31"><name pos:start="1099:21" pos:end="1099:27">verbose</name> <operator pos:start="1099:29" pos:end="1099:29">&gt;</operator> <literal type="number" pos:start="1099:31" pos:end="1099:31">2</literal></expr>)</condition><block type="pseudo" pos:start="1101:21" pos:end="1103:75"><block_content pos:start="1101:21" pos:end="1103:75">

                    <expr_stmt pos:start="1101:21" pos:end="1103:75"><expr pos:start="1101:21" pos:end="1103:74"><call pos:start="1101:21" pos:end="1103:74"><name pos:start="1101:21" pos:end="1101:27">fprintf</name><argument_list pos:start="1101:28" pos:end="1103:74">(<argument pos:start="1101:29" pos:end="1101:34"><expr pos:start="1101:29" pos:end="1101:34"><name pos:start="1101:29" pos:end="1101:34">stderr</name></expr></argument>, <argument pos:start="1101:37" pos:end="1101:96"><expr pos:start="1101:37" pos:end="1101:96"><literal type="string" pos:start="1101:37" pos:end="1101:63">"timestamp discontinuity %"</literal><name pos:start="1101:64" pos:end="1101:69">PRId64</name><literal type="string" pos:start="1101:70" pos:end="1101:86">", new offset= %"</literal><name pos:start="1101:87" pos:end="1101:92">PRId64</name><literal type="string" pos:start="1101:93" pos:end="1101:96">"\n"</literal></expr></argument>,

                            <argument pos:start="1103:29" pos:end="1103:33"><expr pos:start="1103:29" pos:end="1103:33"><name pos:start="1103:29" pos:end="1103:33">delta</name></expr></argument>, <argument pos:start="1103:36" pos:end="1103:73"><expr pos:start="1103:36" pos:end="1103:73"><name pos:start="1103:36" pos:end="1103:63"><name pos:start="1103:36" pos:end="1103:46">input_files</name><index pos:start="1103:47" pos:end="1103:63">[<expr pos:start="1103:48" pos:end="1103:62"><name pos:start="1103:48" pos:end="1103:62"><name pos:start="1103:48" pos:end="1103:50">ist</name><operator pos:start="1103:51" pos:end="1103:52">-&gt;</operator><name pos:start="1103:53" pos:end="1103:62">file_index</name></name></expr>]</index></name><operator pos:start="1103:64" pos:end="1103:64">.</operator><name pos:start="1103:65" pos:end="1103:73">ts_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1105:17" pos:end="1105:82"><expr pos:start="1105:17" pos:end="1105:81"><name pos:start="1105:17" pos:end="1105:23"><name pos:start="1105:17" pos:end="1105:19">pkt</name><operator pos:start="1105:20" pos:end="1105:20">.</operator><name pos:start="1105:21" pos:end="1105:23">dts</name></name><operator pos:start="1105:24" pos:end="1105:25">-=</operator> <call pos:start="1105:27" pos:end="1105:81"><name pos:start="1105:27" pos:end="1105:38">av_rescale_q</name><argument_list pos:start="1105:39" pos:end="1105:81">(<argument pos:start="1105:40" pos:end="1105:44"><expr pos:start="1105:40" pos:end="1105:44"><name pos:start="1105:40" pos:end="1105:44">delta</name></expr></argument>, <argument pos:start="1105:47" pos:end="1105:60"><expr pos:start="1105:47" pos:end="1105:60"><name pos:start="1105:47" pos:end="1105:60">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="1105:63" pos:end="1105:80"><expr pos:start="1105:63" pos:end="1105:80"><name pos:start="1105:63" pos:end="1105:80"><name pos:start="1105:63" pos:end="1105:65">ist</name><operator pos:start="1105:66" pos:end="1105:67">-&gt;</operator><name pos:start="1105:68" pos:end="1105:69">st</name><operator pos:start="1105:70" pos:end="1105:71">-&gt;</operator><name pos:start="1105:72" pos:end="1105:80">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1107:17" pos:end="1109:86"><if pos:start="1107:17" pos:end="1109:86">if<condition pos:start="1107:19" pos:end="1107:45">(<expr pos:start="1107:20" pos:end="1107:44"><name pos:start="1107:20" pos:end="1107:26"><name pos:start="1107:20" pos:end="1107:22">pkt</name><operator pos:start="1107:23" pos:end="1107:23">.</operator><name pos:start="1107:24" pos:end="1107:26">pts</name></name> <operator pos:start="1107:28" pos:end="1107:29">!=</operator> <name pos:start="1107:31" pos:end="1107:44">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="1109:21" pos:end="1109:86"><block_content pos:start="1109:21" pos:end="1109:86">

                    <expr_stmt pos:start="1109:21" pos:end="1109:86"><expr pos:start="1109:21" pos:end="1109:85"><name pos:start="1109:21" pos:end="1109:27"><name pos:start="1109:21" pos:end="1109:23">pkt</name><operator pos:start="1109:24" pos:end="1109:24">.</operator><name pos:start="1109:25" pos:end="1109:27">pts</name></name><operator pos:start="1109:28" pos:end="1109:29">-=</operator> <call pos:start="1109:31" pos:end="1109:85"><name pos:start="1109:31" pos:end="1109:42">av_rescale_q</name><argument_list pos:start="1109:43" pos:end="1109:85">(<argument pos:start="1109:44" pos:end="1109:48"><expr pos:start="1109:44" pos:end="1109:48"><name pos:start="1109:44" pos:end="1109:48">delta</name></expr></argument>, <argument pos:start="1109:51" pos:end="1109:64"><expr pos:start="1109:51" pos:end="1109:64"><name pos:start="1109:51" pos:end="1109:64">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="1109:67" pos:end="1109:84"><expr pos:start="1109:67" pos:end="1109:84"><name pos:start="1109:67" pos:end="1109:84"><name pos:start="1109:67" pos:end="1109:69">ist</name><operator pos:start="1109:70" pos:end="1109:71">-&gt;</operator><name pos:start="1109:72" pos:end="1109:73">st</name><operator pos:start="1109:74" pos:end="1109:75">-&gt;</operator><name pos:start="1109:76" pos:end="1109:84">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="line" pos:start="1117:9" pos:end="1117:93">//fprintf(stderr,"read #%d.%d size=%d\n", ist-&gt;file_index, ist-&gt;st-&gt;index, pkt.size);</comment>

        <if_stmt pos:start="1119:9" pos:end="1137:9"><if pos:start="1119:9" pos:end="1137:9">if <condition pos:start="1119:12" pos:end="1119:87">(<expr pos:start="1119:13" pos:end="1119:86"><call pos:start="1119:13" pos:end="1119:82"><name pos:start="1119:13" pos:end="1119:25">output_packet</name><argument_list pos:start="1119:26" pos:end="1119:82">(<argument pos:start="1119:27" pos:end="1119:29"><expr pos:start="1119:27" pos:end="1119:29"><name pos:start="1119:27" pos:end="1119:29">ist</name></expr></argument>, <argument pos:start="1119:32" pos:end="1119:40"><expr pos:start="1119:32" pos:end="1119:40"><name pos:start="1119:32" pos:end="1119:40">ist_index</name></expr></argument>, <argument pos:start="1119:43" pos:end="1119:56"><expr pos:start="1119:43" pos:end="1119:56"><name pos:start="1119:43" pos:end="1119:56">output_streams</name></expr></argument>, <argument pos:start="1119:59" pos:end="1119:75"><expr pos:start="1119:59" pos:end="1119:75"><name pos:start="1119:59" pos:end="1119:75">nb_output_streams</name></expr></argument>, <argument pos:start="1119:78" pos:end="1119:81"><expr pos:start="1119:78" pos:end="1119:81"><operator pos:start="1119:78" pos:end="1119:78">&amp;</operator><name pos:start="1119:79" pos:end="1119:81">pkt</name></expr></argument>)</argument_list></call> <operator pos:start="1119:84" pos:end="1119:84">&lt;</operator> <literal type="number" pos:start="1119:86" pos:end="1119:86">0</literal></expr>)</condition> <block pos:start="1119:89" pos:end="1137:9">{<block_content pos:start="1123:13" pos:end="1135:22">



            <if_stmt pos:start="1123:13" pos:end="1127:57"><if pos:start="1123:13" pos:end="1127:57">if <condition pos:start="1123:16" pos:end="1123:29">(<expr pos:start="1123:17" pos:end="1123:28"><name pos:start="1123:17" pos:end="1123:23">verbose</name> <operator pos:start="1123:25" pos:end="1123:26">&gt;=</operator> <literal type="number" pos:start="1123:28" pos:end="1123:28">0</literal></expr>)</condition><block type="pseudo" pos:start="1125:17" pos:end="1127:57"><block_content pos:start="1125:17" pos:end="1127:57">

                <expr_stmt pos:start="1125:17" pos:end="1127:57"><expr pos:start="1125:17" pos:end="1127:56"><call pos:start="1125:17" pos:end="1127:56"><name pos:start="1125:17" pos:end="1125:23">fprintf</name><argument_list pos:start="1125:24" pos:end="1127:56">(<argument pos:start="1125:25" pos:end="1125:30"><expr pos:start="1125:25" pos:end="1125:30"><name pos:start="1125:25" pos:end="1125:30">stderr</name></expr></argument>, <argument pos:start="1125:33" pos:end="1125:70"><expr pos:start="1125:33" pos:end="1125:70"><literal type="string" pos:start="1125:33" pos:end="1125:70">"Error while decoding stream #%d.%d\n"</literal></expr></argument>,

                        <argument pos:start="1127:25" pos:end="1127:39"><expr pos:start="1127:25" pos:end="1127:39"><name pos:start="1127:25" pos:end="1127:39"><name pos:start="1127:25" pos:end="1127:27">ist</name><operator pos:start="1127:28" pos:end="1127:29">-&gt;</operator><name pos:start="1127:30" pos:end="1127:39">file_index</name></name></expr></argument>, <argument pos:start="1127:42" pos:end="1127:55"><expr pos:start="1127:42" pos:end="1127:55"><name pos:start="1127:42" pos:end="1127:55"><name pos:start="1127:42" pos:end="1127:44">ist</name><operator pos:start="1127:45" pos:end="1127:46">-&gt;</operator><name pos:start="1127:47" pos:end="1127:48">st</name><operator pos:start="1127:49" pos:end="1127:50">-&gt;</operator><name pos:start="1127:51" pos:end="1127:55">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="1129:13" pos:end="1131:32"><if pos:start="1129:13" pos:end="1131:32">if <condition pos:start="1129:16" pos:end="1129:30">(<expr pos:start="1129:17" pos:end="1129:29"><name pos:start="1129:17" pos:end="1129:29">exit_on_error</name></expr>)</condition><block type="pseudo" pos:start="1131:17" pos:end="1131:32"><block_content pos:start="1131:17" pos:end="1131:32">

                <expr_stmt pos:start="1131:17" pos:end="1131:32"><expr pos:start="1131:17" pos:end="1131:31"><call pos:start="1131:17" pos:end="1131:31"><name pos:start="1131:17" pos:end="1131:28">exit_program</name><argument_list pos:start="1131:29" pos:end="1131:31">(<argument pos:start="1131:30" pos:end="1131:30"><expr pos:start="1131:30" pos:end="1131:30"><literal type="number" pos:start="1131:30" pos:end="1131:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1133:13" pos:end="1133:33"><expr pos:start="1133:13" pos:end="1133:32"><call pos:start="1133:13" pos:end="1133:32"><name pos:start="1133:13" pos:end="1133:26">av_free_packet</name><argument_list pos:start="1133:27" pos:end="1133:32">(<argument pos:start="1133:28" pos:end="1133:31"><expr pos:start="1133:28" pos:end="1133:31"><operator pos:start="1133:28" pos:end="1133:28">&amp;</operator><name pos:start="1133:29" pos:end="1133:31">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1135:13" pos:end="1135:22">goto <name pos:start="1135:18" pos:end="1135:21">redo</name>;</goto>

        </block_content>}</block></if></if_stmt>



    <label pos:start="1141:5" pos:end="1141:19"><name pos:start="1141:5" pos:end="1141:18">discard_packet</name>:</label>

        <expr_stmt pos:start="1143:9" pos:end="1143:29"><expr pos:start="1143:9" pos:end="1143:28"><call pos:start="1143:9" pos:end="1143:28"><name pos:start="1143:9" pos:end="1143:22">av_free_packet</name><argument_list pos:start="1143:23" pos:end="1143:28">(<argument pos:start="1143:24" pos:end="1143:27"><expr pos:start="1143:24" pos:end="1143:27"><operator pos:start="1143:24" pos:end="1143:24">&amp;</operator><name pos:start="1143:25" pos:end="1143:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="1147:9" pos:end="1147:75">/* dump report by using the output first video and audio streams */</comment>

        <expr_stmt pos:start="1149:9" pos:end="1149:86"><expr pos:start="1149:9" pos:end="1149:85"><call pos:start="1149:9" pos:end="1149:85"><name pos:start="1149:9" pos:end="1149:20">print_report</name><argument_list pos:start="1149:21" pos:end="1149:85">(<argument pos:start="1149:22" pos:end="1149:33"><expr pos:start="1149:22" pos:end="1149:33"><name pos:start="1149:22" pos:end="1149:33">output_files</name></expr></argument>, <argument pos:start="1149:36" pos:end="1149:49"><expr pos:start="1149:36" pos:end="1149:49"><name pos:start="1149:36" pos:end="1149:49">output_streams</name></expr></argument>, <argument pos:start="1149:52" pos:end="1149:68"><expr pos:start="1149:52" pos:end="1149:68"><name pos:start="1149:52" pos:end="1149:68">nb_output_streams</name></expr></argument>, <argument pos:start="1149:71" pos:end="1149:71"><expr pos:start="1149:71" pos:end="1149:71"><literal type="number" pos:start="1149:71" pos:end="1149:71">0</literal></expr></argument>, <argument pos:start="1149:74" pos:end="1149:84"><expr pos:start="1149:74" pos:end="1149:84"><name pos:start="1149:74" pos:end="1149:84">timer_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1155:5" pos:end="1155:65">/* at the end of stream, we must flush the decoder buffers */</comment>

    <for pos:start="1157:5" pos:end="1167:5">for <control pos:start="1157:9" pos:end="1157:42">(<init pos:start="1157:10" pos:end="1157:15"><expr pos:start="1157:10" pos:end="1157:14"><name pos:start="1157:10" pos:end="1157:10">i</name> <operator pos:start="1157:12" pos:end="1157:12">=</operator> <literal type="number" pos:start="1157:14" pos:end="1157:14">0</literal></expr>;</init> <condition pos:start="1157:17" pos:end="1157:37"><expr pos:start="1157:17" pos:end="1157:36"><name pos:start="1157:17" pos:end="1157:17">i</name> <operator pos:start="1157:19" pos:end="1157:19">&lt;</operator> <name pos:start="1157:21" pos:end="1157:36">nb_input_streams</name></expr>;</condition> <incr pos:start="1157:39" pos:end="1157:41"><expr pos:start="1157:39" pos:end="1157:41"><name pos:start="1157:39" pos:end="1157:39">i</name><operator pos:start="1157:40" pos:end="1157:41">++</operator></expr></incr>)</control> <block pos:start="1157:44" pos:end="1167:5">{<block_content pos:start="1159:9" pos:end="1165:9">

        <expr_stmt pos:start="1159:9" pos:end="1159:32"><expr pos:start="1159:9" pos:end="1159:31"><name pos:start="1159:9" pos:end="1159:11">ist</name> <operator pos:start="1159:13" pos:end="1159:13">=</operator> <operator pos:start="1159:15" pos:end="1159:15">&amp;</operator><name pos:start="1159:16" pos:end="1159:31"><name pos:start="1159:16" pos:end="1159:28">input_streams</name><index pos:start="1159:29" pos:end="1159:31">[<expr pos:start="1159:30" pos:end="1159:30"><name pos:start="1159:30" pos:end="1159:30">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="1161:9" pos:end="1165:9"><if pos:start="1161:9" pos:end="1165:9">if <condition pos:start="1161:12" pos:end="1161:33">(<expr pos:start="1161:13" pos:end="1161:32"><name pos:start="1161:13" pos:end="1161:32"><name pos:start="1161:13" pos:end="1161:15">ist</name><operator pos:start="1161:16" pos:end="1161:17">-&gt;</operator><name pos:start="1161:18" pos:end="1161:32">decoding_needed</name></name></expr>)</condition> <block pos:start="1161:35" pos:end="1165:9">{<block_content pos:start="1163:13" pos:end="1163:75">

            <expr_stmt pos:start="1163:13" pos:end="1163:75"><expr pos:start="1163:13" pos:end="1163:74"><call pos:start="1163:13" pos:end="1163:74"><name pos:start="1163:13" pos:end="1163:25">output_packet</name><argument_list pos:start="1163:26" pos:end="1163:74">(<argument pos:start="1163:27" pos:end="1163:29"><expr pos:start="1163:27" pos:end="1163:29"><name pos:start="1163:27" pos:end="1163:29">ist</name></expr></argument>, <argument pos:start="1163:32" pos:end="1163:32"><expr pos:start="1163:32" pos:end="1163:32"><name pos:start="1163:32" pos:end="1163:32">i</name></expr></argument>, <argument pos:start="1163:35" pos:end="1163:48"><expr pos:start="1163:35" pos:end="1163:48"><name pos:start="1163:35" pos:end="1163:48">output_streams</name></expr></argument>, <argument pos:start="1163:51" pos:end="1163:67"><expr pos:start="1163:51" pos:end="1163:67"><name pos:start="1163:51" pos:end="1163:67">nb_output_streams</name></expr></argument>, <argument pos:start="1163:70" pos:end="1163:73"><expr pos:start="1163:70" pos:end="1163:73"><name pos:start="1163:70" pos:end="1163:73">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="1169:5" pos:end="1169:54"><expr pos:start="1169:5" pos:end="1169:53"><call pos:start="1169:5" pos:end="1169:53"><name pos:start="1169:5" pos:end="1169:18">flush_encoders</name><argument_list pos:start="1169:19" pos:end="1169:53">(<argument pos:start="1169:20" pos:end="1169:33"><expr pos:start="1169:20" pos:end="1169:33"><name pos:start="1169:20" pos:end="1169:33">output_streams</name></expr></argument>, <argument pos:start="1169:36" pos:end="1169:52"><expr pos:start="1169:36" pos:end="1169:52"><name pos:start="1169:36" pos:end="1169:52">nb_output_streams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="1173:5" pos:end="1173:16"><expr pos:start="1173:5" pos:end="1173:15"><call pos:start="1173:5" pos:end="1173:15"><name pos:start="1173:5" pos:end="1173:13">term_exit</name><argument_list pos:start="1173:14" pos:end="1173:15">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="1177:5" pos:end="1177:52">/* write the trailer if needed and close file */</comment>

    <for pos:start="1179:5" pos:end="1185:5">for<control pos:start="1179:8" pos:end="1179:34">(<init pos:start="1179:9" pos:end="1179:12"><expr pos:start="1179:9" pos:end="1179:11"><name pos:start="1179:9" pos:end="1179:9">i</name><operator pos:start="1179:10" pos:end="1179:10">=</operator><literal type="number" pos:start="1179:11" pos:end="1179:11">0</literal></expr>;</init><condition pos:start="1179:13" pos:end="1179:30"><expr pos:start="1179:13" pos:end="1179:29"><name pos:start="1179:13" pos:end="1179:13">i</name><operator pos:start="1179:14" pos:end="1179:14">&lt;</operator><name pos:start="1179:15" pos:end="1179:29">nb_output_files</name></expr>;</condition><incr pos:start="1179:31" pos:end="1179:33"><expr pos:start="1179:31" pos:end="1179:33"><name pos:start="1179:31" pos:end="1179:31">i</name><operator pos:start="1179:32" pos:end="1179:33">++</operator></expr></incr>)</control> <block pos:start="1179:36" pos:end="1185:5">{<block_content pos:start="1181:9" pos:end="1183:29">

        <expr_stmt pos:start="1181:9" pos:end="1181:33"><expr pos:start="1181:9" pos:end="1181:32"><name pos:start="1181:9" pos:end="1181:10">os</name> <operator pos:start="1181:12" pos:end="1181:12">=</operator> <name pos:start="1181:14" pos:end="1181:28"><name pos:start="1181:14" pos:end="1181:25">output_files</name><index pos:start="1181:26" pos:end="1181:28">[<expr pos:start="1181:27" pos:end="1181:27"><name pos:start="1181:27" pos:end="1181:27">i</name></expr>]</index></name><operator pos:start="1181:29" pos:end="1181:29">.</operator><name pos:start="1181:30" pos:end="1181:32">ctx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="1183:9" pos:end="1183:29"><expr pos:start="1183:9" pos:end="1183:28"><call pos:start="1183:9" pos:end="1183:28"><name pos:start="1183:9" pos:end="1183:24">av_write_trailer</name><argument_list pos:start="1183:25" pos:end="1183:28">(<argument pos:start="1183:26" pos:end="1183:27"><expr pos:start="1183:26" pos:end="1183:27"><name pos:start="1183:26" pos:end="1183:27">os</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1189:5" pos:end="1189:64">/* dump report by using the first video and audio streams */</comment>

    <expr_stmt pos:start="1191:5" pos:end="1191:82"><expr pos:start="1191:5" pos:end="1191:81"><call pos:start="1191:5" pos:end="1191:81"><name pos:start="1191:5" pos:end="1191:16">print_report</name><argument_list pos:start="1191:17" pos:end="1191:81">(<argument pos:start="1191:18" pos:end="1191:29"><expr pos:start="1191:18" pos:end="1191:29"><name pos:start="1191:18" pos:end="1191:29">output_files</name></expr></argument>, <argument pos:start="1191:32" pos:end="1191:45"><expr pos:start="1191:32" pos:end="1191:45"><name pos:start="1191:32" pos:end="1191:45">output_streams</name></expr></argument>, <argument pos:start="1191:48" pos:end="1191:64"><expr pos:start="1191:48" pos:end="1191:64"><name pos:start="1191:48" pos:end="1191:64">nb_output_streams</name></expr></argument>, <argument pos:start="1191:67" pos:end="1191:67"><expr pos:start="1191:67" pos:end="1191:67"><literal type="number" pos:start="1191:67" pos:end="1191:67">1</literal></expr></argument>, <argument pos:start="1191:70" pos:end="1191:80"><expr pos:start="1191:70" pos:end="1191:80"><name pos:start="1191:70" pos:end="1191:80">timer_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="1195:5" pos:end="1195:28">/* close each encoder */</comment>

    <for pos:start="1197:5" pos:end="1215:5">for <control pos:start="1197:9" pos:end="1197:43">(<init pos:start="1197:10" pos:end="1197:15"><expr pos:start="1197:10" pos:end="1197:14"><name pos:start="1197:10" pos:end="1197:10">i</name> <operator pos:start="1197:12" pos:end="1197:12">=</operator> <literal type="number" pos:start="1197:14" pos:end="1197:14">0</literal></expr>;</init> <condition pos:start="1197:17" pos:end="1197:38"><expr pos:start="1197:17" pos:end="1197:37"><name pos:start="1197:17" pos:end="1197:17">i</name> <operator pos:start="1197:19" pos:end="1197:19">&lt;</operator> <name pos:start="1197:21" pos:end="1197:37">nb_output_streams</name></expr>;</condition> <incr pos:start="1197:40" pos:end="1197:42"><expr pos:start="1197:40" pos:end="1197:42"><name pos:start="1197:40" pos:end="1197:40">i</name><operator pos:start="1197:41" pos:end="1197:42">++</operator></expr></incr>)</control> <block pos:start="1197:45" pos:end="1215:5">{<block_content pos:start="1199:9" pos:end="1214:0">

        <expr_stmt pos:start="1199:9" pos:end="1199:33"><expr pos:start="1199:9" pos:end="1199:32"><name pos:start="1199:9" pos:end="1199:11">ost</name> <operator pos:start="1199:13" pos:end="1199:13">=</operator> <operator pos:start="1199:15" pos:end="1199:15">&amp;</operator><name pos:start="1199:16" pos:end="1199:32"><name pos:start="1199:16" pos:end="1199:29">output_streams</name><index pos:start="1199:30" pos:end="1199:32">[<expr pos:start="1199:31" pos:end="1199:31"><name pos:start="1199:31" pos:end="1199:31">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="1201:9" pos:end="1210:0"><if pos:start="1201:9" pos:end="1210:0">if <condition pos:start="1201:12" pos:end="1201:33">(<expr pos:start="1201:13" pos:end="1201:32"><name pos:start="1201:13" pos:end="1201:32"><name pos:start="1201:13" pos:end="1201:15">ost</name><operator pos:start="1201:16" pos:end="1201:17">-&gt;</operator><name pos:start="1201:18" pos:end="1201:32">encoding_needed</name></name></expr>)</condition> <block pos:start="1201:35" pos:end="1210:0">{<block_content pos:start="1203:13" pos:end="1205:42">

            <expr_stmt pos:start="1203:13" pos:end="1203:48"><expr pos:start="1203:13" pos:end="1203:47"><call pos:start="1203:13" pos:end="1203:47"><name pos:start="1203:13" pos:end="1203:20">av_freep</name><argument_list pos:start="1203:21" pos:end="1203:47">(<argument pos:start="1203:22" pos:end="1203:46"><expr pos:start="1203:22" pos:end="1203:46"><operator pos:start="1203:22" pos:end="1203:22">&amp;</operator><name pos:start="1203:23" pos:end="1203:46"><name pos:start="1203:23" pos:end="1203:25">ost</name><operator pos:start="1203:26" pos:end="1203:27">-&gt;</operator><name pos:start="1203:28" pos:end="1203:29">st</name><operator pos:start="1203:30" pos:end="1203:31">-&gt;</operator><name pos:start="1203:32" pos:end="1203:36">codec</name><operator pos:start="1203:37" pos:end="1203:38">-&gt;</operator><name pos:start="1203:39" pos:end="1203:46">stats_in</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1205:13" pos:end="1205:42"><expr pos:start="1205:13" pos:end="1205:41"><call pos:start="1205:13" pos:end="1205:41"><name pos:start="1205:13" pos:end="1205:25">avcodec_close</name><argument_list pos:start="1205:26" pos:end="1205:41">(<argument pos:start="1205:27" pos:end="1205:40"><expr pos:start="1205:27" pos:end="1205:40"><name pos:start="1205:27" pos:end="1205:40"><name pos:start="1205:27" pos:end="1205:29">ost</name><operator pos:start="1205:30" pos:end="1205:31">-&gt;</operator><name pos:start="1205:32" pos:end="1205:33">st</name><operator pos:start="1205:34" pos:end="1205:35">-&gt;</operator><name pos:start="1205:36" pos:end="1205:40">codec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:if pos:start="1209:1" pos:end="1209:19">#<cpp:directive pos:start="1209:2" pos:end="1209:3">if</cpp:directive> <expr pos:start="1209:5" pos:end="1209:19"><name pos:start="1209:5" pos:end="1209:19">CONFIG_AVFILTER</name></expr></cpp:if>

        <expr_stmt pos:start="1211:9" pos:end="1214:0"><expr pos:start="1211:9" pos:end="1211:40"><call pos:start="1211:9" pos:end="1211:40"><name pos:start="1211:9" pos:end="1211:27">avfilter_graph_free</name><argument_list pos:start="1211:28" pos:end="1211:40">(<argument pos:start="1211:29" pos:end="1211:39"><expr pos:start="1211:29" pos:end="1211:39"><operator pos:start="1211:29" pos:end="1211:29">&amp;</operator><name pos:start="1211:30" pos:end="1211:39"><name pos:start="1211:30" pos:end="1211:32">ost</name><operator pos:start="1211:33" pos:end="1211:34">-&gt;</operator><name pos:start="1211:35" pos:end="1211:39">graph</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="1213:1" pos:end="1213:6">#<cpp:directive pos:start="1213:2" pos:end="1213:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></for>



    <comment type="block" pos:start="1219:5" pos:end="1219:28">/* close each decoder */</comment>

    <for pos:start="1221:5" pos:end="1231:5">for <control pos:start="1221:9" pos:end="1221:42">(<init pos:start="1221:10" pos:end="1221:15"><expr pos:start="1221:10" pos:end="1221:14"><name pos:start="1221:10" pos:end="1221:10">i</name> <operator pos:start="1221:12" pos:end="1221:12">=</operator> <literal type="number" pos:start="1221:14" pos:end="1221:14">0</literal></expr>;</init> <condition pos:start="1221:17" pos:end="1221:37"><expr pos:start="1221:17" pos:end="1221:36"><name pos:start="1221:17" pos:end="1221:17">i</name> <operator pos:start="1221:19" pos:end="1221:19">&lt;</operator> <name pos:start="1221:21" pos:end="1221:36">nb_input_streams</name></expr>;</condition> <incr pos:start="1221:39" pos:end="1221:41"><expr pos:start="1221:39" pos:end="1221:41"><name pos:start="1221:39" pos:end="1221:39">i</name><operator pos:start="1221:40" pos:end="1221:41">++</operator></expr></incr>)</control> <block pos:start="1221:44" pos:end="1231:5">{<block_content pos:start="1223:9" pos:end="1229:9">

        <expr_stmt pos:start="1223:9" pos:end="1223:32"><expr pos:start="1223:9" pos:end="1223:31"><name pos:start="1223:9" pos:end="1223:11">ist</name> <operator pos:start="1223:13" pos:end="1223:13">=</operator> <operator pos:start="1223:15" pos:end="1223:15">&amp;</operator><name pos:start="1223:16" pos:end="1223:31"><name pos:start="1223:16" pos:end="1223:28">input_streams</name><index pos:start="1223:29" pos:end="1223:31">[<expr pos:start="1223:30" pos:end="1223:30"><name pos:start="1223:30" pos:end="1223:30">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="1225:9" pos:end="1229:9"><if pos:start="1225:9" pos:end="1229:9">if <condition pos:start="1225:12" pos:end="1225:33">(<expr pos:start="1225:13" pos:end="1225:32"><name pos:start="1225:13" pos:end="1225:32"><name pos:start="1225:13" pos:end="1225:15">ist</name><operator pos:start="1225:16" pos:end="1225:17">-&gt;</operator><name pos:start="1225:18" pos:end="1225:32">decoding_needed</name></name></expr>)</condition> <block pos:start="1225:35" pos:end="1229:9">{<block_content pos:start="1227:13" pos:end="1227:42">

            <expr_stmt pos:start="1227:13" pos:end="1227:42"><expr pos:start="1227:13" pos:end="1227:41"><call pos:start="1227:13" pos:end="1227:41"><name pos:start="1227:13" pos:end="1227:25">avcodec_close</name><argument_list pos:start="1227:26" pos:end="1227:41">(<argument pos:start="1227:27" pos:end="1227:40"><expr pos:start="1227:27" pos:end="1227:40"><name pos:start="1227:27" pos:end="1227:40"><name pos:start="1227:27" pos:end="1227:29">ist</name><operator pos:start="1227:30" pos:end="1227:31">-&gt;</operator><name pos:start="1227:32" pos:end="1227:33">st</name><operator pos:start="1227:34" pos:end="1227:35">-&gt;</operator><name pos:start="1227:36" pos:end="1227:40">codec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1235:5" pos:end="1235:20">/* finished ! */</comment>

    <expr_stmt pos:start="1237:5" pos:end="1237:12"><expr pos:start="1237:5" pos:end="1237:11"><name pos:start="1237:5" pos:end="1237:7">ret</name> <operator pos:start="1237:9" pos:end="1237:9">=</operator> <literal type="number" pos:start="1237:11" pos:end="1237:11">0</literal></expr>;</expr_stmt>



 <label pos:start="1241:2" pos:end="1241:6"><name pos:start="1241:2" pos:end="1241:5">fail</name>:</label>

    <expr_stmt pos:start="1243:5" pos:end="1243:26"><expr pos:start="1243:5" pos:end="1243:25"><call pos:start="1243:5" pos:end="1243:25"><name pos:start="1243:5" pos:end="1243:12">av_freep</name><argument_list pos:start="1243:13" pos:end="1243:25">(<argument pos:start="1243:14" pos:end="1243:24"><expr pos:start="1243:14" pos:end="1243:24"><operator pos:start="1243:14" pos:end="1243:14">&amp;</operator><name pos:start="1243:15" pos:end="1243:24">bit_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1245:5" pos:end="1245:25"><expr pos:start="1245:5" pos:end="1245:24"><call pos:start="1245:5" pos:end="1245:24"><name pos:start="1245:5" pos:end="1245:12">av_freep</name><argument_list pos:start="1245:13" pos:end="1245:24">(<argument pos:start="1245:14" pos:end="1245:23"><expr pos:start="1245:14" pos:end="1245:23"><operator pos:start="1245:14" pos:end="1245:14">&amp;</operator><name pos:start="1245:15" pos:end="1245:23">no_packet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="1249:5" pos:end="1297:5"><if pos:start="1249:5" pos:end="1297:5">if <condition pos:start="1249:8" pos:end="1249:23">(<expr pos:start="1249:9" pos:end="1249:22"><name pos:start="1249:9" pos:end="1249:22">output_streams</name></expr>)</condition> <block pos:start="1249:25" pos:end="1297:5">{<block_content pos:start="1251:9" pos:end="1295:9">

        <for pos:start="1251:9" pos:end="1295:9">for <control pos:start="1251:13" pos:end="1251:47">(<init pos:start="1251:14" pos:end="1251:19"><expr pos:start="1251:14" pos:end="1251:18"><name pos:start="1251:14" pos:end="1251:14">i</name> <operator pos:start="1251:16" pos:end="1251:16">=</operator> <literal type="number" pos:start="1251:18" pos:end="1251:18">0</literal></expr>;</init> <condition pos:start="1251:21" pos:end="1251:42"><expr pos:start="1251:21" pos:end="1251:41"><name pos:start="1251:21" pos:end="1251:21">i</name> <operator pos:start="1251:23" pos:end="1251:23">&lt;</operator> <name pos:start="1251:25" pos:end="1251:41">nb_output_streams</name></expr>;</condition> <incr pos:start="1251:44" pos:end="1251:46"><expr pos:start="1251:44" pos:end="1251:46"><name pos:start="1251:44" pos:end="1251:44">i</name><operator pos:start="1251:45" pos:end="1251:46">++</operator></expr></incr>)</control> <block pos:start="1251:49" pos:end="1295:9">{<block_content pos:start="1253:13" pos:end="1293:13">

            <expr_stmt pos:start="1253:13" pos:end="1253:37"><expr pos:start="1253:13" pos:end="1253:36"><name pos:start="1253:13" pos:end="1253:15">ost</name> <operator pos:start="1253:17" pos:end="1253:17">=</operator> <operator pos:start="1253:19" pos:end="1253:19">&amp;</operator><name pos:start="1253:20" pos:end="1253:36"><name pos:start="1253:20" pos:end="1253:33">output_streams</name><index pos:start="1253:34" pos:end="1253:36">[<expr pos:start="1253:35" pos:end="1253:35"><name pos:start="1253:35" pos:end="1253:35">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="1255:13" pos:end="1293:13"><if pos:start="1255:13" pos:end="1293:13">if <condition pos:start="1255:16" pos:end="1255:20">(<expr pos:start="1255:17" pos:end="1255:19"><name pos:start="1255:17" pos:end="1255:19">ost</name></expr>)</condition> <block pos:start="1255:22" pos:end="1293:13">{<block_content pos:start="1257:17" pos:end="1291:41">

                <if_stmt pos:start="1257:17" pos:end="1259:57"><if pos:start="1257:17" pos:end="1259:57">if <condition pos:start="1257:20" pos:end="1257:41">(<expr pos:start="1257:21" pos:end="1257:40"><name pos:start="1257:21" pos:end="1257:40"><name pos:start="1257:21" pos:end="1257:23">ost</name><operator pos:start="1257:24" pos:end="1257:25">-&gt;</operator><name pos:start="1257:26" pos:end="1257:27">st</name><operator pos:start="1257:28" pos:end="1257:29">-&gt;</operator><name pos:start="1257:30" pos:end="1257:40">stream_copy</name></name></expr>)</condition><block type="pseudo" pos:start="1259:21" pos:end="1259:57"><block_content pos:start="1259:21" pos:end="1259:57">

                    <expr_stmt pos:start="1259:21" pos:end="1259:57"><expr pos:start="1259:21" pos:end="1259:56"><call pos:start="1259:21" pos:end="1259:56"><name pos:start="1259:21" pos:end="1259:28">av_freep</name><argument_list pos:start="1259:29" pos:end="1259:56">(<argument pos:start="1259:30" pos:end="1259:55"><expr pos:start="1259:30" pos:end="1259:55"><operator pos:start="1259:30" pos:end="1259:30">&amp;</operator><name pos:start="1259:31" pos:end="1259:55"><name pos:start="1259:31" pos:end="1259:33">ost</name><operator pos:start="1259:34" pos:end="1259:35">-&gt;</operator><name pos:start="1259:36" pos:end="1259:37">st</name><operator pos:start="1259:38" pos:end="1259:39">-&gt;</operator><name pos:start="1259:40" pos:end="1259:44">codec</name><operator pos:start="1259:45" pos:end="1259:46">-&gt;</operator><name pos:start="1259:47" pos:end="1259:55">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="1261:17" pos:end="1267:17"><if pos:start="1261:17" pos:end="1267:17">if <condition pos:start="1261:20" pos:end="1261:33">(<expr pos:start="1261:21" pos:end="1261:32"><name pos:start="1261:21" pos:end="1261:32"><name pos:start="1261:21" pos:end="1261:23">ost</name><operator pos:start="1261:24" pos:end="1261:25">-&gt;</operator><name pos:start="1261:26" pos:end="1261:32">logfile</name></name></expr>)</condition> <block pos:start="1261:35" pos:end="1267:17">{<block_content pos:start="1263:21" pos:end="1265:40">

                    <expr_stmt pos:start="1263:21" pos:end="1263:41"><expr pos:start="1263:21" pos:end="1263:40"><call pos:start="1263:21" pos:end="1263:40"><name pos:start="1263:21" pos:end="1263:26">fclose</name><argument_list pos:start="1263:27" pos:end="1263:40">(<argument pos:start="1263:28" pos:end="1263:39"><expr pos:start="1263:28" pos:end="1263:39"><name pos:start="1263:28" pos:end="1263:39"><name pos:start="1263:28" pos:end="1263:30">ost</name><operator pos:start="1263:31" pos:end="1263:32">-&gt;</operator><name pos:start="1263:33" pos:end="1263:39">logfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1265:21" pos:end="1265:40"><expr pos:start="1265:21" pos:end="1265:39"><name pos:start="1265:21" pos:end="1265:32"><name pos:start="1265:21" pos:end="1265:23">ost</name><operator pos:start="1265:24" pos:end="1265:25">-&gt;</operator><name pos:start="1265:26" pos:end="1265:32">logfile</name></name> <operator pos:start="1265:34" pos:end="1265:34">=</operator> <name pos:start="1265:36" pos:end="1265:39">NULL</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="1269:17" pos:end="1269:40"><expr pos:start="1269:17" pos:end="1269:39"><call pos:start="1269:17" pos:end="1269:39"><name pos:start="1269:17" pos:end="1269:28">av_fifo_free</name><argument_list pos:start="1269:29" pos:end="1269:39">(<argument pos:start="1269:30" pos:end="1269:38"><expr pos:start="1269:30" pos:end="1269:38"><name pos:start="1269:30" pos:end="1269:38"><name pos:start="1269:30" pos:end="1269:32">ost</name><operator pos:start="1269:33" pos:end="1269:34">-&gt;</operator><name pos:start="1269:35" pos:end="1269:38">fifo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="1269:42" pos:end="1271:75">/* works even if fifo is not

                                             initialized but set to zero */</comment>

                <expr_stmt pos:start="1273:17" pos:end="1273:59"><expr pos:start="1273:17" pos:end="1273:58"><call pos:start="1273:17" pos:end="1273:58"><name pos:start="1273:17" pos:end="1273:24">av_freep</name><argument_list pos:start="1273:25" pos:end="1273:58">(<argument pos:start="1273:26" pos:end="1273:57"><expr pos:start="1273:26" pos:end="1273:57"><operator pos:start="1273:26" pos:end="1273:26">&amp;</operator><name pos:start="1273:27" pos:end="1273:57"><name pos:start="1273:27" pos:end="1273:29">ost</name><operator pos:start="1273:30" pos:end="1273:31">-&gt;</operator><name pos:start="1273:32" pos:end="1273:33">st</name><operator pos:start="1273:34" pos:end="1273:35">-&gt;</operator><name pos:start="1273:36" pos:end="1273:40">codec</name><operator pos:start="1273:41" pos:end="1273:42">-&gt;</operator><name pos:start="1273:43" pos:end="1273:57">subtitle_header</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1275:17" pos:end="1275:53"><expr pos:start="1275:17" pos:end="1275:52"><call pos:start="1275:17" pos:end="1275:52"><name pos:start="1275:17" pos:end="1275:23">av_free</name><argument_list pos:start="1275:24" pos:end="1275:52">(<argument pos:start="1275:25" pos:end="1275:51"><expr pos:start="1275:25" pos:end="1275:51"><name pos:start="1275:25" pos:end="1275:51"><name pos:start="1275:25" pos:end="1275:27">ost</name><operator pos:start="1275:28" pos:end="1275:29">-&gt;</operator><name pos:start="1275:30" pos:end="1275:43">resample_frame</name><operator pos:start="1275:44" pos:end="1275:44">.</operator><name pos:start="1275:45" pos:end="1275:48">data</name><index pos:start="1275:49" pos:end="1275:51">[<expr pos:start="1275:50" pos:end="1275:50"><literal type="number" pos:start="1275:50" pos:end="1275:50">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1277:17" pos:end="1277:44"><expr pos:start="1277:17" pos:end="1277:43"><call pos:start="1277:17" pos:end="1277:43"><name pos:start="1277:17" pos:end="1277:23">av_free</name><argument_list pos:start="1277:24" pos:end="1277:43">(<argument pos:start="1277:25" pos:end="1277:42"><expr pos:start="1277:25" pos:end="1277:42"><name pos:start="1277:25" pos:end="1277:42"><name pos:start="1277:25" pos:end="1277:27">ost</name><operator pos:start="1277:28" pos:end="1277:29">-&gt;</operator><name pos:start="1277:30" pos:end="1277:42">forced_kf_pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1279:17" pos:end="1281:59"><if pos:start="1279:17" pos:end="1281:59">if <condition pos:start="1279:20" pos:end="1279:40">(<expr pos:start="1279:21" pos:end="1279:39"><name pos:start="1279:21" pos:end="1279:39"><name pos:start="1279:21" pos:end="1279:23">ost</name><operator pos:start="1279:24" pos:end="1279:25">-&gt;</operator><name pos:start="1279:26" pos:end="1279:39">video_resample</name></name></expr>)</condition><block type="pseudo" pos:start="1281:21" pos:end="1281:59"><block_content pos:start="1281:21" pos:end="1281:59">

                    <expr_stmt pos:start="1281:21" pos:end="1281:59"><expr pos:start="1281:21" pos:end="1281:58"><call pos:start="1281:21" pos:end="1281:58"><name pos:start="1281:21" pos:end="1281:35">sws_freeContext</name><argument_list pos:start="1281:36" pos:end="1281:58">(<argument pos:start="1281:37" pos:end="1281:57"><expr pos:start="1281:37" pos:end="1281:57"><name pos:start="1281:37" pos:end="1281:57"><name pos:start="1281:37" pos:end="1281:39">ost</name><operator pos:start="1281:40" pos:end="1281:41">-&gt;</operator><name pos:start="1281:42" pos:end="1281:57">img_resample_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="1283:17" pos:end="1285:56"><if pos:start="1283:17" pos:end="1285:56">if <condition pos:start="1283:20" pos:end="1283:34">(<expr pos:start="1283:21" pos:end="1283:33"><name pos:start="1283:21" pos:end="1283:33"><name pos:start="1283:21" pos:end="1283:23">ost</name><operator pos:start="1283:24" pos:end="1283:25">-&gt;</operator><name pos:start="1283:26" pos:end="1283:33">resample</name></name></expr>)</condition><block type="pseudo" pos:start="1285:21" pos:end="1285:56"><block_content pos:start="1285:21" pos:end="1285:56">

                    <expr_stmt pos:start="1285:21" pos:end="1285:56"><expr pos:start="1285:21" pos:end="1285:55"><call pos:start="1285:21" pos:end="1285:55"><name pos:start="1285:21" pos:end="1285:40">audio_resample_close</name><argument_list pos:start="1285:41" pos:end="1285:55">(<argument pos:start="1285:42" pos:end="1285:54"><expr pos:start="1285:42" pos:end="1285:54"><name pos:start="1285:42" pos:end="1285:54"><name pos:start="1285:42" pos:end="1285:44">ost</name><operator pos:start="1285:45" pos:end="1285:46">-&gt;</operator><name pos:start="1285:47" pos:end="1285:54">resample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="1287:17" pos:end="1289:61"><if pos:start="1287:17" pos:end="1289:61">if <condition pos:start="1287:20" pos:end="1287:38">(<expr pos:start="1287:21" pos:end="1287:37"><name pos:start="1287:21" pos:end="1287:37"><name pos:start="1287:21" pos:end="1287:23">ost</name><operator pos:start="1287:24" pos:end="1287:25">-&gt;</operator><name pos:start="1287:26" pos:end="1287:37">reformat_ctx</name></name></expr>)</condition><block type="pseudo" pos:start="1289:21" pos:end="1289:61"><block_content pos:start="1289:21" pos:end="1289:61">

                    <expr_stmt pos:start="1289:21" pos:end="1289:61"><expr pos:start="1289:21" pos:end="1289:60"><call pos:start="1289:21" pos:end="1289:60"><name pos:start="1289:21" pos:end="1289:41">av_audio_convert_free</name><argument_list pos:start="1289:42" pos:end="1289:60">(<argument pos:start="1289:43" pos:end="1289:59"><expr pos:start="1289:43" pos:end="1289:59"><name pos:start="1289:43" pos:end="1289:59"><name pos:start="1289:43" pos:end="1289:45">ost</name><operator pos:start="1289:46" pos:end="1289:47">-&gt;</operator><name pos:start="1289:48" pos:end="1289:59">reformat_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1291:17" pos:end="1291:41"><expr pos:start="1291:17" pos:end="1291:40"><call pos:start="1291:17" pos:end="1291:40"><name pos:start="1291:17" pos:end="1291:28">av_dict_free</name><argument_list pos:start="1291:29" pos:end="1291:40">(<argument pos:start="1291:30" pos:end="1291:39"><expr pos:start="1291:30" pos:end="1291:39"><operator pos:start="1291:30" pos:end="1291:30">&amp;</operator><name pos:start="1291:31" pos:end="1291:39"><name pos:start="1291:31" pos:end="1291:33">ost</name><operator pos:start="1291:34" pos:end="1291:35">-&gt;</operator><name pos:start="1291:36" pos:end="1291:39">opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <return pos:start="1299:5" pos:end="1299:15">return <expr pos:start="1299:12" pos:end="1299:14"><name pos:start="1299:12" pos:end="1299:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
