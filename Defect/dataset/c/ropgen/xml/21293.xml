<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21293.c" pos:tabs="8"><function pos:start="1:1" pos:end="62:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">idcin_read_header</name><parameter_list pos:start="1:29" pos:end="1:48">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="62:13">{<block_content pos:start="3:5" pos:end="62:13">
    <decl_stmt pos:start="3:5" pos:end="3:28"><decl pos:start="3:5" pos:end="3:27"><type pos:start="3:5" pos:end="3:17"><name pos:start="3:5" pos:end="3:15">AVIOContext</name> <modifier pos:start="3:17" pos:end="3:17">*</modifier></type><name pos:start="3:18" pos:end="3:19">pb</name> <init pos:start="3:21" pos:end="3:27">= <expr pos:start="3:23" pos:end="3:27"><name pos:start="3:23" pos:end="3:27"><name pos:start="3:23" pos:end="3:23">s</name><operator pos:start="3:24" pos:end="3:25">-&gt;</operator><name pos:start="3:26" pos:end="3:27">pb</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:44"><decl pos:start="4:5" pos:end="4:43"><type pos:start="4:5" pos:end="4:23"><name pos:start="4:5" pos:end="4:21">IdcinDemuxContext</name> <modifier pos:start="4:23" pos:end="4:23">*</modifier></type><name pos:start="4:24" pos:end="4:28">idcin</name> <init pos:start="4:30" pos:end="4:43">= <expr pos:start="4:32" pos:end="4:43"><name pos:start="4:32" pos:end="4:43"><name pos:start="4:32" pos:end="4:32">s</name><operator pos:start="4:33" pos:end="4:34">-&gt;</operator><name pos:start="4:35" pos:end="4:43">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:31"><decl pos:start="6:5" pos:end="6:22"><type pos:start="6:5" pos:end="6:16"><name pos:start="6:5" pos:end="6:12">unsigned</name> <name pos:start="6:14" pos:end="6:16">int</name></type> <name pos:start="6:18" pos:end="6:22">width</name></decl>, <decl pos:start="6:25" pos:end="6:30"><type ref="prev" pos:start="6:5" pos:end="6:16"/><name pos:start="6:25" pos:end="6:30">height</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:57"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:28">sample_rate</name></decl>, <decl pos:start="7:31" pos:end="7:46"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:31" pos:end="7:46">bytes_per_sample</name></decl>, <decl pos:start="7:49" pos:end="7:56"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:49" pos:end="7:56">channels</name></decl>;</decl_stmt>
    <comment type="block" pos:start="8:5" pos:end="8:37">/* get the 5 header parameters */</comment>
    <expr_stmt pos:start="9:5" pos:end="9:26"><expr pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:9">width</name> <operator pos:start="9:11" pos:end="9:11">=</operator> <call pos:start="9:13" pos:end="9:25"><name pos:start="9:13" pos:end="9:21">avio_rl32</name><argument_list pos:start="9:22" pos:end="9:25">(<argument pos:start="9:23" pos:end="9:24"><expr pos:start="9:23" pos:end="9:24"><name pos:start="9:23" pos:end="9:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:27"><expr pos:start="10:5" pos:end="10:26"><name pos:start="10:5" pos:end="10:10">height</name> <operator pos:start="10:12" pos:end="10:12">=</operator> <call pos:start="10:14" pos:end="10:26"><name pos:start="10:14" pos:end="10:22">avio_rl32</name><argument_list pos:start="10:23" pos:end="10:26">(<argument pos:start="10:24" pos:end="10:25"><expr pos:start="10:24" pos:end="10:25"><name pos:start="10:24" pos:end="10:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:32"><expr pos:start="11:5" pos:end="11:31"><name pos:start="11:5" pos:end="11:15">sample_rate</name> <operator pos:start="11:17" pos:end="11:17">=</operator> <call pos:start="11:19" pos:end="11:31"><name pos:start="11:19" pos:end="11:27">avio_rl32</name><argument_list pos:start="11:28" pos:end="11:31">(<argument pos:start="11:29" pos:end="11:30"><expr pos:start="11:29" pos:end="11:30"><name pos:start="11:29" pos:end="11:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:37"><expr pos:start="12:5" pos:end="12:36"><name pos:start="12:5" pos:end="12:20">bytes_per_sample</name> <operator pos:start="12:22" pos:end="12:22">=</operator> <call pos:start="12:24" pos:end="12:36"><name pos:start="12:24" pos:end="12:32">avio_rl32</name><argument_list pos:start="12:33" pos:end="12:36">(<argument pos:start="12:34" pos:end="12:35"><expr pos:start="12:34" pos:end="12:35"><name pos:start="12:34" pos:end="12:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:29"><expr pos:start="13:5" pos:end="13:28"><name pos:start="13:5" pos:end="13:12">channels</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <call pos:start="13:16" pos:end="13:28"><name pos:start="13:16" pos:end="13:24">avio_rl32</name><argument_list pos:start="13:25" pos:end="13:28">(<argument pos:start="13:26" pos:end="13:27"><expr pos:start="13:26" pos:end="13:27"><name pos:start="13:26" pos:end="13:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:38"><expr pos:start="14:5" pos:end="14:37"><name pos:start="14:5" pos:end="14:6">st</name> <operator pos:start="14:8" pos:end="14:8">=</operator> <call pos:start="14:10" pos:end="14:37"><name pos:start="14:10" pos:end="14:28">avformat_new_stream</name><argument_list pos:start="14:29" pos:end="14:37">(<argument pos:start="14:30" pos:end="14:30"><expr pos:start="14:30" pos:end="14:30"><name pos:start="14:30" pos:end="14:30">s</name></expr></argument>, <argument pos:start="14:33" pos:end="14:36"><expr pos:start="14:33" pos:end="14:36"><name pos:start="14:33" pos:end="14:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="15:5" pos:end="16:31"><if pos:start="15:5" pos:end="16:31">if <condition pos:start="15:8" pos:end="15:12">(<expr pos:start="15:9" pos:end="15:11"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:11">st</name></expr>)</condition><block type="pseudo" pos:start="16:9" pos:end="16:31"><block_content pos:start="16:9" pos:end="16:31">
        <return pos:start="16:9" pos:end="16:31">return <expr pos:start="16:16" pos:end="16:30"><call pos:start="16:16" pos:end="16:30"><name pos:start="16:16" pos:end="16:22">AVERROR</name><argument_list pos:start="16:23" pos:end="16:30">(<argument pos:start="16:24" pos:end="16:29"><expr pos:start="16:24" pos:end="16:29"><name pos:start="16:24" pos:end="16:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:46"><expr pos:start="17:5" pos:end="17:45"><call pos:start="17:5" pos:end="17:45"><name pos:start="17:5" pos:end="17:23">avpriv_set_pts_info</name><argument_list pos:start="17:24" pos:end="17:45">(<argument pos:start="17:25" pos:end="17:26"><expr pos:start="17:25" pos:end="17:26"><name pos:start="17:25" pos:end="17:26">st</name></expr></argument>, <argument pos:start="17:29" pos:end="17:30"><expr pos:start="17:29" pos:end="17:30"><literal type="number" pos:start="17:29" pos:end="17:30">33</literal></expr></argument>, <argument pos:start="17:33" pos:end="17:33"><expr pos:start="17:33" pos:end="17:33"><literal type="number" pos:start="17:33" pos:end="17:33">1</literal></expr></argument>, <argument pos:start="17:36" pos:end="17:44"><expr pos:start="17:36" pos:end="17:44"><name pos:start="17:36" pos:end="17:44">IDCIN_FPS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:42"><expr pos:start="18:5" pos:end="18:41"><name pos:start="18:5" pos:end="18:29"><name pos:start="18:5" pos:end="18:9">idcin</name><operator pos:start="18:10" pos:end="18:11">-&gt;</operator><name pos:start="18:12" pos:end="18:29">video_stream_index</name></name> <operator pos:start="18:31" pos:end="18:31">=</operator> <name pos:start="18:33" pos:end="18:41"><name pos:start="18:33" pos:end="18:34">st</name><operator pos:start="18:35" pos:end="18:36">-&gt;</operator><name pos:start="18:37" pos:end="18:41">index</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:47"><expr pos:start="19:5" pos:end="19:46"><name pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:6">st</name><operator pos:start="19:7" pos:end="19:8">-&gt;</operator><name pos:start="19:9" pos:end="19:13">codec</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:25">codec_type</name></name> <operator pos:start="19:27" pos:end="19:27">=</operator> <name pos:start="19:29" pos:end="19:46">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:44"><expr pos:start="20:5" pos:end="20:43"><name pos:start="20:5" pos:end="20:23"><name pos:start="20:5" pos:end="20:6">st</name><operator pos:start="20:7" pos:end="20:8">-&gt;</operator><name pos:start="20:9" pos:end="20:13">codec</name><operator pos:start="20:14" pos:end="20:15">-&gt;</operator><name pos:start="20:16" pos:end="20:23">codec_id</name></name> <operator pos:start="20:25" pos:end="20:25">=</operator> <name pos:start="20:27" pos:end="20:43">AV_CODEC_ID_IDCIN</name></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:6">st</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:13">codec</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:24">codec_tag</name></name> <operator pos:start="21:26" pos:end="21:26">=</operator> <literal type="number" pos:start="21:28" pos:end="21:28">0</literal></expr>;</expr_stmt>  <comment type="block" pos:start="21:32" pos:end="21:46">/* no fourcc */</comment>
    <expr_stmt pos:start="22:5" pos:end="22:29"><expr pos:start="22:5" pos:end="22:28"><name pos:start="22:5" pos:end="22:20"><name pos:start="22:5" pos:end="22:6">st</name><operator pos:start="22:7" pos:end="22:8">-&gt;</operator><name pos:start="22:9" pos:end="22:13">codec</name><operator pos:start="22:14" pos:end="22:15">-&gt;</operator><name pos:start="22:16" pos:end="22:20">width</name></name> <operator pos:start="22:22" pos:end="22:22">=</operator> <name pos:start="22:24" pos:end="22:28">width</name></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:31"><expr pos:start="23:5" pos:end="23:30"><name pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:6">st</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:13">codec</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:21">height</name></name> <operator pos:start="23:23" pos:end="23:23">=</operator> <name pos:start="23:25" pos:end="23:30">height</name></expr>;</expr_stmt>
    <comment type="block" pos:start="24:5" pos:end="24:51">/* load up the Huffman tables into extradata */</comment>
    <expr_stmt pos:start="25:5" pos:end="25:51"><expr pos:start="25:5" pos:end="25:50"><name pos:start="25:5" pos:end="25:29"><name pos:start="25:5" pos:end="25:6">st</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:13">codec</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:29">extradata_size</name></name> <operator pos:start="25:31" pos:end="25:31">=</operator> <name pos:start="25:33" pos:end="25:50">HUFFMAN_TABLE_SIZE</name></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:57"><expr pos:start="26:5" pos:end="26:56"><name pos:start="26:5" pos:end="26:24"><name pos:start="26:5" pos:end="26:6">st</name><operator pos:start="26:7" pos:end="26:8">-&gt;</operator><name pos:start="26:9" pos:end="26:13">codec</name><operator pos:start="26:14" pos:end="26:15">-&gt;</operator><name pos:start="26:16" pos:end="26:24">extradata</name></name> <operator pos:start="26:26" pos:end="26:26">=</operator> <call pos:start="26:28" pos:end="26:56"><name pos:start="26:28" pos:end="26:36">av_malloc</name><argument_list pos:start="26:37" pos:end="26:56">(<argument pos:start="26:38" pos:end="26:55"><expr pos:start="26:38" pos:end="26:55"><name pos:start="26:38" pos:end="26:55">HUFFMAN_TABLE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="27:5" pos:end="29:28"><if pos:start="27:5" pos:end="29:28">if <condition pos:start="27:8" pos:end="28:27">(<expr pos:start="27:9" pos:end="28:26"><call pos:start="27:9" pos:end="27:63"><name pos:start="27:9" pos:end="27:17">avio_read</name><argument_list pos:start="27:18" pos:end="27:63">(<argument pos:start="27:19" pos:end="27:20"><expr pos:start="27:19" pos:end="27:20"><name pos:start="27:19" pos:end="27:20">pb</name></expr></argument>, <argument pos:start="27:23" pos:end="27:42"><expr pos:start="27:23" pos:end="27:42"><name pos:start="27:23" pos:end="27:42"><name pos:start="27:23" pos:end="27:24">st</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:31">codec</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:42">extradata</name></name></expr></argument>, <argument pos:start="27:45" pos:end="27:62"><expr pos:start="27:45" pos:end="27:62"><name pos:start="27:45" pos:end="27:62">HUFFMAN_TABLE_SIZE</name></expr></argument>)</argument_list></call> <operator pos:start="27:65" pos:end="27:66">!=</operator>
        <name pos:start="28:9" pos:end="28:26">HUFFMAN_TABLE_SIZE</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:28"><block_content pos:start="29:9" pos:end="29:28">
        <return pos:start="29:9" pos:end="29:28">return <expr pos:start="29:16" pos:end="29:27"><call pos:start="29:16" pos:end="29:27"><name pos:start="29:16" pos:end="29:22">AVERROR</name><argument_list pos:start="29:23" pos:end="29:27">(<argument pos:start="29:24" pos:end="29:26"><expr pos:start="29:24" pos:end="29:26"><name pos:start="29:24" pos:end="29:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
    <comment type="block" pos:start="30:5" pos:end="30:46">/* if sample rate is 0, assume no audio */</comment>
    <if_stmt pos:start="31:5" pos:end="62:13"><if pos:start="31:5" pos:end="62:13">if <condition pos:start="31:8" pos:end="31:20">(<expr pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:19">sample_rate</name></expr>)</condition> <block pos:start="31:22" pos:end="62:13">{<block_content pos:start="32:9" pos:end="62:13">
        <expr_stmt pos:start="32:9" pos:end="32:33"><expr pos:start="32:9" pos:end="32:32"><name pos:start="32:9" pos:end="32:28"><name pos:start="32:9" pos:end="32:13">idcin</name><operator pos:start="32:14" pos:end="32:15">-&gt;</operator><name pos:start="32:16" pos:end="32:28">audio_present</name></name> <operator pos:start="32:30" pos:end="32:30">=</operator> <literal type="number" pos:start="32:32" pos:end="32:32">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="33:9" pos:end="33:42"><expr pos:start="33:9" pos:end="33:41"><name pos:start="33:9" pos:end="33:10">st</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <call pos:start="33:14" pos:end="33:41"><name pos:start="33:14" pos:end="33:32">avformat_new_stream</name><argument_list pos:start="33:33" pos:end="33:41">(<argument pos:start="33:34" pos:end="33:34"><expr pos:start="33:34" pos:end="33:34"><name pos:start="33:34" pos:end="33:34">s</name></expr></argument>, <argument pos:start="33:37" pos:end="33:40"><expr pos:start="33:37" pos:end="33:40"><name pos:start="33:37" pos:end="33:40">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="34:9" pos:end="35:35"><if pos:start="34:9" pos:end="35:35">if <condition pos:start="34:12" pos:end="34:16">(<expr pos:start="34:13" pos:end="34:15"><operator pos:start="34:13" pos:end="34:13">!</operator><name pos:start="34:14" pos:end="34:15">st</name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:35"><block_content pos:start="35:13" pos:end="35:35">
            <return pos:start="35:13" pos:end="35:35">return <expr pos:start="35:20" pos:end="35:34"><call pos:start="35:20" pos:end="35:34"><name pos:start="35:20" pos:end="35:26">AVERROR</name><argument_list pos:start="35:27" pos:end="35:34">(<argument pos:start="35:28" pos:end="35:33"><expr pos:start="35:28" pos:end="35:33"><name pos:start="35:28" pos:end="35:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
        <expr_stmt pos:start="36:9" pos:end="36:50"><expr pos:start="36:9" pos:end="36:49"><call pos:start="36:9" pos:end="36:49"><name pos:start="36:9" pos:end="36:27">avpriv_set_pts_info</name><argument_list pos:start="36:28" pos:end="36:49">(<argument pos:start="36:29" pos:end="36:30"><expr pos:start="36:29" pos:end="36:30"><name pos:start="36:29" pos:end="36:30">st</name></expr></argument>, <argument pos:start="36:33" pos:end="36:34"><expr pos:start="36:33" pos:end="36:34"><literal type="number" pos:start="36:33" pos:end="36:34">33</literal></expr></argument>, <argument pos:start="36:37" pos:end="36:37"><expr pos:start="36:37" pos:end="36:37"><literal type="number" pos:start="36:37" pos:end="36:37">1</literal></expr></argument>, <argument pos:start="36:40" pos:end="36:48"><expr pos:start="36:40" pos:end="36:48"><name pos:start="36:40" pos:end="36:48">IDCIN_FPS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="37:9" pos:end="37:46"><expr pos:start="37:9" pos:end="37:45"><name pos:start="37:9" pos:end="37:33"><name pos:start="37:9" pos:end="37:13">idcin</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:33">audio_stream_index</name></name> <operator pos:start="37:35" pos:end="37:35">=</operator> <name pos:start="37:37" pos:end="37:45"><name pos:start="37:37" pos:end="37:38">st</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:45">index</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="38:9" pos:end="38:51"><expr pos:start="38:9" pos:end="38:50"><name pos:start="38:9" pos:end="38:29"><name pos:start="38:9" pos:end="38:10">st</name><operator pos:start="38:11" pos:end="38:12">-&gt;</operator><name pos:start="38:13" pos:end="38:17">codec</name><operator pos:start="38:18" pos:end="38:19">-&gt;</operator><name pos:start="38:20" pos:end="38:29">codec_type</name></name> <operator pos:start="38:31" pos:end="38:31">=</operator> <name pos:start="38:33" pos:end="38:50">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>
        <expr_stmt pos:start="39:9" pos:end="39:33"><expr pos:start="39:9" pos:end="39:32"><name pos:start="39:9" pos:end="39:28"><name pos:start="39:9" pos:end="39:10">st</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:17">codec</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:28">codec_tag</name></name> <operator pos:start="39:30" pos:end="39:30">=</operator> <literal type="number" pos:start="39:32" pos:end="39:32">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="40:9" pos:end="40:39"><expr pos:start="40:9" pos:end="40:38"><name pos:start="40:9" pos:end="40:27"><name pos:start="40:9" pos:end="40:10">st</name><operator pos:start="40:11" pos:end="40:12">-&gt;</operator><name pos:start="40:13" pos:end="40:17">codec</name><operator pos:start="40:18" pos:end="40:19">-&gt;</operator><name pos:start="40:20" pos:end="40:27">channels</name></name> <operator pos:start="40:29" pos:end="40:29">=</operator> <name pos:start="40:31" pos:end="40:38">channels</name></expr>;</expr_stmt>
        <expr_stmt pos:start="41:9" pos:end="41:45"><expr pos:start="41:9" pos:end="41:44"><name pos:start="41:9" pos:end="41:30"><name pos:start="41:9" pos:end="41:10">st</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:17">codec</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:30">sample_rate</name></name> <operator pos:start="41:32" pos:end="41:32">=</operator> <name pos:start="41:34" pos:end="41:44">sample_rate</name></expr>;</expr_stmt>
        <expr_stmt pos:start="42:9" pos:end="42:64"><expr pos:start="42:9" pos:end="42:63"><name pos:start="42:9" pos:end="42:40"><name pos:start="42:9" pos:end="42:10">st</name><operator pos:start="42:11" pos:end="42:12">-&gt;</operator><name pos:start="42:13" pos:end="42:17">codec</name><operator pos:start="42:18" pos:end="42:19">-&gt;</operator><name pos:start="42:20" pos:end="42:40">bits_per_coded_sample</name></name> <operator pos:start="42:42" pos:end="42:42">=</operator> <name pos:start="42:44" pos:end="42:59">bytes_per_sample</name> <operator pos:start="42:61" pos:end="42:61">*</operator> <literal type="number" pos:start="42:63" pos:end="42:63">8</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="43:9" pos:end="43:76"><expr pos:start="43:9" pos:end="43:75"><name pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:10">st</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:17">codec</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:27">bit_rate</name></name> <operator pos:start="43:29" pos:end="43:29">=</operator> <name pos:start="43:31" pos:end="43:41">sample_rate</name> <operator pos:start="43:43" pos:end="43:43">*</operator> <name pos:start="43:45" pos:end="43:60">bytes_per_sample</name> <operator pos:start="43:62" pos:end="43:62">*</operator> <literal type="number" pos:start="43:64" pos:end="43:64">8</literal> <operator pos:start="43:66" pos:end="43:66">*</operator> <name pos:start="43:68" pos:end="43:75">channels</name></expr>;</expr_stmt>
        <expr_stmt pos:start="44:9" pos:end="44:61"><expr pos:start="44:9" pos:end="44:60"><name pos:start="44:9" pos:end="44:30"><name pos:start="44:9" pos:end="44:10">st</name><operator pos:start="44:11" pos:end="44:12">-&gt;</operator><name pos:start="44:13" pos:end="44:17">codec</name><operator pos:start="44:18" pos:end="44:19">-&gt;</operator><name pos:start="44:20" pos:end="44:30">block_align</name></name> <operator pos:start="44:32" pos:end="44:32">=</operator> <name pos:start="44:34" pos:end="44:49">bytes_per_sample</name> <operator pos:start="44:51" pos:end="44:51">*</operator> <name pos:start="44:53" pos:end="44:60">channels</name></expr>;</expr_stmt>
        <if_stmt pos:start="45:9" pos:end="48:56"><if pos:start="45:9" pos:end="46:53">if <condition pos:start="45:12" pos:end="45:34">(<expr pos:start="45:13" pos:end="45:33"><name pos:start="45:13" pos:end="45:28">bytes_per_sample</name> <operator pos:start="45:30" pos:end="45:31">==</operator> <literal type="number" pos:start="45:33" pos:end="45:33">1</literal></expr>)</condition><block type="pseudo" pos:start="46:13" pos:end="46:53"><block_content pos:start="46:13" pos:end="46:53">
            <expr_stmt pos:start="46:13" pos:end="46:53"><expr pos:start="46:13" pos:end="46:52"><name pos:start="46:13" pos:end="46:31"><name pos:start="46:13" pos:end="46:14">st</name><operator pos:start="46:15" pos:end="46:16">-&gt;</operator><name pos:start="46:17" pos:end="46:21">codec</name><operator pos:start="46:22" pos:end="46:23">-&gt;</operator><name pos:start="46:24" pos:end="46:31">codec_id</name></name> <operator pos:start="46:33" pos:end="46:33">=</operator> <name pos:start="46:35" pos:end="46:52">AV_CODEC_ID_PCM_U8</name></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="47:9" pos:end="48:56">else<block type="pseudo" pos:start="48:13" pos:end="48:56"><block_content pos:start="48:13" pos:end="48:56">
            <expr_stmt pos:start="48:13" pos:end="48:56"><expr pos:start="48:13" pos:end="48:55"><name pos:start="48:13" pos:end="48:31"><name pos:start="48:13" pos:end="48:14">st</name><operator pos:start="48:15" pos:end="48:16">-&gt;</operator><name pos:start="48:17" pos:end="48:21">codec</name><operator pos:start="48:22" pos:end="48:23">-&gt;</operator><name pos:start="48:24" pos:end="48:31">codec_id</name></name> <operator pos:start="48:33" pos:end="48:33">=</operator> <name pos:start="48:35" pos:end="48:55">AV_CODEC_ID_PCM_S16LE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
        <if_stmt pos:start="49:9" pos:end="58:5"><if pos:start="49:9" pos:end="54:9">if <condition pos:start="49:12" pos:end="49:34">(<expr pos:start="49:13" pos:end="49:33"><name pos:start="49:13" pos:end="49:23">sample_rate</name> <operator pos:start="49:25" pos:end="49:25">%</operator> <literal type="number" pos:start="49:27" pos:end="49:28">14</literal> <operator pos:start="49:30" pos:end="49:31">!=</operator> <literal type="number" pos:start="49:33" pos:end="49:33">0</literal></expr>)</condition> <block pos:start="49:36" pos:end="54:9">{<block_content pos:start="50:13" pos:end="53:44">
            <expr_stmt pos:start="50:13" pos:end="51:40"><expr pos:start="50:13" pos:end="51:39"><name pos:start="50:13" pos:end="50:36"><name pos:start="50:13" pos:end="50:17">idcin</name><operator pos:start="50:18" pos:end="50:19">-&gt;</operator><name pos:start="50:20" pos:end="50:36">audio_chunk_size1</name></name> <operator pos:start="50:38" pos:end="50:38">=</operator> <operator pos:start="50:40" pos:end="50:40">(</operator><name pos:start="50:41" pos:end="50:51">sample_rate</name> <operator pos:start="50:53" pos:end="50:53">/</operator> <literal type="number" pos:start="50:55" pos:end="50:56">14</literal><operator pos:start="50:57" pos:end="50:57">)</operator> <operator pos:start="50:59" pos:end="50:59">*</operator>
            <name pos:start="51:13" pos:end="51:28">bytes_per_sample</name> <operator pos:start="51:30" pos:end="51:30">*</operator> <name pos:start="51:32" pos:end="51:39">channels</name></expr>;</expr_stmt>
            <expr_stmt pos:start="52:13" pos:end="53:44"><expr pos:start="52:13" pos:end="53:43"><name pos:start="52:13" pos:end="52:36"><name pos:start="52:13" pos:end="52:17">idcin</name><operator pos:start="52:18" pos:end="52:19">-&gt;</operator><name pos:start="52:20" pos:end="52:36">audio_chunk_size2</name></name> <operator pos:start="52:38" pos:end="52:38">=</operator> <operator pos:start="52:40" pos:end="52:40">(</operator><name pos:start="52:41" pos:end="52:51">sample_rate</name> <operator pos:start="52:53" pos:end="52:53">/</operator> <literal type="number" pos:start="52:55" pos:end="52:58">14</literal> <operator pos:start="52:58" pos:end="52:58">+</operator> <literal type="number" pos:start="52:60" pos:end="52:60">1</literal><operator pos:start="52:61" pos:end="52:61">)</operator> <operator pos:start="52:63" pos:end="52:63">*</operator>
                <name pos:start="53:17" pos:end="53:32">bytes_per_sample</name> <operator pos:start="53:34" pos:end="53:34">*</operator> <name pos:start="53:36" pos:end="53:43">channels</name></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="54:11" pos:end="58:5">else <block pos:start="54:16" pos:end="58:5">{<block_content pos:start="55:13" pos:end="57:39">
            <expr_stmt pos:start="55:13" pos:end="56:65"><expr pos:start="55:13" pos:end="56:64"><name pos:start="55:13" pos:end="55:36"><name pos:start="55:13" pos:end="55:17">idcin</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:36">audio_chunk_size1</name></name> <operator pos:start="55:38" pos:end="55:38">=</operator> <name pos:start="55:40" pos:end="55:63"><name pos:start="55:40" pos:end="55:44">idcin</name><operator pos:start="55:45" pos:end="55:46">-&gt;</operator><name pos:start="55:47" pos:end="55:63">audio_chunk_size2</name></name> <operator pos:start="55:65" pos:end="55:65">=</operator>
                <operator pos:start="56:17" pos:end="56:17">(</operator><name pos:start="56:18" pos:end="56:28">sample_rate</name> <operator pos:start="56:30" pos:end="56:30">/</operator> <literal type="number" pos:start="56:32" pos:end="56:33">14</literal><operator pos:start="56:34" pos:end="56:34">)</operator> <operator pos:start="56:36" pos:end="56:36">*</operator> <name pos:start="56:38" pos:end="56:53">bytes_per_sample</name> <operator pos:start="56:55" pos:end="56:55">*</operator> <name pos:start="56:57" pos:end="56:64">channels</name></expr>;</expr_stmt>
        <expr_stmt pos:start="57:9" pos:end="57:39"><expr pos:start="57:9" pos:end="57:38"><name pos:start="57:9" pos:end="57:34"><name pos:start="57:9" pos:end="57:13">idcin</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:34">current_audio_chunk</name></name> <operator pos:start="57:36" pos:end="57:36">=</operator> <literal type="number" pos:start="57:38" pos:end="57:38">0</literal></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt> <if_stmt pos:start="58:7" pos:end="59:33"><else pos:start="58:7" pos:end="59:33">else<block type="pseudo" pos:start="59:9" pos:end="59:33"><block_content pos:start="59:9" pos:end="59:33">
        <expr_stmt pos:start="59:9" pos:end="59:33"><expr pos:start="59:9" pos:end="59:32"><name pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:13">idcin</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:28">audio_present</name></name> <operator pos:start="59:30" pos:end="59:30">=</operator> <literal type="number" pos:start="59:32" pos:end="59:32">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <expr_stmt pos:start="60:5" pos:end="60:35"><expr pos:start="60:5" pos:end="60:34"><name pos:start="60:5" pos:end="60:30"><name pos:start="60:5" pos:end="60:9">idcin</name><operator pos:start="60:10" pos:end="60:11">-&gt;</operator><name pos:start="60:12" pos:end="60:30">next_chunk_is_video</name></name> <operator pos:start="60:32" pos:end="60:32">=</operator> <literal type="number" pos:start="60:34" pos:end="60:34">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="61:5" pos:end="61:19"><expr pos:start="61:5" pos:end="61:18"><name pos:start="61:5" pos:end="61:14"><name pos:start="61:5" pos:end="61:9">idcin</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:14">pts</name></name> <operator pos:start="61:16" pos:end="61:16">=</operator> <literal type="number" pos:start="61:18" pos:end="61:18">0</literal></expr>;</expr_stmt>
    <return pos:start="62:5" pos:end="62:13">return <expr pos:start="62:12" pos:end="62:12"><literal type="number" pos:start="62:12" pos:end="62:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></function></unit>
