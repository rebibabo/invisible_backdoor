<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20481.c" pos:tabs="8"><function pos:start="1:1" pos:end="175:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">mpeg1_decode_sequence</name><parameter_list pos:start="1:33" pos:end="3:66">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">avctx</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:51"><decl pos:start="3:34" pos:end="3:51"><type pos:start="3:34" pos:end="3:51"><specifier pos:start="3:34" pos:end="3:38">const</specifier> <name pos:start="3:40" pos:end="3:46">uint8_t</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:51">buf</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:65"><decl pos:start="3:54" pos:end="3:65"><type pos:start="3:54" pos:end="3:65"><name pos:start="3:54" pos:end="3:56">int</name></type> <name pos:start="3:58" pos:end="3:65">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="175:1">{<block_content pos:start="7:5" pos:end="173:13">

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">Mpeg1Context</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:20">s1</name>  <init pos:start="7:23" pos:end="7:40">= <expr pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:29">avctx</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">MpegEncContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">s</name> <init pos:start="9:23" pos:end="9:41">= <expr pos:start="9:25" pos:end="9:41"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:27">s1</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:41">mpeg_enc_ctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">width</name></decl>, <decl pos:start="11:16" pos:end="11:21"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:16" pos:end="11:21">height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:12"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:12">v</name></decl>, <decl pos:start="13:15" pos:end="13:15"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:15">j</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:45"><expr pos:start="17:5" pos:end="17:44"><call pos:start="17:5" pos:end="17:44"><name pos:start="17:5" pos:end="17:17">init_get_bits</name><argument_list pos:start="17:18" pos:end="17:44">(<argument pos:start="17:19" pos:end="17:24"><expr pos:start="17:19" pos:end="17:24"><operator pos:start="17:19" pos:end="17:19">&amp;</operator><name pos:start="17:20" pos:end="17:24"><name pos:start="17:20" pos:end="17:20">s</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:24">gb</name></name></expr></argument>, <argument pos:start="17:27" pos:end="17:29"><expr pos:start="17:27" pos:end="17:29"><name pos:start="17:27" pos:end="17:29">buf</name></expr></argument>, <argument pos:start="17:32" pos:end="17:43"><expr pos:start="17:32" pos:end="17:43"><name pos:start="17:32" pos:end="17:39">buf_size</name> <operator pos:start="17:41" pos:end="17:41">*</operator> <literal type="number" pos:start="17:43" pos:end="17:43">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:34"><expr pos:start="21:5" pos:end="21:33"><name pos:start="21:5" pos:end="21:9">width</name>  <operator pos:start="21:12" pos:end="21:12">=</operator> <call pos:start="21:14" pos:end="21:33"><name pos:start="21:14" pos:end="21:21">get_bits</name><argument_list pos:start="21:22" pos:end="21:33">(<argument pos:start="21:23" pos:end="21:28"><expr pos:start="21:23" pos:end="21:28"><operator pos:start="21:23" pos:end="21:23">&amp;</operator><name pos:start="21:24" pos:end="21:28"><name pos:start="21:24" pos:end="21:24">s</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:28">gb</name></name></expr></argument>, <argument pos:start="21:31" pos:end="21:32"><expr pos:start="21:31" pos:end="21:32"><literal type="number" pos:start="21:31" pos:end="21:32">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:10">height</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <call pos:start="23:14" pos:end="23:33"><name pos:start="23:14" pos:end="23:21">get_bits</name><argument_list pos:start="23:22" pos:end="23:33">(<argument pos:start="23:23" pos:end="23:28"><expr pos:start="23:23" pos:end="23:28"><operator pos:start="23:23" pos:end="23:23">&amp;</operator><name pos:start="23:24" pos:end="23:28"><name pos:start="23:24" pos:end="23:24">s</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:28">gb</name></name></expr></argument>, <argument pos:start="23:31" pos:end="23:32"><expr pos:start="23:31" pos:end="23:32"><literal type="number" pos:start="23:31" pos:end="23:32">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="35:5"><if pos:start="25:5" pos:end="35:5">if <condition pos:start="25:8" pos:end="25:34">(<expr pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:13">width</name> <operator pos:start="25:15" pos:end="25:16">==</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal> <operator pos:start="25:20" pos:end="25:21">||</operator> <name pos:start="25:23" pos:end="25:28">height</name> <operator pos:start="25:30" pos:end="25:31">==</operator> <literal type="number" pos:start="25:33" pos:end="25:33">0</literal></expr>)</condition> <block pos:start="25:36" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:39">

        <expr_stmt pos:start="27:9" pos:end="29:63"><expr pos:start="27:9" pos:end="29:62"><call pos:start="27:9" pos:end="29:62"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="29:62">(<argument pos:start="27:16" pos:end="27:20"><expr pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:20">avctx</name></expr></argument>, <argument pos:start="27:23" pos:end="27:36"><expr pos:start="27:23" pos:end="27:36"><name pos:start="27:23" pos:end="27:36">AV_LOG_WARNING</name></expr></argument>,

               <argument pos:start="29:16" pos:end="29:61"><expr pos:start="29:16" pos:end="29:61"><literal type="string" pos:start="29:16" pos:end="29:61">"Invalid horizontal or vertical size value.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="33:39"><if pos:start="31:9" pos:end="33:39">if <condition pos:start="31:12" pos:end="31:73">(<expr pos:start="31:13" pos:end="31:72"><name pos:start="31:13" pos:end="31:34"><name pos:start="31:13" pos:end="31:17">avctx</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:34">err_recognition</name></name> <operator pos:start="31:36" pos:end="31:36">&amp;</operator> <operator pos:start="31:38" pos:end="31:38">(</operator><name pos:start="31:39" pos:end="31:53">AV_EF_BITSTREAM</name> <operator pos:start="31:55" pos:end="31:55">|</operator> <name pos:start="31:57" pos:end="31:71">AV_EF_COMPLIANT</name><operator pos:start="31:72" pos:end="31:72">)</operator></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:39"><block_content pos:start="33:13" pos:end="33:39">

            <return pos:start="33:13" pos:end="33:39">return <expr pos:start="33:20" pos:end="33:38"><name pos:start="33:20" pos:end="33:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:47"><expr pos:start="37:5" pos:end="37:46"><name pos:start="37:5" pos:end="37:24"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:24">aspect_ratio_info</name></name> <operator pos:start="37:26" pos:end="37:26">=</operator> <call pos:start="37:28" pos:end="37:46"><name pos:start="37:28" pos:end="37:35">get_bits</name><argument_list pos:start="37:36" pos:end="37:46">(<argument pos:start="37:37" pos:end="37:42"><expr pos:start="37:37" pos:end="37:42"><operator pos:start="37:37" pos:end="37:37">&amp;</operator><name pos:start="37:38" pos:end="37:42"><name pos:start="37:38" pos:end="37:38">s</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:42">gb</name></name></expr></argument>, <argument pos:start="37:45" pos:end="37:45"><expr pos:start="37:45" pos:end="37:45"><literal type="number" pos:start="37:45" pos:end="37:45">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="39:34">(<expr pos:start="39:9" pos:end="39:33"><name pos:start="39:9" pos:end="39:28"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:28">aspect_ratio_info</name></name> <operator pos:start="39:30" pos:end="39:31">==</operator> <literal type="number" pos:start="39:33" pos:end="39:33">0</literal></expr>)</condition> <block pos:start="39:36" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:39">

        <expr_stmt pos:start="41:9" pos:end="41:76"><expr pos:start="41:9" pos:end="41:75"><call pos:start="41:9" pos:end="41:75"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="41:75">(<argument pos:start="41:16" pos:end="41:20"><expr pos:start="41:16" pos:end="41:20"><name pos:start="41:16" pos:end="41:20">avctx</name></expr></argument>, <argument pos:start="41:23" pos:end="41:34"><expr pos:start="41:23" pos:end="41:34"><name pos:start="41:23" pos:end="41:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:37" pos:end="41:74"><expr pos:start="41:37" pos:end="41:74"><literal type="string" pos:start="41:37" pos:end="41:74">"aspect ratio has forbidden 0 value\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="45:39"><if pos:start="43:9" pos:end="45:39">if <condition pos:start="43:12" pos:end="43:73">(<expr pos:start="43:13" pos:end="43:72"><name pos:start="43:13" pos:end="43:34"><name pos:start="43:13" pos:end="43:17">avctx</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:34">err_recognition</name></name> <operator pos:start="43:36" pos:end="43:36">&amp;</operator> <operator pos:start="43:38" pos:end="43:38">(</operator><name pos:start="43:39" pos:end="43:53">AV_EF_BITSTREAM</name> <operator pos:start="43:55" pos:end="43:55">|</operator> <name pos:start="43:57" pos:end="43:71">AV_EF_COMPLIANT</name><operator pos:start="43:72" pos:end="43:72">)</operator></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:39"><block_content pos:start="45:13" pos:end="45:39">

            <return pos:start="45:13" pos:end="45:39">return <expr pos:start="45:20" pos:end="45:38"><name pos:start="45:20" pos:end="45:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:46"><expr pos:start="49:5" pos:end="49:45"><name pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:23">frame_rate_index</name></name> <operator pos:start="49:25" pos:end="49:25">=</operator> <call pos:start="49:27" pos:end="49:45"><name pos:start="49:27" pos:end="49:34">get_bits</name><argument_list pos:start="49:35" pos:end="49:45">(<argument pos:start="49:36" pos:end="49:41"><expr pos:start="49:36" pos:end="49:41"><operator pos:start="49:36" pos:end="49:36">&amp;</operator><name pos:start="49:37" pos:end="49:41"><name pos:start="49:37" pos:end="49:37">s</name><operator pos:start="49:38" pos:end="49:39">-&gt;</operator><name pos:start="49:40" pos:end="49:41">gb</name></name></expr></argument>, <argument pos:start="49:44" pos:end="49:44"><expr pos:start="49:44" pos:end="49:44"><literal type="number" pos:start="49:44" pos:end="49:44">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="51:61">(<expr pos:start="51:9" pos:end="51:60"><name pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:27">frame_rate_index</name></name> <operator pos:start="51:29" pos:end="51:30">==</operator> <literal type="number" pos:start="51:32" pos:end="51:32">0</literal> <operator pos:start="51:34" pos:end="51:35">||</operator> <name pos:start="51:37" pos:end="51:55"><name pos:start="51:37" pos:end="51:37">s</name><operator pos:start="51:38" pos:end="51:39">-&gt;</operator><name pos:start="51:40" pos:end="51:55">frame_rate_index</name></name> <operator pos:start="51:57" pos:end="51:57">&gt;</operator> <literal type="number" pos:start="51:59" pos:end="51:60">13</literal></expr>)</condition> <block pos:start="51:63" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:32">

        <expr_stmt pos:start="53:9" pos:end="55:72"><expr pos:start="53:9" pos:end="55:71"><call pos:start="53:9" pos:end="55:71"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="55:71">(<argument pos:start="53:16" pos:end="53:20"><expr pos:start="53:16" pos:end="53:20"><name pos:start="53:16" pos:end="53:20">avctx</name></expr></argument>, <argument pos:start="53:23" pos:end="53:36"><expr pos:start="53:23" pos:end="53:36"><name pos:start="53:23" pos:end="53:36">AV_LOG_WARNING</name></expr></argument>,

               <argument pos:start="55:16" pos:end="55:49"><expr pos:start="55:16" pos:end="55:49"><literal type="string" pos:start="55:16" pos:end="55:49">"frame_rate_index %d is invalid\n"</literal></expr></argument>, <argument pos:start="55:52" pos:end="55:70"><expr pos:start="55:52" pos:end="55:70"><name pos:start="55:52" pos:end="55:70"><name pos:start="55:52" pos:end="55:52">s</name><operator pos:start="55:53" pos:end="55:54">-&gt;</operator><name pos:start="55:55" pos:end="55:70">frame_rate_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:32"><expr pos:start="57:9" pos:end="57:31"><name pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:27">frame_rate_index</name></name> <operator pos:start="57:29" pos:end="57:29">=</operator> <literal type="number" pos:start="57:31" pos:end="57:31">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:45"><expr pos:start="61:5" pos:end="61:44"><name pos:start="61:5" pos:end="61:15"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:15">bit_rate</name></name> <operator pos:start="61:17" pos:end="61:17">=</operator> <call pos:start="61:19" pos:end="61:38"><name pos:start="61:19" pos:end="61:26">get_bits</name><argument_list pos:start="61:27" pos:end="61:38">(<argument pos:start="61:28" pos:end="61:33"><expr pos:start="61:28" pos:end="61:33"><operator pos:start="61:28" pos:end="61:28">&amp;</operator><name pos:start="61:29" pos:end="61:33"><name pos:start="61:29" pos:end="61:29">s</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:33">gb</name></name></expr></argument>, <argument pos:start="61:36" pos:end="61:37"><expr pos:start="61:36" pos:end="61:37"><literal type="number" pos:start="61:36" pos:end="61:37">18</literal></expr></argument>)</argument_list></call> <operator pos:start="61:40" pos:end="61:40">*</operator> <literal type="number" pos:start="61:42" pos:end="61:44">400</literal></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if <condition pos:start="63:8" pos:end="63:56">(<expr pos:start="63:9" pos:end="63:55"><call pos:start="63:9" pos:end="63:50"><name pos:start="63:9" pos:end="63:20">check_marker</name><argument_list pos:start="63:21" pos:end="63:50">(<argument pos:start="63:22" pos:end="63:27"><expr pos:start="63:22" pos:end="63:27"><operator pos:start="63:22" pos:end="63:22">&amp;</operator><name pos:start="63:23" pos:end="63:27"><name pos:start="63:23" pos:end="63:23">s</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:27">gb</name></name></expr></argument>, <argument pos:start="63:30" pos:end="63:49"><expr pos:start="63:30" pos:end="63:49"><literal type="string" pos:start="63:30" pos:end="63:49">"in sequence header"</literal></expr></argument>)</argument_list></call> <operator pos:start="63:52" pos:end="63:53">==</operator> <literal type="number" pos:start="63:55" pos:end="63:55">0</literal></expr>)</condition> <block pos:start="63:58" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:35">

        <return pos:start="65:9" pos:end="65:35">return <expr pos:start="65:16" pos:end="65:34"><name pos:start="65:16" pos:end="65:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:64"><expr pos:start="71:5" pos:end="71:63"><name pos:start="71:5" pos:end="71:28"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:12">avctx</name><operator pos:start="71:13" pos:end="71:14">-&gt;</operator><name pos:start="71:15" pos:end="71:28">rc_buffer_size</name></name> <operator pos:start="71:30" pos:end="71:30">=</operator> <call pos:start="71:32" pos:end="71:51"><name pos:start="71:32" pos:end="71:39">get_bits</name><argument_list pos:start="71:40" pos:end="71:51">(<argument pos:start="71:41" pos:end="71:46"><expr pos:start="71:41" pos:end="71:46"><operator pos:start="71:41" pos:end="71:41">&amp;</operator><name pos:start="71:42" pos:end="71:46"><name pos:start="71:42" pos:end="71:42">s</name><operator pos:start="71:43" pos:end="71:44">-&gt;</operator><name pos:start="71:45" pos:end="71:46">gb</name></name></expr></argument>, <argument pos:start="71:49" pos:end="71:50"><expr pos:start="71:49" pos:end="71:50"><literal type="number" pos:start="71:49" pos:end="71:50">10</literal></expr></argument>)</argument_list></call> <operator pos:start="71:53" pos:end="71:53">*</operator> <literal type="number" pos:start="71:55" pos:end="71:58">1024</literal> <operator pos:start="71:60" pos:end="71:60">*</operator> <literal type="number" pos:start="71:62" pos:end="71:63">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:25"><expr pos:start="73:5" pos:end="73:24"><call pos:start="73:5" pos:end="73:24"><name pos:start="73:5" pos:end="73:13">skip_bits</name><argument_list pos:start="73:14" pos:end="73:24">(<argument pos:start="73:15" pos:end="73:20"><expr pos:start="73:15" pos:end="73:20"><operator pos:start="73:15" pos:end="73:15">&amp;</operator><name pos:start="73:16" pos:end="73:20"><name pos:start="73:16" pos:end="73:16">s</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:20">gb</name></name></expr></argument>, <argument pos:start="73:23" pos:end="73:23"><expr pos:start="73:23" pos:end="73:23"><literal type="number" pos:start="73:23" pos:end="73:23">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="77:5" pos:end="77:20">/* get matrix */</comment>

    <if_stmt pos:start="79:5" pos:end="97:5"><if pos:start="79:5" pos:end="83:5">if <condition pos:start="79:8" pos:end="79:26">(<expr pos:start="79:9" pos:end="79:25"><call pos:start="79:9" pos:end="79:25"><name pos:start="79:9" pos:end="79:17">get_bits1</name><argument_list pos:start="79:18" pos:end="79:25">(<argument pos:start="79:19" pos:end="79:24"><expr pos:start="79:19" pos:end="79:24"><operator pos:start="79:19" pos:end="79:19">&amp;</operator><name pos:start="79:20" pos:end="79:24"><name pos:start="79:20" pos:end="79:20">s</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:24">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:28" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:67">

        <expr_stmt pos:start="81:9" pos:end="81:67"><expr pos:start="81:9" pos:end="81:66"><call pos:start="81:9" pos:end="81:66"><name pos:start="81:9" pos:end="81:19">load_matrix</name><argument_list pos:start="81:20" pos:end="81:66">(<argument pos:start="81:21" pos:end="81:21"><expr pos:start="81:21" pos:end="81:21"><name pos:start="81:21" pos:end="81:21">s</name></expr></argument>, <argument pos:start="81:24" pos:end="81:45"><expr pos:start="81:24" pos:end="81:45"><name pos:start="81:24" pos:end="81:45"><name pos:start="81:24" pos:end="81:24">s</name><operator pos:start="81:25" pos:end="81:26">-&gt;</operator><name pos:start="81:27" pos:end="81:45">chroma_intra_matrix</name></name></expr></argument>, <argument pos:start="81:48" pos:end="81:62"><expr pos:start="81:48" pos:end="81:62"><name pos:start="81:48" pos:end="81:62"><name pos:start="81:48" pos:end="81:48">s</name><operator pos:start="81:49" pos:end="81:50">-&gt;</operator><name pos:start="81:51" pos:end="81:62">intra_matrix</name></name></expr></argument>, <argument pos:start="81:65" pos:end="81:65"><expr pos:start="81:65" pos:end="81:65"><literal type="number" pos:start="81:65" pos:end="81:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="83:7" pos:end="97:5">else <block pos:start="83:12" pos:end="97:5">{<block_content pos:start="85:9" pos:end="95:9">

        <for pos:start="85:9" pos:end="95:9">for <control pos:start="85:13" pos:end="85:32">(<init pos:start="85:14" pos:end="85:19"><expr pos:start="85:14" pos:end="85:18"><name pos:start="85:14" pos:end="85:14">i</name> <operator pos:start="85:16" pos:end="85:16">=</operator> <literal type="number" pos:start="85:18" pos:end="85:18">0</literal></expr>;</init> <condition pos:start="85:21" pos:end="85:27"><expr pos:start="85:21" pos:end="85:26"><name pos:start="85:21" pos:end="85:21">i</name> <operator pos:start="85:23" pos:end="85:23">&lt;</operator> <literal type="number" pos:start="85:25" pos:end="85:26">64</literal></expr>;</condition> <incr pos:start="85:29" pos:end="85:31"><expr pos:start="85:29" pos:end="85:31"><name pos:start="85:29" pos:end="85:29">i</name><operator pos:start="85:30" pos:end="85:31">++</operator></expr></incr>)</control> <block pos:start="85:34" pos:end="95:9">{<block_content pos:start="87:13" pos:end="93:42">

            <expr_stmt pos:start="87:13" pos:end="87:44"><expr pos:start="87:13" pos:end="87:43"><name pos:start="87:13" pos:end="87:13">j</name> <operator pos:start="87:15" pos:end="87:15">=</operator> <name pos:start="87:17" pos:end="87:43"><name pos:start="87:17" pos:end="87:17">s</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:23">idsp</name><operator pos:start="87:24" pos:end="87:24">.</operator><name pos:start="87:25" pos:end="87:40">idct_permutation</name><index pos:start="87:41" pos:end="87:43">[<expr pos:start="87:42" pos:end="87:42"><name pos:start="87:42" pos:end="87:42">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:49"><expr pos:start="89:13" pos:end="89:48"><name pos:start="89:13" pos:end="89:13">v</name> <operator pos:start="89:15" pos:end="89:15">=</operator> <name pos:start="89:17" pos:end="89:48"><name pos:start="89:17" pos:end="89:45">ff_mpeg1_default_intra_matrix</name><index pos:start="89:46" pos:end="89:48">[<expr pos:start="89:47" pos:end="89:47"><name pos:start="89:47" pos:end="89:47">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:42"><expr pos:start="91:13" pos:end="91:41"><name pos:start="91:13" pos:end="91:30"><name pos:start="91:13" pos:end="91:13">s</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:27">intra_matrix</name><index pos:start="91:28" pos:end="91:30">[<expr pos:start="91:29" pos:end="91:29"><name pos:start="91:29" pos:end="91:29">j</name></expr>]</index></name>        <operator pos:start="91:39" pos:end="91:39">=</operator> <name pos:start="91:41" pos:end="91:41">v</name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:42"><expr pos:start="93:13" pos:end="93:41"><name pos:start="93:13" pos:end="93:37"><name pos:start="93:13" pos:end="93:13">s</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:34">chroma_intra_matrix</name><index pos:start="93:35" pos:end="93:37">[<expr pos:start="93:36" pos:end="93:36"><name pos:start="93:36" pos:end="93:36">j</name></expr>]</index></name> <operator pos:start="93:39" pos:end="93:39">=</operator> <name pos:start="93:41" pos:end="93:41">v</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="99:5" pos:end="117:5"><if pos:start="99:5" pos:end="103:5">if <condition pos:start="99:8" pos:end="99:26">(<expr pos:start="99:9" pos:end="99:25"><call pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:17">get_bits1</name><argument_list pos:start="99:18" pos:end="99:25">(<argument pos:start="99:19" pos:end="99:24"><expr pos:start="99:19" pos:end="99:24"><operator pos:start="99:19" pos:end="99:19">&amp;</operator><name pos:start="99:20" pos:end="99:24"><name pos:start="99:20" pos:end="99:20">s</name><operator pos:start="99:21" pos:end="99:22">-&gt;</operator><name pos:start="99:23" pos:end="99:24">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:28" pos:end="103:5">{<block_content pos:start="101:9" pos:end="101:67">

        <expr_stmt pos:start="101:9" pos:end="101:67"><expr pos:start="101:9" pos:end="101:66"><call pos:start="101:9" pos:end="101:66"><name pos:start="101:9" pos:end="101:19">load_matrix</name><argument_list pos:start="101:20" pos:end="101:66">(<argument pos:start="101:21" pos:end="101:21"><expr pos:start="101:21" pos:end="101:21"><name pos:start="101:21" pos:end="101:21">s</name></expr></argument>, <argument pos:start="101:24" pos:end="101:45"><expr pos:start="101:24" pos:end="101:45"><name pos:start="101:24" pos:end="101:45"><name pos:start="101:24" pos:end="101:24">s</name><operator pos:start="101:25" pos:end="101:26">-&gt;</operator><name pos:start="101:27" pos:end="101:45">chroma_inter_matrix</name></name></expr></argument>, <argument pos:start="101:48" pos:end="101:62"><expr pos:start="101:48" pos:end="101:62"><name pos:start="101:48" pos:end="101:62"><name pos:start="101:48" pos:end="101:48">s</name><operator pos:start="101:49" pos:end="101:50">-&gt;</operator><name pos:start="101:51" pos:end="101:62">inter_matrix</name></name></expr></argument>, <argument pos:start="101:65" pos:end="101:65"><expr pos:start="101:65" pos:end="101:65"><literal type="number" pos:start="101:65" pos:end="101:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="103:7" pos:end="117:5">else <block pos:start="103:12" pos:end="117:5">{<block_content pos:start="105:9" pos:end="115:9">

        <for pos:start="105:9" pos:end="115:9">for <control pos:start="105:13" pos:end="105:32">(<init pos:start="105:14" pos:end="105:19"><expr pos:start="105:14" pos:end="105:18"><name pos:start="105:14" pos:end="105:14">i</name> <operator pos:start="105:16" pos:end="105:16">=</operator> <literal type="number" pos:start="105:18" pos:end="105:18">0</literal></expr>;</init> <condition pos:start="105:21" pos:end="105:27"><expr pos:start="105:21" pos:end="105:26"><name pos:start="105:21" pos:end="105:21">i</name> <operator pos:start="105:23" pos:end="105:23">&lt;</operator> <literal type="number" pos:start="105:25" pos:end="105:26">64</literal></expr>;</condition> <incr pos:start="105:29" pos:end="105:31"><expr pos:start="105:29" pos:end="105:31"><name pos:start="105:29" pos:end="105:29">i</name><operator pos:start="105:30" pos:end="105:31">++</operator></expr></incr>)</control> <block pos:start="105:34" pos:end="115:9">{<block_content pos:start="107:13" pos:end="113:42">

            <decl_stmt pos:start="107:13" pos:end="107:48"><decl pos:start="107:13" pos:end="107:47"><type pos:start="107:13" pos:end="107:15"><name pos:start="107:13" pos:end="107:15">int</name></type> <name pos:start="107:17" pos:end="107:17">j</name> <init pos:start="107:19" pos:end="107:47">= <expr pos:start="107:21" pos:end="107:47"><name pos:start="107:21" pos:end="107:47"><name pos:start="107:21" pos:end="107:21">s</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:27">idsp</name><operator pos:start="107:28" pos:end="107:28">.</operator><name pos:start="107:29" pos:end="107:44">idct_permutation</name><index pos:start="107:45" pos:end="107:47">[<expr pos:start="107:46" pos:end="107:46"><name pos:start="107:46" pos:end="107:46">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:53"><expr pos:start="109:13" pos:end="109:52"><name pos:start="109:13" pos:end="109:13">v</name> <operator pos:start="109:15" pos:end="109:15">=</operator> <name pos:start="109:17" pos:end="109:52"><name pos:start="109:17" pos:end="109:49">ff_mpeg1_default_non_intra_matrix</name><index pos:start="109:50" pos:end="109:52">[<expr pos:start="109:51" pos:end="109:51"><name pos:start="109:51" pos:end="109:51">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:42"><expr pos:start="111:13" pos:end="111:41"><name pos:start="111:13" pos:end="111:30"><name pos:start="111:13" pos:end="111:13">s</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:27">inter_matrix</name><index pos:start="111:28" pos:end="111:30">[<expr pos:start="111:29" pos:end="111:29"><name pos:start="111:29" pos:end="111:29">j</name></expr>]</index></name>        <operator pos:start="111:39" pos:end="111:39">=</operator> <name pos:start="111:41" pos:end="111:41">v</name></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:42"><expr pos:start="113:13" pos:end="113:41"><name pos:start="113:13" pos:end="113:37"><name pos:start="113:13" pos:end="113:13">s</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:34">chroma_inter_matrix</name><index pos:start="113:35" pos:end="113:37">[<expr pos:start="113:36" pos:end="113:36"><name pos:start="113:36" pos:end="113:36">j</name></expr>]</index></name> <operator pos:start="113:39" pos:end="113:39">=</operator> <name pos:start="113:41" pos:end="113:41">v</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="121:5" pos:end="127:5"><if pos:start="121:5" pos:end="127:5">if <condition pos:start="121:8" pos:end="121:35">(<expr pos:start="121:9" pos:end="121:34"><call pos:start="121:9" pos:end="121:29"><name pos:start="121:9" pos:end="121:17">show_bits</name><argument_list pos:start="121:18" pos:end="121:29">(<argument pos:start="121:19" pos:end="121:24"><expr pos:start="121:19" pos:end="121:24"><operator pos:start="121:19" pos:end="121:19">&amp;</operator><name pos:start="121:20" pos:end="121:24"><name pos:start="121:20" pos:end="121:20">s</name><operator pos:start="121:21" pos:end="121:22">-&gt;</operator><name pos:start="121:23" pos:end="121:24">gb</name></name></expr></argument>, <argument pos:start="121:27" pos:end="121:28"><expr pos:start="121:27" pos:end="121:28"><literal type="number" pos:start="121:27" pos:end="121:28">23</literal></expr></argument>)</argument_list></call> <operator pos:start="121:31" pos:end="121:32">!=</operator> <literal type="number" pos:start="121:34" pos:end="121:34">0</literal></expr>)</condition> <block pos:start="121:37" pos:end="127:5">{<block_content pos:start="123:9" pos:end="125:35">

        <expr_stmt pos:start="123:9" pos:end="123:68"><expr pos:start="123:9" pos:end="123:67"><call pos:start="123:9" pos:end="123:67"><name pos:start="123:9" pos:end="123:14">av_log</name><argument_list pos:start="123:15" pos:end="123:67">(<argument pos:start="123:16" pos:end="123:23"><expr pos:start="123:16" pos:end="123:23"><name pos:start="123:16" pos:end="123:23"><name pos:start="123:16" pos:end="123:16">s</name><operator pos:start="123:17" pos:end="123:18">-&gt;</operator><name pos:start="123:19" pos:end="123:23">avctx</name></name></expr></argument>, <argument pos:start="123:26" pos:end="123:37"><expr pos:start="123:26" pos:end="123:37"><name pos:start="123:26" pos:end="123:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="123:40" pos:end="123:66"><expr pos:start="123:40" pos:end="123:66"><literal type="string" pos:start="123:40" pos:end="123:66">"sequence header damaged\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="125:9" pos:end="125:35">return <expr pos:start="125:16" pos:end="125:34"><name pos:start="125:16" pos:end="125:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="131:5" pos:end="131:22"><expr pos:start="131:5" pos:end="131:21"><name pos:start="131:5" pos:end="131:12"><name pos:start="131:5" pos:end="131:5">s</name><operator pos:start="131:6" pos:end="131:7">-&gt;</operator><name pos:start="131:8" pos:end="131:12">width</name></name>  <operator pos:start="131:15" pos:end="131:15">=</operator> <name pos:start="131:17" pos:end="131:21">width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:23"><expr pos:start="133:5" pos:end="133:22"><name pos:start="133:5" pos:end="133:13"><name pos:start="133:5" pos:end="133:5">s</name><operator pos:start="133:6" pos:end="133:7">-&gt;</operator><name pos:start="133:8" pos:end="133:13">height</name></name> <operator pos:start="133:15" pos:end="133:15">=</operator> <name pos:start="133:17" pos:end="133:22">height</name></expr>;</expr_stmt>



    <comment type="block" pos:start="137:5" pos:end="137:62">/* We set MPEG-2 parameters so that it emulates MPEG-1. */</comment>

    <expr_stmt pos:start="139:5" pos:end="139:32"><expr pos:start="139:5" pos:end="139:31"><name pos:start="139:5" pos:end="139:27"><name pos:start="139:5" pos:end="139:5">s</name><operator pos:start="139:6" pos:end="139:7">-&gt;</operator><name pos:start="139:8" pos:end="139:27">progressive_sequence</name></name> <operator pos:start="139:29" pos:end="139:29">=</operator> <literal type="number" pos:start="139:31" pos:end="139:31">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:32"><expr pos:start="141:5" pos:end="141:31"><name pos:start="141:5" pos:end="141:24"><name pos:start="141:5" pos:end="141:5">s</name><operator pos:start="141:6" pos:end="141:7">-&gt;</operator><name pos:start="141:8" pos:end="141:24">progressive_frame</name></name>    <operator pos:start="141:29" pos:end="141:29">=</operator> <literal type="number" pos:start="141:31" pos:end="141:31">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:41"><expr pos:start="143:5" pos:end="143:40"><name pos:start="143:5" pos:end="143:24"><name pos:start="143:5" pos:end="143:5">s</name><operator pos:start="143:6" pos:end="143:7">-&gt;</operator><name pos:start="143:8" pos:end="143:24">picture_structure</name></name>    <operator pos:start="143:29" pos:end="143:29">=</operator> <name pos:start="143:31" pos:end="143:40">PICT_FRAME</name></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:32"><expr pos:start="145:5" pos:end="145:31"><name pos:start="145:5" pos:end="145:18"><name pos:start="145:5" pos:end="145:5">s</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:18">first_field</name></name>          <operator pos:start="145:29" pos:end="145:29">=</operator> <literal type="number" pos:start="145:31" pos:end="145:31">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:32"><expr pos:start="147:5" pos:end="147:31"><name pos:start="147:5" pos:end="147:27"><name pos:start="147:5" pos:end="147:5">s</name><operator pos:start="147:6" pos:end="147:7">-&gt;</operator><name pos:start="147:8" pos:end="147:27">frame_pred_frame_dct</name></name> <operator pos:start="147:29" pos:end="147:29">=</operator> <literal type="number" pos:start="147:31" pos:end="147:31">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:32"><expr pos:start="149:5" pos:end="149:31"><name pos:start="149:5" pos:end="149:20"><name pos:start="149:5" pos:end="149:5">s</name><operator pos:start="149:6" pos:end="149:7">-&gt;</operator><name pos:start="149:8" pos:end="149:20">chroma_format</name></name>        <operator pos:start="149:29" pos:end="149:29">=</operator> <literal type="number" pos:start="149:31" pos:end="149:31">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="153:53"><expr pos:start="151:5" pos:end="153:52"><name pos:start="151:5" pos:end="151:15"><name pos:start="151:5" pos:end="151:5">s</name><operator pos:start="151:6" pos:end="151:7">-&gt;</operator><name pos:start="151:8" pos:end="151:15">codec_id</name></name>             <operator pos:start="151:29" pos:end="151:29">=</operator>

    <name pos:start="153:5" pos:end="153:22"><name pos:start="153:5" pos:end="153:5">s</name><operator pos:start="153:6" pos:end="153:7">-&gt;</operator><name pos:start="153:8" pos:end="153:12">avctx</name><operator pos:start="153:13" pos:end="153:14">-&gt;</operator><name pos:start="153:15" pos:end="153:22">codec_id</name></name>      <operator pos:start="153:29" pos:end="153:29">=</operator> <name pos:start="153:31" pos:end="153:52">AV_CODEC_ID_MPEG1VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:40"><expr pos:start="155:5" pos:end="155:39"><name pos:start="155:5" pos:end="155:17"><name pos:start="155:5" pos:end="155:5">s</name><operator pos:start="155:6" pos:end="155:7">-&gt;</operator><name pos:start="155:8" pos:end="155:17">out_format</name></name>           <operator pos:start="155:29" pos:end="155:29">=</operator> <name pos:start="155:31" pos:end="155:39">FMT_MPEG1</name></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:32"><expr pos:start="157:5" pos:end="157:31"><name pos:start="157:5" pos:end="157:14"><name pos:start="157:5" pos:end="157:5">s</name><operator pos:start="157:6" pos:end="157:7">-&gt;</operator><name pos:start="157:8" pos:end="157:14">swap_uv</name></name>              <operator pos:start="157:29" pos:end="157:29">=</operator> <literal type="number" pos:start="157:31" pos:end="157:31">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="157:34" pos:end="157:71">// AFAIK VCR2 does not have SEQ_HEADER</comment>

    <if_stmt pos:start="159:5" pos:end="161:25"><if pos:start="159:5" pos:end="161:25">if <condition pos:start="159:8" pos:end="159:50">(<expr pos:start="159:9" pos:end="159:49"><name pos:start="159:9" pos:end="159:23"><name pos:start="159:9" pos:end="159:9">s</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:16">avctx</name><operator pos:start="159:17" pos:end="159:18">-&gt;</operator><name pos:start="159:19" pos:end="159:23">flags</name></name> <operator pos:start="159:25" pos:end="159:25">&amp;</operator> <name pos:start="159:27" pos:end="159:49">AV_CODEC_FLAG_LOW_DELAY</name></expr>)</condition><block type="pseudo" pos:start="161:9" pos:end="161:25"><block_content pos:start="161:9" pos:end="161:25">

        <expr_stmt pos:start="161:9" pos:end="161:25"><expr pos:start="161:9" pos:end="161:24"><name pos:start="161:9" pos:end="161:20"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:20">low_delay</name></name> <operator pos:start="161:22" pos:end="161:22">=</operator> <literal type="number" pos:start="161:24" pos:end="161:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="165:5" pos:end="169:76"><if pos:start="165:5" pos:end="169:76">if <condition pos:start="165:8" pos:end="165:45">(<expr pos:start="165:9" pos:end="165:44"><name pos:start="165:9" pos:end="165:23"><name pos:start="165:9" pos:end="165:9">s</name><operator pos:start="165:10" pos:end="165:11">-&gt;</operator><name pos:start="165:12" pos:end="165:16">avctx</name><operator pos:start="165:17" pos:end="165:18">-&gt;</operator><name pos:start="165:19" pos:end="165:23">debug</name></name> <operator pos:start="165:25" pos:end="165:25">&amp;</operator> <name pos:start="165:27" pos:end="165:44">FF_DEBUG_PICT_INFO</name></expr>)</condition><block type="pseudo" pos:start="167:9" pos:end="169:76"><block_content pos:start="167:9" pos:end="169:76">

        <expr_stmt pos:start="167:9" pos:end="169:76"><expr pos:start="167:9" pos:end="169:75"><call pos:start="167:9" pos:end="169:75"><name pos:start="167:9" pos:end="167:14">av_log</name><argument_list pos:start="167:15" pos:end="169:75">(<argument pos:start="167:16" pos:end="167:23"><expr pos:start="167:16" pos:end="167:23"><name pos:start="167:16" pos:end="167:23"><name pos:start="167:16" pos:end="167:16">s</name><operator pos:start="167:17" pos:end="167:18">-&gt;</operator><name pos:start="167:19" pos:end="167:23">avctx</name></name></expr></argument>, <argument pos:start="167:26" pos:end="167:37"><expr pos:start="167:26" pos:end="167:37"><name pos:start="167:26" pos:end="167:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="167:40" pos:end="167:100"><expr pos:start="167:40" pos:end="167:100"><literal type="string" pos:start="167:40" pos:end="167:66">"vbv buffer: %d, bitrate:%"</literal><name pos:start="167:67" pos:end="167:72">PRId64</name><literal type="string" pos:start="167:73" pos:end="167:100">", aspect_ratio_info: %d \n"</literal></expr></argument>,

               <argument pos:start="169:16" pos:end="169:39"><expr pos:start="169:16" pos:end="169:39"><name pos:start="169:16" pos:end="169:39"><name pos:start="169:16" pos:end="169:16">s</name><operator pos:start="169:17" pos:end="169:18">-&gt;</operator><name pos:start="169:19" pos:end="169:23">avctx</name><operator pos:start="169:24" pos:end="169:25">-&gt;</operator><name pos:start="169:26" pos:end="169:39">rc_buffer_size</name></name></expr></argument>, <argument pos:start="169:42" pos:end="169:52"><expr pos:start="169:42" pos:end="169:52"><name pos:start="169:42" pos:end="169:52"><name pos:start="169:42" pos:end="169:42">s</name><operator pos:start="169:43" pos:end="169:44">-&gt;</operator><name pos:start="169:45" pos:end="169:52">bit_rate</name></name></expr></argument>, <argument pos:start="169:55" pos:end="169:74"><expr pos:start="169:55" pos:end="169:74"><name pos:start="169:55" pos:end="169:74"><name pos:start="169:55" pos:end="169:55">s</name><operator pos:start="169:56" pos:end="169:57">-&gt;</operator><name pos:start="169:58" pos:end="169:74">aspect_ratio_info</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="173:5" pos:end="173:13">return <expr pos:start="173:12" pos:end="173:12"><literal type="number" pos:start="173:12" pos:end="173:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
