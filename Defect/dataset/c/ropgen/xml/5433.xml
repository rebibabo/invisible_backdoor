<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5433.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">mpegps_read_header</name><parameter_list pos:start="1:30" pos:end="1:49">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:47"><name pos:start="1:31" pos:end="1:45">AVFormatContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">MpegDemuxContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">m</name> <init pos:start="5:25" pos:end="5:38">= <expr pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:27">s</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:18"><name pos:start="7:10" pos:end="7:15">buffer</name><index pos:start="7:16" pos:end="7:18">[<expr pos:start="7:17" pos:end="7:17"><literal type="number" pos:start="7:17" pos:end="7:17">7</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:39"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:20">last_pos</name> <init pos:start="9:22" pos:end="9:39">= <expr pos:start="9:24" pos:end="9:39"><call pos:start="9:24" pos:end="9:39"><name pos:start="9:24" pos:end="9:32">avio_tell</name><argument_list pos:start="9:33" pos:end="9:39">(<argument pos:start="9:34" pos:end="9:38"><expr pos:start="9:34" pos:end="9:38"><name pos:start="9:34" pos:end="9:38"><name pos:start="9:34" pos:end="9:34">s</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:38">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:5">m</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:19">header_state</name></name> <operator pos:start="13:21" pos:end="13:21">=</operator> <literal type="number" pos:start="13:23" pos:end="13:26">0xff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:40"><expr pos:start="15:5" pos:end="15:39"><name pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:16">ctx_flags</name></name>   <operator pos:start="15:20" pos:end="15:21">|=</operator> <name pos:start="15:23" pos:end="15:39">AVFMTCTX_NOHEADER</name></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:51"><expr pos:start="19:5" pos:end="19:50"><call pos:start="19:5" pos:end="19:50"><name pos:start="19:5" pos:end="19:16">avio_get_str</name><argument_list pos:start="19:17" pos:end="19:50">(<argument pos:start="19:18" pos:end="19:22"><expr pos:start="19:18" pos:end="19:22"><name pos:start="19:18" pos:end="19:22"><name pos:start="19:18" pos:end="19:18">s</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:22">pb</name></name></expr></argument>, <argument pos:start="19:25" pos:end="19:25"><expr pos:start="19:25" pos:end="19:25"><literal type="number" pos:start="19:25" pos:end="19:25">6</literal></expr></argument>, <argument pos:start="19:28" pos:end="19:33"><expr pos:start="19:28" pos:end="19:33"><name pos:start="19:28" pos:end="19:33">buffer</name></expr></argument>, <argument pos:start="19:36" pos:end="19:49"><expr pos:start="19:36" pos:end="19:49"><sizeof pos:start="19:36" pos:end="19:49">sizeof<argument_list pos:start="19:42" pos:end="19:49">(<argument pos:start="19:43" pos:end="19:48"><expr pos:start="19:43" pos:end="19:48"><name pos:start="19:43" pos:end="19:48">buffer</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="31:44"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:35">(<expr pos:start="21:9" pos:end="21:34"><operator pos:start="21:9" pos:end="21:9">!</operator><call pos:start="21:10" pos:end="21:34"><name pos:start="21:10" pos:end="21:15">memcmp</name><argument_list pos:start="21:16" pos:end="21:34">(<argument pos:start="21:17" pos:end="21:22"><expr pos:start="21:17" pos:end="21:22"><literal type="string" pos:start="21:17" pos:end="21:22">"IMKH"</literal></expr></argument>, <argument pos:start="21:25" pos:end="21:30"><expr pos:start="21:25" pos:end="21:30"><name pos:start="21:25" pos:end="21:30">buffer</name></expr></argument>, <argument pos:start="21:33" pos:end="21:33"><expr pos:start="21:33" pos:end="21:33"><literal type="number" pos:start="21:33" pos:end="21:33">4</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:37" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:25">

        <expr_stmt pos:start="23:9" pos:end="23:25"><expr pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:9">m</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:20">imkh_cctv</name></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <literal type="number" pos:start="23:24" pos:end="23:24">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="25:7" pos:end="29:5">else if <condition pos:start="25:15" pos:end="25:44">(<expr pos:start="25:16" pos:end="25:43"><operator pos:start="25:16" pos:end="25:16">!</operator><call pos:start="25:17" pos:end="25:43"><name pos:start="25:17" pos:end="25:22">memcmp</name><argument_list pos:start="25:23" pos:end="25:43">(<argument pos:start="25:24" pos:end="25:31"><expr pos:start="25:24" pos:end="25:31"><literal type="string" pos:start="25:24" pos:end="25:31">"Sofdec"</literal></expr></argument>, <argument pos:start="25:34" pos:end="25:39"><expr pos:start="25:34" pos:end="25:39"><name pos:start="25:34" pos:end="25:39">buffer</name></expr></argument>, <argument pos:start="25:42" pos:end="25:42"><expr pos:start="25:42" pos:end="25:42"><literal type="number" pos:start="25:42" pos:end="25:42">6</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:46" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:22">

        <expr_stmt pos:start="27:9" pos:end="27:22"><expr pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:9">m</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:17">sofdec</name></name> <operator pos:start="27:19" pos:end="27:19">=</operator> <literal type="number" pos:start="27:21" pos:end="27:21">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="31:44">else<block type="pseudo" pos:start="31:8" pos:end="31:44"><block_content pos:start="31:8" pos:end="31:44">

       <expr_stmt pos:start="31:8" pos:end="31:44"><expr pos:start="31:8" pos:end="31:43"><call pos:start="31:8" pos:end="31:43"><name pos:start="31:8" pos:end="31:16">avio_seek</name><argument_list pos:start="31:17" pos:end="31:43">(<argument pos:start="31:18" pos:end="31:22"><expr pos:start="31:18" pos:end="31:22"><name pos:start="31:18" pos:end="31:22"><name pos:start="31:18" pos:end="31:18">s</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:22">pb</name></name></expr></argument>, <argument pos:start="31:25" pos:end="31:32"><expr pos:start="31:25" pos:end="31:32"><name pos:start="31:25" pos:end="31:32">last_pos</name></expr></argument>, <argument pos:start="31:35" pos:end="31:42"><expr pos:start="31:35" pos:end="31:42"><name pos:start="31:35" pos:end="31:42">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:28">/* no need to do more */</comment>

    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
