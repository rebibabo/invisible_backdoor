<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12658.c" pos:tabs="8"><function pos:start="1:1" pos:end="275:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">mpegps_read_pes_header</name><parameter_list pos:start="1:34" pos:end="5:63">(<parameter pos:start="1:35" pos:end="1:52"><decl pos:start="1:35" pos:end="1:52"><type pos:start="1:35" pos:end="1:52"><name pos:start="1:35" pos:end="1:49">AVFormatContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:47"><decl pos:start="3:35" pos:end="3:47"><type pos:start="3:35" pos:end="3:47"><name pos:start="3:35" pos:end="3:41">int64_t</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:47">ppos</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:65"><decl pos:start="3:50" pos:end="3:65"><type pos:start="3:50" pos:end="3:65"><name pos:start="3:50" pos:end="3:52">int</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:65">pstart_code</name></decl></parameter>,

                                  <parameter pos:start="5:35" pos:end="5:47"><decl pos:start="5:35" pos:end="5:47"><type pos:start="5:35" pos:end="5:47"><name pos:start="5:35" pos:end="5:41">int64_t</name> <modifier pos:start="5:43" pos:end="5:43">*</modifier></type><name pos:start="5:44" pos:end="5:47">ppts</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:62"><decl pos:start="5:50" pos:end="5:62"><type pos:start="5:50" pos:end="5:62"><name pos:start="5:50" pos:end="5:56">int64_t</name> <modifier pos:start="5:58" pos:end="5:58">*</modifier></type><name pos:start="5:59" pos:end="5:62">pdts</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="275:1">{<block_content pos:start="9:5" pos:end="273:15">

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">MpegDemuxContext</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:23">m</name> <init pos:start="9:25" pos:end="9:38">= <expr pos:start="9:27" pos:end="9:38"><name pos:start="9:27" pos:end="9:38"><name pos:start="9:27" pos:end="9:27">s</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:51"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">len</name></decl>, <decl pos:start="11:14" pos:end="11:17"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:17">size</name></decl>, <decl pos:start="11:20" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:20" pos:end="11:28">startcode</name></decl>, <decl pos:start="11:31" pos:end="11:31"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:31" pos:end="11:31">c</name></decl>, <decl pos:start="11:34" pos:end="11:38"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:34" pos:end="11:38">flags</name></decl>, <decl pos:start="11:41" pos:end="11:50"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:41" pos:end="11:50">header_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:15">pts</name></decl>, <decl pos:start="13:18" pos:end="13:20"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:18" pos:end="13:20">dts</name></decl>, <decl pos:start="13:23" pos:end="13:30"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:23" pos:end="13:30">last_pos</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:18"><expr pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:12">last_pos</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</expr_stmt>

 <label pos:start="19:2" pos:end="19:6"><name pos:start="19:2" pos:end="19:5">redo</name>:</label>

        <comment type="block" pos:start="21:9" pos:end="21:59">/* next start code (should be immediately after) */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:31"><expr pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:9">m</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:23">header_state</name></name> <operator pos:start="23:25" pos:end="23:25">=</operator> <literal type="number" pos:start="23:27" pos:end="23:30">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:29"><expr pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:12">size</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <name pos:start="25:16" pos:end="25:28">MAX_SYNC_SIZE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:74"><expr pos:start="27:9" pos:end="27:73"><name pos:start="27:9" pos:end="27:17">startcode</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <call pos:start="27:21" pos:end="27:73"><name pos:start="27:21" pos:end="27:40">find_next_start_code</name><argument_list pos:start="27:41" pos:end="27:73">(<argument pos:start="27:42" pos:end="27:47"><expr pos:start="27:42" pos:end="27:47"><operator pos:start="27:42" pos:end="27:42">&amp;</operator><name pos:start="27:43" pos:end="27:47"><name pos:start="27:43" pos:end="27:43">s</name><operator pos:start="27:44" pos:end="27:45">-&gt;</operator><name pos:start="27:46" pos:end="27:47">pb</name></name></expr></argument>, <argument pos:start="27:50" pos:end="27:54"><expr pos:start="27:50" pos:end="27:54"><operator pos:start="27:50" pos:end="27:50">&amp;</operator><name pos:start="27:51" pos:end="27:54">size</name></expr></argument>, <argument pos:start="27:57" pos:end="27:72"><expr pos:start="27:57" pos:end="27:72"><operator pos:start="27:57" pos:end="27:57">&amp;</operator><name pos:start="27:58" pos:end="27:72"><name pos:start="27:58" pos:end="27:58">m</name><operator pos:start="27:59" pos:end="27:60">-&gt;</operator><name pos:start="27:61" pos:end="27:72">header_state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="29:5" pos:end="29:77">//printf("startcode=%x pos=0x%"PRIx64"\n", startcode, url_ftell(&amp;s-&gt;pb));</comment>

    <if_stmt pos:start="31:5" pos:end="33:26"><if pos:start="31:5" pos:end="33:26">if <condition pos:start="31:8" pos:end="31:22">(<expr pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:17">startcode</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <literal type="number" pos:start="31:21" pos:end="31:21">0</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:26"><block_content pos:start="33:9" pos:end="33:26">

        <return pos:start="33:9" pos:end="33:26">return <expr pos:start="33:16" pos:end="33:25"><name pos:start="33:16" pos:end="33:25">AVERROR_IO</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="37:18"><if pos:start="35:5" pos:end="37:18">if <condition pos:start="35:8" pos:end="35:37">(<expr pos:start="35:9" pos:end="35:36"><name pos:start="35:9" pos:end="35:17">startcode</name> <operator pos:start="35:19" pos:end="35:20">==</operator> <name pos:start="35:22" pos:end="35:36">PACK_START_CODE</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:18"><block_content pos:start="37:9" pos:end="37:18">

        <goto pos:start="37:9" pos:end="37:18">goto <name pos:start="37:14" pos:end="37:17">redo</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="41:18"><if pos:start="39:5" pos:end="41:18">if <condition pos:start="39:8" pos:end="39:46">(<expr pos:start="39:9" pos:end="39:45"><name pos:start="39:9" pos:end="39:17">startcode</name> <operator pos:start="39:19" pos:end="39:20">==</operator> <name pos:start="39:22" pos:end="39:45">SYSTEM_HEADER_START_CODE</name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:18"><block_content pos:start="41:9" pos:end="41:18">

        <goto pos:start="41:9" pos:end="41:18">goto <name pos:start="41:14" pos:end="41:17">redo</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="55:5"><if pos:start="43:5" pos:end="55:5">if <condition pos:start="43:8" pos:end="45:38">(<expr pos:start="43:9" pos:end="45:37"><name pos:start="43:9" pos:end="43:17">startcode</name> <operator pos:start="43:19" pos:end="43:20">==</operator> <name pos:start="43:22" pos:end="43:35">PADDING_STREAM</name> <operator pos:start="43:37" pos:end="43:38">||</operator>

        <name pos:start="45:9" pos:end="45:17">startcode</name> <operator pos:start="45:19" pos:end="45:20">==</operator> <name pos:start="45:22" pos:end="45:37">PRIVATE_STREAM_2</name></expr>)</condition> <block pos:start="45:40" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:18">

        <comment type="block" pos:start="47:9" pos:end="47:23">/* skip them */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:31"><expr pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:11">len</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <call pos:start="49:15" pos:end="49:30"><name pos:start="49:15" pos:end="49:22">get_be16</name><argument_list pos:start="49:23" pos:end="49:30">(<argument pos:start="49:24" pos:end="49:29"><expr pos:start="49:24" pos:end="49:29"><operator pos:start="49:24" pos:end="49:24">&amp;</operator><name pos:start="49:25" pos:end="49:29"><name pos:start="49:25" pos:end="49:25">s</name><operator pos:start="49:26" pos:end="49:27">-&gt;</operator><name pos:start="49:28" pos:end="49:29">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:31"><expr pos:start="51:9" pos:end="51:30"><call pos:start="51:9" pos:end="51:30"><name pos:start="51:9" pos:end="51:17">url_fskip</name><argument_list pos:start="51:18" pos:end="51:30">(<argument pos:start="51:19" pos:end="51:24"><expr pos:start="51:19" pos:end="51:24"><operator pos:start="51:19" pos:end="51:19">&amp;</operator><name pos:start="51:20" pos:end="51:24"><name pos:start="51:20" pos:end="51:20">s</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:24">pb</name></name></expr></argument>, <argument pos:start="51:27" pos:end="51:29"><expr pos:start="51:27" pos:end="51:29"><name pos:start="51:27" pos:end="51:29">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="53:9" pos:end="53:18">goto <name pos:start="53:14" pos:end="53:17">redo</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:40">(<expr pos:start="57:9" pos:end="57:39"><name pos:start="57:9" pos:end="57:17">startcode</name> <operator pos:start="57:19" pos:end="57:20">==</operator> <name pos:start="57:22" pos:end="57:39">PROGRAM_STREAM_MAP</name></expr>)</condition> <block pos:start="57:42" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:18">

        <expr_stmt pos:start="59:9" pos:end="59:36"><expr pos:start="59:9" pos:end="59:35"><call pos:start="59:9" pos:end="59:35"><name pos:start="59:9" pos:end="59:24">mpegps_psm_parse</name><argument_list pos:start="59:25" pos:end="59:35">(<argument pos:start="59:26" pos:end="59:26"><expr pos:start="59:26" pos:end="59:26"><name pos:start="59:26" pos:end="59:26">m</name></expr></argument>, <argument pos:start="59:29" pos:end="59:34"><expr pos:start="59:29" pos:end="59:34"><operator pos:start="59:29" pos:end="59:29">&amp;</operator><name pos:start="59:30" pos:end="59:34"><name pos:start="59:30" pos:end="59:30">s</name><operator pos:start="59:31" pos:end="59:32">-&gt;</operator><name pos:start="59:33" pos:end="59:34">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="61:9" pos:end="61:18">goto <name pos:start="61:14" pos:end="61:17">redo</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="67:5" pos:end="67:30">/* find matching stream */</comment>

    <if_stmt pos:start="69:5" pos:end="75:18"><if pos:start="69:5" pos:end="75:18">if <condition pos:start="69:8" pos:end="73:32">(<expr pos:start="69:9" pos:end="73:31"><operator pos:start="69:9" pos:end="69:9">!</operator><operator pos:start="69:10" pos:end="69:10">(</operator><operator pos:start="69:11" pos:end="69:11">(</operator><name pos:start="69:12" pos:end="69:20">startcode</name> <operator pos:start="69:22" pos:end="69:23">&gt;=</operator> <literal type="number" pos:start="69:25" pos:end="69:29">0x1c0</literal> <operator pos:start="69:31" pos:end="69:32">&amp;&amp;</operator> <name pos:start="69:34" pos:end="69:42">startcode</name> <operator pos:start="69:44" pos:end="69:45">&lt;=</operator> <literal type="number" pos:start="69:47" pos:end="69:51">0x1df</literal><operator pos:start="69:52" pos:end="69:52">)</operator> <operator pos:start="69:54" pos:end="69:55">||</operator>

          <operator pos:start="71:11" pos:end="71:11">(</operator><name pos:start="71:12" pos:end="71:20">startcode</name> <operator pos:start="71:22" pos:end="71:23">&gt;=</operator> <literal type="number" pos:start="71:25" pos:end="71:29">0x1e0</literal> <operator pos:start="71:31" pos:end="71:32">&amp;&amp;</operator> <name pos:start="71:34" pos:end="71:42">startcode</name> <operator pos:start="71:44" pos:end="71:45">&lt;=</operator> <literal type="number" pos:start="71:47" pos:end="71:51">0x1ef</literal><operator pos:start="71:52" pos:end="71:52">)</operator> <operator pos:start="71:54" pos:end="71:55">||</operator>

          <operator pos:start="73:11" pos:end="73:11">(</operator><name pos:start="73:12" pos:end="73:20">startcode</name> <operator pos:start="73:22" pos:end="73:23">==</operator> <literal type="number" pos:start="73:25" pos:end="73:29">0x1bd</literal><operator pos:start="73:30" pos:end="73:30">)</operator><operator pos:start="73:31" pos:end="73:31">)</operator></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:18"><block_content pos:start="75:9" pos:end="75:18">

        <goto pos:start="75:9" pos:end="75:18">goto <name pos:start="75:14" pos:end="75:17">redo</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="77:5" pos:end="81:5"><if pos:start="77:5" pos:end="81:5">if <condition pos:start="77:8" pos:end="77:13">(<expr pos:start="77:9" pos:end="77:12"><name pos:start="77:9" pos:end="77:12">ppos</name></expr>)</condition> <block pos:start="77:15" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:38">

        <expr_stmt pos:start="79:9" pos:end="79:38"><expr pos:start="79:9" pos:end="79:37"><operator pos:start="79:9" pos:end="79:9">*</operator><name pos:start="79:10" pos:end="79:13">ppos</name> <operator pos:start="79:15" pos:end="79:15">=</operator> <call pos:start="79:17" pos:end="79:33"><name pos:start="79:17" pos:end="79:25">url_ftell</name><argument_list pos:start="79:26" pos:end="79:33">(<argument pos:start="79:27" pos:end="79:32"><expr pos:start="79:27" pos:end="79:32"><operator pos:start="79:27" pos:end="79:27">&amp;</operator><name pos:start="79:28" pos:end="79:32"><name pos:start="79:28" pos:end="79:28">s</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:32">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="79:35" pos:end="79:35">-</operator> <literal type="number" pos:start="79:37" pos:end="79:37">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:27"><expr pos:start="83:5" pos:end="83:26"><name pos:start="83:5" pos:end="83:7">len</name> <operator pos:start="83:9" pos:end="83:9">=</operator> <call pos:start="83:11" pos:end="83:26"><name pos:start="83:11" pos:end="83:18">get_be16</name><argument_list pos:start="83:19" pos:end="83:26">(<argument pos:start="83:20" pos:end="83:25"><expr pos:start="83:20" pos:end="83:25"><operator pos:start="83:20" pos:end="83:20">&amp;</operator><name pos:start="83:21" pos:end="83:25"><name pos:start="83:21" pos:end="83:21">s</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:25"><expr pos:start="85:5" pos:end="85:24"><name pos:start="85:5" pos:end="85:7">pts</name> <operator pos:start="85:9" pos:end="85:9">=</operator> <name pos:start="85:11" pos:end="85:24">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:25"><expr pos:start="87:5" pos:end="87:24"><name pos:start="87:5" pos:end="87:7">dts</name> <operator pos:start="87:9" pos:end="87:9">=</operator> <name pos:start="87:11" pos:end="87:24">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

    <comment type="block" pos:start="89:5" pos:end="89:18">/* stuffing */</comment>

    <for pos:start="91:5" pos:end="107:5">for<control pos:start="91:8" pos:end="91:11">(<init pos:start="91:9" pos:end="91:9">;</init><condition pos:start="91:10" pos:end="91:10">;</condition><incr/>)</control> <block pos:start="91:13" pos:end="107:5">{<block_content pos:start="93:9" pos:end="105:18">

        <if_stmt pos:start="93:9" pos:end="95:22"><if pos:start="93:9" pos:end="95:22">if <condition pos:start="93:12" pos:end="93:20">(<expr pos:start="93:13" pos:end="93:19"><name pos:start="93:13" pos:end="93:15">len</name> <operator pos:start="93:17" pos:end="93:17">&lt;</operator> <literal type="number" pos:start="93:19" pos:end="93:19">1</literal></expr>)</condition><block type="pseudo" pos:start="95:13" pos:end="95:22"><block_content pos:start="95:13" pos:end="95:22">

            <goto pos:start="95:13" pos:end="95:22">goto <name pos:start="95:18" pos:end="95:21">redo</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:29"><expr pos:start="97:9" pos:end="97:28"><name pos:start="97:9" pos:end="97:9">c</name> <operator pos:start="97:11" pos:end="97:11">=</operator> <call pos:start="97:13" pos:end="97:28"><name pos:start="97:13" pos:end="97:20">get_byte</name><argument_list pos:start="97:21" pos:end="97:28">(<argument pos:start="97:22" pos:end="97:27"><expr pos:start="97:22" pos:end="97:27"><operator pos:start="97:22" pos:end="97:22">&amp;</operator><name pos:start="97:23" pos:end="97:27"><name pos:start="97:23" pos:end="97:23">s</name><operator pos:start="97:24" pos:end="97:25">-&gt;</operator><name pos:start="97:26" pos:end="97:27">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:14"><expr pos:start="99:9" pos:end="99:13"><name pos:start="99:9" pos:end="99:11">len</name><operator pos:start="99:12" pos:end="99:13">--</operator></expr>;</expr_stmt>

        <comment type="block" pos:start="101:9" pos:end="101:52">/* XXX: for mpeg1, should test only bit 7 */</comment>

        <if_stmt pos:start="103:9" pos:end="105:18"><if pos:start="103:9" pos:end="105:18">if <condition pos:start="103:12" pos:end="103:22">(<expr pos:start="103:13" pos:end="103:21"><name pos:start="103:13" pos:end="103:13">c</name> <operator pos:start="103:15" pos:end="103:16">!=</operator> <literal type="number" pos:start="103:18" pos:end="103:21">0xff</literal></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:18"><block_content pos:start="105:13" pos:end="105:18">

            <break pos:start="105:13" pos:end="105:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="109:5" pos:end="123:5"><if pos:start="109:5" pos:end="123:5">if <condition pos:start="109:8" pos:end="109:27">(<expr pos:start="109:9" pos:end="109:26"><operator pos:start="109:9" pos:end="109:9">(</operator><name pos:start="109:10" pos:end="109:10">c</name> <operator pos:start="109:12" pos:end="109:12">&amp;</operator> <literal type="number" pos:start="109:14" pos:end="109:17">0xc0</literal><operator pos:start="109:18" pos:end="109:18">)</operator> <operator pos:start="109:20" pos:end="109:21">==</operator> <literal type="number" pos:start="109:23" pos:end="109:26">0x40</literal></expr>)</condition> <block pos:start="109:29" pos:end="123:5">{<block_content pos:start="113:9" pos:end="121:17">

        <comment type="block" pos:start="111:9" pos:end="111:33">/* buffer scale &amp; size */</comment>

        <if_stmt pos:start="113:9" pos:end="115:22"><if pos:start="113:9" pos:end="115:22">if <condition pos:start="113:12" pos:end="113:20">(<expr pos:start="113:13" pos:end="113:19"><name pos:start="113:13" pos:end="113:15">len</name> <operator pos:start="113:17" pos:end="113:17">&lt;</operator> <literal type="number" pos:start="113:19" pos:end="113:19">2</literal></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:22"><block_content pos:start="115:13" pos:end="115:22">

            <goto pos:start="115:13" pos:end="115:22">goto <name pos:start="115:18" pos:end="115:21">redo</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:25"><expr pos:start="117:9" pos:end="117:24"><call pos:start="117:9" pos:end="117:24"><name pos:start="117:9" pos:end="117:16">get_byte</name><argument_list pos:start="117:17" pos:end="117:24">(<argument pos:start="117:18" pos:end="117:23"><expr pos:start="117:18" pos:end="117:23"><operator pos:start="117:18" pos:end="117:18">&amp;</operator><name pos:start="117:19" pos:end="117:23"><name pos:start="117:19" pos:end="117:19">s</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:23">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:29"><expr pos:start="119:9" pos:end="119:28"><name pos:start="119:9" pos:end="119:9">c</name> <operator pos:start="119:11" pos:end="119:11">=</operator> <call pos:start="119:13" pos:end="119:28"><name pos:start="119:13" pos:end="119:20">get_byte</name><argument_list pos:start="119:21" pos:end="119:28">(<argument pos:start="119:22" pos:end="119:27"><expr pos:start="119:22" pos:end="119:27"><operator pos:start="119:22" pos:end="119:22">&amp;</operator><name pos:start="119:23" pos:end="119:27"><name pos:start="119:23" pos:end="119:23">s</name><operator pos:start="119:24" pos:end="119:25">-&gt;</operator><name pos:start="119:26" pos:end="119:27">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:17"><expr pos:start="121:9" pos:end="121:16"><name pos:start="121:9" pos:end="121:11">len</name> <operator pos:start="121:13" pos:end="121:14">-=</operator> <literal type="number" pos:start="121:16" pos:end="121:16">2</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="125:5" pos:end="215:18"><if pos:start="125:5" pos:end="135:5">if <condition pos:start="125:8" pos:end="125:27">(<expr pos:start="125:9" pos:end="125:26"><operator pos:start="125:9" pos:end="125:9">(</operator><name pos:start="125:10" pos:end="125:10">c</name> <operator pos:start="125:12" pos:end="125:12">&amp;</operator> <literal type="number" pos:start="125:14" pos:end="125:17">0xf0</literal><operator pos:start="125:18" pos:end="125:18">)</operator> <operator pos:start="125:20" pos:end="125:21">==</operator> <literal type="number" pos:start="125:23" pos:end="125:26">0x20</literal></expr>)</condition> <block pos:start="125:29" pos:end="135:5">{<block_content pos:start="127:9" pos:end="133:17">

        <if_stmt pos:start="127:9" pos:end="129:22"><if pos:start="127:9" pos:end="129:22">if <condition pos:start="127:12" pos:end="127:20">(<expr pos:start="127:13" pos:end="127:19"><name pos:start="127:13" pos:end="127:15">len</name> <operator pos:start="127:17" pos:end="127:17">&lt;</operator> <literal type="number" pos:start="127:19" pos:end="127:19">4</literal></expr>)</condition><block type="pseudo" pos:start="129:13" pos:end="129:22"><block_content pos:start="129:13" pos:end="129:22">

            <goto pos:start="129:13" pos:end="129:22">goto <name pos:start="129:18" pos:end="129:21">redo</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:39"><expr pos:start="131:9" pos:end="131:38"><name pos:start="131:9" pos:end="131:11">dts</name> <operator pos:start="131:13" pos:end="131:13">=</operator> <name pos:start="131:15" pos:end="131:17">pts</name> <operator pos:start="131:19" pos:end="131:19">=</operator> <call pos:start="131:21" pos:end="131:38"><name pos:start="131:21" pos:end="131:27">get_pts</name><argument_list pos:start="131:28" pos:end="131:38">(<argument pos:start="131:29" pos:end="131:34"><expr pos:start="131:29" pos:end="131:34"><operator pos:start="131:29" pos:end="131:29">&amp;</operator><name pos:start="131:30" pos:end="131:34"><name pos:start="131:30" pos:end="131:30">s</name><operator pos:start="131:31" pos:end="131:32">-&gt;</operator><name pos:start="131:33" pos:end="131:34">pb</name></name></expr></argument>, <argument pos:start="131:37" pos:end="131:37"><expr pos:start="131:37" pos:end="131:37"><name pos:start="131:37" pos:end="131:37">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:17"><expr pos:start="133:9" pos:end="133:16"><name pos:start="133:9" pos:end="133:11">len</name> <operator pos:start="133:13" pos:end="133:14">-=</operator> <literal type="number" pos:start="133:16" pos:end="133:16">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="135:7" pos:end="147:5">else if <condition pos:start="135:15" pos:end="135:34">(<expr pos:start="135:16" pos:end="135:33"><operator pos:start="135:16" pos:end="135:16">(</operator><name pos:start="135:17" pos:end="135:17">c</name> <operator pos:start="135:19" pos:end="135:19">&amp;</operator> <literal type="number" pos:start="135:21" pos:end="135:24">0xf0</literal><operator pos:start="135:25" pos:end="135:25">)</operator> <operator pos:start="135:27" pos:end="135:28">==</operator> <literal type="number" pos:start="135:30" pos:end="135:33">0x30</literal></expr>)</condition> <block pos:start="135:36" pos:end="147:5">{<block_content pos:start="137:9" pos:end="145:17">

        <if_stmt pos:start="137:9" pos:end="139:22"><if pos:start="137:9" pos:end="139:22">if <condition pos:start="137:12" pos:end="137:20">(<expr pos:start="137:13" pos:end="137:19"><name pos:start="137:13" pos:end="137:15">len</name> <operator pos:start="137:17" pos:end="137:17">&lt;</operator> <literal type="number" pos:start="137:19" pos:end="137:19">9</literal></expr>)</condition><block type="pseudo" pos:start="139:13" pos:end="139:22"><block_content pos:start="139:13" pos:end="139:22">

            <goto pos:start="139:13" pos:end="139:22">goto <name pos:start="139:18" pos:end="139:21">redo</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:33"><expr pos:start="141:9" pos:end="141:32"><name pos:start="141:9" pos:end="141:11">pts</name> <operator pos:start="141:13" pos:end="141:13">=</operator> <call pos:start="141:15" pos:end="141:32"><name pos:start="141:15" pos:end="141:21">get_pts</name><argument_list pos:start="141:22" pos:end="141:32">(<argument pos:start="141:23" pos:end="141:28"><expr pos:start="141:23" pos:end="141:28"><operator pos:start="141:23" pos:end="141:23">&amp;</operator><name pos:start="141:24" pos:end="141:28"><name pos:start="141:24" pos:end="141:24">s</name><operator pos:start="141:25" pos:end="141:26">-&gt;</operator><name pos:start="141:27" pos:end="141:28">pb</name></name></expr></argument>, <argument pos:start="141:31" pos:end="141:31"><expr pos:start="141:31" pos:end="141:31"><name pos:start="141:31" pos:end="141:31">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:34"><expr pos:start="143:9" pos:end="143:33"><name pos:start="143:9" pos:end="143:11">dts</name> <operator pos:start="143:13" pos:end="143:13">=</operator> <call pos:start="143:15" pos:end="143:33"><name pos:start="143:15" pos:end="143:21">get_pts</name><argument_list pos:start="143:22" pos:end="143:33">(<argument pos:start="143:23" pos:end="143:28"><expr pos:start="143:23" pos:end="143:28"><operator pos:start="143:23" pos:end="143:23">&amp;</operator><name pos:start="143:24" pos:end="143:28"><name pos:start="143:24" pos:end="143:24">s</name><operator pos:start="143:25" pos:end="143:26">-&gt;</operator><name pos:start="143:27" pos:end="143:28">pb</name></name></expr></argument>, <argument pos:start="143:31" pos:end="143:32"><expr pos:start="143:31" pos:end="143:32"><operator pos:start="143:31" pos:end="143:31">-</operator><literal type="number" pos:start="143:32" pos:end="143:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:17"><expr pos:start="145:9" pos:end="145:16"><name pos:start="145:9" pos:end="145:11">len</name> <operator pos:start="145:13" pos:end="145:14">-=</operator> <literal type="number" pos:start="145:16" pos:end="145:16">9</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="147:7" pos:end="211:5">else if <condition pos:start="147:15" pos:end="147:34">(<expr pos:start="147:16" pos:end="147:33"><operator pos:start="147:16" pos:end="147:16">(</operator><name pos:start="147:17" pos:end="147:17">c</name> <operator pos:start="147:19" pos:end="147:19">&amp;</operator> <literal type="number" pos:start="147:21" pos:end="147:24">0xc0</literal><operator pos:start="147:25" pos:end="147:25">)</operator> <operator pos:start="147:27" pos:end="147:28">==</operator> <literal type="number" pos:start="147:30" pos:end="147:33">0x80</literal></expr>)</condition> <block pos:start="147:36" pos:end="211:5">{<block_content pos:start="163:9" pos:end="209:9">

        <comment type="block" pos:start="149:9" pos:end="149:24">/* mpeg 2 PES */</comment>

<cpp:if pos:start="151:1" pos:end="151:5">#<cpp:directive pos:start="151:2" pos:end="151:3">if</cpp:directive> <expr pos:start="151:5" pos:end="151:5"><literal type="number" pos:start="151:5" pos:end="151:5">0</literal></expr></cpp:if> <comment type="block" pos:start="151:7" pos:end="151:67">/* some streams have this field set for no apparent reason */</comment>

        if ((c &amp; 0x30) != 0) {

            <comment type="block" pos:start="155:13" pos:end="155:49">/* Encrypted multiplex not handled */</comment>

            goto redo;

        }

<cpp:endif pos:start="161:1" pos:end="161:6">#<cpp:directive pos:start="161:2" pos:end="161:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="163:9" pos:end="163:33"><expr pos:start="163:9" pos:end="163:32"><name pos:start="163:9" pos:end="163:13">flags</name> <operator pos:start="163:15" pos:end="163:15">=</operator> <call pos:start="163:17" pos:end="163:32"><name pos:start="163:17" pos:end="163:24">get_byte</name><argument_list pos:start="163:25" pos:end="163:32">(<argument pos:start="163:26" pos:end="163:31"><expr pos:start="163:26" pos:end="163:31"><operator pos:start="163:26" pos:end="163:26">&amp;</operator><name pos:start="163:27" pos:end="163:31"><name pos:start="163:27" pos:end="163:27">s</name><operator pos:start="163:28" pos:end="163:29">-&gt;</operator><name pos:start="163:30" pos:end="163:31">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:38"><expr pos:start="165:9" pos:end="165:37"><name pos:start="165:9" pos:end="165:18">header_len</name> <operator pos:start="165:20" pos:end="165:20">=</operator> <call pos:start="165:22" pos:end="165:37"><name pos:start="165:22" pos:end="165:29">get_byte</name><argument_list pos:start="165:30" pos:end="165:37">(<argument pos:start="165:31" pos:end="165:36"><expr pos:start="165:31" pos:end="165:36"><operator pos:start="165:31" pos:end="165:31">&amp;</operator><name pos:start="165:32" pos:end="165:36"><name pos:start="165:32" pos:end="165:32">s</name><operator pos:start="165:33" pos:end="165:34">-&gt;</operator><name pos:start="165:35" pos:end="165:36">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:17"><expr pos:start="167:9" pos:end="167:16"><name pos:start="167:9" pos:end="167:11">len</name> <operator pos:start="167:13" pos:end="167:14">-=</operator> <literal type="number" pos:start="167:16" pos:end="167:16">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="169:9" pos:end="171:22"><if pos:start="169:9" pos:end="171:22">if <condition pos:start="169:12" pos:end="169:29">(<expr pos:start="169:13" pos:end="169:28"><name pos:start="169:13" pos:end="169:22">header_len</name> <operator pos:start="169:24" pos:end="169:24">&gt;</operator> <name pos:start="169:26" pos:end="169:28">len</name></expr>)</condition><block type="pseudo" pos:start="171:13" pos:end="171:22"><block_content pos:start="171:13" pos:end="171:22">

            <goto pos:start="171:13" pos:end="171:22">goto <name pos:start="171:18" pos:end="171:21">redo</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="173:9" pos:end="185:9"><if pos:start="173:9" pos:end="185:9">if <condition pos:start="173:12" pos:end="173:35">(<expr pos:start="173:13" pos:end="173:34"><operator pos:start="173:13" pos:end="173:13">(</operator><name pos:start="173:14" pos:end="173:18">flags</name> <operator pos:start="173:20" pos:end="173:20">&amp;</operator> <literal type="number" pos:start="173:22" pos:end="173:25">0xc0</literal><operator pos:start="173:26" pos:end="173:26">)</operator> <operator pos:start="173:28" pos:end="173:29">==</operator> <literal type="number" pos:start="173:31" pos:end="173:34">0x80</literal></expr>)</condition> <block pos:start="173:37" pos:end="185:9">{<block_content pos:start="175:13" pos:end="183:21">

            <expr_stmt pos:start="175:13" pos:end="175:44"><expr pos:start="175:13" pos:end="175:43"><name pos:start="175:13" pos:end="175:15">dts</name> <operator pos:start="175:17" pos:end="175:17">=</operator> <name pos:start="175:19" pos:end="175:21">pts</name> <operator pos:start="175:23" pos:end="175:23">=</operator> <call pos:start="175:25" pos:end="175:43"><name pos:start="175:25" pos:end="175:31">get_pts</name><argument_list pos:start="175:32" pos:end="175:43">(<argument pos:start="175:33" pos:end="175:38"><expr pos:start="175:33" pos:end="175:38"><operator pos:start="175:33" pos:end="175:33">&amp;</operator><name pos:start="175:34" pos:end="175:38"><name pos:start="175:34" pos:end="175:34">s</name><operator pos:start="175:35" pos:end="175:36">-&gt;</operator><name pos:start="175:37" pos:end="175:38">pb</name></name></expr></argument>, <argument pos:start="175:41" pos:end="175:42"><expr pos:start="175:41" pos:end="175:42"><operator pos:start="175:41" pos:end="175:41">-</operator><literal type="number" pos:start="175:42" pos:end="175:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="177:13" pos:end="179:26"><if pos:start="177:13" pos:end="179:26">if <condition pos:start="177:16" pos:end="177:31">(<expr pos:start="177:17" pos:end="177:30"><name pos:start="177:17" pos:end="177:26">header_len</name> <operator pos:start="177:28" pos:end="177:28">&lt;</operator> <literal type="number" pos:start="177:30" pos:end="177:30">5</literal></expr>)</condition><block type="pseudo" pos:start="179:17" pos:end="179:26"><block_content pos:start="179:17" pos:end="179:26">

                <goto pos:start="179:17" pos:end="179:26">goto <name pos:start="179:22" pos:end="179:25">redo</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:28"><expr pos:start="181:13" pos:end="181:27"><name pos:start="181:13" pos:end="181:22">header_len</name> <operator pos:start="181:24" pos:end="181:25">-=</operator> <literal type="number" pos:start="181:27" pos:end="181:27">5</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:21"><expr pos:start="183:13" pos:end="183:20"><name pos:start="183:13" pos:end="183:15">len</name> <operator pos:start="183:17" pos:end="183:18">-=</operator> <literal type="number" pos:start="183:20" pos:end="183:20">5</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt> <if_stmt pos:start="185:11" pos:end="199:9"><if pos:start="185:11" pos:end="199:9">if <condition pos:start="185:14" pos:end="185:37">(<expr pos:start="185:15" pos:end="185:36"><operator pos:start="185:15" pos:end="185:15">(</operator><name pos:start="185:16" pos:end="185:20">flags</name> <operator pos:start="185:22" pos:end="185:22">&amp;</operator> <literal type="number" pos:start="185:24" pos:end="185:27">0xc0</literal><operator pos:start="185:28" pos:end="185:28">)</operator> <operator pos:start="185:30" pos:end="185:31">==</operator> <literal type="number" pos:start="185:33" pos:end="185:36">0xc0</literal></expr>)</condition> <block pos:start="185:39" pos:end="199:9">{<block_content pos:start="187:13" pos:end="197:22">

            <expr_stmt pos:start="187:13" pos:end="187:38"><expr pos:start="187:13" pos:end="187:37"><name pos:start="187:13" pos:end="187:15">pts</name> <operator pos:start="187:17" pos:end="187:17">=</operator> <call pos:start="187:19" pos:end="187:37"><name pos:start="187:19" pos:end="187:25">get_pts</name><argument_list pos:start="187:26" pos:end="187:37">(<argument pos:start="187:27" pos:end="187:32"><expr pos:start="187:27" pos:end="187:32"><operator pos:start="187:27" pos:end="187:27">&amp;</operator><name pos:start="187:28" pos:end="187:32"><name pos:start="187:28" pos:end="187:28">s</name><operator pos:start="187:29" pos:end="187:30">-&gt;</operator><name pos:start="187:31" pos:end="187:32">pb</name></name></expr></argument>, <argument pos:start="187:35" pos:end="187:36"><expr pos:start="187:35" pos:end="187:36"><operator pos:start="187:35" pos:end="187:35">-</operator><literal type="number" pos:start="187:36" pos:end="187:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:38"><expr pos:start="189:13" pos:end="189:37"><name pos:start="189:13" pos:end="189:15">dts</name> <operator pos:start="189:17" pos:end="189:17">=</operator> <call pos:start="189:19" pos:end="189:37"><name pos:start="189:19" pos:end="189:25">get_pts</name><argument_list pos:start="189:26" pos:end="189:37">(<argument pos:start="189:27" pos:end="189:32"><expr pos:start="189:27" pos:end="189:32"><operator pos:start="189:27" pos:end="189:27">&amp;</operator><name pos:start="189:28" pos:end="189:32"><name pos:start="189:28" pos:end="189:28">s</name><operator pos:start="189:29" pos:end="189:30">-&gt;</operator><name pos:start="189:31" pos:end="189:32">pb</name></name></expr></argument>, <argument pos:start="189:35" pos:end="189:36"><expr pos:start="189:35" pos:end="189:36"><operator pos:start="189:35" pos:end="189:35">-</operator><literal type="number" pos:start="189:36" pos:end="189:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="191:13" pos:end="193:26"><if pos:start="191:13" pos:end="193:26">if <condition pos:start="191:16" pos:end="191:32">(<expr pos:start="191:17" pos:end="191:31"><name pos:start="191:17" pos:end="191:26">header_len</name> <operator pos:start="191:28" pos:end="191:28">&lt;</operator> <literal type="number" pos:start="191:30" pos:end="191:31">10</literal></expr>)</condition><block type="pseudo" pos:start="193:17" pos:end="193:26"><block_content pos:start="193:17" pos:end="193:26">

                <goto pos:start="193:17" pos:end="193:26">goto <name pos:start="193:22" pos:end="193:25">redo</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:29"><expr pos:start="195:13" pos:end="195:28"><name pos:start="195:13" pos:end="195:22">header_len</name> <operator pos:start="195:24" pos:end="195:25">-=</operator> <literal type="number" pos:start="195:27" pos:end="195:28">10</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:22"><expr pos:start="197:13" pos:end="197:21"><name pos:start="197:13" pos:end="197:15">len</name> <operator pos:start="197:17" pos:end="197:18">-=</operator> <literal type="number" pos:start="197:20" pos:end="197:21">10</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:26"><expr pos:start="201:9" pos:end="201:25"><name pos:start="201:9" pos:end="201:11">len</name> <operator pos:start="201:13" pos:end="201:14">-=</operator> <name pos:start="201:16" pos:end="201:25">header_len</name></expr>;</expr_stmt>

        <while pos:start="203:9" pos:end="209:9">while <condition pos:start="203:15" pos:end="203:30">(<expr pos:start="203:16" pos:end="203:29"><name pos:start="203:16" pos:end="203:25">header_len</name> <operator pos:start="203:27" pos:end="203:27">&gt;</operator> <literal type="number" pos:start="203:29" pos:end="203:29">0</literal></expr>)</condition> <block pos:start="203:32" pos:end="209:9">{<block_content pos:start="205:13" pos:end="207:25">

            <expr_stmt pos:start="205:13" pos:end="205:29"><expr pos:start="205:13" pos:end="205:28"><call pos:start="205:13" pos:end="205:28"><name pos:start="205:13" pos:end="205:20">get_byte</name><argument_list pos:start="205:21" pos:end="205:28">(<argument pos:start="205:22" pos:end="205:27"><expr pos:start="205:22" pos:end="205:27"><operator pos:start="205:22" pos:end="205:22">&amp;</operator><name pos:start="205:23" pos:end="205:27"><name pos:start="205:23" pos:end="205:23">s</name><operator pos:start="205:24" pos:end="205:25">-&gt;</operator><name pos:start="205:26" pos:end="205:27">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:25"><expr pos:start="207:13" pos:end="207:24"><name pos:start="207:13" pos:end="207:22">header_len</name><operator pos:start="207:23" pos:end="207:24">--</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if>

    <if type="elseif" pos:start="213:5" pos:end="215:18">else if<condition pos:start="213:12" pos:end="213:22">( <expr pos:start="213:14" pos:end="213:20"><name pos:start="213:14" pos:end="213:14">c</name><operator pos:start="213:15" pos:end="213:16">!=</operator> <literal type="number" pos:start="213:18" pos:end="213:20">0xf</literal></expr> )</condition><block type="pseudo" pos:start="215:9" pos:end="215:18"><block_content pos:start="215:9" pos:end="215:18">

        <goto pos:start="215:9" pos:end="215:18">goto <name pos:start="215:14" pos:end="215:17">redo</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="219:5" pos:end="247:5"><if pos:start="219:5" pos:end="247:5">if <condition pos:start="219:8" pos:end="219:75">(<expr pos:start="219:9" pos:end="219:74"><name pos:start="219:9" pos:end="219:17">startcode</name> <operator pos:start="219:19" pos:end="219:20">==</operator> <name pos:start="219:22" pos:end="219:37">PRIVATE_STREAM_1</name> <operator pos:start="219:39" pos:end="219:40">&amp;&amp;</operator> <operator pos:start="219:42" pos:end="219:42">!</operator><name pos:start="219:43" pos:end="219:74"><name pos:start="219:43" pos:end="219:43">m</name><operator pos:start="219:44" pos:end="219:45">-&gt;</operator><name pos:start="219:46" pos:end="219:56">psm_es_type</name><index pos:start="219:57" pos:end="219:74">[<expr pos:start="219:58" pos:end="219:73"><name pos:start="219:58" pos:end="219:66">startcode</name> <operator pos:start="219:68" pos:end="219:68">&amp;</operator> <literal type="number" pos:start="219:70" pos:end="219:73">0xff</literal></expr>]</index></name></expr>)</condition> <block pos:start="219:77" pos:end="247:5">{<block_content pos:start="221:9" pos:end="245:9">

        <if_stmt pos:start="221:9" pos:end="223:22"><if pos:start="221:9" pos:end="223:22">if <condition pos:start="221:12" pos:end="221:20">(<expr pos:start="221:13" pos:end="221:19"><name pos:start="221:13" pos:end="221:15">len</name> <operator pos:start="221:17" pos:end="221:17">&lt;</operator> <literal type="number" pos:start="221:19" pos:end="221:19">1</literal></expr>)</condition><block type="pseudo" pos:start="223:13" pos:end="223:22"><block_content pos:start="223:13" pos:end="223:22">

            <goto pos:start="223:13" pos:end="223:22">goto <name pos:start="223:18" pos:end="223:21">redo</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:37"><expr pos:start="225:9" pos:end="225:36"><name pos:start="225:9" pos:end="225:17">startcode</name> <operator pos:start="225:19" pos:end="225:19">=</operator> <call pos:start="225:21" pos:end="225:36"><name pos:start="225:21" pos:end="225:28">get_byte</name><argument_list pos:start="225:29" pos:end="225:36">(<argument pos:start="225:30" pos:end="225:35"><expr pos:start="225:30" pos:end="225:35"><operator pos:start="225:30" pos:end="225:30">&amp;</operator><name pos:start="225:31" pos:end="225:35"><name pos:start="225:31" pos:end="225:31">s</name><operator pos:start="225:32" pos:end="225:33">-&gt;</operator><name pos:start="225:34" pos:end="225:35">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:14"><expr pos:start="227:9" pos:end="227:13"><name pos:start="227:9" pos:end="227:11">len</name><operator pos:start="227:12" pos:end="227:13">--</operator></expr>;</expr_stmt>

        <if_stmt pos:start="229:9" pos:end="245:9"><if pos:start="229:9" pos:end="245:9">if <condition pos:start="229:12" pos:end="229:51">(<expr pos:start="229:13" pos:end="229:50"><name pos:start="229:13" pos:end="229:21">startcode</name> <operator pos:start="229:23" pos:end="229:24">&gt;=</operator> <literal type="number" pos:start="229:26" pos:end="229:29">0x80</literal> <operator pos:start="229:31" pos:end="229:32">&amp;&amp;</operator> <name pos:start="229:34" pos:end="229:42">startcode</name> <operator pos:start="229:44" pos:end="229:45">&lt;=</operator> <literal type="number" pos:start="229:47" pos:end="229:50">0xbf</literal></expr>)</condition> <block pos:start="229:53" pos:end="245:9">{<block_content pos:start="233:13" pos:end="243:21">

            <comment type="block" pos:start="231:13" pos:end="231:36">/* audio: skip header */</comment>

            <if_stmt pos:start="233:13" pos:end="235:26"><if pos:start="233:13" pos:end="235:26">if <condition pos:start="233:16" pos:end="233:24">(<expr pos:start="233:17" pos:end="233:23"><name pos:start="233:17" pos:end="233:19">len</name> <operator pos:start="233:21" pos:end="233:21">&lt;</operator> <literal type="number" pos:start="233:23" pos:end="233:23">3</literal></expr>)</condition><block type="pseudo" pos:start="235:17" pos:end="235:26"><block_content pos:start="235:17" pos:end="235:26">

                <goto pos:start="235:17" pos:end="235:26">goto <name pos:start="235:22" pos:end="235:25">redo</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:29"><expr pos:start="237:13" pos:end="237:28"><call pos:start="237:13" pos:end="237:28"><name pos:start="237:13" pos:end="237:20">get_byte</name><argument_list pos:start="237:21" pos:end="237:28">(<argument pos:start="237:22" pos:end="237:27"><expr pos:start="237:22" pos:end="237:27"><operator pos:start="237:22" pos:end="237:22">&amp;</operator><name pos:start="237:23" pos:end="237:27"><name pos:start="237:23" pos:end="237:23">s</name><operator pos:start="237:24" pos:end="237:25">-&gt;</operator><name pos:start="237:26" pos:end="237:27">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="239:13" pos:end="239:29"><expr pos:start="239:13" pos:end="239:28"><call pos:start="239:13" pos:end="239:28"><name pos:start="239:13" pos:end="239:20">get_byte</name><argument_list pos:start="239:21" pos:end="239:28">(<argument pos:start="239:22" pos:end="239:27"><expr pos:start="239:22" pos:end="239:27"><operator pos:start="239:22" pos:end="239:22">&amp;</operator><name pos:start="239:23" pos:end="239:27"><name pos:start="239:23" pos:end="239:23">s</name><operator pos:start="239:24" pos:end="239:25">-&gt;</operator><name pos:start="239:26" pos:end="239:27">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:29"><expr pos:start="241:13" pos:end="241:28"><call pos:start="241:13" pos:end="241:28"><name pos:start="241:13" pos:end="241:20">get_byte</name><argument_list pos:start="241:21" pos:end="241:28">(<argument pos:start="241:22" pos:end="241:27"><expr pos:start="241:22" pos:end="241:27"><operator pos:start="241:22" pos:end="241:22">&amp;</operator><name pos:start="241:23" pos:end="241:27"><name pos:start="241:23" pos:end="241:23">s</name><operator pos:start="241:24" pos:end="241:25">-&gt;</operator><name pos:start="241:26" pos:end="241:27">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="243:13" pos:end="243:21"><expr pos:start="243:13" pos:end="243:20"><name pos:start="243:13" pos:end="243:15">len</name> <operator pos:start="243:17" pos:end="243:18">-=</operator> <literal type="number" pos:start="243:20" pos:end="243:20">3</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="249:5" pos:end="263:5"><if pos:start="249:5" pos:end="263:5">if<condition pos:start="249:7" pos:end="249:37">(<expr pos:start="249:8" pos:end="249:36"><name pos:start="249:8" pos:end="249:10">dts</name> <operator pos:start="249:12" pos:end="249:13">!=</operator> <name pos:start="249:15" pos:end="249:28">AV_NOPTS_VALUE</name> <operator pos:start="249:30" pos:end="249:31">&amp;&amp;</operator> <name pos:start="249:33" pos:end="249:36">ppos</name></expr>)</condition><block pos:start="249:38" pos:end="263:5">{<block_content pos:start="251:9" pos:end="261:9">

        <decl_stmt pos:start="251:9" pos:end="251:14"><decl pos:start="251:9" pos:end="251:13"><type pos:start="251:9" pos:end="251:11"><name pos:start="251:9" pos:end="251:11">int</name></type> <name pos:start="251:13" pos:end="251:13">i</name></decl>;</decl_stmt>

        <for pos:start="253:9" pos:end="261:9">for<control pos:start="253:12" pos:end="253:38">(<init pos:start="253:13" pos:end="253:16"><expr pos:start="253:13" pos:end="253:15"><name pos:start="253:13" pos:end="253:13">i</name><operator pos:start="253:14" pos:end="253:14">=</operator><literal type="number" pos:start="253:15" pos:end="253:15">0</literal></expr>;</init> <condition pos:start="253:18" pos:end="253:33"><expr pos:start="253:18" pos:end="253:32"><name pos:start="253:18" pos:end="253:18">i</name><operator pos:start="253:19" pos:end="253:19">&lt;</operator><name pos:start="253:20" pos:end="253:32"><name pos:start="253:20" pos:end="253:20">s</name><operator pos:start="253:21" pos:end="253:22">-&gt;</operator><name pos:start="253:23" pos:end="253:32">nb_streams</name></name></expr>;</condition> <incr pos:start="253:35" pos:end="253:37"><expr pos:start="253:35" pos:end="253:37"><name pos:start="253:35" pos:end="253:35">i</name><operator pos:start="253:36" pos:end="253:37">++</operator></expr></incr>)</control><block pos:start="253:39" pos:end="261:9">{<block_content pos:start="255:13" pos:end="259:13">

            <if_stmt pos:start="255:13" pos:end="259:13"><if pos:start="255:13" pos:end="259:13">if<condition pos:start="255:15" pos:end="255:46">(<expr pos:start="255:16" pos:end="255:45"><name pos:start="255:16" pos:end="255:24">startcode</name> <operator pos:start="255:26" pos:end="255:27">==</operator> <name pos:start="255:29" pos:end="255:41"><name pos:start="255:29" pos:end="255:29">s</name><operator pos:start="255:30" pos:end="255:31">-&gt;</operator><name pos:start="255:32" pos:end="255:38">streams</name><index pos:start="255:39" pos:end="255:41">[<expr pos:start="255:40" pos:end="255:40"><name pos:start="255:40" pos:end="255:40">i</name></expr>]</index></name><operator pos:start="255:42" pos:end="255:43">-&gt;</operator><name pos:start="255:44" pos:end="255:45">id</name></expr>)</condition> <block pos:start="255:48" pos:end="259:13">{<block_content pos:start="257:17" pos:end="257:108">

                <expr_stmt pos:start="257:17" pos:end="257:108"><expr pos:start="257:17" pos:end="257:107"><call pos:start="257:17" pos:end="257:107"><name pos:start="257:17" pos:end="257:34">av_add_index_entry</name><argument_list pos:start="257:35" pos:end="257:107">(<argument pos:start="257:36" pos:end="257:48"><expr pos:start="257:36" pos:end="257:48"><name pos:start="257:36" pos:end="257:48"><name pos:start="257:36" pos:end="257:36">s</name><operator pos:start="257:37" pos:end="257:38">-&gt;</operator><name pos:start="257:39" pos:end="257:45">streams</name><index pos:start="257:46" pos:end="257:48">[<expr pos:start="257:47" pos:end="257:47"><name pos:start="257:47" pos:end="257:47">i</name></expr>]</index></name></expr></argument>, <argument pos:start="257:51" pos:end="257:55"><expr pos:start="257:51" pos:end="257:55"><operator pos:start="257:51" pos:end="257:51">*</operator><name pos:start="257:52" pos:end="257:55">ppos</name></expr></argument>, <argument pos:start="257:58" pos:end="257:60"><expr pos:start="257:58" pos:end="257:60"><name pos:start="257:58" pos:end="257:60">dts</name></expr></argument>, <argument pos:start="257:63" pos:end="257:63"><expr pos:start="257:63" pos:end="257:63"><literal type="number" pos:start="257:63" pos:end="257:63">0</literal></expr></argument>, <argument pos:start="257:66" pos:end="257:66"><expr pos:start="257:66" pos:end="257:66"><literal type="number" pos:start="257:66" pos:end="257:66">0</literal></expr></argument>, <argument pos:start="257:69" pos:end="257:84"><expr pos:start="257:69" pos:end="257:84"><name pos:start="257:69" pos:end="257:84">AVINDEX_KEYFRAME</name></expr></argument> <comment type="block" pos:start="257:86" pos:end="257:106">/* FIXME keyframe? */</comment>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="267:5" pos:end="267:29"><expr pos:start="267:5" pos:end="267:28"><operator pos:start="267:5" pos:end="267:5">*</operator><name pos:start="267:6" pos:end="267:16">pstart_code</name> <operator pos:start="267:18" pos:end="267:18">=</operator> <name pos:start="267:20" pos:end="267:28">startcode</name></expr>;</expr_stmt>

    <expr_stmt pos:start="269:5" pos:end="269:16"><expr pos:start="269:5" pos:end="269:15"><operator pos:start="269:5" pos:end="269:5">*</operator><name pos:start="269:6" pos:end="269:9">ppts</name> <operator pos:start="269:11" pos:end="269:11">=</operator> <name pos:start="269:13" pos:end="269:15">pts</name></expr>;</expr_stmt>

    <expr_stmt pos:start="271:5" pos:end="271:16"><expr pos:start="271:5" pos:end="271:15"><operator pos:start="271:5" pos:end="271:5">*</operator><name pos:start="271:6" pos:end="271:9">pdts</name> <operator pos:start="271:11" pos:end="271:11">=</operator> <name pos:start="271:13" pos:end="271:15">dts</name></expr>;</expr_stmt>

    <return pos:start="273:5" pos:end="273:15">return <expr pos:start="273:12" pos:end="273:14"><name pos:start="273:12" pos:end="273:14">len</name></expr>;</return>

</block_content>}</block></function>
</unit>
