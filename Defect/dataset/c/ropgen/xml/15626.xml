<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15626.c" pos:tabs="8"><function pos:start="1:1" pos:end="811:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:20">sws_init_context</name><parameter_list pos:start="1:21" pos:end="1:79">(<parameter pos:start="1:22" pos:end="1:34"><decl pos:start="1:22" pos:end="1:34"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:31">SwsContext</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:34">c</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:56"><decl pos:start="1:37" pos:end="1:56"><type pos:start="1:37" pos:end="1:56"><name pos:start="1:37" pos:end="1:45">SwsFilter</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:56">srcFilter</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:78"><decl pos:start="1:59" pos:end="1:78"><type pos:start="1:59" pos:end="1:78"><name pos:start="1:59" pos:end="1:67">SwsFilter</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:78">dstFilter</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="811:1">{<block_content pos:start="5:5" pos:end="809:14">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">usesVFilter</name></decl>, <decl pos:start="7:22" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:32">usesHFilter</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">unscaled</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:52"><decl pos:start="11:5" pos:end="11:51"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:13">SwsFilter</name></type> <name pos:start="11:15" pos:end="11:25">dummyFilter</name><init pos:start="11:26" pos:end="11:51">= <expr pos:start="11:28" pos:end="11:51"><block pos:start="11:28" pos:end="11:51">{<expr pos:start="11:29" pos:end="11:32"><name pos:start="11:29" pos:end="11:32">NULL</name></expr>, <expr pos:start="11:35" pos:end="11:38"><name pos:start="11:35" pos:end="11:38">NULL</name></expr>, <expr pos:start="11:41" pos:end="11:44"><name pos:start="11:41" pos:end="11:44">NULL</name></expr>, <expr pos:start="11:47" pos:end="11:50"><name pos:start="11:47" pos:end="11:50">NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">srcW</name><init pos:start="13:13" pos:end="13:21">= <expr pos:start="13:15" pos:end="13:21"><name pos:start="13:15" pos:end="13:21"><name pos:start="13:15" pos:end="13:15">c</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:21">srcW</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">srcH</name><init pos:start="15:13" pos:end="15:21">= <expr pos:start="15:15" pos:end="15:21"><name pos:start="15:15" pos:end="15:21"><name pos:start="15:15" pos:end="15:15">c</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:21">srcH</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">dstW</name><init pos:start="17:13" pos:end="17:21">= <expr pos:start="17:15" pos:end="17:21"><name pos:start="17:15" pos:end="17:21"><name pos:start="17:15" pos:end="17:15">c</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:21">dstW</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:12">dstH</name><init pos:start="19:13" pos:end="19:21">= <expr pos:start="19:15" pos:end="19:21"><name pos:start="19:15" pos:end="19:21"><name pos:start="19:15" pos:end="19:15">c</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:21">dstH</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:95"><decl pos:start="21:5" pos:end="21:61"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:18">dst_stride</name> <init pos:start="21:20" pos:end="21:61">= <expr pos:start="21:22" pos:end="21:61"><call pos:start="21:22" pos:end="21:61"><name pos:start="21:22" pos:end="21:28">FFALIGN</name><argument_list pos:start="21:29" pos:end="21:61">(<argument pos:start="21:30" pos:end="21:56"><expr pos:start="21:30" pos:end="21:56"><name pos:start="21:30" pos:end="21:33">dstW</name> <operator pos:start="21:35" pos:end="21:35">*</operator> <sizeof pos:start="21:37" pos:end="21:51">sizeof<argument_list pos:start="21:43" pos:end="21:51">(<argument pos:start="21:44" pos:end="21:50"><expr pos:start="21:44" pos:end="21:50"><name pos:start="21:44" pos:end="21:50">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="21:53" pos:end="21:53">+</operator> <literal type="number" pos:start="21:55" pos:end="21:56">16</literal></expr></argument>, <argument pos:start="21:59" pos:end="21:60"><expr pos:start="21:59" pos:end="21:60"><literal type="number" pos:start="21:59" pos:end="21:60">16</literal></expr></argument>)</argument_list></call></expr></init></decl>, <decl pos:start="21:64" pos:end="21:94"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:64" pos:end="21:76">dst_stride_px</name> <init pos:start="21:78" pos:end="21:94">= <expr pos:start="21:80" pos:end="21:94"><name pos:start="21:80" pos:end="21:89">dst_stride</name> <operator pos:start="21:91" pos:end="21:92">&gt;&gt;</operator> <literal type="number" pos:start="21:94" pos:end="21:94">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:25"><decl pos:start="23:5" pos:end="23:13"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:13">flags</name></decl>, <decl pos:start="23:16" pos:end="23:24"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:16" pos:end="23:24">cpu_flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:45"><decl pos:start="25:5" pos:end="25:44"><type pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:8">enum</name> <name pos:start="25:10" pos:end="25:20">PixelFormat</name></name></type> <name pos:start="25:22" pos:end="25:30">srcFormat</name><init pos:start="25:31" pos:end="25:44">= <expr pos:start="25:33" pos:end="25:44"><name pos:start="25:33" pos:end="25:44"><name pos:start="25:33" pos:end="25:33">c</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:44">srcFormat</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:45"><decl pos:start="27:5" pos:end="27:44"><type pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:8">enum</name> <name pos:start="27:10" pos:end="27:20">PixelFormat</name></name></type> <name pos:start="27:22" pos:end="27:30">dstFormat</name><init pos:start="27:31" pos:end="27:44">= <expr pos:start="27:33" pos:end="27:44"><name pos:start="27:33" pos:end="27:44"><name pos:start="27:33" pos:end="27:33">c</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:44">dstFormat</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:35"><expr pos:start="31:5" pos:end="31:34"><name pos:start="31:5" pos:end="31:13">cpu_flags</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <call pos:start="31:17" pos:end="31:34"><name pos:start="31:17" pos:end="31:32">av_get_cpu_flags</name><argument_list pos:start="31:33" pos:end="31:34">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:25"><expr pos:start="33:5" pos:end="33:24"><name pos:start="33:5" pos:end="33:9">flags</name>     <operator pos:start="33:15" pos:end="33:15">=</operator> <name pos:start="33:17" pos:end="33:24"><name pos:start="33:17" pos:end="33:17">c</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:24">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:13"><expr pos:start="35:5" pos:end="35:12"><call pos:start="35:5" pos:end="35:12"><name pos:start="35:5" pos:end="35:10">emms_c</name><argument_list pos:start="35:11" pos:end="35:12">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="37:39"><if pos:start="37:5" pos:end="37:39">if <condition pos:start="37:8" pos:end="37:19">(<expr pos:start="37:9" pos:end="37:18"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:18">rgb15to16</name></expr>)</condition><block type="pseudo" pos:start="37:21" pos:end="37:39"><block_content pos:start="37:21" pos:end="37:39"> <expr_stmt pos:start="37:21" pos:end="37:39"><expr pos:start="37:21" pos:end="37:38"><call pos:start="37:21" pos:end="37:38"><name pos:start="37:21" pos:end="37:36">sws_rgb2rgb_init</name><argument_list pos:start="37:37" pos:end="37:38">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:46"><expr pos:start="41:5" pos:end="41:45"><name pos:start="41:5" pos:end="41:12">unscaled</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <operator pos:start="41:16" pos:end="41:16">(</operator><name pos:start="41:17" pos:end="41:20">srcW</name> <operator pos:start="41:22" pos:end="41:23">==</operator> <name pos:start="41:25" pos:end="41:28">dstW</name> <operator pos:start="41:30" pos:end="41:31">&amp;&amp;</operator> <name pos:start="41:33" pos:end="41:36">srcH</name> <operator pos:start="41:38" pos:end="41:39">==</operator> <name pos:start="41:41" pos:end="41:44">dstH</name><operator pos:start="41:45" pos:end="41:45">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:34">(<expr pos:start="45:9" pos:end="45:33"><operator pos:start="45:9" pos:end="45:9">!</operator><call pos:start="45:10" pos:end="45:33"><name pos:start="45:10" pos:end="45:22">isSupportedIn</name><argument_list pos:start="45:23" pos:end="45:33">(<argument pos:start="45:24" pos:end="45:32"><expr pos:start="45:24" pos:end="45:32"><name pos:start="45:24" pos:end="45:32">srcFormat</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:36" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:31">

        <expr_stmt pos:start="47:9" pos:end="47:107"><expr pos:start="47:9" pos:end="47:106"><call pos:start="47:9" pos:end="47:106"><name pos:start="47:9" pos:end="47:14">av_log</name><argument_list pos:start="47:15" pos:end="47:106">(<argument pos:start="47:16" pos:end="47:16"><expr pos:start="47:16" pos:end="47:16"><name pos:start="47:16" pos:end="47:16">c</name></expr></argument>, <argument pos:start="47:19" pos:end="47:30"><expr pos:start="47:19" pos:end="47:30"><name pos:start="47:19" pos:end="47:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:33" pos:end="47:77"><expr pos:start="47:33" pos:end="47:77"><literal type="string" pos:start="47:33" pos:end="47:77">"%s is not supported as input pixel format\n"</literal></expr></argument>, <argument pos:start="47:80" pos:end="47:105"><expr pos:start="47:80" pos:end="47:105"><call pos:start="47:80" pos:end="47:105"><name pos:start="47:80" pos:end="47:94">sws_format_name</name><argument_list pos:start="47:95" pos:end="47:105">(<argument pos:start="47:96" pos:end="47:104"><expr pos:start="47:96" pos:end="47:104"><name pos:start="47:96" pos:end="47:104">srcFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:31">return <expr pos:start="49:16" pos:end="49:30"><call pos:start="49:16" pos:end="49:30"><name pos:start="49:16" pos:end="49:22">AVERROR</name><argument_list pos:start="49:23" pos:end="49:30">(<argument pos:start="49:24" pos:end="49:29"><expr pos:start="49:24" pos:end="49:29"><name pos:start="49:24" pos:end="49:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:35">(<expr pos:start="53:9" pos:end="53:34"><operator pos:start="53:9" pos:end="53:9">!</operator><call pos:start="53:10" pos:end="53:34"><name pos:start="53:10" pos:end="53:23">isSupportedOut</name><argument_list pos:start="53:24" pos:end="53:34">(<argument pos:start="53:25" pos:end="53:33"><expr pos:start="53:25" pos:end="53:33"><name pos:start="53:25" pos:end="53:33">dstFormat</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:37" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:31">

        <expr_stmt pos:start="55:9" pos:end="55:108"><expr pos:start="55:9" pos:end="55:107"><call pos:start="55:9" pos:end="55:107"><name pos:start="55:9" pos:end="55:14">av_log</name><argument_list pos:start="55:15" pos:end="55:107">(<argument pos:start="55:16" pos:end="55:16"><expr pos:start="55:16" pos:end="55:16"><name pos:start="55:16" pos:end="55:16">c</name></expr></argument>, <argument pos:start="55:19" pos:end="55:30"><expr pos:start="55:19" pos:end="55:30"><name pos:start="55:19" pos:end="55:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:33" pos:end="55:78"><expr pos:start="55:33" pos:end="55:78"><literal type="string" pos:start="55:33" pos:end="55:78">"%s is not supported as output pixel format\n"</literal></expr></argument>, <argument pos:start="55:81" pos:end="55:106"><expr pos:start="55:81" pos:end="55:106"><call pos:start="55:81" pos:end="55:106"><name pos:start="55:81" pos:end="55:95">sws_format_name</name><argument_list pos:start="55:96" pos:end="55:106">(<argument pos:start="55:97" pos:end="55:105"><expr pos:start="55:97" pos:end="55:105"><name pos:start="55:97" pos:end="55:105">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:31">return <expr pos:start="57:16" pos:end="57:30"><call pos:start="57:16" pos:end="57:30"><name pos:start="57:16" pos:end="57:22">AVERROR</name><argument_list pos:start="57:23" pos:end="57:30">(<argument pos:start="57:24" pos:end="57:29"><expr pos:start="57:24" pos:end="57:29"><name pos:start="57:24" pos:end="57:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="83:31"><expr pos:start="63:5" pos:end="83:30"><name pos:start="63:5" pos:end="63:5">i</name><operator pos:start="63:6" pos:end="63:6">=</operator> <name pos:start="63:8" pos:end="63:12">flags</name> <operator pos:start="63:14" pos:end="63:14">&amp;</operator> <operator pos:start="63:16" pos:end="63:16">(</operator> <name pos:start="63:18" pos:end="63:26">SWS_POINT</name>

                <operator pos:start="65:17" pos:end="65:17">|</operator><name pos:start="65:18" pos:end="65:25">SWS_AREA</name>

                <operator pos:start="67:17" pos:end="67:17">|</operator><name pos:start="67:18" pos:end="67:29">SWS_BILINEAR</name>

                <operator pos:start="69:17" pos:end="69:17">|</operator><name pos:start="69:18" pos:end="69:34">SWS_FAST_BILINEAR</name>

                <operator pos:start="71:17" pos:end="71:17">|</operator><name pos:start="71:18" pos:end="71:28">SWS_BICUBIC</name>

                <operator pos:start="73:17" pos:end="73:17">|</operator><name pos:start="73:18" pos:end="73:22">SWS_X</name>

                <operator pos:start="75:17" pos:end="75:17">|</operator><name pos:start="75:18" pos:end="75:26">SWS_GAUSS</name>

                <operator pos:start="77:17" pos:end="77:17">|</operator><name pos:start="77:18" pos:end="77:28">SWS_LANCZOS</name>

                <operator pos:start="79:17" pos:end="79:17">|</operator><name pos:start="79:18" pos:end="79:25">SWS_SINC</name>

                <operator pos:start="81:17" pos:end="81:17">|</operator><name pos:start="81:18" pos:end="81:27">SWS_SPLINE</name>

                <operator pos:start="83:17" pos:end="83:17">|</operator><name pos:start="83:18" pos:end="83:29">SWS_BICUBLIN</name><operator pos:start="83:30" pos:end="83:30">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="91:5"><if pos:start="85:5" pos:end="91:5">if<condition pos:start="85:7" pos:end="85:25">(<expr pos:start="85:8" pos:end="85:24"><operator pos:start="85:8" pos:end="85:8">!</operator><name pos:start="85:9" pos:end="85:9">i</name> <operator pos:start="85:11" pos:end="85:12">||</operator> <operator pos:start="85:14" pos:end="85:14">(</operator><name pos:start="85:15" pos:end="85:15">i</name> <operator pos:start="85:17" pos:end="85:17">&amp;</operator> <operator pos:start="85:19" pos:end="85:19">(</operator><name pos:start="85:20" pos:end="85:20">i</name><operator pos:start="85:21" pos:end="85:21">-</operator><literal type="number" pos:start="85:22" pos:end="85:22">1</literal><operator pos:start="85:23" pos:end="85:23">)</operator><operator pos:start="85:24" pos:end="85:24">)</operator></expr>)</condition> <block pos:start="85:27" pos:end="91:5">{<block_content pos:start="87:9" pos:end="89:31">

        <expr_stmt pos:start="87:9" pos:end="87:81"><expr pos:start="87:9" pos:end="87:80"><call pos:start="87:9" pos:end="87:80"><name pos:start="87:9" pos:end="87:14">av_log</name><argument_list pos:start="87:15" pos:end="87:80">(<argument pos:start="87:16" pos:end="87:16"><expr pos:start="87:16" pos:end="87:16"><name pos:start="87:16" pos:end="87:16">c</name></expr></argument>, <argument pos:start="87:19" pos:end="87:30"><expr pos:start="87:19" pos:end="87:30"><name pos:start="87:19" pos:end="87:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="87:33" pos:end="87:79"><expr pos:start="87:33" pos:end="87:79"><literal type="string" pos:start="87:33" pos:end="87:79">"Exactly one scaler algorithm must be chosen\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="89:9" pos:end="89:31">return <expr pos:start="89:16" pos:end="89:30"><call pos:start="89:16" pos:end="89:30"><name pos:start="89:16" pos:end="89:22">AVERROR</name><argument_list pos:start="89:23" pos:end="89:30">(<argument pos:start="89:24" pos:end="89:29"><expr pos:start="89:24" pos:end="89:29"><name pos:start="89:24" pos:end="89:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="93:5" pos:end="93:22">/* sanity check */</comment>

    <if_stmt pos:start="95:5" pos:end="103:5"><if pos:start="95:5" pos:end="103:5">if <condition pos:start="95:8" pos:end="95:45">(<expr pos:start="95:9" pos:end="95:44"><name pos:start="95:9" pos:end="95:12">srcW</name><operator pos:start="95:13" pos:end="95:13">&lt;</operator><literal type="number" pos:start="95:14" pos:end="95:14">4</literal> <operator pos:start="95:16" pos:end="95:17">||</operator> <name pos:start="95:19" pos:end="95:22">srcH</name><operator pos:start="95:23" pos:end="95:23">&lt;</operator><literal type="number" pos:start="95:24" pos:end="95:24">1</literal> <operator pos:start="95:26" pos:end="95:27">||</operator> <name pos:start="95:29" pos:end="95:32">dstW</name><operator pos:start="95:33" pos:end="95:33">&lt;</operator><literal type="number" pos:start="95:34" pos:end="95:34">8</literal> <operator pos:start="95:36" pos:end="95:37">||</operator> <name pos:start="95:39" pos:end="95:42">dstH</name><operator pos:start="95:43" pos:end="95:43">&lt;</operator><literal type="number" pos:start="95:44" pos:end="95:44">1</literal></expr>)</condition> <block pos:start="95:47" pos:end="103:5">{<block_content pos:start="97:9" pos:end="101:31"> <comment type="line" pos:start="95:49" pos:end="95:148">//FIXME check if these are enough and try to lowwer them after fixing the relevant parts of the code</comment>

        <expr_stmt pos:start="97:9" pos:end="99:39"><expr pos:start="97:9" pos:end="99:38"><call pos:start="97:9" pos:end="99:38"><name pos:start="97:9" pos:end="97:14">av_log</name><argument_list pos:start="97:15" pos:end="99:38">(<argument pos:start="97:16" pos:end="97:16"><expr pos:start="97:16" pos:end="97:16"><name pos:start="97:16" pos:end="97:16">c</name></expr></argument>, <argument pos:start="97:19" pos:end="97:30"><expr pos:start="97:19" pos:end="97:30"><name pos:start="97:19" pos:end="97:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="97:33" pos:end="97:79"><expr pos:start="97:33" pos:end="97:79"><literal type="string" pos:start="97:33" pos:end="97:79">"%dx%d -&gt; %dx%d is invalid scaling dimension\n"</literal></expr></argument>,

               <argument pos:start="99:16" pos:end="99:19"><expr pos:start="99:16" pos:end="99:19"><name pos:start="99:16" pos:end="99:19">srcW</name></expr></argument>, <argument pos:start="99:22" pos:end="99:25"><expr pos:start="99:22" pos:end="99:25"><name pos:start="99:22" pos:end="99:25">srcH</name></expr></argument>, <argument pos:start="99:28" pos:end="99:31"><expr pos:start="99:28" pos:end="99:31"><name pos:start="99:28" pos:end="99:31">dstW</name></expr></argument>, <argument pos:start="99:34" pos:end="99:37"><expr pos:start="99:34" pos:end="99:37"><name pos:start="99:34" pos:end="99:37">dstH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="101:9" pos:end="101:31">return <expr pos:start="101:16" pos:end="101:30"><call pos:start="101:16" pos:end="101:30"><name pos:start="101:16" pos:end="101:22">AVERROR</name><argument_list pos:start="101:23" pos:end="101:30">(<argument pos:start="101:24" pos:end="101:29"><expr pos:start="101:24" pos:end="101:29"><name pos:start="101:24" pos:end="101:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="107:5" pos:end="107:44"><if pos:start="107:5" pos:end="107:44">if <condition pos:start="107:8" pos:end="107:19">(<expr pos:start="107:9" pos:end="107:18"><operator pos:start="107:9" pos:end="107:9">!</operator><name pos:start="107:10" pos:end="107:18">dstFilter</name></expr>)</condition><block type="pseudo" pos:start="107:21" pos:end="107:44"><block_content pos:start="107:21" pos:end="107:44"> <expr_stmt pos:start="107:21" pos:end="107:44"><expr pos:start="107:21" pos:end="107:43"><name pos:start="107:21" pos:end="107:29">dstFilter</name><operator pos:start="107:30" pos:end="107:30">=</operator> <operator pos:start="107:32" pos:end="107:32">&amp;</operator><name pos:start="107:33" pos:end="107:43">dummyFilter</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="109:5" pos:end="109:44"><if pos:start="109:5" pos:end="109:44">if <condition pos:start="109:8" pos:end="109:19">(<expr pos:start="109:9" pos:end="109:18"><operator pos:start="109:9" pos:end="109:9">!</operator><name pos:start="109:10" pos:end="109:18">srcFilter</name></expr>)</condition><block type="pseudo" pos:start="109:21" pos:end="109:44"><block_content pos:start="109:21" pos:end="109:44"> <expr_stmt pos:start="109:21" pos:end="109:44"><expr pos:start="109:21" pos:end="109:43"><name pos:start="109:21" pos:end="109:29">srcFilter</name><operator pos:start="109:30" pos:end="109:30">=</operator> <operator pos:start="109:32" pos:end="109:32">&amp;</operator><name pos:start="109:33" pos:end="109:43">dummyFilter</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:46"><expr pos:start="113:5" pos:end="113:45"><name pos:start="113:5" pos:end="113:14"><name pos:start="113:5" pos:end="113:5">c</name><operator pos:start="113:6" pos:end="113:7">-&gt;</operator><name pos:start="113:8" pos:end="113:14">lumXInc</name></name><operator pos:start="113:15" pos:end="113:15">=</operator> <operator pos:start="113:17" pos:end="113:17">(</operator><operator pos:start="113:18" pos:end="113:18">(</operator><name pos:start="113:19" pos:end="113:22">srcW</name><operator pos:start="113:23" pos:end="113:24">&lt;&lt;</operator><literal type="number" pos:start="113:25" pos:end="113:26">16</literal><operator pos:start="113:27" pos:end="113:27">)</operator> <operator pos:start="113:29" pos:end="113:29">+</operator> <operator pos:start="113:31" pos:end="113:31">(</operator><name pos:start="113:32" pos:end="113:35">dstW</name><operator pos:start="113:36" pos:end="113:37">&gt;&gt;</operator><literal type="number" pos:start="113:38" pos:end="113:38">1</literal><operator pos:start="113:39" pos:end="113:39">)</operator><operator pos:start="113:40" pos:end="113:40">)</operator><operator pos:start="113:41" pos:end="113:41">/</operator><name pos:start="113:42" pos:end="113:45">dstW</name></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:46"><expr pos:start="115:5" pos:end="115:45"><name pos:start="115:5" pos:end="115:14"><name pos:start="115:5" pos:end="115:5">c</name><operator pos:start="115:6" pos:end="115:7">-&gt;</operator><name pos:start="115:8" pos:end="115:14">lumYInc</name></name><operator pos:start="115:15" pos:end="115:15">=</operator> <operator pos:start="115:17" pos:end="115:17">(</operator><operator pos:start="115:18" pos:end="115:18">(</operator><name pos:start="115:19" pos:end="115:22">srcH</name><operator pos:start="115:23" pos:end="115:24">&lt;&lt;</operator><literal type="number" pos:start="115:25" pos:end="115:26">16</literal><operator pos:start="115:27" pos:end="115:27">)</operator> <operator pos:start="115:29" pos:end="115:29">+</operator> <operator pos:start="115:31" pos:end="115:31">(</operator><name pos:start="115:32" pos:end="115:35">dstH</name><operator pos:start="115:36" pos:end="115:37">&gt;&gt;</operator><literal type="number" pos:start="115:38" pos:end="115:38">1</literal><operator pos:start="115:39" pos:end="115:39">)</operator><operator pos:start="115:40" pos:end="115:40">)</operator><operator pos:start="115:41" pos:end="115:41">/</operator><name pos:start="115:42" pos:end="115:45">dstH</name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:80"><expr pos:start="117:5" pos:end="117:79"><name pos:start="117:5" pos:end="117:19"><name pos:start="117:5" pos:end="117:5">c</name><operator pos:start="117:6" pos:end="117:7">-&gt;</operator><name pos:start="117:8" pos:end="117:19">dstFormatBpp</name></name> <operator pos:start="117:21" pos:end="117:21">=</operator> <call pos:start="117:23" pos:end="117:79"><name pos:start="117:23" pos:end="117:43">av_get_bits_per_pixel</name><argument_list pos:start="117:44" pos:end="117:79">(<argument pos:start="117:45" pos:end="117:78"><expr pos:start="117:45" pos:end="117:78"><operator pos:start="117:45" pos:end="117:45">&amp;</operator><name pos:start="117:46" pos:end="117:78"><name pos:start="117:46" pos:end="117:67">av_pix_fmt_descriptors</name><index pos:start="117:68" pos:end="117:78">[<expr pos:start="117:69" pos:end="117:77"><name pos:start="117:69" pos:end="117:77">dstFormat</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:80"><expr pos:start="119:5" pos:end="119:79"><name pos:start="119:5" pos:end="119:19"><name pos:start="119:5" pos:end="119:5">c</name><operator pos:start="119:6" pos:end="119:7">-&gt;</operator><name pos:start="119:8" pos:end="119:19">srcFormatBpp</name></name> <operator pos:start="119:21" pos:end="119:21">=</operator> <call pos:start="119:23" pos:end="119:79"><name pos:start="119:23" pos:end="119:43">av_get_bits_per_pixel</name><argument_list pos:start="119:44" pos:end="119:79">(<argument pos:start="119:45" pos:end="119:78"><expr pos:start="119:45" pos:end="119:78"><operator pos:start="119:45" pos:end="119:45">&amp;</operator><name pos:start="119:46" pos:end="119:78"><name pos:start="119:46" pos:end="119:67">av_pix_fmt_descriptors</name><index pos:start="119:68" pos:end="119:78">[<expr pos:start="119:69" pos:end="119:77"><name pos:start="119:69" pos:end="119:77">srcFormat</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:42"><expr pos:start="121:5" pos:end="121:41"><name pos:start="121:5" pos:end="121:15"><name pos:start="121:5" pos:end="121:5">c</name><operator pos:start="121:6" pos:end="121:7">-&gt;</operator><name pos:start="121:8" pos:end="121:15">vRounder</name></name><operator pos:start="121:16" pos:end="121:16">=</operator> <literal type="number" pos:start="121:18" pos:end="121:18">4</literal><operator pos:start="121:19" pos:end="121:19">*</operator> <literal type="number" pos:start="121:21" pos:end="121:41">0x0001000100010001ULL</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="125:5" pos:end="131:65"><expr pos:start="125:5" pos:end="131:64"><name pos:start="125:5" pos:end="125:15">usesVFilter</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <operator pos:start="125:19" pos:end="125:19">(</operator><name pos:start="125:20" pos:end="125:34"><name pos:start="125:20" pos:end="125:28">srcFilter</name><operator pos:start="125:29" pos:end="125:30">-&gt;</operator><name pos:start="125:31" pos:end="125:34">lumV</name></name> <operator pos:start="125:36" pos:end="125:37">&amp;&amp;</operator> <name pos:start="125:39" pos:end="125:61"><name pos:start="125:39" pos:end="125:47">srcFilter</name><operator pos:start="125:48" pos:end="125:49">-&gt;</operator><name pos:start="125:50" pos:end="125:53">lumV</name><operator pos:start="125:54" pos:end="125:55">-&gt;</operator><name pos:start="125:56" pos:end="125:61">length</name></name><operator pos:start="125:62" pos:end="125:62">&gt;</operator><literal type="number" pos:start="125:63" pos:end="125:63">1</literal><operator pos:start="125:64" pos:end="125:64">)</operator> <operator pos:start="125:66" pos:end="125:67">||</operator>

                  <operator pos:start="127:19" pos:end="127:19">(</operator><name pos:start="127:20" pos:end="127:34"><name pos:start="127:20" pos:end="127:28">srcFilter</name><operator pos:start="127:29" pos:end="127:30">-&gt;</operator><name pos:start="127:31" pos:end="127:34">chrV</name></name> <operator pos:start="127:36" pos:end="127:37">&amp;&amp;</operator> <name pos:start="127:39" pos:end="127:61"><name pos:start="127:39" pos:end="127:47">srcFilter</name><operator pos:start="127:48" pos:end="127:49">-&gt;</operator><name pos:start="127:50" pos:end="127:53">chrV</name><operator pos:start="127:54" pos:end="127:55">-&gt;</operator><name pos:start="127:56" pos:end="127:61">length</name></name><operator pos:start="127:62" pos:end="127:62">&gt;</operator><literal type="number" pos:start="127:63" pos:end="127:63">1</literal><operator pos:start="127:64" pos:end="127:64">)</operator> <operator pos:start="127:66" pos:end="127:67">||</operator>

                  <operator pos:start="129:19" pos:end="129:19">(</operator><name pos:start="129:20" pos:end="129:34"><name pos:start="129:20" pos:end="129:28">dstFilter</name><operator pos:start="129:29" pos:end="129:30">-&gt;</operator><name pos:start="129:31" pos:end="129:34">lumV</name></name> <operator pos:start="129:36" pos:end="129:37">&amp;&amp;</operator> <name pos:start="129:39" pos:end="129:61"><name pos:start="129:39" pos:end="129:47">dstFilter</name><operator pos:start="129:48" pos:end="129:49">-&gt;</operator><name pos:start="129:50" pos:end="129:53">lumV</name><operator pos:start="129:54" pos:end="129:55">-&gt;</operator><name pos:start="129:56" pos:end="129:61">length</name></name><operator pos:start="129:62" pos:end="129:62">&gt;</operator><literal type="number" pos:start="129:63" pos:end="129:63">1</literal><operator pos:start="129:64" pos:end="129:64">)</operator> <operator pos:start="129:66" pos:end="129:67">||</operator>

                  <operator pos:start="131:19" pos:end="131:19">(</operator><name pos:start="131:20" pos:end="131:34"><name pos:start="131:20" pos:end="131:28">dstFilter</name><operator pos:start="131:29" pos:end="131:30">-&gt;</operator><name pos:start="131:31" pos:end="131:34">chrV</name></name> <operator pos:start="131:36" pos:end="131:37">&amp;&amp;</operator> <name pos:start="131:39" pos:end="131:61"><name pos:start="131:39" pos:end="131:47">dstFilter</name><operator pos:start="131:48" pos:end="131:49">-&gt;</operator><name pos:start="131:50" pos:end="131:53">chrV</name><operator pos:start="131:54" pos:end="131:55">-&gt;</operator><name pos:start="131:56" pos:end="131:61">length</name></name><operator pos:start="131:62" pos:end="131:62">&gt;</operator><literal type="number" pos:start="131:63" pos:end="131:63">1</literal><operator pos:start="131:64" pos:end="131:64">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="139:65"><expr pos:start="133:5" pos:end="139:64"><name pos:start="133:5" pos:end="133:15">usesHFilter</name> <operator pos:start="133:17" pos:end="133:17">=</operator> <operator pos:start="133:19" pos:end="133:19">(</operator><name pos:start="133:20" pos:end="133:34"><name pos:start="133:20" pos:end="133:28">srcFilter</name><operator pos:start="133:29" pos:end="133:30">-&gt;</operator><name pos:start="133:31" pos:end="133:34">lumH</name></name> <operator pos:start="133:36" pos:end="133:37">&amp;&amp;</operator> <name pos:start="133:39" pos:end="133:61"><name pos:start="133:39" pos:end="133:47">srcFilter</name><operator pos:start="133:48" pos:end="133:49">-&gt;</operator><name pos:start="133:50" pos:end="133:53">lumH</name><operator pos:start="133:54" pos:end="133:55">-&gt;</operator><name pos:start="133:56" pos:end="133:61">length</name></name><operator pos:start="133:62" pos:end="133:62">&gt;</operator><literal type="number" pos:start="133:63" pos:end="133:63">1</literal><operator pos:start="133:64" pos:end="133:64">)</operator> <operator pos:start="133:66" pos:end="133:67">||</operator>

                  <operator pos:start="135:19" pos:end="135:19">(</operator><name pos:start="135:20" pos:end="135:34"><name pos:start="135:20" pos:end="135:28">srcFilter</name><operator pos:start="135:29" pos:end="135:30">-&gt;</operator><name pos:start="135:31" pos:end="135:34">chrH</name></name> <operator pos:start="135:36" pos:end="135:37">&amp;&amp;</operator> <name pos:start="135:39" pos:end="135:61"><name pos:start="135:39" pos:end="135:47">srcFilter</name><operator pos:start="135:48" pos:end="135:49">-&gt;</operator><name pos:start="135:50" pos:end="135:53">chrH</name><operator pos:start="135:54" pos:end="135:55">-&gt;</operator><name pos:start="135:56" pos:end="135:61">length</name></name><operator pos:start="135:62" pos:end="135:62">&gt;</operator><literal type="number" pos:start="135:63" pos:end="135:63">1</literal><operator pos:start="135:64" pos:end="135:64">)</operator> <operator pos:start="135:66" pos:end="135:67">||</operator>

                  <operator pos:start="137:19" pos:end="137:19">(</operator><name pos:start="137:20" pos:end="137:34"><name pos:start="137:20" pos:end="137:28">dstFilter</name><operator pos:start="137:29" pos:end="137:30">-&gt;</operator><name pos:start="137:31" pos:end="137:34">lumH</name></name> <operator pos:start="137:36" pos:end="137:37">&amp;&amp;</operator> <name pos:start="137:39" pos:end="137:61"><name pos:start="137:39" pos:end="137:47">dstFilter</name><operator pos:start="137:48" pos:end="137:49">-&gt;</operator><name pos:start="137:50" pos:end="137:53">lumH</name><operator pos:start="137:54" pos:end="137:55">-&gt;</operator><name pos:start="137:56" pos:end="137:61">length</name></name><operator pos:start="137:62" pos:end="137:62">&gt;</operator><literal type="number" pos:start="137:63" pos:end="137:63">1</literal><operator pos:start="137:64" pos:end="137:64">)</operator> <operator pos:start="137:66" pos:end="137:67">||</operator>

                  <operator pos:start="139:19" pos:end="139:19">(</operator><name pos:start="139:20" pos:end="139:34"><name pos:start="139:20" pos:end="139:28">dstFilter</name><operator pos:start="139:29" pos:end="139:30">-&gt;</operator><name pos:start="139:31" pos:end="139:34">chrH</name></name> <operator pos:start="139:36" pos:end="139:37">&amp;&amp;</operator> <name pos:start="139:39" pos:end="139:61"><name pos:start="139:39" pos:end="139:47">dstFilter</name><operator pos:start="139:48" pos:end="139:49">-&gt;</operator><name pos:start="139:50" pos:end="139:53">chrH</name><operator pos:start="139:54" pos:end="139:55">-&gt;</operator><name pos:start="139:56" pos:end="139:61">length</name></name><operator pos:start="139:62" pos:end="139:62">&gt;</operator><literal type="number" pos:start="139:63" pos:end="139:63">1</literal><operator pos:start="139:64" pos:end="139:64">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:79"><expr pos:start="143:5" pos:end="143:78"><call pos:start="143:5" pos:end="143:78"><name pos:start="143:5" pos:end="143:23">getSubSampleFactors</name><argument_list pos:start="143:24" pos:end="143:78">(<argument pos:start="143:25" pos:end="143:44"><expr pos:start="143:25" pos:end="143:44"><operator pos:start="143:25" pos:end="143:25">&amp;</operator><name pos:start="143:26" pos:end="143:44"><name pos:start="143:26" pos:end="143:26">c</name><operator pos:start="143:27" pos:end="143:28">-&gt;</operator><name pos:start="143:29" pos:end="143:44">chrSrcHSubSample</name></name></expr></argument>, <argument pos:start="143:47" pos:end="143:66"><expr pos:start="143:47" pos:end="143:66"><operator pos:start="143:47" pos:end="143:47">&amp;</operator><name pos:start="143:48" pos:end="143:66"><name pos:start="143:48" pos:end="143:48">c</name><operator pos:start="143:49" pos:end="143:50">-&gt;</operator><name pos:start="143:51" pos:end="143:66">chrSrcVSubSample</name></name></expr></argument>, <argument pos:start="143:69" pos:end="143:77"><expr pos:start="143:69" pos:end="143:77"><name pos:start="143:69" pos:end="143:77">srcFormat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:79"><expr pos:start="145:5" pos:end="145:78"><call pos:start="145:5" pos:end="145:78"><name pos:start="145:5" pos:end="145:23">getSubSampleFactors</name><argument_list pos:start="145:24" pos:end="145:78">(<argument pos:start="145:25" pos:end="145:44"><expr pos:start="145:25" pos:end="145:44"><operator pos:start="145:25" pos:end="145:25">&amp;</operator><name pos:start="145:26" pos:end="145:44"><name pos:start="145:26" pos:end="145:26">c</name><operator pos:start="145:27" pos:end="145:28">-&gt;</operator><name pos:start="145:29" pos:end="145:44">chrDstHSubSample</name></name></expr></argument>, <argument pos:start="145:47" pos:end="145:66"><expr pos:start="145:47" pos:end="145:66"><operator pos:start="145:47" pos:end="145:47">&amp;</operator><name pos:start="145:48" pos:end="145:66"><name pos:start="145:48" pos:end="145:48">c</name><operator pos:start="145:49" pos:end="145:50">-&gt;</operator><name pos:start="145:51" pos:end="145:66">chrDstVSubSample</name></name></expr></argument>, <argument pos:start="145:69" pos:end="145:77"><expr pos:start="145:69" pos:end="145:77"><name pos:start="145:69" pos:end="145:77">dstFormat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="149:5" pos:end="149:84">// reuse chroma for 2 pixels RGB/BGR unless user wants full chroma interpolation</comment>

    <if_stmt pos:start="151:5" pos:end="175:5"><if pos:start="151:5" pos:end="175:5">if <condition pos:start="151:8" pos:end="163:35">(<expr pos:start="151:9" pos:end="163:34"><name pos:start="151:9" pos:end="151:13">flags</name> <operator pos:start="151:15" pos:end="151:15">&amp;</operator> <name pos:start="151:17" pos:end="151:34">SWS_FULL_CHR_H_INT</name> <operator pos:start="151:36" pos:end="151:37">&amp;&amp;</operator>

        <name pos:start="153:9" pos:end="153:17">dstFormat</name> <operator pos:start="153:19" pos:end="153:20">!=</operator> <name pos:start="153:22" pos:end="153:33">PIX_FMT_RGBA</name> <operator pos:start="153:35" pos:end="153:36">&amp;&amp;</operator>

        <name pos:start="155:9" pos:end="155:17">dstFormat</name> <operator pos:start="155:19" pos:end="155:20">!=</operator> <name pos:start="155:22" pos:end="155:33">PIX_FMT_ARGB</name> <operator pos:start="155:35" pos:end="155:36">&amp;&amp;</operator>

        <name pos:start="157:9" pos:end="157:17">dstFormat</name> <operator pos:start="157:19" pos:end="157:20">!=</operator> <name pos:start="157:22" pos:end="157:33">PIX_FMT_BGRA</name> <operator pos:start="157:35" pos:end="157:36">&amp;&amp;</operator>

        <name pos:start="159:9" pos:end="159:17">dstFormat</name> <operator pos:start="159:19" pos:end="159:20">!=</operator> <name pos:start="159:22" pos:end="159:33">PIX_FMT_ABGR</name> <operator pos:start="159:35" pos:end="159:36">&amp;&amp;</operator>

        <name pos:start="161:9" pos:end="161:17">dstFormat</name> <operator pos:start="161:19" pos:end="161:20">!=</operator> <name pos:start="161:22" pos:end="161:34">PIX_FMT_RGB24</name> <operator pos:start="161:36" pos:end="161:37">&amp;&amp;</operator>

        <name pos:start="163:9" pos:end="163:17">dstFormat</name> <operator pos:start="163:19" pos:end="163:20">!=</operator> <name pos:start="163:22" pos:end="163:34">PIX_FMT_BGR24</name></expr>)</condition> <block pos:start="163:37" pos:end="175:5">{<block_content pos:start="165:9" pos:end="173:25">

        <expr_stmt pos:start="165:9" pos:end="169:43"><expr pos:start="165:9" pos:end="169:42"><call pos:start="165:9" pos:end="169:42"><name pos:start="165:9" pos:end="165:14">av_log</name><argument_list pos:start="165:15" pos:end="169:42">(<argument pos:start="165:16" pos:end="165:16"><expr pos:start="165:16" pos:end="165:16"><name pos:start="165:16" pos:end="165:16">c</name></expr></argument>, <argument pos:start="165:19" pos:end="165:30"><expr pos:start="165:19" pos:end="165:30"><name pos:start="165:19" pos:end="165:30">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="167:16" pos:end="167:92"><expr pos:start="167:16" pos:end="167:92"><literal type="string" pos:start="167:16" pos:end="167:92">"full chroma interpolation for destination format '%s' not yet implemented\n"</literal></expr></argument>,

               <argument pos:start="169:16" pos:end="169:41"><expr pos:start="169:16" pos:end="169:41"><call pos:start="169:16" pos:end="169:41"><name pos:start="169:16" pos:end="169:30">sws_format_name</name><argument_list pos:start="169:31" pos:end="169:41">(<argument pos:start="169:32" pos:end="169:40"><expr pos:start="169:32" pos:end="169:40"><name pos:start="169:32" pos:end="169:40">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:37"><expr pos:start="171:9" pos:end="171:36"><name pos:start="171:9" pos:end="171:13">flags</name> <operator pos:start="171:15" pos:end="171:16">&amp;=</operator> <operator pos:start="171:18" pos:end="171:18">~</operator><name pos:start="171:19" pos:end="171:36">SWS_FULL_CHR_H_INT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:25"><expr pos:start="173:9" pos:end="173:24"><name pos:start="173:9" pos:end="173:16"><name pos:start="173:9" pos:end="173:9">c</name><operator pos:start="173:10" pos:end="173:11">-&gt;</operator><name pos:start="173:12" pos:end="173:16">flags</name></name> <operator pos:start="173:18" pos:end="173:18">=</operator> <name pos:start="173:20" pos:end="173:24">flags</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="177:5" pos:end="177:82"><if pos:start="177:5" pos:end="177:82">if <condition pos:start="177:8" pos:end="177:59">(<expr pos:start="177:9" pos:end="177:58"><call pos:start="177:9" pos:end="177:27"><name pos:start="177:9" pos:end="177:16">isAnyRGB</name><argument_list pos:start="177:17" pos:end="177:27">(<argument pos:start="177:18" pos:end="177:26"><expr pos:start="177:18" pos:end="177:26"><name pos:start="177:18" pos:end="177:26">dstFormat</name></expr></argument>)</argument_list></call> <operator pos:start="177:29" pos:end="177:30">&amp;&amp;</operator> <operator pos:start="177:32" pos:end="177:32">!</operator><operator pos:start="177:33" pos:end="177:33">(</operator><name pos:start="177:34" pos:end="177:38">flags</name><operator pos:start="177:39" pos:end="177:39">&amp;</operator><name pos:start="177:40" pos:end="177:57">SWS_FULL_CHR_H_INT</name><operator pos:start="177:58" pos:end="177:58">)</operator></expr>)</condition><block type="pseudo" pos:start="177:61" pos:end="177:82"><block_content pos:start="177:61" pos:end="177:82"> <expr_stmt pos:start="177:61" pos:end="177:82"><expr pos:start="177:61" pos:end="177:81"><name pos:start="177:61" pos:end="177:79"><name pos:start="177:61" pos:end="177:61">c</name><operator pos:start="177:62" pos:end="177:63">-&gt;</operator><name pos:start="177:64" pos:end="177:79">chrDstHSubSample</name></name><operator pos:start="177:80" pos:end="177:80">=</operator><literal type="number" pos:start="177:81" pos:end="177:81">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="181:5" pos:end="181:50">// drop some chroma lines if the user wants it</comment>

    <expr_stmt pos:start="183:5" pos:end="183:75"><expr pos:start="183:5" pos:end="183:74"><name pos:start="183:5" pos:end="183:15"><name pos:start="183:5" pos:end="183:5">c</name><operator pos:start="183:6" pos:end="183:7">-&gt;</operator><name pos:start="183:8" pos:end="183:15">vChrDrop</name></name><operator pos:start="183:16" pos:end="183:16">=</operator> <operator pos:start="183:18" pos:end="183:18">(</operator><name pos:start="183:19" pos:end="183:23">flags</name><operator pos:start="183:24" pos:end="183:24">&amp;</operator><name pos:start="183:25" pos:end="183:47">SWS_SRC_V_CHR_DROP_MASK</name><operator pos:start="183:48" pos:end="183:48">)</operator><operator pos:start="183:49" pos:end="183:50">&gt;&gt;</operator><name pos:start="183:51" pos:end="183:74">SWS_SRC_V_CHR_DROP_SHIFT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="185:5" pos:end="185:38"><expr pos:start="185:5" pos:end="185:37"><name pos:start="185:5" pos:end="185:23"><name pos:start="185:5" pos:end="185:5">c</name><operator pos:start="185:6" pos:end="185:7">-&gt;</operator><name pos:start="185:8" pos:end="185:23">chrSrcVSubSample</name></name><operator pos:start="185:24" pos:end="185:25">+=</operator> <name pos:start="185:27" pos:end="185:37"><name pos:start="185:27" pos:end="185:27">c</name><operator pos:start="185:28" pos:end="185:29">-&gt;</operator><name pos:start="185:30" pos:end="185:37">vChrDrop</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="189:5" pos:end="189:82">// drop every other pixel for chroma calculation unless user wants full chroma</comment>

    <if_stmt pos:start="191:5" pos:end="201:30"><if pos:start="191:5" pos:end="201:30">if <condition pos:start="191:8" pos:end="199:81">(<expr pos:start="191:9" pos:end="199:80"><call pos:start="191:9" pos:end="191:27"><name pos:start="191:9" pos:end="191:16">isAnyRGB</name><argument_list pos:start="191:17" pos:end="191:27">(<argument pos:start="191:18" pos:end="191:26"><expr pos:start="191:18" pos:end="191:26"><name pos:start="191:18" pos:end="191:26">srcFormat</name></expr></argument>)</argument_list></call> <operator pos:start="191:29" pos:end="191:30">&amp;&amp;</operator> <operator pos:start="191:32" pos:end="191:32">!</operator><operator pos:start="191:33" pos:end="191:33">(</operator><name pos:start="191:34" pos:end="191:38">flags</name><operator pos:start="191:39" pos:end="191:39">&amp;</operator><name pos:start="191:40" pos:end="191:57">SWS_FULL_CHR_H_INP</name><operator pos:start="191:58" pos:end="191:58">)</operator>

      <operator pos:start="193:7" pos:end="193:8">&amp;&amp;</operator> <name pos:start="193:10" pos:end="193:18">srcFormat</name><operator pos:start="193:19" pos:end="193:20">!=</operator><name pos:start="193:21" pos:end="193:32">PIX_FMT_RGB8</name>      <operator pos:start="193:39" pos:end="193:40">&amp;&amp;</operator> <name pos:start="193:42" pos:end="193:50">srcFormat</name><operator pos:start="193:51" pos:end="193:52">!=</operator><name pos:start="193:53" pos:end="193:64">PIX_FMT_BGR8</name>

      <operator pos:start="195:7" pos:end="195:8">&amp;&amp;</operator> <name pos:start="195:10" pos:end="195:18">srcFormat</name><operator pos:start="195:19" pos:end="195:20">!=</operator><name pos:start="195:21" pos:end="195:32">PIX_FMT_RGB4</name>      <operator pos:start="195:39" pos:end="195:40">&amp;&amp;</operator> <name pos:start="195:42" pos:end="195:50">srcFormat</name><operator pos:start="195:51" pos:end="195:52">!=</operator><name pos:start="195:53" pos:end="195:64">PIX_FMT_BGR4</name>

      <operator pos:start="197:7" pos:end="197:8">&amp;&amp;</operator> <name pos:start="197:10" pos:end="197:18">srcFormat</name><operator pos:start="197:19" pos:end="197:20">!=</operator><name pos:start="197:21" pos:end="197:37">PIX_FMT_RGB4_BYTE</name> <operator pos:start="197:39" pos:end="197:40">&amp;&amp;</operator> <name pos:start="197:42" pos:end="197:50">srcFormat</name><operator pos:start="197:51" pos:end="197:52">!=</operator><name pos:start="197:53" pos:end="197:69">PIX_FMT_BGR4_BYTE</name>

      <operator pos:start="199:7" pos:end="199:8">&amp;&amp;</operator> <operator pos:start="199:10" pos:end="199:10">(</operator><operator pos:start="199:11" pos:end="199:11">(</operator><name pos:start="199:12" pos:end="199:15">dstW</name><operator pos:start="199:16" pos:end="199:17">&gt;&gt;</operator><name pos:start="199:18" pos:end="199:36"><name pos:start="199:18" pos:end="199:18">c</name><operator pos:start="199:19" pos:end="199:20">-&gt;</operator><name pos:start="199:21" pos:end="199:36">chrDstHSubSample</name></name><operator pos:start="199:37" pos:end="199:37">)</operator> <operator pos:start="199:39" pos:end="199:40">&lt;=</operator> <operator pos:start="199:42" pos:end="199:42">(</operator><name pos:start="199:43" pos:end="199:46">srcW</name><operator pos:start="199:47" pos:end="199:48">&gt;&gt;</operator><literal type="number" pos:start="199:49" pos:end="199:49">1</literal><operator pos:start="199:50" pos:end="199:50">)</operator> <operator pos:start="199:52" pos:end="199:53">||</operator> <operator pos:start="199:55" pos:end="199:55">(</operator><name pos:start="199:56" pos:end="199:60">flags</name><operator pos:start="199:61" pos:end="199:61">&amp;</operator><name pos:start="199:62" pos:end="199:78">SWS_FAST_BILINEAR</name><operator pos:start="199:79" pos:end="199:79">)</operator><operator pos:start="199:80" pos:end="199:80">)</operator></expr>)</condition><block type="pseudo" pos:start="201:9" pos:end="201:30"><block_content pos:start="201:9" pos:end="201:30">

        <expr_stmt pos:start="201:9" pos:end="201:30"><expr pos:start="201:9" pos:end="201:29"><name pos:start="201:9" pos:end="201:27"><name pos:start="201:9" pos:end="201:9">c</name><operator pos:start="201:10" pos:end="201:11">-&gt;</operator><name pos:start="201:12" pos:end="201:27">chrSrcHSubSample</name></name><operator pos:start="201:28" pos:end="201:28">=</operator><literal type="number" pos:start="201:29" pos:end="201:29">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="205:5" pos:end="205:66">// Note the -((-x)&gt;&gt;y) is so that we always round toward +inf.</comment>

    <expr_stmt pos:start="207:5" pos:end="207:50"><expr pos:start="207:5" pos:end="207:49"><name pos:start="207:5" pos:end="207:14"><name pos:start="207:5" pos:end="207:5">c</name><operator pos:start="207:6" pos:end="207:7">-&gt;</operator><name pos:start="207:8" pos:end="207:14">chrSrcW</name></name><operator pos:start="207:15" pos:end="207:15">=</operator> <operator pos:start="207:17" pos:end="207:17">-</operator><operator pos:start="207:18" pos:end="207:18">(</operator><operator pos:start="207:19" pos:end="207:19">(</operator><operator pos:start="207:20" pos:end="207:20">-</operator><name pos:start="207:21" pos:end="207:24">srcW</name><operator pos:start="207:25" pos:end="207:25">)</operator> <operator pos:start="207:27" pos:end="207:28">&gt;&gt;</operator> <name pos:start="207:30" pos:end="207:48"><name pos:start="207:30" pos:end="207:30">c</name><operator pos:start="207:31" pos:end="207:32">-&gt;</operator><name pos:start="207:33" pos:end="207:48">chrSrcHSubSample</name></name><operator pos:start="207:49" pos:end="207:49">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:50"><expr pos:start="209:5" pos:end="209:49"><name pos:start="209:5" pos:end="209:14"><name pos:start="209:5" pos:end="209:5">c</name><operator pos:start="209:6" pos:end="209:7">-&gt;</operator><name pos:start="209:8" pos:end="209:14">chrSrcH</name></name><operator pos:start="209:15" pos:end="209:15">=</operator> <operator pos:start="209:17" pos:end="209:17">-</operator><operator pos:start="209:18" pos:end="209:18">(</operator><operator pos:start="209:19" pos:end="209:19">(</operator><operator pos:start="209:20" pos:end="209:20">-</operator><name pos:start="209:21" pos:end="209:24">srcH</name><operator pos:start="209:25" pos:end="209:25">)</operator> <operator pos:start="209:27" pos:end="209:28">&gt;&gt;</operator> <name pos:start="209:30" pos:end="209:48"><name pos:start="209:30" pos:end="209:30">c</name><operator pos:start="209:31" pos:end="209:32">-&gt;</operator><name pos:start="209:33" pos:end="209:48">chrSrcVSubSample</name></name><operator pos:start="209:49" pos:end="209:49">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:50"><expr pos:start="211:5" pos:end="211:49"><name pos:start="211:5" pos:end="211:14"><name pos:start="211:5" pos:end="211:5">c</name><operator pos:start="211:6" pos:end="211:7">-&gt;</operator><name pos:start="211:8" pos:end="211:14">chrDstW</name></name><operator pos:start="211:15" pos:end="211:15">=</operator> <operator pos:start="211:17" pos:end="211:17">-</operator><operator pos:start="211:18" pos:end="211:18">(</operator><operator pos:start="211:19" pos:end="211:19">(</operator><operator pos:start="211:20" pos:end="211:20">-</operator><name pos:start="211:21" pos:end="211:24">dstW</name><operator pos:start="211:25" pos:end="211:25">)</operator> <operator pos:start="211:27" pos:end="211:28">&gt;&gt;</operator> <name pos:start="211:30" pos:end="211:48"><name pos:start="211:30" pos:end="211:30">c</name><operator pos:start="211:31" pos:end="211:32">-&gt;</operator><name pos:start="211:33" pos:end="211:48">chrDstHSubSample</name></name><operator pos:start="211:49" pos:end="211:49">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:50"><expr pos:start="213:5" pos:end="213:49"><name pos:start="213:5" pos:end="213:14"><name pos:start="213:5" pos:end="213:5">c</name><operator pos:start="213:6" pos:end="213:7">-&gt;</operator><name pos:start="213:8" pos:end="213:14">chrDstH</name></name><operator pos:start="213:15" pos:end="213:15">=</operator> <operator pos:start="213:17" pos:end="213:17">-</operator><operator pos:start="213:18" pos:end="213:18">(</operator><operator pos:start="213:19" pos:end="213:19">(</operator><operator pos:start="213:20" pos:end="213:20">-</operator><name pos:start="213:21" pos:end="213:24">dstH</name><operator pos:start="213:25" pos:end="213:25">)</operator> <operator pos:start="213:27" pos:end="213:28">&gt;&gt;</operator> <name pos:start="213:30" pos:end="213:48"><name pos:start="213:30" pos:end="213:30">c</name><operator pos:start="213:31" pos:end="213:32">-&gt;</operator><name pos:start="213:33" pos:end="213:48">chrDstVSubSample</name></name><operator pos:start="213:49" pos:end="213:49">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="217:5" pos:end="217:32">/* unscaled special cases */</comment>

    <if_stmt pos:start="219:5" pos:end="237:5"><if pos:start="219:5" pos:end="237:5">if <condition pos:start="219:8" pos:end="219:104">(<expr pos:start="219:9" pos:end="219:103"><name pos:start="219:9" pos:end="219:16">unscaled</name> <operator pos:start="219:18" pos:end="219:19">&amp;&amp;</operator> <operator pos:start="219:21" pos:end="219:21">!</operator><name pos:start="219:22" pos:end="219:32">usesHFilter</name> <operator pos:start="219:34" pos:end="219:35">&amp;&amp;</operator> <operator pos:start="219:37" pos:end="219:37">!</operator><name pos:start="219:38" pos:end="219:48">usesVFilter</name> <operator pos:start="219:50" pos:end="219:51">&amp;&amp;</operator> <operator pos:start="219:53" pos:end="219:53">(</operator><name pos:start="219:54" pos:end="219:64"><name pos:start="219:54" pos:end="219:54">c</name><operator pos:start="219:55" pos:end="219:56">-&gt;</operator><name pos:start="219:57" pos:end="219:64">srcRange</name></name> <operator pos:start="219:66" pos:end="219:67">==</operator> <name pos:start="219:69" pos:end="219:79"><name pos:start="219:69" pos:end="219:69">c</name><operator pos:start="219:70" pos:end="219:71">-&gt;</operator><name pos:start="219:72" pos:end="219:79">dstRange</name></name> <operator pos:start="219:81" pos:end="219:82">||</operator> <call pos:start="219:84" pos:end="219:102"><name pos:start="219:84" pos:end="219:91">isAnyRGB</name><argument_list pos:start="219:92" pos:end="219:102">(<argument pos:start="219:93" pos:end="219:101"><expr pos:start="219:93" pos:end="219:101"><name pos:start="219:93" pos:end="219:101">dstFormat</name></expr></argument>)</argument_list></call><operator pos:start="219:103" pos:end="219:103">)</operator></expr>)</condition> <block pos:start="219:106" pos:end="237:5">{<block_content pos:start="221:9" pos:end="235:9">

        <expr_stmt pos:start="221:9" pos:end="221:35"><expr pos:start="221:9" pos:end="221:34"><call pos:start="221:9" pos:end="221:34"><name pos:start="221:9" pos:end="221:31">ff_get_unscaled_swscale</name><argument_list pos:start="221:32" pos:end="221:34">(<argument pos:start="221:33" pos:end="221:33"><expr pos:start="221:33" pos:end="221:33"><name pos:start="221:33" pos:end="221:33">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="225:9" pos:end="235:9"><if pos:start="225:9" pos:end="235:9">if <condition pos:start="225:12" pos:end="225:23">(<expr pos:start="225:13" pos:end="225:22"><name pos:start="225:13" pos:end="225:22"><name pos:start="225:13" pos:end="225:13">c</name><operator pos:start="225:14" pos:end="225:15">-&gt;</operator><name pos:start="225:16" pos:end="225:22">swScale</name></name></expr>)</condition> <block pos:start="225:25" pos:end="235:9">{<block_content pos:start="227:13" pos:end="233:21">

            <if_stmt pos:start="227:13" pos:end="231:79"><if pos:start="227:13" pos:end="231:79">if <condition pos:start="227:16" pos:end="227:37">(<expr pos:start="227:17" pos:end="227:36"><name pos:start="227:17" pos:end="227:21">flags</name><operator pos:start="227:22" pos:end="227:22">&amp;</operator><name pos:start="227:23" pos:end="227:36">SWS_PRINT_INFO</name></expr>)</condition><block type="pseudo" pos:start="229:17" pos:end="231:79"><block_content pos:start="229:17" pos:end="231:79">

                <expr_stmt pos:start="229:17" pos:end="231:79"><expr pos:start="229:17" pos:end="231:78"><call pos:start="229:17" pos:end="231:78"><name pos:start="229:17" pos:end="229:22">av_log</name><argument_list pos:start="229:23" pos:end="231:78">(<argument pos:start="229:24" pos:end="229:24"><expr pos:start="229:24" pos:end="229:24"><name pos:start="229:24" pos:end="229:24">c</name></expr></argument>, <argument pos:start="229:27" pos:end="229:37"><expr pos:start="229:27" pos:end="229:37"><name pos:start="229:27" pos:end="229:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="229:40" pos:end="229:84"><expr pos:start="229:40" pos:end="229:84"><literal type="string" pos:start="229:40" pos:end="229:84">"using unscaled %s -&gt; %s special converter\n"</literal></expr></argument>,

                       <argument pos:start="231:24" pos:end="231:49"><expr pos:start="231:24" pos:end="231:49"><call pos:start="231:24" pos:end="231:49"><name pos:start="231:24" pos:end="231:38">sws_format_name</name><argument_list pos:start="231:39" pos:end="231:49">(<argument pos:start="231:40" pos:end="231:48"><expr pos:start="231:40" pos:end="231:48"><name pos:start="231:40" pos:end="231:48">srcFormat</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="231:52" pos:end="231:77"><expr pos:start="231:52" pos:end="231:77"><call pos:start="231:52" pos:end="231:77"><name pos:start="231:52" pos:end="231:66">sws_format_name</name><argument_list pos:start="231:67" pos:end="231:77">(<argument pos:start="231:68" pos:end="231:76"><expr pos:start="231:68" pos:end="231:76"><name pos:start="231:68" pos:end="231:76">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="233:13" pos:end="233:21">return <expr pos:start="233:20" pos:end="233:20"><literal type="number" pos:start="233:20" pos:end="233:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="241:5" pos:end="243:96"><expr pos:start="241:5" pos:end="243:95"><name pos:start="241:5" pos:end="241:17"><name pos:start="241:5" pos:end="241:5">c</name><operator pos:start="241:6" pos:end="241:7">-&gt;</operator><name pos:start="241:8" pos:end="241:17">scalingBpp</name></name> <operator pos:start="241:19" pos:end="241:19">=</operator> <ternary pos:start="241:21" pos:end="243:95"><condition pos:start="241:21" pos:end="243:88"><expr pos:start="241:21" pos:end="243:86"><call pos:start="241:21" pos:end="243:81"><name pos:start="241:21" pos:end="241:25">FFMAX</name><argument_list pos:start="241:26" pos:end="243:81">(<argument pos:start="241:27" pos:end="241:80"><expr pos:start="241:27" pos:end="241:80"><name pos:start="241:27" pos:end="241:59"><name pos:start="241:27" pos:end="241:48">av_pix_fmt_descriptors</name><index pos:start="241:49" pos:end="241:59">[<expr pos:start="241:50" pos:end="241:58"><name pos:start="241:50" pos:end="241:58">srcFormat</name></expr>]</index></name><operator pos:start="241:60" pos:end="241:60">.</operator><name pos:start="241:61" pos:end="241:67"><name pos:start="241:61" pos:end="241:64">comp</name><index pos:start="241:65" pos:end="241:67">[<expr pos:start="241:66" pos:end="241:66"><literal type="number" pos:start="241:66" pos:end="241:66">0</literal></expr>]</index></name><operator pos:start="241:68" pos:end="241:68">.</operator><name pos:start="241:69" pos:end="241:80">depth_minus1</name></expr></argument>,

                          <argument pos:start="243:27" pos:end="243:80"><expr pos:start="243:27" pos:end="243:80"><name pos:start="243:27" pos:end="243:59"><name pos:start="243:27" pos:end="243:48">av_pix_fmt_descriptors</name><index pos:start="243:49" pos:end="243:59">[<expr pos:start="243:50" pos:end="243:58"><name pos:start="243:50" pos:end="243:58">dstFormat</name></expr>]</index></name><operator pos:start="243:60" pos:end="243:60">.</operator><name pos:start="243:61" pos:end="243:67"><name pos:start="243:61" pos:end="243:64">comp</name><index pos:start="243:65" pos:end="243:67">[<expr pos:start="243:66" pos:end="243:66"><literal type="number" pos:start="243:66" pos:end="243:66">0</literal></expr>]</index></name><operator pos:start="243:68" pos:end="243:68">.</operator><name pos:start="243:69" pos:end="243:80">depth_minus1</name></expr></argument>)</argument_list></call> <operator pos:start="243:83" pos:end="243:84">&gt;=</operator> <literal type="number" pos:start="243:86" pos:end="243:86">8</literal></expr> ?</condition><then pos:start="243:90" pos:end="243:91"> <expr pos:start="243:90" pos:end="243:91"><literal type="number" pos:start="243:90" pos:end="243:91">16</literal></expr> </then><else pos:start="243:93" pos:end="243:95">: <expr pos:start="243:95" pos:end="243:95"><literal type="number" pos:start="243:95" pos:end="243:95">8</literal></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="245:5" pos:end="247:25"><if pos:start="245:5" pos:end="247:25">if <condition pos:start="245:8" pos:end="245:28">(<expr pos:start="245:9" pos:end="245:27"><name pos:start="245:9" pos:end="245:21"><name pos:start="245:9" pos:end="245:9">c</name><operator pos:start="245:10" pos:end="245:11">-&gt;</operator><name pos:start="245:12" pos:end="245:21">scalingBpp</name></name> <operator pos:start="245:23" pos:end="245:24">==</operator> <literal type="number" pos:start="245:26" pos:end="245:27">16</literal></expr>)</condition><block type="pseudo" pos:start="247:9" pos:end="247:25"><block_content pos:start="247:9" pos:end="247:25">

        <expr_stmt pos:start="247:9" pos:end="247:25"><expr pos:start="247:9" pos:end="247:24"><name pos:start="247:9" pos:end="247:18">dst_stride</name> <operator pos:start="247:20" pos:end="247:22">&lt;&lt;=</operator> <literal type="number" pos:start="247:24" pos:end="247:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:95"><expr pos:start="249:5" pos:end="249:94"><call pos:start="249:5" pos:end="249:94"><name pos:start="249:5" pos:end="249:20">FF_ALLOC_OR_GOTO</name><argument_list pos:start="249:21" pos:end="249:94">(<argument pos:start="249:22" pos:end="249:22"><expr pos:start="249:22" pos:end="249:22"><name pos:start="249:22" pos:end="249:22">c</name></expr></argument>, <argument pos:start="249:25" pos:end="249:43"><expr pos:start="249:25" pos:end="249:43"><name pos:start="249:25" pos:end="249:43"><name pos:start="249:25" pos:end="249:25">c</name><operator pos:start="249:26" pos:end="249:27">-&gt;</operator><name pos:start="249:28" pos:end="249:43">formatConvBuffer</name></name></expr></argument>, <argument pos:start="249:46" pos:end="249:87"><expr pos:start="249:46" pos:end="249:87"><call pos:start="249:46" pos:end="249:62"><name pos:start="249:46" pos:end="249:52">FFALIGN</name><argument_list pos:start="249:53" pos:end="249:62">(<argument pos:start="249:54" pos:end="249:57"><expr pos:start="249:54" pos:end="249:57"><name pos:start="249:54" pos:end="249:57">srcW</name></expr></argument>, <argument pos:start="249:60" pos:end="249:61"><expr pos:start="249:60" pos:end="249:61"><literal type="number" pos:start="249:60" pos:end="249:61">16</literal></expr></argument>)</argument_list></call> <operator pos:start="249:64" pos:end="249:64">*</operator> <literal type="number" pos:start="249:66" pos:end="249:66">2</literal> <operator pos:start="249:68" pos:end="249:68">*</operator> <name pos:start="249:70" pos:end="249:82"><name pos:start="249:70" pos:end="249:70">c</name><operator pos:start="249:71" pos:end="249:72">-&gt;</operator><name pos:start="249:73" pos:end="249:82">scalingBpp</name></name> <operator pos:start="249:84" pos:end="249:85">&gt;&gt;</operator> <literal type="number" pos:start="249:87" pos:end="249:87">3</literal></expr></argument>, <argument pos:start="249:90" pos:end="249:93"><expr pos:start="249:90" pos:end="249:93"><name pos:start="249:90" pos:end="249:93">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="251:5" pos:end="269:27"><if pos:start="251:5" pos:end="265:5">if <condition pos:start="251:8" pos:end="251:72">(<expr pos:start="251:9" pos:end="251:71"><name pos:start="251:9" pos:end="251:17">HAVE_MMX2</name> <operator pos:start="251:19" pos:end="251:20">&amp;&amp;</operator> <name pos:start="251:22" pos:end="251:30">cpu_flags</name> <operator pos:start="251:32" pos:end="251:32">&amp;</operator> <name pos:start="251:34" pos:end="251:49">AV_CPU_FLAG_MMX2</name> <operator pos:start="251:51" pos:end="251:52">&amp;&amp;</operator> <name pos:start="251:54" pos:end="251:66"><name pos:start="251:54" pos:end="251:54">c</name><operator pos:start="251:55" pos:end="251:56">-&gt;</operator><name pos:start="251:57" pos:end="251:66">scalingBpp</name></name> <operator pos:start="251:68" pos:end="251:69">==</operator> <literal type="number" pos:start="251:71" pos:end="251:71">8</literal></expr>)</condition> <block pos:start="251:74" pos:end="265:5">{<block_content pos:start="253:9" pos:end="263:44">

        <expr_stmt pos:start="253:9" pos:end="253:80"><expr pos:start="253:9" pos:end="253:79"><name pos:start="253:9" pos:end="253:24"><name pos:start="253:9" pos:end="253:9">c</name><operator pos:start="253:10" pos:end="253:11">-&gt;</operator><name pos:start="253:12" pos:end="253:24">canMMX2BeUsed</name></name><operator pos:start="253:25" pos:end="253:25">=</operator> <ternary pos:start="253:27" pos:end="253:79"><condition pos:start="253:27" pos:end="253:73"><expr pos:start="253:27" pos:end="253:71"><operator pos:start="253:27" pos:end="253:27">(</operator><name pos:start="253:28" pos:end="253:31">dstW</name> <operator pos:start="253:33" pos:end="253:34">&gt;=</operator><name pos:start="253:35" pos:end="253:38">srcW</name> <operator pos:start="253:40" pos:end="253:41">&amp;&amp;</operator> <operator pos:start="253:43" pos:end="253:43">(</operator><name pos:start="253:44" pos:end="253:47">dstW</name><operator pos:start="253:48" pos:end="253:48">&amp;</operator><literal type="number" pos:start="253:49" pos:end="253:50">31</literal><operator pos:start="253:51" pos:end="253:51">)</operator><operator pos:start="253:52" pos:end="253:53">==</operator><literal type="number" pos:start="253:54" pos:end="253:54">0</literal> <operator pos:start="253:56" pos:end="253:57">&amp;&amp;</operator> <operator pos:start="253:59" pos:end="253:59">(</operator><name pos:start="253:60" pos:end="253:63">srcW</name><operator pos:start="253:64" pos:end="253:64">&amp;</operator><literal type="number" pos:start="253:65" pos:end="253:66">15</literal><operator pos:start="253:67" pos:end="253:67">)</operator><operator pos:start="253:68" pos:end="253:69">==</operator><literal type="number" pos:start="253:70" pos:end="253:70">0</literal><operator pos:start="253:71" pos:end="253:71">)</operator></expr> ?</condition><then pos:start="253:75" pos:end="253:75"> <expr pos:start="253:75" pos:end="253:75"><literal type="number" pos:start="253:75" pos:end="253:75">1</literal></expr> </then><else pos:start="253:77" pos:end="253:79">: <expr pos:start="253:79" pos:end="253:79"><literal type="number" pos:start="253:79" pos:end="253:79">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="255:9" pos:end="261:9"><if pos:start="255:9" pos:end="261:9">if <condition pos:start="255:12" pos:end="255:90">(<expr pos:start="255:13" pos:end="255:89"><operator pos:start="255:13" pos:end="255:13">!</operator><name pos:start="255:14" pos:end="255:29"><name pos:start="255:14" pos:end="255:14">c</name><operator pos:start="255:15" pos:end="255:16">-&gt;</operator><name pos:start="255:17" pos:end="255:29">canMMX2BeUsed</name></name> <operator pos:start="255:31" pos:end="255:32">&amp;&amp;</operator> <name pos:start="255:34" pos:end="255:37">dstW</name> <operator pos:start="255:39" pos:end="255:40">&gt;=</operator><name pos:start="255:41" pos:end="255:44">srcW</name> <operator pos:start="255:46" pos:end="255:47">&amp;&amp;</operator> <operator pos:start="255:49" pos:end="255:49">(</operator><name pos:start="255:50" pos:end="255:53">srcW</name><operator pos:start="255:54" pos:end="255:54">&amp;</operator><literal type="number" pos:start="255:55" pos:end="255:56">15</literal><operator pos:start="255:57" pos:end="255:57">)</operator><operator pos:start="255:58" pos:end="255:59">==</operator><literal type="number" pos:start="255:60" pos:end="255:60">0</literal> <operator pos:start="255:62" pos:end="255:63">&amp;&amp;</operator> <operator pos:start="255:65" pos:end="255:65">(</operator><name pos:start="255:66" pos:end="255:70">flags</name><operator pos:start="255:71" pos:end="255:71">&amp;</operator><name pos:start="255:72" pos:end="255:88">SWS_FAST_BILINEAR</name><operator pos:start="255:89" pos:end="255:89">)</operator></expr>)</condition> <block pos:start="255:92" pos:end="261:9">{<block_content pos:start="257:13" pos:end="259:99">

            <if_stmt pos:start="257:13" pos:end="259:99"><if pos:start="257:13" pos:end="259:99">if <condition pos:start="257:16" pos:end="257:37">(<expr pos:start="257:17" pos:end="257:36"><name pos:start="257:17" pos:end="257:21">flags</name><operator pos:start="257:22" pos:end="257:22">&amp;</operator><name pos:start="257:23" pos:end="257:36">SWS_PRINT_INFO</name></expr>)</condition><block type="pseudo" pos:start="259:17" pos:end="259:99"><block_content pos:start="259:17" pos:end="259:99">

                <expr_stmt pos:start="259:17" pos:end="259:99"><expr pos:start="259:17" pos:end="259:98"><call pos:start="259:17" pos:end="259:98"><name pos:start="259:17" pos:end="259:22">av_log</name><argument_list pos:start="259:23" pos:end="259:98">(<argument pos:start="259:24" pos:end="259:24"><expr pos:start="259:24" pos:end="259:24"><name pos:start="259:24" pos:end="259:24">c</name></expr></argument>, <argument pos:start="259:27" pos:end="259:37"><expr pos:start="259:27" pos:end="259:37"><name pos:start="259:27" pos:end="259:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="259:40" pos:end="259:97"><expr pos:start="259:40" pos:end="259:97"><literal type="string" pos:start="259:40" pos:end="259:97">"output width is not a multiple of 32 -&gt; no MMX2 scaler\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="263:9" pos:end="263:44"><if pos:start="263:9" pos:end="263:44">if <condition pos:start="263:12" pos:end="263:24">(<expr pos:start="263:13" pos:end="263:23"><name pos:start="263:13" pos:end="263:23">usesHFilter</name></expr>)</condition><block type="pseudo" pos:start="263:26" pos:end="263:44"><block_content pos:start="263:26" pos:end="263:44"> <expr_stmt pos:start="263:26" pos:end="263:44"><expr pos:start="263:26" pos:end="263:43"><name pos:start="263:26" pos:end="263:41"><name pos:start="263:26" pos:end="263:26">c</name><operator pos:start="263:27" pos:end="263:28">-&gt;</operator><name pos:start="263:29" pos:end="263:41">canMMX2BeUsed</name></name><operator pos:start="263:42" pos:end="263:42">=</operator><literal type="number" pos:start="263:43" pos:end="263:43">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if>

    <else pos:start="267:5" pos:end="269:27">else<block type="pseudo" pos:start="269:9" pos:end="269:27"><block_content pos:start="269:9" pos:end="269:27">

        <expr_stmt pos:start="269:9" pos:end="269:27"><expr pos:start="269:9" pos:end="269:26"><name pos:start="269:9" pos:end="269:24"><name pos:start="269:9" pos:end="269:9">c</name><operator pos:start="269:10" pos:end="269:11">-&gt;</operator><name pos:start="269:12" pos:end="269:24">canMMX2BeUsed</name></name><operator pos:start="269:25" pos:end="269:25">=</operator><literal type="number" pos:start="269:26" pos:end="269:26">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="273:5" pos:end="273:64"><expr pos:start="273:5" pos:end="273:63"><name pos:start="273:5" pos:end="273:14"><name pos:start="273:5" pos:end="273:5">c</name><operator pos:start="273:6" pos:end="273:7">-&gt;</operator><name pos:start="273:8" pos:end="273:14">chrXInc</name></name><operator pos:start="273:15" pos:end="273:15">=</operator> <operator pos:start="273:17" pos:end="273:17">(</operator><operator pos:start="273:18" pos:end="273:18">(</operator><name pos:start="273:19" pos:end="273:28"><name pos:start="273:19" pos:end="273:19">c</name><operator pos:start="273:20" pos:end="273:21">-&gt;</operator><name pos:start="273:22" pos:end="273:28">chrSrcW</name></name><operator pos:start="273:29" pos:end="273:30">&lt;&lt;</operator><literal type="number" pos:start="273:31" pos:end="273:32">16</literal><operator pos:start="273:33" pos:end="273:33">)</operator> <operator pos:start="273:35" pos:end="273:35">+</operator> <operator pos:start="273:37" pos:end="273:37">(</operator><name pos:start="273:38" pos:end="273:47"><name pos:start="273:38" pos:end="273:38">c</name><operator pos:start="273:39" pos:end="273:40">-&gt;</operator><name pos:start="273:41" pos:end="273:47">chrDstW</name></name><operator pos:start="273:48" pos:end="273:49">&gt;&gt;</operator><literal type="number" pos:start="273:50" pos:end="273:50">1</literal><operator pos:start="273:51" pos:end="273:51">)</operator><operator pos:start="273:52" pos:end="273:52">)</operator><operator pos:start="273:53" pos:end="273:53">/</operator><name pos:start="273:54" pos:end="273:63"><name pos:start="273:54" pos:end="273:54">c</name><operator pos:start="273:55" pos:end="273:56">-&gt;</operator><name pos:start="273:57" pos:end="273:63">chrDstW</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="275:5" pos:end="275:64"><expr pos:start="275:5" pos:end="275:63"><name pos:start="275:5" pos:end="275:14"><name pos:start="275:5" pos:end="275:5">c</name><operator pos:start="275:6" pos:end="275:7">-&gt;</operator><name pos:start="275:8" pos:end="275:14">chrYInc</name></name><operator pos:start="275:15" pos:end="275:15">=</operator> <operator pos:start="275:17" pos:end="275:17">(</operator><operator pos:start="275:18" pos:end="275:18">(</operator><name pos:start="275:19" pos:end="275:28"><name pos:start="275:19" pos:end="275:19">c</name><operator pos:start="275:20" pos:end="275:21">-&gt;</operator><name pos:start="275:22" pos:end="275:28">chrSrcH</name></name><operator pos:start="275:29" pos:end="275:30">&lt;&lt;</operator><literal type="number" pos:start="275:31" pos:end="275:32">16</literal><operator pos:start="275:33" pos:end="275:33">)</operator> <operator pos:start="275:35" pos:end="275:35">+</operator> <operator pos:start="275:37" pos:end="275:37">(</operator><name pos:start="275:38" pos:end="275:47"><name pos:start="275:38" pos:end="275:38">c</name><operator pos:start="275:39" pos:end="275:40">-&gt;</operator><name pos:start="275:41" pos:end="275:47">chrDstH</name></name><operator pos:start="275:48" pos:end="275:49">&gt;&gt;</operator><literal type="number" pos:start="275:50" pos:end="275:50">1</literal><operator pos:start="275:51" pos:end="275:51">)</operator><operator pos:start="275:52" pos:end="275:52">)</operator><operator pos:start="275:53" pos:end="275:53">/</operator><name pos:start="275:54" pos:end="275:63"><name pos:start="275:54" pos:end="275:54">c</name><operator pos:start="275:55" pos:end="275:56">-&gt;</operator><name pos:start="275:57" pos:end="275:63">chrDstH</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="279:5" pos:end="279:96">// match pixel 0 of the src to pixel 0 of dst and match pixel n-2 of src to pixel n-2 of dst</comment>

    <comment type="line" pos:start="281:5" pos:end="281:71">// but only for the FAST_BILINEAR mode otherwise do correct scaling</comment>

    <comment type="line" pos:start="283:5" pos:end="283:51">// n-2 is the last chrominance sample available</comment>

    <comment type="line" pos:start="285:5" pos:end="285:93">// this is not perfect, but no one should notice the difference, the more correct variant</comment>

    <comment type="line" pos:start="287:5" pos:end="287:87">// would be like the vertical one, but that would require some special code for the</comment>

    <comment type="line" pos:start="289:5" pos:end="289:27">// first and last pixel</comment>

    <if_stmt pos:start="291:5" pos:end="311:5"><if pos:start="291:5" pos:end="311:5">if <condition pos:start="291:8" pos:end="291:32">(<expr pos:start="291:9" pos:end="291:31"><name pos:start="291:9" pos:end="291:13">flags</name><operator pos:start="291:14" pos:end="291:14">&amp;</operator><name pos:start="291:15" pos:end="291:31">SWS_FAST_BILINEAR</name></expr>)</condition> <block pos:start="291:34" pos:end="311:5">{<block_content pos:start="293:9" pos:end="309:9">

        <if_stmt pos:start="293:9" pos:end="309:9"><if pos:start="293:9" pos:end="299:9">if <condition pos:start="293:12" pos:end="293:29">(<expr pos:start="293:13" pos:end="293:28"><name pos:start="293:13" pos:end="293:28"><name pos:start="293:13" pos:end="293:13">c</name><operator pos:start="293:14" pos:end="293:15">-&gt;</operator><name pos:start="293:16" pos:end="293:28">canMMX2BeUsed</name></name></expr>)</condition> <block pos:start="293:31" pos:end="299:9">{<block_content pos:start="295:13" pos:end="297:28">

            <expr_stmt pos:start="295:13" pos:end="295:28"><expr pos:start="295:13" pos:end="295:27"><name pos:start="295:13" pos:end="295:22"><name pos:start="295:13" pos:end="295:13">c</name><operator pos:start="295:14" pos:end="295:15">-&gt;</operator><name pos:start="295:16" pos:end="295:22">lumXInc</name></name><operator pos:start="295:23" pos:end="295:24">+=</operator> <literal type="number" pos:start="295:26" pos:end="295:27">20</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="297:13" pos:end="297:28"><expr pos:start="297:13" pos:end="297:27"><name pos:start="297:13" pos:end="297:22"><name pos:start="297:13" pos:end="297:13">c</name><operator pos:start="297:14" pos:end="297:15">-&gt;</operator><name pos:start="297:16" pos:end="297:22">chrXInc</name></name><operator pos:start="297:23" pos:end="297:24">+=</operator> <literal type="number" pos:start="297:26" pos:end="297:27">20</literal></expr>;</expr_stmt>

        </block_content>}</block></if>

        <comment type="line" pos:start="301:9" pos:end="301:61">//we don't use the x86 asm scaler if MMX is available</comment>

        <if type="elseif" pos:start="303:9" pos:end="309:9">else if <condition pos:start="303:17" pos:end="303:57">(<expr pos:start="303:18" pos:end="303:56"><name pos:start="303:18" pos:end="303:25">HAVE_MMX</name> <operator pos:start="303:27" pos:end="303:28">&amp;&amp;</operator> <name pos:start="303:30" pos:end="303:38">cpu_flags</name> <operator pos:start="303:40" pos:end="303:40">&amp;</operator> <name pos:start="303:42" pos:end="303:56">AV_CPU_FLAG_MMX</name></expr>)</condition> <block pos:start="303:59" pos:end="309:9">{<block_content pos:start="305:13" pos:end="307:66">

            <expr_stmt pos:start="305:13" pos:end="305:54"><expr pos:start="305:13" pos:end="305:53"><name pos:start="305:13" pos:end="305:22"><name pos:start="305:13" pos:end="305:13">c</name><operator pos:start="305:14" pos:end="305:15">-&gt;</operator><name pos:start="305:16" pos:end="305:22">lumXInc</name></name> <operator pos:start="305:24" pos:end="305:24">=</operator> <operator pos:start="305:26" pos:end="305:26">(</operator><operator pos:start="305:27" pos:end="305:27">(</operator><name pos:start="305:28" pos:end="305:31">srcW</name><operator pos:start="305:32" pos:end="305:32">-</operator><literal type="number" pos:start="305:33" pos:end="305:33">2</literal><operator pos:start="305:34" pos:end="305:34">)</operator><operator pos:start="305:35" pos:end="305:36">&lt;&lt;</operator><literal type="number" pos:start="305:37" pos:end="305:38">16</literal><operator pos:start="305:39" pos:end="305:39">)</operator><operator pos:start="305:40" pos:end="305:40">/</operator><operator pos:start="305:41" pos:end="305:41">(</operator><name pos:start="305:42" pos:end="305:45">dstW</name><operator pos:start="305:46" pos:end="305:46">-</operator><literal type="number" pos:start="305:47" pos:end="305:47">2</literal><operator pos:start="305:48" pos:end="305:48">)</operator> <operator pos:start="305:50" pos:end="305:50">-</operator> <literal type="number" pos:start="305:52" pos:end="305:53">20</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="307:13" pos:end="307:66"><expr pos:start="307:13" pos:end="307:65"><name pos:start="307:13" pos:end="307:22"><name pos:start="307:13" pos:end="307:13">c</name><operator pos:start="307:14" pos:end="307:15">-&gt;</operator><name pos:start="307:16" pos:end="307:22">chrXInc</name></name> <operator pos:start="307:24" pos:end="307:24">=</operator> <operator pos:start="307:26" pos:end="307:26">(</operator><operator pos:start="307:27" pos:end="307:27">(</operator><name pos:start="307:28" pos:end="307:37"><name pos:start="307:28" pos:end="307:28">c</name><operator pos:start="307:29" pos:end="307:30">-&gt;</operator><name pos:start="307:31" pos:end="307:37">chrSrcW</name></name><operator pos:start="307:38" pos:end="307:38">-</operator><literal type="number" pos:start="307:39" pos:end="307:39">2</literal><operator pos:start="307:40" pos:end="307:40">)</operator><operator pos:start="307:41" pos:end="307:42">&lt;&lt;</operator><literal type="number" pos:start="307:43" pos:end="307:44">16</literal><operator pos:start="307:45" pos:end="307:45">)</operator><operator pos:start="307:46" pos:end="307:46">/</operator><operator pos:start="307:47" pos:end="307:47">(</operator><name pos:start="307:48" pos:end="307:57"><name pos:start="307:48" pos:end="307:48">c</name><operator pos:start="307:49" pos:end="307:50">-&gt;</operator><name pos:start="307:51" pos:end="307:57">chrDstW</name></name><operator pos:start="307:58" pos:end="307:58">-</operator><literal type="number" pos:start="307:59" pos:end="307:59">2</literal><operator pos:start="307:60" pos:end="307:60">)</operator> <operator pos:start="307:62" pos:end="307:62">-</operator> <literal type="number" pos:start="307:64" pos:end="307:65">20</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="315:5" pos:end="315:60">/* precalculate horizontal scaler filter coefficients */</comment>

    <block pos:start="317:5" pos:end="419:5">{<block_content pos:start="323:9" pos:end="417:9">

<cpp:if pos:start="319:1" pos:end="319:13">#<cpp:directive pos:start="319:2" pos:end="319:3">if</cpp:directive> <expr pos:start="319:5" pos:end="319:13"><name pos:start="319:5" pos:end="319:13">HAVE_MMX2</name></expr></cpp:if>

<comment type="line" pos:start="321:1" pos:end="321:22">// can't downscale !!!</comment>

        <if_stmt pos:start="323:9" pos:end="417:9"><if pos:start="323:9" pos:end="381:9">if <condition pos:start="323:12" pos:end="323:60">(<expr pos:start="323:13" pos:end="323:59"><name pos:start="323:13" pos:end="323:28"><name pos:start="323:13" pos:end="323:13">c</name><operator pos:start="323:14" pos:end="323:15">-&gt;</operator><name pos:start="323:16" pos:end="323:28">canMMX2BeUsed</name></name> <operator pos:start="323:30" pos:end="323:31">&amp;&amp;</operator> <operator pos:start="323:33" pos:end="323:33">(</operator><name pos:start="323:34" pos:end="323:38">flags</name> <operator pos:start="323:40" pos:end="323:40">&amp;</operator> <name pos:start="323:42" pos:end="323:58">SWS_FAST_BILINEAR</name><operator pos:start="323:59" pos:end="323:59">)</operator></expr>)</condition> <block pos:start="323:62" pos:end="381:9">{<block_content pos:start="325:13" pos:end="380:0">

            <expr_stmt pos:start="325:13" pos:end="325:100"><expr pos:start="325:13" pos:end="325:99"><name pos:start="325:13" pos:end="325:36"><name pos:start="325:13" pos:end="325:13">c</name><operator pos:start="325:14" pos:end="325:15">-&gt;</operator><name pos:start="325:16" pos:end="325:36">lumMmx2FilterCodeSize</name></name> <operator pos:start="325:38" pos:end="325:38">=</operator> <call pos:start="325:40" pos:end="325:99"><name pos:start="325:40" pos:end="325:54">initMMX2HScaler</name><argument_list pos:start="325:55" pos:end="325:99">(      <argument pos:start="325:62" pos:end="325:65"><expr pos:start="325:62" pos:end="325:65"><name pos:start="325:62" pos:end="325:65">dstW</name></expr></argument>, <argument pos:start="325:68" pos:end="325:77"><expr pos:start="325:68" pos:end="325:77"><name pos:start="325:68" pos:end="325:77"><name pos:start="325:68" pos:end="325:68">c</name><operator pos:start="325:69" pos:end="325:70">-&gt;</operator><name pos:start="325:71" pos:end="325:77">lumXInc</name></name></expr></argument>, <argument pos:start="325:80" pos:end="325:83"><expr pos:start="325:80" pos:end="325:83"><name pos:start="325:80" pos:end="325:83">NULL</name></expr></argument>, <argument pos:start="325:86" pos:end="325:89"><expr pos:start="325:86" pos:end="325:89"><name pos:start="325:86" pos:end="325:89">NULL</name></expr></argument>, <argument pos:start="325:92" pos:end="325:95"><expr pos:start="325:92" pos:end="325:95"><name pos:start="325:92" pos:end="325:95">NULL</name></expr></argument>, <argument pos:start="325:98" pos:end="325:98"><expr pos:start="325:98" pos:end="325:98"><literal type="number" pos:start="325:98" pos:end="325:98">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="327:13" pos:end="332:0"><expr pos:start="327:13" pos:end="327:99"><name pos:start="327:13" pos:end="327:36"><name pos:start="327:13" pos:end="327:13">c</name><operator pos:start="327:14" pos:end="327:15">-&gt;</operator><name pos:start="327:16" pos:end="327:36">chrMmx2FilterCodeSize</name></name> <operator pos:start="327:38" pos:end="327:38">=</operator> <call pos:start="327:40" pos:end="327:99"><name pos:start="327:40" pos:end="327:54">initMMX2HScaler</name><argument_list pos:start="327:55" pos:end="327:99">(<argument pos:start="327:56" pos:end="327:65"><expr pos:start="327:56" pos:end="327:65"><name pos:start="327:56" pos:end="327:65"><name pos:start="327:56" pos:end="327:56">c</name><operator pos:start="327:57" pos:end="327:58">-&gt;</operator><name pos:start="327:59" pos:end="327:65">chrDstW</name></name></expr></argument>, <argument pos:start="327:68" pos:end="327:77"><expr pos:start="327:68" pos:end="327:77"><name pos:start="327:68" pos:end="327:77"><name pos:start="327:68" pos:end="327:68">c</name><operator pos:start="327:69" pos:end="327:70">-&gt;</operator><name pos:start="327:71" pos:end="327:77">chrXInc</name></name></expr></argument>, <argument pos:start="327:80" pos:end="327:83"><expr pos:start="327:80" pos:end="327:83"><name pos:start="327:80" pos:end="327:83">NULL</name></expr></argument>, <argument pos:start="327:86" pos:end="327:89"><expr pos:start="327:86" pos:end="327:89"><name pos:start="327:86" pos:end="327:89">NULL</name></expr></argument>, <argument pos:start="327:92" pos:end="327:95"><expr pos:start="327:92" pos:end="327:95"><name pos:start="327:92" pos:end="327:95">NULL</name></expr></argument>, <argument pos:start="327:98" pos:end="327:98"><expr pos:start="327:98" pos:end="327:98"><literal type="number" pos:start="327:98" pos:end="327:98">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="331:1" pos:end="331:20">#<cpp:directive pos:start="331:2" pos:end="331:6">ifdef</cpp:directive> <name pos:start="331:8" pos:end="331:20">MAP_ANONYMOUS</name></cpp:ifdef>

            <expr_stmt pos:start="333:13" pos:end="333:132"><expr pos:start="333:13" pos:end="333:131"><name pos:start="333:13" pos:end="333:32"><name pos:start="333:13" pos:end="333:13">c</name><operator pos:start="333:14" pos:end="333:15">-&gt;</operator><name pos:start="333:16" pos:end="333:32">lumMmx2FilterCode</name></name> <operator pos:start="333:34" pos:end="333:34">=</operator> <call pos:start="333:36" pos:end="333:131"><name pos:start="333:36" pos:end="333:39">mmap</name><argument_list pos:start="333:40" pos:end="333:131">(<argument pos:start="333:41" pos:end="333:44"><expr pos:start="333:41" pos:end="333:44"><name pos:start="333:41" pos:end="333:44">NULL</name></expr></argument>, <argument pos:start="333:47" pos:end="333:70"><expr pos:start="333:47" pos:end="333:70"><name pos:start="333:47" pos:end="333:70"><name pos:start="333:47" pos:end="333:47">c</name><operator pos:start="333:48" pos:end="333:49">-&gt;</operator><name pos:start="333:50" pos:end="333:70">lumMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="333:73" pos:end="333:94"><expr pos:start="333:73" pos:end="333:94"><name pos:start="333:73" pos:end="333:81">PROT_READ</name> <operator pos:start="333:83" pos:end="333:83">|</operator> <name pos:start="333:85" pos:end="333:94">PROT_WRITE</name></expr></argument>, <argument pos:start="333:97" pos:end="333:123"><expr pos:start="333:97" pos:end="333:123"><name pos:start="333:97" pos:end="333:107">MAP_PRIVATE</name> <operator pos:start="333:109" pos:end="333:109">|</operator> <name pos:start="333:111" pos:end="333:123">MAP_ANONYMOUS</name></expr></argument>, <argument pos:start="333:126" pos:end="333:127"><expr pos:start="333:126" pos:end="333:127"><operator pos:start="333:126" pos:end="333:126">-</operator><literal type="number" pos:start="333:127" pos:end="333:127">1</literal></expr></argument>, <argument pos:start="333:130" pos:end="333:130"><expr pos:start="333:130" pos:end="333:130"><literal type="number" pos:start="333:130" pos:end="333:130">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="335:13" pos:end="338:0"><expr pos:start="335:13" pos:end="335:131"><name pos:start="335:13" pos:end="335:32"><name pos:start="335:13" pos:end="335:13">c</name><operator pos:start="335:14" pos:end="335:15">-&gt;</operator><name pos:start="335:16" pos:end="335:32">chrMmx2FilterCode</name></name> <operator pos:start="335:34" pos:end="335:34">=</operator> <call pos:start="335:36" pos:end="335:131"><name pos:start="335:36" pos:end="335:39">mmap</name><argument_list pos:start="335:40" pos:end="335:131">(<argument pos:start="335:41" pos:end="335:44"><expr pos:start="335:41" pos:end="335:44"><name pos:start="335:41" pos:end="335:44">NULL</name></expr></argument>, <argument pos:start="335:47" pos:end="335:70"><expr pos:start="335:47" pos:end="335:70"><name pos:start="335:47" pos:end="335:70"><name pos:start="335:47" pos:end="335:47">c</name><operator pos:start="335:48" pos:end="335:49">-&gt;</operator><name pos:start="335:50" pos:end="335:70">chrMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="335:73" pos:end="335:94"><expr pos:start="335:73" pos:end="335:94"><name pos:start="335:73" pos:end="335:81">PROT_READ</name> <operator pos:start="335:83" pos:end="335:83">|</operator> <name pos:start="335:85" pos:end="335:94">PROT_WRITE</name></expr></argument>, <argument pos:start="335:97" pos:end="335:123"><expr pos:start="335:97" pos:end="335:123"><name pos:start="335:97" pos:end="335:107">MAP_PRIVATE</name> <operator pos:start="335:109" pos:end="335:109">|</operator> <name pos:start="335:111" pos:end="335:123">MAP_ANONYMOUS</name></expr></argument>, <argument pos:start="335:126" pos:end="335:127"><expr pos:start="335:126" pos:end="335:127"><operator pos:start="335:126" pos:end="335:126">-</operator><literal type="number" pos:start="335:127" pos:end="335:127">1</literal></expr></argument>, <argument pos:start="335:130" pos:end="335:130"><expr pos:start="335:130" pos:end="335:130"><literal type="number" pos:start="335:130" pos:end="335:130">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:elif pos:start="337:1" pos:end="337:23">#<cpp:directive pos:start="337:2" pos:end="337:5">elif</cpp:directive> <expr pos:start="337:7" pos:end="337:23"><name pos:start="337:7" pos:end="337:23">HAVE_VIRTUALALLOC</name></expr></cpp:elif>

            <expr_stmt pos:start="339:13" pos:end="339:116"><expr pos:start="339:13" pos:end="339:115"><name pos:start="339:13" pos:end="339:32"><name pos:start="339:13" pos:end="339:13">c</name><operator pos:start="339:14" pos:end="339:15">-&gt;</operator><name pos:start="339:16" pos:end="339:32">lumMmx2FilterCode</name></name> <operator pos:start="339:34" pos:end="339:34">=</operator> <call pos:start="339:36" pos:end="339:115"><name pos:start="339:36" pos:end="339:47">VirtualAlloc</name><argument_list pos:start="339:48" pos:end="339:115">(<argument pos:start="339:49" pos:end="339:52"><expr pos:start="339:49" pos:end="339:52"><name pos:start="339:49" pos:end="339:52">NULL</name></expr></argument>, <argument pos:start="339:55" pos:end="339:78"><expr pos:start="339:55" pos:end="339:78"><name pos:start="339:55" pos:end="339:78"><name pos:start="339:55" pos:end="339:55">c</name><operator pos:start="339:56" pos:end="339:57">-&gt;</operator><name pos:start="339:58" pos:end="339:78">lumMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="339:81" pos:end="339:90"><expr pos:start="339:81" pos:end="339:90"><name pos:start="339:81" pos:end="339:90">MEM_COMMIT</name></expr></argument>, <argument pos:start="339:93" pos:end="339:114"><expr pos:start="339:93" pos:end="339:114"><name pos:start="339:93" pos:end="339:114">PAGE_EXECUTE_READWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="341:13" pos:end="344:0"><expr pos:start="341:13" pos:end="341:115"><name pos:start="341:13" pos:end="341:32"><name pos:start="341:13" pos:end="341:13">c</name><operator pos:start="341:14" pos:end="341:15">-&gt;</operator><name pos:start="341:16" pos:end="341:32">chrMmx2FilterCode</name></name> <operator pos:start="341:34" pos:end="341:34">=</operator> <call pos:start="341:36" pos:end="341:115"><name pos:start="341:36" pos:end="341:47">VirtualAlloc</name><argument_list pos:start="341:48" pos:end="341:115">(<argument pos:start="341:49" pos:end="341:52"><expr pos:start="341:49" pos:end="341:52"><name pos:start="341:49" pos:end="341:52">NULL</name></expr></argument>, <argument pos:start="341:55" pos:end="341:78"><expr pos:start="341:55" pos:end="341:78"><name pos:start="341:55" pos:end="341:78"><name pos:start="341:55" pos:end="341:55">c</name><operator pos:start="341:56" pos:end="341:57">-&gt;</operator><name pos:start="341:58" pos:end="341:78">chrMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="341:81" pos:end="341:90"><expr pos:start="341:81" pos:end="341:90"><name pos:start="341:81" pos:end="341:90">MEM_COMMIT</name></expr></argument>, <argument pos:start="341:93" pos:end="341:114"><expr pos:start="341:93" pos:end="341:114"><name pos:start="341:93" pos:end="341:114">PAGE_EXECUTE_READWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="343:1" pos:end="343:5">#<cpp:directive pos:start="343:2" pos:end="343:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="345:13" pos:end="345:71"><expr pos:start="345:13" pos:end="345:70"><name pos:start="345:13" pos:end="345:32"><name pos:start="345:13" pos:end="345:13">c</name><operator pos:start="345:14" pos:end="345:15">-&gt;</operator><name pos:start="345:16" pos:end="345:32">lumMmx2FilterCode</name></name> <operator pos:start="345:34" pos:end="345:34">=</operator> <call pos:start="345:36" pos:end="345:70"><name pos:start="345:36" pos:end="345:44">av_malloc</name><argument_list pos:start="345:45" pos:end="345:70">(<argument pos:start="345:46" pos:end="345:69"><expr pos:start="345:46" pos:end="345:69"><name pos:start="345:46" pos:end="345:69"><name pos:start="345:46" pos:end="345:46">c</name><operator pos:start="345:47" pos:end="345:48">-&gt;</operator><name pos:start="345:49" pos:end="345:69">lumMmx2FilterCodeSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="347:13" pos:end="350:0"><expr pos:start="347:13" pos:end="347:70"><name pos:start="347:13" pos:end="347:32"><name pos:start="347:13" pos:end="347:13">c</name><operator pos:start="347:14" pos:end="347:15">-&gt;</operator><name pos:start="347:16" pos:end="347:32">chrMmx2FilterCode</name></name> <operator pos:start="347:34" pos:end="347:34">=</operator> <call pos:start="347:36" pos:end="347:70"><name pos:start="347:36" pos:end="347:44">av_malloc</name><argument_list pos:start="347:45" pos:end="347:70">(<argument pos:start="347:46" pos:end="347:69"><expr pos:start="347:46" pos:end="347:69"><name pos:start="347:46" pos:end="347:69"><name pos:start="347:46" pos:end="347:46">c</name><operator pos:start="347:47" pos:end="347:48">-&gt;</operator><name pos:start="347:49" pos:end="347:69">chrMmx2FilterCodeSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="349:1" pos:end="349:6">#<cpp:directive pos:start="349:2" pos:end="349:6">endif</cpp:directive></cpp:endif>



            <if_stmt pos:start="353:13" pos:end="355:39"><if pos:start="353:13" pos:end="355:39">if <condition pos:start="353:16" pos:end="353:63">(<expr pos:start="353:17" pos:end="353:62"><operator pos:start="353:17" pos:end="353:17">!</operator><name pos:start="353:18" pos:end="353:37"><name pos:start="353:18" pos:end="353:18">c</name><operator pos:start="353:19" pos:end="353:20">-&gt;</operator><name pos:start="353:21" pos:end="353:37">lumMmx2FilterCode</name></name> <operator pos:start="353:39" pos:end="353:40">||</operator> <operator pos:start="353:42" pos:end="353:42">!</operator><name pos:start="353:43" pos:end="353:62"><name pos:start="353:43" pos:end="353:43">c</name><operator pos:start="353:44" pos:end="353:45">-&gt;</operator><name pos:start="353:46" pos:end="353:62">chrMmx2FilterCode</name></name></expr>)</condition><block type="pseudo" pos:start="355:17" pos:end="355:39"><block_content pos:start="355:17" pos:end="355:39">

                <return pos:start="355:17" pos:end="355:39">return <expr pos:start="355:24" pos:end="355:38"><call pos:start="355:24" pos:end="355:38"><name pos:start="355:24" pos:end="355:30">AVERROR</name><argument_list pos:start="355:31" pos:end="355:38">(<argument pos:start="355:32" pos:end="355:37"><expr pos:start="355:32" pos:end="355:37"><name pos:start="355:32" pos:end="355:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="357:13" pos:end="357:93"><expr pos:start="357:13" pos:end="357:92"><call pos:start="357:13" pos:end="357:92"><name pos:start="357:13" pos:end="357:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="357:30" pos:end="357:92">(<argument pos:start="357:31" pos:end="357:31"><expr pos:start="357:31" pos:end="357:31"><name pos:start="357:31" pos:end="357:31">c</name></expr></argument>, <argument pos:start="357:34" pos:end="357:46"><expr pos:start="357:34" pos:end="357:46"><name pos:start="357:34" pos:end="357:46"><name pos:start="357:34" pos:end="357:34">c</name><operator pos:start="357:35" pos:end="357:36">-&gt;</operator><name pos:start="357:37" pos:end="357:46">hLumFilter</name></name></expr></argument>   , <argument pos:start="357:52" pos:end="357:85"><expr pos:start="357:52" pos:end="357:85"><operator pos:start="357:52" pos:end="357:52">(</operator><name pos:start="357:53" pos:end="357:56">dstW</name>        <operator pos:start="357:65" pos:end="357:65">/</operator><literal type="number" pos:start="357:66" pos:end="357:67">8</literal><operator pos:start="357:67" pos:end="357:67">+</operator><literal type="number" pos:start="357:68" pos:end="357:68">8</literal><operator pos:start="357:69" pos:end="357:69">)</operator><operator pos:start="357:70" pos:end="357:70">*</operator><sizeof pos:start="357:71" pos:end="357:85">sizeof<argument_list pos:start="357:77" pos:end="357:85">(<argument pos:start="357:78" pos:end="357:84"><expr pos:start="357:78" pos:end="357:84"><name pos:start="357:78" pos:end="357:84">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="357:88" pos:end="357:91"><expr pos:start="357:88" pos:end="357:91"><name pos:start="357:88" pos:end="357:91">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="359:13" pos:end="359:93"><expr pos:start="359:13" pos:end="359:92"><call pos:start="359:13" pos:end="359:92"><name pos:start="359:13" pos:end="359:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="359:30" pos:end="359:92">(<argument pos:start="359:31" pos:end="359:31"><expr pos:start="359:31" pos:end="359:31"><name pos:start="359:31" pos:end="359:31">c</name></expr></argument>, <argument pos:start="359:34" pos:end="359:46"><expr pos:start="359:34" pos:end="359:46"><name pos:start="359:34" pos:end="359:46"><name pos:start="359:34" pos:end="359:34">c</name><operator pos:start="359:35" pos:end="359:36">-&gt;</operator><name pos:start="359:37" pos:end="359:46">hChrFilter</name></name></expr></argument>   , <argument pos:start="359:52" pos:end="359:85"><expr pos:start="359:52" pos:end="359:85"><operator pos:start="359:52" pos:end="359:52">(</operator><name pos:start="359:53" pos:end="359:62"><name pos:start="359:53" pos:end="359:53">c</name><operator pos:start="359:54" pos:end="359:55">-&gt;</operator><name pos:start="359:56" pos:end="359:62">chrDstW</name></name>  <operator pos:start="359:65" pos:end="359:65">/</operator><literal type="number" pos:start="359:66" pos:end="359:67">4</literal><operator pos:start="359:67" pos:end="359:67">+</operator><literal type="number" pos:start="359:68" pos:end="359:68">8</literal><operator pos:start="359:69" pos:end="359:69">)</operator><operator pos:start="359:70" pos:end="359:70">*</operator><sizeof pos:start="359:71" pos:end="359:85">sizeof<argument_list pos:start="359:77" pos:end="359:85">(<argument pos:start="359:78" pos:end="359:84"><expr pos:start="359:78" pos:end="359:84"><name pos:start="359:78" pos:end="359:84">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="359:88" pos:end="359:91"><expr pos:start="359:88" pos:end="359:91"><name pos:start="359:88" pos:end="359:91">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="361:13" pos:end="361:93"><expr pos:start="361:13" pos:end="361:92"><call pos:start="361:13" pos:end="361:92"><name pos:start="361:13" pos:end="361:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="361:30" pos:end="361:92">(<argument pos:start="361:31" pos:end="361:31"><expr pos:start="361:31" pos:end="361:31"><name pos:start="361:31" pos:end="361:31">c</name></expr></argument>, <argument pos:start="361:34" pos:end="361:49"><expr pos:start="361:34" pos:end="361:49"><name pos:start="361:34" pos:end="361:49"><name pos:start="361:34" pos:end="361:34">c</name><operator pos:start="361:35" pos:end="361:36">-&gt;</operator><name pos:start="361:37" pos:end="361:49">hLumFilterPos</name></name></expr></argument>, <argument pos:start="361:52" pos:end="361:85"><expr pos:start="361:52" pos:end="361:85"><operator pos:start="361:52" pos:end="361:52">(</operator><name pos:start="361:53" pos:end="361:56">dstW</name>      <operator pos:start="361:63" pos:end="361:63">/</operator><literal type="number" pos:start="361:64" pos:end="361:64">2</literal><operator pos:start="361:65" pos:end="361:65">/</operator><literal type="number" pos:start="361:66" pos:end="361:67">8</literal><operator pos:start="361:67" pos:end="361:67">+</operator><literal type="number" pos:start="361:68" pos:end="361:68">8</literal><operator pos:start="361:69" pos:end="361:69">)</operator><operator pos:start="361:70" pos:end="361:70">*</operator><sizeof pos:start="361:71" pos:end="361:85">sizeof<argument_list pos:start="361:77" pos:end="361:85">(<argument pos:start="361:78" pos:end="361:84"><expr pos:start="361:78" pos:end="361:84"><name pos:start="361:78" pos:end="361:84">int32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="361:88" pos:end="361:91"><expr pos:start="361:88" pos:end="361:91"><name pos:start="361:88" pos:end="361:91">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="363:13" pos:end="363:93"><expr pos:start="363:13" pos:end="363:92"><call pos:start="363:13" pos:end="363:92"><name pos:start="363:13" pos:end="363:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="363:30" pos:end="363:92">(<argument pos:start="363:31" pos:end="363:31"><expr pos:start="363:31" pos:end="363:31"><name pos:start="363:31" pos:end="363:31">c</name></expr></argument>, <argument pos:start="363:34" pos:end="363:49"><expr pos:start="363:34" pos:end="363:49"><name pos:start="363:34" pos:end="363:49"><name pos:start="363:34" pos:end="363:34">c</name><operator pos:start="363:35" pos:end="363:36">-&gt;</operator><name pos:start="363:37" pos:end="363:49">hChrFilterPos</name></name></expr></argument>, <argument pos:start="363:52" pos:end="363:85"><expr pos:start="363:52" pos:end="363:85"><operator pos:start="363:52" pos:end="363:52">(</operator><name pos:start="363:53" pos:end="363:62"><name pos:start="363:53" pos:end="363:53">c</name><operator pos:start="363:54" pos:end="363:55">-&gt;</operator><name pos:start="363:56" pos:end="363:62">chrDstW</name></name><operator pos:start="363:63" pos:end="363:63">/</operator><literal type="number" pos:start="363:64" pos:end="363:64">2</literal><operator pos:start="363:65" pos:end="363:65">/</operator><literal type="number" pos:start="363:66" pos:end="363:67">4</literal><operator pos:start="363:67" pos:end="363:67">+</operator><literal type="number" pos:start="363:68" pos:end="363:68">8</literal><operator pos:start="363:69" pos:end="363:69">)</operator><operator pos:start="363:70" pos:end="363:70">*</operator><sizeof pos:start="363:71" pos:end="363:85">sizeof<argument_list pos:start="363:77" pos:end="363:85">(<argument pos:start="363:78" pos:end="363:84"><expr pos:start="363:78" pos:end="363:84"><name pos:start="363:78" pos:end="363:84">int32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="363:88" pos:end="363:91"><expr pos:start="363:88" pos:end="363:91"><name pos:start="363:88" pos:end="363:91">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="367:13" pos:end="367:110"><expr pos:start="367:13" pos:end="367:109"><call pos:start="367:13" pos:end="367:109"><name pos:start="367:13" pos:end="367:27">initMMX2HScaler</name><argument_list pos:start="367:28" pos:end="367:109">(      <argument pos:start="367:35" pos:end="367:38"><expr pos:start="367:35" pos:end="367:38"><name pos:start="367:35" pos:end="367:38">dstW</name></expr></argument>, <argument pos:start="367:41" pos:end="367:50"><expr pos:start="367:41" pos:end="367:50"><name pos:start="367:41" pos:end="367:50"><name pos:start="367:41" pos:end="367:41">c</name><operator pos:start="367:42" pos:end="367:43">-&gt;</operator><name pos:start="367:44" pos:end="367:50">lumXInc</name></name></expr></argument>, <argument pos:start="367:53" pos:end="367:72"><expr pos:start="367:53" pos:end="367:72"><name pos:start="367:53" pos:end="367:72"><name pos:start="367:53" pos:end="367:53">c</name><operator pos:start="367:54" pos:end="367:55">-&gt;</operator><name pos:start="367:56" pos:end="367:72">lumMmx2FilterCode</name></name></expr></argument>, <argument pos:start="367:75" pos:end="367:87"><expr pos:start="367:75" pos:end="367:87"><name pos:start="367:75" pos:end="367:87"><name pos:start="367:75" pos:end="367:75">c</name><operator pos:start="367:76" pos:end="367:77">-&gt;</operator><name pos:start="367:78" pos:end="367:87">hLumFilter</name></name></expr></argument>, <argument pos:start="367:90" pos:end="367:105"><expr pos:start="367:90" pos:end="367:105"><name pos:start="367:90" pos:end="367:105"><name pos:start="367:90" pos:end="367:90">c</name><operator pos:start="367:91" pos:end="367:92">-&gt;</operator><name pos:start="367:93" pos:end="367:105">hLumFilterPos</name></name></expr></argument>, <argument pos:start="367:108" pos:end="367:108"><expr pos:start="367:108" pos:end="367:108"><literal type="number" pos:start="367:108" pos:end="367:108">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="369:13" pos:end="374:0"><expr pos:start="369:13" pos:end="369:109"><call pos:start="369:13" pos:end="369:109"><name pos:start="369:13" pos:end="369:27">initMMX2HScaler</name><argument_list pos:start="369:28" pos:end="369:109">(<argument pos:start="369:29" pos:end="369:38"><expr pos:start="369:29" pos:end="369:38"><name pos:start="369:29" pos:end="369:38"><name pos:start="369:29" pos:end="369:29">c</name><operator pos:start="369:30" pos:end="369:31">-&gt;</operator><name pos:start="369:32" pos:end="369:38">chrDstW</name></name></expr></argument>, <argument pos:start="369:41" pos:end="369:50"><expr pos:start="369:41" pos:end="369:50"><name pos:start="369:41" pos:end="369:50"><name pos:start="369:41" pos:end="369:41">c</name><operator pos:start="369:42" pos:end="369:43">-&gt;</operator><name pos:start="369:44" pos:end="369:50">chrXInc</name></name></expr></argument>, <argument pos:start="369:53" pos:end="369:72"><expr pos:start="369:53" pos:end="369:72"><name pos:start="369:53" pos:end="369:72"><name pos:start="369:53" pos:end="369:53">c</name><operator pos:start="369:54" pos:end="369:55">-&gt;</operator><name pos:start="369:56" pos:end="369:72">chrMmx2FilterCode</name></name></expr></argument>, <argument pos:start="369:75" pos:end="369:87"><expr pos:start="369:75" pos:end="369:87"><name pos:start="369:75" pos:end="369:87"><name pos:start="369:75" pos:end="369:75">c</name><operator pos:start="369:76" pos:end="369:77">-&gt;</operator><name pos:start="369:78" pos:end="369:87">hChrFilter</name></name></expr></argument>, <argument pos:start="369:90" pos:end="369:105"><expr pos:start="369:90" pos:end="369:105"><name pos:start="369:90" pos:end="369:105"><name pos:start="369:90" pos:end="369:90">c</name><operator pos:start="369:91" pos:end="369:92">-&gt;</operator><name pos:start="369:93" pos:end="369:105">hChrFilterPos</name></name></expr></argument>, <argument pos:start="369:108" pos:end="369:108"><expr pos:start="369:108" pos:end="369:108"><literal type="number" pos:start="369:108" pos:end="369:108">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="373:1" pos:end="373:20">#<cpp:directive pos:start="373:2" pos:end="373:6">ifdef</cpp:directive> <name pos:start="373:8" pos:end="373:20">MAP_ANONYMOUS</name></cpp:ifdef>

            <expr_stmt pos:start="375:13" pos:end="375:92"><expr pos:start="375:13" pos:end="375:91"><call pos:start="375:13" pos:end="375:91"><name pos:start="375:13" pos:end="375:20">mprotect</name><argument_list pos:start="375:21" pos:end="375:91">(<argument pos:start="375:22" pos:end="375:41"><expr pos:start="375:22" pos:end="375:41"><name pos:start="375:22" pos:end="375:41"><name pos:start="375:22" pos:end="375:22">c</name><operator pos:start="375:23" pos:end="375:24">-&gt;</operator><name pos:start="375:25" pos:end="375:41">lumMmx2FilterCode</name></name></expr></argument>, <argument pos:start="375:44" pos:end="375:67"><expr pos:start="375:44" pos:end="375:67"><name pos:start="375:44" pos:end="375:67"><name pos:start="375:44" pos:end="375:44">c</name><operator pos:start="375:45" pos:end="375:46">-&gt;</operator><name pos:start="375:47" pos:end="375:67">lumMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="375:70" pos:end="375:90"><expr pos:start="375:70" pos:end="375:90"><name pos:start="375:70" pos:end="375:78">PROT_EXEC</name> <operator pos:start="375:80" pos:end="375:80">|</operator> <name pos:start="375:82" pos:end="375:90">PROT_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="377:13" pos:end="380:0"><expr pos:start="377:13" pos:end="377:91"><call pos:start="377:13" pos:end="377:91"><name pos:start="377:13" pos:end="377:20">mprotect</name><argument_list pos:start="377:21" pos:end="377:91">(<argument pos:start="377:22" pos:end="377:41"><expr pos:start="377:22" pos:end="377:41"><name pos:start="377:22" pos:end="377:41"><name pos:start="377:22" pos:end="377:22">c</name><operator pos:start="377:23" pos:end="377:24">-&gt;</operator><name pos:start="377:25" pos:end="377:41">chrMmx2FilterCode</name></name></expr></argument>, <argument pos:start="377:44" pos:end="377:67"><expr pos:start="377:44" pos:end="377:67"><name pos:start="377:44" pos:end="377:67"><name pos:start="377:44" pos:end="377:44">c</name><operator pos:start="377:45" pos:end="377:46">-&gt;</operator><name pos:start="377:47" pos:end="377:67">chrMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="377:70" pos:end="377:90"><expr pos:start="377:70" pos:end="377:90"><name pos:start="377:70" pos:end="377:78">PROT_EXEC</name> <operator pos:start="377:80" pos:end="377:80">|</operator> <name pos:start="377:82" pos:end="377:90">PROT_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="379:1" pos:end="379:6">#<cpp:directive pos:start="379:2" pos:end="379:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if> <else pos:start="381:11" pos:end="417:9">else

<cpp:endif pos:start="383:1" pos:end="383:6">#<cpp:directive pos:start="383:2" pos:end="383:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="383:8" pos:end="383:22">/* HAVE_MMX2 */</comment>

        <block pos:start="385:9" pos:end="417:9">{<block_content pos:start="387:13" pos:end="415:26">

            <decl_stmt pos:start="387:13" pos:end="393:18"><decl pos:start="387:13" pos:end="393:17"><type pos:start="387:13" pos:end="387:21"><specifier pos:start="387:13" pos:end="387:17">const</specifier> <name pos:start="387:19" pos:end="387:21">int</name></type> <name pos:start="387:23" pos:end="387:33">filterAlign</name><init pos:start="387:34" pos:end="393:17">=

                <expr pos:start="389:17" pos:end="393:17"><ternary pos:start="389:17" pos:end="393:17"><condition pos:start="389:17" pos:end="389:63"><expr pos:start="389:17" pos:end="389:61"><operator pos:start="389:17" pos:end="389:17">(</operator><name pos:start="389:18" pos:end="389:25">HAVE_MMX</name>     <operator pos:start="389:31" pos:end="389:32">&amp;&amp;</operator> <name pos:start="389:34" pos:end="389:42">cpu_flags</name> <operator pos:start="389:44" pos:end="389:44">&amp;</operator> <name pos:start="389:46" pos:end="389:60">AV_CPU_FLAG_MMX</name><operator pos:start="389:61" pos:end="389:61">)</operator></expr> ?</condition><then pos:start="389:65" pos:end="389:65"> <expr pos:start="389:65" pos:end="389:65"><literal type="number" pos:start="389:65" pos:end="389:65">4</literal></expr> </then><else pos:start="389:67" pos:end="393:17">:

                <expr pos:start="391:17" pos:end="393:17"><ternary pos:start="391:17" pos:end="393:17"><condition pos:start="391:17" pos:end="391:67"><expr pos:start="391:17" pos:end="391:65"><operator pos:start="391:17" pos:end="391:17">(</operator><name pos:start="391:18" pos:end="391:29">HAVE_ALTIVEC</name> <operator pos:start="391:31" pos:end="391:32">&amp;&amp;</operator> <name pos:start="391:34" pos:end="391:42">cpu_flags</name> <operator pos:start="391:44" pos:end="391:44">&amp;</operator> <name pos:start="391:46" pos:end="391:64">AV_CPU_FLAG_ALTIVEC</name><operator pos:start="391:65" pos:end="391:65">)</operator></expr> ?</condition><then pos:start="391:69" pos:end="391:69"> <expr pos:start="391:69" pos:end="391:69"><literal type="number" pos:start="391:69" pos:end="391:69">8</literal></expr> </then><else pos:start="391:71" pos:end="393:17">:

                <expr pos:start="393:17" pos:end="393:17"><literal type="number" pos:start="393:17" pos:end="393:17">1</literal></expr></else></ternary></expr></else></ternary></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="397:13" pos:end="405:26"><if pos:start="397:13" pos:end="405:26">if <condition pos:start="397:16" pos:end="403:75">(<expr pos:start="397:17" pos:end="403:74"><call pos:start="397:17" pos:end="403:70"><name pos:start="397:17" pos:end="397:26">initFilter</name><argument_list pos:start="397:27" pos:end="403:70">(<argument pos:start="397:28" pos:end="397:41"><expr pos:start="397:28" pos:end="397:41"><operator pos:start="397:28" pos:end="397:28">&amp;</operator><name pos:start="397:29" pos:end="397:41"><name pos:start="397:29" pos:end="397:29">c</name><operator pos:start="397:30" pos:end="397:31">-&gt;</operator><name pos:start="397:32" pos:end="397:41">hLumFilter</name></name></expr></argument>, <argument pos:start="397:44" pos:end="397:60"><expr pos:start="397:44" pos:end="397:60"><operator pos:start="397:44" pos:end="397:44">&amp;</operator><name pos:start="397:45" pos:end="397:60"><name pos:start="397:45" pos:end="397:45">c</name><operator pos:start="397:46" pos:end="397:47">-&gt;</operator><name pos:start="397:48" pos:end="397:60">hLumFilterPos</name></name></expr></argument>, <argument pos:start="397:63" pos:end="397:80"><expr pos:start="397:63" pos:end="397:80"><operator pos:start="397:63" pos:end="397:63">&amp;</operator><name pos:start="397:64" pos:end="397:80"><name pos:start="397:64" pos:end="397:64">c</name><operator pos:start="397:65" pos:end="397:66">-&gt;</operator><name pos:start="397:67" pos:end="397:80">hLumFilterSize</name></name></expr></argument>, <argument pos:start="397:83" pos:end="397:92"><expr pos:start="397:83" pos:end="397:92"><name pos:start="397:83" pos:end="397:92"><name pos:start="397:83" pos:end="397:83">c</name><operator pos:start="397:84" pos:end="397:85">-&gt;</operator><name pos:start="397:86" pos:end="397:92">lumXInc</name></name></expr></argument>,

                           <argument pos:start="399:28" pos:end="399:31"><expr pos:start="399:28" pos:end="399:31"><name pos:start="399:28" pos:end="399:31">srcW</name></expr></argument>      ,       <argument pos:start="399:46" pos:end="399:49"><expr pos:start="399:46" pos:end="399:49"><name pos:start="399:46" pos:end="399:49">dstW</name></expr></argument>, <argument pos:start="399:52" pos:end="399:62"><expr pos:start="399:52" pos:end="399:62"><name pos:start="399:52" pos:end="399:62">filterAlign</name></expr></argument>, <argument pos:start="399:65" pos:end="399:69"><expr pos:start="399:65" pos:end="399:69"><literal type="number" pos:start="399:65" pos:end="399:65">1</literal><operator pos:start="399:66" pos:end="399:67">&lt;&lt;</operator><literal type="number" pos:start="399:68" pos:end="399:69">14</literal></expr></argument>,

                           <argument pos:start="401:28" pos:end="401:78"><expr pos:start="401:28" pos:end="401:78"><ternary pos:start="401:28" pos:end="401:78"><condition pos:start="401:28" pos:end="401:49"><expr pos:start="401:28" pos:end="401:47"><operator pos:start="401:28" pos:end="401:28">(</operator><name pos:start="401:29" pos:end="401:33">flags</name><operator pos:start="401:34" pos:end="401:34">&amp;</operator><name pos:start="401:35" pos:end="401:46">SWS_BICUBLIN</name><operator pos:start="401:47" pos:end="401:47">)</operator></expr> ?</condition><then pos:start="401:51" pos:end="401:69"> <expr pos:start="401:51" pos:end="401:69"><operator pos:start="401:51" pos:end="401:51">(</operator><name pos:start="401:52" pos:end="401:56">flags</name><operator pos:start="401:57" pos:end="401:57">|</operator><name pos:start="401:58" pos:end="401:68">SWS_BICUBIC</name><operator pos:start="401:69" pos:end="401:69">)</operator></expr>  </then><else pos:start="401:72" pos:end="401:78">: <expr pos:start="401:74" pos:end="401:78"><name pos:start="401:74" pos:end="401:78">flags</name></expr></else></ternary></expr></argument>, <argument pos:start="401:81" pos:end="401:89"><expr pos:start="401:81" pos:end="401:89"><name pos:start="401:81" pos:end="401:89">cpu_flags</name></expr></argument>,

                           <argument pos:start="403:28" pos:end="403:42"><expr pos:start="403:28" pos:end="403:42"><name pos:start="403:28" pos:end="403:42"><name pos:start="403:28" pos:end="403:36">srcFilter</name><operator pos:start="403:37" pos:end="403:38">-&gt;</operator><name pos:start="403:39" pos:end="403:42">lumH</name></name></expr></argument>, <argument pos:start="403:45" pos:end="403:59"><expr pos:start="403:45" pos:end="403:59"><name pos:start="403:45" pos:end="403:59"><name pos:start="403:45" pos:end="403:53">dstFilter</name><operator pos:start="403:54" pos:end="403:55">-&gt;</operator><name pos:start="403:56" pos:end="403:59">lumH</name></name></expr></argument>, <argument pos:start="403:62" pos:end="403:69"><expr pos:start="403:62" pos:end="403:69"><name pos:start="403:62" pos:end="403:69"><name pos:start="403:62" pos:end="403:62">c</name><operator pos:start="403:63" pos:end="403:64">-&gt;</operator><name pos:start="403:65" pos:end="403:69">param</name></name></expr></argument>)</argument_list></call> <operator pos:start="403:72" pos:end="403:72">&lt;</operator> <literal type="number" pos:start="403:74" pos:end="403:74">0</literal></expr>)</condition><block type="pseudo" pos:start="405:17" pos:end="405:26"><block_content pos:start="405:17" pos:end="405:26">

                <goto pos:start="405:17" pos:end="405:26">goto <name pos:start="405:22" pos:end="405:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="407:13" pos:end="415:26"><if pos:start="407:13" pos:end="415:26">if <condition pos:start="407:16" pos:end="413:75">(<expr pos:start="407:17" pos:end="413:74"><call pos:start="407:17" pos:end="413:70"><name pos:start="407:17" pos:end="407:26">initFilter</name><argument_list pos:start="407:27" pos:end="413:70">(<argument pos:start="407:28" pos:end="407:41"><expr pos:start="407:28" pos:end="407:41"><operator pos:start="407:28" pos:end="407:28">&amp;</operator><name pos:start="407:29" pos:end="407:41"><name pos:start="407:29" pos:end="407:29">c</name><operator pos:start="407:30" pos:end="407:31">-&gt;</operator><name pos:start="407:32" pos:end="407:41">hChrFilter</name></name></expr></argument>, <argument pos:start="407:44" pos:end="407:60"><expr pos:start="407:44" pos:end="407:60"><operator pos:start="407:44" pos:end="407:44">&amp;</operator><name pos:start="407:45" pos:end="407:60"><name pos:start="407:45" pos:end="407:45">c</name><operator pos:start="407:46" pos:end="407:47">-&gt;</operator><name pos:start="407:48" pos:end="407:60">hChrFilterPos</name></name></expr></argument>, <argument pos:start="407:63" pos:end="407:80"><expr pos:start="407:63" pos:end="407:80"><operator pos:start="407:63" pos:end="407:63">&amp;</operator><name pos:start="407:64" pos:end="407:80"><name pos:start="407:64" pos:end="407:64">c</name><operator pos:start="407:65" pos:end="407:66">-&gt;</operator><name pos:start="407:67" pos:end="407:80">hChrFilterSize</name></name></expr></argument>, <argument pos:start="407:83" pos:end="407:92"><expr pos:start="407:83" pos:end="407:92"><name pos:start="407:83" pos:end="407:92"><name pos:start="407:83" pos:end="407:83">c</name><operator pos:start="407:84" pos:end="407:85">-&gt;</operator><name pos:start="407:86" pos:end="407:92">chrXInc</name></name></expr></argument>,

                           <argument pos:start="409:28" pos:end="409:37"><expr pos:start="409:28" pos:end="409:37"><name pos:start="409:28" pos:end="409:37"><name pos:start="409:28" pos:end="409:28">c</name><operator pos:start="409:29" pos:end="409:30">-&gt;</operator><name pos:start="409:31" pos:end="409:37">chrSrcW</name></name></expr></argument>, <argument pos:start="409:40" pos:end="409:49"><expr pos:start="409:40" pos:end="409:49"><name pos:start="409:40" pos:end="409:49"><name pos:start="409:40" pos:end="409:40">c</name><operator pos:start="409:41" pos:end="409:42">-&gt;</operator><name pos:start="409:43" pos:end="409:49">chrDstW</name></name></expr></argument>, <argument pos:start="409:52" pos:end="409:62"><expr pos:start="409:52" pos:end="409:62"><name pos:start="409:52" pos:end="409:62">filterAlign</name></expr></argument>, <argument pos:start="409:65" pos:end="409:69"><expr pos:start="409:65" pos:end="409:69"><literal type="number" pos:start="409:65" pos:end="409:65">1</literal><operator pos:start="409:66" pos:end="409:67">&lt;&lt;</operator><literal type="number" pos:start="409:68" pos:end="409:69">14</literal></expr></argument>,

                           <argument pos:start="411:28" pos:end="411:78"><expr pos:start="411:28" pos:end="411:78"><ternary pos:start="411:28" pos:end="411:78"><condition pos:start="411:28" pos:end="411:49"><expr pos:start="411:28" pos:end="411:47"><operator pos:start="411:28" pos:end="411:28">(</operator><name pos:start="411:29" pos:end="411:33">flags</name><operator pos:start="411:34" pos:end="411:34">&amp;</operator><name pos:start="411:35" pos:end="411:46">SWS_BICUBLIN</name><operator pos:start="411:47" pos:end="411:47">)</operator></expr> ?</condition><then pos:start="411:51" pos:end="411:70"> <expr pos:start="411:51" pos:end="411:70"><operator pos:start="411:51" pos:end="411:51">(</operator><name pos:start="411:52" pos:end="411:56">flags</name><operator pos:start="411:57" pos:end="411:57">|</operator><name pos:start="411:58" pos:end="411:69">SWS_BILINEAR</name><operator pos:start="411:70" pos:end="411:70">)</operator></expr> </then><else pos:start="411:72" pos:end="411:78">: <expr pos:start="411:74" pos:end="411:78"><name pos:start="411:74" pos:end="411:78">flags</name></expr></else></ternary></expr></argument>, <argument pos:start="411:81" pos:end="411:89"><expr pos:start="411:81" pos:end="411:89"><name pos:start="411:81" pos:end="411:89">cpu_flags</name></expr></argument>,

                           <argument pos:start="413:28" pos:end="413:42"><expr pos:start="413:28" pos:end="413:42"><name pos:start="413:28" pos:end="413:42"><name pos:start="413:28" pos:end="413:36">srcFilter</name><operator pos:start="413:37" pos:end="413:38">-&gt;</operator><name pos:start="413:39" pos:end="413:42">chrH</name></name></expr></argument>, <argument pos:start="413:45" pos:end="413:59"><expr pos:start="413:45" pos:end="413:59"><name pos:start="413:45" pos:end="413:59"><name pos:start="413:45" pos:end="413:53">dstFilter</name><operator pos:start="413:54" pos:end="413:55">-&gt;</operator><name pos:start="413:56" pos:end="413:59">chrH</name></name></expr></argument>, <argument pos:start="413:62" pos:end="413:69"><expr pos:start="413:62" pos:end="413:69"><name pos:start="413:62" pos:end="413:69"><name pos:start="413:62" pos:end="413:62">c</name><operator pos:start="413:63" pos:end="413:64">-&gt;</operator><name pos:start="413:65" pos:end="413:69">param</name></name></expr></argument>)</argument_list></call> <operator pos:start="413:72" pos:end="413:72">&lt;</operator> <literal type="number" pos:start="413:74" pos:end="413:74">0</literal></expr>)</condition><block type="pseudo" pos:start="415:17" pos:end="415:26"><block_content pos:start="415:17" pos:end="415:26">

                <goto pos:start="415:17" pos:end="415:26">goto <name pos:start="415:22" pos:end="415:25">fail</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block> <comment type="line" pos:start="419:7" pos:end="419:36">// initialize horizontal stuff</comment>



    <comment type="block" pos:start="423:5" pos:end="423:58">/* precalculate vertical scaler filter coefficients */</comment>

    <block pos:start="425:5" pos:end="495:5">{<block_content pos:start="427:9" pos:end="494:0">

        <decl_stmt pos:start="427:9" pos:end="433:14"><decl pos:start="427:9" pos:end="433:13"><type pos:start="427:9" pos:end="427:17"><specifier pos:start="427:9" pos:end="427:13">const</specifier> <name pos:start="427:15" pos:end="427:17">int</name></type> <name pos:start="427:19" pos:end="427:29">filterAlign</name><init pos:start="427:30" pos:end="433:13">=

            <expr pos:start="429:13" pos:end="433:13"><ternary pos:start="429:13" pos:end="433:13"><condition pos:start="429:13" pos:end="429:89"><expr pos:start="429:13" pos:end="429:87"><operator pos:start="429:13" pos:end="429:13">(</operator><name pos:start="429:14" pos:end="429:21">HAVE_MMX</name>     <operator pos:start="429:27" pos:end="429:28">&amp;&amp;</operator> <name pos:start="429:30" pos:end="429:38">cpu_flags</name> <operator pos:start="429:40" pos:end="429:40">&amp;</operator> <name pos:start="429:42" pos:end="429:56">AV_CPU_FLAG_MMX</name><operator pos:start="429:57" pos:end="429:57">)</operator> <operator pos:start="429:59" pos:end="429:60">&amp;&amp;</operator> <operator pos:start="429:62" pos:end="429:62">(</operator><name pos:start="429:63" pos:end="429:67">flags</name> <operator pos:start="429:69" pos:end="429:69">&amp;</operator> <name pos:start="429:71" pos:end="429:86">SWS_ACCURATE_RND</name><operator pos:start="429:87" pos:end="429:87">)</operator></expr> ?</condition><then pos:start="429:91" pos:end="429:91"> <expr pos:start="429:91" pos:end="429:91"><literal type="number" pos:start="429:91" pos:end="429:91">2</literal></expr> </then><else pos:start="429:93" pos:end="433:13">:

            <expr pos:start="431:13" pos:end="433:13"><ternary pos:start="431:13" pos:end="433:13"><condition pos:start="431:13" pos:end="431:63"><expr pos:start="431:13" pos:end="431:61"><operator pos:start="431:13" pos:end="431:13">(</operator><name pos:start="431:14" pos:end="431:25">HAVE_ALTIVEC</name> <operator pos:start="431:27" pos:end="431:28">&amp;&amp;</operator> <name pos:start="431:30" pos:end="431:38">cpu_flags</name> <operator pos:start="431:40" pos:end="431:40">&amp;</operator> <name pos:start="431:42" pos:end="431:60">AV_CPU_FLAG_ALTIVEC</name><operator pos:start="431:61" pos:end="431:61">)</operator></expr> ?</condition><then pos:start="431:65" pos:end="431:65"> <expr pos:start="431:65" pos:end="431:65"><literal type="number" pos:start="431:65" pos:end="431:65">8</literal></expr> </then><else pos:start="431:67" pos:end="433:13">:

            <expr pos:start="433:13" pos:end="433:13"><literal type="number" pos:start="433:13" pos:end="433:13">1</literal></expr></else></ternary></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="437:9" pos:end="445:22"><if pos:start="437:9" pos:end="445:22">if <condition pos:start="437:12" pos:end="443:71">(<expr pos:start="437:13" pos:end="443:70"><call pos:start="437:13" pos:end="443:66"><name pos:start="437:13" pos:end="437:22">initFilter</name><argument_list pos:start="437:23" pos:end="443:66">(<argument pos:start="437:24" pos:end="437:37"><expr pos:start="437:24" pos:end="437:37"><operator pos:start="437:24" pos:end="437:24">&amp;</operator><name pos:start="437:25" pos:end="437:37"><name pos:start="437:25" pos:end="437:25">c</name><operator pos:start="437:26" pos:end="437:27">-&gt;</operator><name pos:start="437:28" pos:end="437:37">vLumFilter</name></name></expr></argument>, <argument pos:start="437:40" pos:end="437:56"><expr pos:start="437:40" pos:end="437:56"><operator pos:start="437:40" pos:end="437:40">&amp;</operator><name pos:start="437:41" pos:end="437:56"><name pos:start="437:41" pos:end="437:41">c</name><operator pos:start="437:42" pos:end="437:43">-&gt;</operator><name pos:start="437:44" pos:end="437:56">vLumFilterPos</name></name></expr></argument>, <argument pos:start="437:59" pos:end="437:76"><expr pos:start="437:59" pos:end="437:76"><operator pos:start="437:59" pos:end="437:59">&amp;</operator><name pos:start="437:60" pos:end="437:76"><name pos:start="437:60" pos:end="437:60">c</name><operator pos:start="437:61" pos:end="437:62">-&gt;</operator><name pos:start="437:63" pos:end="437:76">vLumFilterSize</name></name></expr></argument>, <argument pos:start="437:79" pos:end="437:88"><expr pos:start="437:79" pos:end="437:88"><name pos:start="437:79" pos:end="437:88"><name pos:start="437:79" pos:end="437:79">c</name><operator pos:start="437:80" pos:end="437:81">-&gt;</operator><name pos:start="437:82" pos:end="437:88">lumYInc</name></name></expr></argument>,

                       <argument pos:start="439:24" pos:end="439:27"><expr pos:start="439:24" pos:end="439:27"><name pos:start="439:24" pos:end="439:27">srcH</name></expr></argument>      ,        <argument pos:start="439:43" pos:end="439:46"><expr pos:start="439:43" pos:end="439:46"><name pos:start="439:43" pos:end="439:46">dstH</name></expr></argument>, <argument pos:start="439:49" pos:end="439:59"><expr pos:start="439:49" pos:end="439:59"><name pos:start="439:49" pos:end="439:59">filterAlign</name></expr></argument>, <argument pos:start="439:62" pos:end="439:68"><expr pos:start="439:62" pos:end="439:68"><operator pos:start="439:62" pos:end="439:62">(</operator><literal type="number" pos:start="439:63" pos:end="439:63">1</literal><operator pos:start="439:64" pos:end="439:65">&lt;&lt;</operator><literal type="number" pos:start="439:66" pos:end="439:67">12</literal><operator pos:start="439:68" pos:end="439:68">)</operator></expr></argument>,

                       <argument pos:start="441:24" pos:end="441:74"><expr pos:start="441:24" pos:end="441:74"><ternary pos:start="441:24" pos:end="441:74"><condition pos:start="441:24" pos:end="441:45"><expr pos:start="441:24" pos:end="441:43"><operator pos:start="441:24" pos:end="441:24">(</operator><name pos:start="441:25" pos:end="441:29">flags</name><operator pos:start="441:30" pos:end="441:30">&amp;</operator><name pos:start="441:31" pos:end="441:42">SWS_BICUBLIN</name><operator pos:start="441:43" pos:end="441:43">)</operator></expr> ?</condition><then pos:start="441:47" pos:end="441:65"> <expr pos:start="441:47" pos:end="441:65"><operator pos:start="441:47" pos:end="441:47">(</operator><name pos:start="441:48" pos:end="441:52">flags</name><operator pos:start="441:53" pos:end="441:53">|</operator><name pos:start="441:54" pos:end="441:64">SWS_BICUBIC</name><operator pos:start="441:65" pos:end="441:65">)</operator></expr>  </then><else pos:start="441:68" pos:end="441:74">: <expr pos:start="441:70" pos:end="441:74"><name pos:start="441:70" pos:end="441:74">flags</name></expr></else></ternary></expr></argument>, <argument pos:start="441:77" pos:end="441:85"><expr pos:start="441:77" pos:end="441:85"><name pos:start="441:77" pos:end="441:85">cpu_flags</name></expr></argument>,

                       <argument pos:start="443:24" pos:end="443:38"><expr pos:start="443:24" pos:end="443:38"><name pos:start="443:24" pos:end="443:38"><name pos:start="443:24" pos:end="443:32">srcFilter</name><operator pos:start="443:33" pos:end="443:34">-&gt;</operator><name pos:start="443:35" pos:end="443:38">lumV</name></name></expr></argument>, <argument pos:start="443:41" pos:end="443:55"><expr pos:start="443:41" pos:end="443:55"><name pos:start="443:41" pos:end="443:55"><name pos:start="443:41" pos:end="443:49">dstFilter</name><operator pos:start="443:50" pos:end="443:51">-&gt;</operator><name pos:start="443:52" pos:end="443:55">lumV</name></name></expr></argument>, <argument pos:start="443:58" pos:end="443:65"><expr pos:start="443:58" pos:end="443:65"><name pos:start="443:58" pos:end="443:65"><name pos:start="443:58" pos:end="443:58">c</name><operator pos:start="443:59" pos:end="443:60">-&gt;</operator><name pos:start="443:61" pos:end="443:65">param</name></name></expr></argument>)</argument_list></call> <operator pos:start="443:68" pos:end="443:68">&lt;</operator> <literal type="number" pos:start="443:70" pos:end="443:70">0</literal></expr>)</condition><block type="pseudo" pos:start="445:13" pos:end="445:22"><block_content pos:start="445:13" pos:end="445:22">

            <goto pos:start="445:13" pos:end="445:22">goto <name pos:start="445:18" pos:end="445:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="447:9" pos:end="460:0"><if pos:start="447:9" pos:end="460:0">if <condition pos:start="447:12" pos:end="453:71">(<expr pos:start="447:13" pos:end="453:70"><call pos:start="447:13" pos:end="453:66"><name pos:start="447:13" pos:end="447:22">initFilter</name><argument_list pos:start="447:23" pos:end="453:66">(<argument pos:start="447:24" pos:end="447:37"><expr pos:start="447:24" pos:end="447:37"><operator pos:start="447:24" pos:end="447:24">&amp;</operator><name pos:start="447:25" pos:end="447:37"><name pos:start="447:25" pos:end="447:25">c</name><operator pos:start="447:26" pos:end="447:27">-&gt;</operator><name pos:start="447:28" pos:end="447:37">vChrFilter</name></name></expr></argument>, <argument pos:start="447:40" pos:end="447:56"><expr pos:start="447:40" pos:end="447:56"><operator pos:start="447:40" pos:end="447:40">&amp;</operator><name pos:start="447:41" pos:end="447:56"><name pos:start="447:41" pos:end="447:41">c</name><operator pos:start="447:42" pos:end="447:43">-&gt;</operator><name pos:start="447:44" pos:end="447:56">vChrFilterPos</name></name></expr></argument>, <argument pos:start="447:59" pos:end="447:76"><expr pos:start="447:59" pos:end="447:76"><operator pos:start="447:59" pos:end="447:59">&amp;</operator><name pos:start="447:60" pos:end="447:76"><name pos:start="447:60" pos:end="447:60">c</name><operator pos:start="447:61" pos:end="447:62">-&gt;</operator><name pos:start="447:63" pos:end="447:76">vChrFilterSize</name></name></expr></argument>, <argument pos:start="447:79" pos:end="447:88"><expr pos:start="447:79" pos:end="447:88"><name pos:start="447:79" pos:end="447:88"><name pos:start="447:79" pos:end="447:79">c</name><operator pos:start="447:80" pos:end="447:81">-&gt;</operator><name pos:start="447:82" pos:end="447:88">chrYInc</name></name></expr></argument>,

                       <argument pos:start="449:24" pos:end="449:33"><expr pos:start="449:24" pos:end="449:33"><name pos:start="449:24" pos:end="449:33"><name pos:start="449:24" pos:end="449:24">c</name><operator pos:start="449:25" pos:end="449:26">-&gt;</operator><name pos:start="449:27" pos:end="449:33">chrSrcH</name></name></expr></argument>, <argument pos:start="449:36" pos:end="449:45"><expr pos:start="449:36" pos:end="449:45"><name pos:start="449:36" pos:end="449:45"><name pos:start="449:36" pos:end="449:36">c</name><operator pos:start="449:37" pos:end="449:38">-&gt;</operator><name pos:start="449:39" pos:end="449:45">chrDstH</name></name></expr></argument>, <argument pos:start="449:48" pos:end="449:58"><expr pos:start="449:48" pos:end="449:58"><name pos:start="449:48" pos:end="449:58">filterAlign</name></expr></argument>, <argument pos:start="449:61" pos:end="449:67"><expr pos:start="449:61" pos:end="449:67"><operator pos:start="449:61" pos:end="449:61">(</operator><literal type="number" pos:start="449:62" pos:end="449:62">1</literal><operator pos:start="449:63" pos:end="449:64">&lt;&lt;</operator><literal type="number" pos:start="449:65" pos:end="449:66">12</literal><operator pos:start="449:67" pos:end="449:67">)</operator></expr></argument>,

                       <argument pos:start="451:24" pos:end="451:74"><expr pos:start="451:24" pos:end="451:74"><ternary pos:start="451:24" pos:end="451:74"><condition pos:start="451:24" pos:end="451:45"><expr pos:start="451:24" pos:end="451:43"><operator pos:start="451:24" pos:end="451:24">(</operator><name pos:start="451:25" pos:end="451:29">flags</name><operator pos:start="451:30" pos:end="451:30">&amp;</operator><name pos:start="451:31" pos:end="451:42">SWS_BICUBLIN</name><operator pos:start="451:43" pos:end="451:43">)</operator></expr> ?</condition><then pos:start="451:47" pos:end="451:66"> <expr pos:start="451:47" pos:end="451:66"><operator pos:start="451:47" pos:end="451:47">(</operator><name pos:start="451:48" pos:end="451:52">flags</name><operator pos:start="451:53" pos:end="451:53">|</operator><name pos:start="451:54" pos:end="451:65">SWS_BILINEAR</name><operator pos:start="451:66" pos:end="451:66">)</operator></expr> </then><else pos:start="451:68" pos:end="451:74">: <expr pos:start="451:70" pos:end="451:74"><name pos:start="451:70" pos:end="451:74">flags</name></expr></else></ternary></expr></argument>, <argument pos:start="451:77" pos:end="451:85"><expr pos:start="451:77" pos:end="451:85"><name pos:start="451:77" pos:end="451:85">cpu_flags</name></expr></argument>,

                       <argument pos:start="453:24" pos:end="453:38"><expr pos:start="453:24" pos:end="453:38"><name pos:start="453:24" pos:end="453:38"><name pos:start="453:24" pos:end="453:32">srcFilter</name><operator pos:start="453:33" pos:end="453:34">-&gt;</operator><name pos:start="453:35" pos:end="453:38">chrV</name></name></expr></argument>, <argument pos:start="453:41" pos:end="453:55"><expr pos:start="453:41" pos:end="453:55"><name pos:start="453:41" pos:end="453:55"><name pos:start="453:41" pos:end="453:49">dstFilter</name><operator pos:start="453:50" pos:end="453:51">-&gt;</operator><name pos:start="453:52" pos:end="453:55">chrV</name></name></expr></argument>, <argument pos:start="453:58" pos:end="453:65"><expr pos:start="453:58" pos:end="453:65"><name pos:start="453:58" pos:end="453:65"><name pos:start="453:58" pos:end="453:58">c</name><operator pos:start="453:59" pos:end="453:60">-&gt;</operator><name pos:start="453:61" pos:end="453:65">param</name></name></expr></argument>)</argument_list></call> <operator pos:start="453:68" pos:end="453:68">&lt;</operator> <literal type="number" pos:start="453:70" pos:end="453:70">0</literal></expr>)</condition><block type="pseudo" pos:start="455:13" pos:end="460:0"><block_content pos:start="455:13" pos:end="460:0">

            <goto pos:start="455:13" pos:end="460:0">goto <name pos:start="455:18" pos:end="455:21">fail</name>;</goto></block_content></block></if></if_stmt>



<cpp:if pos:start="459:1" pos:end="459:16">#<cpp:directive pos:start="459:2" pos:end="459:3">if</cpp:directive> <expr pos:start="459:5" pos:end="459:16"><name pos:start="459:5" pos:end="459:16">HAVE_ALTIVEC</name></expr></cpp:if>

        <expr_stmt pos:start="461:9" pos:end="461:107"><expr pos:start="461:9" pos:end="461:106"><call pos:start="461:9" pos:end="461:106"><name pos:start="461:9" pos:end="461:24">FF_ALLOC_OR_GOTO</name><argument_list pos:start="461:25" pos:end="461:106">(<argument pos:start="461:26" pos:end="461:26"><expr pos:start="461:26" pos:end="461:26"><name pos:start="461:26" pos:end="461:26">c</name></expr></argument>, <argument pos:start="461:29" pos:end="461:43"><expr pos:start="461:29" pos:end="461:43"><name pos:start="461:29" pos:end="461:43"><name pos:start="461:29" pos:end="461:29">c</name><operator pos:start="461:30" pos:end="461:31">-&gt;</operator><name pos:start="461:32" pos:end="461:43">vYCoeffsBank</name></name></expr></argument>, <argument pos:start="461:46" pos:end="461:99"><expr pos:start="461:46" pos:end="461:99">sizeof <operator pos:start="461:53" pos:end="461:53">(</operator><name pos:start="461:54" pos:end="461:59">vector</name> <name pos:start="461:61" pos:end="461:66">signed</name> <name pos:start="461:68" pos:end="461:72">short</name><operator pos:start="461:73" pos:end="461:73">)</operator><operator pos:start="461:74" pos:end="461:74">*</operator><name pos:start="461:75" pos:end="461:91"><name pos:start="461:75" pos:end="461:75">c</name><operator pos:start="461:76" pos:end="461:77">-&gt;</operator><name pos:start="461:78" pos:end="461:91">vLumFilterSize</name></name><operator pos:start="461:92" pos:end="461:92">*</operator><name pos:start="461:93" pos:end="461:99"><name pos:start="461:93" pos:end="461:93">c</name><operator pos:start="461:94" pos:end="461:95">-&gt;</operator><name pos:start="461:96" pos:end="461:99">dstH</name></name></expr></argument>, <argument pos:start="461:102" pos:end="461:105"><expr pos:start="461:102" pos:end="461:105"><name pos:start="461:102" pos:end="461:105">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="463:9" pos:end="463:110"><expr pos:start="463:9" pos:end="463:109"><call pos:start="463:9" pos:end="463:109"><name pos:start="463:9" pos:end="463:24">FF_ALLOC_OR_GOTO</name><argument_list pos:start="463:25" pos:end="463:109">(<argument pos:start="463:26" pos:end="463:26"><expr pos:start="463:26" pos:end="463:26"><name pos:start="463:26" pos:end="463:26">c</name></expr></argument>, <argument pos:start="463:29" pos:end="463:43"><expr pos:start="463:29" pos:end="463:43"><name pos:start="463:29" pos:end="463:43"><name pos:start="463:29" pos:end="463:29">c</name><operator pos:start="463:30" pos:end="463:31">-&gt;</operator><name pos:start="463:32" pos:end="463:43">vCCoeffsBank</name></name></expr></argument>, <argument pos:start="463:46" pos:end="463:102"><expr pos:start="463:46" pos:end="463:102">sizeof <operator pos:start="463:53" pos:end="463:53">(</operator><name pos:start="463:54" pos:end="463:59">vector</name> <name pos:start="463:61" pos:end="463:66">signed</name> <name pos:start="463:68" pos:end="463:72">short</name><operator pos:start="463:73" pos:end="463:73">)</operator><operator pos:start="463:74" pos:end="463:74">*</operator><name pos:start="463:75" pos:end="463:91"><name pos:start="463:75" pos:end="463:75">c</name><operator pos:start="463:76" pos:end="463:77">-&gt;</operator><name pos:start="463:78" pos:end="463:91">vChrFilterSize</name></name><operator pos:start="463:92" pos:end="463:92">*</operator><name pos:start="463:93" pos:end="463:102"><name pos:start="463:93" pos:end="463:93">c</name><operator pos:start="463:94" pos:end="463:95">-&gt;</operator><name pos:start="463:96" pos:end="463:102">chrDstH</name></name></expr></argument>, <argument pos:start="463:105" pos:end="463:108"><expr pos:start="463:105" pos:end="463:108"><name pos:start="463:105" pos:end="463:108">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="467:9" pos:end="477:9">for <control pos:start="467:13" pos:end="467:49">(<init pos:start="467:14" pos:end="467:17"><expr pos:start="467:14" pos:end="467:16"><name pos:start="467:14" pos:end="467:14">i</name><operator pos:start="467:15" pos:end="467:15">=</operator><literal type="number" pos:start="467:16" pos:end="467:16">0</literal></expr>;</init><condition pos:start="467:18" pos:end="467:45"><expr pos:start="467:18" pos:end="467:44"><name pos:start="467:18" pos:end="467:18">i</name><operator pos:start="467:19" pos:end="467:19">&lt;</operator><name pos:start="467:20" pos:end="467:36"><name pos:start="467:20" pos:end="467:20">c</name><operator pos:start="467:21" pos:end="467:22">-&gt;</operator><name pos:start="467:23" pos:end="467:36">vLumFilterSize</name></name><operator pos:start="467:37" pos:end="467:37">*</operator><name pos:start="467:38" pos:end="467:44"><name pos:start="467:38" pos:end="467:38">c</name><operator pos:start="467:39" pos:end="467:40">-&gt;</operator><name pos:start="467:41" pos:end="467:44">dstH</name></name></expr>;</condition><incr pos:start="467:46" pos:end="467:48"><expr pos:start="467:46" pos:end="467:48"><name pos:start="467:46" pos:end="467:46">i</name><operator pos:start="467:47" pos:end="467:48">++</operator></expr></incr>)</control> <block pos:start="467:51" pos:end="477:9">{<block_content pos:start="469:13" pos:end="475:40">

            <decl_stmt pos:start="469:13" pos:end="469:18"><decl pos:start="469:13" pos:end="469:17"><type pos:start="469:13" pos:end="469:15"><name pos:start="469:13" pos:end="469:15">int</name></type> <name pos:start="469:17" pos:end="469:17">j</name></decl>;</decl_stmt>

            <decl_stmt pos:start="471:13" pos:end="471:52"><decl pos:start="471:13" pos:end="471:51"><type pos:start="471:13" pos:end="471:19"><name pos:start="471:13" pos:end="471:17">short</name> <modifier pos:start="471:19" pos:end="471:19">*</modifier></type><name pos:start="471:20" pos:end="471:20">p</name> <init pos:start="471:22" pos:end="471:51">= <expr pos:start="471:24" pos:end="471:51"><operator pos:start="471:24" pos:end="471:24">(</operator><name pos:start="471:25" pos:end="471:29">short</name> <operator pos:start="471:31" pos:end="471:31">*</operator><operator pos:start="471:32" pos:end="471:32">)</operator><operator pos:start="471:33" pos:end="471:33">&amp;</operator><name pos:start="471:34" pos:end="471:51"><name pos:start="471:34" pos:end="471:34">c</name><operator pos:start="471:35" pos:end="471:36">-&gt;</operator><name pos:start="471:37" pos:end="471:48">vYCoeffsBank</name><index pos:start="471:49" pos:end="471:51">[<expr pos:start="471:50" pos:end="471:50"><name pos:start="471:50" pos:end="471:50">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <for pos:start="473:13" pos:end="475:40">for <control pos:start="473:17" pos:end="473:29">(<init pos:start="473:18" pos:end="473:21"><expr pos:start="473:18" pos:end="473:20"><name pos:start="473:18" pos:end="473:18">j</name><operator pos:start="473:19" pos:end="473:19">=</operator><literal type="number" pos:start="473:20" pos:end="473:20">0</literal></expr>;</init><condition pos:start="473:22" pos:end="473:25"><expr pos:start="473:22" pos:end="473:24"><name pos:start="473:22" pos:end="473:22">j</name><operator pos:start="473:23" pos:end="473:23">&lt;</operator><literal type="number" pos:start="473:24" pos:end="473:24">8</literal></expr>;</condition><incr pos:start="473:26" pos:end="473:28"><expr pos:start="473:26" pos:end="473:28"><name pos:start="473:26" pos:end="473:26">j</name><operator pos:start="473:27" pos:end="473:28">++</operator></expr></incr>)</control><block type="pseudo" pos:start="475:17" pos:end="475:40"><block_content pos:start="475:17" pos:end="475:40">

                <expr_stmt pos:start="475:17" pos:end="475:40"><expr pos:start="475:17" pos:end="475:39"><name pos:start="475:17" pos:end="475:20"><name pos:start="475:17" pos:end="475:17">p</name><index pos:start="475:18" pos:end="475:20">[<expr pos:start="475:19" pos:end="475:19"><name pos:start="475:19" pos:end="475:19">j</name></expr>]</index></name> <operator pos:start="475:22" pos:end="475:22">=</operator> <name pos:start="475:24" pos:end="475:39"><name pos:start="475:24" pos:end="475:24">c</name><operator pos:start="475:25" pos:end="475:26">-&gt;</operator><name pos:start="475:27" pos:end="475:36">vLumFilter</name><index pos:start="475:37" pos:end="475:39">[<expr pos:start="475:38" pos:end="475:38"><name pos:start="475:38" pos:end="475:38">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></for>



        <for pos:start="481:9" pos:end="494:0">for <control pos:start="481:13" pos:end="481:52">(<init pos:start="481:14" pos:end="481:17"><expr pos:start="481:14" pos:end="481:16"><name pos:start="481:14" pos:end="481:14">i</name><operator pos:start="481:15" pos:end="481:15">=</operator><literal type="number" pos:start="481:16" pos:end="481:16">0</literal></expr>;</init><condition pos:start="481:18" pos:end="481:48"><expr pos:start="481:18" pos:end="481:47"><name pos:start="481:18" pos:end="481:18">i</name><operator pos:start="481:19" pos:end="481:19">&lt;</operator><name pos:start="481:20" pos:end="481:36"><name pos:start="481:20" pos:end="481:20">c</name><operator pos:start="481:21" pos:end="481:22">-&gt;</operator><name pos:start="481:23" pos:end="481:36">vChrFilterSize</name></name><operator pos:start="481:37" pos:end="481:37">*</operator><name pos:start="481:38" pos:end="481:47"><name pos:start="481:38" pos:end="481:38">c</name><operator pos:start="481:39" pos:end="481:40">-&gt;</operator><name pos:start="481:41" pos:end="481:47">chrDstH</name></name></expr>;</condition><incr pos:start="481:49" pos:end="481:51"><expr pos:start="481:49" pos:end="481:51"><name pos:start="481:49" pos:end="481:49">i</name><operator pos:start="481:50" pos:end="481:51">++</operator></expr></incr>)</control> <block pos:start="481:54" pos:end="494:0">{<block_content pos:start="483:13" pos:end="489:40">

            <decl_stmt pos:start="483:13" pos:end="483:18"><decl pos:start="483:13" pos:end="483:17"><type pos:start="483:13" pos:end="483:15"><name pos:start="483:13" pos:end="483:15">int</name></type> <name pos:start="483:17" pos:end="483:17">j</name></decl>;</decl_stmt>

            <decl_stmt pos:start="485:13" pos:end="485:52"><decl pos:start="485:13" pos:end="485:51"><type pos:start="485:13" pos:end="485:19"><name pos:start="485:13" pos:end="485:17">short</name> <modifier pos:start="485:19" pos:end="485:19">*</modifier></type><name pos:start="485:20" pos:end="485:20">p</name> <init pos:start="485:22" pos:end="485:51">= <expr pos:start="485:24" pos:end="485:51"><operator pos:start="485:24" pos:end="485:24">(</operator><name pos:start="485:25" pos:end="485:29">short</name> <operator pos:start="485:31" pos:end="485:31">*</operator><operator pos:start="485:32" pos:end="485:32">)</operator><operator pos:start="485:33" pos:end="485:33">&amp;</operator><name pos:start="485:34" pos:end="485:51"><name pos:start="485:34" pos:end="485:34">c</name><operator pos:start="485:35" pos:end="485:36">-&gt;</operator><name pos:start="485:37" pos:end="485:48">vCCoeffsBank</name><index pos:start="485:49" pos:end="485:51">[<expr pos:start="485:50" pos:end="485:50"><name pos:start="485:50" pos:end="485:50">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <for pos:start="487:13" pos:end="489:40">for <control pos:start="487:17" pos:end="487:29">(<init pos:start="487:18" pos:end="487:21"><expr pos:start="487:18" pos:end="487:20"><name pos:start="487:18" pos:end="487:18">j</name><operator pos:start="487:19" pos:end="487:19">=</operator><literal type="number" pos:start="487:20" pos:end="487:20">0</literal></expr>;</init><condition pos:start="487:22" pos:end="487:25"><expr pos:start="487:22" pos:end="487:24"><name pos:start="487:22" pos:end="487:22">j</name><operator pos:start="487:23" pos:end="487:23">&lt;</operator><literal type="number" pos:start="487:24" pos:end="487:24">8</literal></expr>;</condition><incr pos:start="487:26" pos:end="487:28"><expr pos:start="487:26" pos:end="487:28"><name pos:start="487:26" pos:end="487:26">j</name><operator pos:start="487:27" pos:end="487:28">++</operator></expr></incr>)</control><block type="pseudo" pos:start="489:17" pos:end="489:40"><block_content pos:start="489:17" pos:end="489:40">

                <expr_stmt pos:start="489:17" pos:end="489:40"><expr pos:start="489:17" pos:end="489:39"><name pos:start="489:17" pos:end="489:20"><name pos:start="489:17" pos:end="489:17">p</name><index pos:start="489:18" pos:end="489:20">[<expr pos:start="489:19" pos:end="489:19"><name pos:start="489:19" pos:end="489:19">j</name></expr>]</index></name> <operator pos:start="489:22" pos:end="489:22">=</operator> <name pos:start="489:24" pos:end="489:39"><name pos:start="489:24" pos:end="489:24">c</name><operator pos:start="489:25" pos:end="489:26">-&gt;</operator><name pos:start="489:27" pos:end="489:36">vChrFilter</name><index pos:start="489:37" pos:end="489:39">[<expr pos:start="489:38" pos:end="489:38"><name pos:start="489:38" pos:end="489:38">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></for>

<cpp:endif pos:start="493:1" pos:end="493:6">#<cpp:directive pos:start="493:2" pos:end="493:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block>



    <comment type="line" pos:start="499:5" pos:end="499:89">// calculate buffer sizes so that they won't run out while handling these damn slices</comment>

    <expr_stmt pos:start="501:5" pos:end="501:38"><expr pos:start="501:5" pos:end="501:37"><name pos:start="501:5" pos:end="501:18"><name pos:start="501:5" pos:end="501:5">c</name><operator pos:start="501:6" pos:end="501:7">-&gt;</operator><name pos:start="501:8" pos:end="501:18">vLumBufSize</name></name><operator pos:start="501:19" pos:end="501:19">=</operator> <name pos:start="501:21" pos:end="501:37"><name pos:start="501:21" pos:end="501:21">c</name><operator pos:start="501:22" pos:end="501:23">-&gt;</operator><name pos:start="501:24" pos:end="501:37">vLumFilterSize</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="503:5" pos:end="503:38"><expr pos:start="503:5" pos:end="503:37"><name pos:start="503:5" pos:end="503:18"><name pos:start="503:5" pos:end="503:5">c</name><operator pos:start="503:6" pos:end="503:7">-&gt;</operator><name pos:start="503:8" pos:end="503:18">vChrBufSize</name></name><operator pos:start="503:19" pos:end="503:19">=</operator> <name pos:start="503:21" pos:end="503:37"><name pos:start="503:21" pos:end="503:21">c</name><operator pos:start="503:22" pos:end="503:23">-&gt;</operator><name pos:start="503:24" pos:end="503:37">vChrFilterSize</name></name></expr>;</expr_stmt>

    <for pos:start="505:5" pos:end="527:5">for <control pos:start="505:9" pos:end="505:26">(<init pos:start="505:10" pos:end="505:13"><expr pos:start="505:10" pos:end="505:12"><name pos:start="505:10" pos:end="505:10">i</name><operator pos:start="505:11" pos:end="505:11">=</operator><literal type="number" pos:start="505:12" pos:end="505:12">0</literal></expr>;</init> <condition pos:start="505:15" pos:end="505:21"><expr pos:start="505:15" pos:end="505:20"><name pos:start="505:15" pos:end="505:15">i</name><operator pos:start="505:16" pos:end="505:16">&lt;</operator><name pos:start="505:17" pos:end="505:20">dstH</name></expr>;</condition> <incr pos:start="505:23" pos:end="505:25"><expr pos:start="505:23" pos:end="505:25"><name pos:start="505:23" pos:end="505:23">i</name><operator pos:start="505:24" pos:end="505:25">++</operator></expr></incr>)</control> <block pos:start="505:28" pos:end="527:5">{<block_content pos:start="507:9" pos:end="525:86">

        <decl_stmt pos:start="507:9" pos:end="507:38"><decl pos:start="507:9" pos:end="507:37"><type pos:start="507:9" pos:end="507:11"><name pos:start="507:9" pos:end="507:11">int</name></type> <name pos:start="507:13" pos:end="507:16">chrI</name><init pos:start="507:17" pos:end="507:37">= <expr pos:start="507:19" pos:end="507:37"><name pos:start="507:19" pos:end="507:19">i</name><operator pos:start="507:20" pos:end="507:20">*</operator><name pos:start="507:21" pos:end="507:30"><name pos:start="507:21" pos:end="507:21">c</name><operator pos:start="507:22" pos:end="507:23">-&gt;</operator><name pos:start="507:24" pos:end="507:30">chrDstH</name></name> <operator pos:start="507:32" pos:end="507:32">/</operator> <name pos:start="507:34" pos:end="507:37">dstH</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="509:9" pos:end="511:100"><decl pos:start="509:9" pos:end="511:99"><type pos:start="509:9" pos:end="509:11"><name pos:start="509:9" pos:end="509:11">int</name></type> <name pos:start="509:13" pos:end="509:21">nextSlice</name><init pos:start="509:22" pos:end="511:99">= <expr pos:start="509:24" pos:end="511:99"><call pos:start="509:24" pos:end="511:99"><name pos:start="509:24" pos:end="509:28">FFMAX</name><argument_list pos:start="509:29" pos:end="511:99">(<argument pos:start="509:30" pos:end="509:75"><expr pos:start="509:30" pos:end="509:75"><name pos:start="509:30" pos:end="509:51"><name pos:start="509:30" pos:end="509:30">c</name><operator pos:start="509:31" pos:end="509:32">-&gt;</operator><name pos:start="509:33" pos:end="509:45">vLumFilterPos</name><index pos:start="509:46" pos:end="509:51">[<expr pos:start="509:47" pos:end="509:47"><name pos:start="509:47" pos:end="509:47">i</name></expr>   ]</index></name> <operator pos:start="509:53" pos:end="509:53">+</operator> <name pos:start="509:55" pos:end="509:71"><name pos:start="509:55" pos:end="509:55">c</name><operator pos:start="509:56" pos:end="509:57">-&gt;</operator><name pos:start="509:58" pos:end="509:71">vLumFilterSize</name></name> <operator pos:start="509:73" pos:end="509:73">-</operator> <literal type="number" pos:start="509:75" pos:end="509:75">1</literal></expr></argument>,

                           <argument pos:start="511:28" pos:end="511:98"><expr pos:start="511:28" pos:end="511:98"><operator pos:start="511:28" pos:end="511:28">(</operator><operator pos:start="511:29" pos:end="511:29">(</operator><name pos:start="511:30" pos:end="511:51"><name pos:start="511:30" pos:end="511:30">c</name><operator pos:start="511:31" pos:end="511:32">-&gt;</operator><name pos:start="511:33" pos:end="511:45">vChrFilterPos</name><index pos:start="511:46" pos:end="511:51">[<expr pos:start="511:47" pos:end="511:50"><name pos:start="511:47" pos:end="511:50">chrI</name></expr>]</index></name> <operator pos:start="511:53" pos:end="511:53">+</operator> <name pos:start="511:55" pos:end="511:71"><name pos:start="511:55" pos:end="511:55">c</name><operator pos:start="511:56" pos:end="511:57">-&gt;</operator><name pos:start="511:58" pos:end="511:71">vChrFilterSize</name></name> <operator pos:start="511:73" pos:end="511:73">-</operator> <literal type="number" pos:start="511:75" pos:end="511:75">1</literal><operator pos:start="511:76" pos:end="511:76">)</operator><operator pos:start="511:77" pos:end="511:78">&lt;&lt;</operator><name pos:start="511:79" pos:end="511:97"><name pos:start="511:79" pos:end="511:79">c</name><operator pos:start="511:80" pos:end="511:81">-&gt;</operator><name pos:start="511:82" pos:end="511:97">chrSrcVSubSample</name></name><operator pos:start="511:98" pos:end="511:98">)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="515:9" pos:end="515:41"><expr pos:start="515:9" pos:end="515:40"><name pos:start="515:9" pos:end="515:17">nextSlice</name><operator pos:start="515:18" pos:end="515:20">&gt;&gt;=</operator> <name pos:start="515:22" pos:end="515:40"><name pos:start="515:22" pos:end="515:22">c</name><operator pos:start="515:23" pos:end="515:24">-&gt;</operator><name pos:start="515:25" pos:end="515:40">chrSrcVSubSample</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="517:9" pos:end="517:41"><expr pos:start="517:9" pos:end="517:40"><name pos:start="517:9" pos:end="517:17">nextSlice</name><operator pos:start="517:18" pos:end="517:20">&lt;&lt;=</operator> <name pos:start="517:22" pos:end="517:40"><name pos:start="517:22" pos:end="517:22">c</name><operator pos:start="517:23" pos:end="517:24">-&gt;</operator><name pos:start="517:25" pos:end="517:40">chrSrcVSubSample</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="519:9" pos:end="521:60"><if pos:start="519:9" pos:end="521:60">if <condition pos:start="519:12" pos:end="519:64">(<expr pos:start="519:13" pos:end="519:63"><name pos:start="519:13" pos:end="519:34"><name pos:start="519:13" pos:end="519:13">c</name><operator pos:start="519:14" pos:end="519:15">-&gt;</operator><name pos:start="519:16" pos:end="519:28">vLumFilterPos</name><index pos:start="519:29" pos:end="519:34">[<expr pos:start="519:30" pos:end="519:30"><name pos:start="519:30" pos:end="519:30">i</name></expr>   ]</index></name> <operator pos:start="519:36" pos:end="519:36">+</operator> <name pos:start="519:38" pos:end="519:51"><name pos:start="519:38" pos:end="519:38">c</name><operator pos:start="519:39" pos:end="519:40">-&gt;</operator><name pos:start="519:41" pos:end="519:51">vLumBufSize</name></name> <operator pos:start="519:53" pos:end="519:53">&lt;</operator> <name pos:start="519:55" pos:end="519:63">nextSlice</name></expr>)</condition><block type="pseudo" pos:start="521:13" pos:end="521:60"><block_content pos:start="521:13" pos:end="521:60">

            <expr_stmt pos:start="521:13" pos:end="521:60"><expr pos:start="521:13" pos:end="521:59"><name pos:start="521:13" pos:end="521:26"><name pos:start="521:13" pos:end="521:13">c</name><operator pos:start="521:14" pos:end="521:15">-&gt;</operator><name pos:start="521:16" pos:end="521:26">vLumBufSize</name></name><operator pos:start="521:27" pos:end="521:27">=</operator> <name pos:start="521:29" pos:end="521:37">nextSlice</name> <operator pos:start="521:39" pos:end="521:39">-</operator> <name pos:start="521:41" pos:end="521:59"><name pos:start="521:41" pos:end="521:41">c</name><operator pos:start="521:42" pos:end="521:43">-&gt;</operator><name pos:start="521:44" pos:end="521:56">vLumFilterPos</name><index pos:start="521:57" pos:end="521:59">[<expr pos:start="521:58" pos:end="521:58"><name pos:start="521:58" pos:end="521:58">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="523:9" pos:end="525:86"><if pos:start="523:9" pos:end="525:86">if <condition pos:start="523:12" pos:end="523:87">(<expr pos:start="523:13" pos:end="523:86"><name pos:start="523:13" pos:end="523:34"><name pos:start="523:13" pos:end="523:13">c</name><operator pos:start="523:14" pos:end="523:15">-&gt;</operator><name pos:start="523:16" pos:end="523:28">vChrFilterPos</name><index pos:start="523:29" pos:end="523:34">[<expr pos:start="523:30" pos:end="523:33"><name pos:start="523:30" pos:end="523:33">chrI</name></expr>]</index></name> <operator pos:start="523:36" pos:end="523:36">+</operator> <name pos:start="523:38" pos:end="523:51"><name pos:start="523:38" pos:end="523:38">c</name><operator pos:start="523:39" pos:end="523:40">-&gt;</operator><name pos:start="523:41" pos:end="523:51">vChrBufSize</name></name> <operator pos:start="523:53" pos:end="523:53">&lt;</operator> <operator pos:start="523:55" pos:end="523:55">(</operator><name pos:start="523:56" pos:end="523:64">nextSlice</name><operator pos:start="523:65" pos:end="523:66">&gt;&gt;</operator><name pos:start="523:67" pos:end="523:85"><name pos:start="523:67" pos:end="523:67">c</name><operator pos:start="523:68" pos:end="523:69">-&gt;</operator><name pos:start="523:70" pos:end="523:85">chrSrcVSubSample</name></name><operator pos:start="523:86" pos:end="523:86">)</operator></expr>)</condition><block type="pseudo" pos:start="525:13" pos:end="525:86"><block_content pos:start="525:13" pos:end="525:86">

            <expr_stmt pos:start="525:13" pos:end="525:86"><expr pos:start="525:13" pos:end="525:85"><name pos:start="525:13" pos:end="525:26"><name pos:start="525:13" pos:end="525:13">c</name><operator pos:start="525:14" pos:end="525:15">-&gt;</operator><name pos:start="525:16" pos:end="525:26">vChrBufSize</name></name><operator pos:start="525:27" pos:end="525:27">=</operator> <operator pos:start="525:29" pos:end="525:29">(</operator><name pos:start="525:30" pos:end="525:38">nextSlice</name><operator pos:start="525:39" pos:end="525:40">&gt;&gt;</operator><name pos:start="525:41" pos:end="525:59"><name pos:start="525:41" pos:end="525:41">c</name><operator pos:start="525:42" pos:end="525:43">-&gt;</operator><name pos:start="525:44" pos:end="525:59">chrSrcVSubSample</name></name><operator pos:start="525:60" pos:end="525:60">)</operator> <operator pos:start="525:62" pos:end="525:62">-</operator> <name pos:start="525:64" pos:end="525:85"><name pos:start="525:64" pos:end="525:64">c</name><operator pos:start="525:65" pos:end="525:66">-&gt;</operator><name pos:start="525:67" pos:end="525:79">vChrFilterPos</name><index pos:start="525:80" pos:end="525:85">[<expr pos:start="525:81" pos:end="525:84"><name pos:start="525:81" pos:end="525:84">chrI</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="line" pos:start="531:5" pos:end="531:85">// allocate pixbufs (we use dynamic allocation because otherwise we would need to</comment>

    <comment type="line" pos:start="533:5" pos:end="533:63">// allocate several megabytes to handle all possible cases)</comment>

    <expr_stmt pos:start="535:5" pos:end="535:79"><expr pos:start="535:5" pos:end="535:78"><call pos:start="535:5" pos:end="535:78"><name pos:start="535:5" pos:end="535:20">FF_ALLOC_OR_GOTO</name><argument_list pos:start="535:21" pos:end="535:78">(<argument pos:start="535:22" pos:end="535:22"><expr pos:start="535:22" pos:end="535:22"><name pos:start="535:22" pos:end="535:22">c</name></expr></argument>, <argument pos:start="535:25" pos:end="535:36"><expr pos:start="535:25" pos:end="535:36"><name pos:start="535:25" pos:end="535:36"><name pos:start="535:25" pos:end="535:25">c</name><operator pos:start="535:26" pos:end="535:27">-&gt;</operator><name pos:start="535:28" pos:end="535:36">lumPixBuf</name></name></expr></argument>, <argument pos:start="535:39" pos:end="535:71"><expr pos:start="535:39" pos:end="535:71"><name pos:start="535:39" pos:end="535:52"><name pos:start="535:39" pos:end="535:39">c</name><operator pos:start="535:40" pos:end="535:41">-&gt;</operator><name pos:start="535:42" pos:end="535:52">vLumBufSize</name></name><operator pos:start="535:53" pos:end="535:53">*</operator><literal type="number" pos:start="535:54" pos:end="535:54">2</literal><operator pos:start="535:55" pos:end="535:55">*</operator><sizeof pos:start="535:56" pos:end="535:71">sizeof<argument_list pos:start="535:62" pos:end="535:71">(<argument pos:start="535:63" pos:end="535:70"><expr pos:start="535:63" pos:end="535:70"><name pos:start="535:63" pos:end="535:69">int16_t</name><operator pos:start="535:70" pos:end="535:70">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="535:74" pos:end="535:77"><expr pos:start="535:74" pos:end="535:77"><name pos:start="535:74" pos:end="535:77">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="537:5" pos:end="537:80"><expr pos:start="537:5" pos:end="537:79"><call pos:start="537:5" pos:end="537:79"><name pos:start="537:5" pos:end="537:20">FF_ALLOC_OR_GOTO</name><argument_list pos:start="537:21" pos:end="537:79">(<argument pos:start="537:22" pos:end="537:22"><expr pos:start="537:22" pos:end="537:22"><name pos:start="537:22" pos:end="537:22">c</name></expr></argument>, <argument pos:start="537:25" pos:end="537:37"><expr pos:start="537:25" pos:end="537:37"><name pos:start="537:25" pos:end="537:37"><name pos:start="537:25" pos:end="537:25">c</name><operator pos:start="537:26" pos:end="537:27">-&gt;</operator><name pos:start="537:28" pos:end="537:37">chrUPixBuf</name></name></expr></argument>, <argument pos:start="537:40" pos:end="537:72"><expr pos:start="537:40" pos:end="537:72"><name pos:start="537:40" pos:end="537:53"><name pos:start="537:40" pos:end="537:40">c</name><operator pos:start="537:41" pos:end="537:42">-&gt;</operator><name pos:start="537:43" pos:end="537:53">vChrBufSize</name></name><operator pos:start="537:54" pos:end="537:54">*</operator><literal type="number" pos:start="537:55" pos:end="537:55">2</literal><operator pos:start="537:56" pos:end="537:56">*</operator><sizeof pos:start="537:57" pos:end="537:72">sizeof<argument_list pos:start="537:63" pos:end="537:72">(<argument pos:start="537:64" pos:end="537:71"><expr pos:start="537:64" pos:end="537:71"><name pos:start="537:64" pos:end="537:70">int16_t</name><operator pos:start="537:71" pos:end="537:71">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="537:75" pos:end="537:78"><expr pos:start="537:75" pos:end="537:78"><name pos:start="537:75" pos:end="537:78">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="539:5" pos:end="539:80"><expr pos:start="539:5" pos:end="539:79"><call pos:start="539:5" pos:end="539:79"><name pos:start="539:5" pos:end="539:20">FF_ALLOC_OR_GOTO</name><argument_list pos:start="539:21" pos:end="539:79">(<argument pos:start="539:22" pos:end="539:22"><expr pos:start="539:22" pos:end="539:22"><name pos:start="539:22" pos:end="539:22">c</name></expr></argument>, <argument pos:start="539:25" pos:end="539:37"><expr pos:start="539:25" pos:end="539:37"><name pos:start="539:25" pos:end="539:37"><name pos:start="539:25" pos:end="539:25">c</name><operator pos:start="539:26" pos:end="539:27">-&gt;</operator><name pos:start="539:28" pos:end="539:37">chrVPixBuf</name></name></expr></argument>, <argument pos:start="539:40" pos:end="539:72"><expr pos:start="539:40" pos:end="539:72"><name pos:start="539:40" pos:end="539:53"><name pos:start="539:40" pos:end="539:40">c</name><operator pos:start="539:41" pos:end="539:42">-&gt;</operator><name pos:start="539:43" pos:end="539:53">vChrBufSize</name></name><operator pos:start="539:54" pos:end="539:54">*</operator><literal type="number" pos:start="539:55" pos:end="539:55">2</literal><operator pos:start="539:56" pos:end="539:56">*</operator><sizeof pos:start="539:57" pos:end="539:72">sizeof<argument_list pos:start="539:63" pos:end="539:72">(<argument pos:start="539:64" pos:end="539:71"><expr pos:start="539:64" pos:end="539:71"><name pos:start="539:64" pos:end="539:70">int16_t</name><operator pos:start="539:71" pos:end="539:71">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="539:75" pos:end="539:78"><expr pos:start="539:75" pos:end="539:78"><name pos:start="539:75" pos:end="539:78">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="541:5" pos:end="543:84"><if pos:start="541:5" pos:end="543:84">if <condition pos:start="541:8" pos:end="541:79">(<expr pos:start="541:9" pos:end="541:78"><name pos:start="541:9" pos:end="541:28">CONFIG_SWSCALE_ALPHA</name> <operator pos:start="541:30" pos:end="541:31">&amp;&amp;</operator> <call pos:start="541:33" pos:end="541:53"><name pos:start="541:33" pos:end="541:39">isALPHA</name><argument_list pos:start="541:40" pos:end="541:53">(<argument pos:start="541:41" pos:end="541:52"><expr pos:start="541:41" pos:end="541:52"><name pos:start="541:41" pos:end="541:52"><name pos:start="541:41" pos:end="541:41">c</name><operator pos:start="541:42" pos:end="541:43">-&gt;</operator><name pos:start="541:44" pos:end="541:52">srcFormat</name></name></expr></argument>)</argument_list></call> <operator pos:start="541:55" pos:end="541:56">&amp;&amp;</operator> <call pos:start="541:58" pos:end="541:78"><name pos:start="541:58" pos:end="541:64">isALPHA</name><argument_list pos:start="541:65" pos:end="541:78">(<argument pos:start="541:66" pos:end="541:77"><expr pos:start="541:66" pos:end="541:77"><name pos:start="541:66" pos:end="541:77"><name pos:start="541:66" pos:end="541:66">c</name><operator pos:start="541:67" pos:end="541:68">-&gt;</operator><name pos:start="541:69" pos:end="541:77">dstFormat</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="543:9" pos:end="543:84"><block_content pos:start="543:9" pos:end="543:84">

        <expr_stmt pos:start="543:9" pos:end="543:84"><expr pos:start="543:9" pos:end="543:83"><call pos:start="543:9" pos:end="543:83"><name pos:start="543:9" pos:end="543:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="543:26" pos:end="543:83">(<argument pos:start="543:27" pos:end="543:27"><expr pos:start="543:27" pos:end="543:27"><name pos:start="543:27" pos:end="543:27">c</name></expr></argument>, <argument pos:start="543:30" pos:end="543:41"><expr pos:start="543:30" pos:end="543:41"><name pos:start="543:30" pos:end="543:41"><name pos:start="543:30" pos:end="543:30">c</name><operator pos:start="543:31" pos:end="543:32">-&gt;</operator><name pos:start="543:33" pos:end="543:41">alpPixBuf</name></name></expr></argument>, <argument pos:start="543:44" pos:end="543:76"><expr pos:start="543:44" pos:end="543:76"><name pos:start="543:44" pos:end="543:57"><name pos:start="543:44" pos:end="543:44">c</name><operator pos:start="543:45" pos:end="543:46">-&gt;</operator><name pos:start="543:47" pos:end="543:57">vLumBufSize</name></name><operator pos:start="543:58" pos:end="543:58">*</operator><literal type="number" pos:start="543:59" pos:end="543:59">2</literal><operator pos:start="543:60" pos:end="543:60">*</operator><sizeof pos:start="543:61" pos:end="543:76">sizeof<argument_list pos:start="543:67" pos:end="543:76">(<argument pos:start="543:68" pos:end="543:75"><expr pos:start="543:68" pos:end="543:75"><name pos:start="543:68" pos:end="543:74">int16_t</name><operator pos:start="543:75" pos:end="543:75">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="543:79" pos:end="543:82"><expr pos:start="543:79" pos:end="543:82"><name pos:start="543:79" pos:end="543:82">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <comment type="line" pos:start="545:5" pos:end="545:128">//Note we need at least one pixel more at the end because of the MMX code (just in case someone wanna replace the 4000/8000)</comment>

    <comment type="block" pos:start="547:5" pos:end="547:39">/* align at 16 bytes for AltiVec */</comment>

    <for pos:start="549:5" pos:end="555:5">for <control pos:start="549:9" pos:end="549:36">(<init pos:start="549:10" pos:end="549:13"><expr pos:start="549:10" pos:end="549:12"><name pos:start="549:10" pos:end="549:10">i</name><operator pos:start="549:11" pos:end="549:11">=</operator><literal type="number" pos:start="549:12" pos:end="549:12">0</literal></expr>;</init> <condition pos:start="549:15" pos:end="549:31"><expr pos:start="549:15" pos:end="549:30"><name pos:start="549:15" pos:end="549:15">i</name><operator pos:start="549:16" pos:end="549:16">&lt;</operator><name pos:start="549:17" pos:end="549:30"><name pos:start="549:17" pos:end="549:17">c</name><operator pos:start="549:18" pos:end="549:19">-&gt;</operator><name pos:start="549:20" pos:end="549:30">vLumBufSize</name></name></expr>;</condition> <incr pos:start="549:33" pos:end="549:35"><expr pos:start="549:33" pos:end="549:35"><name pos:start="549:33" pos:end="549:33">i</name><operator pos:start="549:34" pos:end="549:35">++</operator></expr></incr>)</control> <block pos:start="549:38" pos:end="555:5">{<block_content pos:start="551:9" pos:end="553:57">

        <expr_stmt pos:start="551:9" pos:end="551:81"><expr pos:start="551:9" pos:end="551:80"><call pos:start="551:9" pos:end="551:80"><name pos:start="551:9" pos:end="551:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="551:26" pos:end="551:80">(<argument pos:start="551:27" pos:end="551:27"><expr pos:start="551:27" pos:end="551:27"><name pos:start="551:27" pos:end="551:27">c</name></expr></argument>, <argument pos:start="551:30" pos:end="551:59"><expr pos:start="551:30" pos:end="551:59"><name pos:start="551:30" pos:end="551:59"><name pos:start="551:30" pos:end="551:30">c</name><operator pos:start="551:31" pos:end="551:32">-&gt;</operator><name pos:start="551:33" pos:end="551:41">lumPixBuf</name><index pos:start="551:42" pos:end="551:59">[<expr pos:start="551:43" pos:end="551:58"><name pos:start="551:43" pos:end="551:43">i</name><operator pos:start="551:44" pos:end="551:44">+</operator><name pos:start="551:45" pos:end="551:58"><name pos:start="551:45" pos:end="551:45">c</name><operator pos:start="551:46" pos:end="551:47">-&gt;</operator><name pos:start="551:48" pos:end="551:58">vLumBufSize</name></name></expr>]</index></name></expr></argument>, <argument pos:start="551:62" pos:end="551:73"><expr pos:start="551:62" pos:end="551:73"><name pos:start="551:62" pos:end="551:71">dst_stride</name><operator pos:start="551:72" pos:end="551:72">+</operator><literal type="number" pos:start="551:73" pos:end="551:73">1</literal></expr></argument>, <argument pos:start="551:76" pos:end="551:79"><expr pos:start="551:76" pos:end="551:79"><name pos:start="551:76" pos:end="551:79">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="553:9" pos:end="553:57"><expr pos:start="553:9" pos:end="553:56"><name pos:start="553:9" pos:end="553:23"><name pos:start="553:9" pos:end="553:9">c</name><operator pos:start="553:10" pos:end="553:11">-&gt;</operator><name pos:start="553:12" pos:end="553:20">lumPixBuf</name><index pos:start="553:21" pos:end="553:23">[<expr pos:start="553:22" pos:end="553:22"><name pos:start="553:22" pos:end="553:22">i</name></expr>]</index></name> <operator pos:start="553:25" pos:end="553:25">=</operator> <name pos:start="553:27" pos:end="553:56"><name pos:start="553:27" pos:end="553:27">c</name><operator pos:start="553:28" pos:end="553:29">-&gt;</operator><name pos:start="553:30" pos:end="553:38">lumPixBuf</name><index pos:start="553:39" pos:end="553:56">[<expr pos:start="553:40" pos:end="553:55"><name pos:start="553:40" pos:end="553:40">i</name><operator pos:start="553:41" pos:end="553:41">+</operator><name pos:start="553:42" pos:end="553:55"><name pos:start="553:42" pos:end="553:42">c</name><operator pos:start="553:43" pos:end="553:44">-&gt;</operator><name pos:start="553:45" pos:end="553:55">vLumBufSize</name></name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="557:5" pos:end="557:35"><expr pos:start="557:5" pos:end="557:34"><name pos:start="557:5" pos:end="557:16"><name pos:start="557:5" pos:end="557:5">c</name><operator pos:start="557:6" pos:end="557:7">-&gt;</operator><name pos:start="557:8" pos:end="557:16">uv_off_px</name></name>   <operator pos:start="557:20" pos:end="557:20">=</operator> <name pos:start="557:22" pos:end="557:34">dst_stride_px</name></expr>;</expr_stmt>

    <expr_stmt pos:start="559:5" pos:end="559:32"><expr pos:start="559:5" pos:end="559:31"><name pos:start="559:5" pos:end="559:18"><name pos:start="559:5" pos:end="559:5">c</name><operator pos:start="559:6" pos:end="559:7">-&gt;</operator><name pos:start="559:8" pos:end="559:18">uv_off_byte</name></name> <operator pos:start="559:20" pos:end="559:20">=</operator> <name pos:start="559:22" pos:end="559:31">dst_stride</name></expr>;</expr_stmt>

    <for pos:start="561:5" pos:end="569:5">for <control pos:start="561:9" pos:end="561:36">(<init pos:start="561:10" pos:end="561:13"><expr pos:start="561:10" pos:end="561:12"><name pos:start="561:10" pos:end="561:10">i</name><operator pos:start="561:11" pos:end="561:11">=</operator><literal type="number" pos:start="561:12" pos:end="561:12">0</literal></expr>;</init> <condition pos:start="561:15" pos:end="561:31"><expr pos:start="561:15" pos:end="561:30"><name pos:start="561:15" pos:end="561:15">i</name><operator pos:start="561:16" pos:end="561:16">&lt;</operator><name pos:start="561:17" pos:end="561:30"><name pos:start="561:17" pos:end="561:17">c</name><operator pos:start="561:18" pos:end="561:19">-&gt;</operator><name pos:start="561:20" pos:end="561:30">vChrBufSize</name></name></expr>;</condition> <incr pos:start="561:33" pos:end="561:35"><expr pos:start="561:33" pos:end="561:35"><name pos:start="561:33" pos:end="561:33">i</name><operator pos:start="561:34" pos:end="561:35">++</operator></expr></incr>)</control> <block pos:start="561:38" pos:end="569:5">{<block_content pos:start="563:9" pos:end="567:98">

        <expr_stmt pos:start="563:9" pos:end="563:83"><expr pos:start="563:9" pos:end="563:82"><call pos:start="563:9" pos:end="563:82"><name pos:start="563:9" pos:end="563:24">FF_ALLOC_OR_GOTO</name><argument_list pos:start="563:25" pos:end="563:82">(<argument pos:start="563:26" pos:end="563:26"><expr pos:start="563:26" pos:end="563:26"><name pos:start="563:26" pos:end="563:26">c</name></expr></argument>, <argument pos:start="563:29" pos:end="563:59"><expr pos:start="563:29" pos:end="563:59"><name pos:start="563:29" pos:end="563:59"><name pos:start="563:29" pos:end="563:29">c</name><operator pos:start="563:30" pos:end="563:31">-&gt;</operator><name pos:start="563:32" pos:end="563:41">chrUPixBuf</name><index pos:start="563:42" pos:end="563:59">[<expr pos:start="563:43" pos:end="563:58"><name pos:start="563:43" pos:end="563:43">i</name><operator pos:start="563:44" pos:end="563:44">+</operator><name pos:start="563:45" pos:end="563:58"><name pos:start="563:45" pos:end="563:45">c</name><operator pos:start="563:46" pos:end="563:47">-&gt;</operator><name pos:start="563:48" pos:end="563:58">vChrBufSize</name></name></expr>]</index></name></expr></argument>, <argument pos:start="563:62" pos:end="563:75"><expr pos:start="563:62" pos:end="563:75"><name pos:start="563:62" pos:end="563:71">dst_stride</name><operator pos:start="563:72" pos:end="563:72">*</operator><literal type="number" pos:start="563:73" pos:end="563:74">2</literal><operator pos:start="563:74" pos:end="563:74">+</operator><literal type="number" pos:start="563:75" pos:end="563:75">1</literal></expr></argument>, <argument pos:start="563:78" pos:end="563:81"><expr pos:start="563:78" pos:end="563:81"><name pos:start="563:78" pos:end="563:81">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="565:9" pos:end="565:59"><expr pos:start="565:9" pos:end="565:58"><name pos:start="565:9" pos:end="565:24"><name pos:start="565:9" pos:end="565:9">c</name><operator pos:start="565:10" pos:end="565:11">-&gt;</operator><name pos:start="565:12" pos:end="565:21">chrUPixBuf</name><index pos:start="565:22" pos:end="565:24">[<expr pos:start="565:23" pos:end="565:23"><name pos:start="565:23" pos:end="565:23">i</name></expr>]</index></name> <operator pos:start="565:26" pos:end="565:26">=</operator> <name pos:start="565:28" pos:end="565:58"><name pos:start="565:28" pos:end="565:28">c</name><operator pos:start="565:29" pos:end="565:30">-&gt;</operator><name pos:start="565:31" pos:end="565:40">chrUPixBuf</name><index pos:start="565:41" pos:end="565:58">[<expr pos:start="565:42" pos:end="565:57"><name pos:start="565:42" pos:end="565:42">i</name><operator pos:start="565:43" pos:end="565:43">+</operator><name pos:start="565:44" pos:end="565:57"><name pos:start="565:44" pos:end="565:44">c</name><operator pos:start="565:45" pos:end="565:46">-&gt;</operator><name pos:start="565:47" pos:end="565:57">vChrBufSize</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="567:9" pos:end="567:98"><expr pos:start="567:9" pos:end="567:97"><name pos:start="567:9" pos:end="567:24"><name pos:start="567:9" pos:end="567:9">c</name><operator pos:start="567:10" pos:end="567:11">-&gt;</operator><name pos:start="567:12" pos:end="567:21">chrVPixBuf</name><index pos:start="567:22" pos:end="567:24">[<expr pos:start="567:23" pos:end="567:23"><name pos:start="567:23" pos:end="567:23">i</name></expr>]</index></name> <operator pos:start="567:26" pos:end="567:26">=</operator> <name pos:start="567:28" pos:end="567:58"><name pos:start="567:28" pos:end="567:28">c</name><operator pos:start="567:29" pos:end="567:30">-&gt;</operator><name pos:start="567:31" pos:end="567:40">chrVPixBuf</name><index pos:start="567:41" pos:end="567:58">[<expr pos:start="567:42" pos:end="567:57"><name pos:start="567:42" pos:end="567:42">i</name><operator pos:start="567:43" pos:end="567:43">+</operator><name pos:start="567:44" pos:end="567:57"><name pos:start="567:44" pos:end="567:44">c</name><operator pos:start="567:45" pos:end="567:46">-&gt;</operator><name pos:start="567:47" pos:end="567:57">vChrBufSize</name></name></expr>]</index></name> <operator pos:start="567:60" pos:end="567:60">=</operator> <name pos:start="567:62" pos:end="567:77"><name pos:start="567:62" pos:end="567:62">c</name><operator pos:start="567:63" pos:end="567:64">-&gt;</operator><name pos:start="567:65" pos:end="567:74">chrUPixBuf</name><index pos:start="567:75" pos:end="567:77">[<expr pos:start="567:76" pos:end="567:76"><name pos:start="567:76" pos:end="567:76">i</name></expr>]</index></name> <operator pos:start="567:79" pos:end="567:79">+</operator> <operator pos:start="567:81" pos:end="567:81">(</operator><name pos:start="567:82" pos:end="567:91">dst_stride</name> <operator pos:start="567:93" pos:end="567:94">&gt;&gt;</operator> <literal type="number" pos:start="567:96" pos:end="567:96">1</literal><operator pos:start="567:97" pos:end="567:97">)</operator></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="571:5" pos:end="579:9"><if pos:start="571:5" pos:end="579:9">if <condition pos:start="571:8" pos:end="571:45">(<expr pos:start="571:9" pos:end="571:44"><name pos:start="571:9" pos:end="571:28">CONFIG_SWSCALE_ALPHA</name> <operator pos:start="571:30" pos:end="571:31">&amp;&amp;</operator> <name pos:start="571:33" pos:end="571:44"><name pos:start="571:33" pos:end="571:33">c</name><operator pos:start="571:34" pos:end="571:35">-&gt;</operator><name pos:start="571:36" pos:end="571:44">alpPixBuf</name></name></expr>)</condition><block type="pseudo" pos:start="573:9" pos:end="579:9"><block_content pos:start="573:9" pos:end="579:9">

        <for pos:start="573:9" pos:end="579:9">for <control pos:start="573:13" pos:end="573:40">(<init pos:start="573:14" pos:end="573:17"><expr pos:start="573:14" pos:end="573:16"><name pos:start="573:14" pos:end="573:14">i</name><operator pos:start="573:15" pos:end="573:15">=</operator><literal type="number" pos:start="573:16" pos:end="573:16">0</literal></expr>;</init> <condition pos:start="573:19" pos:end="573:35"><expr pos:start="573:19" pos:end="573:34"><name pos:start="573:19" pos:end="573:19">i</name><operator pos:start="573:20" pos:end="573:20">&lt;</operator><name pos:start="573:21" pos:end="573:34"><name pos:start="573:21" pos:end="573:21">c</name><operator pos:start="573:22" pos:end="573:23">-&gt;</operator><name pos:start="573:24" pos:end="573:34">vLumBufSize</name></name></expr>;</condition> <incr pos:start="573:37" pos:end="573:39"><expr pos:start="573:37" pos:end="573:39"><name pos:start="573:37" pos:end="573:37">i</name><operator pos:start="573:38" pos:end="573:39">++</operator></expr></incr>)</control> <block pos:start="573:42" pos:end="579:9">{<block_content pos:start="575:13" pos:end="577:61">

            <expr_stmt pos:start="575:13" pos:end="575:85"><expr pos:start="575:13" pos:end="575:84"><call pos:start="575:13" pos:end="575:84"><name pos:start="575:13" pos:end="575:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="575:30" pos:end="575:84">(<argument pos:start="575:31" pos:end="575:31"><expr pos:start="575:31" pos:end="575:31"><name pos:start="575:31" pos:end="575:31">c</name></expr></argument>, <argument pos:start="575:34" pos:end="575:63"><expr pos:start="575:34" pos:end="575:63"><name pos:start="575:34" pos:end="575:63"><name pos:start="575:34" pos:end="575:34">c</name><operator pos:start="575:35" pos:end="575:36">-&gt;</operator><name pos:start="575:37" pos:end="575:45">alpPixBuf</name><index pos:start="575:46" pos:end="575:63">[<expr pos:start="575:47" pos:end="575:62"><name pos:start="575:47" pos:end="575:47">i</name><operator pos:start="575:48" pos:end="575:48">+</operator><name pos:start="575:49" pos:end="575:62"><name pos:start="575:49" pos:end="575:49">c</name><operator pos:start="575:50" pos:end="575:51">-&gt;</operator><name pos:start="575:52" pos:end="575:62">vLumBufSize</name></name></expr>]</index></name></expr></argument>, <argument pos:start="575:66" pos:end="575:77"><expr pos:start="575:66" pos:end="575:77"><name pos:start="575:66" pos:end="575:75">dst_stride</name><operator pos:start="575:76" pos:end="575:76">+</operator><literal type="number" pos:start="575:77" pos:end="575:77">1</literal></expr></argument>, <argument pos:start="575:80" pos:end="575:83"><expr pos:start="575:80" pos:end="575:83"><name pos:start="575:80" pos:end="575:83">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="577:13" pos:end="577:61"><expr pos:start="577:13" pos:end="577:60"><name pos:start="577:13" pos:end="577:27"><name pos:start="577:13" pos:end="577:13">c</name><operator pos:start="577:14" pos:end="577:15">-&gt;</operator><name pos:start="577:16" pos:end="577:24">alpPixBuf</name><index pos:start="577:25" pos:end="577:27">[<expr pos:start="577:26" pos:end="577:26"><name pos:start="577:26" pos:end="577:26">i</name></expr>]</index></name> <operator pos:start="577:29" pos:end="577:29">=</operator> <name pos:start="577:31" pos:end="577:60"><name pos:start="577:31" pos:end="577:31">c</name><operator pos:start="577:32" pos:end="577:33">-&gt;</operator><name pos:start="577:34" pos:end="577:42">alpPixBuf</name><index pos:start="577:43" pos:end="577:60">[<expr pos:start="577:44" pos:end="577:59"><name pos:start="577:44" pos:end="577:44">i</name><operator pos:start="577:45" pos:end="577:45">+</operator><name pos:start="577:46" pos:end="577:59"><name pos:start="577:46" pos:end="577:46">c</name><operator pos:start="577:47" pos:end="577:48">-&gt;</operator><name pos:start="577:49" pos:end="577:59">vLumBufSize</name></name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for></block_content></block></if></if_stmt>



    <comment type="line" pos:start="583:5" pos:end="583:79">//try to avoid drawing green stuff between the right end and the stride end</comment>

    <for pos:start="585:5" pos:end="587:53">for <control pos:start="585:9" pos:end="585:36">(<init pos:start="585:10" pos:end="585:13"><expr pos:start="585:10" pos:end="585:12"><name pos:start="585:10" pos:end="585:10">i</name><operator pos:start="585:11" pos:end="585:11">=</operator><literal type="number" pos:start="585:12" pos:end="585:12">0</literal></expr>;</init> <condition pos:start="585:15" pos:end="585:31"><expr pos:start="585:15" pos:end="585:30"><name pos:start="585:15" pos:end="585:15">i</name><operator pos:start="585:16" pos:end="585:16">&lt;</operator><name pos:start="585:17" pos:end="585:30"><name pos:start="585:17" pos:end="585:17">c</name><operator pos:start="585:18" pos:end="585:19">-&gt;</operator><name pos:start="585:20" pos:end="585:30">vChrBufSize</name></name></expr>;</condition> <incr pos:start="585:33" pos:end="585:35"><expr pos:start="585:33" pos:end="585:35"><name pos:start="585:33" pos:end="585:33">i</name><operator pos:start="585:34" pos:end="585:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="587:9" pos:end="587:53"><block_content pos:start="587:9" pos:end="587:53">

        <expr_stmt pos:start="587:9" pos:end="587:53"><expr pos:start="587:9" pos:end="587:52"><call pos:start="587:9" pos:end="587:52"><name pos:start="587:9" pos:end="587:14">memset</name><argument_list pos:start="587:15" pos:end="587:52">(<argument pos:start="587:16" pos:end="587:31"><expr pos:start="587:16" pos:end="587:31"><name pos:start="587:16" pos:end="587:31"><name pos:start="587:16" pos:end="587:16">c</name><operator pos:start="587:17" pos:end="587:18">-&gt;</operator><name pos:start="587:19" pos:end="587:28">chrUPixBuf</name><index pos:start="587:29" pos:end="587:31">[<expr pos:start="587:30" pos:end="587:30"><name pos:start="587:30" pos:end="587:30">i</name></expr>]</index></name></expr></argument>, <argument pos:start="587:34" pos:end="587:35"><expr pos:start="587:34" pos:end="587:35"><literal type="number" pos:start="587:34" pos:end="587:35">64</literal></expr></argument>, <argument pos:start="587:38" pos:end="587:51"><expr pos:start="587:38" pos:end="587:51"><name pos:start="587:38" pos:end="587:47">dst_stride</name><operator pos:start="587:48" pos:end="587:48">*</operator><literal type="number" pos:start="587:49" pos:end="587:50">2</literal><operator pos:start="587:50" pos:end="587:50">+</operator><literal type="number" pos:start="587:51" pos:end="587:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="591:5" pos:end="591:31"><expr pos:start="591:5" pos:end="591:30"><call pos:start="591:5" pos:end="591:30"><name pos:start="591:5" pos:end="591:10">assert</name><argument_list pos:start="591:11" pos:end="591:30">(<argument pos:start="591:12" pos:end="591:29"><expr pos:start="591:12" pos:end="591:29"><name pos:start="591:12" pos:end="591:21"><name pos:start="591:12" pos:end="591:12">c</name><operator pos:start="591:13" pos:end="591:14">-&gt;</operator><name pos:start="591:15" pos:end="591:21">chrDstH</name></name> <operator pos:start="591:23" pos:end="591:24">&lt;=</operator> <name pos:start="591:26" pos:end="591:29">dstH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="595:5" pos:end="799:5"><if pos:start="595:5" pos:end="799:5">if <condition pos:start="595:8" pos:end="595:29">(<expr pos:start="595:9" pos:end="595:28"><name pos:start="595:9" pos:end="595:13">flags</name><operator pos:start="595:14" pos:end="595:14">&amp;</operator><name pos:start="595:15" pos:end="595:28">SWS_PRINT_INFO</name></expr>)</condition> <block pos:start="595:31" pos:end="799:5">{<block_content pos:start="597:9" pos:end="797:87">

        <if_stmt pos:start="597:9" pos:end="619:89"><if pos:start="597:9" pos:end="597:91">if      <condition pos:start="597:17" pos:end="597:41">(<expr pos:start="597:18" pos:end="597:40"><name pos:start="597:18" pos:end="597:22">flags</name><operator pos:start="597:23" pos:end="597:23">&amp;</operator><name pos:start="597:24" pos:end="597:40">SWS_FAST_BILINEAR</name></expr>)</condition><block type="pseudo" pos:start="597:43" pos:end="597:91"><block_content pos:start="597:43" pos:end="597:91"> <expr_stmt pos:start="597:43" pos:end="597:91"><expr pos:start="597:43" pos:end="597:90"><call pos:start="597:43" pos:end="597:90"><name pos:start="597:43" pos:end="597:48">av_log</name><argument_list pos:start="597:49" pos:end="597:90">(<argument pos:start="597:50" pos:end="597:50"><expr pos:start="597:50" pos:end="597:50"><name pos:start="597:50" pos:end="597:50">c</name></expr></argument>, <argument pos:start="597:53" pos:end="597:63"><expr pos:start="597:53" pos:end="597:63"><name pos:start="597:53" pos:end="597:63">AV_LOG_INFO</name></expr></argument>, <argument pos:start="597:66" pos:end="597:89"><expr pos:start="597:66" pos:end="597:89"><literal type="string" pos:start="597:66" pos:end="597:89">"FAST_BILINEAR scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="599:9" pos:end="599:86">else if <condition pos:start="599:17" pos:end="599:36">(<expr pos:start="599:18" pos:end="599:35"><name pos:start="599:18" pos:end="599:22">flags</name><operator pos:start="599:23" pos:end="599:23">&amp;</operator><name pos:start="599:24" pos:end="599:35">SWS_BILINEAR</name></expr>)</condition><block type="pseudo" pos:start="599:43" pos:end="599:86"><block_content pos:start="599:43" pos:end="599:86">      <expr_stmt pos:start="599:43" pos:end="599:86"><expr pos:start="599:43" pos:end="599:85"><call pos:start="599:43" pos:end="599:85"><name pos:start="599:43" pos:end="599:48">av_log</name><argument_list pos:start="599:49" pos:end="599:85">(<argument pos:start="599:50" pos:end="599:50"><expr pos:start="599:50" pos:end="599:50"><name pos:start="599:50" pos:end="599:50">c</name></expr></argument>, <argument pos:start="599:53" pos:end="599:63"><expr pos:start="599:53" pos:end="599:63"><name pos:start="599:53" pos:end="599:63">AV_LOG_INFO</name></expr></argument>, <argument pos:start="599:66" pos:end="599:84"><expr pos:start="599:66" pos:end="599:84"><literal type="string" pos:start="599:66" pos:end="599:84">"BILINEAR scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="601:9" pos:end="601:85">else if <condition pos:start="601:17" pos:end="601:35">(<expr pos:start="601:18" pos:end="601:34"><name pos:start="601:18" pos:end="601:22">flags</name><operator pos:start="601:23" pos:end="601:23">&amp;</operator><name pos:start="601:24" pos:end="601:34">SWS_BICUBIC</name></expr>)</condition><block type="pseudo" pos:start="601:43" pos:end="601:85"><block_content pos:start="601:43" pos:end="601:85">       <expr_stmt pos:start="601:43" pos:end="601:85"><expr pos:start="601:43" pos:end="601:84"><call pos:start="601:43" pos:end="601:84"><name pos:start="601:43" pos:end="601:48">av_log</name><argument_list pos:start="601:49" pos:end="601:84">(<argument pos:start="601:50" pos:end="601:50"><expr pos:start="601:50" pos:end="601:50"><name pos:start="601:50" pos:end="601:50">c</name></expr></argument>, <argument pos:start="601:53" pos:end="601:63"><expr pos:start="601:53" pos:end="601:63"><name pos:start="601:53" pos:end="601:63">AV_LOG_INFO</name></expr></argument>, <argument pos:start="601:66" pos:end="601:83"><expr pos:start="601:66" pos:end="601:83"><literal type="string" pos:start="601:66" pos:end="601:83">"BICUBIC scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="603:9" pos:end="603:90">else if <condition pos:start="603:17" pos:end="603:29">(<expr pos:start="603:18" pos:end="603:28"><name pos:start="603:18" pos:end="603:22">flags</name><operator pos:start="603:23" pos:end="603:23">&amp;</operator><name pos:start="603:24" pos:end="603:28">SWS_X</name></expr>)</condition><block type="pseudo" pos:start="603:43" pos:end="603:90"><block_content pos:start="603:43" pos:end="603:90">             <expr_stmt pos:start="603:43" pos:end="603:90"><expr pos:start="603:43" pos:end="603:89"><call pos:start="603:43" pos:end="603:89"><name pos:start="603:43" pos:end="603:48">av_log</name><argument_list pos:start="603:49" pos:end="603:89">(<argument pos:start="603:50" pos:end="603:50"><expr pos:start="603:50" pos:end="603:50"><name pos:start="603:50" pos:end="603:50">c</name></expr></argument>, <argument pos:start="603:53" pos:end="603:63"><expr pos:start="603:53" pos:end="603:63"><name pos:start="603:53" pos:end="603:63">AV_LOG_INFO</name></expr></argument>, <argument pos:start="603:66" pos:end="603:88"><expr pos:start="603:66" pos:end="603:88"><literal type="string" pos:start="603:66" pos:end="603:88">"Experimental scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="605:9" pos:end="605:102">else if <condition pos:start="605:17" pos:end="605:33">(<expr pos:start="605:18" pos:end="605:32"><name pos:start="605:18" pos:end="605:22">flags</name><operator pos:start="605:23" pos:end="605:23">&amp;</operator><name pos:start="605:24" pos:end="605:32">SWS_POINT</name></expr>)</condition><block type="pseudo" pos:start="605:43" pos:end="605:102"><block_content pos:start="605:43" pos:end="605:102">         <expr_stmt pos:start="605:43" pos:end="605:102"><expr pos:start="605:43" pos:end="605:101"><call pos:start="605:43" pos:end="605:101"><name pos:start="605:43" pos:end="605:48">av_log</name><argument_list pos:start="605:49" pos:end="605:101">(<argument pos:start="605:50" pos:end="605:50"><expr pos:start="605:50" pos:end="605:50"><name pos:start="605:50" pos:end="605:50">c</name></expr></argument>, <argument pos:start="605:53" pos:end="605:63"><expr pos:start="605:53" pos:end="605:63"><name pos:start="605:53" pos:end="605:63">AV_LOG_INFO</name></expr></argument>, <argument pos:start="605:66" pos:end="605:100"><expr pos:start="605:66" pos:end="605:100"><literal type="string" pos:start="605:66" pos:end="605:100">"Nearest Neighbor / POINT scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="607:9" pos:end="607:92">else if <condition pos:start="607:17" pos:end="607:32">(<expr pos:start="607:18" pos:end="607:31"><name pos:start="607:18" pos:end="607:22">flags</name><operator pos:start="607:23" pos:end="607:23">&amp;</operator><name pos:start="607:24" pos:end="607:31">SWS_AREA</name></expr>)</condition><block type="pseudo" pos:start="607:43" pos:end="607:92"><block_content pos:start="607:43" pos:end="607:92">          <expr_stmt pos:start="607:43" pos:end="607:92"><expr pos:start="607:43" pos:end="607:91"><call pos:start="607:43" pos:end="607:91"><name pos:start="607:43" pos:end="607:48">av_log</name><argument_list pos:start="607:49" pos:end="607:91">(<argument pos:start="607:50" pos:end="607:50"><expr pos:start="607:50" pos:end="607:50"><name pos:start="607:50" pos:end="607:50">c</name></expr></argument>, <argument pos:start="607:53" pos:end="607:63"><expr pos:start="607:53" pos:end="607:63"><name pos:start="607:53" pos:end="607:63">AV_LOG_INFO</name></expr></argument>, <argument pos:start="607:66" pos:end="607:90"><expr pos:start="607:66" pos:end="607:90"><literal type="string" pos:start="607:66" pos:end="607:90">"Area Averaging scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="609:9" pos:end="609:108">else if <condition pos:start="609:17" pos:end="609:36">(<expr pos:start="609:18" pos:end="609:35"><name pos:start="609:18" pos:end="609:22">flags</name><operator pos:start="609:23" pos:end="609:23">&amp;</operator><name pos:start="609:24" pos:end="609:35">SWS_BICUBLIN</name></expr>)</condition><block type="pseudo" pos:start="609:43" pos:end="609:108"><block_content pos:start="609:43" pos:end="609:108">      <expr_stmt pos:start="609:43" pos:end="609:108"><expr pos:start="609:43" pos:end="609:107"><call pos:start="609:43" pos:end="609:107"><name pos:start="609:43" pos:end="609:48">av_log</name><argument_list pos:start="609:49" pos:end="609:107">(<argument pos:start="609:50" pos:end="609:50"><expr pos:start="609:50" pos:end="609:50"><name pos:start="609:50" pos:end="609:50">c</name></expr></argument>, <argument pos:start="609:53" pos:end="609:63"><expr pos:start="609:53" pos:end="609:63"><name pos:start="609:53" pos:end="609:63">AV_LOG_INFO</name></expr></argument>, <argument pos:start="609:66" pos:end="609:106"><expr pos:start="609:66" pos:end="609:106"><literal type="string" pos:start="609:66" pos:end="609:106">"luma BICUBIC / chroma BILINEAR scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="611:9" pos:end="611:86">else if <condition pos:start="611:17" pos:end="611:33">(<expr pos:start="611:18" pos:end="611:32"><name pos:start="611:18" pos:end="611:22">flags</name><operator pos:start="611:23" pos:end="611:23">&amp;</operator><name pos:start="611:24" pos:end="611:32">SWS_GAUSS</name></expr>)</condition><block type="pseudo" pos:start="611:43" pos:end="611:86"><block_content pos:start="611:43" pos:end="611:86">         <expr_stmt pos:start="611:43" pos:end="611:86"><expr pos:start="611:43" pos:end="611:85"><call pos:start="611:43" pos:end="611:85"><name pos:start="611:43" pos:end="611:48">av_log</name><argument_list pos:start="611:49" pos:end="611:85">(<argument pos:start="611:50" pos:end="611:50"><expr pos:start="611:50" pos:end="611:50"><name pos:start="611:50" pos:end="611:50">c</name></expr></argument>, <argument pos:start="611:53" pos:end="611:63"><expr pos:start="611:53" pos:end="611:63"><name pos:start="611:53" pos:end="611:63">AV_LOG_INFO</name></expr></argument>, <argument pos:start="611:66" pos:end="611:84"><expr pos:start="611:66" pos:end="611:84"><literal type="string" pos:start="611:66" pos:end="611:84">"Gaussian scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="613:9" pos:end="613:82">else if <condition pos:start="613:17" pos:end="613:32">(<expr pos:start="613:18" pos:end="613:31"><name pos:start="613:18" pos:end="613:22">flags</name><operator pos:start="613:23" pos:end="613:23">&amp;</operator><name pos:start="613:24" pos:end="613:31">SWS_SINC</name></expr>)</condition><block type="pseudo" pos:start="613:43" pos:end="613:82"><block_content pos:start="613:43" pos:end="613:82">          <expr_stmt pos:start="613:43" pos:end="613:82"><expr pos:start="613:43" pos:end="613:81"><call pos:start="613:43" pos:end="613:81"><name pos:start="613:43" pos:end="613:48">av_log</name><argument_list pos:start="613:49" pos:end="613:81">(<argument pos:start="613:50" pos:end="613:50"><expr pos:start="613:50" pos:end="613:50"><name pos:start="613:50" pos:end="613:50">c</name></expr></argument>, <argument pos:start="613:53" pos:end="613:63"><expr pos:start="613:53" pos:end="613:63"><name pos:start="613:53" pos:end="613:63">AV_LOG_INFO</name></expr></argument>, <argument pos:start="613:66" pos:end="613:80"><expr pos:start="613:66" pos:end="613:80"><literal type="string" pos:start="613:66" pos:end="613:80">"Sinc scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="615:9" pos:end="615:85">else if <condition pos:start="615:17" pos:end="615:35">(<expr pos:start="615:18" pos:end="615:34"><name pos:start="615:18" pos:end="615:22">flags</name><operator pos:start="615:23" pos:end="615:23">&amp;</operator><name pos:start="615:24" pos:end="615:34">SWS_LANCZOS</name></expr>)</condition><block type="pseudo" pos:start="615:43" pos:end="615:85"><block_content pos:start="615:43" pos:end="615:85">       <expr_stmt pos:start="615:43" pos:end="615:85"><expr pos:start="615:43" pos:end="615:84"><call pos:start="615:43" pos:end="615:84"><name pos:start="615:43" pos:end="615:48">av_log</name><argument_list pos:start="615:49" pos:end="615:84">(<argument pos:start="615:50" pos:end="615:50"><expr pos:start="615:50" pos:end="615:50"><name pos:start="615:50" pos:end="615:50">c</name></expr></argument>, <argument pos:start="615:53" pos:end="615:63"><expr pos:start="615:53" pos:end="615:63"><name pos:start="615:53" pos:end="615:63">AV_LOG_INFO</name></expr></argument>, <argument pos:start="615:66" pos:end="615:83"><expr pos:start="615:66" pos:end="615:83"><literal type="string" pos:start="615:66" pos:end="615:83">"Lanczos scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="617:9" pos:end="617:92">else if <condition pos:start="617:17" pos:end="617:34">(<expr pos:start="617:18" pos:end="617:33"><name pos:start="617:18" pos:end="617:22">flags</name><operator pos:start="617:23" pos:end="617:23">&amp;</operator><name pos:start="617:24" pos:end="617:33">SWS_SPLINE</name></expr>)</condition><block type="pseudo" pos:start="617:43" pos:end="617:92"><block_content pos:start="617:43" pos:end="617:92">        <expr_stmt pos:start="617:43" pos:end="617:92"><expr pos:start="617:43" pos:end="617:91"><call pos:start="617:43" pos:end="617:91"><name pos:start="617:43" pos:end="617:48">av_log</name><argument_list pos:start="617:49" pos:end="617:91">(<argument pos:start="617:50" pos:end="617:50"><expr pos:start="617:50" pos:end="617:50"><name pos:start="617:50" pos:end="617:50">c</name></expr></argument>, <argument pos:start="617:53" pos:end="617:63"><expr pos:start="617:53" pos:end="617:63"><name pos:start="617:53" pos:end="617:63">AV_LOG_INFO</name></expr></argument>, <argument pos:start="617:66" pos:end="617:90"><expr pos:start="617:66" pos:end="617:90"><literal type="string" pos:start="617:66" pos:end="617:90">"Bicubic spline scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="619:9" pos:end="619:89">else<block type="pseudo" pos:start="619:43" pos:end="619:89"><block_content pos:start="619:43" pos:end="619:89">                              <expr_stmt pos:start="619:43" pos:end="619:89"><expr pos:start="619:43" pos:end="619:88"><call pos:start="619:43" pos:end="619:88"><name pos:start="619:43" pos:end="619:48">av_log</name><argument_list pos:start="619:49" pos:end="619:88">(<argument pos:start="619:50" pos:end="619:50"><expr pos:start="619:50" pos:end="619:50"><name pos:start="619:50" pos:end="619:50">c</name></expr></argument>, <argument pos:start="619:53" pos:end="619:63"><expr pos:start="619:53" pos:end="619:63"><name pos:start="619:53" pos:end="619:63">AV_LOG_INFO</name></expr></argument>, <argument pos:start="619:66" pos:end="619:87"><expr pos:start="619:66" pos:end="619:87"><literal type="string" pos:start="619:66" pos:end="619:87">"ehh flags invalid?! "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="623:9" pos:end="641:43"><expr pos:start="623:9" pos:end="641:42"><call pos:start="623:9" pos:end="641:42"><name pos:start="623:9" pos:end="623:14">av_log</name><argument_list pos:start="623:15" pos:end="641:42">(<argument pos:start="623:16" pos:end="623:16"><expr pos:start="623:16" pos:end="623:16"><name pos:start="623:16" pos:end="623:16">c</name></expr></argument>, <argument pos:start="623:19" pos:end="623:29"><expr pos:start="623:19" pos:end="623:29"><name pos:start="623:19" pos:end="623:29">AV_LOG_INFO</name></expr></argument>, <argument pos:start="623:32" pos:end="623:49"><expr pos:start="623:32" pos:end="623:49"><literal type="string" pos:start="623:32" pos:end="623:49">"from %s to %s%s "</literal></expr></argument>,

               <argument pos:start="625:16" pos:end="625:41"><expr pos:start="625:16" pos:end="625:41"><call pos:start="625:16" pos:end="625:41"><name pos:start="625:16" pos:end="625:30">sws_format_name</name><argument_list pos:start="625:31" pos:end="625:41">(<argument pos:start="625:32" pos:end="625:40"><expr pos:start="625:32" pos:end="625:40"><name pos:start="625:32" pos:end="625:40">srcFormat</name></expr></argument>)</argument_list></call></expr></argument>,

<cpp:ifdef pos:start="627:1" pos:end="627:18">#<cpp:directive pos:start="627:2" pos:end="627:6">ifdef</cpp:directive> <name pos:start="627:8" pos:end="627:18">DITHER1XBPP</name></cpp:ifdef>

               <argument pos:start="629:16" pos:end="633:96"><expr pos:start="629:16" pos:end="633:96"><ternary pos:start="629:16" pos:end="633:96"><condition pos:start="629:16" pos:end="633:79"><expr pos:start="629:16" pos:end="633:77"><name pos:start="629:16" pos:end="629:24">dstFormat</name> <operator pos:start="629:26" pos:end="629:27">==</operator> <name pos:start="629:29" pos:end="629:42">PIX_FMT_BGR555</name> <operator pos:start="629:44" pos:end="629:45">||</operator> <name pos:start="629:47" pos:end="629:55">dstFormat</name> <operator pos:start="629:57" pos:end="629:58">==</operator> <name pos:start="629:60" pos:end="629:73">PIX_FMT_BGR565</name> <operator pos:start="629:75" pos:end="629:76">||</operator>

               <name pos:start="631:16" pos:end="631:24">dstFormat</name> <operator pos:start="631:26" pos:end="631:27">==</operator> <name pos:start="631:29" pos:end="631:44">PIX_FMT_RGB444BE</name> <operator pos:start="631:46" pos:end="631:47">||</operator> <name pos:start="631:49" pos:end="631:57">dstFormat</name> <operator pos:start="631:59" pos:end="631:60">==</operator> <name pos:start="631:62" pos:end="631:77">PIX_FMT_RGB444LE</name> <operator pos:start="631:79" pos:end="631:80">||</operator>

               <name pos:start="633:16" pos:end="633:24">dstFormat</name> <operator pos:start="633:26" pos:end="633:27">==</operator> <name pos:start="633:29" pos:end="633:44">PIX_FMT_BGR444BE</name> <operator pos:start="633:46" pos:end="633:47">||</operator> <name pos:start="633:49" pos:end="633:57">dstFormat</name> <operator pos:start="633:59" pos:end="633:60">==</operator> <name pos:start="633:62" pos:end="633:77">PIX_FMT_BGR444LE</name></expr> ?</condition><then pos:start="633:81" pos:end="633:91"> <expr pos:start="633:81" pos:end="633:91"><literal type="string" pos:start="633:81" pos:end="633:91">"dithered "</literal></expr> </then><else pos:start="633:93" pos:end="633:96">: <expr pos:start="633:95" pos:end="633:96"><literal type="string" pos:start="633:95" pos:end="633:96">""</literal></expr></else></ternary></expr></argument>,

<cpp:else pos:start="635:1" pos:end="635:5">#<cpp:directive pos:start="635:2" pos:end="635:5">else</cpp:directive></cpp:else>

               <argument pos:start="637:16" pos:end="637:17"><expr pos:start="637:16" pos:end="637:17"><literal type="string" pos:start="637:16" pos:end="637:17">""</literal></expr></argument>,

<cpp:endif pos:start="639:1" pos:end="639:6">#<cpp:directive pos:start="639:2" pos:end="639:6">endif</cpp:directive></cpp:endif>

               <argument pos:start="641:16" pos:end="641:41"><expr pos:start="641:16" pos:end="641:41"><call pos:start="641:16" pos:end="641:41"><name pos:start="641:16" pos:end="641:30">sws_format_name</name><argument_list pos:start="641:31" pos:end="641:41">(<argument pos:start="641:32" pos:end="641:40"><expr pos:start="641:32" pos:end="641:40"><name pos:start="641:32" pos:end="641:40">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="645:9" pos:end="653:83"><if pos:start="645:9" pos:end="645:106">if      <condition pos:start="645:17" pos:end="645:63">(<expr pos:start="645:18" pos:end="645:62"><name pos:start="645:18" pos:end="645:26">HAVE_MMX2</name>     <operator pos:start="645:32" pos:end="645:33">&amp;&amp;</operator> <name pos:start="645:35" pos:end="645:43">cpu_flags</name> <operator pos:start="645:45" pos:end="645:45">&amp;</operator> <name pos:start="645:47" pos:end="645:62">AV_CPU_FLAG_MMX2</name></expr>)</condition><block type="pseudo" pos:start="645:68" pos:end="645:106"><block_content pos:start="645:68" pos:end="645:106">    <expr_stmt pos:start="645:68" pos:end="645:106"><expr pos:start="645:68" pos:end="645:105"><call pos:start="645:68" pos:end="645:105"><name pos:start="645:68" pos:end="645:73">av_log</name><argument_list pos:start="645:74" pos:end="645:105">(<argument pos:start="645:75" pos:end="645:75"><expr pos:start="645:75" pos:end="645:75"><name pos:start="645:75" pos:end="645:75">c</name></expr></argument>, <argument pos:start="645:78" pos:end="645:88"><expr pos:start="645:78" pos:end="645:88"><name pos:start="645:78" pos:end="645:88">AV_LOG_INFO</name></expr></argument>, <argument pos:start="645:91" pos:end="645:104"><expr pos:start="645:91" pos:end="645:104"><literal type="string" pos:start="645:91" pos:end="645:104">"using MMX2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="647:9" pos:end="647:107">else if <condition pos:start="647:17" pos:end="647:64">(<expr pos:start="647:18" pos:end="647:63"><name pos:start="647:18" pos:end="647:30">HAVE_AMD3DNOW</name> <operator pos:start="647:32" pos:end="647:33">&amp;&amp;</operator> <name pos:start="647:35" pos:end="647:43">cpu_flags</name> <operator pos:start="647:45" pos:end="647:45">&amp;</operator> <name pos:start="647:47" pos:end="647:63">AV_CPU_FLAG_3DNOW</name></expr>)</condition><block type="pseudo" pos:start="647:68" pos:end="647:107"><block_content pos:start="647:68" pos:end="647:107">   <expr_stmt pos:start="647:68" pos:end="647:107"><expr pos:start="647:68" pos:end="647:106"><call pos:start="647:68" pos:end="647:106"><name pos:start="647:68" pos:end="647:73">av_log</name><argument_list pos:start="647:74" pos:end="647:106">(<argument pos:start="647:75" pos:end="647:75"><expr pos:start="647:75" pos:end="647:75"><name pos:start="647:75" pos:end="647:75">c</name></expr></argument>, <argument pos:start="647:78" pos:end="647:88"><expr pos:start="647:78" pos:end="647:88"><name pos:start="647:78" pos:end="647:88">AV_LOG_INFO</name></expr></argument>, <argument pos:start="647:91" pos:end="647:105"><expr pos:start="647:91" pos:end="647:105"><literal type="string" pos:start="647:91" pos:end="647:105">"using 3DNOW\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="649:9" pos:end="649:105">else if <condition pos:start="649:17" pos:end="649:62">(<expr pos:start="649:18" pos:end="649:61"><name pos:start="649:18" pos:end="649:25">HAVE_MMX</name>      <operator pos:start="649:32" pos:end="649:33">&amp;&amp;</operator> <name pos:start="649:35" pos:end="649:43">cpu_flags</name> <operator pos:start="649:45" pos:end="649:45">&amp;</operator> <name pos:start="649:47" pos:end="649:61">AV_CPU_FLAG_MMX</name></expr>)</condition><block type="pseudo" pos:start="649:68" pos:end="649:105"><block_content pos:start="649:68" pos:end="649:105">     <expr_stmt pos:start="649:68" pos:end="649:105"><expr pos:start="649:68" pos:end="649:104"><call pos:start="649:68" pos:end="649:104"><name pos:start="649:68" pos:end="649:73">av_log</name><argument_list pos:start="649:74" pos:end="649:104">(<argument pos:start="649:75" pos:end="649:75"><expr pos:start="649:75" pos:end="649:75"><name pos:start="649:75" pos:end="649:75">c</name></expr></argument>, <argument pos:start="649:78" pos:end="649:88"><expr pos:start="649:78" pos:end="649:88"><name pos:start="649:78" pos:end="649:88">AV_LOG_INFO</name></expr></argument>, <argument pos:start="649:91" pos:end="649:103"><expr pos:start="649:91" pos:end="649:103"><literal type="string" pos:start="649:91" pos:end="649:103">"using MMX\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="651:9" pos:end="651:109">else if <condition pos:start="651:17" pos:end="651:66">(<expr pos:start="651:18" pos:end="651:65"><name pos:start="651:18" pos:end="651:29">HAVE_ALTIVEC</name>  <operator pos:start="651:32" pos:end="651:33">&amp;&amp;</operator> <name pos:start="651:35" pos:end="651:43">cpu_flags</name> <operator pos:start="651:45" pos:end="651:45">&amp;</operator> <name pos:start="651:47" pos:end="651:65">AV_CPU_FLAG_ALTIVEC</name></expr>)</condition><block type="pseudo" pos:start="651:68" pos:end="651:109"><block_content pos:start="651:68" pos:end="651:109"> <expr_stmt pos:start="651:68" pos:end="651:109"><expr pos:start="651:68" pos:end="651:108"><call pos:start="651:68" pos:end="651:108"><name pos:start="651:68" pos:end="651:73">av_log</name><argument_list pos:start="651:74" pos:end="651:108">(<argument pos:start="651:75" pos:end="651:75"><expr pos:start="651:75" pos:end="651:75"><name pos:start="651:75" pos:end="651:75">c</name></expr></argument>, <argument pos:start="651:78" pos:end="651:88"><expr pos:start="651:78" pos:end="651:88"><name pos:start="651:78" pos:end="651:88">AV_LOG_INFO</name></expr></argument>, <argument pos:start="651:91" pos:end="651:107"><expr pos:start="651:91" pos:end="651:107"><literal type="string" pos:start="651:91" pos:end="651:107">"using AltiVec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="653:9" pos:end="653:83">else<block type="pseudo" pos:start="653:48" pos:end="653:83"><block_content pos:start="653:48" pos:end="653:83">                                   <expr_stmt pos:start="653:48" pos:end="653:83"><expr pos:start="653:48" pos:end="653:82"><call pos:start="653:48" pos:end="653:82"><name pos:start="653:48" pos:end="653:53">av_log</name><argument_list pos:start="653:54" pos:end="653:82">(<argument pos:start="653:55" pos:end="653:55"><expr pos:start="653:55" pos:end="653:55"><name pos:start="653:55" pos:end="653:55">c</name></expr></argument>, <argument pos:start="653:58" pos:end="653:68"><expr pos:start="653:58" pos:end="653:68"><name pos:start="653:58" pos:end="653:68">AV_LOG_INFO</name></expr></argument>, <argument pos:start="653:71" pos:end="653:81"><expr pos:start="653:71" pos:end="653:81"><literal type="string" pos:start="653:71" pos:end="653:81">"using C\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="657:9" pos:end="711:9"><if pos:start="657:9" pos:end="693:9">if <condition pos:start="657:12" pos:end="657:52">(<expr pos:start="657:13" pos:end="657:51"><name pos:start="657:13" pos:end="657:20">HAVE_MMX</name> <operator pos:start="657:22" pos:end="657:23">&amp;&amp;</operator> <name pos:start="657:25" pos:end="657:33">cpu_flags</name> <operator pos:start="657:35" pos:end="657:35">&amp;</operator> <name pos:start="657:37" pos:end="657:51">AV_CPU_FLAG_MMX</name></expr>)</condition> <block pos:start="657:54" pos:end="693:9">{<block_content pos:start="659:13" pos:end="691:13">

            <if_stmt pos:start="659:13" pos:end="691:13"><if pos:start="659:13" pos:end="661:102">if <condition pos:start="659:16" pos:end="659:62">(<expr pos:start="659:17" pos:end="659:61"><name pos:start="659:17" pos:end="659:32"><name pos:start="659:17" pos:end="659:17">c</name><operator pos:start="659:18" pos:end="659:19">-&gt;</operator><name pos:start="659:20" pos:end="659:32">canMMX2BeUsed</name></name> <operator pos:start="659:34" pos:end="659:35">&amp;&amp;</operator> <operator pos:start="659:37" pos:end="659:37">(</operator><name pos:start="659:38" pos:end="659:42">flags</name><operator pos:start="659:43" pos:end="659:43">&amp;</operator><name pos:start="659:44" pos:end="659:60">SWS_FAST_BILINEAR</name><operator pos:start="659:61" pos:end="659:61">)</operator></expr>)</condition><block type="pseudo" pos:start="661:17" pos:end="661:102"><block_content pos:start="661:17" pos:end="661:102">

                <expr_stmt pos:start="661:17" pos:end="661:102"><expr pos:start="661:17" pos:end="661:101"><call pos:start="661:17" pos:end="661:101"><name pos:start="661:17" pos:end="661:22">av_log</name><argument_list pos:start="661:23" pos:end="661:101">(<argument pos:start="661:24" pos:end="661:24"><expr pos:start="661:24" pos:end="661:24"><name pos:start="661:24" pos:end="661:24">c</name></expr></argument>, <argument pos:start="661:27" pos:end="661:40"><expr pos:start="661:27" pos:end="661:40"><name pos:start="661:27" pos:end="661:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="661:43" pos:end="661:100"><expr pos:start="661:43" pos:end="661:100"><literal type="string" pos:start="661:43" pos:end="661:100">"using FAST_BILINEAR MMX2 scaler for horizontal scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="663:13" pos:end="691:13">else <block pos:start="663:18" pos:end="691:13">{<block_content pos:start="665:17" pos:end="689:109">

                <if_stmt pos:start="665:17" pos:end="675:107"><if pos:start="665:17" pos:end="667:107">if <condition pos:start="665:20" pos:end="665:41">(<expr pos:start="665:21" pos:end="665:40"><name pos:start="665:21" pos:end="665:37"><name pos:start="665:21" pos:end="665:21">c</name><operator pos:start="665:22" pos:end="665:23">-&gt;</operator><name pos:start="665:24" pos:end="665:37">hLumFilterSize</name></name><operator pos:start="665:38" pos:end="665:39">==</operator><literal type="number" pos:start="665:40" pos:end="665:40">4</literal></expr>)</condition><block type="pseudo" pos:start="667:21" pos:end="667:107"><block_content pos:start="667:21" pos:end="667:107">

                    <expr_stmt pos:start="667:21" pos:end="667:107"><expr pos:start="667:21" pos:end="667:106"><call pos:start="667:21" pos:end="667:106"><name pos:start="667:21" pos:end="667:26">av_log</name><argument_list pos:start="667:27" pos:end="667:106">(<argument pos:start="667:28" pos:end="667:28"><expr pos:start="667:28" pos:end="667:28"><name pos:start="667:28" pos:end="667:28">c</name></expr></argument>, <argument pos:start="667:31" pos:end="667:44"><expr pos:start="667:31" pos:end="667:44"><name pos:start="667:31" pos:end="667:44">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="667:47" pos:end="667:105"><expr pos:start="667:47" pos:end="667:105"><literal type="string" pos:start="667:47" pos:end="667:105">"using 4-tap MMX scaler for horizontal luminance scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="669:17" pos:end="671:107">else if <condition pos:start="669:25" pos:end="669:46">(<expr pos:start="669:26" pos:end="669:45"><name pos:start="669:26" pos:end="669:42"><name pos:start="669:26" pos:end="669:26">c</name><operator pos:start="669:27" pos:end="669:28">-&gt;</operator><name pos:start="669:29" pos:end="669:42">hLumFilterSize</name></name><operator pos:start="669:43" pos:end="669:44">==</operator><literal type="number" pos:start="669:45" pos:end="669:45">8</literal></expr>)</condition><block type="pseudo" pos:start="671:21" pos:end="671:107"><block_content pos:start="671:21" pos:end="671:107">

                    <expr_stmt pos:start="671:21" pos:end="671:107"><expr pos:start="671:21" pos:end="671:106"><call pos:start="671:21" pos:end="671:106"><name pos:start="671:21" pos:end="671:26">av_log</name><argument_list pos:start="671:27" pos:end="671:106">(<argument pos:start="671:28" pos:end="671:28"><expr pos:start="671:28" pos:end="671:28"><name pos:start="671:28" pos:end="671:28">c</name></expr></argument>, <argument pos:start="671:31" pos:end="671:44"><expr pos:start="671:31" pos:end="671:44"><name pos:start="671:31" pos:end="671:44">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="671:47" pos:end="671:105"><expr pos:start="671:47" pos:end="671:105"><literal type="string" pos:start="671:47" pos:end="671:105">"using 8-tap MMX scaler for horizontal luminance scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="673:17" pos:end="675:107">else<block type="pseudo" pos:start="675:21" pos:end="675:107"><block_content pos:start="675:21" pos:end="675:107">

                    <expr_stmt pos:start="675:21" pos:end="675:107"><expr pos:start="675:21" pos:end="675:106"><call pos:start="675:21" pos:end="675:106"><name pos:start="675:21" pos:end="675:26">av_log</name><argument_list pos:start="675:27" pos:end="675:106">(<argument pos:start="675:28" pos:end="675:28"><expr pos:start="675:28" pos:end="675:28"><name pos:start="675:28" pos:end="675:28">c</name></expr></argument>, <argument pos:start="675:31" pos:end="675:44"><expr pos:start="675:31" pos:end="675:44"><name pos:start="675:31" pos:end="675:44">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="675:47" pos:end="675:105"><expr pos:start="675:47" pos:end="675:105"><literal type="string" pos:start="675:47" pos:end="675:105">"using n-tap MMX scaler for horizontal luminance scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <if_stmt pos:start="679:17" pos:end="689:109"><if pos:start="679:17" pos:end="681:109">if <condition pos:start="679:20" pos:end="679:41">(<expr pos:start="679:21" pos:end="679:40"><name pos:start="679:21" pos:end="679:37"><name pos:start="679:21" pos:end="679:21">c</name><operator pos:start="679:22" pos:end="679:23">-&gt;</operator><name pos:start="679:24" pos:end="679:37">hChrFilterSize</name></name><operator pos:start="679:38" pos:end="679:39">==</operator><literal type="number" pos:start="679:40" pos:end="679:40">4</literal></expr>)</condition><block type="pseudo" pos:start="681:21" pos:end="681:109"><block_content pos:start="681:21" pos:end="681:109">

                    <expr_stmt pos:start="681:21" pos:end="681:109"><expr pos:start="681:21" pos:end="681:108"><call pos:start="681:21" pos:end="681:108"><name pos:start="681:21" pos:end="681:26">av_log</name><argument_list pos:start="681:27" pos:end="681:108">(<argument pos:start="681:28" pos:end="681:28"><expr pos:start="681:28" pos:end="681:28"><name pos:start="681:28" pos:end="681:28">c</name></expr></argument>, <argument pos:start="681:31" pos:end="681:44"><expr pos:start="681:31" pos:end="681:44"><name pos:start="681:31" pos:end="681:44">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="681:47" pos:end="681:107"><expr pos:start="681:47" pos:end="681:107"><literal type="string" pos:start="681:47" pos:end="681:107">"using 4-tap MMX scaler for horizontal chrominance scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="683:17" pos:end="685:109">else if <condition pos:start="683:25" pos:end="683:46">(<expr pos:start="683:26" pos:end="683:45"><name pos:start="683:26" pos:end="683:42"><name pos:start="683:26" pos:end="683:26">c</name><operator pos:start="683:27" pos:end="683:28">-&gt;</operator><name pos:start="683:29" pos:end="683:42">hChrFilterSize</name></name><operator pos:start="683:43" pos:end="683:44">==</operator><literal type="number" pos:start="683:45" pos:end="683:45">8</literal></expr>)</condition><block type="pseudo" pos:start="685:21" pos:end="685:109"><block_content pos:start="685:21" pos:end="685:109">

                    <expr_stmt pos:start="685:21" pos:end="685:109"><expr pos:start="685:21" pos:end="685:108"><call pos:start="685:21" pos:end="685:108"><name pos:start="685:21" pos:end="685:26">av_log</name><argument_list pos:start="685:27" pos:end="685:108">(<argument pos:start="685:28" pos:end="685:28"><expr pos:start="685:28" pos:end="685:28"><name pos:start="685:28" pos:end="685:28">c</name></expr></argument>, <argument pos:start="685:31" pos:end="685:44"><expr pos:start="685:31" pos:end="685:44"><name pos:start="685:31" pos:end="685:44">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="685:47" pos:end="685:107"><expr pos:start="685:47" pos:end="685:107"><literal type="string" pos:start="685:47" pos:end="685:107">"using 8-tap MMX scaler for horizontal chrominance scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="687:17" pos:end="689:109">else<block type="pseudo" pos:start="689:21" pos:end="689:109"><block_content pos:start="689:21" pos:end="689:109">

                    <expr_stmt pos:start="689:21" pos:end="689:109"><expr pos:start="689:21" pos:end="689:108"><call pos:start="689:21" pos:end="689:108"><name pos:start="689:21" pos:end="689:26">av_log</name><argument_list pos:start="689:27" pos:end="689:108">(<argument pos:start="689:28" pos:end="689:28"><expr pos:start="689:28" pos:end="689:28"><name pos:start="689:28" pos:end="689:28">c</name></expr></argument>, <argument pos:start="689:31" pos:end="689:44"><expr pos:start="689:31" pos:end="689:44"><name pos:start="689:31" pos:end="689:44">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="689:47" pos:end="689:107"><expr pos:start="689:47" pos:end="689:107"><literal type="string" pos:start="689:47" pos:end="689:107">"using n-tap MMX scaler for horizontal chrominance scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="693:11" pos:end="711:9">else <block pos:start="693:16" pos:end="711:9">{<block_content pos:start="697:13" pos:end="710:0">

<cpp:if pos:start="695:1" pos:end="695:12">#<cpp:directive pos:start="695:2" pos:end="695:3">if</cpp:directive> <expr pos:start="695:5" pos:end="695:12"><name pos:start="695:5" pos:end="695:12">HAVE_MMX</name></expr></cpp:if>

            <expr_stmt pos:start="697:13" pos:end="700:0"><expr pos:start="697:13" pos:end="697:86"><call pos:start="697:13" pos:end="697:86"><name pos:start="697:13" pos:end="697:18">av_log</name><argument_list pos:start="697:19" pos:end="697:86">(<argument pos:start="697:20" pos:end="697:20"><expr pos:start="697:20" pos:end="697:20"><name pos:start="697:20" pos:end="697:20">c</name></expr></argument>, <argument pos:start="697:23" pos:end="697:36"><expr pos:start="697:23" pos:end="697:36"><name pos:start="697:23" pos:end="697:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="697:39" pos:end="697:85"><expr pos:start="697:39" pos:end="697:85"><literal type="string" pos:start="697:39" pos:end="697:85">"using x86 asm scaler for horizontal scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="699:1" pos:end="699:5">#<cpp:directive pos:start="699:2" pos:end="699:5">else</cpp:directive></cpp:else>

            <if_stmt pos:start="701:13" pos:end="710:0"><if pos:start="701:13" pos:end="703:99">if <condition pos:start="701:16" pos:end="701:42">(<expr pos:start="701:17" pos:end="701:41"><name pos:start="701:17" pos:end="701:21">flags</name> <operator pos:start="701:23" pos:end="701:23">&amp;</operator> <name pos:start="701:25" pos:end="701:41">SWS_FAST_BILINEAR</name></expr>)</condition><block type="pseudo" pos:start="703:17" pos:end="703:99"><block_content pos:start="703:17" pos:end="703:99">

                <expr_stmt pos:start="703:17" pos:end="703:99"><expr pos:start="703:17" pos:end="703:98"><call pos:start="703:17" pos:end="703:98"><name pos:start="703:17" pos:end="703:22">av_log</name><argument_list pos:start="703:23" pos:end="703:98">(<argument pos:start="703:24" pos:end="703:24"><expr pos:start="703:24" pos:end="703:24"><name pos:start="703:24" pos:end="703:24">c</name></expr></argument>, <argument pos:start="703:27" pos:end="703:40"><expr pos:start="703:27" pos:end="703:40"><name pos:start="703:27" pos:end="703:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="703:43" pos:end="703:97"><expr pos:start="703:43" pos:end="703:97"><literal type="string" pos:start="703:43" pos:end="703:97">"using FAST_BILINEAR C scaler for horizontal scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="705:13" pos:end="710:0">else<block type="pseudo" pos:start="707:17" pos:end="710:0"><block_content pos:start="707:17" pos:end="710:0">

                <expr_stmt pos:start="707:17" pos:end="710:0"><expr pos:start="707:17" pos:end="707:84"><call pos:start="707:17" pos:end="707:84"><name pos:start="707:17" pos:end="707:22">av_log</name><argument_list pos:start="707:23" pos:end="707:84">(<argument pos:start="707:24" pos:end="707:24"><expr pos:start="707:24" pos:end="707:24"><name pos:start="707:24" pos:end="707:24">c</name></expr></argument>, <argument pos:start="707:27" pos:end="707:40"><expr pos:start="707:27" pos:end="707:40"><name pos:start="707:27" pos:end="707:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="707:43" pos:end="707:83"><expr pos:start="707:43" pos:end="707:83"><literal type="string" pos:start="707:43" pos:end="707:83">"using C scaler for horizontal scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<cpp:endif pos:start="709:1" pos:end="709:6">#<cpp:directive pos:start="709:2" pos:end="709:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="713:9" pos:end="749:9"><if pos:start="713:9" pos:end="727:9">if <condition pos:start="713:12" pos:end="713:35">(<expr pos:start="713:13" pos:end="713:34"><call pos:start="713:13" pos:end="713:34"><name pos:start="713:13" pos:end="713:23">isPlanarYUV</name><argument_list pos:start="713:24" pos:end="713:34">(<argument pos:start="713:25" pos:end="713:33"><expr pos:start="713:25" pos:end="713:33"><name pos:start="713:25" pos:end="713:33">dstFormat</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="713:37" pos:end="727:9">{<block_content pos:start="715:13" pos:end="725:80">

            <if_stmt pos:start="715:13" pos:end="725:80"><if pos:start="715:13" pos:end="719:80">if <condition pos:start="715:16" pos:end="715:37">(<expr pos:start="715:17" pos:end="715:36"><name pos:start="715:17" pos:end="715:33"><name pos:start="715:17" pos:end="715:17">c</name><operator pos:start="715:18" pos:end="715:19">-&gt;</operator><name pos:start="715:20" pos:end="715:33">vLumFilterSize</name></name><operator pos:start="715:34" pos:end="715:35">==</operator><literal type="number" pos:start="715:36" pos:end="715:36">1</literal></expr>)</condition><block type="pseudo" pos:start="717:17" pos:end="719:80"><block_content pos:start="717:17" pos:end="719:80">

                <expr_stmt pos:start="717:17" pos:end="719:80"><expr pos:start="717:17" pos:end="719:79"><call pos:start="717:17" pos:end="719:79"><name pos:start="717:17" pos:end="717:22">av_log</name><argument_list pos:start="717:23" pos:end="719:79">(<argument pos:start="717:24" pos:end="717:24"><expr pos:start="717:24" pos:end="717:24"><name pos:start="717:24" pos:end="717:24">c</name></expr></argument>, <argument pos:start="717:27" pos:end="717:40"><expr pos:start="717:27" pos:end="717:40"><name pos:start="717:27" pos:end="717:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="717:43" pos:end="717:104"><expr pos:start="717:43" pos:end="717:104"><literal type="string" pos:start="717:43" pos:end="717:104">"using 1-tap %s \"scaler\" for vertical scaling (YV12 like)\n"</literal></expr></argument>,

                       <argument pos:start="719:24" pos:end="719:78"><expr pos:start="719:24" pos:end="719:78"><ternary pos:start="719:24" pos:end="719:78"><condition pos:start="719:24" pos:end="719:66"><expr pos:start="719:24" pos:end="719:64"><operator pos:start="719:24" pos:end="719:24">(</operator><name pos:start="719:25" pos:end="719:32">HAVE_MMX</name> <operator pos:start="719:34" pos:end="719:35">&amp;&amp;</operator> <name pos:start="719:37" pos:end="719:45">cpu_flags</name> <operator pos:start="719:47" pos:end="719:47">&amp;</operator> <name pos:start="719:49" pos:end="719:63">AV_CPU_FLAG_MMX</name><operator pos:start="719:64" pos:end="719:64">)</operator></expr> ?</condition><then pos:start="719:68" pos:end="719:72"> <expr pos:start="719:68" pos:end="719:72"><literal type="string" pos:start="719:68" pos:end="719:72">"MMX"</literal></expr> </then><else pos:start="719:74" pos:end="719:78">: <expr pos:start="719:76" pos:end="719:78"><literal type="string" pos:start="719:76" pos:end="719:78">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="721:13" pos:end="725:80">else<block type="pseudo" pos:start="723:17" pos:end="725:80"><block_content pos:start="723:17" pos:end="725:80">

                <expr_stmt pos:start="723:17" pos:end="725:80"><expr pos:start="723:17" pos:end="725:79"><call pos:start="723:17" pos:end="725:79"><name pos:start="723:17" pos:end="723:22">av_log</name><argument_list pos:start="723:23" pos:end="725:79">(<argument pos:start="723:24" pos:end="723:24"><expr pos:start="723:24" pos:end="723:24"><name pos:start="723:24" pos:end="723:24">c</name></expr></argument>, <argument pos:start="723:27" pos:end="723:40"><expr pos:start="723:27" pos:end="723:40"><name pos:start="723:27" pos:end="723:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="723:43" pos:end="723:100"><expr pos:start="723:43" pos:end="723:100"><literal type="string" pos:start="723:43" pos:end="723:100">"using n-tap %s scaler for vertical scaling (YV12 like)\n"</literal></expr></argument>,

                       <argument pos:start="725:24" pos:end="725:78"><expr pos:start="725:24" pos:end="725:78"><ternary pos:start="725:24" pos:end="725:78"><condition pos:start="725:24" pos:end="725:66"><expr pos:start="725:24" pos:end="725:64"><operator pos:start="725:24" pos:end="725:24">(</operator><name pos:start="725:25" pos:end="725:32">HAVE_MMX</name> <operator pos:start="725:34" pos:end="725:35">&amp;&amp;</operator> <name pos:start="725:37" pos:end="725:45">cpu_flags</name> <operator pos:start="725:47" pos:end="725:47">&amp;</operator> <name pos:start="725:49" pos:end="725:63">AV_CPU_FLAG_MMX</name><operator pos:start="725:64" pos:end="725:64">)</operator></expr> ?</condition><then pos:start="725:68" pos:end="725:72"> <expr pos:start="725:68" pos:end="725:72"><literal type="string" pos:start="725:68" pos:end="725:72">"MMX"</literal></expr> </then><else pos:start="725:74" pos:end="725:78">: <expr pos:start="725:76" pos:end="725:78"><literal type="string" pos:start="725:76" pos:end="725:78">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="727:11" pos:end="749:9">else <block pos:start="727:16" pos:end="749:9">{<block_content pos:start="729:13" pos:end="747:80">

            <if_stmt pos:start="729:13" pos:end="747:80"><if pos:start="729:13" pos:end="735:80">if <condition pos:start="729:16" pos:end="729:61">(<expr pos:start="729:17" pos:end="729:60"><name pos:start="729:17" pos:end="729:33"><name pos:start="729:17" pos:end="729:17">c</name><operator pos:start="729:18" pos:end="729:19">-&gt;</operator><name pos:start="729:20" pos:end="729:33">vLumFilterSize</name></name><operator pos:start="729:34" pos:end="729:35">==</operator><literal type="number" pos:start="729:36" pos:end="729:36">1</literal> <operator pos:start="729:38" pos:end="729:39">&amp;&amp;</operator> <name pos:start="729:41" pos:end="729:57"><name pos:start="729:41" pos:end="729:41">c</name><operator pos:start="729:42" pos:end="729:43">-&gt;</operator><name pos:start="729:44" pos:end="729:57">vChrFilterSize</name></name><operator pos:start="729:58" pos:end="729:59">==</operator><literal type="number" pos:start="729:60" pos:end="729:60">2</literal></expr>)</condition><block type="pseudo" pos:start="731:17" pos:end="735:80"><block_content pos:start="731:17" pos:end="735:80">

                <expr_stmt pos:start="731:17" pos:end="735:80"><expr pos:start="731:17" pos:end="735:79"><call pos:start="731:17" pos:end="735:79"><name pos:start="731:17" pos:end="731:22">av_log</name><argument_list pos:start="731:23" pos:end="735:79">(<argument pos:start="731:24" pos:end="731:24"><expr pos:start="731:24" pos:end="731:24"><name pos:start="731:24" pos:end="731:24">c</name></expr></argument>, <argument pos:start="731:27" pos:end="731:40"><expr pos:start="731:27" pos:end="731:40"><name pos:start="731:27" pos:end="731:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="731:43" pos:end="733:84"><expr pos:start="731:43" pos:end="733:84"><literal type="string" pos:start="731:43" pos:end="731:108">"using 1-tap %s \"scaler\" for vertical luminance scaling (BGR)\n"</literal>

                       <literal type="string" pos:start="733:24" pos:end="733:84">"      2-tap scaler for vertical chrominance scaling (BGR)\n"</literal></expr></argument>,

                       <argument pos:start="735:24" pos:end="735:78"><expr pos:start="735:24" pos:end="735:78"><ternary pos:start="735:24" pos:end="735:78"><condition pos:start="735:24" pos:end="735:66"><expr pos:start="735:24" pos:end="735:64"><operator pos:start="735:24" pos:end="735:24">(</operator><name pos:start="735:25" pos:end="735:32">HAVE_MMX</name> <operator pos:start="735:34" pos:end="735:35">&amp;&amp;</operator> <name pos:start="735:37" pos:end="735:45">cpu_flags</name> <operator pos:start="735:47" pos:end="735:47">&amp;</operator> <name pos:start="735:49" pos:end="735:63">AV_CPU_FLAG_MMX</name><operator pos:start="735:64" pos:end="735:64">)</operator></expr> ?</condition><then pos:start="735:68" pos:end="735:72"> <expr pos:start="735:68" pos:end="735:72"><literal type="string" pos:start="735:68" pos:end="735:72">"MMX"</literal></expr> </then><else pos:start="735:74" pos:end="735:78">: <expr pos:start="735:76" pos:end="735:78"><literal type="string" pos:start="735:76" pos:end="735:78">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="737:13" pos:end="741:80">else if <condition pos:start="737:21" pos:end="737:66">(<expr pos:start="737:22" pos:end="737:65"><name pos:start="737:22" pos:end="737:38"><name pos:start="737:22" pos:end="737:22">c</name><operator pos:start="737:23" pos:end="737:24">-&gt;</operator><name pos:start="737:25" pos:end="737:38">vLumFilterSize</name></name><operator pos:start="737:39" pos:end="737:40">==</operator><literal type="number" pos:start="737:41" pos:end="737:41">2</literal> <operator pos:start="737:43" pos:end="737:44">&amp;&amp;</operator> <name pos:start="737:46" pos:end="737:62"><name pos:start="737:46" pos:end="737:46">c</name><operator pos:start="737:47" pos:end="737:48">-&gt;</operator><name pos:start="737:49" pos:end="737:62">vChrFilterSize</name></name><operator pos:start="737:63" pos:end="737:64">==</operator><literal type="number" pos:start="737:65" pos:end="737:65">2</literal></expr>)</condition><block type="pseudo" pos:start="739:17" pos:end="741:80"><block_content pos:start="739:17" pos:end="741:80">

                <expr_stmt pos:start="739:17" pos:end="741:80"><expr pos:start="739:17" pos:end="741:79"><call pos:start="739:17" pos:end="741:79"><name pos:start="739:17" pos:end="739:22">av_log</name><argument_list pos:start="739:23" pos:end="741:79">(<argument pos:start="739:24" pos:end="739:24"><expr pos:start="739:24" pos:end="739:24"><name pos:start="739:24" pos:end="739:24">c</name></expr></argument>, <argument pos:start="739:27" pos:end="739:40"><expr pos:start="739:27" pos:end="739:40"><name pos:start="739:27" pos:end="739:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="739:43" pos:end="739:101"><expr pos:start="739:43" pos:end="739:101"><literal type="string" pos:start="739:43" pos:end="739:101">"using 2-tap linear %s scaler for vertical scaling (BGR)\n"</literal></expr></argument>,

                       <argument pos:start="741:24" pos:end="741:78"><expr pos:start="741:24" pos:end="741:78"><ternary pos:start="741:24" pos:end="741:78"><condition pos:start="741:24" pos:end="741:66"><expr pos:start="741:24" pos:end="741:64"><operator pos:start="741:24" pos:end="741:24">(</operator><name pos:start="741:25" pos:end="741:32">HAVE_MMX</name> <operator pos:start="741:34" pos:end="741:35">&amp;&amp;</operator> <name pos:start="741:37" pos:end="741:45">cpu_flags</name> <operator pos:start="741:47" pos:end="741:47">&amp;</operator> <name pos:start="741:49" pos:end="741:63">AV_CPU_FLAG_MMX</name><operator pos:start="741:64" pos:end="741:64">)</operator></expr> ?</condition><then pos:start="741:68" pos:end="741:72"> <expr pos:start="741:68" pos:end="741:72"><literal type="string" pos:start="741:68" pos:end="741:72">"MMX"</literal></expr> </then><else pos:start="741:74" pos:end="741:78">: <expr pos:start="741:76" pos:end="741:78"><literal type="string" pos:start="741:76" pos:end="741:78">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="743:13" pos:end="747:80">else<block type="pseudo" pos:start="745:17" pos:end="747:80"><block_content pos:start="745:17" pos:end="747:80">

                <expr_stmt pos:start="745:17" pos:end="747:80"><expr pos:start="745:17" pos:end="747:79"><call pos:start="745:17" pos:end="747:79"><name pos:start="745:17" pos:end="745:22">av_log</name><argument_list pos:start="745:23" pos:end="747:79">(<argument pos:start="745:24" pos:end="745:24"><expr pos:start="745:24" pos:end="745:24"><name pos:start="745:24" pos:end="745:24">c</name></expr></argument>, <argument pos:start="745:27" pos:end="745:40"><expr pos:start="745:27" pos:end="745:40"><name pos:start="745:27" pos:end="745:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="745:43" pos:end="745:94"><expr pos:start="745:43" pos:end="745:94"><literal type="string" pos:start="745:43" pos:end="745:94">"using n-tap %s scaler for vertical scaling (BGR)\n"</literal></expr></argument>,

                       <argument pos:start="747:24" pos:end="747:78"><expr pos:start="747:24" pos:end="747:78"><ternary pos:start="747:24" pos:end="747:78"><condition pos:start="747:24" pos:end="747:66"><expr pos:start="747:24" pos:end="747:64"><operator pos:start="747:24" pos:end="747:24">(</operator><name pos:start="747:25" pos:end="747:32">HAVE_MMX</name> <operator pos:start="747:34" pos:end="747:35">&amp;&amp;</operator> <name pos:start="747:37" pos:end="747:45">cpu_flags</name> <operator pos:start="747:47" pos:end="747:47">&amp;</operator> <name pos:start="747:49" pos:end="747:63">AV_CPU_FLAG_MMX</name><operator pos:start="747:64" pos:end="747:64">)</operator></expr> ?</condition><then pos:start="747:68" pos:end="747:72"> <expr pos:start="747:68" pos:end="747:72"><literal type="string" pos:start="747:68" pos:end="747:72">"MMX"</literal></expr> </then><else pos:start="747:74" pos:end="747:78">: <expr pos:start="747:76" pos:end="747:78"><literal type="string" pos:start="747:76" pos:end="747:78">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="753:9" pos:end="785:76"><if pos:start="753:9" pos:end="759:78">if <condition pos:start="753:12" pos:end="753:37">(<expr pos:start="753:13" pos:end="753:36"><name pos:start="753:13" pos:end="753:21">dstFormat</name><operator pos:start="753:22" pos:end="753:23">==</operator><name pos:start="753:24" pos:end="753:36">PIX_FMT_BGR24</name></expr>)</condition><block type="pseudo" pos:start="755:13" pos:end="759:78"><block_content pos:start="755:13" pos:end="759:78">

            <expr_stmt pos:start="755:13" pos:end="759:78"><expr pos:start="755:13" pos:end="759:77"><call pos:start="755:13" pos:end="759:77"><name pos:start="755:13" pos:end="755:18">av_log</name><argument_list pos:start="755:19" pos:end="759:77">(<argument pos:start="755:20" pos:end="755:20"><expr pos:start="755:20" pos:end="755:20"><name pos:start="755:20" pos:end="755:20">c</name></expr></argument>, <argument pos:start="755:23" pos:end="755:36"><expr pos:start="755:23" pos:end="755:36"><name pos:start="755:23" pos:end="755:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="755:39" pos:end="755:72"><expr pos:start="755:39" pos:end="755:72"><literal type="string" pos:start="755:39" pos:end="755:72">"using %s YV12-&gt;BGR24 converter\n"</literal></expr></argument>,

                   <argument pos:start="757:20" pos:end="759:76"><expr pos:start="757:20" pos:end="759:76"><ternary pos:start="757:20" pos:end="759:76"><condition pos:start="757:20" pos:end="757:64"><expr pos:start="757:20" pos:end="757:62"><operator pos:start="757:20" pos:end="757:20">(</operator><name pos:start="757:21" pos:end="757:29">HAVE_MMX2</name> <operator pos:start="757:31" pos:end="757:32">&amp;&amp;</operator> <name pos:start="757:34" pos:end="757:42">cpu_flags</name> <operator pos:start="757:44" pos:end="757:44">&amp;</operator> <name pos:start="757:46" pos:end="757:61">AV_CPU_FLAG_MMX2</name><operator pos:start="757:62" pos:end="757:62">)</operator></expr> ?</condition><then pos:start="757:66" pos:end="757:71"> <expr pos:start="757:66" pos:end="757:71"><literal type="string" pos:start="757:66" pos:end="757:71">"MMX2"</literal></expr> </then><else pos:start="757:73" pos:end="759:76">:

                   <expr pos:start="759:20" pos:end="759:76"><operator pos:start="759:20" pos:end="759:20">(</operator><ternary pos:start="759:21" pos:end="759:75"><condition pos:start="759:21" pos:end="759:63"><expr pos:start="759:21" pos:end="759:61"><operator pos:start="759:21" pos:end="759:21">(</operator><name pos:start="759:22" pos:end="759:29">HAVE_MMX</name> <operator pos:start="759:31" pos:end="759:32">&amp;&amp;</operator> <name pos:start="759:34" pos:end="759:42">cpu_flags</name> <operator pos:start="759:44" pos:end="759:44">&amp;</operator> <name pos:start="759:46" pos:end="759:60">AV_CPU_FLAG_MMX</name><operator pos:start="759:61" pos:end="759:61">)</operator></expr> ?</condition><then pos:start="759:65" pos:end="759:69"> <expr pos:start="759:65" pos:end="759:69"><literal type="string" pos:start="759:65" pos:end="759:69">"MMX"</literal></expr> </then><else pos:start="759:71" pos:end="759:75">: <expr pos:start="759:73" pos:end="759:75"><literal type="string" pos:start="759:73" pos:end="759:75">"C"</literal></expr></else></ternary><operator pos:start="759:76" pos:end="759:76">)</operator></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="761:9" pos:end="765:76">else if <condition pos:start="761:17" pos:end="761:42">(<expr pos:start="761:18" pos:end="761:41"><name pos:start="761:18" pos:end="761:26">dstFormat</name><operator pos:start="761:27" pos:end="761:28">==</operator><name pos:start="761:29" pos:end="761:41">PIX_FMT_RGB32</name></expr>)</condition><block type="pseudo" pos:start="763:13" pos:end="765:76"><block_content pos:start="763:13" pos:end="765:76">

            <expr_stmt pos:start="763:13" pos:end="765:76"><expr pos:start="763:13" pos:end="765:75"><call pos:start="763:13" pos:end="765:75"><name pos:start="763:13" pos:end="763:18">av_log</name><argument_list pos:start="763:19" pos:end="765:75">(<argument pos:start="763:20" pos:end="763:20"><expr pos:start="763:20" pos:end="763:20"><name pos:start="763:20" pos:end="763:20">c</name></expr></argument>, <argument pos:start="763:23" pos:end="763:36"><expr pos:start="763:23" pos:end="763:36"><name pos:start="763:23" pos:end="763:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="763:39" pos:end="763:72"><expr pos:start="763:39" pos:end="763:72"><literal type="string" pos:start="763:39" pos:end="763:72">"using %s YV12-&gt;BGR32 converter\n"</literal></expr></argument>,

                   <argument pos:start="765:20" pos:end="765:74"><expr pos:start="765:20" pos:end="765:74"><ternary pos:start="765:20" pos:end="765:74"><condition pos:start="765:20" pos:end="765:62"><expr pos:start="765:20" pos:end="765:60"><operator pos:start="765:20" pos:end="765:20">(</operator><name pos:start="765:21" pos:end="765:28">HAVE_MMX</name> <operator pos:start="765:30" pos:end="765:31">&amp;&amp;</operator> <name pos:start="765:33" pos:end="765:41">cpu_flags</name> <operator pos:start="765:43" pos:end="765:43">&amp;</operator> <name pos:start="765:45" pos:end="765:59">AV_CPU_FLAG_MMX</name><operator pos:start="765:60" pos:end="765:60">)</operator></expr> ?</condition><then pos:start="765:64" pos:end="765:68"> <expr pos:start="765:64" pos:end="765:68"><literal type="string" pos:start="765:64" pos:end="765:68">"MMX"</literal></expr> </then><else pos:start="765:70" pos:end="765:74">: <expr pos:start="765:72" pos:end="765:74"><literal type="string" pos:start="765:72" pos:end="765:74">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="767:9" pos:end="771:76">else if <condition pos:start="767:17" pos:end="767:43">(<expr pos:start="767:18" pos:end="767:42"><name pos:start="767:18" pos:end="767:26">dstFormat</name><operator pos:start="767:27" pos:end="767:28">==</operator><name pos:start="767:29" pos:end="767:42">PIX_FMT_BGR565</name></expr>)</condition><block type="pseudo" pos:start="769:13" pos:end="771:76"><block_content pos:start="769:13" pos:end="771:76">

            <expr_stmt pos:start="769:13" pos:end="771:76"><expr pos:start="769:13" pos:end="771:75"><call pos:start="769:13" pos:end="771:75"><name pos:start="769:13" pos:end="769:18">av_log</name><argument_list pos:start="769:19" pos:end="771:75">(<argument pos:start="769:20" pos:end="769:20"><expr pos:start="769:20" pos:end="769:20"><name pos:start="769:20" pos:end="769:20">c</name></expr></argument>, <argument pos:start="769:23" pos:end="769:36"><expr pos:start="769:23" pos:end="769:36"><name pos:start="769:23" pos:end="769:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="769:39" pos:end="769:72"><expr pos:start="769:39" pos:end="769:72"><literal type="string" pos:start="769:39" pos:end="769:72">"using %s YV12-&gt;BGR16 converter\n"</literal></expr></argument>,

                   <argument pos:start="771:20" pos:end="771:74"><expr pos:start="771:20" pos:end="771:74"><ternary pos:start="771:20" pos:end="771:74"><condition pos:start="771:20" pos:end="771:62"><expr pos:start="771:20" pos:end="771:60"><operator pos:start="771:20" pos:end="771:20">(</operator><name pos:start="771:21" pos:end="771:28">HAVE_MMX</name> <operator pos:start="771:30" pos:end="771:31">&amp;&amp;</operator> <name pos:start="771:33" pos:end="771:41">cpu_flags</name> <operator pos:start="771:43" pos:end="771:43">&amp;</operator> <name pos:start="771:45" pos:end="771:59">AV_CPU_FLAG_MMX</name><operator pos:start="771:60" pos:end="771:60">)</operator></expr> ?</condition><then pos:start="771:64" pos:end="771:68"> <expr pos:start="771:64" pos:end="771:68"><literal type="string" pos:start="771:64" pos:end="771:68">"MMX"</literal></expr> </then><else pos:start="771:70" pos:end="771:74">: <expr pos:start="771:72" pos:end="771:74"><literal type="string" pos:start="771:72" pos:end="771:74">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="773:9" pos:end="777:76">else if <condition pos:start="773:17" pos:end="773:43">(<expr pos:start="773:18" pos:end="773:42"><name pos:start="773:18" pos:end="773:26">dstFormat</name><operator pos:start="773:27" pos:end="773:28">==</operator><name pos:start="773:29" pos:end="773:42">PIX_FMT_BGR555</name></expr>)</condition><block type="pseudo" pos:start="775:13" pos:end="777:76"><block_content pos:start="775:13" pos:end="777:76">

            <expr_stmt pos:start="775:13" pos:end="777:76"><expr pos:start="775:13" pos:end="777:75"><call pos:start="775:13" pos:end="777:75"><name pos:start="775:13" pos:end="775:18">av_log</name><argument_list pos:start="775:19" pos:end="777:75">(<argument pos:start="775:20" pos:end="775:20"><expr pos:start="775:20" pos:end="775:20"><name pos:start="775:20" pos:end="775:20">c</name></expr></argument>, <argument pos:start="775:23" pos:end="775:36"><expr pos:start="775:23" pos:end="775:36"><name pos:start="775:23" pos:end="775:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="775:39" pos:end="775:72"><expr pos:start="775:39" pos:end="775:72"><literal type="string" pos:start="775:39" pos:end="775:72">"using %s YV12-&gt;BGR15 converter\n"</literal></expr></argument>,

                   <argument pos:start="777:20" pos:end="777:74"><expr pos:start="777:20" pos:end="777:74"><ternary pos:start="777:20" pos:end="777:74"><condition pos:start="777:20" pos:end="777:62"><expr pos:start="777:20" pos:end="777:60"><operator pos:start="777:20" pos:end="777:20">(</operator><name pos:start="777:21" pos:end="777:28">HAVE_MMX</name> <operator pos:start="777:30" pos:end="777:31">&amp;&amp;</operator> <name pos:start="777:33" pos:end="777:41">cpu_flags</name> <operator pos:start="777:43" pos:end="777:43">&amp;</operator> <name pos:start="777:45" pos:end="777:59">AV_CPU_FLAG_MMX</name><operator pos:start="777:60" pos:end="777:60">)</operator></expr> ?</condition><then pos:start="777:64" pos:end="777:68"> <expr pos:start="777:64" pos:end="777:68"><literal type="string" pos:start="777:64" pos:end="777:68">"MMX"</literal></expr> </then><else pos:start="777:70" pos:end="777:74">: <expr pos:start="777:72" pos:end="777:74"><literal type="string" pos:start="777:72" pos:end="777:74">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="779:9" pos:end="785:76">else if <condition pos:start="779:17" pos:end="781:80">(<expr pos:start="779:18" pos:end="781:79"><name pos:start="779:18" pos:end="779:26">dstFormat</name> <operator pos:start="779:28" pos:end="779:29">==</operator> <name pos:start="779:31" pos:end="779:46">PIX_FMT_RGB444BE</name> <operator pos:start="779:48" pos:end="779:49">||</operator> <name pos:start="779:51" pos:end="779:59">dstFormat</name> <operator pos:start="779:61" pos:end="779:62">==</operator> <name pos:start="779:64" pos:end="779:79">PIX_FMT_RGB444LE</name> <operator pos:start="779:81" pos:end="779:82">||</operator>

                 <name pos:start="781:18" pos:end="781:26">dstFormat</name> <operator pos:start="781:28" pos:end="781:29">==</operator> <name pos:start="781:31" pos:end="781:46">PIX_FMT_BGR444BE</name> <operator pos:start="781:48" pos:end="781:49">||</operator> <name pos:start="781:51" pos:end="781:59">dstFormat</name> <operator pos:start="781:61" pos:end="781:62">==</operator> <name pos:start="781:64" pos:end="781:79">PIX_FMT_BGR444LE</name></expr>)</condition><block type="pseudo" pos:start="783:13" pos:end="785:76"><block_content pos:start="783:13" pos:end="785:76">

            <expr_stmt pos:start="783:13" pos:end="785:76"><expr pos:start="783:13" pos:end="785:75"><call pos:start="783:13" pos:end="785:75"><name pos:start="783:13" pos:end="783:18">av_log</name><argument_list pos:start="783:19" pos:end="785:75">(<argument pos:start="783:20" pos:end="783:20"><expr pos:start="783:20" pos:end="783:20"><name pos:start="783:20" pos:end="783:20">c</name></expr></argument>, <argument pos:start="783:23" pos:end="783:36"><expr pos:start="783:23" pos:end="783:36"><name pos:start="783:23" pos:end="783:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="783:39" pos:end="783:72"><expr pos:start="783:39" pos:end="783:72"><literal type="string" pos:start="783:39" pos:end="783:72">"using %s YV12-&gt;BGR12 converter\n"</literal></expr></argument>,

                   <argument pos:start="785:20" pos:end="785:74"><expr pos:start="785:20" pos:end="785:74"><ternary pos:start="785:20" pos:end="785:74"><condition pos:start="785:20" pos:end="785:62"><expr pos:start="785:20" pos:end="785:60"><operator pos:start="785:20" pos:end="785:20">(</operator><name pos:start="785:21" pos:end="785:28">HAVE_MMX</name> <operator pos:start="785:30" pos:end="785:31">&amp;&amp;</operator> <name pos:start="785:33" pos:end="785:41">cpu_flags</name> <operator pos:start="785:43" pos:end="785:43">&amp;</operator> <name pos:start="785:45" pos:end="785:59">AV_CPU_FLAG_MMX</name><operator pos:start="785:60" pos:end="785:60">)</operator></expr> ?</condition><then pos:start="785:64" pos:end="785:68"> <expr pos:start="785:64" pos:end="785:68"><literal type="string" pos:start="785:64" pos:end="785:68">"MMX"</literal></expr> </then><else pos:start="785:70" pos:end="785:74">: <expr pos:start="785:72" pos:end="785:74"><literal type="string" pos:start="785:72" pos:end="785:74">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="789:9" pos:end="789:78"><expr pos:start="789:9" pos:end="789:77"><call pos:start="789:9" pos:end="789:77"><name pos:start="789:9" pos:end="789:14">av_log</name><argument_list pos:start="789:15" pos:end="789:77">(<argument pos:start="789:16" pos:end="789:16"><expr pos:start="789:16" pos:end="789:16"><name pos:start="789:16" pos:end="789:16">c</name></expr></argument>, <argument pos:start="789:19" pos:end="789:32"><expr pos:start="789:19" pos:end="789:32"><name pos:start="789:19" pos:end="789:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="789:35" pos:end="789:52"><expr pos:start="789:35" pos:end="789:52"><literal type="string" pos:start="789:35" pos:end="789:52">"%dx%d -&gt; %dx%d\n"</literal></expr></argument>, <argument pos:start="789:55" pos:end="789:58"><expr pos:start="789:55" pos:end="789:58"><name pos:start="789:55" pos:end="789:58">srcW</name></expr></argument>, <argument pos:start="789:61" pos:end="789:64"><expr pos:start="789:61" pos:end="789:64"><name pos:start="789:61" pos:end="789:64">srcH</name></expr></argument>, <argument pos:start="789:67" pos:end="789:70"><expr pos:start="789:67" pos:end="789:70"><name pos:start="789:67" pos:end="789:70">dstW</name></expr></argument>, <argument pos:start="789:73" pos:end="789:76"><expr pos:start="789:73" pos:end="789:76"><name pos:start="789:73" pos:end="789:76">dstH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="791:9" pos:end="793:75"><expr pos:start="791:9" pos:end="793:74"><call pos:start="791:9" pos:end="793:74"><name pos:start="791:9" pos:end="791:14">av_log</name><argument_list pos:start="791:15" pos:end="793:74">(<argument pos:start="791:16" pos:end="791:16"><expr pos:start="791:16" pos:end="791:16"><name pos:start="791:16" pos:end="791:16">c</name></expr></argument>, <argument pos:start="791:19" pos:end="791:30"><expr pos:start="791:19" pos:end="791:30"><name pos:start="791:19" pos:end="791:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="791:33" pos:end="791:87"><expr pos:start="791:33" pos:end="791:87"><literal type="string" pos:start="791:33" pos:end="791:87">"lum srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\n"</literal></expr></argument>,

               <argument pos:start="793:16" pos:end="793:22"><expr pos:start="793:16" pos:end="793:22"><name pos:start="793:16" pos:end="793:22"><name pos:start="793:16" pos:end="793:16">c</name><operator pos:start="793:17" pos:end="793:18">-&gt;</operator><name pos:start="793:19" pos:end="793:22">srcW</name></name></expr></argument>, <argument pos:start="793:25" pos:end="793:31"><expr pos:start="793:25" pos:end="793:31"><name pos:start="793:25" pos:end="793:31"><name pos:start="793:25" pos:end="793:25">c</name><operator pos:start="793:26" pos:end="793:27">-&gt;</operator><name pos:start="793:28" pos:end="793:31">srcH</name></name></expr></argument>, <argument pos:start="793:34" pos:end="793:40"><expr pos:start="793:34" pos:end="793:40"><name pos:start="793:34" pos:end="793:40"><name pos:start="793:34" pos:end="793:34">c</name><operator pos:start="793:35" pos:end="793:36">-&gt;</operator><name pos:start="793:37" pos:end="793:40">dstW</name></name></expr></argument>, <argument pos:start="793:43" pos:end="793:49"><expr pos:start="793:43" pos:end="793:49"><name pos:start="793:43" pos:end="793:49"><name pos:start="793:43" pos:end="793:43">c</name><operator pos:start="793:44" pos:end="793:45">-&gt;</operator><name pos:start="793:46" pos:end="793:49">dstH</name></name></expr></argument>, <argument pos:start="793:52" pos:end="793:61"><expr pos:start="793:52" pos:end="793:61"><name pos:start="793:52" pos:end="793:61"><name pos:start="793:52" pos:end="793:52">c</name><operator pos:start="793:53" pos:end="793:54">-&gt;</operator><name pos:start="793:55" pos:end="793:61">lumXInc</name></name></expr></argument>, <argument pos:start="793:64" pos:end="793:73"><expr pos:start="793:64" pos:end="793:73"><name pos:start="793:64" pos:end="793:73"><name pos:start="793:64" pos:end="793:64">c</name><operator pos:start="793:65" pos:end="793:66">-&gt;</operator><name pos:start="793:67" pos:end="793:73">lumYInc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="795:9" pos:end="797:87"><expr pos:start="795:9" pos:end="797:86"><call pos:start="795:9" pos:end="797:86"><name pos:start="795:9" pos:end="795:14">av_log</name><argument_list pos:start="795:15" pos:end="797:86">(<argument pos:start="795:16" pos:end="795:16"><expr pos:start="795:16" pos:end="795:16"><name pos:start="795:16" pos:end="795:16">c</name></expr></argument>, <argument pos:start="795:19" pos:end="795:30"><expr pos:start="795:19" pos:end="795:30"><name pos:start="795:19" pos:end="795:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="795:33" pos:end="795:87"><expr pos:start="795:33" pos:end="795:87"><literal type="string" pos:start="795:33" pos:end="795:87">"chr srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\n"</literal></expr></argument>,

               <argument pos:start="797:16" pos:end="797:25"><expr pos:start="797:16" pos:end="797:25"><name pos:start="797:16" pos:end="797:25"><name pos:start="797:16" pos:end="797:16">c</name><operator pos:start="797:17" pos:end="797:18">-&gt;</operator><name pos:start="797:19" pos:end="797:25">chrSrcW</name></name></expr></argument>, <argument pos:start="797:28" pos:end="797:37"><expr pos:start="797:28" pos:end="797:37"><name pos:start="797:28" pos:end="797:37"><name pos:start="797:28" pos:end="797:28">c</name><operator pos:start="797:29" pos:end="797:30">-&gt;</operator><name pos:start="797:31" pos:end="797:37">chrSrcH</name></name></expr></argument>, <argument pos:start="797:40" pos:end="797:49"><expr pos:start="797:40" pos:end="797:49"><name pos:start="797:40" pos:end="797:49"><name pos:start="797:40" pos:end="797:40">c</name><operator pos:start="797:41" pos:end="797:42">-&gt;</operator><name pos:start="797:43" pos:end="797:49">chrDstW</name></name></expr></argument>, <argument pos:start="797:52" pos:end="797:61"><expr pos:start="797:52" pos:end="797:61"><name pos:start="797:52" pos:end="797:61"><name pos:start="797:52" pos:end="797:52">c</name><operator pos:start="797:53" pos:end="797:54">-&gt;</operator><name pos:start="797:55" pos:end="797:61">chrDstH</name></name></expr></argument>, <argument pos:start="797:64" pos:end="797:73"><expr pos:start="797:64" pos:end="797:73"><name pos:start="797:64" pos:end="797:73"><name pos:start="797:64" pos:end="797:64">c</name><operator pos:start="797:65" pos:end="797:66">-&gt;</operator><name pos:start="797:67" pos:end="797:73">chrXInc</name></name></expr></argument>, <argument pos:start="797:76" pos:end="797:85"><expr pos:start="797:76" pos:end="797:85"><name pos:start="797:76" pos:end="797:85"><name pos:start="797:76" pos:end="797:76">c</name><operator pos:start="797:77" pos:end="797:78">-&gt;</operator><name pos:start="797:79" pos:end="797:85">chrYInc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="803:5" pos:end="803:33"><expr pos:start="803:5" pos:end="803:32"><name pos:start="803:5" pos:end="803:14"><name pos:start="803:5" pos:end="803:5">c</name><operator pos:start="803:6" pos:end="803:7">-&gt;</operator><name pos:start="803:8" pos:end="803:14">swScale</name></name><operator pos:start="803:15" pos:end="803:15">=</operator> <call pos:start="803:17" pos:end="803:32"><name pos:start="803:17" pos:end="803:29">ff_getSwsFunc</name><argument_list pos:start="803:30" pos:end="803:32">(<argument pos:start="803:31" pos:end="803:31"><expr pos:start="803:31" pos:end="803:31"><name pos:start="803:31" pos:end="803:31">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="805:5" pos:end="805:13">return <expr pos:start="805:12" pos:end="805:12"><literal type="number" pos:start="805:12" pos:end="805:12">0</literal></expr>;</return>

<label pos:start="807:1" pos:end="807:5"><name pos:start="807:1" pos:end="807:4">fail</name>:</label> <comment type="line" pos:start="807:7" pos:end="807:55">//FIXME replace things by appropriate error codes</comment>

    <return pos:start="809:5" pos:end="809:14">return <expr pos:start="809:12" pos:end="809:13"><operator pos:start="809:12" pos:end="809:12">-</operator><literal type="number" pos:start="809:13" pos:end="809:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
