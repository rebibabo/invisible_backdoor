<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/331.c" pos:tabs="8"><function pos:start="1:1" pos:end="11:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">emulate_spapr_hypercall</name><parameter_list pos:start="1:36" pos:end="2:52">(<parameter pos:start="1:37" pos:end="1:62"><decl pos:start="1:37" pos:end="1:62"><type pos:start="1:37" pos:end="1:62"><name pos:start="1:37" pos:end="1:56">PPCVirtualHypervisor</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">vhyp</name></decl></parameter>,
                                    <parameter pos:start="2:37" pos:end="2:51"><decl pos:start="2:37" pos:end="2:51"><type pos:start="2:37" pos:end="2:51"><name pos:start="2:37" pos:end="2:46">PowerPCCPU</name> <modifier pos:start="2:48" pos:end="2:48">*</modifier></type><name pos:start="2:49" pos:end="2:51">cpu</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="11:1">{<block_content pos:start="4:5" pos:end="10:5">
    <decl_stmt pos:start="4:5" pos:end="4:33"><decl pos:start="4:5" pos:end="4:32"><type pos:start="4:5" pos:end="4:17"><name pos:start="4:5" pos:end="4:15">CPUPPCState</name> <modifier pos:start="4:17" pos:end="4:17">*</modifier></type><name pos:start="4:18" pos:end="4:20">env</name> <init pos:start="4:22" pos:end="4:32">= <expr pos:start="4:24" pos:end="4:32"><operator pos:start="4:24" pos:end="4:24">&amp;</operator><name pos:start="4:25" pos:end="4:32"><name pos:start="4:25" pos:end="4:27">cpu</name><operator pos:start="4:28" pos:end="4:29">-&gt;</operator><name pos:start="4:30" pos:end="4:32">env</name></name></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="5:5" pos:end="10:5"><if pos:start="5:5" pos:end="8:5">if <condition pos:start="5:8" pos:end="5:15">(<expr pos:start="5:9" pos:end="5:14"><name pos:start="5:9" pos:end="5:14">msr_pr</name></expr>)</condition> <block pos:start="5:17" pos:end="8:5">{<block_content pos:start="6:9" pos:end="7:34">
        <expr_stmt pos:start="6:9" pos:end="6:57"><expr pos:start="6:9" pos:end="6:56"><call pos:start="6:9" pos:end="6:56"><name pos:start="6:9" pos:end="6:21">hcall_dprintf</name><argument_list pos:start="6:22" pos:end="6:56">(<argument pos:start="6:23" pos:end="6:55"><expr pos:start="6:23" pos:end="6:55"><literal type="string" pos:start="6:23" pos:end="6:55">"Hypercall made with MSR[PR]=1\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="7:9" pos:end="7:34"><expr pos:start="7:9" pos:end="7:33"><name pos:start="7:9" pos:end="7:19"><name pos:start="7:9" pos:end="7:11">env</name><operator pos:start="7:12" pos:end="7:13">-&gt;</operator><name pos:start="7:14" pos:end="7:16">gpr</name><index pos:start="7:17" pos:end="7:19">[<expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">3</literal></expr>]</index></name> <operator pos:start="7:21" pos:end="7:21">=</operator> <name pos:start="7:23" pos:end="7:33">H_PRIVILEGE</name></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="8:7" pos:end="10:5">else <block pos:start="8:12" pos:end="10:5">{<block_content pos:start="9:9" pos:end="9:70">
        <expr_stmt pos:start="9:9" pos:end="9:70"><expr pos:start="9:9" pos:end="9:69"><name pos:start="9:9" pos:end="9:19"><name pos:start="9:9" pos:end="9:11">env</name><operator pos:start="9:12" pos:end="9:13">-&gt;</operator><name pos:start="9:14" pos:end="9:16">gpr</name><index pos:start="9:17" pos:end="9:19">[<expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">3</literal></expr>]</index></name> <operator pos:start="9:21" pos:end="9:21">=</operator> <call pos:start="9:23" pos:end="9:69"><name pos:start="9:23" pos:end="9:37">spapr_hypercall</name><argument_list pos:start="9:38" pos:end="9:69">(<argument pos:start="9:39" pos:end="9:41"><expr pos:start="9:39" pos:end="9:41"><name pos:start="9:39" pos:end="9:41">cpu</name></expr></argument>, <argument pos:start="9:44" pos:end="9:54"><expr pos:start="9:44" pos:end="9:54"><name pos:start="9:44" pos:end="9:54"><name pos:start="9:44" pos:end="9:46">env</name><operator pos:start="9:47" pos:end="9:48">-&gt;</operator><name pos:start="9:49" pos:end="9:51">gpr</name><index pos:start="9:52" pos:end="9:54">[<expr pos:start="9:53" pos:end="9:53"><literal type="number" pos:start="9:53" pos:end="9:53">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="9:57" pos:end="9:68"><expr pos:start="9:57" pos:end="9:68"><operator pos:start="9:57" pos:end="9:57">&amp;</operator><name pos:start="9:58" pos:end="9:68"><name pos:start="9:58" pos:end="9:60">env</name><operator pos:start="9:61" pos:end="9:62">-&gt;</operator><name pos:start="9:63" pos:end="9:65">gpr</name><index pos:start="9:66" pos:end="9:68">[<expr pos:start="9:67" pos:end="9:67"><literal type="number" pos:start="9:67" pos:end="9:67">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function></unit>
