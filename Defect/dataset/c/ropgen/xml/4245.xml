<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4245.c" pos:tabs="8"><function pos:start="1:1" pos:end="333:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">ff_asf_parse_packet</name><parameter_list pos:start="1:31" pos:end="1:84">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:46">AVFormatContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:68"><decl pos:start="1:52" pos:end="1:68"><type pos:start="1:52" pos:end="1:68"><name pos:start="1:52" pos:end="1:64">ByteIOContext</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:68">pb</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:83"><decl pos:start="1:71" pos:end="1:83"><type pos:start="1:71" pos:end="1:83"><name pos:start="1:71" pos:end="1:78">AVPacket</name> <modifier pos:start="1:80" pos:end="1:80">*</modifier></type><name pos:start="1:81" pos:end="1:83">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="333:1">{<block_content pos:start="5:5" pos:end="331:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">ASFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">asf</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">ASFStream</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:21">asf_st</name> <init pos:start="7:23" pos:end="7:25">= <expr pos:start="7:25" pos:end="7:25"><literal type="number" pos:start="7:25" pos:end="7:25">0</literal></expr></init></decl>;</decl_stmt>

    <for pos:start="9:5" pos:end="329:5">for <control pos:start="9:9" pos:end="9:12">(<init pos:start="9:10" pos:end="9:10">;</init><condition pos:start="9:11" pos:end="9:11">;</condition><incr/>)</control> <block pos:start="9:14" pos:end="329:5">{<block_content pos:start="11:9" pos:end="327:9">

        <if_stmt pos:start="11:9" pos:end="13:31"><if pos:start="11:9" pos:end="13:31">if<condition pos:start="11:11" pos:end="11:24">(<expr pos:start="11:12" pos:end="11:23"><call pos:start="11:12" pos:end="11:23"><name pos:start="11:12" pos:end="11:19">url_feof</name><argument_list pos:start="11:20" pos:end="11:23">(<argument pos:start="11:21" pos:end="11:22"><expr pos:start="11:21" pos:end="11:22"><name pos:start="11:21" pos:end="11:22">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="13:13" pos:end="13:31"><block_content pos:start="13:13" pos:end="13:31">

            <return pos:start="13:13" pos:end="13:31">return <expr pos:start="13:20" pos:end="13:30"><name pos:start="13:20" pos:end="13:30">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="15:9" pos:end="43:9"><if pos:start="15:9" pos:end="43:9">if <condition pos:start="15:12" pos:end="17:40">(<expr pos:start="15:13" pos:end="17:39"><name pos:start="15:13" pos:end="15:33"><name pos:start="15:13" pos:end="15:15">asf</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:33">packet_size_left</name></name> <operator pos:start="15:35" pos:end="15:35">&lt;</operator> <name pos:start="15:37" pos:end="15:53">FRAME_HEADER_SIZE</name>

            <operator pos:start="17:13" pos:end="17:14">||</operator> <name pos:start="17:16" pos:end="17:35"><name pos:start="17:16" pos:end="17:18">asf</name><operator pos:start="17:19" pos:end="17:20">-&gt;</operator><name pos:start="17:21" pos:end="17:35">packet_segments</name></name> <operator pos:start="17:37" pos:end="17:37">&lt;</operator> <literal type="number" pos:start="17:39" pos:end="17:39">1</literal></expr>)</condition> <block pos:start="17:42" pos:end="43:9">{<block_content pos:start="21:13" pos:end="41:21">

            <comment type="line" pos:start="19:13" pos:end="19:61">//asf-&gt;packet_size_left &lt;= asf-&gt;packet_padsize) {</comment>

            <decl_stmt pos:start="21:13" pos:end="21:66"><decl pos:start="21:13" pos:end="21:65"><type pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:15">int</name></type> <name pos:start="21:17" pos:end="21:19">ret</name> <init pos:start="21:21" pos:end="21:65">= <expr pos:start="21:23" pos:end="21:65"><name pos:start="21:23" pos:end="21:43"><name pos:start="21:23" pos:end="21:25">asf</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:43">packet_size_left</name></name> <operator pos:start="21:45" pos:end="21:45">+</operator> <name pos:start="21:47" pos:end="21:65"><name pos:start="21:47" pos:end="21:49">asf</name><operator pos:start="21:50" pos:end="21:51">-&gt;</operator><name pos:start="21:52" pos:end="21:65">packet_padsize</name></name></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:start="23:13" pos:end="23:125">//printf("PacketLeftSize:%d  Pad:%d Pos:%"PRId64"\n", asf-&gt;packet_size_left, asf-&gt;packet_padsize, url_ftell(pb));</comment>

            <expr_stmt pos:start="25:13" pos:end="25:27"><expr pos:start="25:13" pos:end="25:26"><call pos:start="25:13" pos:end="25:26"><name pos:start="25:13" pos:end="25:18">assert</name><argument_list pos:start="25:19" pos:end="25:26">(<argument pos:start="25:20" pos:end="25:25"><expr pos:start="25:20" pos:end="25:25"><name pos:start="25:20" pos:end="25:22">ret</name><operator pos:start="25:23" pos:end="25:24">&gt;=</operator><literal type="number" pos:start="25:25" pos:end="25:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="27:13" pos:end="27:27">/* fail safe */</comment>

            <expr_stmt pos:start="29:13" pos:end="29:31"><expr pos:start="29:13" pos:end="29:30"><call pos:start="29:13" pos:end="29:30"><name pos:start="29:13" pos:end="29:21">url_fskip</name><argument_list pos:start="29:22" pos:end="29:30">(<argument pos:start="29:23" pos:end="29:24"><expr pos:start="29:23" pos:end="29:24"><name pos:start="29:23" pos:end="29:24">pb</name></expr></argument>, <argument pos:start="29:27" pos:end="29:29"><expr pos:start="29:27" pos:end="29:29"><name pos:start="29:27" pos:end="29:29">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="33:13" pos:end="33:43"><expr pos:start="33:13" pos:end="33:42"><name pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:15">asf</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:27">packet_pos</name></name><operator pos:start="33:28" pos:end="33:28">=</operator> <call pos:start="33:30" pos:end="33:42"><name pos:start="33:30" pos:end="33:38">url_ftell</name><argument_list pos:start="33:39" pos:end="33:42">(<argument pos:start="33:40" pos:end="33:41"><expr pos:start="33:40" pos:end="33:41"><name pos:start="33:40" pos:end="33:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="35:13" pos:end="39:35"><if pos:start="35:13" pos:end="39:35">if <condition pos:start="35:16" pos:end="37:85">(<expr pos:start="35:17" pos:end="37:84"><name pos:start="35:17" pos:end="35:37"><name pos:start="35:17" pos:end="35:19">asf</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:37">data_object_size</name></name> <operator pos:start="35:39" pos:end="35:40">!=</operator> <operator pos:start="35:42" pos:end="35:42">(</operator><name pos:start="35:43" pos:end="35:50">uint64_t</name><operator pos:start="35:51" pos:end="35:51">)</operator><operator pos:start="35:52" pos:end="35:52">-</operator><literal type="number" pos:start="35:53" pos:end="35:53">1</literal> <operator pos:start="35:55" pos:end="35:56">&amp;&amp;</operator>

                <operator pos:start="37:17" pos:end="37:17">(</operator><name pos:start="37:18" pos:end="37:32"><name pos:start="37:18" pos:end="37:20">asf</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:32">packet_pos</name></name> <operator pos:start="37:34" pos:end="37:34">-</operator> <name pos:start="37:36" pos:end="37:58"><name pos:start="37:36" pos:end="37:38">asf</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:58">data_object_offset</name></name> <operator pos:start="37:60" pos:end="37:61">&gt;=</operator> <name pos:start="37:63" pos:end="37:83"><name pos:start="37:63" pos:end="37:65">asf</name><operator pos:start="37:66" pos:end="37:67">-&gt;</operator><name pos:start="37:68" pos:end="37:83">data_object_size</name></name><operator pos:start="37:84" pos:end="37:84">)</operator></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:35"><block_content pos:start="39:17" pos:end="39:35">

                <return pos:start="39:17" pos:end="39:35">return <expr pos:start="39:24" pos:end="39:34"><name pos:start="39:24" pos:end="39:34">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt> <comment type="block" pos:start="39:37" pos:end="39:83">/* Do not exceed the size of the data object */</comment>

            <return pos:start="41:13" pos:end="41:21">return <expr pos:start="41:20" pos:end="41:20"><literal type="number" pos:start="41:20" pos:end="41:20">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="45:9" pos:end="81:9"><if pos:start="45:9" pos:end="81:9">if <condition pos:start="45:12" pos:end="45:40">(<expr pos:start="45:13" pos:end="45:39"><name pos:start="45:13" pos:end="45:34"><name pos:start="45:13" pos:end="45:15">asf</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:34">packet_time_start</name></name> <operator pos:start="45:36" pos:end="45:37">==</operator> <literal type="number" pos:start="45:39" pos:end="45:39">0</literal></expr>)</condition> <block pos:start="45:42" pos:end="81:9">{<block_content pos:start="47:13" pos:end="79:67">

            <if_stmt pos:start="47:13" pos:end="53:13"><if pos:start="47:13" pos:end="53:13">if<condition pos:start="47:15" pos:end="47:48">(<expr pos:start="47:16" pos:end="47:47"><call pos:start="47:16" pos:end="47:43"><name pos:start="47:16" pos:end="47:36">asf_read_frame_header</name><argument_list pos:start="47:37" pos:end="47:43">(<argument pos:start="47:38" pos:end="47:38"><expr pos:start="47:38" pos:end="47:38"><name pos:start="47:38" pos:end="47:38">s</name></expr></argument>, <argument pos:start="47:41" pos:end="47:42"><expr pos:start="47:41" pos:end="47:42"><name pos:start="47:41" pos:end="47:42">pb</name></expr></argument>)</argument_list></call> <operator pos:start="47:45" pos:end="47:45">&lt;</operator> <literal type="number" pos:start="47:47" pos:end="47:47">0</literal></expr>)</condition><block pos:start="47:49" pos:end="53:13">{<block_content pos:start="49:17" pos:end="51:25">

                <expr_stmt pos:start="49:17" pos:end="49:40"><expr pos:start="49:17" pos:end="49:39"><name pos:start="49:17" pos:end="49:36"><name pos:start="49:17" pos:end="49:19">asf</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:36">packet_segments</name></name><operator pos:start="49:37" pos:end="49:37">=</operator> <literal type="number" pos:start="49:39" pos:end="49:39">0</literal></expr>;</expr_stmt>

                <continue pos:start="51:17" pos:end="51:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="55:13" pos:end="77:13"><if pos:start="55:13" pos:end="77:13">if <condition pos:start="55:16" pos:end="61:17">(<expr pos:start="55:17" pos:end="59:105"><name pos:start="55:17" pos:end="55:33"><name pos:start="55:17" pos:end="55:19">asf</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:33">stream_index</name></name> <operator pos:start="55:35" pos:end="55:35">&lt;</operator> <literal type="number" pos:start="55:37" pos:end="55:37">0</literal>

                <operator pos:start="57:17" pos:end="57:18">||</operator> <name pos:start="57:20" pos:end="57:48"><name pos:start="57:20" pos:end="57:20">s</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:29">streams</name><index pos:start="57:30" pos:end="57:48">[<expr pos:start="57:31" pos:end="57:47"><name pos:start="57:31" pos:end="57:47"><name pos:start="57:31" pos:end="57:33">asf</name><operator pos:start="57:34" pos:end="57:35">-&gt;</operator><name pos:start="57:36" pos:end="57:47">stream_index</name></name></expr>]</index></name><operator pos:start="57:49" pos:end="57:50">-&gt;</operator><name pos:start="57:51" pos:end="57:57">discard</name> <operator pos:start="57:59" pos:end="57:60">&gt;=</operator> <name pos:start="57:62" pos:end="57:74">AVDISCARD_ALL</name>

                <operator pos:start="59:17" pos:end="59:18">||</operator> <operator pos:start="59:20" pos:end="59:20">(</operator><operator pos:start="59:21" pos:end="59:21">!</operator><name pos:start="59:22" pos:end="59:42"><name pos:start="59:22" pos:end="59:24">asf</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:42">packet_key_frame</name></name> <operator pos:start="59:44" pos:end="59:45">&amp;&amp;</operator> <name pos:start="59:47" pos:end="59:75"><name pos:start="59:47" pos:end="59:47">s</name><operator pos:start="59:48" pos:end="59:49">-&gt;</operator><name pos:start="59:50" pos:end="59:56">streams</name><index pos:start="59:57" pos:end="59:75">[<expr pos:start="59:58" pos:end="59:74"><name pos:start="59:58" pos:end="59:74"><name pos:start="59:58" pos:end="59:60">asf</name><operator pos:start="59:61" pos:end="59:62">-&gt;</operator><name pos:start="59:63" pos:end="59:74">stream_index</name></name></expr>]</index></name><operator pos:start="59:76" pos:end="59:77">-&gt;</operator><name pos:start="59:78" pos:end="59:84">discard</name> <operator pos:start="59:86" pos:end="59:87">&gt;=</operator> <name pos:start="59:89" pos:end="59:104">AVDISCARD_NONKEY</name><operator pos:start="59:105" pos:end="59:105">)</operator></expr>

                )</condition> <block pos:start="61:19" pos:end="77:13">{<block_content pos:start="63:17" pos:end="75:25">

                <expr_stmt pos:start="63:17" pos:end="63:43"><expr pos:start="63:17" pos:end="63:42"><name pos:start="63:17" pos:end="63:38"><name pos:start="63:17" pos:end="63:19">asf</name><operator pos:start="63:20" pos:end="63:21">-&gt;</operator><name pos:start="63:22" pos:end="63:38">packet_time_start</name></name> <operator pos:start="63:40" pos:end="63:40">=</operator> <literal type="number" pos:start="63:42" pos:end="63:42">0</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="65:17" pos:end="65:58">/* unhandled packet (should not happen) */</comment>

                <expr_stmt pos:start="67:17" pos:end="67:53"><expr pos:start="67:17" pos:end="67:52"><call pos:start="67:17" pos:end="67:52"><name pos:start="67:17" pos:end="67:25">url_fskip</name><argument_list pos:start="67:26" pos:end="67:52">(<argument pos:start="67:27" pos:end="67:28"><expr pos:start="67:27" pos:end="67:28"><name pos:start="67:27" pos:end="67:28">pb</name></expr></argument>, <argument pos:start="67:31" pos:end="67:51"><expr pos:start="67:31" pos:end="67:51"><name pos:start="67:31" pos:end="67:51"><name pos:start="67:31" pos:end="67:33">asf</name><operator pos:start="67:34" pos:end="67:35">-&gt;</operator><name pos:start="67:36" pos:end="67:51">packet_frag_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:63"><expr pos:start="69:17" pos:end="69:62"><name pos:start="69:17" pos:end="69:37"><name pos:start="69:17" pos:end="69:19">asf</name><operator pos:start="69:20" pos:end="69:21">-&gt;</operator><name pos:start="69:22" pos:end="69:37">packet_size_left</name></name> <operator pos:start="69:39" pos:end="69:40">-=</operator> <name pos:start="69:42" pos:end="69:62"><name pos:start="69:42" pos:end="69:44">asf</name><operator pos:start="69:45" pos:end="69:46">-&gt;</operator><name pos:start="69:47" pos:end="69:62">packet_frag_size</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="71:17" pos:end="73:104"><if pos:start="71:17" pos:end="73:104">if<condition pos:start="71:19" pos:end="71:41">(<expr pos:start="71:20" pos:end="71:40"><name pos:start="71:20" pos:end="71:36"><name pos:start="71:20" pos:end="71:22">asf</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:36">stream_index</name></name> <operator pos:start="71:38" pos:end="71:38">&lt;</operator> <literal type="number" pos:start="71:40" pos:end="71:40">0</literal></expr>)</condition><block type="pseudo" pos:start="73:21" pos:end="73:104"><block_content pos:start="73:21" pos:end="73:104">

                    <expr_stmt pos:start="73:21" pos:end="73:104"><expr pos:start="73:21" pos:end="73:103"><call pos:start="73:21" pos:end="73:103"><name pos:start="73:21" pos:end="73:26">av_log</name><argument_list pos:start="73:27" pos:end="73:103">(<argument pos:start="73:28" pos:end="73:28"><expr pos:start="73:28" pos:end="73:28"><name pos:start="73:28" pos:end="73:28">s</name></expr></argument>, <argument pos:start="73:31" pos:end="73:42"><expr pos:start="73:31" pos:end="73:42"><name pos:start="73:31" pos:end="73:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:45" pos:end="73:79"><expr pos:start="73:45" pos:end="73:79"><literal type="string" pos:start="73:45" pos:end="73:79">"ff asf skip %d (unknown stream)\n"</literal></expr></argument>, <argument pos:start="73:82" pos:end="73:102"><expr pos:start="73:82" pos:end="73:102"><name pos:start="73:82" pos:end="73:102"><name pos:start="73:82" pos:end="73:84">asf</name><operator pos:start="73:85" pos:end="73:86">-&gt;</operator><name pos:start="73:87" pos:end="73:102">packet_frag_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <continue pos:start="75:17" pos:end="75:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:67"><expr pos:start="79:13" pos:end="79:66"><name pos:start="79:13" pos:end="79:23"><name pos:start="79:13" pos:end="79:15">asf</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:23">asf_st</name></name> <operator pos:start="79:25" pos:end="79:25">=</operator> <name pos:start="79:27" pos:end="79:55"><name pos:start="79:27" pos:end="79:27">s</name><operator pos:start="79:28" pos:end="79:29">-&gt;</operator><name pos:start="79:30" pos:end="79:36">streams</name><index pos:start="79:37" pos:end="79:55">[<expr pos:start="79:38" pos:end="79:54"><name pos:start="79:38" pos:end="79:54"><name pos:start="79:38" pos:end="79:40">asf</name><operator pos:start="79:41" pos:end="79:42">-&gt;</operator><name pos:start="79:43" pos:end="79:54">stream_index</name></name></expr>]</index></name><operator pos:start="79:56" pos:end="79:57">-&gt;</operator><name pos:start="79:58" pos:end="79:66">priv_data</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:29"><expr pos:start="83:9" pos:end="83:28"><name pos:start="83:9" pos:end="83:14">asf_st</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <name pos:start="83:18" pos:end="83:28"><name pos:start="83:18" pos:end="83:20">asf</name><operator pos:start="83:21" pos:end="83:22">-&gt;</operator><name pos:start="83:23" pos:end="83:28">asf_st</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="87:9" pos:end="119:9"><if pos:start="87:9" pos:end="119:9">if <condition pos:start="87:12" pos:end="87:41">(<expr pos:start="87:13" pos:end="87:40"><name pos:start="87:13" pos:end="87:35"><name pos:start="87:13" pos:end="87:15">asf</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:35">packet_replic_size</name></name> <operator pos:start="87:37" pos:end="87:38">==</operator> <literal type="number" pos:start="87:40" pos:end="87:40">1</literal></expr>)</condition> <block pos:start="87:43" pos:end="119:9">{<block_content pos:start="91:13" pos:end="115:59">

            <comment type="line" pos:start="89:13" pos:end="89:66">// frag_offset is here used as the beginning timestamp</comment>

            <expr_stmt pos:start="91:13" pos:end="91:64"><expr pos:start="91:13" pos:end="91:63"><name pos:start="91:13" pos:end="91:38"><name pos:start="91:13" pos:end="91:15">asf</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:38">packet_frag_timestamp</name></name> <operator pos:start="91:40" pos:end="91:40">=</operator> <name pos:start="91:42" pos:end="91:63"><name pos:start="91:42" pos:end="91:44">asf</name><operator pos:start="91:45" pos:end="91:46">-&gt;</operator><name pos:start="91:47" pos:end="91:63">packet_time_start</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:61"><expr pos:start="93:13" pos:end="93:60"><name pos:start="93:13" pos:end="93:34"><name pos:start="93:13" pos:end="93:15">asf</name><operator pos:start="93:16" pos:end="93:17">-&gt;</operator><name pos:start="93:18" pos:end="93:34">packet_time_start</name></name> <operator pos:start="93:36" pos:end="93:37">+=</operator> <name pos:start="93:39" pos:end="93:60"><name pos:start="93:39" pos:end="93:41">asf</name><operator pos:start="93:42" pos:end="93:43">-&gt;</operator><name pos:start="93:44" pos:end="93:60">packet_time_delta</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:72"><expr pos:start="95:13" pos:end="95:71"><name pos:start="95:13" pos:end="95:32"><name pos:start="95:13" pos:end="95:15">asf</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:32">packet_obj_size</name></name> <operator pos:start="95:34" pos:end="95:34">=</operator> <name pos:start="95:36" pos:end="95:56"><name pos:start="95:36" pos:end="95:38">asf</name><operator pos:start="95:39" pos:end="95:40">-&gt;</operator><name pos:start="95:41" pos:end="95:56">packet_frag_size</name></name> <operator pos:start="95:58" pos:end="95:58">=</operator> <call pos:start="95:60" pos:end="95:71"><name pos:start="95:60" pos:end="95:67">get_byte</name><argument_list pos:start="95:68" pos:end="95:71">(<argument pos:start="95:69" pos:end="95:70"><expr pos:start="95:69" pos:end="95:70"><name pos:start="95:69" pos:end="95:70">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:36"><expr pos:start="97:13" pos:end="97:35"><name pos:start="97:13" pos:end="97:33"><name pos:start="97:13" pos:end="97:15">asf</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:33">packet_size_left</name></name><operator pos:start="97:34" pos:end="97:35">--</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:37"><expr pos:start="99:13" pos:end="99:36"><name pos:start="99:13" pos:end="99:34"><name pos:start="99:13" pos:end="99:15">asf</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:34">packet_multi_size</name></name><operator pos:start="99:35" pos:end="99:36">--</operator></expr>;</expr_stmt>

            <if_stmt pos:start="101:13" pos:end="113:13"><if pos:start="101:13" pos:end="113:13">if <condition pos:start="101:16" pos:end="101:62">(<expr pos:start="101:17" pos:end="101:61"><name pos:start="101:17" pos:end="101:38"><name pos:start="101:17" pos:end="101:19">asf</name><operator pos:start="101:20" pos:end="101:21">-&gt;</operator><name pos:start="101:22" pos:end="101:38">packet_multi_size</name></name> <operator pos:start="101:40" pos:end="101:40">&lt;</operator> <name pos:start="101:42" pos:end="101:61"><name pos:start="101:42" pos:end="101:44">asf</name><operator pos:start="101:45" pos:end="101:46">-&gt;</operator><name pos:start="101:47" pos:end="101:61">packet_obj_size</name></name></expr>)</condition>

            <block pos:start="103:13" pos:end="113:13">{<block_content pos:start="105:17" pos:end="111:25">

                <expr_stmt pos:start="105:17" pos:end="105:43"><expr pos:start="105:17" pos:end="105:42"><name pos:start="105:17" pos:end="105:38"><name pos:start="105:17" pos:end="105:19">asf</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:38">packet_time_start</name></name> <operator pos:start="105:40" pos:end="105:40">=</operator> <literal type="number" pos:start="105:42" pos:end="105:42">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:54"><expr pos:start="107:17" pos:end="107:53"><call pos:start="107:17" pos:end="107:53"><name pos:start="107:17" pos:end="107:25">url_fskip</name><argument_list pos:start="107:26" pos:end="107:53">(<argument pos:start="107:27" pos:end="107:28"><expr pos:start="107:27" pos:end="107:28"><name pos:start="107:27" pos:end="107:28">pb</name></expr></argument>, <argument pos:start="107:31" pos:end="107:52"><expr pos:start="107:31" pos:end="107:52"><name pos:start="107:31" pos:end="107:52"><name pos:start="107:31" pos:end="107:33">asf</name><operator pos:start="107:34" pos:end="107:35">-&gt;</operator><name pos:start="107:36" pos:end="107:52">packet_multi_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:64"><expr pos:start="109:17" pos:end="109:63"><name pos:start="109:17" pos:end="109:37"><name pos:start="109:17" pos:end="109:19">asf</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:37">packet_size_left</name></name> <operator pos:start="109:39" pos:end="109:40">-=</operator> <name pos:start="109:42" pos:end="109:63"><name pos:start="109:42" pos:end="109:44">asf</name><operator pos:start="109:45" pos:end="109:46">-&gt;</operator><name pos:start="109:47" pos:end="109:63">packet_multi_size</name></name></expr>;</expr_stmt>

                <continue pos:start="111:17" pos:end="111:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:59"><expr pos:start="115:13" pos:end="115:58"><name pos:start="115:13" pos:end="115:34"><name pos:start="115:13" pos:end="115:15">asf</name><operator pos:start="115:16" pos:end="115:17">-&gt;</operator><name pos:start="115:18" pos:end="115:34">packet_multi_size</name></name> <operator pos:start="115:36" pos:end="115:37">-=</operator> <name pos:start="115:39" pos:end="115:58"><name pos:start="115:39" pos:end="115:41">asf</name><operator pos:start="115:42" pos:end="115:43">-&gt;</operator><name pos:start="115:44" pos:end="115:58">packet_obj_size</name></name></expr>;</expr_stmt>

            <comment type="line" pos:start="117:13" pos:end="117:157">//printf("COMPRESS size  %d  %d  %d   ms:%d\n", asf-&gt;packet_obj_size, asf-&gt;packet_frag_timestamp, asf-&gt;packet_size_left, asf-&gt;packet_multi_size);</comment>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="121:9" pos:end="135:9"><if pos:start="121:9" pos:end="135:9">if<condition pos:start="121:11" pos:end="125:81">(   <comment type="block" pos:start="121:15" pos:end="121:63">/*asf-&gt;packet_frag_size == asf-&gt;packet_obj_size*/</comment>

              <expr pos:start="123:15" pos:end="125:80"><name pos:start="123:15" pos:end="123:33"><name pos:start="123:15" pos:end="123:20">asf_st</name><operator pos:start="123:21" pos:end="123:22">-&gt;</operator><name pos:start="123:23" pos:end="123:33">frag_offset</name></name> <operator pos:start="123:35" pos:end="123:35">+</operator> <name pos:start="123:37" pos:end="123:57"><name pos:start="123:37" pos:end="123:39">asf</name><operator pos:start="123:40" pos:end="123:41">-&gt;</operator><name pos:start="123:42" pos:end="123:57">packet_frag_size</name></name> <operator pos:start="123:59" pos:end="123:60">&lt;=</operator> <name pos:start="123:62" pos:end="123:77"><name pos:start="123:62" pos:end="123:67">asf_st</name><operator pos:start="123:68" pos:end="123:69">-&gt;</operator><name pos:start="123:70" pos:end="123:72">pkt</name><operator pos:start="123:73" pos:end="123:73">.</operator><name pos:start="123:74" pos:end="123:77">size</name></name>

           <operator pos:start="125:12" pos:end="125:13">&amp;&amp;</operator> <name pos:start="125:15" pos:end="125:33"><name pos:start="125:15" pos:end="125:20">asf_st</name><operator pos:start="125:21" pos:end="125:22">-&gt;</operator><name pos:start="125:23" pos:end="125:33">frag_offset</name></name> <operator pos:start="125:35" pos:end="125:35">+</operator> <name pos:start="125:37" pos:end="125:57"><name pos:start="125:37" pos:end="125:39">asf</name><operator pos:start="125:40" pos:end="125:41">-&gt;</operator><name pos:start="125:42" pos:end="125:57">packet_frag_size</name></name> <operator pos:start="125:59" pos:end="125:59">&gt;</operator> <name pos:start="125:61" pos:end="125:80"><name pos:start="125:61" pos:end="125:63">asf</name><operator pos:start="125:64" pos:end="125:65">-&gt;</operator><name pos:start="125:66" pos:end="125:80">packet_obj_size</name></name></expr>)</condition><block pos:start="125:82" pos:end="135:9">{<block_content pos:start="127:13" pos:end="133:51">

            <expr_stmt pos:start="127:13" pos:end="131:56"><expr pos:start="127:13" pos:end="131:55"><call pos:start="127:13" pos:end="131:55"><name pos:start="127:13" pos:end="127:18">av_log</name><argument_list pos:start="127:19" pos:end="131:55">(<argument pos:start="127:20" pos:end="127:20"><expr pos:start="127:20" pos:end="127:20"><name pos:start="127:20" pos:end="127:20">s</name></expr></argument>, <argument pos:start="127:23" pos:end="127:33"><expr pos:start="127:23" pos:end="127:33"><name pos:start="127:23" pos:end="127:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="127:36" pos:end="127:85"><expr pos:start="127:36" pos:end="127:85"><literal type="string" pos:start="127:36" pos:end="127:85">"ignoring invalid packet_obj_size (%d %d %d %d)\n"</literal></expr></argument>,

                <argument pos:start="129:17" pos:end="129:35"><expr pos:start="129:17" pos:end="129:35"><name pos:start="129:17" pos:end="129:35"><name pos:start="129:17" pos:end="129:22">asf_st</name><operator pos:start="129:23" pos:end="129:24">-&gt;</operator><name pos:start="129:25" pos:end="129:35">frag_offset</name></name></expr></argument>, <argument pos:start="129:38" pos:end="129:58"><expr pos:start="129:38" pos:end="129:58"><name pos:start="129:38" pos:end="129:58"><name pos:start="129:38" pos:end="129:40">asf</name><operator pos:start="129:41" pos:end="129:42">-&gt;</operator><name pos:start="129:43" pos:end="129:58">packet_frag_size</name></name></expr></argument>,

                <argument pos:start="131:17" pos:end="131:36"><expr pos:start="131:17" pos:end="131:36"><name pos:start="131:17" pos:end="131:36"><name pos:start="131:17" pos:end="131:19">asf</name><operator pos:start="131:20" pos:end="131:21">-&gt;</operator><name pos:start="131:22" pos:end="131:36">packet_obj_size</name></name></expr></argument>, <argument pos:start="131:39" pos:end="131:54"><expr pos:start="131:39" pos:end="131:54"><name pos:start="131:39" pos:end="131:54"><name pos:start="131:39" pos:end="131:44">asf_st</name><operator pos:start="131:45" pos:end="131:46">-&gt;</operator><name pos:start="131:47" pos:end="131:49">pkt</name><operator pos:start="131:50" pos:end="131:50">.</operator><name pos:start="131:51" pos:end="131:54">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:51"><expr pos:start="133:13" pos:end="133:50"><name pos:start="133:13" pos:end="133:32"><name pos:start="133:13" pos:end="133:15">asf</name><operator pos:start="133:16" pos:end="133:17">-&gt;</operator><name pos:start="133:18" pos:end="133:32">packet_obj_size</name></name><operator pos:start="133:33" pos:end="133:33">=</operator> <name pos:start="133:35" pos:end="133:50"><name pos:start="133:35" pos:end="133:40">asf_st</name><operator pos:start="133:41" pos:end="133:42">-&gt;</operator><name pos:start="133:43" pos:end="133:45">pkt</name><operator pos:start="133:46" pos:end="133:46">.</operator><name pos:start="133:47" pos:end="133:50">size</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="139:9" pos:end="181:9"><if pos:start="139:9" pos:end="181:9">if <condition pos:start="139:12" pos:end="141:78">(   <expr pos:start="139:16" pos:end="141:77"><name pos:start="139:16" pos:end="139:31"><name pos:start="139:16" pos:end="139:21">asf_st</name><operator pos:start="139:22" pos:end="139:23">-&gt;</operator><name pos:start="139:24" pos:end="139:26">pkt</name><operator pos:start="139:27" pos:end="139:27">.</operator><name pos:start="139:28" pos:end="139:31">size</name></name> <operator pos:start="139:33" pos:end="139:34">!=</operator> <name pos:start="139:36" pos:end="139:55"><name pos:start="139:36" pos:end="139:38">asf</name><operator pos:start="139:39" pos:end="139:40">-&gt;</operator><name pos:start="139:41" pos:end="139:55">packet_obj_size</name></name>

            <operator pos:start="141:13" pos:end="141:14">||</operator> <name pos:start="141:16" pos:end="141:34"><name pos:start="141:16" pos:end="141:21">asf_st</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:34">frag_offset</name></name> <operator pos:start="141:36" pos:end="141:36">+</operator> <name pos:start="141:38" pos:end="141:58"><name pos:start="141:38" pos:end="141:40">asf</name><operator pos:start="141:41" pos:end="141:42">-&gt;</operator><name pos:start="141:43" pos:end="141:58">packet_frag_size</name></name> <operator pos:start="141:60" pos:end="141:60">&gt;</operator> <name pos:start="141:62" pos:end="141:77"><name pos:start="141:62" pos:end="141:67">asf_st</name><operator pos:start="141:68" pos:end="141:69">-&gt;</operator><name pos:start="141:70" pos:end="141:72">pkt</name><operator pos:start="141:73" pos:end="141:73">.</operator><name pos:start="141:74" pos:end="141:77">size</name></name></expr>)</condition> <block pos:start="141:80" pos:end="181:9">{<block_content pos:start="143:13" pos:end="179:53"> <comment type="line" pos:start="141:82" pos:end="141:118">//FIXME is this condition sufficient?</comment>

            <if_stmt pos:start="143:13" pos:end="151:13"><if pos:start="143:13" pos:end="151:13">if<condition pos:start="143:15" pos:end="143:32">(<expr pos:start="143:16" pos:end="143:31"><name pos:start="143:16" pos:end="143:31"><name pos:start="143:16" pos:end="143:21">asf_st</name><operator pos:start="143:22" pos:end="143:23">-&gt;</operator><name pos:start="143:24" pos:end="143:26">pkt</name><operator pos:start="143:27" pos:end="143:27">.</operator><name pos:start="143:28" pos:end="143:31">data</name></name></expr>)</condition><block pos:start="143:33" pos:end="151:13">{<block_content pos:start="145:17" pos:end="149:45">

                <expr_stmt pos:start="145:17" pos:end="145:126"><expr pos:start="145:17" pos:end="145:125"><call pos:start="145:17" pos:end="145:125"><name pos:start="145:17" pos:end="145:22">av_log</name><argument_list pos:start="145:23" pos:end="145:125">(<argument pos:start="145:24" pos:end="145:24"><expr pos:start="145:24" pos:end="145:24"><name pos:start="145:24" pos:end="145:24">s</name></expr></argument>, <argument pos:start="145:27" pos:end="145:37"><expr pos:start="145:27" pos:end="145:37"><name pos:start="145:27" pos:end="145:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="145:40" pos:end="145:84"><expr pos:start="145:40" pos:end="145:84"><literal type="string" pos:start="145:40" pos:end="145:84">"freeing incomplete packet size %d, new %d\n"</literal></expr></argument>, <argument pos:start="145:87" pos:end="145:102"><expr pos:start="145:87" pos:end="145:102"><name pos:start="145:87" pos:end="145:102"><name pos:start="145:87" pos:end="145:92">asf_st</name><operator pos:start="145:93" pos:end="145:94">-&gt;</operator><name pos:start="145:95" pos:end="145:97">pkt</name><operator pos:start="145:98" pos:end="145:98">.</operator><name pos:start="145:99" pos:end="145:102">size</name></name></expr></argument>, <argument pos:start="145:105" pos:end="145:124"><expr pos:start="145:105" pos:end="145:124"><name pos:start="145:105" pos:end="145:124"><name pos:start="145:105" pos:end="145:107">asf</name><operator pos:start="145:108" pos:end="145:109">-&gt;</operator><name pos:start="145:110" pos:end="145:124">packet_obj_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="147:17" pos:end="147:40"><expr pos:start="147:17" pos:end="147:39"><name pos:start="147:17" pos:end="147:35"><name pos:start="147:17" pos:end="147:22">asf_st</name><operator pos:start="147:23" pos:end="147:24">-&gt;</operator><name pos:start="147:25" pos:end="147:35">frag_offset</name></name> <operator pos:start="147:37" pos:end="147:37">=</operator> <literal type="number" pos:start="147:39" pos:end="147:39">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="149:17" pos:end="149:45"><expr pos:start="149:17" pos:end="149:44"><call pos:start="149:17" pos:end="149:44"><name pos:start="149:17" pos:end="149:30">av_free_packet</name><argument_list pos:start="149:31" pos:end="149:44">(<argument pos:start="149:32" pos:end="149:43"><expr pos:start="149:32" pos:end="149:43"><operator pos:start="149:32" pos:end="149:32">&amp;</operator><name pos:start="149:33" pos:end="149:43"><name pos:start="149:33" pos:end="149:38">asf_st</name><operator pos:start="149:39" pos:end="149:40">-&gt;</operator><name pos:start="149:41" pos:end="149:43">pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="153:13" pos:end="153:28">/* new packet */</comment>

            <expr_stmt pos:start="155:13" pos:end="155:62"><expr pos:start="155:13" pos:end="155:61"><call pos:start="155:13" pos:end="155:61"><name pos:start="155:13" pos:end="155:25">av_new_packet</name><argument_list pos:start="155:26" pos:end="155:61">(<argument pos:start="155:27" pos:end="155:38"><expr pos:start="155:27" pos:end="155:38"><operator pos:start="155:27" pos:end="155:27">&amp;</operator><name pos:start="155:28" pos:end="155:38"><name pos:start="155:28" pos:end="155:33">asf_st</name><operator pos:start="155:34" pos:end="155:35">-&gt;</operator><name pos:start="155:36" pos:end="155:38">pkt</name></name></expr></argument>, <argument pos:start="155:41" pos:end="155:60"><expr pos:start="155:41" pos:end="155:60"><name pos:start="155:41" pos:end="155:60"><name pos:start="155:41" pos:end="155:43">asf</name><operator pos:start="155:44" pos:end="155:45">-&gt;</operator><name pos:start="155:46" pos:end="155:60">packet_obj_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:42"><expr pos:start="157:13" pos:end="157:41"><name pos:start="157:13" pos:end="157:23"><name pos:start="157:13" pos:end="157:18">asf_st</name><operator pos:start="157:19" pos:end="157:20">-&gt;</operator><name pos:start="157:21" pos:end="157:23">seq</name></name> <operator pos:start="157:25" pos:end="157:25">=</operator> <name pos:start="157:27" pos:end="157:41"><name pos:start="157:27" pos:end="157:29">asf</name><operator pos:start="157:30" pos:end="157:31">-&gt;</operator><name pos:start="157:32" pos:end="157:41">packet_seq</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:57"><expr pos:start="159:13" pos:end="159:56"><name pos:start="159:13" pos:end="159:27"><name pos:start="159:13" pos:end="159:18">asf_st</name><operator pos:start="159:19" pos:end="159:20">-&gt;</operator><name pos:start="159:21" pos:end="159:23">pkt</name><operator pos:start="159:24" pos:end="159:24">.</operator><name pos:start="159:25" pos:end="159:27">dts</name></name> <operator pos:start="159:29" pos:end="159:29">=</operator> <name pos:start="159:31" pos:end="159:56"><name pos:start="159:31" pos:end="159:33">asf</name><operator pos:start="159:34" pos:end="159:35">-&gt;</operator><name pos:start="159:36" pos:end="159:56">packet_frag_timestamp</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:57"><expr pos:start="161:13" pos:end="161:56"><name pos:start="161:13" pos:end="161:36"><name pos:start="161:13" pos:end="161:18">asf_st</name><operator pos:start="161:19" pos:end="161:20">-&gt;</operator><name pos:start="161:21" pos:end="161:23">pkt</name><operator pos:start="161:24" pos:end="161:24">.</operator><name pos:start="161:25" pos:end="161:36">stream_index</name></name> <operator pos:start="161:38" pos:end="161:38">=</operator> <name pos:start="161:40" pos:end="161:56"><name pos:start="161:40" pos:end="161:42">asf</name><operator pos:start="161:43" pos:end="161:44">-&gt;</operator><name pos:start="161:45" pos:end="161:56">stream_index</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="165:48"><expr pos:start="163:13" pos:end="165:47"><name pos:start="163:13" pos:end="163:27"><name pos:start="163:13" pos:end="163:18">asf_st</name><operator pos:start="163:19" pos:end="163:20">-&gt;</operator><name pos:start="163:21" pos:end="163:23">pkt</name><operator pos:start="163:24" pos:end="163:24">.</operator><name pos:start="163:25" pos:end="163:27">pos</name></name> <operator pos:start="163:29" pos:end="163:29">=</operator>

            <name pos:start="165:13" pos:end="165:30"><name pos:start="165:13" pos:end="165:18">asf_st</name><operator pos:start="165:19" pos:end="165:20">-&gt;</operator><name pos:start="165:21" pos:end="165:30">packet_pos</name></name><operator pos:start="165:31" pos:end="165:31">=</operator> <name pos:start="165:33" pos:end="165:47"><name pos:start="165:33" pos:end="165:35">asf</name><operator pos:start="165:36" pos:end="165:37">-&gt;</operator><name pos:start="165:38" pos:end="165:47">packet_pos</name></name></expr>;</expr_stmt>

<comment type="line" pos:start="167:1" pos:end="167:73">//printf("new packet: stream:%d key:%d packet_key:%d audio:%d size:%d\n",</comment>

<comment type="line" pos:start="169:1" pos:end="169:80">//asf-&gt;stream_index, asf-&gt;packet_key_frame, asf_st-&gt;pkt.flags &amp; AV_PKT_FLAG_KEY,</comment>

<comment type="line" pos:start="171:1" pos:end="171:96">//s-&gt;streams[asf-&gt;stream_index]-&gt;codec-&gt;codec_type == AVMEDIA_TYPE_AUDIO, asf-&gt;packet_obj_size);</comment>

            <if_stmt pos:start="173:13" pos:end="175:42"><if pos:start="173:13" pos:end="175:42">if <condition pos:start="173:16" pos:end="173:87">(<expr pos:start="173:17" pos:end="173:86"><name pos:start="173:17" pos:end="173:45"><name pos:start="173:17" pos:end="173:17">s</name><operator pos:start="173:18" pos:end="173:19">-&gt;</operator><name pos:start="173:20" pos:end="173:26">streams</name><index pos:start="173:27" pos:end="173:45">[<expr pos:start="173:28" pos:end="173:44"><name pos:start="173:28" pos:end="173:44"><name pos:start="173:28" pos:end="173:30">asf</name><operator pos:start="173:31" pos:end="173:32">-&gt;</operator><name pos:start="173:33" pos:end="173:44">stream_index</name></name></expr>]</index></name><operator pos:start="173:46" pos:end="173:47">-&gt;</operator><name pos:start="173:48" pos:end="173:64"><name pos:start="173:48" pos:end="173:52">codec</name><operator pos:start="173:53" pos:end="173:54">-&gt;</operator><name pos:start="173:55" pos:end="173:64">codec_type</name></name> <operator pos:start="173:66" pos:end="173:67">==</operator> <name pos:start="173:69" pos:end="173:86">AVMEDIA_TYPE_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="175:17" pos:end="175:42"><block_content pos:start="175:17" pos:end="175:42">

                <expr_stmt pos:start="175:17" pos:end="175:42"><expr pos:start="175:17" pos:end="175:41"><name pos:start="175:17" pos:end="175:37"><name pos:start="175:17" pos:end="175:19">asf</name><operator pos:start="175:20" pos:end="175:21">-&gt;</operator><name pos:start="175:22" pos:end="175:37">packet_key_frame</name></name> <operator pos:start="175:39" pos:end="175:39">=</operator> <literal type="number" pos:start="175:41" pos:end="175:41">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="177:13" pos:end="179:53"><if pos:start="177:13" pos:end="179:53">if <condition pos:start="177:16" pos:end="177:38">(<expr pos:start="177:17" pos:end="177:37"><name pos:start="177:17" pos:end="177:37"><name pos:start="177:17" pos:end="177:19">asf</name><operator pos:start="177:20" pos:end="177:21">-&gt;</operator><name pos:start="177:22" pos:end="177:37">packet_key_frame</name></name></expr>)</condition><block type="pseudo" pos:start="179:17" pos:end="179:53"><block_content pos:start="179:17" pos:end="179:53">

                <expr_stmt pos:start="179:17" pos:end="179:53"><expr pos:start="179:17" pos:end="179:52"><name pos:start="179:17" pos:end="179:33"><name pos:start="179:17" pos:end="179:22">asf_st</name><operator pos:start="179:23" pos:end="179:24">-&gt;</operator><name pos:start="179:25" pos:end="179:27">pkt</name><operator pos:start="179:28" pos:end="179:28">.</operator><name pos:start="179:29" pos:end="179:33">flags</name></name> <operator pos:start="179:35" pos:end="179:36">|=</operator> <name pos:start="179:38" pos:end="179:52">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="185:9" pos:end="185:23">/* read data */</comment>

        <comment type="line" pos:start="187:9" pos:end="187:70">//printf("READ PACKET s:%d  os:%d  o:%d,%d  l:%d   DATA:%p\n",</comment>

        <comment type="line" pos:start="189:9" pos:end="189:75">//       s-&gt;packet_size, asf_st-&gt;pkt.size, asf-&gt;packet_frag_offset,</comment>

        <comment type="line" pos:start="191:9" pos:end="191:79">//       asf_st-&gt;frag_offset, asf-&gt;packet_frag_size, asf_st-&gt;pkt.data);</comment>

        <expr_stmt pos:start="193:9" pos:end="193:55"><expr pos:start="193:9" pos:end="193:54"><name pos:start="193:9" pos:end="193:29"><name pos:start="193:9" pos:end="193:11">asf</name><operator pos:start="193:12" pos:end="193:13">-&gt;</operator><name pos:start="193:14" pos:end="193:29">packet_size_left</name></name> <operator pos:start="193:31" pos:end="193:32">-=</operator> <name pos:start="193:34" pos:end="193:54"><name pos:start="193:34" pos:end="193:36">asf</name><operator pos:start="193:37" pos:end="193:38">-&gt;</operator><name pos:start="193:39" pos:end="193:54">packet_frag_size</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="195:9" pos:end="197:21"><if pos:start="195:9" pos:end="197:21">if <condition pos:start="195:12" pos:end="195:38">(<expr pos:start="195:13" pos:end="195:37"><name pos:start="195:13" pos:end="195:33"><name pos:start="195:13" pos:end="195:15">asf</name><operator pos:start="195:16" pos:end="195:17">-&gt;</operator><name pos:start="195:18" pos:end="195:33">packet_size_left</name></name> <operator pos:start="195:35" pos:end="195:35">&lt;</operator> <literal type="number" pos:start="195:37" pos:end="195:37">0</literal></expr>)</condition><block type="pseudo" pos:start="197:13" pos:end="197:21"><block_content pos:start="197:13" pos:end="197:21">

            <continue pos:start="197:13" pos:end="197:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="201:9" pos:end="211:9"><if pos:start="201:9" pos:end="211:9">if<condition pos:start="201:11" pos:end="203:81">(   <expr pos:start="201:15" pos:end="203:80"><name pos:start="201:15" pos:end="201:37"><name pos:start="201:15" pos:end="201:17">asf</name><operator pos:start="201:18" pos:end="201:19">-&gt;</operator><name pos:start="201:20" pos:end="201:37">packet_frag_offset</name></name> <operator pos:start="201:39" pos:end="201:40">&gt;=</operator> <name pos:start="201:42" pos:end="201:57"><name pos:start="201:42" pos:end="201:47">asf_st</name><operator pos:start="201:48" pos:end="201:49">-&gt;</operator><name pos:start="201:50" pos:end="201:52">pkt</name><operator pos:start="201:53" pos:end="201:53">.</operator><name pos:start="201:54" pos:end="201:57">size</name></name>

           <operator pos:start="203:12" pos:end="203:13">||</operator> <name pos:start="203:15" pos:end="203:35"><name pos:start="203:15" pos:end="203:17">asf</name><operator pos:start="203:18" pos:end="203:19">-&gt;</operator><name pos:start="203:20" pos:end="203:35">packet_frag_size</name></name> <operator pos:start="203:37" pos:end="203:37">&gt;</operator> <name pos:start="203:39" pos:end="203:54"><name pos:start="203:39" pos:end="203:44">asf_st</name><operator pos:start="203:45" pos:end="203:46">-&gt;</operator><name pos:start="203:47" pos:end="203:49">pkt</name><operator pos:start="203:50" pos:end="203:50">.</operator><name pos:start="203:51" pos:end="203:54">size</name></name> <operator pos:start="203:56" pos:end="203:56">-</operator> <name pos:start="203:58" pos:end="203:80"><name pos:start="203:58" pos:end="203:60">asf</name><operator pos:start="203:61" pos:end="203:62">-&gt;</operator><name pos:start="203:63" pos:end="203:80">packet_frag_offset</name></name></expr>)</condition><block pos:start="203:82" pos:end="211:9">{<block_content pos:start="205:13" pos:end="209:21">

            <expr_stmt pos:start="205:13" pos:end="207:82"><expr pos:start="205:13" pos:end="207:81"><call pos:start="205:13" pos:end="207:81"><name pos:start="205:13" pos:end="205:18">av_log</name><argument_list pos:start="205:19" pos:end="207:81">(<argument pos:start="205:20" pos:end="205:20"><expr pos:start="205:20" pos:end="205:20"><name pos:start="205:20" pos:end="205:20">s</name></expr></argument>, <argument pos:start="205:23" pos:end="205:34"><expr pos:start="205:23" pos:end="205:34"><name pos:start="205:23" pos:end="205:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="205:37" pos:end="205:88"><expr pos:start="205:37" pos:end="205:88"><literal type="string" pos:start="205:37" pos:end="205:88">"packet fragment position invalid %u,%u not in %u\n"</literal></expr></argument>,

                <argument pos:start="207:17" pos:end="207:39"><expr pos:start="207:17" pos:end="207:39"><name pos:start="207:17" pos:end="207:39"><name pos:start="207:17" pos:end="207:19">asf</name><operator pos:start="207:20" pos:end="207:21">-&gt;</operator><name pos:start="207:22" pos:end="207:39">packet_frag_offset</name></name></expr></argument>, <argument pos:start="207:42" pos:end="207:62"><expr pos:start="207:42" pos:end="207:62"><name pos:start="207:42" pos:end="207:62"><name pos:start="207:42" pos:end="207:44">asf</name><operator pos:start="207:45" pos:end="207:46">-&gt;</operator><name pos:start="207:47" pos:end="207:62">packet_frag_size</name></name></expr></argument>, <argument pos:start="207:65" pos:end="207:80"><expr pos:start="207:65" pos:end="207:80"><name pos:start="207:65" pos:end="207:80"><name pos:start="207:65" pos:end="207:70">asf_st</name><operator pos:start="207:71" pos:end="207:72">-&gt;</operator><name pos:start="207:73" pos:end="207:75">pkt</name><operator pos:start="207:76" pos:end="207:76">.</operator><name pos:start="207:77" pos:end="207:80">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="209:13" pos:end="209:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="215:9" pos:end="217:42"><expr pos:start="215:9" pos:end="217:41"><call pos:start="215:9" pos:end="217:41"><name pos:start="215:9" pos:end="215:18">get_buffer</name><argument_list pos:start="215:19" pos:end="217:41">(<argument pos:start="215:20" pos:end="215:21"><expr pos:start="215:20" pos:end="215:21"><name pos:start="215:20" pos:end="215:21">pb</name></expr></argument>, <argument pos:start="215:24" pos:end="215:65"><expr pos:start="215:24" pos:end="215:65"><name pos:start="215:24" pos:end="215:39"><name pos:start="215:24" pos:end="215:29">asf_st</name><operator pos:start="215:30" pos:end="215:31">-&gt;</operator><name pos:start="215:32" pos:end="215:34">pkt</name><operator pos:start="215:35" pos:end="215:35">.</operator><name pos:start="215:36" pos:end="215:39">data</name></name> <operator pos:start="215:41" pos:end="215:41">+</operator> <name pos:start="215:43" pos:end="215:65"><name pos:start="215:43" pos:end="215:45">asf</name><operator pos:start="215:46" pos:end="215:47">-&gt;</operator><name pos:start="215:48" pos:end="215:65">packet_frag_offset</name></name></expr></argument>,

                   <argument pos:start="217:20" pos:end="217:40"><expr pos:start="217:20" pos:end="217:40"><name pos:start="217:20" pos:end="217:40"><name pos:start="217:20" pos:end="217:22">asf</name><operator pos:start="217:23" pos:end="217:24">-&gt;</operator><name pos:start="217:25" pos:end="217:40">packet_frag_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="219:9" pos:end="223:51"><if pos:start="219:9" pos:end="223:51">if <condition pos:start="219:12" pos:end="219:38">(<expr pos:start="219:13" pos:end="219:37"><name pos:start="219:13" pos:end="219:18"><name pos:start="219:13" pos:end="219:13">s</name><operator pos:start="219:14" pos:end="219:15">-&gt;</operator><name pos:start="219:16" pos:end="219:18">key</name></name> <operator pos:start="219:20" pos:end="219:21">&amp;&amp;</operator> <name pos:start="219:23" pos:end="219:31"><name pos:start="219:23" pos:end="219:23">s</name><operator pos:start="219:24" pos:end="219:25">-&gt;</operator><name pos:start="219:26" pos:end="219:31">keylen</name></name> <operator pos:start="219:33" pos:end="219:34">==</operator> <literal type="number" pos:start="219:36" pos:end="219:37">20</literal></expr>)</condition><block type="pseudo" pos:start="221:13" pos:end="223:51"><block_content pos:start="221:13" pos:end="223:51">

            <expr_stmt pos:start="221:13" pos:end="223:51"><expr pos:start="221:13" pos:end="223:50"><call pos:start="221:13" pos:end="223:50"><name pos:start="221:13" pos:end="221:27">ff_asfcrypt_dec</name><argument_list pos:start="221:28" pos:end="223:50">(<argument pos:start="221:29" pos:end="221:34"><expr pos:start="221:29" pos:end="221:34"><name pos:start="221:29" pos:end="221:34"><name pos:start="221:29" pos:end="221:29">s</name><operator pos:start="221:30" pos:end="221:31">-&gt;</operator><name pos:start="221:32" pos:end="221:34">key</name></name></expr></argument>, <argument pos:start="221:37" pos:end="221:78"><expr pos:start="221:37" pos:end="221:78"><name pos:start="221:37" pos:end="221:52"><name pos:start="221:37" pos:end="221:42">asf_st</name><operator pos:start="221:43" pos:end="221:44">-&gt;</operator><name pos:start="221:45" pos:end="221:47">pkt</name><operator pos:start="221:48" pos:end="221:48">.</operator><name pos:start="221:49" pos:end="221:52">data</name></name> <operator pos:start="221:54" pos:end="221:54">+</operator> <name pos:start="221:56" pos:end="221:78"><name pos:start="221:56" pos:end="221:58">asf</name><operator pos:start="221:59" pos:end="221:60">-&gt;</operator><name pos:start="221:61" pos:end="221:78">packet_frag_offset</name></name></expr></argument>,

                            <argument pos:start="223:29" pos:end="223:49"><expr pos:start="223:29" pos:end="223:49"><name pos:start="223:29" pos:end="223:49"><name pos:start="223:29" pos:end="223:31">asf</name><operator pos:start="223:32" pos:end="223:33">-&gt;</operator><name pos:start="223:34" pos:end="223:49">packet_frag_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:53"><expr pos:start="225:9" pos:end="225:52"><name pos:start="225:9" pos:end="225:27"><name pos:start="225:9" pos:end="225:14">asf_st</name><operator pos:start="225:15" pos:end="225:16">-&gt;</operator><name pos:start="225:17" pos:end="225:27">frag_offset</name></name> <operator pos:start="225:29" pos:end="225:30">+=</operator> <name pos:start="225:32" pos:end="225:52"><name pos:start="225:32" pos:end="225:34">asf</name><operator pos:start="225:35" pos:end="225:36">-&gt;</operator><name pos:start="225:37" pos:end="225:52">packet_frag_size</name></name></expr>;</expr_stmt>

        <comment type="block" pos:start="227:9" pos:end="227:42">/* test if whole packet is read */</comment>

        <if_stmt pos:start="229:9" pos:end="327:9"><if pos:start="229:9" pos:end="327:9">if <condition pos:start="229:12" pos:end="229:52">(<expr pos:start="229:13" pos:end="229:51"><name pos:start="229:13" pos:end="229:31"><name pos:start="229:13" pos:end="229:18">asf_st</name><operator pos:start="229:19" pos:end="229:20">-&gt;</operator><name pos:start="229:21" pos:end="229:31">frag_offset</name></name> <operator pos:start="229:33" pos:end="229:34">==</operator> <name pos:start="229:36" pos:end="229:51"><name pos:start="229:36" pos:end="229:41">asf_st</name><operator pos:start="229:42" pos:end="229:43">-&gt;</operator><name pos:start="229:44" pos:end="229:46">pkt</name><operator pos:start="229:47" pos:end="229:47">.</operator><name pos:start="229:48" pos:end="229:51">size</name></name></expr>)</condition> <block pos:start="229:54" pos:end="327:9">{<block_content pos:start="233:13" pos:end="325:18">

            <comment type="line" pos:start="231:13" pos:end="231:57">//workaround for macroshit radio DVR-MS files</comment>

            <if_stmt pos:start="233:13" pos:end="253:13"><if pos:start="233:13" pos:end="253:13">if<condition pos:start="233:15" pos:end="235:41">(   <expr pos:start="233:19" pos:end="235:40"><name pos:start="233:19" pos:end="233:47"><name pos:start="233:19" pos:end="233:19">s</name><operator pos:start="233:20" pos:end="233:21">-&gt;</operator><name pos:start="233:22" pos:end="233:28">streams</name><index pos:start="233:29" pos:end="233:47">[<expr pos:start="233:30" pos:end="233:46"><name pos:start="233:30" pos:end="233:46"><name pos:start="233:30" pos:end="233:32">asf</name><operator pos:start="233:33" pos:end="233:34">-&gt;</operator><name pos:start="233:35" pos:end="233:46">stream_index</name></name></expr>]</index></name><operator pos:start="233:48" pos:end="233:49">-&gt;</operator><name pos:start="233:50" pos:end="233:64"><name pos:start="233:50" pos:end="233:54">codec</name><operator pos:start="233:55" pos:end="233:56">-&gt;</operator><name pos:start="233:57" pos:end="233:64">codec_id</name></name> <operator pos:start="233:66" pos:end="233:67">==</operator> <name pos:start="233:69" pos:end="233:87">CODEC_ID_MPEG2VIDEO</name>

               <operator pos:start="235:16" pos:end="235:17">&amp;&amp;</operator> <name pos:start="235:19" pos:end="235:34"><name pos:start="235:19" pos:end="235:24">asf_st</name><operator pos:start="235:25" pos:end="235:26">-&gt;</operator><name pos:start="235:27" pos:end="235:29">pkt</name><operator pos:start="235:30" pos:end="235:30">.</operator><name pos:start="235:31" pos:end="235:34">size</name></name> <operator pos:start="235:36" pos:end="235:36">&gt;</operator> <literal type="number" pos:start="235:38" pos:end="235:40">100</literal></expr>)</condition><block pos:start="235:42" pos:end="253:13">{<block_content pos:start="237:17" pos:end="251:17">

                <decl_stmt pos:start="237:17" pos:end="237:22"><decl pos:start="237:17" pos:end="237:21"><type pos:start="237:17" pos:end="237:19"><name pos:start="237:17" pos:end="237:19">int</name></type> <name pos:start="237:21" pos:end="237:21">i</name></decl>;</decl_stmt>

                <for pos:start="239:17" pos:end="239:74">for<control pos:start="239:20" pos:end="239:73">(<init pos:start="239:21" pos:end="239:24"><expr pos:start="239:21" pos:end="239:23"><name pos:start="239:21" pos:end="239:21">i</name><operator pos:start="239:22" pos:end="239:22">=</operator><literal type="number" pos:start="239:23" pos:end="239:23">0</literal></expr>;</init> <condition pos:start="239:26" pos:end="239:68"><expr pos:start="239:26" pos:end="239:67"><name pos:start="239:26" pos:end="239:26">i</name><operator pos:start="239:27" pos:end="239:27">&lt;</operator><name pos:start="239:28" pos:end="239:43"><name pos:start="239:28" pos:end="239:33">asf_st</name><operator pos:start="239:34" pos:end="239:35">-&gt;</operator><name pos:start="239:36" pos:end="239:38">pkt</name><operator pos:start="239:39" pos:end="239:39">.</operator><name pos:start="239:40" pos:end="239:43">size</name></name> <operator pos:start="239:45" pos:end="239:46">&amp;&amp;</operator> <operator pos:start="239:48" pos:end="239:48">!</operator><name pos:start="239:49" pos:end="239:67"><name pos:start="239:49" pos:end="239:54">asf_st</name><operator pos:start="239:55" pos:end="239:56">-&gt;</operator><name pos:start="239:57" pos:end="239:59">pkt</name><operator pos:start="239:60" pos:end="239:60">.</operator><name pos:start="239:61" pos:end="239:64">data</name><index pos:start="239:65" pos:end="239:67">[<expr pos:start="239:66" pos:end="239:66"><name pos:start="239:66" pos:end="239:66">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="239:70" pos:end="239:72"><expr pos:start="239:70" pos:end="239:72"><name pos:start="239:70" pos:end="239:70">i</name><operator pos:start="239:71" pos:end="239:72">++</operator></expr></incr>)</control><block type="pseudo" pos:start="239:74" pos:end="239:74"><block_content pos:start="239:74" pos:end="239:74"><empty_stmt pos:start="239:74" pos:end="239:74">;</empty_stmt></block_content></block></for>

                <if_stmt pos:start="241:17" pos:end="251:17"><if pos:start="241:17" pos:end="251:17">if<condition pos:start="241:19" pos:end="241:41">(<expr pos:start="241:20" pos:end="241:40"><name pos:start="241:20" pos:end="241:20">i</name> <operator pos:start="241:22" pos:end="241:23">==</operator> <name pos:start="241:25" pos:end="241:40"><name pos:start="241:25" pos:end="241:30">asf_st</name><operator pos:start="241:31" pos:end="241:32">-&gt;</operator><name pos:start="241:33" pos:end="241:35">pkt</name><operator pos:start="241:36" pos:end="241:36">.</operator><name pos:start="241:37" pos:end="241:40">size</name></name></expr>)</condition><block pos:start="241:42" pos:end="251:17">{<block_content pos:start="243:21" pos:end="249:29">

                    <expr_stmt pos:start="243:21" pos:end="243:68"><expr pos:start="243:21" pos:end="243:67"><call pos:start="243:21" pos:end="243:67"><name pos:start="243:21" pos:end="243:26">av_log</name><argument_list pos:start="243:27" pos:end="243:67">(<argument pos:start="243:28" pos:end="243:28"><expr pos:start="243:28" pos:end="243:28"><name pos:start="243:28" pos:end="243:28">s</name></expr></argument>, <argument pos:start="243:31" pos:end="243:42"><expr pos:start="243:31" pos:end="243:42"><name pos:start="243:31" pos:end="243:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="243:45" pos:end="243:66"><expr pos:start="243:45" pos:end="243:66"><literal type="string" pos:start="243:45" pos:end="243:66">"discarding ms fart\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="245:21" pos:end="245:44"><expr pos:start="245:21" pos:end="245:43"><name pos:start="245:21" pos:end="245:39"><name pos:start="245:21" pos:end="245:26">asf_st</name><operator pos:start="245:27" pos:end="245:28">-&gt;</operator><name pos:start="245:29" pos:end="245:39">frag_offset</name></name> <operator pos:start="245:41" pos:end="245:41">=</operator> <literal type="number" pos:start="245:43" pos:end="245:43">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="247:21" pos:end="247:49"><expr pos:start="247:21" pos:end="247:48"><call pos:start="247:21" pos:end="247:48"><name pos:start="247:21" pos:end="247:34">av_free_packet</name><argument_list pos:start="247:35" pos:end="247:48">(<argument pos:start="247:36" pos:end="247:47"><expr pos:start="247:36" pos:end="247:47"><operator pos:start="247:36" pos:end="247:36">&amp;</operator><name pos:start="247:37" pos:end="247:47"><name pos:start="247:37" pos:end="247:42">asf_st</name><operator pos:start="247:43" pos:end="247:44">-&gt;</operator><name pos:start="247:45" pos:end="247:47">pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <continue pos:start="249:21" pos:end="249:29">continue;</continue>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="257:13" pos:end="257:31">/* return packet */</comment>

            <if_stmt pos:start="259:13" pos:end="313:13"><if pos:start="259:13" pos:end="313:13">if <condition pos:start="259:16" pos:end="259:36">(<expr pos:start="259:17" pos:end="259:35"><name pos:start="259:17" pos:end="259:31"><name pos:start="259:17" pos:end="259:22">asf_st</name><operator pos:start="259:23" pos:end="259:24">-&gt;</operator><name pos:start="259:25" pos:end="259:31">ds_span</name></name> <operator pos:start="259:33" pos:end="259:33">&gt;</operator> <literal type="number" pos:start="259:35" pos:end="259:35">1</literal></expr>)</condition> <block pos:start="259:38" pos:end="313:13">{<block_content pos:start="261:15" pos:end="311:15">

              <if_stmt pos:start="261:15" pos:end="311:15"><if pos:start="261:15" pos:end="265:15">if<condition pos:start="261:17" pos:end="261:78">(<expr pos:start="261:18" pos:end="261:77"><name pos:start="261:18" pos:end="261:33"><name pos:start="261:18" pos:end="261:23">asf_st</name><operator pos:start="261:24" pos:end="261:25">-&gt;</operator><name pos:start="261:26" pos:end="261:28">pkt</name><operator pos:start="261:29" pos:end="261:29">.</operator><name pos:start="261:30" pos:end="261:33">size</name></name> <operator pos:start="261:35" pos:end="261:36">!=</operator> <name pos:start="261:38" pos:end="261:59"><name pos:start="261:38" pos:end="261:43">asf_st</name><operator pos:start="261:44" pos:end="261:45">-&gt;</operator><name pos:start="261:46" pos:end="261:59">ds_packet_size</name></name> <operator pos:start="261:61" pos:end="261:61">*</operator> <name pos:start="261:63" pos:end="261:77"><name pos:start="261:63" pos:end="261:68">asf_st</name><operator pos:start="261:69" pos:end="261:70">-&gt;</operator><name pos:start="261:71" pos:end="261:77">ds_span</name></name></expr>)</condition><block pos:start="261:79" pos:end="265:15">{<block_content pos:start="263:21" pos:end="263:156">

                    <expr_stmt pos:start="263:21" pos:end="263:156"><expr pos:start="263:21" pos:end="263:155"><call pos:start="263:21" pos:end="263:155"><name pos:start="263:21" pos:end="263:26">av_log</name><argument_list pos:start="263:27" pos:end="263:155">(<argument pos:start="263:28" pos:end="263:28"><expr pos:start="263:28" pos:end="263:28"><name pos:start="263:28" pos:end="263:28">s</name></expr></argument>, <argument pos:start="263:31" pos:end="263:42"><expr pos:start="263:31" pos:end="263:42"><name pos:start="263:31" pos:end="263:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="263:45" pos:end="263:95"><expr pos:start="263:45" pos:end="263:95"><literal type="string" pos:start="263:45" pos:end="263:95">"pkt.size != ds_packet_size * ds_span (%d %d %d)\n"</literal></expr></argument>, <argument pos:start="263:98" pos:end="263:113"><expr pos:start="263:98" pos:end="263:113"><name pos:start="263:98" pos:end="263:113"><name pos:start="263:98" pos:end="263:103">asf_st</name><operator pos:start="263:104" pos:end="263:105">-&gt;</operator><name pos:start="263:106" pos:end="263:108">pkt</name><operator pos:start="263:109" pos:end="263:109">.</operator><name pos:start="263:110" pos:end="263:113">size</name></name></expr></argument>, <argument pos:start="263:116" pos:end="263:137"><expr pos:start="263:116" pos:end="263:137"><name pos:start="263:116" pos:end="263:137"><name pos:start="263:116" pos:end="263:121">asf_st</name><operator pos:start="263:122" pos:end="263:123">-&gt;</operator><name pos:start="263:124" pos:end="263:137">ds_packet_size</name></name></expr></argument>, <argument pos:start="263:140" pos:end="263:154"><expr pos:start="263:140" pos:end="263:154"><name pos:start="263:140" pos:end="263:154"><name pos:start="263:140" pos:end="263:145">asf_st</name><operator pos:start="263:146" pos:end="263:147">-&gt;</operator><name pos:start="263:148" pos:end="263:154">ds_span</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

              </block_content>}</block></if><else pos:start="265:16" pos:end="311:15">else<block pos:start="265:20" pos:end="311:15">{<block_content pos:start="269:17" pos:end="309:17">

                <comment type="block" pos:start="267:17" pos:end="267:41">/* packet descrambling */</comment>

                <decl_stmt pos:start="269:17" pos:end="269:94"><decl pos:start="269:17" pos:end="269:93"><type pos:start="269:17" pos:end="269:25"><name pos:start="269:17" pos:end="269:23">uint8_t</name> <modifier pos:start="269:25" pos:end="269:25">*</modifier></type><name pos:start="269:26" pos:end="269:32">newdata</name> <init pos:start="269:34" pos:end="269:93">= <expr pos:start="269:36" pos:end="269:93"><call pos:start="269:36" pos:end="269:93"><name pos:start="269:36" pos:end="269:44">av_malloc</name><argument_list pos:start="269:45" pos:end="269:93">(<argument pos:start="269:46" pos:end="269:92"><expr pos:start="269:46" pos:end="269:92"><name pos:start="269:46" pos:end="269:61"><name pos:start="269:46" pos:end="269:51">asf_st</name><operator pos:start="269:52" pos:end="269:53">-&gt;</operator><name pos:start="269:54" pos:end="269:56">pkt</name><operator pos:start="269:57" pos:end="269:57">.</operator><name pos:start="269:58" pos:end="269:61">size</name></name> <operator pos:start="269:63" pos:end="269:63">+</operator> <name pos:start="269:65" pos:end="269:92">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="271:17" pos:end="309:17"><if pos:start="271:17" pos:end="309:17">if <condition pos:start="271:20" pos:end="271:28">(<expr pos:start="271:21" pos:end="271:27"><name pos:start="271:21" pos:end="271:27">newdata</name></expr>)</condition> <block pos:start="271:30" pos:end="309:17">{<block_content pos:start="273:21" pos:end="307:47">

                    <decl_stmt pos:start="273:21" pos:end="273:35"><decl pos:start="273:21" pos:end="273:34"><type pos:start="273:21" pos:end="273:23"><name pos:start="273:21" pos:end="273:23">int</name></type> <name pos:start="273:25" pos:end="273:30">offset</name> <init pos:start="273:32" pos:end="273:34">= <expr pos:start="273:34" pos:end="273:34"><literal type="number" pos:start="273:34" pos:end="273:34">0</literal></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="275:21" pos:end="275:88"><expr pos:start="275:21" pos:end="275:87"><call pos:start="275:21" pos:end="275:87"><name pos:start="275:21" pos:end="275:26">memset</name><argument_list pos:start="275:27" pos:end="275:87">(<argument pos:start="275:28" pos:end="275:53"><expr pos:start="275:28" pos:end="275:53"><name pos:start="275:28" pos:end="275:34">newdata</name> <operator pos:start="275:36" pos:end="275:36">+</operator> <name pos:start="275:38" pos:end="275:53"><name pos:start="275:38" pos:end="275:43">asf_st</name><operator pos:start="275:44" pos:end="275:45">-&gt;</operator><name pos:start="275:46" pos:end="275:48">pkt</name><operator pos:start="275:49" pos:end="275:49">.</operator><name pos:start="275:50" pos:end="275:53">size</name></name></expr></argument>, <argument pos:start="275:56" pos:end="275:56"><expr pos:start="275:56" pos:end="275:56"><literal type="number" pos:start="275:56" pos:end="275:56">0</literal></expr></argument>, <argument pos:start="275:59" pos:end="275:86"><expr pos:start="275:59" pos:end="275:86"><name pos:start="275:59" pos:end="275:86">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <while pos:start="277:21" pos:end="303:21">while <condition pos:start="277:27" pos:end="277:53">(<expr pos:start="277:28" pos:end="277:52"><name pos:start="277:28" pos:end="277:33">offset</name> <operator pos:start="277:35" pos:end="277:35">&lt;</operator> <name pos:start="277:37" pos:end="277:52"><name pos:start="277:37" pos:end="277:42">asf_st</name><operator pos:start="277:43" pos:end="277:44">-&gt;</operator><name pos:start="277:45" pos:end="277:47">pkt</name><operator pos:start="277:48" pos:end="277:48">.</operator><name pos:start="277:49" pos:end="277:52">size</name></name></expr>)</condition> <block pos:start="277:55" pos:end="303:21">{<block_content pos:start="279:25" pos:end="301:56">

                        <decl_stmt pos:start="279:25" pos:end="279:65"><decl pos:start="279:25" pos:end="279:64"><type pos:start="279:25" pos:end="279:27"><name pos:start="279:25" pos:end="279:27">int</name></type> <name pos:start="279:29" pos:end="279:31">off</name> <init pos:start="279:33" pos:end="279:64">= <expr pos:start="279:35" pos:end="279:64"><name pos:start="279:35" pos:end="279:40">offset</name> <operator pos:start="279:42" pos:end="279:42">/</operator> <name pos:start="279:44" pos:end="279:64"><name pos:start="279:44" pos:end="279:49">asf_st</name><operator pos:start="279:50" pos:end="279:51">-&gt;</operator><name pos:start="279:52" pos:end="279:64">ds_chunk_size</name></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="281:25" pos:end="281:56"><decl pos:start="281:25" pos:end="281:55"><type pos:start="281:25" pos:end="281:27"><name pos:start="281:25" pos:end="281:27">int</name></type> <name pos:start="281:29" pos:end="281:31">row</name> <init pos:start="281:33" pos:end="281:55">= <expr pos:start="281:35" pos:end="281:55"><name pos:start="281:35" pos:end="281:37">off</name> <operator pos:start="281:39" pos:end="281:39">/</operator> <name pos:start="281:41" pos:end="281:55"><name pos:start="281:41" pos:end="281:46">asf_st</name><operator pos:start="281:47" pos:end="281:48">-&gt;</operator><name pos:start="281:49" pos:end="281:55">ds_span</name></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="283:25" pos:end="283:56"><decl pos:start="283:25" pos:end="283:55"><type pos:start="283:25" pos:end="283:27"><name pos:start="283:25" pos:end="283:27">int</name></type> <name pos:start="283:29" pos:end="283:31">col</name> <init pos:start="283:33" pos:end="283:55">= <expr pos:start="283:35" pos:end="283:55"><name pos:start="283:35" pos:end="283:37">off</name> <operator pos:start="283:39" pos:end="283:39">%</operator> <name pos:start="283:41" pos:end="283:55"><name pos:start="283:41" pos:end="283:46">asf_st</name><operator pos:start="283:47" pos:end="283:48">-&gt;</operator><name pos:start="283:49" pos:end="283:55">ds_span</name></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="285:25" pos:end="285:93"><decl pos:start="285:25" pos:end="285:92"><type pos:start="285:25" pos:end="285:27"><name pos:start="285:25" pos:end="285:27">int</name></type> <name pos:start="285:29" pos:end="285:31">idx</name> <init pos:start="285:33" pos:end="285:92">= <expr pos:start="285:35" pos:end="285:92"><name pos:start="285:35" pos:end="285:37">row</name> <operator pos:start="285:39" pos:end="285:39">+</operator> <name pos:start="285:41" pos:end="285:43">col</name> <operator pos:start="285:45" pos:end="285:45">*</operator> <name pos:start="285:47" pos:end="285:68"><name pos:start="285:47" pos:end="285:52">asf_st</name><operator pos:start="285:53" pos:end="285:54">-&gt;</operator><name pos:start="285:55" pos:end="285:68">ds_packet_size</name></name> <operator pos:start="285:70" pos:end="285:70">/</operator> <name pos:start="285:72" pos:end="285:92"><name pos:start="285:72" pos:end="285:77">asf_st</name><operator pos:start="285:78" pos:end="285:79">-&gt;</operator><name pos:start="285:80" pos:end="285:92">ds_chunk_size</name></name></expr></init></decl>;</decl_stmt>

                        <comment type="line" pos:start="287:25" pos:end="287:89">//printf("off:%d  row:%d  col:%d  idx:%d\n", off, row, col, idx);</comment>



                        <expr_stmt pos:start="291:25" pos:end="291:83"><expr pos:start="291:25" pos:end="291:82"><call pos:start="291:25" pos:end="291:82"><name pos:start="291:25" pos:end="291:30">assert</name><argument_list pos:start="291:31" pos:end="291:82">(<argument pos:start="291:32" pos:end="291:81"><expr pos:start="291:32" pos:end="291:81"><name pos:start="291:32" pos:end="291:37">offset</name> <operator pos:start="291:39" pos:end="291:39">+</operator> <name pos:start="291:41" pos:end="291:61"><name pos:start="291:41" pos:end="291:46">asf_st</name><operator pos:start="291:47" pos:end="291:48">-&gt;</operator><name pos:start="291:49" pos:end="291:61">ds_chunk_size</name></name> <operator pos:start="291:63" pos:end="291:64">&lt;=</operator> <name pos:start="291:66" pos:end="291:81"><name pos:start="291:66" pos:end="291:71">asf_st</name><operator pos:start="291:72" pos:end="291:73">-&gt;</operator><name pos:start="291:74" pos:end="291:76">pkt</name><operator pos:start="291:77" pos:end="291:77">.</operator><name pos:start="291:78" pos:end="291:81">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="293:25" pos:end="293:82"><expr pos:start="293:25" pos:end="293:81"><call pos:start="293:25" pos:end="293:81"><name pos:start="293:25" pos:end="293:30">assert</name><argument_list pos:start="293:31" pos:end="293:81">(<argument pos:start="293:32" pos:end="293:80"><expr pos:start="293:32" pos:end="293:80"><name pos:start="293:32" pos:end="293:34">idx</name><operator pos:start="293:35" pos:end="293:35">+</operator><literal type="number" pos:start="293:36" pos:end="293:36">1</literal> <operator pos:start="293:38" pos:end="293:39">&lt;=</operator> <name pos:start="293:41" pos:end="293:56"><name pos:start="293:41" pos:end="293:46">asf_st</name><operator pos:start="293:47" pos:end="293:48">-&gt;</operator><name pos:start="293:49" pos:end="293:51">pkt</name><operator pos:start="293:52" pos:end="293:52">.</operator><name pos:start="293:53" pos:end="293:56">size</name></name> <operator pos:start="293:58" pos:end="293:58">/</operator> <name pos:start="293:60" pos:end="293:80"><name pos:start="293:60" pos:end="293:65">asf_st</name><operator pos:start="293:66" pos:end="293:67">-&gt;</operator><name pos:start="293:68" pos:end="293:80">ds_chunk_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="295:25" pos:end="299:54"><expr pos:start="295:25" pos:end="299:53"><call pos:start="295:25" pos:end="299:53"><name pos:start="295:25" pos:end="295:30">memcpy</name><argument_list pos:start="295:31" pos:end="299:53">(<argument pos:start="295:32" pos:end="295:47"><expr pos:start="295:32" pos:end="295:47"><name pos:start="295:32" pos:end="295:38">newdata</name> <operator pos:start="295:40" pos:end="295:40">+</operator> <name pos:start="295:42" pos:end="295:47">offset</name></expr></argument>,

                               <argument pos:start="297:32" pos:end="297:77"><expr pos:start="297:32" pos:end="297:77"><name pos:start="297:32" pos:end="297:47"><name pos:start="297:32" pos:end="297:37">asf_st</name><operator pos:start="297:38" pos:end="297:39">-&gt;</operator><name pos:start="297:40" pos:end="297:42">pkt</name><operator pos:start="297:43" pos:end="297:43">.</operator><name pos:start="297:44" pos:end="297:47">data</name></name> <operator pos:start="297:49" pos:end="297:49">+</operator> <name pos:start="297:51" pos:end="297:53">idx</name> <operator pos:start="297:55" pos:end="297:55">*</operator> <name pos:start="297:57" pos:end="297:77"><name pos:start="297:57" pos:end="297:62">asf_st</name><operator pos:start="297:63" pos:end="297:64">-&gt;</operator><name pos:start="297:65" pos:end="297:77">ds_chunk_size</name></name></expr></argument>,

                               <argument pos:start="299:32" pos:end="299:52"><expr pos:start="299:32" pos:end="299:52"><name pos:start="299:32" pos:end="299:52"><name pos:start="299:32" pos:end="299:37">asf_st</name><operator pos:start="299:38" pos:end="299:39">-&gt;</operator><name pos:start="299:40" pos:end="299:52">ds_chunk_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="301:25" pos:end="301:56"><expr pos:start="301:25" pos:end="301:55"><name pos:start="301:25" pos:end="301:30">offset</name> <operator pos:start="301:32" pos:end="301:33">+=</operator> <name pos:start="301:35" pos:end="301:55"><name pos:start="301:35" pos:end="301:40">asf_st</name><operator pos:start="301:41" pos:end="301:42">-&gt;</operator><name pos:start="301:43" pos:end="301:55">ds_chunk_size</name></name></expr>;</expr_stmt>

                    </block_content>}</block></while>

                    <expr_stmt pos:start="305:21" pos:end="305:46"><expr pos:start="305:21" pos:end="305:45"><call pos:start="305:21" pos:end="305:45"><name pos:start="305:21" pos:end="305:27">av_free</name><argument_list pos:start="305:28" pos:end="305:45">(<argument pos:start="305:29" pos:end="305:44"><expr pos:start="305:29" pos:end="305:44"><name pos:start="305:29" pos:end="305:44"><name pos:start="305:29" pos:end="305:34">asf_st</name><operator pos:start="305:35" pos:end="305:36">-&gt;</operator><name pos:start="305:37" pos:end="305:39">pkt</name><operator pos:start="305:40" pos:end="305:40">.</operator><name pos:start="305:41" pos:end="305:44">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="307:21" pos:end="307:47"><expr pos:start="307:21" pos:end="307:46"><name pos:start="307:21" pos:end="307:36"><name pos:start="307:21" pos:end="307:26">asf_st</name><operator pos:start="307:27" pos:end="307:28">-&gt;</operator><name pos:start="307:29" pos:end="307:31">pkt</name><operator pos:start="307:32" pos:end="307:32">.</operator><name pos:start="307:33" pos:end="307:36">data</name></name> <operator pos:start="307:38" pos:end="307:38">=</operator> <name pos:start="307:40" pos:end="307:46">newdata</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

              </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="315:13" pos:end="315:36"><expr pos:start="315:13" pos:end="315:35"><name pos:start="315:13" pos:end="315:31"><name pos:start="315:13" pos:end="315:18">asf_st</name><operator pos:start="315:19" pos:end="315:20">-&gt;</operator><name pos:start="315:21" pos:end="315:31">frag_offset</name></name> <operator pos:start="315:33" pos:end="315:33">=</operator> <literal type="number" pos:start="315:35" pos:end="315:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="317:13" pos:end="317:30"><expr pos:start="317:13" pos:end="317:29"><operator pos:start="317:13" pos:end="317:13">*</operator><name pos:start="317:14" pos:end="317:16">pkt</name><operator pos:start="317:17" pos:end="317:17">=</operator> <name pos:start="317:19" pos:end="317:29"><name pos:start="317:19" pos:end="317:24">asf_st</name><operator pos:start="317:25" pos:end="317:26">-&gt;</operator><name pos:start="317:27" pos:end="317:29">pkt</name></name></expr>;</expr_stmt>

            <comment type="line" pos:start="319:13" pos:end="319:80">//printf("packet %d %d\n", asf_st-&gt;pkt.size, asf-&gt;packet_frag_size);</comment>

            <expr_stmt pos:start="321:13" pos:end="321:33"><expr pos:start="321:13" pos:end="321:32"><name pos:start="321:13" pos:end="321:28"><name pos:start="321:13" pos:end="321:18">asf_st</name><operator pos:start="321:19" pos:end="321:20">-&gt;</operator><name pos:start="321:21" pos:end="321:23">pkt</name><operator pos:start="321:24" pos:end="321:24">.</operator><name pos:start="321:25" pos:end="321:28">size</name></name> <operator pos:start="321:30" pos:end="321:30">=</operator> <literal type="number" pos:start="321:32" pos:end="321:32">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="323:13" pos:end="323:33"><expr pos:start="323:13" pos:end="323:32"><name pos:start="323:13" pos:end="323:28"><name pos:start="323:13" pos:end="323:18">asf_st</name><operator pos:start="323:19" pos:end="323:20">-&gt;</operator><name pos:start="323:21" pos:end="323:23">pkt</name><operator pos:start="323:24" pos:end="323:24">.</operator><name pos:start="323:25" pos:end="323:28">data</name></name> <operator pos:start="323:30" pos:end="323:30">=</operator> <literal type="number" pos:start="323:32" pos:end="323:32">0</literal></expr>;</expr_stmt>

            <break pos:start="325:13" pos:end="325:18">break;</break> <comment type="line" pos:start="325:20" pos:end="325:38">// packet completed</comment>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="331:5" pos:end="331:13">return <expr pos:start="331:12" pos:end="331:12"><literal type="number" pos:start="331:12" pos:end="331:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
