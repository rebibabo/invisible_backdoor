<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15291.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:20"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:18">SchroBuffer</name> <modifier pos:start="1:20" pos:end="1:20">*</modifier></type><name pos:start="1:21" pos:end="1:40">find_next_parse_unit</name><parameter_list pos:start="1:41" pos:end="1:74">(<parameter pos:start="1:42" pos:end="1:73"><decl pos:start="1:42" pos:end="1:73"><type pos:start="1:42" pos:end="1:64"><name pos:start="1:42" pos:end="1:62">SchroParseUnitContext</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:73">parse_ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:19">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">SchroBuffer</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:24">enc_buf</name> <init pos:start="5:26" pos:end="5:31">= <expr pos:start="5:28" pos:end="5:31"><name pos:start="5:28" pos:end="5:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:22">next_pu_offset</name> <init pos:start="7:24" pos:end="7:26">= <expr pos:start="7:26" pos:end="7:26"><literal type="number" pos:start="7:26" pos:end="7:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">char</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:25">in_buf</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="23:20"><if pos:start="13:5" pos:end="23:20">if <condition pos:start="13:8" pos:end="21:33">(<expr pos:start="13:9" pos:end="21:32"><name pos:start="13:9" pos:end="13:27"><name pos:start="13:9" pos:end="13:17">parse_ctx</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:27">buf_size</name></name> <operator pos:start="13:29" pos:end="13:29">&lt;</operator> <literal type="number" pos:start="13:31" pos:end="13:32">13</literal> <operator pos:start="13:34" pos:end="13:35">||</operator>

        <name pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:17">parse_ctx</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:22">buf</name><index pos:start="15:23" pos:end="15:25">[<expr pos:start="15:24" pos:end="15:24"><literal type="number" pos:start="15:24" pos:end="15:24">0</literal></expr>]</index></name> <operator pos:start="15:27" pos:end="15:28">!=</operator> <literal type="char" pos:start="15:30" pos:end="15:32">'B'</literal> <operator pos:start="15:34" pos:end="15:35">||</operator>

        <name pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:17">parse_ctx</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:22">buf</name><index pos:start="17:23" pos:end="17:25">[<expr pos:start="17:24" pos:end="17:24"><literal type="number" pos:start="17:24" pos:end="17:24">1</literal></expr>]</index></name> <operator pos:start="17:27" pos:end="17:28">!=</operator> <literal type="char" pos:start="17:30" pos:end="17:32">'B'</literal> <operator pos:start="17:34" pos:end="17:35">||</operator>

        <name pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:17">parse_ctx</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:22">buf</name><index pos:start="19:23" pos:end="19:25">[<expr pos:start="19:24" pos:end="19:24"><literal type="number" pos:start="19:24" pos:end="19:24">2</literal></expr>]</index></name> <operator pos:start="19:27" pos:end="19:28">!=</operator> <literal type="char" pos:start="19:30" pos:end="19:32">'C'</literal> <operator pos:start="19:34" pos:end="19:35">||</operator>

        <name pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:17">parse_ctx</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:22">buf</name><index pos:start="21:23" pos:end="21:25">[<expr pos:start="21:24" pos:end="21:24"><literal type="number" pos:start="21:24" pos:end="21:24">3</literal></expr>]</index></name> <operator pos:start="21:27" pos:end="21:28">!=</operator> <literal type="char" pos:start="21:30" pos:end="21:32">'D'</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:20"><block_content pos:start="23:9" pos:end="23:20">

        <return pos:start="23:9" pos:end="23:20">return <expr pos:start="23:16" pos:end="23:19"><name pos:start="23:16" pos:end="23:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="33:40"><expr pos:start="27:5" pos:end="33:39"><name pos:start="27:5" pos:end="27:18">next_pu_offset</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <operator pos:start="27:22" pos:end="27:22">(</operator><name pos:start="27:23" pos:end="27:39"><name pos:start="27:23" pos:end="27:31">parse_ctx</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:36">buf</name><index pos:start="27:37" pos:end="27:39">[<expr pos:start="27:38" pos:end="27:38"><literal type="number" pos:start="27:38" pos:end="27:38">5</literal></expr>]</index></name> <operator pos:start="27:41" pos:end="27:42">&lt;&lt;</operator> <literal type="number" pos:start="27:44" pos:end="27:45">24</literal><operator pos:start="27:46" pos:end="27:46">)</operator> <operator pos:start="27:48" pos:end="27:48">+</operator>

                     <operator pos:start="29:22" pos:end="29:22">(</operator><name pos:start="29:23" pos:end="29:39"><name pos:start="29:23" pos:end="29:31">parse_ctx</name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:36">buf</name><index pos:start="29:37" pos:end="29:39">[<expr pos:start="29:38" pos:end="29:38"><literal type="number" pos:start="29:38" pos:end="29:38">6</literal></expr>]</index></name> <operator pos:start="29:41" pos:end="29:42">&lt;&lt;</operator> <literal type="number" pos:start="29:44" pos:end="29:45">16</literal><operator pos:start="29:46" pos:end="29:46">)</operator> <operator pos:start="29:48" pos:end="29:48">+</operator>

                     <operator pos:start="31:22" pos:end="31:22">(</operator><name pos:start="31:23" pos:end="31:39"><name pos:start="31:23" pos:end="31:31">parse_ctx</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:36">buf</name><index pos:start="31:37" pos:end="31:39">[<expr pos:start="31:38" pos:end="31:38"><literal type="number" pos:start="31:38" pos:end="31:38">7</literal></expr>]</index></name> <operator pos:start="31:41" pos:end="31:42">&lt;&lt;</operator>  <literal type="number" pos:start="31:45" pos:end="31:45">8</literal><operator pos:start="31:46" pos:end="31:46">)</operator> <operator pos:start="31:48" pos:end="31:48">+</operator>

                      <name pos:start="33:23" pos:end="33:39"><name pos:start="33:23" pos:end="33:31">parse_ctx</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:36">buf</name><index pos:start="33:37" pos:end="33:39">[<expr pos:start="33:38" pos:end="33:38"><literal type="number" pos:start="33:38" pos:end="33:38">8</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="41:28"><if pos:start="37:5" pos:end="41:28">if <condition pos:start="37:8" pos:end="39:63">(<expr pos:start="37:9" pos:end="39:62"><name pos:start="37:9" pos:end="37:22">next_pu_offset</name> <operator pos:start="37:24" pos:end="37:25">==</operator> <literal type="number" pos:start="37:27" pos:end="37:27">0</literal> <operator pos:start="37:29" pos:end="37:30">&amp;&amp;</operator>

        <call pos:start="39:9" pos:end="39:62"><name pos:start="39:9" pos:end="39:43">SCHRO_PARSE_CODE_IS_END_OF_SEQUENCE</name><argument_list pos:start="39:44" pos:end="39:62">(<argument pos:start="39:45" pos:end="39:61"><expr pos:start="39:45" pos:end="39:61"><name pos:start="39:45" pos:end="39:61"><name pos:start="39:45" pos:end="39:53">parse_ctx</name><operator pos:start="39:54" pos:end="39:55">-&gt;</operator><name pos:start="39:56" pos:end="39:58">buf</name><index pos:start="39:59" pos:end="39:61">[<expr pos:start="39:60" pos:end="39:60"><literal type="number" pos:start="39:60" pos:end="39:60">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:28"><block_content pos:start="41:9" pos:end="41:28">

        <expr_stmt pos:start="41:9" pos:end="41:28"><expr pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:22">next_pu_offset</name> <operator pos:start="41:24" pos:end="41:24">=</operator> <literal type="number" pos:start="41:26" pos:end="41:27">13</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="47:20"><if pos:start="45:5" pos:end="47:20">if <condition pos:start="45:8" pos:end="45:68">(<expr pos:start="45:9" pos:end="45:67"><name pos:start="45:9" pos:end="45:22">next_pu_offset</name> <operator pos:start="45:24" pos:end="45:25">&lt;=</operator> <literal type="number" pos:start="45:27" pos:end="45:27">0</literal> <operator pos:start="45:29" pos:end="45:30">||</operator> <name pos:start="45:32" pos:end="45:50"><name pos:start="45:32" pos:end="45:40">parse_ctx</name><operator pos:start="45:41" pos:end="45:42">-&gt;</operator><name pos:start="45:43" pos:end="45:50">buf_size</name></name> <operator pos:start="45:52" pos:end="45:52">&lt;</operator> <name pos:start="45:54" pos:end="45:67">next_pu_offset</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:20"><block_content pos:start="47:9" pos:end="47:20">

        <return pos:start="47:9" pos:end="47:20">return <expr pos:start="47:16" pos:end="47:19"><name pos:start="47:16" pos:end="47:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:39"><expr pos:start="51:5" pos:end="51:38"><name pos:start="51:5" pos:end="51:10">in_buf</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <call pos:start="51:14" pos:end="51:38"><name pos:start="51:14" pos:end="51:22">av_malloc</name><argument_list pos:start="51:23" pos:end="51:38">(<argument pos:start="51:24" pos:end="51:37"><expr pos:start="51:24" pos:end="51:37"><name pos:start="51:24" pos:end="51:37">next_pu_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:16">(<expr pos:start="53:9" pos:end="53:15"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:15">in_buf</name></expr>)</condition> <block pos:start="53:18" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:20">

        <expr_stmt pos:start="55:9" pos:end="55:77"><expr pos:start="55:9" pos:end="55:76"><call pos:start="55:9" pos:end="55:76"><name pos:start="55:9" pos:end="55:14">av_log</name><argument_list pos:start="55:15" pos:end="55:76">(<argument pos:start="55:16" pos:end="55:24"><expr pos:start="55:16" pos:end="55:24"><name pos:start="55:16" pos:end="55:24">parse_ctx</name></expr></argument>, <argument pos:start="55:27" pos:end="55:38"><expr pos:start="55:27" pos:end="55:38"><name pos:start="55:27" pos:end="55:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:41" pos:end="55:75"><expr pos:start="55:41" pos:end="55:75"><literal type="string" pos:start="55:41" pos:end="55:75">"Unable to allocate input buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:20">return <expr pos:start="57:16" pos:end="57:19"><name pos:start="57:16" pos:end="57:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:51"><expr pos:start="63:5" pos:end="63:50"><call pos:start="63:5" pos:end="63:50"><name pos:start="63:5" pos:end="63:10">memcpy</name><argument_list pos:start="63:11" pos:end="63:50">(<argument pos:start="63:12" pos:end="63:17"><expr pos:start="63:12" pos:end="63:17"><name pos:start="63:12" pos:end="63:17">in_buf</name></expr></argument>, <argument pos:start="63:20" pos:end="63:33"><expr pos:start="63:20" pos:end="63:33"><name pos:start="63:20" pos:end="63:33"><name pos:start="63:20" pos:end="63:28">parse_ctx</name><operator pos:start="63:29" pos:end="63:30">-&gt;</operator><name pos:start="63:31" pos:end="63:33">buf</name></name></expr></argument>, <argument pos:start="63:36" pos:end="63:49"><expr pos:start="63:36" pos:end="63:49"><name pos:start="63:36" pos:end="63:49">next_pu_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:71"><expr pos:start="65:5" pos:end="65:70"><name pos:start="65:5" pos:end="65:11">enc_buf</name>       <operator pos:start="65:19" pos:end="65:19">=</operator> <call pos:start="65:21" pos:end="65:70"><name pos:start="65:21" pos:end="65:46">schro_buffer_new_with_data</name><argument_list pos:start="65:47" pos:end="65:70">(<argument pos:start="65:48" pos:end="65:53"><expr pos:start="65:48" pos:end="65:53"><name pos:start="65:48" pos:end="65:53">in_buf</name></expr></argument>, <argument pos:start="65:56" pos:end="65:69"><expr pos:start="65:56" pos:end="65:69"><name pos:start="65:56" pos:end="65:69">next_pu_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:55"><expr pos:start="67:5" pos:end="67:54"><name pos:start="67:5" pos:end="67:17"><name pos:start="67:5" pos:end="67:11">enc_buf</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:17">free</name></name> <operator pos:start="67:19" pos:end="67:19">=</operator> <name pos:start="67:21" pos:end="67:54">libschroedinger_decode_buffer_free</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:27"><expr pos:start="69:5" pos:end="69:26"><name pos:start="69:5" pos:end="69:17"><name pos:start="69:5" pos:end="69:11">enc_buf</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:17">priv</name></name> <operator pos:start="69:19" pos:end="69:19">=</operator> <name pos:start="69:21" pos:end="69:26">in_buf</name></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:42"><expr pos:start="73:5" pos:end="73:41"><name pos:start="73:5" pos:end="73:18"><name pos:start="73:5" pos:end="73:13">parse_ctx</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:18">buf</name></name>      <operator pos:start="73:25" pos:end="73:26">+=</operator> <name pos:start="73:28" pos:end="73:41">next_pu_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:42"><expr pos:start="75:5" pos:end="75:41"><name pos:start="75:5" pos:end="75:23"><name pos:start="75:5" pos:end="75:13">parse_ctx</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:23">buf_size</name></name> <operator pos:start="75:25" pos:end="75:26">-=</operator> <name pos:start="75:28" pos:end="75:41">next_pu_offset</name></expr>;</expr_stmt>



    <return pos:start="79:5" pos:end="79:19">return <expr pos:start="79:12" pos:end="79:18"><name pos:start="79:12" pos:end="79:18">enc_buf</name></expr>;</return>

</block_content>}</block></function>
</unit>
