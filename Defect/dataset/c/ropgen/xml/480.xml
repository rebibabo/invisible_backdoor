<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/480.c" pos:tabs="8"><function pos:start="1:1" pos:end="215:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">lavfi_read_packet</name><parameter_list pos:start="1:29" pos:end="1:67">(<parameter pos:start="1:30" pos:end="1:51"><decl pos:start="1:30" pos:end="1:51"><type pos:start="1:30" pos:end="1:51"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:66"><decl pos:start="1:54" pos:end="1:66"><type pos:start="1:54" pos:end="1:66"><name pos:start="1:54" pos:end="1:61">AVPacket</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="215:1">{<block_content pos:start="5:5" pos:end="213:16">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">LavfiContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:23">lavfi</name> <init pos:start="5:25" pos:end="5:42">= <expr pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:31">avctx</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">double</name></type> <name pos:start="7:12" pos:end="7:18">min_pts</name> <init pos:start="7:20" pos:end="7:28">= <expr pos:start="7:22" pos:end="7:28"><name pos:start="7:22" pos:end="7:28">DBL_MAX</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:18">stream_idx</name></decl>, <decl pos:start="9:21" pos:end="9:40"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:36">min_pts_sink_idx</name> <init pos:start="9:38" pos:end="9:40">= <expr pos:start="9:40" pos:end="9:40"><literal type="number" pos:start="9:40" pos:end="9:40">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">AVFrame</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:18">frame</name> <init pos:start="11:20" pos:end="11:41">= <expr pos:start="11:22" pos:end="11:41"><name pos:start="11:22" pos:end="11:41"><name pos:start="11:22" pos:end="11:26">lavfi</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:41">decoded_frame</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:13">AVPicture</name></type> <name pos:start="13:15" pos:end="13:18">pict</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16">AVDictionary</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:32">frame_metadata</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:15"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>, <decl pos:start="17:14" pos:end="17:14"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:14" pos:end="17:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:12">size</name> <init pos:start="19:14" pos:end="19:16">= <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="35:5"><if pos:start="23:5" pos:end="35:5">if <condition pos:start="23:8" pos:end="23:33">(<expr pos:start="23:9" pos:end="23:32"><name pos:start="23:9" pos:end="23:32"><name pos:start="23:9" pos:end="23:13">lavfi</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:27">subcc_packet</name><operator pos:start="23:28" pos:end="23:28">.</operator><name pos:start="23:29" pos:end="23:32">size</name></name></expr>)</condition> <block pos:start="23:35" pos:end="35:5">{<block_content pos:start="25:9" pos:end="33:25">

        <expr_stmt pos:start="25:9" pos:end="25:35"><expr pos:start="25:9" pos:end="25:34"><operator pos:start="25:9" pos:end="25:9">*</operator><name pos:start="25:10" pos:end="25:12">pkt</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <name pos:start="25:16" pos:end="25:34"><name pos:start="25:16" pos:end="25:20">lavfi</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:34">subcc_packet</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:45"><expr pos:start="27:9" pos:end="27:44"><call pos:start="27:9" pos:end="27:44"><name pos:start="27:9" pos:end="27:22">av_init_packet</name><argument_list pos:start="27:23" pos:end="27:44">(<argument pos:start="27:24" pos:end="27:43"><expr pos:start="27:24" pos:end="27:43"><operator pos:start="27:24" pos:end="27:24">&amp;</operator><name pos:start="27:25" pos:end="27:43"><name pos:start="27:25" pos:end="27:29">lavfi</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:43">subcc_packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:37"><expr pos:start="29:9" pos:end="29:36"><name pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:13">lavfi</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:27">subcc_packet</name><operator pos:start="29:28" pos:end="29:28">.</operator><name pos:start="29:29" pos:end="29:32">size</name></name> <operator pos:start="29:34" pos:end="29:34">=</operator> <literal type="number" pos:start="29:36" pos:end="29:36">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:40"><expr pos:start="31:9" pos:end="31:39"><name pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:13">lavfi</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:27">subcc_packet</name><operator pos:start="31:28" pos:end="31:28">.</operator><name pos:start="31:29" pos:end="31:32">data</name></name> <operator pos:start="31:34" pos:end="31:34">=</operator> <name pos:start="31:36" pos:end="31:39">NULL</name></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:25">return <expr pos:start="33:16" pos:end="33:24"><name pos:start="33:16" pos:end="33:24"><name pos:start="33:16" pos:end="33:18">pkt</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:24">size</name></name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="39:5" pos:end="41:21">/* iterate through all the graph sinks. Select the sink with the

     * minimum PTS */</comment>

    <for pos:start="43:5" pos:end="91:5">for <control pos:start="43:9" pos:end="43:41">(<init pos:start="43:10" pos:end="43:15"><expr pos:start="43:10" pos:end="43:14"><name pos:start="43:10" pos:end="43:10">i</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <literal type="number" pos:start="43:14" pos:end="43:14">0</literal></expr>;</init> <condition pos:start="43:17" pos:end="43:36"><expr pos:start="43:17" pos:end="43:35"><name pos:start="43:17" pos:end="43:17">i</name> <operator pos:start="43:19" pos:end="43:19">&lt;</operator> <name pos:start="43:21" pos:end="43:35"><name pos:start="43:21" pos:end="43:25">lavfi</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:35">nb_sinks</name></name></expr>;</condition> <incr pos:start="43:38" pos:end="43:40"><expr pos:start="43:38" pos:end="43:40"><name pos:start="43:38" pos:end="43:38">i</name><operator pos:start="43:39" pos:end="43:40">++</operator></expr></incr>)</control> <block pos:start="43:43" pos:end="91:5">{<block_content pos:start="45:9" pos:end="89:9">

        <decl_stmt pos:start="45:9" pos:end="45:62"><decl pos:start="45:9" pos:end="45:61"><type pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:18">AVRational</name></type> <name pos:start="45:20" pos:end="45:21">tb</name> <init pos:start="45:23" pos:end="45:61">= <expr pos:start="45:25" pos:end="45:61"><name pos:start="45:25" pos:end="45:39"><name pos:start="45:25" pos:end="45:29">lavfi</name><operator pos:start="45:30" pos:end="45:31">-&gt;</operator><name pos:start="45:32" pos:end="45:36">sinks</name><index pos:start="45:37" pos:end="45:39">[<expr pos:start="45:38" pos:end="45:38"><name pos:start="45:38" pos:end="45:38">i</name></expr>]</index></name><operator pos:start="45:40" pos:end="45:41">-&gt;</operator><name pos:start="45:42" pos:end="45:50"><name pos:start="45:42" pos:end="45:47">inputs</name><index pos:start="45:48" pos:end="45:50">[<expr pos:start="45:49" pos:end="45:49"><literal type="number" pos:start="45:49" pos:end="45:49">0</literal></expr>]</index></name><operator pos:start="45:51" pos:end="45:52">-&gt;</operator><name pos:start="45:53" pos:end="45:61">time_base</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:17"><decl pos:start="47:9" pos:end="47:16"><type pos:start="47:9" pos:end="47:14"><name pos:start="47:9" pos:end="47:14">double</name></type> <name pos:start="47:16" pos:end="47:16">d</name></decl>;</decl_stmt>

        <decl_stmt pos:start="49:9" pos:end="49:16"><decl pos:start="49:9" pos:end="49:15"><type pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">int</name></type> <name pos:start="49:13" pos:end="49:15">ret</name></decl>;</decl_stmt>



        <if_stmt pos:start="53:9" pos:end="55:21"><if pos:start="53:9" pos:end="55:21">if <condition pos:start="53:12" pos:end="53:31">(<expr pos:start="53:13" pos:end="53:30"><name pos:start="53:13" pos:end="53:30"><name pos:start="53:13" pos:end="53:17">lavfi</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:27">sink_eof</name><index pos:start="53:28" pos:end="53:30">[<expr pos:start="53:29" pos:end="53:29"><name pos:start="53:29" pos:end="53:29">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:21"><block_content pos:start="55:13" pos:end="55:21">

            <continue pos:start="55:13" pos:end="55:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="59:9" pos:end="61:69"><expr pos:start="59:9" pos:end="61:68"><name pos:start="59:9" pos:end="59:11">ret</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <call pos:start="59:15" pos:end="61:68"><name pos:start="59:15" pos:end="59:43">av_buffersink_get_frame_flags</name><argument_list pos:start="59:44" pos:end="61:68">(<argument pos:start="59:45" pos:end="59:59"><expr pos:start="59:45" pos:end="59:59"><name pos:start="59:45" pos:end="59:59"><name pos:start="59:45" pos:end="59:49">lavfi</name><operator pos:start="59:50" pos:end="59:51">-&gt;</operator><name pos:start="59:52" pos:end="59:56">sinks</name><index pos:start="59:57" pos:end="59:59">[<expr pos:start="59:58" pos:end="59:58"><name pos:start="59:58" pos:end="59:58">i</name></expr>]</index></name></expr></argument>, <argument pos:start="59:62" pos:end="59:66"><expr pos:start="59:62" pos:end="59:66"><name pos:start="59:62" pos:end="59:66">frame</name></expr></argument>,

                                            <argument pos:start="61:45" pos:end="61:67"><expr pos:start="61:45" pos:end="61:67"><name pos:start="61:45" pos:end="61:67">AV_BUFFERSINK_FLAG_PEEK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="73:23"><if pos:start="63:9" pos:end="71:9">if <condition pos:start="63:12" pos:end="63:31">(<expr pos:start="63:13" pos:end="63:30"><name pos:start="63:13" pos:end="63:15">ret</name> <operator pos:start="63:17" pos:end="63:18">==</operator> <name pos:start="63:20" pos:end="63:30">AVERROR_EOF</name></expr>)</condition> <block pos:start="63:33" pos:end="71:9">{<block_content pos:start="65:13" pos:end="69:21">

            <expr_stmt pos:start="65:13" pos:end="65:51"><expr pos:start="65:13" pos:end="65:50"><call pos:start="65:13" pos:end="65:50"><name pos:start="65:13" pos:end="65:19">av_dlog</name><argument_list pos:start="65:20" pos:end="65:50">(<argument pos:start="65:21" pos:end="65:25"><expr pos:start="65:21" pos:end="65:25"><name pos:start="65:21" pos:end="65:25">avctx</name></expr></argument>, <argument pos:start="65:28" pos:end="65:46"><expr pos:start="65:28" pos:end="65:46"><literal type="string" pos:start="65:28" pos:end="65:46">"EOF sink_idx:%d\n"</literal></expr></argument>, <argument pos:start="65:49" pos:end="65:49"><expr pos:start="65:49" pos:end="65:49"><name pos:start="65:49" pos:end="65:49">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:35"><expr pos:start="67:13" pos:end="67:34"><name pos:start="67:13" pos:end="67:30"><name pos:start="67:13" pos:end="67:17">lavfi</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:27">sink_eof</name><index pos:start="67:28" pos:end="67:30">[<expr pos:start="67:29" pos:end="67:29"><name pos:start="67:29" pos:end="67:29">i</name></expr>]</index></name> <operator pos:start="67:32" pos:end="67:32">=</operator> <literal type="number" pos:start="67:34" pos:end="67:34">1</literal></expr>;</expr_stmt>

            <continue pos:start="69:13" pos:end="69:21">continue;</continue>

        </block_content>}</block></if> <if type="elseif" pos:start="71:11" pos:end="73:23">else if <condition pos:start="71:19" pos:end="71:27">(<expr pos:start="71:20" pos:end="71:26"><name pos:start="71:20" pos:end="71:22">ret</name> <operator pos:start="71:24" pos:end="71:24">&lt;</operator> <literal type="number" pos:start="71:26" pos:end="71:26">0</literal></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:23"><block_content pos:start="73:13" pos:end="73:23">

            <return pos:start="73:13" pos:end="73:23">return <expr pos:start="73:20" pos:end="73:22"><name pos:start="73:20" pos:end="73:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:101"><expr pos:start="75:9" pos:end="75:100"><name pos:start="75:9" pos:end="75:9">d</name> <operator pos:start="75:11" pos:end="75:11">=</operator> <call pos:start="75:13" pos:end="75:100"><name pos:start="75:13" pos:end="75:28">av_rescale_q_rnd</name><argument_list pos:start="75:29" pos:end="75:100">(<argument pos:start="75:30" pos:end="75:39"><expr pos:start="75:30" pos:end="75:39"><name pos:start="75:30" pos:end="75:39"><name pos:start="75:30" pos:end="75:34">frame</name><operator pos:start="75:35" pos:end="75:36">-&gt;</operator><name pos:start="75:37" pos:end="75:39">pts</name></name></expr></argument>, <argument pos:start="75:42" pos:end="75:43"><expr pos:start="75:42" pos:end="75:43"><name pos:start="75:42" pos:end="75:43">tb</name></expr></argument>, <argument pos:start="75:46" pos:end="75:59"><expr pos:start="75:46" pos:end="75:59"><name pos:start="75:46" pos:end="75:59">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="75:62" pos:end="75:99"><expr pos:start="75:62" pos:end="75:99"><name pos:start="75:62" pos:end="75:78">AV_ROUND_NEAR_INF</name><operator pos:start="75:79" pos:end="75:79">|</operator><name pos:start="75:80" pos:end="75:99">AV_ROUND_PASS_MINMAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:54"><expr pos:start="77:9" pos:end="77:53"><call pos:start="77:9" pos:end="77:53"><name pos:start="77:9" pos:end="77:15">av_dlog</name><argument_list pos:start="77:16" pos:end="77:53">(<argument pos:start="77:17" pos:end="77:21"><expr pos:start="77:17" pos:end="77:21"><name pos:start="77:17" pos:end="77:21">avctx</name></expr></argument>, <argument pos:start="77:24" pos:end="77:46"><expr pos:start="77:24" pos:end="77:46"><literal type="string" pos:start="77:24" pos:end="77:46">"sink_idx:%d time:%f\n"</literal></expr></argument>, <argument pos:start="77:49" pos:end="77:49"><expr pos:start="77:49" pos:end="77:49"><name pos:start="77:49" pos:end="77:49">i</name></expr></argument>, <argument pos:start="77:52" pos:end="77:52"><expr pos:start="77:52" pos:end="77:52"><name pos:start="77:52" pos:end="77:52">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:30"><expr pos:start="79:9" pos:end="79:29"><call pos:start="79:9" pos:end="79:29"><name pos:start="79:9" pos:end="79:22">av_frame_unref</name><argument_list pos:start="79:23" pos:end="79:29">(<argument pos:start="79:24" pos:end="79:28"><expr pos:start="79:24" pos:end="79:28"><name pos:start="79:24" pos:end="79:28">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="83:9" pos:end="89:9"><if pos:start="83:9" pos:end="89:9">if <condition pos:start="83:12" pos:end="83:24">(<expr pos:start="83:13" pos:end="83:23"><name pos:start="83:13" pos:end="83:13">d</name> <operator pos:start="83:15" pos:end="83:15">&lt;</operator> <name pos:start="83:17" pos:end="83:23">min_pts</name></expr>)</condition> <block pos:start="83:26" pos:end="89:9">{<block_content pos:start="85:13" pos:end="87:33">

            <expr_stmt pos:start="85:13" pos:end="85:24"><expr pos:start="85:13" pos:end="85:23"><name pos:start="85:13" pos:end="85:19">min_pts</name> <operator pos:start="85:21" pos:end="85:21">=</operator> <name pos:start="85:23" pos:end="85:23">d</name></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:33"><expr pos:start="87:13" pos:end="87:32"><name pos:start="87:13" pos:end="87:28">min_pts_sink_idx</name> <operator pos:start="87:30" pos:end="87:30">=</operator> <name pos:start="87:32" pos:end="87:32">i</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="93:5" pos:end="95:27"><if pos:start="93:5" pos:end="95:27">if <condition pos:start="93:8" pos:end="93:27">(<expr pos:start="93:9" pos:end="93:26"><name pos:start="93:9" pos:end="93:15">min_pts</name> <operator pos:start="93:17" pos:end="93:18">==</operator> <name pos:start="93:20" pos:end="93:26">DBL_MAX</name></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:27"><block_content pos:start="95:9" pos:end="95:27">

        <return pos:start="95:9" pos:end="95:27">return <expr pos:start="95:16" pos:end="95:26"><name pos:start="95:16" pos:end="95:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:62"><expr pos:start="99:5" pos:end="99:61"><call pos:start="99:5" pos:end="99:61"><name pos:start="99:5" pos:end="99:11">av_dlog</name><argument_list pos:start="99:12" pos:end="99:61">(<argument pos:start="99:13" pos:end="99:17"><expr pos:start="99:13" pos:end="99:17"><name pos:start="99:13" pos:end="99:17">avctx</name></expr></argument>, <argument pos:start="99:20" pos:end="99:42"><expr pos:start="99:20" pos:end="99:42"><literal type="string" pos:start="99:20" pos:end="99:42">"min_pts_sink_idx:%i\n"</literal></expr></argument>, <argument pos:start="99:45" pos:end="99:60"><expr pos:start="99:45" pos:end="99:60"><name pos:start="99:45" pos:end="99:60">min_pts_sink_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:76"><expr pos:start="103:5" pos:end="103:75"><call pos:start="103:5" pos:end="103:75"><name pos:start="103:5" pos:end="103:33">av_buffersink_get_frame_flags</name><argument_list pos:start="103:34" pos:end="103:75">(<argument pos:start="103:35" pos:end="103:64"><expr pos:start="103:35" pos:end="103:64"><name pos:start="103:35" pos:end="103:64"><name pos:start="103:35" pos:end="103:39">lavfi</name><operator pos:start="103:40" pos:end="103:41">-&gt;</operator><name pos:start="103:42" pos:end="103:46">sinks</name><index pos:start="103:47" pos:end="103:64">[<expr pos:start="103:48" pos:end="103:63"><name pos:start="103:48" pos:end="103:63">min_pts_sink_idx</name></expr>]</index></name></expr></argument>, <argument pos:start="103:67" pos:end="103:71"><expr pos:start="103:67" pos:end="103:71"><name pos:start="103:67" pos:end="103:71">frame</name></expr></argument>, <argument pos:start="103:74" pos:end="103:74"><expr pos:start="103:74" pos:end="103:74"><literal type="number" pos:start="103:74" pos:end="103:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:58"><expr pos:start="105:5" pos:end="105:57"><name pos:start="105:5" pos:end="105:14">stream_idx</name> <operator pos:start="105:16" pos:end="105:16">=</operator> <name pos:start="105:18" pos:end="105:57"><name pos:start="105:18" pos:end="105:22">lavfi</name><operator pos:start="105:23" pos:end="105:24">-&gt;</operator><name pos:start="105:25" pos:end="105:39">sink_stream_map</name><index pos:start="105:40" pos:end="105:57">[<expr pos:start="105:41" pos:end="105:56"><name pos:start="105:41" pos:end="105:56">min_pts_sink_idx</name></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="109:5" pos:end="141:5"><if pos:start="109:5" pos:end="129:5">if <condition pos:start="109:8" pos:end="109:61">(<expr pos:start="109:9" pos:end="109:20"><name pos:start="109:9" pos:end="109:20"><name pos:start="109:9" pos:end="109:13">frame</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:20">width</name></name></expr> <comment type="block" pos:start="109:22" pos:end="109:60">/* FIXME best way of testing a video */</comment>)</condition> <block pos:start="109:63" pos:end="129:5">{<block_content pos:start="111:9" pos:end="127:42">

        <expr_stmt pos:start="111:9" pos:end="111:78"><expr pos:start="111:9" pos:end="111:77"><name pos:start="111:9" pos:end="111:12">size</name> <operator pos:start="111:14" pos:end="111:14">=</operator> <call pos:start="111:16" pos:end="111:77"><name pos:start="111:16" pos:end="111:33">avpicture_get_size</name><argument_list pos:start="111:34" pos:end="111:77">(<argument pos:start="111:35" pos:end="111:47"><expr pos:start="111:35" pos:end="111:47"><name pos:start="111:35" pos:end="111:47"><name pos:start="111:35" pos:end="111:39">frame</name><operator pos:start="111:40" pos:end="111:41">-&gt;</operator><name pos:start="111:42" pos:end="111:47">format</name></name></expr></argument>, <argument pos:start="111:50" pos:end="111:61"><expr pos:start="111:50" pos:end="111:61"><name pos:start="111:50" pos:end="111:61"><name pos:start="111:50" pos:end="111:54">frame</name><operator pos:start="111:55" pos:end="111:56">-&gt;</operator><name pos:start="111:57" pos:end="111:61">width</name></name></expr></argument>, <argument pos:start="111:64" pos:end="111:76"><expr pos:start="111:64" pos:end="111:76"><name pos:start="111:64" pos:end="111:76"><name pos:start="111:64" pos:end="111:68">frame</name><operator pos:start="111:69" pos:end="111:70">-&gt;</operator><name pos:start="111:71" pos:end="111:76">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="113:9" pos:end="115:23"><if pos:start="113:9" pos:end="115:23">if <condition pos:start="113:12" pos:end="113:49">(<expr pos:start="113:13" pos:end="113:48"><operator pos:start="113:13" pos:end="113:13">(</operator><name pos:start="113:14" pos:end="113:16">ret</name> <operator pos:start="113:18" pos:end="113:18">=</operator> <call pos:start="113:20" pos:end="113:43"><name pos:start="113:20" pos:end="113:32">av_new_packet</name><argument_list pos:start="113:33" pos:end="113:43">(<argument pos:start="113:34" pos:end="113:36"><expr pos:start="113:34" pos:end="113:36"><name pos:start="113:34" pos:end="113:36">pkt</name></expr></argument>, <argument pos:start="113:39" pos:end="113:42"><expr pos:start="113:39" pos:end="113:42"><name pos:start="113:39" pos:end="113:42">size</name></expr></argument>)</argument_list></call><operator pos:start="113:44" pos:end="113:44">)</operator> <operator pos:start="113:46" pos:end="113:46">&lt;</operator> <literal type="number" pos:start="113:48" pos:end="113:48">0</literal></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:23"><block_content pos:start="115:13" pos:end="115:23">

            <return pos:start="115:13" pos:end="115:23">return <expr pos:start="115:20" pos:end="115:22"><name pos:start="115:20" pos:end="115:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="119:9" pos:end="119:73"><expr pos:start="119:9" pos:end="119:72"><call pos:start="119:9" pos:end="119:72"><name pos:start="119:9" pos:end="119:14">memcpy</name><argument_list pos:start="119:15" pos:end="119:72">(<argument pos:start="119:16" pos:end="119:24"><expr pos:start="119:16" pos:end="119:24"><name pos:start="119:16" pos:end="119:24"><name pos:start="119:16" pos:end="119:19">pict</name><operator pos:start="119:20" pos:end="119:20">.</operator><name pos:start="119:21" pos:end="119:24">data</name></name></expr></argument>,     <argument pos:start="119:31" pos:end="119:41"><expr pos:start="119:31" pos:end="119:41"><name pos:start="119:31" pos:end="119:41"><name pos:start="119:31" pos:end="119:35">frame</name><operator pos:start="119:36" pos:end="119:37">-&gt;</operator><name pos:start="119:38" pos:end="119:41">data</name></name></expr></argument>,     <argument pos:start="119:48" pos:end="119:71"><expr pos:start="119:48" pos:end="119:71"><literal type="number" pos:start="119:48" pos:end="119:48">4</literal><operator pos:start="119:49" pos:end="119:49">*</operator><sizeof pos:start="119:50" pos:end="119:71">sizeof<argument_list pos:start="119:56" pos:end="119:71">(<argument pos:start="119:57" pos:end="119:70"><expr pos:start="119:57" pos:end="119:70"><name pos:start="119:57" pos:end="119:70"><name pos:start="119:57" pos:end="119:61">frame</name><operator pos:start="119:62" pos:end="119:63">-&gt;</operator><name pos:start="119:64" pos:end="119:67">data</name><index pos:start="119:68" pos:end="119:70">[<expr pos:start="119:69" pos:end="119:69"><literal type="number" pos:start="119:69" pos:end="119:69">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:77"><expr pos:start="121:9" pos:end="121:76"><call pos:start="121:9" pos:end="121:76"><name pos:start="121:9" pos:end="121:14">memcpy</name><argument_list pos:start="121:15" pos:end="121:76">(<argument pos:start="121:16" pos:end="121:28"><expr pos:start="121:16" pos:end="121:28"><name pos:start="121:16" pos:end="121:28"><name pos:start="121:16" pos:end="121:19">pict</name><operator pos:start="121:20" pos:end="121:20">.</operator><name pos:start="121:21" pos:end="121:28">linesize</name></name></expr></argument>, <argument pos:start="121:31" pos:end="121:45"><expr pos:start="121:31" pos:end="121:45"><name pos:start="121:31" pos:end="121:45"><name pos:start="121:31" pos:end="121:35">frame</name><operator pos:start="121:36" pos:end="121:37">-&gt;</operator><name pos:start="121:38" pos:end="121:45">linesize</name></name></expr></argument>, <argument pos:start="121:48" pos:end="121:75"><expr pos:start="121:48" pos:end="121:75"><literal type="number" pos:start="121:48" pos:end="121:48">4</literal><operator pos:start="121:49" pos:end="121:49">*</operator><sizeof pos:start="121:50" pos:end="121:75">sizeof<argument_list pos:start="121:56" pos:end="121:75">(<argument pos:start="121:57" pos:end="121:74"><expr pos:start="121:57" pos:end="121:74"><name pos:start="121:57" pos:end="121:74"><name pos:start="121:57" pos:end="121:61">frame</name><operator pos:start="121:62" pos:end="121:63">-&gt;</operator><name pos:start="121:64" pos:end="121:71">linesize</name><index pos:start="121:72" pos:end="121:74">[<expr pos:start="121:73" pos:end="121:73"><literal type="number" pos:start="121:73" pos:end="121:73">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="125:9" pos:end="127:42"><expr pos:start="125:9" pos:end="127:41"><call pos:start="125:9" pos:end="127:41"><name pos:start="125:9" pos:end="125:24">avpicture_layout</name><argument_list pos:start="125:25" pos:end="127:41">(<argument pos:start="125:26" pos:end="125:30"><expr pos:start="125:26" pos:end="125:30"><operator pos:start="125:26" pos:end="125:26">&amp;</operator><name pos:start="125:27" pos:end="125:30">pict</name></expr></argument>, <argument pos:start="125:33" pos:end="125:45"><expr pos:start="125:33" pos:end="125:45"><name pos:start="125:33" pos:end="125:45"><name pos:start="125:33" pos:end="125:37">frame</name><operator pos:start="125:38" pos:end="125:39">-&gt;</operator><name pos:start="125:40" pos:end="125:45">format</name></name></expr></argument>, <argument pos:start="125:48" pos:end="125:59"><expr pos:start="125:48" pos:end="125:59"><name pos:start="125:48" pos:end="125:59"><name pos:start="125:48" pos:end="125:52">frame</name><operator pos:start="125:53" pos:end="125:54">-&gt;</operator><name pos:start="125:55" pos:end="125:59">width</name></name></expr></argument>, <argument pos:start="125:62" pos:end="125:74"><expr pos:start="125:62" pos:end="125:74"><name pos:start="125:62" pos:end="125:74"><name pos:start="125:62" pos:end="125:66">frame</name><operator pos:start="125:67" pos:end="125:68">-&gt;</operator><name pos:start="125:69" pos:end="125:74">height</name></name></expr></argument>,

                         <argument pos:start="127:26" pos:end="127:34"><expr pos:start="127:26" pos:end="127:34"><name pos:start="127:26" pos:end="127:34"><name pos:start="127:26" pos:end="127:28">pkt</name><operator pos:start="127:29" pos:end="127:30">-&gt;</operator><name pos:start="127:31" pos:end="127:34">data</name></name></expr></argument>, <argument pos:start="127:37" pos:end="127:40"><expr pos:start="127:37" pos:end="127:40"><name pos:start="127:37" pos:end="127:40">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="129:7" pos:end="141:5">else if <condition pos:start="129:15" pos:end="129:67">(<expr pos:start="129:16" pos:end="129:43"><call pos:start="129:16" pos:end="129:43"><name pos:start="129:16" pos:end="129:36">av_frame_get_channels</name><argument_list pos:start="129:37" pos:end="129:43">(<argument pos:start="129:38" pos:end="129:42"><expr pos:start="129:38" pos:end="129:42"><name pos:start="129:38" pos:end="129:42">frame</name></expr></argument>)</argument_list></call></expr> <comment type="block" pos:start="129:45" pos:end="129:66">/* FIXME test audio */</comment>)</condition> <block pos:start="129:69" pos:end="141:5">{<block_content pos:start="131:9" pos:end="139:48">

        <expr_stmt pos:start="131:9" pos:end="133:64"><expr pos:start="131:9" pos:end="133:63"><name pos:start="131:9" pos:end="131:12">size</name> <operator pos:start="131:14" pos:end="131:14">=</operator> <name pos:start="131:16" pos:end="131:32"><name pos:start="131:16" pos:end="131:20">frame</name><operator pos:start="131:21" pos:end="131:22">-&gt;</operator><name pos:start="131:23" pos:end="131:32">nb_samples</name></name> <operator pos:start="131:34" pos:end="131:34">*</operator> <call pos:start="131:36" pos:end="131:73"><name pos:start="131:36" pos:end="131:58">av_get_bytes_per_sample</name><argument_list pos:start="131:59" pos:end="131:73">(<argument pos:start="131:60" pos:end="131:72"><expr pos:start="131:60" pos:end="131:72"><name pos:start="131:60" pos:end="131:72"><name pos:start="131:60" pos:end="131:64">frame</name><operator pos:start="131:65" pos:end="131:66">-&gt;</operator><name pos:start="131:67" pos:end="131:72">format</name></name></expr></argument>)</argument_list></call> <operator pos:start="131:75" pos:end="131:75">*</operator>

                                   <call pos:start="133:36" pos:end="133:63"><name pos:start="133:36" pos:end="133:56">av_frame_get_channels</name><argument_list pos:start="133:57" pos:end="133:63">(<argument pos:start="133:58" pos:end="133:62"><expr pos:start="133:58" pos:end="133:62"><name pos:start="133:58" pos:end="133:62">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="135:9" pos:end="137:23"><if pos:start="135:9" pos:end="137:23">if <condition pos:start="135:12" pos:end="135:49">(<expr pos:start="135:13" pos:end="135:48"><operator pos:start="135:13" pos:end="135:13">(</operator><name pos:start="135:14" pos:end="135:16">ret</name> <operator pos:start="135:18" pos:end="135:18">=</operator> <call pos:start="135:20" pos:end="135:43"><name pos:start="135:20" pos:end="135:32">av_new_packet</name><argument_list pos:start="135:33" pos:end="135:43">(<argument pos:start="135:34" pos:end="135:36"><expr pos:start="135:34" pos:end="135:36"><name pos:start="135:34" pos:end="135:36">pkt</name></expr></argument>, <argument pos:start="135:39" pos:end="135:42"><expr pos:start="135:39" pos:end="135:42"><name pos:start="135:39" pos:end="135:42">size</name></expr></argument>)</argument_list></call><operator pos:start="135:44" pos:end="135:44">)</operator> <operator pos:start="135:46" pos:end="135:46">&lt;</operator> <literal type="number" pos:start="135:48" pos:end="135:48">0</literal></expr>)</condition><block type="pseudo" pos:start="137:13" pos:end="137:23"><block_content pos:start="137:13" pos:end="137:23">

            <return pos:start="137:13" pos:end="137:23">return <expr pos:start="137:20" pos:end="137:22"><name pos:start="137:20" pos:end="137:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:48"><expr pos:start="139:9" pos:end="139:47"><call pos:start="139:9" pos:end="139:47"><name pos:start="139:9" pos:end="139:14">memcpy</name><argument_list pos:start="139:15" pos:end="139:47">(<argument pos:start="139:16" pos:end="139:24"><expr pos:start="139:16" pos:end="139:24"><name pos:start="139:16" pos:end="139:24"><name pos:start="139:16" pos:end="139:18">pkt</name><operator pos:start="139:19" pos:end="139:20">-&gt;</operator><name pos:start="139:21" pos:end="139:24">data</name></name></expr></argument>, <argument pos:start="139:27" pos:end="139:40"><expr pos:start="139:27" pos:end="139:40"><name pos:start="139:27" pos:end="139:40"><name pos:start="139:27" pos:end="139:31">frame</name><operator pos:start="139:32" pos:end="139:33">-&gt;</operator><name pos:start="139:34" pos:end="139:37">data</name><index pos:start="139:38" pos:end="139:40">[<expr pos:start="139:39" pos:end="139:39"><literal type="number" pos:start="139:39" pos:end="139:39">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="139:43" pos:end="139:46"><expr pos:start="139:43" pos:end="139:46"><name pos:start="139:43" pos:end="139:46">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:50"><expr pos:start="145:5" pos:end="145:49"><name pos:start="145:5" pos:end="145:18">frame_metadata</name> <operator pos:start="145:20" pos:end="145:20">=</operator> <call pos:start="145:22" pos:end="145:49"><name pos:start="145:22" pos:end="145:42">av_frame_get_metadata</name><argument_list pos:start="145:43" pos:end="145:49">(<argument pos:start="145:44" pos:end="145:48"><expr pos:start="145:44" pos:end="145:48"><name pos:start="145:44" pos:end="145:48">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="147:5" pos:end="187:5"><if pos:start="147:5" pos:end="187:5">if <condition pos:start="147:8" pos:end="147:23">(<expr pos:start="147:9" pos:end="147:22"><name pos:start="147:9" pos:end="147:22">frame_metadata</name></expr>)</condition> <block pos:start="147:25" pos:end="187:5">{<block_content pos:start="149:9" pos:end="185:44">

        <decl_stmt pos:start="149:9" pos:end="149:26"><decl pos:start="149:9" pos:end="149:25"><type pos:start="149:9" pos:end="149:17"><name pos:start="149:9" pos:end="149:15">uint8_t</name> <modifier pos:start="149:17" pos:end="149:17">*</modifier></type><name pos:start="149:18" pos:end="149:25">metadata</name></decl>;</decl_stmt>

        <decl_stmt pos:start="151:9" pos:end="151:36"><decl pos:start="151:9" pos:end="151:35"><type pos:start="151:9" pos:end="151:27"><name pos:start="151:9" pos:end="151:25">AVDictionaryEntry</name> <modifier pos:start="151:27" pos:end="151:27">*</modifier></type><name pos:start="151:28" pos:end="151:28">e</name> <init pos:start="151:30" pos:end="151:35">= <expr pos:start="151:32" pos:end="151:35"><name pos:start="151:32" pos:end="151:35">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="153:9" pos:end="153:26"><decl pos:start="153:9" pos:end="153:25"><type pos:start="153:9" pos:end="153:16"><name pos:start="153:9" pos:end="153:16">AVBPrint</name></type> <name pos:start="153:18" pos:end="153:25">meta_buf</name></decl>;</decl_stmt>



        <expr_stmt pos:start="157:9" pos:end="157:63"><expr pos:start="157:9" pos:end="157:62"><call pos:start="157:9" pos:end="157:62"><name pos:start="157:9" pos:end="157:22">av_bprint_init</name><argument_list pos:start="157:23" pos:end="157:62">(<argument pos:start="157:24" pos:end="157:32"><expr pos:start="157:24" pos:end="157:32"><operator pos:start="157:24" pos:end="157:24">&amp;</operator><name pos:start="157:25" pos:end="157:32">meta_buf</name></expr></argument>, <argument pos:start="157:35" pos:end="157:35"><expr pos:start="157:35" pos:end="157:35"><literal type="number" pos:start="157:35" pos:end="157:35">0</literal></expr></argument>, <argument pos:start="157:38" pos:end="157:61"><expr pos:start="157:38" pos:end="157:61"><name pos:start="157:38" pos:end="157:61">AV_BPRINT_SIZE_UNLIMITED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while pos:start="159:9" pos:end="169:9">while <condition pos:start="159:15" pos:end="159:79">(<expr pos:start="159:16" pos:end="159:78"><operator pos:start="159:16" pos:end="159:16">(</operator><name pos:start="159:17" pos:end="159:17">e</name> <operator pos:start="159:19" pos:end="159:19">=</operator> <call pos:start="159:21" pos:end="159:77"><name pos:start="159:21" pos:end="159:31">av_dict_get</name><argument_list pos:start="159:32" pos:end="159:77">(<argument pos:start="159:33" pos:end="159:46"><expr pos:start="159:33" pos:end="159:46"><name pos:start="159:33" pos:end="159:46">frame_metadata</name></expr></argument>, <argument pos:start="159:49" pos:end="159:50"><expr pos:start="159:49" pos:end="159:50"><literal type="string" pos:start="159:49" pos:end="159:50">""</literal></expr></argument>, <argument pos:start="159:53" pos:end="159:53"><expr pos:start="159:53" pos:end="159:53"><name pos:start="159:53" pos:end="159:53">e</name></expr></argument>, <argument pos:start="159:56" pos:end="159:76"><expr pos:start="159:56" pos:end="159:76"><name pos:start="159:56" pos:end="159:76">AV_DICT_IGNORE_SUFFIX</name></expr></argument>)</argument_list></call><operator pos:start="159:78" pos:end="159:78">)</operator></expr>)</condition> <block pos:start="159:81" pos:end="169:9">{<block_content pos:start="161:13" pos:end="167:48">

            <expr_stmt pos:start="161:13" pos:end="161:48"><expr pos:start="161:13" pos:end="161:47"><call pos:start="161:13" pos:end="161:47"><name pos:start="161:13" pos:end="161:22">av_bprintf</name><argument_list pos:start="161:23" pos:end="161:47">(<argument pos:start="161:24" pos:end="161:32"><expr pos:start="161:24" pos:end="161:32"><operator pos:start="161:24" pos:end="161:24">&amp;</operator><name pos:start="161:25" pos:end="161:32">meta_buf</name></expr></argument>, <argument pos:start="161:35" pos:end="161:38"><expr pos:start="161:35" pos:end="161:38"><literal type="string" pos:start="161:35" pos:end="161:38">"%s"</literal></expr></argument>, <argument pos:start="161:41" pos:end="161:46"><expr pos:start="161:41" pos:end="161:46"><name pos:start="161:41" pos:end="161:46"><name pos:start="161:41" pos:end="161:41">e</name><operator pos:start="161:42" pos:end="161:43">-&gt;</operator><name pos:start="161:44" pos:end="161:46">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:48"><expr pos:start="163:13" pos:end="163:47"><call pos:start="163:13" pos:end="163:47"><name pos:start="163:13" pos:end="163:27">av_bprint_chars</name><argument_list pos:start="163:28" pos:end="163:47">(<argument pos:start="163:29" pos:end="163:37"><expr pos:start="163:29" pos:end="163:37"><operator pos:start="163:29" pos:end="163:29">&amp;</operator><name pos:start="163:30" pos:end="163:37">meta_buf</name></expr></argument>, <argument pos:start="163:40" pos:end="163:43"><expr pos:start="163:40" pos:end="163:43"><literal type="char" pos:start="163:40" pos:end="163:43">'\0'</literal></expr></argument>, <argument pos:start="163:46" pos:end="163:46"><expr pos:start="163:46" pos:end="163:46"><literal type="number" pos:start="163:46" pos:end="163:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:50"><expr pos:start="165:13" pos:end="165:49"><call pos:start="165:13" pos:end="165:49"><name pos:start="165:13" pos:end="165:22">av_bprintf</name><argument_list pos:start="165:23" pos:end="165:49">(<argument pos:start="165:24" pos:end="165:32"><expr pos:start="165:24" pos:end="165:32"><operator pos:start="165:24" pos:end="165:24">&amp;</operator><name pos:start="165:25" pos:end="165:32">meta_buf</name></expr></argument>, <argument pos:start="165:35" pos:end="165:38"><expr pos:start="165:35" pos:end="165:38"><literal type="string" pos:start="165:35" pos:end="165:38">"%s"</literal></expr></argument>, <argument pos:start="165:41" pos:end="165:48"><expr pos:start="165:41" pos:end="165:48"><name pos:start="165:41" pos:end="165:48"><name pos:start="165:41" pos:end="165:41">e</name><operator pos:start="165:42" pos:end="165:43">-&gt;</operator><name pos:start="165:44" pos:end="165:48">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:48"><expr pos:start="167:13" pos:end="167:47"><call pos:start="167:13" pos:end="167:47"><name pos:start="167:13" pos:end="167:27">av_bprint_chars</name><argument_list pos:start="167:28" pos:end="167:47">(<argument pos:start="167:29" pos:end="167:37"><expr pos:start="167:29" pos:end="167:37"><operator pos:start="167:29" pos:end="167:29">&amp;</operator><name pos:start="167:30" pos:end="167:37">meta_buf</name></expr></argument>, <argument pos:start="167:40" pos:end="167:43"><expr pos:start="167:40" pos:end="167:43"><literal type="char" pos:start="167:40" pos:end="167:43">'\0'</literal></expr></argument>, <argument pos:start="167:46" pos:end="167:46"><expr pos:start="167:46" pos:end="167:46"><literal type="number" pos:start="167:46" pos:end="167:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

        <if_stmt pos:start="171:9" pos:end="181:9"><if pos:start="171:9" pos:end="181:9">if <condition pos:start="171:12" pos:end="175:64">(<expr pos:start="171:13" pos:end="175:63"><operator pos:start="171:13" pos:end="171:13">!</operator><call pos:start="171:14" pos:end="171:45"><name pos:start="171:14" pos:end="171:34">av_bprint_is_complete</name><argument_list pos:start="171:35" pos:end="171:45">(<argument pos:start="171:36" pos:end="171:44"><expr pos:start="171:36" pos:end="171:44"><operator pos:start="171:36" pos:end="171:36">&amp;</operator><name pos:start="171:37" pos:end="171:44">meta_buf</name></expr></argument>)</argument_list></call> <operator pos:start="171:47" pos:end="171:48">||</operator>

            <operator pos:start="173:13" pos:end="173:13">!</operator><operator pos:start="173:14" pos:end="173:14">(</operator><name pos:start="173:15" pos:end="173:22">metadata</name> <operator pos:start="173:24" pos:end="173:24">=</operator> <call pos:start="173:26" pos:end="175:62"><name pos:start="173:26" pos:end="173:48">av_packet_new_side_data</name><argument_list pos:start="173:49" pos:end="175:62">(<argument pos:start="173:50" pos:end="173:52"><expr pos:start="173:50" pos:end="173:52"><name pos:start="173:50" pos:end="173:52">pkt</name></expr></argument>, <argument pos:start="173:55" pos:end="173:82"><expr pos:start="173:55" pos:end="173:82"><name pos:start="173:55" pos:end="173:82">AV_PKT_DATA_STRINGS_METADATA</name></expr></argument>,

                                                 <argument pos:start="175:50" pos:end="175:61"><expr pos:start="175:50" pos:end="175:61"><name pos:start="175:50" pos:end="175:61"><name pos:start="175:50" pos:end="175:57">meta_buf</name><operator pos:start="175:58" pos:end="175:58">.</operator><name pos:start="175:59" pos:end="175:61">len</name></name></expr></argument>)</argument_list></call><operator pos:start="175:63" pos:end="175:63">)</operator></expr>)</condition> <block pos:start="175:66" pos:end="181:9">{<block_content pos:start="177:13" pos:end="179:35">

            <expr_stmt pos:start="177:13" pos:end="177:48"><expr pos:start="177:13" pos:end="177:47"><call pos:start="177:13" pos:end="177:47"><name pos:start="177:13" pos:end="177:30">av_bprint_finalize</name><argument_list pos:start="177:31" pos:end="177:47">(<argument pos:start="177:32" pos:end="177:40"><expr pos:start="177:32" pos:end="177:40"><operator pos:start="177:32" pos:end="177:32">&amp;</operator><name pos:start="177:33" pos:end="177:40">meta_buf</name></expr></argument>, <argument pos:start="177:43" pos:end="177:46"><expr pos:start="177:43" pos:end="177:46"><name pos:start="177:43" pos:end="177:46">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="179:13" pos:end="179:35">return <expr pos:start="179:20" pos:end="179:34"><call pos:start="179:20" pos:end="179:34"><name pos:start="179:20" pos:end="179:26">AVERROR</name><argument_list pos:start="179:27" pos:end="179:34">(<argument pos:start="179:28" pos:end="179:33"><expr pos:start="179:28" pos:end="179:33"><name pos:start="179:28" pos:end="179:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:53"><expr pos:start="183:9" pos:end="183:52"><call pos:start="183:9" pos:end="183:52"><name pos:start="183:9" pos:end="183:14">memcpy</name><argument_list pos:start="183:15" pos:end="183:52">(<argument pos:start="183:16" pos:end="183:23"><expr pos:start="183:16" pos:end="183:23"><name pos:start="183:16" pos:end="183:23">metadata</name></expr></argument>, <argument pos:start="183:26" pos:end="183:37"><expr pos:start="183:26" pos:end="183:37"><name pos:start="183:26" pos:end="183:37"><name pos:start="183:26" pos:end="183:33">meta_buf</name><operator pos:start="183:34" pos:end="183:34">.</operator><name pos:start="183:35" pos:end="183:37">str</name></name></expr></argument>, <argument pos:start="183:40" pos:end="183:51"><expr pos:start="183:40" pos:end="183:51"><name pos:start="183:40" pos:end="183:51"><name pos:start="183:40" pos:end="183:47">meta_buf</name><operator pos:start="183:48" pos:end="183:48">.</operator><name pos:start="183:49" pos:end="183:51">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:44"><expr pos:start="185:9" pos:end="185:43"><call pos:start="185:9" pos:end="185:43"><name pos:start="185:9" pos:end="185:26">av_bprint_finalize</name><argument_list pos:start="185:27" pos:end="185:43">(<argument pos:start="185:28" pos:end="185:36"><expr pos:start="185:28" pos:end="185:36"><operator pos:start="185:28" pos:end="185:28">&amp;</operator><name pos:start="185:29" pos:end="185:36">meta_buf</name></expr></argument>, <argument pos:start="185:39" pos:end="185:42"><expr pos:start="185:39" pos:end="185:42"><name pos:start="185:39" pos:end="185:42">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="191:5" pos:end="199:5"><if pos:start="191:5" pos:end="199:5">if <condition pos:start="191:8" pos:end="191:72">(<expr pos:start="191:9" pos:end="191:71"><operator pos:start="191:9" pos:end="191:9">(</operator><name pos:start="191:10" pos:end="191:12">ret</name> <operator pos:start="191:14" pos:end="191:14">=</operator> <call pos:start="191:16" pos:end="191:66"><name pos:start="191:16" pos:end="191:34">create_subcc_packet</name><argument_list pos:start="191:35" pos:end="191:66">(<argument pos:start="191:36" pos:end="191:40"><expr pos:start="191:36" pos:end="191:40"><name pos:start="191:36" pos:end="191:40">avctx</name></expr></argument>, <argument pos:start="191:43" pos:end="191:47"><expr pos:start="191:43" pos:end="191:47"><name pos:start="191:43" pos:end="191:47">frame</name></expr></argument>, <argument pos:start="191:50" pos:end="191:65"><expr pos:start="191:50" pos:end="191:65"><name pos:start="191:50" pos:end="191:65">min_pts_sink_idx</name></expr></argument>)</argument_list></call><operator pos:start="191:67" pos:end="191:67">)</operator> <operator pos:start="191:69" pos:end="191:69">&lt;</operator> <literal type="number" pos:start="191:71" pos:end="191:71">0</literal></expr>)</condition> <block pos:start="191:74" pos:end="199:5">{<block_content pos:start="193:9" pos:end="197:19">

        <expr_stmt pos:start="193:9" pos:end="193:30"><expr pos:start="193:9" pos:end="193:29"><call pos:start="193:9" pos:end="193:29"><name pos:start="193:9" pos:end="193:22">av_frame_unref</name><argument_list pos:start="193:23" pos:end="193:29">(<argument pos:start="193:24" pos:end="193:28"><expr pos:start="193:24" pos:end="193:28"><name pos:start="193:24" pos:end="193:28">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:29"><expr pos:start="195:9" pos:end="195:28"><call pos:start="195:9" pos:end="195:28"><name pos:start="195:9" pos:end="195:23">av_packet_unref</name><argument_list pos:start="195:24" pos:end="195:28">(<argument pos:start="195:25" pos:end="195:27"><expr pos:start="195:25" pos:end="195:27"><name pos:start="195:25" pos:end="195:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="197:9" pos:end="197:19">return <expr pos:start="197:16" pos:end="197:18"><name pos:start="197:16" pos:end="197:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="203:5" pos:end="203:35"><expr pos:start="203:5" pos:end="203:34"><name pos:start="203:5" pos:end="203:21"><name pos:start="203:5" pos:end="203:7">pkt</name><operator pos:start="203:8" pos:end="203:9">-&gt;</operator><name pos:start="203:10" pos:end="203:21">stream_index</name></name> <operator pos:start="203:23" pos:end="203:23">=</operator> <name pos:start="203:25" pos:end="203:34">stream_idx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:26"><expr pos:start="205:5" pos:end="205:25"><name pos:start="205:5" pos:end="205:12"><name pos:start="205:5" pos:end="205:7">pkt</name><operator pos:start="205:8" pos:end="205:9">-&gt;</operator><name pos:start="205:10" pos:end="205:12">pts</name></name> <operator pos:start="205:14" pos:end="205:14">=</operator> <name pos:start="205:16" pos:end="205:25"><name pos:start="205:16" pos:end="205:20">frame</name><operator pos:start="205:21" pos:end="205:22">-&gt;</operator><name pos:start="205:23" pos:end="205:25">pts</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:43"><expr pos:start="207:5" pos:end="207:42"><name pos:start="207:5" pos:end="207:12"><name pos:start="207:5" pos:end="207:7">pkt</name><operator pos:start="207:8" pos:end="207:9">-&gt;</operator><name pos:start="207:10" pos:end="207:12">pos</name></name> <operator pos:start="207:14" pos:end="207:14">=</operator> <call pos:start="207:16" pos:end="207:42"><name pos:start="207:16" pos:end="207:35">av_frame_get_pkt_pos</name><argument_list pos:start="207:36" pos:end="207:42">(<argument pos:start="207:37" pos:end="207:41"><expr pos:start="207:37" pos:end="207:41"><name pos:start="207:37" pos:end="207:41">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:21"><expr pos:start="209:5" pos:end="209:20"><name pos:start="209:5" pos:end="209:13"><name pos:start="209:5" pos:end="209:7">pkt</name><operator pos:start="209:8" pos:end="209:9">-&gt;</operator><name pos:start="209:10" pos:end="209:13">size</name></name> <operator pos:start="209:15" pos:end="209:15">=</operator> <name pos:start="209:17" pos:end="209:20">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:26"><expr pos:start="211:5" pos:end="211:25"><call pos:start="211:5" pos:end="211:25"><name pos:start="211:5" pos:end="211:18">av_frame_unref</name><argument_list pos:start="211:19" pos:end="211:25">(<argument pos:start="211:20" pos:end="211:24"><expr pos:start="211:20" pos:end="211:24"><name pos:start="211:20" pos:end="211:24">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="213:5" pos:end="213:16">return <expr pos:start="213:12" pos:end="213:15"><name pos:start="213:12" pos:end="213:15">size</name></expr>;</return>

</block_content>}</block></function>
</unit>
