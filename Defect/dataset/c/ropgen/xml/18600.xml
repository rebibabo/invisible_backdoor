<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18600.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">g364fb_ctrl_write</name><parameter_list pos:start="1:30" pos:end="7:48">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:53"><decl pos:start="3:31" pos:end="3:53"><type pos:start="3:31" pos:end="3:53"><name pos:start="3:31" pos:end="3:48">target_phys_addr_t</name></type> <name pos:start="3:50" pos:end="3:53">addr</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:42"><decl pos:start="5:31" pos:end="5:42"><type pos:start="5:31" pos:end="5:42"><name pos:start="5:31" pos:end="5:38">uint64_t</name></type> <name pos:start="5:40" pos:end="5:42">val</name></decl></parameter>,

                              <parameter pos:start="7:31" pos:end="7:47"><decl pos:start="7:31" pos:end="7:47"><type pos:start="7:31" pos:end="7:47"><name pos:start="7:31" pos:end="7:38">unsigned</name> <name pos:start="7:40" pos:end="7:42">int</name></type> <name pos:start="7:44" pos:end="7:47">size</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="153:1">{<block_content pos:start="11:5" pos:end="151:27">

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">G364State</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:16">s</name> <init pos:start="11:18" pos:end="11:25">= <expr pos:start="11:20" pos:end="11:25"><name pos:start="11:20" pos:end="11:25">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:34"><expr pos:start="15:5" pos:end="15:33"><call pos:start="15:5" pos:end="15:33"><name pos:start="15:5" pos:end="15:22">trace_g364fb_write</name><argument_list pos:start="15:23" pos:end="15:33">(<argument pos:start="15:24" pos:end="15:27"><expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">addr</name></expr></argument>, <argument pos:start="15:30" pos:end="15:32"><expr pos:start="15:30" pos:end="15:32"><name pos:start="15:30" pos:end="15:32">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="149:5"><if pos:start="19:5" pos:end="33:5">if <condition pos:start="19:8" pos:end="19:58">(<expr pos:start="19:9" pos:end="19:57"><name pos:start="19:9" pos:end="19:12">addr</name> <operator pos:start="19:14" pos:end="19:15">&gt;=</operator> <name pos:start="19:17" pos:end="19:27">REG_CLR_PAL</name> <operator pos:start="19:29" pos:end="19:30">&amp;&amp;</operator> <name pos:start="19:32" pos:end="19:35">addr</name> <operator pos:start="19:37" pos:end="19:37">&lt;</operator> <name pos:start="19:39" pos:end="19:49">REG_CLR_PAL</name> <operator pos:start="19:51" pos:end="19:51">+</operator> <literal type="number" pos:start="19:53" pos:end="19:57">0x800</literal></expr>)</condition> <block pos:start="19:60" pos:end="33:5">{<block_content pos:start="23:9" pos:end="31:37">

        <comment type="block" pos:start="21:9" pos:end="21:27">/* color palette */</comment>

        <decl_stmt pos:start="23:9" pos:end="23:44"><decl pos:start="23:9" pos:end="23:43"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:15">idx</name> <init pos:start="23:17" pos:end="23:43">= <expr pos:start="23:19" pos:end="23:43"><operator pos:start="23:19" pos:end="23:19">(</operator><name pos:start="23:20" pos:end="23:23">addr</name> <operator pos:start="23:25" pos:end="23:25">-</operator> <name pos:start="23:27" pos:end="23:37">REG_CLR_PAL</name><operator pos:start="23:38" pos:end="23:38">)</operator> <operator pos:start="23:40" pos:end="23:41">&gt;&gt;</operator> <literal type="number" pos:start="23:43" pos:end="23:43">3</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:54"><expr pos:start="25:9" pos:end="25:53"><name pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:24">color_palette</name><index pos:start="25:25" pos:end="25:29">[<expr pos:start="25:26" pos:end="25:28"><name pos:start="25:26" pos:end="25:28">idx</name></expr>]</index><index pos:start="25:30" pos:end="25:32">[<expr pos:start="25:31" pos:end="25:31"><literal type="number" pos:start="25:31" pos:end="25:31">0</literal></expr>]</index></name> <operator pos:start="25:34" pos:end="25:34">=</operator> <operator pos:start="25:36" pos:end="25:36">(</operator><name pos:start="25:37" pos:end="25:39">val</name> <operator pos:start="25:41" pos:end="25:42">&gt;&gt;</operator> <literal type="number" pos:start="25:44" pos:end="25:45">16</literal><operator pos:start="25:46" pos:end="25:46">)</operator> <operator pos:start="25:48" pos:end="25:48">&amp;</operator> <literal type="number" pos:start="25:50" pos:end="25:53">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:53"><expr pos:start="27:9" pos:end="27:52"><name pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:24">color_palette</name><index pos:start="27:25" pos:end="27:29">[<expr pos:start="27:26" pos:end="27:28"><name pos:start="27:26" pos:end="27:28">idx</name></expr>]</index><index pos:start="27:30" pos:end="27:32">[<expr pos:start="27:31" pos:end="27:31"><literal type="number" pos:start="27:31" pos:end="27:31">1</literal></expr>]</index></name> <operator pos:start="27:34" pos:end="27:34">=</operator> <operator pos:start="27:36" pos:end="27:36">(</operator><name pos:start="27:37" pos:end="27:39">val</name> <operator pos:start="27:41" pos:end="27:42">&gt;&gt;</operator> <literal type="number" pos:start="27:44" pos:end="27:44">8</literal><operator pos:start="27:45" pos:end="27:45">)</operator> <operator pos:start="27:47" pos:end="27:47">&amp;</operator> <literal type="number" pos:start="27:49" pos:end="27:52">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:46"><expr pos:start="29:9" pos:end="29:45"><name pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:24">color_palette</name><index pos:start="29:25" pos:end="29:29">[<expr pos:start="29:26" pos:end="29:28"><name pos:start="29:26" pos:end="29:28">idx</name></expr>]</index><index pos:start="29:30" pos:end="29:32">[<expr pos:start="29:31" pos:end="29:31"><literal type="number" pos:start="29:31" pos:end="29:31">2</literal></expr>]</index></name> <operator pos:start="29:34" pos:end="29:34">=</operator> <name pos:start="29:36" pos:end="29:38">val</name> <operator pos:start="29:40" pos:end="29:40">&amp;</operator> <literal type="number" pos:start="29:42" pos:end="29:45">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:37"><expr pos:start="31:9" pos:end="31:36"><call pos:start="31:9" pos:end="31:36"><name pos:start="31:9" pos:end="31:33">g364fb_invalidate_display</name><argument_list pos:start="31:34" pos:end="31:36">(<argument pos:start="31:35" pos:end="31:35"><expr pos:start="31:35" pos:end="31:35"><name pos:start="31:35" pos:end="31:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="33:7" pos:end="43:5">else if <condition pos:start="33:15" pos:end="33:68">(<expr pos:start="33:16" pos:end="33:67"><name pos:start="33:16" pos:end="33:19">addr</name> <operator pos:start="33:21" pos:end="33:22">&gt;=</operator> <name pos:start="33:24" pos:end="33:35">REG_CURS_PAT</name> <operator pos:start="33:37" pos:end="33:38">&amp;&amp;</operator> <name pos:start="33:40" pos:end="33:43">addr</name> <operator pos:start="33:45" pos:end="33:45">&lt;</operator> <name pos:start="33:47" pos:end="33:58">REG_CURS_PAT</name> <operator pos:start="33:60" pos:end="33:60">+</operator> <literal type="number" pos:start="33:62" pos:end="33:67">0x1000</literal></expr>)</condition> <block pos:start="33:70" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:37">

        <comment type="block" pos:start="35:9" pos:end="35:28">/* cursor pattern */</comment>

        <decl_stmt pos:start="37:9" pos:end="37:45"><decl pos:start="37:9" pos:end="37:44"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:15">idx</name> <init pos:start="37:17" pos:end="37:44">= <expr pos:start="37:19" pos:end="37:44"><operator pos:start="37:19" pos:end="37:19">(</operator><name pos:start="37:20" pos:end="37:23">addr</name> <operator pos:start="37:25" pos:end="37:25">-</operator> <name pos:start="37:27" pos:end="37:38">REG_CURS_PAT</name><operator pos:start="37:39" pos:end="37:39">)</operator> <operator pos:start="37:41" pos:end="37:42">&gt;&gt;</operator> <literal type="number" pos:start="37:44" pos:end="37:44">3</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:29"><expr pos:start="39:9" pos:end="39:28"><name pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:17">cursor</name><index pos:start="39:18" pos:end="39:22">[<expr pos:start="39:19" pos:end="39:21"><name pos:start="39:19" pos:end="39:21">idx</name></expr>]</index></name> <operator pos:start="39:24" pos:end="39:24">=</operator> <name pos:start="39:26" pos:end="39:28">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:37"><expr pos:start="41:9" pos:end="41:36"><call pos:start="41:9" pos:end="41:36"><name pos:start="41:9" pos:end="41:33">g364fb_invalidate_display</name><argument_list pos:start="41:34" pos:end="41:36">(<argument pos:start="41:35" pos:end="41:35"><expr pos:start="41:35" pos:end="41:35"><name pos:start="41:35" pos:end="41:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="43:7" pos:end="57:5">else if <condition pos:start="43:15" pos:end="43:66">(<expr pos:start="43:16" pos:end="43:65"><name pos:start="43:16" pos:end="43:19">addr</name> <operator pos:start="43:21" pos:end="43:22">&gt;=</operator> <name pos:start="43:24" pos:end="43:35">REG_CURS_PAL</name> <operator pos:start="43:37" pos:end="43:38">&amp;&amp;</operator> <name pos:start="43:40" pos:end="43:43">addr</name> <operator pos:start="43:45" pos:end="43:45">&lt;</operator> <name pos:start="43:47" pos:end="43:58">REG_CURS_PAL</name> <operator pos:start="43:60" pos:end="43:60">+</operator> <literal type="number" pos:start="43:62" pos:end="43:65">0x18</literal></expr>)</condition> <block pos:start="43:68" pos:end="57:5">{<block_content pos:start="47:9" pos:end="55:37">

        <comment type="block" pos:start="45:9" pos:end="45:28">/* cursor palette */</comment>

        <decl_stmt pos:start="47:9" pos:end="47:45"><decl pos:start="47:9" pos:end="47:44"><type pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">int</name></type> <name pos:start="47:13" pos:end="47:15">idx</name> <init pos:start="47:17" pos:end="47:44">= <expr pos:start="47:19" pos:end="47:44"><operator pos:start="47:19" pos:end="47:19">(</operator><name pos:start="47:20" pos:end="47:23">addr</name> <operator pos:start="47:25" pos:end="47:25">-</operator> <name pos:start="47:27" pos:end="47:38">REG_CURS_PAL</name><operator pos:start="47:39" pos:end="47:39">)</operator> <operator pos:start="47:41" pos:end="47:42">&gt;&gt;</operator> <literal type="number" pos:start="47:44" pos:end="47:44">3</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:55"><expr pos:start="49:9" pos:end="49:54"><name pos:start="49:9" pos:end="49:33"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:25">cursor_palette</name><index pos:start="49:26" pos:end="49:30">[<expr pos:start="49:27" pos:end="49:29"><name pos:start="49:27" pos:end="49:29">idx</name></expr>]</index><index pos:start="49:31" pos:end="49:33">[<expr pos:start="49:32" pos:end="49:32"><literal type="number" pos:start="49:32" pos:end="49:32">0</literal></expr>]</index></name> <operator pos:start="49:35" pos:end="49:35">=</operator> <operator pos:start="49:37" pos:end="49:37">(</operator><name pos:start="49:38" pos:end="49:40">val</name> <operator pos:start="49:42" pos:end="49:43">&gt;&gt;</operator> <literal type="number" pos:start="49:45" pos:end="49:46">16</literal><operator pos:start="49:47" pos:end="49:47">)</operator> <operator pos:start="49:49" pos:end="49:49">&amp;</operator> <literal type="number" pos:start="49:51" pos:end="49:54">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:54"><expr pos:start="51:9" pos:end="51:53"><name pos:start="51:9" pos:end="51:33"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:25">cursor_palette</name><index pos:start="51:26" pos:end="51:30">[<expr pos:start="51:27" pos:end="51:29"><name pos:start="51:27" pos:end="51:29">idx</name></expr>]</index><index pos:start="51:31" pos:end="51:33">[<expr pos:start="51:32" pos:end="51:32"><literal type="number" pos:start="51:32" pos:end="51:32">1</literal></expr>]</index></name> <operator pos:start="51:35" pos:end="51:35">=</operator> <operator pos:start="51:37" pos:end="51:37">(</operator><name pos:start="51:38" pos:end="51:40">val</name> <operator pos:start="51:42" pos:end="51:43">&gt;&gt;</operator> <literal type="number" pos:start="51:45" pos:end="51:45">8</literal><operator pos:start="51:46" pos:end="51:46">)</operator> <operator pos:start="51:48" pos:end="51:48">&amp;</operator> <literal type="number" pos:start="51:50" pos:end="51:53">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:47"><expr pos:start="53:9" pos:end="53:46"><name pos:start="53:9" pos:end="53:33"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:25">cursor_palette</name><index pos:start="53:26" pos:end="53:30">[<expr pos:start="53:27" pos:end="53:29"><name pos:start="53:27" pos:end="53:29">idx</name></expr>]</index><index pos:start="53:31" pos:end="53:33">[<expr pos:start="53:32" pos:end="53:32"><literal type="number" pos:start="53:32" pos:end="53:32">2</literal></expr>]</index></name> <operator pos:start="53:35" pos:end="53:35">=</operator> <name pos:start="53:37" pos:end="53:39">val</name> <operator pos:start="53:41" pos:end="53:41">&amp;</operator> <literal type="number" pos:start="53:43" pos:end="53:46">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:37"><expr pos:start="55:9" pos:end="55:36"><call pos:start="55:9" pos:end="55:36"><name pos:start="55:9" pos:end="55:33">g364fb_invalidate_display</name><argument_list pos:start="55:34" pos:end="55:36">(<argument pos:start="55:35" pos:end="55:35"><expr pos:start="55:35" pos:end="55:35"><name pos:start="55:35" pos:end="55:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="149:5">else <block pos:start="57:12" pos:end="149:5">{<block_content pos:start="59:9" pos:end="147:9">

        <switch pos:start="59:9" pos:end="147:9">switch <condition pos:start="59:16" pos:end="59:21">(<expr pos:start="59:17" pos:end="59:20"><name pos:start="59:17" pos:end="59:20">addr</name></expr>)</condition> <block pos:start="59:23" pos:end="147:9">{<block_content pos:start="61:9" pos:end="145:18">

        <case pos:start="61:9" pos:end="61:22">case <expr pos:start="61:14" pos:end="61:21"><name pos:start="61:14" pos:end="61:21">REG_BOOT</name></expr>:</case> <comment type="block" pos:start="61:24" pos:end="61:40">/* Boot timing */</comment>

        <case pos:start="63:9" pos:end="63:21">case <expr pos:start="63:14" pos:end="63:20"><literal type="number" pos:start="63:14" pos:end="63:20">0x00108</literal></expr>:</case> <comment type="block" pos:start="63:23" pos:end="63:50">/* Line timing: half sync */</comment>

        <case pos:start="65:9" pos:end="65:21">case <expr pos:start="65:14" pos:end="65:20"><literal type="number" pos:start="65:14" pos:end="65:20">0x00110</literal></expr>:</case> <comment type="block" pos:start="65:23" pos:end="65:51">/* Line timing: back porch */</comment>

        <case pos:start="67:9" pos:end="67:21">case <expr pos:start="67:14" pos:end="67:20"><literal type="number" pos:start="67:14" pos:end="67:20">0x00120</literal></expr>:</case> <comment type="block" pos:start="67:23" pos:end="67:54">/* Line timing: short display */</comment>

        <case pos:start="69:9" pos:end="69:21">case <expr pos:start="69:14" pos:end="69:20"><literal type="number" pos:start="69:14" pos:end="69:20">0x00128</literal></expr>:</case> <comment type="block" pos:start="69:23" pos:end="69:53">/* Frame timing: broad pulse */</comment>

        <case pos:start="71:9" pos:end="71:21">case <expr pos:start="71:14" pos:end="71:20"><literal type="number" pos:start="71:14" pos:end="71:20">0x00130</literal></expr>:</case> <comment type="block" pos:start="71:23" pos:end="71:48">/* Frame timing: v sync */</comment>

        <case pos:start="73:9" pos:end="73:21">case <expr pos:start="73:14" pos:end="73:20"><literal type="number" pos:start="73:14" pos:end="73:20">0x00138</literal></expr>:</case> <comment type="block" pos:start="73:23" pos:end="73:55">/* Frame timing: v preequalise */</comment>

        <case pos:start="75:9" pos:end="75:21">case <expr pos:start="75:14" pos:end="75:20"><literal type="number" pos:start="75:14" pos:end="75:20">0x00140</literal></expr>:</case> <comment type="block" pos:start="75:23" pos:end="75:56">/* Frame timing: v postequalise */</comment>

        <case pos:start="77:9" pos:end="77:21">case <expr pos:start="77:14" pos:end="77:20"><literal type="number" pos:start="77:14" pos:end="77:20">0x00148</literal></expr>:</case> <comment type="block" pos:start="77:23" pos:end="77:49">/* Frame timing: v blank */</comment>

        <case pos:start="79:9" pos:end="79:21">case <expr pos:start="79:14" pos:end="79:20"><literal type="number" pos:start="79:14" pos:end="79:20">0x00158</literal></expr>:</case> <comment type="block" pos:start="79:23" pos:end="79:50">/* Line timing: line time */</comment>

        <case pos:start="81:9" pos:end="81:21">case <expr pos:start="81:14" pos:end="81:20"><literal type="number" pos:start="81:14" pos:end="81:20">0x00160</literal></expr>:</case> <comment type="block" pos:start="81:23" pos:end="81:51">/* Frame store: line start */</comment>

        <case pos:start="83:9" pos:end="83:21">case <expr pos:start="83:14" pos:end="83:20"><literal type="number" pos:start="83:14" pos:end="83:20">0x00168</literal></expr>:</case> <comment type="block" pos:start="83:23" pos:end="83:48">/* vram cycle: mem init */</comment>

        <case pos:start="85:9" pos:end="85:21">case <expr pos:start="85:14" pos:end="85:20"><literal type="number" pos:start="85:14" pos:end="85:20">0x00170</literal></expr>:</case> <comment type="block" pos:start="85:23" pos:end="85:54">/* vram cycle: transfer delay */</comment>

        <case pos:start="87:9" pos:end="87:21">case <expr pos:start="87:14" pos:end="87:20"><literal type="number" pos:start="87:14" pos:end="87:20">0x00200</literal></expr>:</case> <comment type="block" pos:start="87:23" pos:end="87:53">/* vram cycle: mask register */</comment>

            <comment type="block" pos:start="89:13" pos:end="89:24">/* ignore */</comment>

            <break pos:start="91:13" pos:end="91:18">break;</break>

        <case pos:start="93:9" pos:end="93:21">case <expr pos:start="93:14" pos:end="93:20"><name pos:start="93:14" pos:end="93:20">REG_TOP</name></expr>:</case>

            <expr_stmt pos:start="95:13" pos:end="95:35"><expr pos:start="95:13" pos:end="95:34"><name pos:start="95:13" pos:end="95:28"><name pos:start="95:13" pos:end="95:13">s</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:28">top_of_screen</name></name> <operator pos:start="95:30" pos:end="95:30">=</operator> <name pos:start="95:32" pos:end="95:34">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:41"><expr pos:start="97:13" pos:end="97:40"><call pos:start="97:13" pos:end="97:40"><name pos:start="97:13" pos:end="97:37">g364fb_invalidate_display</name><argument_list pos:start="97:38" pos:end="97:40">(<argument pos:start="97:39" pos:end="97:39"><expr pos:start="97:39" pos:end="97:39"><name pos:start="97:39" pos:end="97:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="99:13" pos:end="99:18">break;</break>

        <case pos:start="101:9" pos:end="101:25">case <expr pos:start="101:14" pos:end="101:24"><name pos:start="101:14" pos:end="101:24">REG_DISPLAY</name></expr>:</case>

            <expr_stmt pos:start="103:13" pos:end="103:31"><expr pos:start="103:13" pos:end="103:30"><name pos:start="103:13" pos:end="103:20"><name pos:start="103:13" pos:end="103:13">s</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:20">width</name></name> <operator pos:start="103:22" pos:end="103:22">=</operator> <name pos:start="103:24" pos:end="103:26">val</name> <operator pos:start="103:28" pos:end="103:28">*</operator> <literal type="number" pos:start="103:30" pos:end="103:30">4</literal></expr>;</expr_stmt>

            <break pos:start="105:13" pos:end="105:18">break;</break>

        <case pos:start="107:9" pos:end="107:26">case <expr pos:start="107:14" pos:end="107:25"><name pos:start="107:14" pos:end="107:25">REG_VDISPLAY</name></expr>:</case>

            <expr_stmt pos:start="109:13" pos:end="109:32"><expr pos:start="109:13" pos:end="109:31"><name pos:start="109:13" pos:end="109:21"><name pos:start="109:13" pos:end="109:13">s</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:21">height</name></name> <operator pos:start="109:23" pos:end="109:23">=</operator> <name pos:start="109:25" pos:end="109:27">val</name> <operator pos:start="109:29" pos:end="109:29">/</operator> <literal type="number" pos:start="109:31" pos:end="109:31">2</literal></expr>;</expr_stmt>

            <break pos:start="111:13" pos:end="111:18">break;</break>

        <case pos:start="113:9" pos:end="113:22">case <expr pos:start="113:14" pos:end="113:21"><name pos:start="113:14" pos:end="113:21">REG_CTLA</name></expr>:</case>

            <expr_stmt pos:start="115:13" pos:end="115:26"><expr pos:start="115:13" pos:end="115:25"><name pos:start="115:13" pos:end="115:19"><name pos:start="115:13" pos:end="115:13">s</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:19">ctla</name></name> <operator pos:start="115:21" pos:end="115:21">=</operator> <name pos:start="115:23" pos:end="115:25">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:35"><expr pos:start="117:13" pos:end="117:34"><call pos:start="117:13" pos:end="117:34"><name pos:start="117:13" pos:end="117:31">g364fb_update_depth</name><argument_list pos:start="117:32" pos:end="117:34">(<argument pos:start="117:33" pos:end="117:33"><expr pos:start="117:33" pos:end="117:33"><name pos:start="117:33" pos:end="117:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:41"><expr pos:start="119:13" pos:end="119:40"><call pos:start="119:13" pos:end="119:40"><name pos:start="119:13" pos:end="119:37">g364fb_invalidate_display</name><argument_list pos:start="119:38" pos:end="119:40">(<argument pos:start="119:39" pos:end="119:39"><expr pos:start="119:39" pos:end="119:39"><name pos:start="119:39" pos:end="119:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="121:13" pos:end="121:18">break;</break>

        <case pos:start="123:9" pos:end="123:26">case <expr pos:start="123:14" pos:end="123:25"><name pos:start="123:14" pos:end="123:25">REG_CURS_POS</name></expr>:</case>

            <expr_stmt pos:start="125:13" pos:end="125:47"><expr pos:start="125:13" pos:end="125:46"><call pos:start="125:13" pos:end="125:46"><name pos:start="125:13" pos:end="125:43">g364_invalidate_cursor_position</name><argument_list pos:start="125:44" pos:end="125:46">(<argument pos:start="125:45" pos:end="125:45"><expr pos:start="125:45" pos:end="125:45"><name pos:start="125:45" pos:end="125:45">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:37"><expr pos:start="127:13" pos:end="127:36"><name pos:start="127:13" pos:end="127:30"><name pos:start="127:13" pos:end="127:13">s</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:30">cursor_position</name></name> <operator pos:start="127:32" pos:end="127:32">=</operator> <name pos:start="127:34" pos:end="127:36">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:47"><expr pos:start="129:13" pos:end="129:46"><call pos:start="129:13" pos:end="129:46"><name pos:start="129:13" pos:end="129:43">g364_invalidate_cursor_position</name><argument_list pos:start="129:44" pos:end="129:46">(<argument pos:start="129:45" pos:end="129:45"><expr pos:start="129:45" pos:end="129:45"><name pos:start="129:45" pos:end="129:45">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="131:13" pos:end="131:18">break;</break>

        <case pos:start="133:9" pos:end="133:23">case <expr pos:start="133:14" pos:end="133:22"><name pos:start="133:14" pos:end="133:22">REG_RESET</name></expr>:</case>

            <expr_stmt pos:start="135:13" pos:end="135:28"><expr pos:start="135:13" pos:end="135:27"><call pos:start="135:13" pos:end="135:27"><name pos:start="135:13" pos:end="135:24">g364fb_reset</name><argument_list pos:start="135:25" pos:end="135:27">(<argument pos:start="135:26" pos:end="135:26"><expr pos:start="135:26" pos:end="135:26"><name pos:start="135:26" pos:end="135:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="137:13" pos:end="137:18">break;</break>

        <default pos:start="139:9" pos:end="139:16">default:</default>

            <expr_stmt pos:start="141:13" pos:end="143:64"><expr pos:start="141:13" pos:end="143:63"><call pos:start="141:13" pos:end="143:63"><name pos:start="141:13" pos:end="141:24">error_report</name><argument_list pos:start="141:25" pos:end="143:63">(<argument pos:start="141:26" pos:end="143:51"><expr pos:start="141:26" pos:end="143:51"><literal type="string" pos:start="141:26" pos:end="141:53">"g364: invalid write of 0x%"</literal> <name pos:start="141:55" pos:end="141:60">PRIx64</name>

                         <literal type="string" pos:start="143:26" pos:end="143:32">" at ["</literal> <name pos:start="143:34" pos:end="143:47">TARGET_FMT_plx</name> <literal type="string" pos:start="143:49" pos:end="143:51">"]"</literal></expr></argument>, <argument pos:start="143:54" pos:end="143:56"><expr pos:start="143:54" pos:end="143:56"><name pos:start="143:54" pos:end="143:56">val</name></expr></argument>, <argument pos:start="143:59" pos:end="143:62"><expr pos:start="143:59" pos:end="143:62"><name pos:start="143:59" pos:end="143:62">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="145:13" pos:end="145:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:27"><expr pos:start="151:5" pos:end="151:26"><call pos:start="151:5" pos:end="151:26"><name pos:start="151:5" pos:end="151:18">qemu_irq_lower</name><argument_list pos:start="151:19" pos:end="151:26">(<argument pos:start="151:20" pos:end="151:25"><expr pos:start="151:20" pos:end="151:25"><name pos:start="151:20" pos:end="151:25"><name pos:start="151:20" pos:end="151:20">s</name><operator pos:start="151:21" pos:end="151:22">-&gt;</operator><name pos:start="151:23" pos:end="151:25">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
