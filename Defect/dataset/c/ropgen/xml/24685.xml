<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24685.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:31">virtio_scsi_common_realize</name><parameter_list pos:start="1:32" pos:end="5:49">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:43">DeviceState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">dev</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:62"><decl pos:start="1:51" pos:end="1:62"><type pos:start="1:51" pos:end="1:62"><name pos:start="1:51" pos:end="1:55">Error</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier><modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">errp</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:49"><decl pos:start="3:33" pos:end="3:49"><type pos:start="3:33" pos:end="3:49"><name pos:start="3:33" pos:end="3:44">HandleOutput</name></type> <name pos:start="3:46" pos:end="3:49">ctrl</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:67"><decl pos:start="3:52" pos:end="3:67"><type pos:start="3:52" pos:end="3:67"><name pos:start="3:52" pos:end="3:63">HandleOutput</name></type> <name pos:start="3:65" pos:end="3:67">evt</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:48"><decl pos:start="5:33" pos:end="5:48"><type pos:start="5:33" pos:end="5:48"><name pos:start="5:33" pos:end="5:44">HandleOutput</name></type> <name pos:start="5:46" pos:end="5:48">cmd</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="69:1">{<block_content pos:start="9:5" pos:end="67:5">

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">VirtIODevice</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:22">vdev</name> <init pos:start="9:24" pos:end="9:43">= <expr pos:start="9:26" pos:end="9:43"><call pos:start="9:26" pos:end="9:43"><name pos:start="9:26" pos:end="9:38">VIRTIO_DEVICE</name><argument_list pos:start="9:39" pos:end="9:43">(<argument pos:start="9:40" pos:end="9:42"><expr pos:start="9:40" pos:end="9:42"><name pos:start="9:40" pos:end="9:42">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:50"><decl pos:start="11:5" pos:end="11:49"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">VirtIOSCSICommon</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:23">s</name> <init pos:start="11:25" pos:end="11:49">= <expr pos:start="11:27" pos:end="11:49"><call pos:start="11:27" pos:end="11:49"><name pos:start="11:27" pos:end="11:44">VIRTIO_SCSI_COMMON</name><argument_list pos:start="11:45" pos:end="11:49">(<argument pos:start="11:46" pos:end="11:48"><expr pos:start="11:46" pos:end="11:48"><name pos:start="11:46" pos:end="11:48">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="19:42"><expr pos:start="17:5" pos:end="19:41"><call pos:start="17:5" pos:end="19:41"><name pos:start="17:5" pos:end="17:15">virtio_init</name><argument_list pos:start="17:16" pos:end="19:41">(<argument pos:start="17:17" pos:end="17:20"><expr pos:start="17:17" pos:end="17:20"><name pos:start="17:17" pos:end="17:20">vdev</name></expr></argument>, <argument pos:start="17:23" pos:end="17:35"><expr pos:start="17:23" pos:end="17:35"><literal type="string" pos:start="17:23" pos:end="17:35">"virtio-scsi"</literal></expr></argument>, <argument pos:start="17:38" pos:end="17:51"><expr pos:start="17:38" pos:end="17:51"><name pos:start="17:38" pos:end="17:51">VIRTIO_ID_SCSI</name></expr></argument>,

                <argument pos:start="19:17" pos:end="19:40"><expr pos:start="19:17" pos:end="19:40"><sizeof pos:start="19:17" pos:end="19:40">sizeof<argument_list pos:start="19:23" pos:end="19:40">(<argument pos:start="19:24" pos:end="19:39"><expr pos:start="19:24" pos:end="19:39"><name pos:start="19:24" pos:end="19:39">VirtIOSCSIConfig</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="35:5"><if pos:start="23:5" pos:end="35:5">if <condition pos:start="23:8" pos:end="23:77">(<expr pos:start="23:9" pos:end="23:76"><name pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:15">conf</name><operator pos:start="23:16" pos:end="23:16">.</operator><name pos:start="23:17" pos:end="23:26">num_queues</name></name> <operator pos:start="23:28" pos:end="23:29">&lt;=</operator> <literal type="number" pos:start="23:31" pos:end="23:31">0</literal> <operator pos:start="23:33" pos:end="23:34">||</operator> <name pos:start="23:36" pos:end="23:53"><name pos:start="23:36" pos:end="23:36">s</name><operator pos:start="23:37" pos:end="23:38">-&gt;</operator><name pos:start="23:39" pos:end="23:42">conf</name><operator pos:start="23:43" pos:end="23:43">.</operator><name pos:start="23:44" pos:end="23:53">num_queues</name></name> <operator pos:start="23:55" pos:end="23:55">&gt;</operator> <name pos:start="23:57" pos:end="23:76">VIRTIO_PCI_QUEUE_MAX</name></expr>)</condition> <block pos:start="23:79" pos:end="35:5">{<block_content pos:start="25:9" pos:end="33:15">

        <expr_stmt pos:start="25:9" pos:end="29:61"><expr pos:start="25:9" pos:end="29:60"><call pos:start="25:9" pos:end="29:60"><name pos:start="25:9" pos:end="25:18">error_setg</name><argument_list pos:start="25:19" pos:end="29:60">(<argument pos:start="25:20" pos:end="25:23"><expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:23">errp</name></expr></argument>, <argument pos:start="25:26" pos:end="27:67"><expr pos:start="25:26" pos:end="27:67"><literal type="string" pos:start="25:26" pos:end="25:56">"Invalid number of queues (= %"</literal> <name pos:start="25:58" pos:end="25:63">PRId32</name> <literal type="string" pos:start="25:65" pos:end="25:69">"), "</literal>

                         <literal type="string" pos:start="27:26" pos:end="27:67">"must be a positive integer less than %d."</literal></expr></argument>,

                   <argument pos:start="29:20" pos:end="29:37"><expr pos:start="29:20" pos:end="29:37"><name pos:start="29:20" pos:end="29:37"><name pos:start="29:20" pos:end="29:20">s</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:26">conf</name><operator pos:start="29:27" pos:end="29:27">.</operator><name pos:start="29:28" pos:end="29:37">num_queues</name></name></expr></argument>, <argument pos:start="29:40" pos:end="29:59"><expr pos:start="29:40" pos:end="29:59"><name pos:start="29:40" pos:end="29:59">VIRTIO_PCI_QUEUE_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:29"><expr pos:start="31:9" pos:end="31:28"><call pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:22">virtio_cleanup</name><argument_list pos:start="31:23" pos:end="31:28">(<argument pos:start="31:24" pos:end="31:27"><expr pos:start="31:24" pos:end="31:27"><name pos:start="31:24" pos:end="31:27">vdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:69"><expr pos:start="37:5" pos:end="37:68"><name pos:start="37:5" pos:end="37:14"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:14">cmd_vqs</name></name> <operator pos:start="37:16" pos:end="37:16">=</operator> <call pos:start="37:18" pos:end="37:68"><name pos:start="37:18" pos:end="37:26">g_malloc0</name><argument_list pos:start="37:27" pos:end="37:68">(<argument pos:start="37:28" pos:end="37:67"><expr pos:start="37:28" pos:end="37:67"><name pos:start="37:28" pos:end="37:45"><name pos:start="37:28" pos:end="37:28">s</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:34">conf</name><operator pos:start="37:35" pos:end="37:35">.</operator><name pos:start="37:36" pos:end="37:45">num_queues</name></name> <operator pos:start="37:47" pos:end="37:47">*</operator> <sizeof pos:start="37:49" pos:end="37:67">sizeof<argument_list pos:start="37:55" pos:end="37:67">(<argument pos:start="37:56" pos:end="37:66"><expr pos:start="37:56" pos:end="37:66"><name pos:start="37:56" pos:end="37:64">VirtQueue</name> <operator pos:start="37:66" pos:end="37:66">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:43"><expr pos:start="39:5" pos:end="39:42"><name pos:start="39:5" pos:end="39:17"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:17">sense_size</name></name> <operator pos:start="39:19" pos:end="39:19">=</operator> <name pos:start="39:21" pos:end="39:42">VIRTIO_SCSI_SENSE_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:39"><expr pos:start="41:5" pos:end="41:38"><name pos:start="41:5" pos:end="41:15"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:15">cdb_size</name></name> <operator pos:start="41:17" pos:end="41:17">=</operator> <name pos:start="41:19" pos:end="41:38">VIRTIO_SCSI_CDB_SIZE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="47:40"><expr pos:start="45:5" pos:end="47:39"><name pos:start="45:5" pos:end="45:14"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:14">ctrl_vq</name></name> <operator pos:start="45:16" pos:end="45:16">=</operator> <call pos:start="45:18" pos:end="47:39"><name pos:start="45:18" pos:end="45:33">virtio_add_queue</name><argument_list pos:start="45:34" pos:end="47:39">(<argument pos:start="45:35" pos:end="45:38"><expr pos:start="45:35" pos:end="45:38"><name pos:start="45:35" pos:end="45:38">vdev</name></expr></argument>, <argument pos:start="45:41" pos:end="45:59"><expr pos:start="45:41" pos:end="45:59"><name pos:start="45:41" pos:end="45:59">VIRTIO_SCSI_VQ_SIZE</name></expr></argument>,

                                  <argument pos:start="47:35" pos:end="47:38"><expr pos:start="47:35" pos:end="47:38"><name pos:start="47:35" pos:end="47:38">ctrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="51:40"><expr pos:start="49:5" pos:end="51:39"><name pos:start="49:5" pos:end="49:15"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:15">event_vq</name></name> <operator pos:start="49:17" pos:end="49:17">=</operator> <call pos:start="49:19" pos:end="51:39"><name pos:start="49:19" pos:end="49:34">virtio_add_queue</name><argument_list pos:start="49:35" pos:end="51:39">(<argument pos:start="49:36" pos:end="49:39"><expr pos:start="49:36" pos:end="49:39"><name pos:start="49:36" pos:end="49:39">vdev</name></expr></argument>, <argument pos:start="49:42" pos:end="49:60"><expr pos:start="49:42" pos:end="49:60"><name pos:start="49:42" pos:end="49:60">VIRTIO_SCSI_VQ_SIZE</name></expr></argument>,

                                   <argument pos:start="51:36" pos:end="51:38"><expr pos:start="51:36" pos:end="51:38"><name pos:start="51:36" pos:end="51:38">evt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="53:5" pos:end="59:5">for <control pos:start="53:9" pos:end="53:44">(<init pos:start="53:10" pos:end="53:15"><expr pos:start="53:10" pos:end="53:14"><name pos:start="53:10" pos:end="53:10">i</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>;</init> <condition pos:start="53:17" pos:end="53:39"><expr pos:start="53:17" pos:end="53:38"><name pos:start="53:17" pos:end="53:17">i</name> <operator pos:start="53:19" pos:end="53:19">&lt;</operator> <name pos:start="53:21" pos:end="53:38"><name pos:start="53:21" pos:end="53:21">s</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:27">conf</name><operator pos:start="53:28" pos:end="53:28">.</operator><name pos:start="53:29" pos:end="53:38">num_queues</name></name></expr>;</condition> <incr pos:start="53:41" pos:end="53:43"><expr pos:start="53:41" pos:end="53:43"><name pos:start="53:41" pos:end="53:41">i</name><operator pos:start="53:42" pos:end="53:43">++</operator></expr></incr>)</control> <block pos:start="53:46" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:46">

        <expr_stmt pos:start="55:9" pos:end="57:46"><expr pos:start="55:9" pos:end="57:45"><name pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:18">cmd_vqs</name><index pos:start="55:19" pos:end="55:21">[<expr pos:start="55:20" pos:end="55:20"><name pos:start="55:20" pos:end="55:20">i</name></expr>]</index></name> <operator pos:start="55:23" pos:end="55:23">=</operator> <call pos:start="55:25" pos:end="57:45"><name pos:start="55:25" pos:end="55:40">virtio_add_queue</name><argument_list pos:start="55:41" pos:end="57:45">(<argument pos:start="55:42" pos:end="55:45"><expr pos:start="55:42" pos:end="55:45"><name pos:start="55:42" pos:end="55:45">vdev</name></expr></argument>, <argument pos:start="55:48" pos:end="55:66"><expr pos:start="55:48" pos:end="55:66"><name pos:start="55:48" pos:end="55:66">VIRTIO_SCSI_VQ_SIZE</name></expr></argument>,

                                         <argument pos:start="57:42" pos:end="57:44"><expr pos:start="57:42" pos:end="57:44"><name pos:start="57:42" pos:end="57:44">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if <condition pos:start="63:8" pos:end="63:25">(<expr pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:15">conf</name><operator pos:start="63:16" pos:end="63:16">.</operator><name pos:start="63:17" pos:end="63:24">iothread</name></name></expr>)</condition> <block pos:start="63:27" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:67">

        <expr_stmt pos:start="65:9" pos:end="65:67"><expr pos:start="65:9" pos:end="65:66"><call pos:start="65:9" pos:end="65:66"><name pos:start="65:9" pos:end="65:32">virtio_scsi_set_iothread</name><argument_list pos:start="65:33" pos:end="65:66">(<argument pos:start="65:34" pos:end="65:47"><expr pos:start="65:34" pos:end="65:47"><call pos:start="65:34" pos:end="65:47"><name pos:start="65:34" pos:end="65:44">VIRTIO_SCSI</name><argument_list pos:start="65:45" pos:end="65:47">(<argument pos:start="65:46" pos:end="65:46"><expr pos:start="65:46" pos:end="65:46"><name pos:start="65:46" pos:end="65:46">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="65:50" pos:end="65:65"><expr pos:start="65:50" pos:end="65:65"><name pos:start="65:50" pos:end="65:65"><name pos:start="65:50" pos:end="65:50">s</name><operator pos:start="65:51" pos:end="65:52">-&gt;</operator><name pos:start="65:53" pos:end="65:56">conf</name><operator pos:start="65:57" pos:end="65:57">.</operator><name pos:start="65:58" pos:end="65:65">iothread</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
