<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7425.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">invalidate_and_set_dirty</name><parameter_list pos:start="1:37" pos:end="3:63">(<parameter pos:start="1:38" pos:end="1:60"><decl pos:start="1:38" pos:end="1:60"><type pos:start="1:38" pos:end="1:60"><name pos:start="1:38" pos:end="1:55">target_phys_addr_t</name></type> <name pos:start="1:57" pos:end="1:60">addr</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:62"><decl pos:start="3:38" pos:end="3:62"><type pos:start="3:38" pos:end="3:62"><name pos:start="3:38" pos:end="3:55">target_phys_addr_t</name></type> <name pos:start="3:57" pos:end="3:62">length</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="21:1">{<block_content pos:start="7:5" pos:end="19:38">

    <if_stmt pos:start="7:5" pos:end="17:5"><if pos:start="7:5" pos:end="17:5">if <condition pos:start="7:8" pos:end="7:44">(<expr pos:start="7:9" pos:end="7:43"><operator pos:start="7:9" pos:end="7:9">!</operator><call pos:start="7:10" pos:end="7:43"><name pos:start="7:10" pos:end="7:37">cpu_physical_memory_is_dirty</name><argument_list pos:start="7:38" pos:end="7:43">(<argument pos:start="7:39" pos:end="7:42"><expr pos:start="7:39" pos:end="7:42"><name pos:start="7:39" pos:end="7:42">addr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="7:46" pos:end="17:5">{<block_content pos:start="11:9" pos:end="15:77">

        <comment type="block" pos:start="9:9" pos:end="9:29">/* invalidate code */</comment>

        <expr_stmt pos:start="11:9" pos:end="11:62"><expr pos:start="11:9" pos:end="11:61"><call pos:start="11:9" pos:end="11:61"><name pos:start="11:9" pos:end="11:37">tb_invalidate_phys_page_range</name><argument_list pos:start="11:38" pos:end="11:61">(<argument pos:start="11:39" pos:end="11:42"><expr pos:start="11:39" pos:end="11:42"><name pos:start="11:39" pos:end="11:42">addr</name></expr></argument>, <argument pos:start="11:45" pos:end="11:57"><expr pos:start="11:45" pos:end="11:57"><name pos:start="11:45" pos:end="11:48">addr</name> <operator pos:start="11:50" pos:end="11:50">+</operator> <name pos:start="11:52" pos:end="11:57">length</name></expr></argument>, <argument pos:start="11:60" pos:end="11:60"><expr pos:start="11:60" pos:end="11:60"><literal type="number" pos:start="11:60" pos:end="11:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="13:9" pos:end="13:27">/* set dirty bit */</comment>

        <expr_stmt pos:start="15:9" pos:end="15:77"><expr pos:start="15:9" pos:end="15:76"><call pos:start="15:9" pos:end="15:76"><name pos:start="15:9" pos:end="15:43">cpu_physical_memory_set_dirty_flags</name><argument_list pos:start="15:44" pos:end="15:76">(<argument pos:start="15:45" pos:end="15:48"><expr pos:start="15:45" pos:end="15:48"><name pos:start="15:45" pos:end="15:48">addr</name></expr></argument>, <argument pos:start="15:51" pos:end="15:75"><expr pos:start="15:51" pos:end="15:75"><operator pos:start="15:51" pos:end="15:51">(</operator><literal type="number" pos:start="15:52" pos:end="15:55">0xff</literal> <operator pos:start="15:57" pos:end="15:57">&amp;</operator> <operator pos:start="15:59" pos:end="15:59">~</operator><name pos:start="15:60" pos:end="15:74">CODE_DIRTY_FLAG</name><operator pos:start="15:75" pos:end="15:75">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:38"><expr pos:start="19:5" pos:end="19:37"><call pos:start="19:5" pos:end="19:37"><name pos:start="19:5" pos:end="19:23">xen_modified_memory</name><argument_list pos:start="19:24" pos:end="19:37">(<argument pos:start="19:25" pos:end="19:28"><expr pos:start="19:25" pos:end="19:28"><name pos:start="19:25" pos:end="19:28">addr</name></expr></argument>, <argument pos:start="19:31" pos:end="19:36"><expr pos:start="19:31" pos:end="19:36"><name pos:start="19:31" pos:end="19:36">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
