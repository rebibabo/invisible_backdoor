<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25131.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">sdp_read_header</name><parameter_list pos:start="1:27" pos:end="1:46">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="145:1">{<block_content pos:start="5:5" pos:end="143:15">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">RTSPState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:17">rt</name> <init pos:start="5:19" pos:end="5:32">= <expr pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:21">s</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">RTSPStream</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:23">rtsp_st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">size</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">i</name></decl>, <decl pos:start="9:18" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:20">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:17">content</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:18"><name pos:start="13:10" pos:end="13:12">url</name><index pos:start="13:13" pos:end="13:18">[<expr pos:start="13:14" pos:end="13:17"><literal type="number" pos:start="13:14" pos:end="13:17">1024</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:28"><if pos:start="17:5" pos:end="19:28">if <condition pos:start="17:8" pos:end="17:27">(<expr pos:start="17:9" pos:end="17:26"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:26"><name pos:start="17:10" pos:end="17:24">ff_network_init</name><argument_list pos:start="17:25" pos:end="17:26">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:28"><block_content pos:start="19:9" pos:end="19:28">

        <return pos:start="19:9" pos:end="19:28">return <expr pos:start="19:16" pos:end="19:27"><call pos:start="19:16" pos:end="19:27"><name pos:start="19:16" pos:end="19:22">AVERROR</name><argument_list pos:start="19:23" pos:end="19:27">(<argument pos:start="19:24" pos:end="19:26"><expr pos:start="19:24" pos:end="19:26"><name pos:start="19:24" pos:end="19:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="25:48"><if pos:start="23:5" pos:end="25:48">if <condition pos:start="23:8" pos:end="23:25">(<expr pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:20">max_delay</name></name> <operator pos:start="23:22" pos:end="23:22">&lt;</operator> <literal type="number" pos:start="23:24" pos:end="23:24">0</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:48"><block_content pos:start="25:9" pos:end="25:48"> <comment type="block" pos:start="23:27" pos:end="23:53">/* Not set by the caller */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:48"><expr pos:start="25:9" pos:end="25:47"><name pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:20">max_delay</name></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <name pos:start="25:24" pos:end="25:47">DEFAULT_REORDERING_DELAY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="29:58"><if pos:start="27:5" pos:end="29:58">if <condition pos:start="27:8" pos:end="27:45">(<expr pos:start="27:9" pos:end="27:44"><name pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:10">rt</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:22">rtsp_flags</name></name> <operator pos:start="27:24" pos:end="27:24">&amp;</operator> <name pos:start="27:26" pos:end="27:44">RTSP_FLAG_CUSTOM_IO</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:58"><block_content pos:start="29:9" pos:end="29:58">

        <expr_stmt pos:start="29:9" pos:end="29:58"><expr pos:start="29:9" pos:end="29:57"><name pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:10">rt</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:27">lower_transport</name></name> <operator pos:start="29:29" pos:end="29:29">=</operator> <name pos:start="29:31" pos:end="29:57">RTSP_LOWER_TRANSPORT_CUSTOM</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:33">/* read the whole sdp file */</comment>

    <comment type="block" pos:start="35:5" pos:end="35:29">/* XXX: better loading */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:38"><expr pos:start="37:5" pos:end="37:37"><name pos:start="37:5" pos:end="37:11">content</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:37"><name pos:start="37:15" pos:end="37:23">av_malloc</name><argument_list pos:start="37:24" pos:end="37:37">(<argument pos:start="37:25" pos:end="37:36"><expr pos:start="37:25" pos:end="37:36"><name pos:start="37:25" pos:end="37:36">SDP_MAX_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:55"><expr pos:start="41:5" pos:end="41:54"><name pos:start="41:5" pos:end="41:8">size</name> <operator pos:start="41:10" pos:end="41:10">=</operator> <call pos:start="41:12" pos:end="41:54"><name pos:start="41:12" pos:end="41:20">avio_read</name><argument_list pos:start="41:21" pos:end="41:54">(<argument pos:start="41:22" pos:end="41:26"><expr pos:start="41:22" pos:end="41:26"><name pos:start="41:22" pos:end="41:26"><name pos:start="41:22" pos:end="41:22">s</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:26">pb</name></name></expr></argument>, <argument pos:start="41:29" pos:end="41:35"><expr pos:start="41:29" pos:end="41:35"><name pos:start="41:29" pos:end="41:35">content</name></expr></argument>, <argument pos:start="41:38" pos:end="41:53"><expr pos:start="41:38" pos:end="41:53"><name pos:start="41:38" pos:end="41:49">SDP_MAX_SIZE</name> <operator pos:start="41:51" pos:end="41:51">-</operator> <literal type="number" pos:start="41:53" pos:end="41:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:18">(<expr pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:12">size</name> <operator pos:start="43:14" pos:end="43:15">&lt;=</operator> <literal type="number" pos:start="43:17" pos:end="43:17">0</literal></expr>)</condition> <block pos:start="43:20" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:35">

        <expr_stmt pos:start="45:9" pos:end="45:25"><expr pos:start="45:9" pos:end="45:24"><call pos:start="45:9" pos:end="45:24"><name pos:start="45:9" pos:end="45:15">av_free</name><argument_list pos:start="45:16" pos:end="45:24">(<argument pos:start="45:17" pos:end="45:23"><expr pos:start="45:17" pos:end="45:23"><name pos:start="45:17" pos:end="45:23">content</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:35">return <expr pos:start="47:16" pos:end="47:34"><name pos:start="47:16" pos:end="47:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:24"><expr pos:start="51:5" pos:end="51:23"><name pos:start="51:5" pos:end="51:17"><name pos:start="51:5" pos:end="51:11">content</name><index pos:start="51:12" pos:end="51:17">[<expr pos:start="51:13" pos:end="51:16"><name pos:start="51:13" pos:end="51:16">size</name></expr>]</index></name> <operator pos:start="51:19" pos:end="51:19">=</operator><literal type="char" pos:start="51:20" pos:end="51:23">'\0'</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:35"><expr pos:start="55:5" pos:end="55:34"><name pos:start="55:5" pos:end="55:7">err</name> <operator pos:start="55:9" pos:end="55:9">=</operator> <call pos:start="55:11" pos:end="55:34"><name pos:start="55:11" pos:end="55:22">ff_sdp_parse</name><argument_list pos:start="55:23" pos:end="55:34">(<argument pos:start="55:24" pos:end="55:24"><expr pos:start="55:24" pos:end="55:24"><name pos:start="55:24" pos:end="55:24">s</name></expr></argument>, <argument pos:start="55:27" pos:end="55:33"><expr pos:start="55:27" pos:end="55:33"><name pos:start="55:27" pos:end="55:33">content</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:23"><expr pos:start="57:5" pos:end="57:22"><call pos:start="57:5" pos:end="57:22"><name pos:start="57:5" pos:end="57:12">av_freep</name><argument_list pos:start="57:13" pos:end="57:22">(<argument pos:start="57:14" pos:end="57:21"><expr pos:start="57:14" pos:end="57:21"><operator pos:start="57:14" pos:end="57:14">&amp;</operator><name pos:start="57:15" pos:end="57:21">content</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="59:23"><if pos:start="59:5" pos:end="59:23">if <condition pos:start="59:8" pos:end="59:12">(<expr pos:start="59:9" pos:end="59:11"><name pos:start="59:9" pos:end="59:11">err</name></expr>)</condition><block type="pseudo" pos:start="59:14" pos:end="59:23"><block_content pos:start="59:14" pos:end="59:23"> <goto pos:start="59:14" pos:end="59:23">goto <name pos:start="59:19" pos:end="59:22">fail</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:30">/* open each RTP stream */</comment>

    <for pos:start="65:5" pos:end="133:5">for <control pos:start="65:9" pos:end="65:45">(<init pos:start="65:10" pos:end="65:15"><expr pos:start="65:10" pos:end="65:14"><name pos:start="65:10" pos:end="65:10">i</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <literal type="number" pos:start="65:14" pos:end="65:14">0</literal></expr>;</init> <condition pos:start="65:17" pos:end="65:40"><expr pos:start="65:17" pos:end="65:39"><name pos:start="65:17" pos:end="65:17">i</name> <operator pos:start="65:19" pos:end="65:19">&lt;</operator> <name pos:start="65:21" pos:end="65:39"><name pos:start="65:21" pos:end="65:22">rt</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:39">nb_rtsp_streams</name></name></expr>;</condition> <incr pos:start="65:42" pos:end="65:44"><expr pos:start="65:42" pos:end="65:44"><name pos:start="65:42" pos:end="65:42">i</name><operator pos:start="65:43" pos:end="65:44">++</operator></expr></incr>)</control> <block pos:start="65:47" pos:end="133:5">{<block_content pos:start="67:9" pos:end="131:22">

        <decl_stmt pos:start="67:9" pos:end="67:25"><decl pos:start="67:9" pos:end="67:24"><type pos:start="67:9" pos:end="67:12"><name pos:start="67:9" pos:end="67:12">char</name></type> <name pos:start="67:14" pos:end="67:24"><name pos:start="67:14" pos:end="67:20">namebuf</name><index pos:start="67:21" pos:end="67:24">[<expr pos:start="67:22" pos:end="67:23"><literal type="number" pos:start="67:22" pos:end="67:23">50</literal></expr>]</index></name></decl>;</decl_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:38"><expr pos:start="69:9" pos:end="69:37"><name pos:start="69:9" pos:end="69:15">rtsp_st</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <name pos:start="69:19" pos:end="69:37"><name pos:start="69:19" pos:end="69:20">rt</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:34">rtsp_streams</name><index pos:start="69:35" pos:end="69:37">[<expr pos:start="69:36" pos:end="69:36"><name pos:start="69:36" pos:end="69:36">i</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="73:9" pos:end="127:9"><if pos:start="73:9" pos:end="127:9">if <condition pos:start="73:12" pos:end="73:52">(<expr pos:start="73:13" pos:end="73:51"><operator pos:start="73:13" pos:end="73:13">!</operator><operator pos:start="73:14" pos:end="73:14">(</operator><name pos:start="73:15" pos:end="73:28"><name pos:start="73:15" pos:end="73:16">rt</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:28">rtsp_flags</name></name> <operator pos:start="73:30" pos:end="73:30">&amp;</operator> <name pos:start="73:32" pos:end="73:50">RTSP_FLAG_CUSTOM_IO</name><operator pos:start="73:51" pos:end="73:51">)</operator></expr>)</condition> <block pos:start="73:54" pos:end="127:9">{<block_content pos:start="75:13" pos:end="125:13">

            <decl_stmt pos:start="75:13" pos:end="75:49"><decl pos:start="75:13" pos:end="75:48"><type pos:start="75:13" pos:end="75:26"><name pos:start="75:13" pos:end="75:24">AVDictionary</name> <modifier pos:start="75:26" pos:end="75:26">*</modifier></type><name pos:start="75:27" pos:end="75:30">opts</name> <init pos:start="75:32" pos:end="75:48">= <expr pos:start="75:34" pos:end="75:48"><call pos:start="75:34" pos:end="75:48"><name pos:start="75:34" pos:end="75:44">map_to_opts</name><argument_list pos:start="75:45" pos:end="75:48">(<argument pos:start="75:46" pos:end="75:47"><expr pos:start="75:46" pos:end="75:47"><name pos:start="75:46" pos:end="75:47">rt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="79:13" pos:end="81:75"><expr pos:start="79:13" pos:end="81:74"><call pos:start="79:13" pos:end="81:74"><name pos:start="79:13" pos:end="79:23">getnameinfo</name><argument_list pos:start="79:24" pos:end="81:74">(<argument pos:start="79:25" pos:end="79:59"><expr pos:start="79:25" pos:end="79:59"><operator pos:start="79:25" pos:end="79:25">(</operator>struct <name pos:start="79:33" pos:end="79:40">sockaddr</name><operator pos:start="79:41" pos:end="79:41">*</operator><operator pos:start="79:42" pos:end="79:42">)</operator> <operator pos:start="79:44" pos:end="79:44">&amp;</operator><name pos:start="79:45" pos:end="79:59"><name pos:start="79:45" pos:end="79:51">rtsp_st</name><operator pos:start="79:52" pos:end="79:53">-&gt;</operator><name pos:start="79:54" pos:end="79:59">sdp_ip</name></name></expr></argument>, <argument pos:start="79:62" pos:end="79:84"><expr pos:start="79:62" pos:end="79:84"><sizeof pos:start="79:62" pos:end="79:84">sizeof<argument_list pos:start="79:68" pos:end="79:84">(<argument pos:start="79:69" pos:end="79:83"><expr pos:start="79:69" pos:end="79:83"><name pos:start="79:69" pos:end="79:83"><name pos:start="79:69" pos:end="79:75">rtsp_st</name><operator pos:start="79:76" pos:end="79:77">-&gt;</operator><name pos:start="79:78" pos:end="79:83">sdp_ip</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                        <argument pos:start="81:25" pos:end="81:31"><expr pos:start="81:25" pos:end="81:31"><name pos:start="81:25" pos:end="81:31">namebuf</name></expr></argument>, <argument pos:start="81:34" pos:end="81:48"><expr pos:start="81:34" pos:end="81:48"><sizeof pos:start="81:34" pos:end="81:48">sizeof<argument_list pos:start="81:40" pos:end="81:48">(<argument pos:start="81:41" pos:end="81:47"><expr pos:start="81:41" pos:end="81:47"><name pos:start="81:41" pos:end="81:47">namebuf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="81:51" pos:end="81:54"><expr pos:start="81:51" pos:end="81:54"><name pos:start="81:51" pos:end="81:54">NULL</name></expr></argument>, <argument pos:start="81:57" pos:end="81:57"><expr pos:start="81:57" pos:end="81:57"><literal type="number" pos:start="81:57" pos:end="81:57">0</literal></expr></argument>, <argument pos:start="81:60" pos:end="81:73"><expr pos:start="81:60" pos:end="81:73"><name pos:start="81:60" pos:end="81:73">NI_NUMERICHOST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="93:75"><expr pos:start="83:13" pos:end="93:74"><call pos:start="83:13" pos:end="93:74"><name pos:start="83:13" pos:end="83:23">ff_url_join</name><argument_list pos:start="83:24" pos:end="93:74">(<argument pos:start="83:25" pos:end="83:27"><expr pos:start="83:25" pos:end="83:27"><name pos:start="83:25" pos:end="83:27">url</name></expr></argument>, <argument pos:start="83:30" pos:end="83:40"><expr pos:start="83:30" pos:end="83:40"><sizeof pos:start="83:30" pos:end="83:40">sizeof<argument_list pos:start="83:36" pos:end="83:40">(<argument pos:start="83:37" pos:end="83:39"><expr pos:start="83:37" pos:end="83:39"><name pos:start="83:37" pos:end="83:39">url</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="83:43" pos:end="83:47"><expr pos:start="83:43" pos:end="83:47"><literal type="string" pos:start="83:43" pos:end="83:47">"rtp"</literal></expr></argument>, <argument pos:start="83:50" pos:end="83:53"><expr pos:start="83:50" pos:end="83:53"><name pos:start="83:50" pos:end="83:53">NULL</name></expr></argument>,

                        <argument pos:start="85:25" pos:end="85:31"><expr pos:start="85:25" pos:end="85:31"><name pos:start="85:25" pos:end="85:31">namebuf</name></expr></argument>, <argument pos:start="85:34" pos:end="85:50"><expr pos:start="85:34" pos:end="85:50"><name pos:start="85:34" pos:end="85:50"><name pos:start="85:34" pos:end="85:40">rtsp_st</name><operator pos:start="85:41" pos:end="85:42">-&gt;</operator><name pos:start="85:43" pos:end="85:50">sdp_port</name></name></expr></argument>,

                        <argument pos:start="87:25" pos:end="87:76"><expr pos:start="87:25" pos:end="87:76"><literal type="string" pos:start="87:25" pos:end="87:76">"?localport=%d&amp;ttl=%d&amp;connect=%d&amp;write_to_source=%d"</literal></expr></argument>,

                        <argument pos:start="89:25" pos:end="89:41"><expr pos:start="89:25" pos:end="89:41"><name pos:start="89:25" pos:end="89:41"><name pos:start="89:25" pos:end="89:31">rtsp_st</name><operator pos:start="89:32" pos:end="89:33">-&gt;</operator><name pos:start="89:34" pos:end="89:41">sdp_port</name></name></expr></argument>, <argument pos:start="89:44" pos:end="89:59"><expr pos:start="89:44" pos:end="89:59"><name pos:start="89:44" pos:end="89:59"><name pos:start="89:44" pos:end="89:50">rtsp_st</name><operator pos:start="89:51" pos:end="89:52">-&gt;</operator><name pos:start="89:53" pos:end="89:59">sdp_ttl</name></name></expr></argument>,

                        <argument pos:start="91:25" pos:end="91:69"><expr pos:start="91:25" pos:end="91:69"><ternary pos:start="91:25" pos:end="91:69"><condition pos:start="91:25" pos:end="91:63"><expr pos:start="91:25" pos:end="91:61"><name pos:start="91:25" pos:end="91:38"><name pos:start="91:25" pos:end="91:26">rt</name><operator pos:start="91:27" pos:end="91:28">-&gt;</operator><name pos:start="91:29" pos:end="91:38">rtsp_flags</name></name> <operator pos:start="91:40" pos:end="91:40">&amp;</operator> <name pos:start="91:42" pos:end="91:61">RTSP_FLAG_FILTER_SRC</name></expr> ?</condition><then pos:start="91:65" pos:end="91:65"> <expr pos:start="91:65" pos:end="91:65"><literal type="number" pos:start="91:65" pos:end="91:65">1</literal></expr> </then><else pos:start="91:67" pos:end="91:69">: <expr pos:start="91:69" pos:end="91:69"><literal type="number" pos:start="91:69" pos:end="91:69">0</literal></expr></else></ternary></expr></argument>,

                        <argument pos:start="93:25" pos:end="93:73"><expr pos:start="93:25" pos:end="93:73"><ternary pos:start="93:25" pos:end="93:73"><condition pos:start="93:25" pos:end="93:67"><expr pos:start="93:25" pos:end="93:65"><name pos:start="93:25" pos:end="93:38"><name pos:start="93:25" pos:end="93:26">rt</name><operator pos:start="93:27" pos:end="93:28">-&gt;</operator><name pos:start="93:29" pos:end="93:38">rtsp_flags</name></name> <operator pos:start="93:40" pos:end="93:40">&amp;</operator> <name pos:start="93:42" pos:end="93:65">RTSP_FLAG_RTCP_TO_SOURCE</name></expr> ?</condition><then pos:start="93:69" pos:end="93:69"> <expr pos:start="93:69" pos:end="93:69"><literal type="number" pos:start="93:69" pos:end="93:69">1</literal></expr> </then><else pos:start="93:71" pos:end="93:73">: <expr pos:start="93:73" pos:end="93:73"><literal type="number" pos:start="93:73" pos:end="93:73">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="97:13" pos:end="101:63"><expr pos:start="97:13" pos:end="101:62"><call pos:start="97:13" pos:end="101:62"><name pos:start="97:13" pos:end="97:31">append_source_addrs</name><argument_list pos:start="97:32" pos:end="101:62">(<argument pos:start="97:33" pos:end="97:35"><expr pos:start="97:33" pos:end="97:35"><name pos:start="97:33" pos:end="97:35">url</name></expr></argument>, <argument pos:start="97:38" pos:end="97:48"><expr pos:start="97:38" pos:end="97:48"><sizeof pos:start="97:38" pos:end="97:48">sizeof<argument_list pos:start="97:44" pos:end="97:48">(<argument pos:start="97:45" pos:end="97:47"><expr pos:start="97:45" pos:end="97:47"><name pos:start="97:45" pos:end="97:47">url</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="97:51" pos:end="97:59"><expr pos:start="97:51" pos:end="97:59"><literal type="string" pos:start="97:51" pos:end="97:59">"sources"</literal></expr></argument>,

                                <argument pos:start="99:33" pos:end="99:64"><expr pos:start="99:33" pos:end="99:64"><name pos:start="99:33" pos:end="99:64"><name pos:start="99:33" pos:end="99:39">rtsp_st</name><operator pos:start="99:40" pos:end="99:41">-&gt;</operator><name pos:start="99:42" pos:end="99:64">nb_include_source_addrs</name></name></expr></argument>,

                                <argument pos:start="101:33" pos:end="101:61"><expr pos:start="101:33" pos:end="101:61"><name pos:start="101:33" pos:end="101:61"><name pos:start="101:33" pos:end="101:39">rtsp_st</name><operator pos:start="101:40" pos:end="101:41">-&gt;</operator><name pos:start="101:42" pos:end="101:61">include_source_addrs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="107:63"><expr pos:start="103:13" pos:end="107:62"><call pos:start="103:13" pos:end="107:62"><name pos:start="103:13" pos:end="103:31">append_source_addrs</name><argument_list pos:start="103:32" pos:end="107:62">(<argument pos:start="103:33" pos:end="103:35"><expr pos:start="103:33" pos:end="103:35"><name pos:start="103:33" pos:end="103:35">url</name></expr></argument>, <argument pos:start="103:38" pos:end="103:48"><expr pos:start="103:38" pos:end="103:48"><sizeof pos:start="103:38" pos:end="103:48">sizeof<argument_list pos:start="103:44" pos:end="103:48">(<argument pos:start="103:45" pos:end="103:47"><expr pos:start="103:45" pos:end="103:47"><name pos:start="103:45" pos:end="103:47">url</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="103:51" pos:end="103:57"><expr pos:start="103:51" pos:end="103:57"><literal type="string" pos:start="103:51" pos:end="103:57">"block"</literal></expr></argument>,

                                <argument pos:start="105:33" pos:end="105:64"><expr pos:start="105:33" pos:end="105:64"><name pos:start="105:33" pos:end="105:64"><name pos:start="105:33" pos:end="105:39">rtsp_st</name><operator pos:start="105:40" pos:end="105:41">-&gt;</operator><name pos:start="105:42" pos:end="105:64">nb_exclude_source_addrs</name></name></expr></argument>,

                                <argument pos:start="107:33" pos:end="107:61"><expr pos:start="107:33" pos:end="107:61"><name pos:start="107:33" pos:end="107:61"><name pos:start="107:33" pos:end="107:39">rtsp_st</name><operator pos:start="107:40" pos:end="107:41">-&gt;</operator><name pos:start="107:42" pos:end="107:61">exclude_source_addrs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="111:58"><expr pos:start="109:13" pos:end="111:57"><name pos:start="109:13" pos:end="109:15">err</name> <operator pos:start="109:17" pos:end="109:17">=</operator> <call pos:start="109:19" pos:end="111:57"><name pos:start="109:19" pos:end="109:28">ffurl_open</name><argument_list pos:start="109:29" pos:end="111:57">(<argument pos:start="109:30" pos:end="109:49"><expr pos:start="109:30" pos:end="109:49"><operator pos:start="109:30" pos:end="109:30">&amp;</operator><name pos:start="109:31" pos:end="109:49"><name pos:start="109:31" pos:end="109:37">rtsp_st</name><operator pos:start="109:38" pos:end="109:39">-&gt;</operator><name pos:start="109:40" pos:end="109:49">rtp_handle</name></name></expr></argument>, <argument pos:start="109:52" pos:end="109:54"><expr pos:start="109:52" pos:end="109:54"><name pos:start="109:52" pos:end="109:54">url</name></expr></argument>, <argument pos:start="109:57" pos:end="109:76"><expr pos:start="109:57" pos:end="109:76"><name pos:start="109:57" pos:end="109:76">AVIO_FLAG_READ_WRITE</name></expr></argument>,

                           <argument pos:start="111:28" pos:end="111:49"><expr pos:start="111:28" pos:end="111:49"><operator pos:start="111:28" pos:end="111:28">&amp;</operator><name pos:start="111:29" pos:end="111:49"><name pos:start="111:29" pos:end="111:29">s</name><operator pos:start="111:30" pos:end="111:31">-&gt;</operator><name pos:start="111:32" pos:end="111:49">interrupt_callback</name></name></expr></argument>, <argument pos:start="111:52" pos:end="111:56"><expr pos:start="111:52" pos:end="111:56"><operator pos:start="111:52" pos:end="111:52">&amp;</operator><name pos:start="111:53" pos:end="111:56">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="115:13" pos:end="115:32"><expr pos:start="115:13" pos:end="115:31"><call pos:start="115:13" pos:end="115:31"><name pos:start="115:13" pos:end="115:24">av_dict_free</name><argument_list pos:start="115:25" pos:end="115:31">(<argument pos:start="115:26" pos:end="115:30"><expr pos:start="115:26" pos:end="115:30"><operator pos:start="115:26" pos:end="115:26">&amp;</operator><name pos:start="115:27" pos:end="115:30">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="119:13" pos:end="125:13"><if pos:start="119:13" pos:end="125:13">if <condition pos:start="119:16" pos:end="119:24">(<expr pos:start="119:17" pos:end="119:23"><name pos:start="119:17" pos:end="119:19">err</name> <operator pos:start="119:21" pos:end="119:21">&lt;</operator> <literal type="number" pos:start="119:23" pos:end="119:23">0</literal></expr>)</condition> <block pos:start="119:26" pos:end="125:13">{<block_content pos:start="121:17" pos:end="123:26">

                <expr_stmt pos:start="121:17" pos:end="121:42"><expr pos:start="121:17" pos:end="121:41"><name pos:start="121:17" pos:end="121:19">err</name> <operator pos:start="121:21" pos:end="121:21">=</operator> <name pos:start="121:23" pos:end="121:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="123:17" pos:end="123:26">goto <name pos:start="123:22" pos:end="123:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="129:9" pos:end="131:22"><if pos:start="129:9" pos:end="131:22">if <condition pos:start="129:12" pos:end="129:59">(<expr pos:start="129:13" pos:end="129:58"><operator pos:start="129:13" pos:end="129:13">(</operator><name pos:start="129:14" pos:end="129:16">err</name> <operator pos:start="129:18" pos:end="129:18">=</operator> <call pos:start="129:20" pos:end="129:57"><name pos:start="129:20" pos:end="129:45">ff_rtsp_open_transport_ctx</name><argument_list pos:start="129:46" pos:end="129:57">(<argument pos:start="129:47" pos:end="129:47"><expr pos:start="129:47" pos:end="129:47"><name pos:start="129:47" pos:end="129:47">s</name></expr></argument>, <argument pos:start="129:50" pos:end="129:56"><expr pos:start="129:50" pos:end="129:56"><name pos:start="129:50" pos:end="129:56">rtsp_st</name></expr></argument>)</argument_list></call><operator pos:start="129:58" pos:end="129:58">)</operator></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:22"><block_content pos:start="131:13" pos:end="131:22">

            <goto pos:start="131:13" pos:end="131:22">goto <name pos:start="131:18" pos:end="131:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="135:5" pos:end="135:13">return <expr pos:start="135:12" pos:end="135:12"><literal type="number" pos:start="135:12" pos:end="135:12">0</literal></expr>;</return>

<label pos:start="137:1" pos:end="137:5"><name pos:start="137:1" pos:end="137:4">fail</name>:</label>

    <expr_stmt pos:start="139:5" pos:end="139:29"><expr pos:start="139:5" pos:end="139:28"><call pos:start="139:5" pos:end="139:28"><name pos:start="139:5" pos:end="139:25">ff_rtsp_close_streams</name><argument_list pos:start="139:26" pos:end="139:28">(<argument pos:start="139:27" pos:end="139:27"><expr pos:start="139:27" pos:end="139:27"><name pos:start="139:27" pos:end="139:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:23"><expr pos:start="141:5" pos:end="141:22"><call pos:start="141:5" pos:end="141:22"><name pos:start="141:5" pos:end="141:20">ff_network_close</name><argument_list pos:start="141:21" pos:end="141:22">()</argument_list></call></expr>;</expr_stmt>

    <return pos:start="143:5" pos:end="143:15">return <expr pos:start="143:12" pos:end="143:14"><name pos:start="143:12" pos:end="143:14">err</name></expr>;</return>

</block_content>}</block></function></unit>
