<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21336.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">do_snapshot_blkdev</name><parameter_list pos:start="1:23" pos:end="1:76">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:35"><name pos:start="1:24" pos:end="1:30">Monitor</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">mon</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:55"><decl pos:start="1:38" pos:end="1:55"><type pos:start="1:38" pos:end="1:55"><specifier pos:start="1:38" pos:end="1:42">const</specifier> <name pos:start="1:44" pos:end="1:48">QDict</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:55">qdict</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:75"><decl pos:start="1:58" pos:end="1:75"><type pos:start="1:58" pos:end="1:75"><name pos:start="1:58" pos:end="1:64">QObject</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier><modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:75">ret_data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="133:1">{<block_content pos:start="5:5" pos:end="131:15">

    <decl_stmt pos:start="5:5" pos:end="5:56"><decl pos:start="5:5" pos:end="5:55"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:22">device</name> <init pos:start="5:24" pos:end="5:55">= <expr pos:start="5:26" pos:end="5:55"><call pos:start="5:26" pos:end="5:55"><name pos:start="5:26" pos:end="5:38">qdict_get_str</name><argument_list pos:start="5:39" pos:end="5:55">(<argument pos:start="5:40" pos:end="5:44"><expr pos:start="5:40" pos:end="5:44"><name pos:start="5:40" pos:end="5:44">qdict</name></expr></argument>, <argument pos:start="5:47" pos:end="5:54"><expr pos:start="5:47" pos:end="5:54"><literal type="string" pos:start="5:47" pos:end="5:54">"device"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:69"><decl pos:start="7:5" pos:end="7:68"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:24">filename</name> <init pos:start="7:26" pos:end="7:68">= <expr pos:start="7:28" pos:end="7:68"><call pos:start="7:28" pos:end="7:68"><name pos:start="7:28" pos:end="7:44">qdict_get_try_str</name><argument_list pos:start="7:45" pos:end="7:68">(<argument pos:start="7:46" pos:end="7:50"><expr pos:start="7:46" pos:end="7:50"><name pos:start="7:46" pos:end="7:50">qdict</name></expr></argument>, <argument pos:start="7:53" pos:end="7:67"><expr pos:start="7:53" pos:end="7:67"><literal type="string" pos:start="7:53" pos:end="7:67">"snapshot_file"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:60"><decl pos:start="9:5" pos:end="9:59"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:22">format</name> <init pos:start="9:24" pos:end="9:59">= <expr pos:start="9:26" pos:end="9:59"><call pos:start="9:26" pos:end="9:59"><name pos:start="9:26" pos:end="9:42">qdict_get_try_str</name><argument_list pos:start="9:43" pos:end="9:59">(<argument pos:start="9:44" pos:end="9:48"><expr pos:start="9:44" pos:end="9:48"><name pos:start="9:44" pos:end="9:48">qdict</name></expr></argument>, <argument pos:start="9:51" pos:end="9:58"><expr pos:start="9:51" pos:end="9:58"><literal type="string" pos:start="9:51" pos:end="9:58">"format"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">BlockDriverState</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">BlockDriver</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:20">drv</name></decl>, <decl pos:start="13:23" pos:end="13:32"><type ref="prev" pos:start="13:5" pos:end="13:17"><modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:32">proto_drv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name> <init pos:start="15:13" pos:end="15:15">= <expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:14"><decl pos:start="17:5" pos:end="17:13"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:13">flags</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:18">(<expr pos:start="21:9" pos:end="21:17"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:17">filename</name></expr>)</condition> <block pos:start="21:20" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:17">

        <expr_stmt pos:start="23:9" pos:end="23:63"><expr pos:start="23:9" pos:end="23:62"><call pos:start="23:9" pos:end="23:62"><name pos:start="23:9" pos:end="23:21">qerror_report</name><argument_list pos:start="23:22" pos:end="23:62">(<argument pos:start="23:23" pos:end="23:44"><expr pos:start="23:23" pos:end="23:44"><name pos:start="23:23" pos:end="23:44">QERR_MISSING_PARAMETER</name></expr></argument>, <argument pos:start="23:47" pos:end="23:61"><expr pos:start="23:47" pos:end="23:61"><literal type="string" pos:start="23:47" pos:end="23:61">"snapshot_file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:17"><expr pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <operator pos:start="25:15" pos:end="25:15">-</operator><literal type="number" pos:start="25:16" pos:end="25:16">1</literal></expr>;</expr_stmt>

        <goto pos:start="27:9" pos:end="27:17">goto <name pos:start="27:14" pos:end="27:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:27"><expr pos:start="33:5" pos:end="33:26"><name pos:start="33:5" pos:end="33:6">bs</name> <operator pos:start="33:8" pos:end="33:8">=</operator> <call pos:start="33:10" pos:end="33:26"><name pos:start="33:10" pos:end="33:18">bdrv_find</name><argument_list pos:start="33:19" pos:end="33:26">(<argument pos:start="33:20" pos:end="33:25"><expr pos:start="33:20" pos:end="33:25"><name pos:start="33:20" pos:end="33:25">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="35:12">(<expr pos:start="35:9" pos:end="35:11"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:11">bs</name></expr>)</condition> <block pos:start="35:14" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:17">

        <expr_stmt pos:start="37:9" pos:end="37:53"><expr pos:start="37:9" pos:end="37:52"><call pos:start="37:9" pos:end="37:52"><name pos:start="37:9" pos:end="37:21">qerror_report</name><argument_list pos:start="37:22" pos:end="37:52">(<argument pos:start="37:23" pos:end="37:43"><expr pos:start="37:23" pos:end="37:43"><name pos:start="37:23" pos:end="37:43">QERR_DEVICE_NOT_FOUND</name></expr></argument>, <argument pos:start="37:46" pos:end="37:51"><expr pos:start="37:46" pos:end="37:51"><name pos:start="37:46" pos:end="37:51">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:17"><expr pos:start="39:9" pos:end="39:16"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <operator pos:start="39:15" pos:end="39:15">-</operator><literal type="number" pos:start="39:16" pos:end="39:16">1</literal></expr>;</expr_stmt>

        <goto pos:start="41:9" pos:end="41:17">goto <name pos:start="41:14" pos:end="41:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:16">(<expr pos:start="47:9" pos:end="47:15"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:15">format</name></expr>)</condition> <block pos:start="47:18" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:25">

        <expr_stmt pos:start="49:9" pos:end="49:25"><expr pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:14">format</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <literal type="string" pos:start="49:18" pos:end="49:24">"qcow2"</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:35"><expr pos:start="55:5" pos:end="55:34"><name pos:start="55:5" pos:end="55:7">drv</name> <operator pos:start="55:9" pos:end="55:9">=</operator> <call pos:start="55:11" pos:end="55:34"><name pos:start="55:11" pos:end="55:26">bdrv_find_format</name><argument_list pos:start="55:27" pos:end="55:34">(<argument pos:start="55:28" pos:end="55:33"><expr pos:start="55:28" pos:end="55:33"><name pos:start="55:28" pos:end="55:33">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="65:5"><if pos:start="57:5" pos:end="65:5">if <condition pos:start="57:8" pos:end="57:13">(<expr pos:start="57:9" pos:end="57:12"><operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:12">drv</name></expr>)</condition> <block pos:start="57:15" pos:end="65:5">{<block_content pos:start="59:9" pos:end="63:17">

        <expr_stmt pos:start="59:9" pos:end="59:57"><expr pos:start="59:9" pos:end="59:56"><call pos:start="59:9" pos:end="59:56"><name pos:start="59:9" pos:end="59:21">qerror_report</name><argument_list pos:start="59:22" pos:end="59:56">(<argument pos:start="59:23" pos:end="59:47"><expr pos:start="59:23" pos:end="59:47"><name pos:start="59:23" pos:end="59:47">QERR_INVALID_BLOCK_FORMAT</name></expr></argument>, <argument pos:start="59:50" pos:end="59:55"><expr pos:start="59:50" pos:end="59:55"><name pos:start="59:50" pos:end="59:55">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:17"><expr pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:11">ret</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <operator pos:start="61:15" pos:end="61:15">-</operator><literal type="number" pos:start="61:16" pos:end="61:16">1</literal></expr>;</expr_stmt>

        <goto pos:start="63:9" pos:end="63:17">goto <name pos:start="63:14" pos:end="63:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:45"><expr pos:start="69:5" pos:end="69:44"><name pos:start="69:5" pos:end="69:13">proto_drv</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <call pos:start="69:17" pos:end="69:44"><name pos:start="69:17" pos:end="69:34">bdrv_find_protocol</name><argument_list pos:start="69:35" pos:end="69:44">(<argument pos:start="69:36" pos:end="69:43"><expr pos:start="69:36" pos:end="69:43"><name pos:start="69:36" pos:end="69:43">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="79:5"><if pos:start="71:5" pos:end="79:5">if <condition pos:start="71:8" pos:end="71:19">(<expr pos:start="71:9" pos:end="71:18"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:18">proto_drv</name></expr>)</condition> <block pos:start="71:21" pos:end="79:5">{<block_content pos:start="73:9" pos:end="77:17">

        <expr_stmt pos:start="73:9" pos:end="73:57"><expr pos:start="73:9" pos:end="73:56"><call pos:start="73:9" pos:end="73:56"><name pos:start="73:9" pos:end="73:21">qerror_report</name><argument_list pos:start="73:22" pos:end="73:56">(<argument pos:start="73:23" pos:end="73:47"><expr pos:start="73:23" pos:end="73:47"><name pos:start="73:23" pos:end="73:47">QERR_INVALID_BLOCK_FORMAT</name></expr></argument>, <argument pos:start="73:50" pos:end="73:55"><expr pos:start="73:50" pos:end="73:55"><name pos:start="73:50" pos:end="73:55">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:17"><expr pos:start="75:9" pos:end="75:16"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <operator pos:start="75:15" pos:end="75:15">-</operator><literal type="number" pos:start="75:16" pos:end="75:16">1</literal></expr>;</expr_stmt>

        <goto pos:start="77:9" pos:end="77:17">goto <name pos:start="77:14" pos:end="77:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="85:74"><expr pos:start="83:5" pos:end="85:73"><name pos:start="83:5" pos:end="83:7">ret</name> <operator pos:start="83:9" pos:end="83:9">=</operator> <call pos:start="83:11" pos:end="85:73"><name pos:start="83:11" pos:end="83:25">bdrv_img_create</name><argument_list pos:start="83:26" pos:end="85:73">(<argument pos:start="83:27" pos:end="83:34"><expr pos:start="83:27" pos:end="83:34"><name pos:start="83:27" pos:end="83:34">filename</name></expr></argument>, <argument pos:start="83:37" pos:end="83:42"><expr pos:start="83:37" pos:end="83:42"><name pos:start="83:37" pos:end="83:42">format</name></expr></argument>, <argument pos:start="83:45" pos:end="83:56"><expr pos:start="83:45" pos:end="83:56"><name pos:start="83:45" pos:end="83:56"><name pos:start="83:45" pos:end="83:46">bs</name><operator pos:start="83:47" pos:end="83:48">-&gt;</operator><name pos:start="83:49" pos:end="83:56">filename</name></name></expr></argument>,

                          <argument pos:start="85:27" pos:end="85:46"><expr pos:start="85:27" pos:end="85:46"><name pos:start="85:27" pos:end="85:46"><name pos:start="85:27" pos:end="85:28">bs</name><operator pos:start="85:29" pos:end="85:30">-&gt;</operator><name pos:start="85:31" pos:end="85:33">drv</name><operator pos:start="85:34" pos:end="85:35">-&gt;</operator><name pos:start="85:36" pos:end="85:46">format_name</name></name></expr></argument>, <argument pos:start="85:49" pos:end="85:52"><expr pos:start="85:49" pos:end="85:52"><name pos:start="85:49" pos:end="85:52">NULL</name></expr></argument>, <argument pos:start="85:55" pos:end="85:56"><expr pos:start="85:55" pos:end="85:56"><operator pos:start="85:55" pos:end="85:55">-</operator><literal type="number" pos:start="85:56" pos:end="85:56">1</literal></expr></argument>, <argument pos:start="85:59" pos:end="85:72"><expr pos:start="85:59" pos:end="85:72"><name pos:start="85:59" pos:end="85:72"><name pos:start="85:59" pos:end="85:60">bs</name><operator pos:start="85:61" pos:end="85:62">-&gt;</operator><name pos:start="85:63" pos:end="85:72">open_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="91:5"><if pos:start="87:5" pos:end="91:5">if <condition pos:start="87:8" pos:end="87:12">(<expr pos:start="87:9" pos:end="87:11"><name pos:start="87:9" pos:end="87:11">ret</name></expr>)</condition> <block pos:start="87:14" pos:end="91:5">{<block_content pos:start="89:9" pos:end="89:17">

        <goto pos:start="89:9" pos:end="89:17">goto <name pos:start="89:14" pos:end="89:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:21"><expr pos:start="95:5" pos:end="95:20"><call pos:start="95:5" pos:end="95:20"><name pos:start="95:5" pos:end="95:18">qemu_aio_flush</name><argument_list pos:start="95:19" pos:end="95:20">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:19"><expr pos:start="97:5" pos:end="97:18"><call pos:start="97:5" pos:end="97:18"><name pos:start="97:5" pos:end="97:14">bdrv_flush</name><argument_list pos:start="97:15" pos:end="97:18">(<argument pos:start="97:16" pos:end="97:17"><expr pos:start="97:16" pos:end="97:17"><name pos:start="97:16" pos:end="97:17">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:27"><expr pos:start="101:5" pos:end="101:26"><name pos:start="101:5" pos:end="101:9">flags</name> <operator pos:start="101:11" pos:end="101:11">=</operator> <name pos:start="101:13" pos:end="101:26"><name pos:start="101:13" pos:end="101:14">bs</name><operator pos:start="101:15" pos:end="101:16">-&gt;</operator><name pos:start="101:17" pos:end="101:26">open_flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:19"><expr pos:start="103:5" pos:end="103:18"><call pos:start="103:5" pos:end="103:18"><name pos:start="103:5" pos:end="103:14">bdrv_close</name><argument_list pos:start="103:15" pos:end="103:18">(<argument pos:start="103:16" pos:end="103:17"><expr pos:start="103:16" pos:end="103:17"><name pos:start="103:16" pos:end="103:17">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:46"><expr pos:start="105:5" pos:end="105:45"><name pos:start="105:5" pos:end="105:7">ret</name> <operator pos:start="105:9" pos:end="105:9">=</operator> <call pos:start="105:11" pos:end="105:45"><name pos:start="105:11" pos:end="105:19">bdrv_open</name><argument_list pos:start="105:20" pos:end="105:45">(<argument pos:start="105:21" pos:end="105:22"><expr pos:start="105:21" pos:end="105:22"><name pos:start="105:21" pos:end="105:22">bs</name></expr></argument>, <argument pos:start="105:25" pos:end="105:32"><expr pos:start="105:25" pos:end="105:32"><name pos:start="105:25" pos:end="105:32">filename</name></expr></argument>, <argument pos:start="105:35" pos:end="105:39"><expr pos:start="105:35" pos:end="105:39"><name pos:start="105:35" pos:end="105:39">flags</name></expr></argument>, <argument pos:start="105:42" pos:end="105:44"><expr pos:start="105:42" pos:end="105:44"><name pos:start="105:42" pos:end="105:44">drv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="107:5" pos:end="113:7">/*

     * If reopening the image file we just created fails, we really

     * are in trouble :(

     */</comment>

    <if_stmt pos:start="115:5" pos:end="119:5"><if pos:start="115:5" pos:end="119:5">if <condition pos:start="115:8" pos:end="115:17">(<expr pos:start="115:9" pos:end="115:16"><name pos:start="115:9" pos:end="115:11">ret</name> <operator pos:start="115:13" pos:end="115:14">!=</operator> <literal type="number" pos:start="115:16" pos:end="115:16">0</literal></expr>)</condition> <block pos:start="115:19" pos:end="119:5">{<block_content pos:start="117:9" pos:end="117:16">

        <expr_stmt pos:start="117:9" pos:end="117:16"><expr pos:start="117:9" pos:end="117:15"><call pos:start="117:9" pos:end="117:15"><name pos:start="117:9" pos:end="117:13">abort</name><argument_list pos:start="117:14" pos:end="117:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<label pos:start="121:1" pos:end="121:4"><name pos:start="121:1" pos:end="121:3">out</name>:</label>

    <if_stmt pos:start="123:5" pos:end="127:5"><if pos:start="123:5" pos:end="127:5">if <condition pos:start="123:8" pos:end="123:12">(<expr pos:start="123:9" pos:end="123:11"><name pos:start="123:9" pos:end="123:11">ret</name></expr>)</condition> <block pos:start="123:14" pos:end="127:5">{<block_content pos:start="125:9" pos:end="125:17">

        <expr_stmt pos:start="125:9" pos:end="125:17"><expr pos:start="125:9" pos:end="125:16"><name pos:start="125:9" pos:end="125:11">ret</name> <operator pos:start="125:13" pos:end="125:13">=</operator> <operator pos:start="125:15" pos:end="125:15">-</operator><literal type="number" pos:start="125:16" pos:end="125:16">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="131:5" pos:end="131:15">return <expr pos:start="131:12" pos:end="131:14"><name pos:start="131:12" pos:end="131:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
