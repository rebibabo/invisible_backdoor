<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22064.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">find_and_check_chardev</name><parameter_list pos:start="1:34" pos:end="5:47">(<parameter pos:start="1:35" pos:end="1:55"><decl pos:start="1:35" pos:end="1:55"><type pos:start="1:35" pos:end="1:55"><name pos:start="1:35" pos:end="1:49">CharDriverState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier><modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">chr</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:48"><decl pos:start="3:35" pos:end="3:48"><type pos:start="3:35" pos:end="3:48"><name pos:start="3:35" pos:end="3:38">char</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:48">chr_name</name></decl></parameter>,

                                  <parameter pos:start="5:35" pos:end="5:46"><decl pos:start="5:35" pos:end="5:46"><type pos:start="5:35" pos:end="5:46"><name pos:start="5:35" pos:end="5:39">Error</name> <modifier pos:start="5:41" pos:end="5:41">*</modifier><modifier pos:start="5:42" pos:end="5:42">*</modifier></type><name pos:start="5:43" pos:end="5:46">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="49:1">{<block_content pos:start="9:5" pos:end="47:13">

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:23">CompareChardevProps</name></type> <name pos:start="9:25" pos:end="9:29">props</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:35"><expr pos:start="13:5" pos:end="13:34"><operator pos:start="13:5" pos:end="13:5">*</operator><name pos:start="13:6" pos:end="13:8">chr</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:34"><name pos:start="13:12" pos:end="13:24">qemu_chr_find</name><argument_list pos:start="13:25" pos:end="13:34">(<argument pos:start="13:26" pos:end="13:33"><expr pos:start="13:26" pos:end="13:33"><name pos:start="13:26" pos:end="13:33">chr_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:21">(<expr pos:start="15:9" pos:end="15:20"><operator pos:start="15:9" pos:end="15:9">*</operator><name pos:start="15:10" pos:end="15:12">chr</name> <operator pos:start="15:14" pos:end="15:15">==</operator> <name pos:start="15:17" pos:end="15:20">NULL</name></expr>)</condition> <block pos:start="15:23" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:17">

        <expr_stmt pos:start="17:9" pos:end="19:29"><expr pos:start="17:9" pos:end="19:28"><call pos:start="17:9" pos:end="19:28"><name pos:start="17:9" pos:end="17:18">error_setg</name><argument_list pos:start="17:19" pos:end="19:28">(<argument pos:start="17:20" pos:end="17:23"><expr pos:start="17:20" pos:end="17:23"><name pos:start="17:20" pos:end="17:23">errp</name></expr></argument>, <argument pos:start="17:26" pos:end="17:48"><expr pos:start="17:26" pos:end="17:48"><literal type="string" pos:start="17:26" pos:end="17:48">"Device '%s' not found"</literal></expr></argument>,

                   <argument pos:start="19:20" pos:end="19:27"><expr pos:start="19:20" pos:end="19:27"><name pos:start="19:20" pos:end="19:27">chr_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:37"><expr pos:start="27:5" pos:end="27:36"><call pos:start="27:5" pos:end="27:36"><name pos:start="27:5" pos:end="27:10">memset</name><argument_list pos:start="27:11" pos:end="27:36">(<argument pos:start="27:12" pos:end="27:17"><expr pos:start="27:12" pos:end="27:17"><operator pos:start="27:12" pos:end="27:12">&amp;</operator><name pos:start="27:13" pos:end="27:17">props</name></expr></argument>, <argument pos:start="27:20" pos:end="27:20"><expr pos:start="27:20" pos:end="27:20"><literal type="number" pos:start="27:20" pos:end="27:20">0</literal></expr></argument>, <argument pos:start="27:23" pos:end="27:35"><expr pos:start="27:23" pos:end="27:35"><sizeof pos:start="27:23" pos:end="27:35">sizeof<argument_list pos:start="27:29" pos:end="27:35">(<argument pos:start="27:30" pos:end="27:34"><expr pos:start="27:30" pos:end="27:34"><name pos:start="27:30" pos:end="27:34">props</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:75">(<expr pos:start="29:9" pos:end="29:74"><call pos:start="29:9" pos:end="29:74"><name pos:start="29:9" pos:end="29:24">qemu_opt_foreach</name><argument_list pos:start="29:25" pos:end="29:74">(<argument pos:start="29:26" pos:end="29:37"><expr pos:start="29:26" pos:end="29:37"><name pos:start="29:26" pos:end="29:37"><operator pos:start="29:26" pos:end="29:26">(</operator><operator pos:start="29:27" pos:end="29:27">*</operator><name pos:start="29:28" pos:end="29:30">chr</name><operator pos:start="29:31" pos:end="29:31">)</operator><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:37">opts</name></name></expr></argument>, <argument pos:start="29:40" pos:end="29:59"><expr pos:start="29:40" pos:end="29:59"><name pos:start="29:40" pos:end="29:59">compare_chardev_opts</name></expr></argument>, <argument pos:start="29:62" pos:end="29:67"><expr pos:start="29:62" pos:end="29:67"><operator pos:start="29:62" pos:end="29:62">&amp;</operator><name pos:start="29:63" pos:end="29:67">props</name></expr></argument>, <argument pos:start="29:70" pos:end="29:73"><expr pos:start="29:70" pos:end="29:73"><name pos:start="29:70" pos:end="29:73">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:77" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:17">

        <return pos:start="31:9" pos:end="31:17">return <expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="37:25">(<expr pos:start="37:9" pos:end="37:24"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:24"><name pos:start="37:10" pos:end="37:14">props</name><operator pos:start="37:15" pos:end="37:15">.</operator><name pos:start="37:16" pos:end="37:24">is_socket</name></name></expr>)</condition> <block pos:start="37:27" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:17">

        <expr_stmt pos:start="39:9" pos:end="41:29"><expr pos:start="39:9" pos:end="41:28"><call pos:start="39:9" pos:end="41:28"><name pos:start="39:9" pos:end="39:18">error_setg</name><argument_list pos:start="39:19" pos:end="41:28">(<argument pos:start="39:20" pos:end="39:23"><expr pos:start="39:20" pos:end="39:23"><name pos:start="39:20" pos:end="39:23">errp</name></expr></argument>, <argument pos:start="39:26" pos:end="39:61"><expr pos:start="39:26" pos:end="39:61"><literal type="string" pos:start="39:26" pos:end="39:61">"chardev \"%s\" is not a tcp socket"</literal></expr></argument>,

                   <argument pos:start="41:20" pos:end="41:27"><expr pos:start="41:20" pos:end="41:27"><name pos:start="41:20" pos:end="41:27">chr_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:17">return <expr pos:start="43:16" pos:end="43:16"><literal type="number" pos:start="43:16" pos:end="43:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
