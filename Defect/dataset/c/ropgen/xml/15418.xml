<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15418.c" pos:tabs="8"><function pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">pl181_fifo_run</name><parameter_list pos:start="1:27" pos:end="1:42">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:38">pl181_state</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="151:1">{<block_content pos:start="5:5" pos:end="149:5">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:17">bits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:18">value</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">limit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:15">is_read</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:56"><expr pos:start="17:5" pos:end="17:55"><name pos:start="17:5" pos:end="17:11">is_read</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <operator pos:start="17:15" pos:end="17:15">(</operator><name pos:start="17:16" pos:end="17:26"><name pos:start="17:16" pos:end="17:16">s</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:26">datactrl</name></name> <operator pos:start="17:28" pos:end="17:28">&amp;</operator> <name pos:start="17:30" pos:end="17:49">PL181_DATA_DIRECTION</name><operator pos:start="17:50" pos:end="17:50">)</operator> <operator pos:start="17:52" pos:end="17:53">!=</operator> <literal type="number" pos:start="17:55" pos:end="17:55">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="75:5"><if pos:start="19:5" pos:end="75:5">if <condition pos:start="19:8" pos:end="21:30">(<expr pos:start="19:9" pos:end="21:29"><name pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:18">datacnt</name></name> <operator pos:start="19:20" pos:end="19:21">!=</operator> <literal type="number" pos:start="19:23" pos:end="19:23">0</literal> <operator pos:start="19:25" pos:end="19:26">&amp;&amp;</operator> <operator pos:start="19:28" pos:end="19:28">(</operator><operator pos:start="19:29" pos:end="19:29">!</operator><name pos:start="19:30" pos:end="19:36">is_read</name> <operator pos:start="19:38" pos:end="19:39">||</operator> <call pos:start="19:41" pos:end="19:62"><name pos:start="19:41" pos:end="19:53">sd_data_ready</name><argument_list pos:start="19:54" pos:end="19:62">(<argument pos:start="19:55" pos:end="19:61"><expr pos:start="19:55" pos:end="19:61"><name pos:start="19:55" pos:end="19:61"><name pos:start="19:55" pos:end="19:55">s</name><operator pos:start="19:56" pos:end="19:57">-&gt;</operator><name pos:start="19:58" pos:end="19:61">card</name></name></expr></argument>)</argument_list></call><operator pos:start="19:63" pos:end="19:63">)</operator>

            <operator pos:start="21:13" pos:end="21:14">&amp;&amp;</operator> <operator pos:start="21:16" pos:end="21:16">!</operator><name pos:start="21:17" pos:end="21:29"><name pos:start="21:17" pos:end="21:17">s</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:29">linux_hack</name></name></expr>)</condition> <block pos:start="21:32" pos:end="75:5">{<block_content pos:start="23:9" pos:end="73:9">

        <expr_stmt pos:start="23:9" pos:end="23:45"><expr pos:start="23:9" pos:end="23:44"><name pos:start="23:9" pos:end="23:13">limit</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <ternary pos:start="23:17" pos:end="23:44"><condition pos:start="23:17" pos:end="23:25"><expr pos:start="23:17" pos:end="23:23"><name pos:start="23:17" pos:end="23:23">is_read</name></expr> ?</condition><then pos:start="23:27" pos:end="23:40"> <expr pos:start="23:27" pos:end="23:40"><name pos:start="23:27" pos:end="23:40">PL181_FIFO_LEN</name></expr> </then><else pos:start="23:42" pos:end="23:44">: <expr pos:start="23:44" pos:end="23:44"><literal type="number" pos:start="23:44" pos:end="23:44">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:14"><expr pos:start="25:9" pos:end="25:13"><name pos:start="25:9" pos:end="25:9">n</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <literal type="number" pos:start="25:13" pos:end="25:13">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:18"><expr pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:13">value</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <literal type="number" pos:start="27:17" pos:end="27:17">0</literal></expr>;</expr_stmt>

        <while pos:start="29:9" pos:end="67:9">while <condition pos:start="29:15" pos:end="29:50">(<expr pos:start="29:16" pos:end="29:49"><name pos:start="29:16" pos:end="29:25"><name pos:start="29:16" pos:end="29:16">s</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:25">datacnt</name></name> <operator pos:start="29:27" pos:end="29:28">&amp;&amp;</operator> <name pos:start="29:30" pos:end="29:40"><name pos:start="29:30" pos:end="29:30">s</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:40">fifo_len</name></name> <operator pos:start="29:42" pos:end="29:43">!=</operator> <name pos:start="29:45" pos:end="29:49">limit</name></expr>)</condition> <block pos:start="29:52" pos:end="67:9">{<block_content pos:start="31:13" pos:end="65:25">

            <if_stmt pos:start="31:13" pos:end="63:13"><if pos:start="31:13" pos:end="47:13">if <condition pos:start="31:16" pos:end="31:24">(<expr pos:start="31:17" pos:end="31:23"><name pos:start="31:17" pos:end="31:23">is_read</name></expr>)</condition> <block pos:start="31:26" pos:end="47:13">{<block_content pos:start="33:17" pos:end="45:17">

                <expr_stmt pos:start="33:17" pos:end="33:68"><expr pos:start="33:17" pos:end="33:67"><name pos:start="33:17" pos:end="33:21">value</name> <operator pos:start="33:23" pos:end="33:24">|=</operator> <operator pos:start="33:26" pos:end="33:26">(</operator><name pos:start="33:27" pos:end="33:34">uint32_t</name><operator pos:start="33:35" pos:end="33:35">)</operator><call pos:start="33:36" pos:end="33:56"><name pos:start="33:36" pos:end="33:47">sd_read_data</name><argument_list pos:start="33:48" pos:end="33:56">(<argument pos:start="33:49" pos:end="33:55"><expr pos:start="33:49" pos:end="33:55"><name pos:start="33:49" pos:end="33:55"><name pos:start="33:49" pos:end="33:49">s</name><operator pos:start="33:50" pos:end="33:51">-&gt;</operator><name pos:start="33:52" pos:end="33:55">card</name></name></expr></argument>)</argument_list></call> <operator pos:start="33:58" pos:end="33:59">&lt;&lt;</operator> <operator pos:start="33:61" pos:end="33:61">(</operator><name pos:start="33:62" pos:end="33:62">n</name> <operator pos:start="33:64" pos:end="33:64">*</operator> <literal type="number" pos:start="33:66" pos:end="33:66">8</literal><operator pos:start="33:67" pos:end="33:67">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="35:17" pos:end="35:20"><expr pos:start="35:17" pos:end="35:19"><name pos:start="35:17" pos:end="35:17">n</name><operator pos:start="35:18" pos:end="35:19">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="37:17" pos:end="45:17"><if pos:start="37:17" pos:end="45:17">if <condition pos:start="37:20" pos:end="37:27">(<expr pos:start="37:21" pos:end="37:26"><name pos:start="37:21" pos:end="37:21">n</name> <operator pos:start="37:23" pos:end="37:24">==</operator> <literal type="number" pos:start="37:26" pos:end="37:26">4</literal></expr>)</condition> <block pos:start="37:29" pos:end="45:17">{<block_content pos:start="39:21" pos:end="43:26">

                    <expr_stmt pos:start="39:21" pos:end="39:46"><expr pos:start="39:21" pos:end="39:45"><call pos:start="39:21" pos:end="39:45"><name pos:start="39:21" pos:end="39:35">pl181_fifo_push</name><argument_list pos:start="39:36" pos:end="39:45">(<argument pos:start="39:37" pos:end="39:37"><expr pos:start="39:37" pos:end="39:37"><name pos:start="39:37" pos:end="39:37">s</name></expr></argument>, <argument pos:start="39:40" pos:end="39:44"><expr pos:start="39:40" pos:end="39:44"><name pos:start="39:40" pos:end="39:44">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="41:21" pos:end="41:30"><expr pos:start="41:21" pos:end="41:29"><name pos:start="41:21" pos:end="41:25">value</name> <operator pos:start="41:27" pos:end="41:27">=</operator> <literal type="number" pos:start="41:29" pos:end="41:29">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="43:21" pos:end="43:26"><expr pos:start="43:21" pos:end="43:25"><name pos:start="43:21" pos:end="43:21">n</name> <operator pos:start="43:23" pos:end="43:23">=</operator> <literal type="number" pos:start="43:25" pos:end="43:25">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="47:15" pos:end="63:13">else <block pos:start="47:20" pos:end="63:13">{<block_content pos:start="49:17" pos:end="61:20">

                <if_stmt pos:start="49:17" pos:end="55:17"><if pos:start="49:17" pos:end="55:17">if <condition pos:start="49:20" pos:end="49:27">(<expr pos:start="49:21" pos:end="49:26"><name pos:start="49:21" pos:end="49:21">n</name> <operator pos:start="49:23" pos:end="49:24">==</operator> <literal type="number" pos:start="49:26" pos:end="49:26">0</literal></expr>)</condition> <block pos:start="49:29" pos:end="55:17">{<block_content pos:start="51:21" pos:end="53:26">

                    <expr_stmt pos:start="51:21" pos:end="51:46"><expr pos:start="51:21" pos:end="51:45"><name pos:start="51:21" pos:end="51:25">value</name> <operator pos:start="51:27" pos:end="51:27">=</operator> <call pos:start="51:29" pos:end="51:45"><name pos:start="51:29" pos:end="51:42">pl181_fifo_pop</name><argument_list pos:start="51:43" pos:end="51:45">(<argument pos:start="51:44" pos:end="51:44"><expr pos:start="51:44" pos:end="51:44"><name pos:start="51:44" pos:end="51:44">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="53:21" pos:end="53:26"><expr pos:start="53:21" pos:end="53:25"><name pos:start="53:21" pos:end="53:21">n</name> <operator pos:start="53:23" pos:end="53:23">=</operator> <literal type="number" pos:start="53:25" pos:end="53:25">4</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:53"><expr pos:start="57:17" pos:end="57:52"><call pos:start="57:17" pos:end="57:52"><name pos:start="57:17" pos:end="57:29">sd_write_data</name><argument_list pos:start="57:30" pos:end="57:52">(<argument pos:start="57:31" pos:end="57:37"><expr pos:start="57:31" pos:end="57:37"><name pos:start="57:31" pos:end="57:37"><name pos:start="57:31" pos:end="57:31">s</name><operator pos:start="57:32" pos:end="57:33">-&gt;</operator><name pos:start="57:34" pos:end="57:37">card</name></name></expr></argument>, <argument pos:start="57:40" pos:end="57:51"><expr pos:start="57:40" pos:end="57:51"><name pos:start="57:40" pos:end="57:44">value</name> <operator pos:start="57:46" pos:end="57:46">&amp;</operator> <literal type="number" pos:start="57:48" pos:end="57:51">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:28"><expr pos:start="59:17" pos:end="59:27"><name pos:start="59:17" pos:end="59:21">value</name> <operator pos:start="59:23" pos:end="59:25">&gt;&gt;=</operator> <literal type="number" pos:start="59:27" pos:end="59:27">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="61:17" pos:end="61:20"><expr pos:start="61:17" pos:end="61:19"><name pos:start="61:17" pos:end="61:17">n</name><operator pos:start="61:18" pos:end="61:19">--</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:25"><expr pos:start="65:13" pos:end="65:24"><name pos:start="65:13" pos:end="65:22"><name pos:start="65:13" pos:end="65:13">s</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:22">datacnt</name></name><operator pos:start="65:23" pos:end="65:24">--</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

        <if_stmt pos:start="69:9" pos:end="73:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:25">(<expr pos:start="69:13" pos:end="69:24"><name pos:start="69:13" pos:end="69:13">n</name> <operator pos:start="69:15" pos:end="69:16">&amp;&amp;</operator> <name pos:start="69:18" pos:end="69:24">is_read</name></expr>)</condition> <block pos:start="69:27" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:38">

            <expr_stmt pos:start="71:13" pos:end="71:38"><expr pos:start="71:13" pos:end="71:37"><call pos:start="71:13" pos:end="71:37"><name pos:start="71:13" pos:end="71:27">pl181_fifo_push</name><argument_list pos:start="71:28" pos:end="71:37">(<argument pos:start="71:29" pos:end="71:29"><expr pos:start="71:29" pos:end="71:29"><name pos:start="71:29" pos:end="71:29">s</name></expr></argument>, <argument pos:start="71:32" pos:end="71:36"><expr pos:start="71:32" pos:end="71:36"><name pos:start="71:32" pos:end="71:36">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:64"><expr pos:start="77:5" pos:end="77:63"><name pos:start="77:5" pos:end="77:13"><name pos:start="77:5" pos:end="77:5">s</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:13">status</name></name> <operator pos:start="77:15" pos:end="77:16">&amp;=</operator> <operator pos:start="77:18" pos:end="77:18">~</operator><operator pos:start="77:19" pos:end="77:19">(</operator><name pos:start="77:20" pos:end="77:39">PL181_STATUS_RX_FIFO</name> <operator pos:start="77:41" pos:end="77:41">|</operator> <name pos:start="77:43" pos:end="77:62">PL181_STATUS_TX_FIFO</name><operator pos:start="77:63" pos:end="77:63">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="89:5"><if pos:start="79:5" pos:end="89:5">if <condition pos:start="79:8" pos:end="79:24">(<expr pos:start="79:9" pos:end="79:23"><name pos:start="79:9" pos:end="79:18"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:18">datacnt</name></name> <operator pos:start="79:20" pos:end="79:21">==</operator> <literal type="number" pos:start="79:23" pos:end="79:23">0</literal></expr>)</condition> <block pos:start="79:26" pos:end="89:5">{<block_content pos:start="81:9" pos:end="87:39">

        <expr_stmt pos:start="81:9" pos:end="81:42"><expr pos:start="81:9" pos:end="81:41"><name pos:start="81:9" pos:end="81:17"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:17">status</name></name> <operator pos:start="81:19" pos:end="81:20">|=</operator> <name pos:start="81:22" pos:end="81:41">PL181_STATUS_DATAEND</name></expr>;</expr_stmt>

        <comment type="block" pos:start="83:9" pos:end="83:19">/* HACK: */</comment>

        <expr_stmt pos:start="85:9" pos:end="85:47"><expr pos:start="85:9" pos:end="85:46"><name pos:start="85:9" pos:end="85:17"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:17">status</name></name> <operator pos:start="85:19" pos:end="85:20">|=</operator> <name pos:start="85:22" pos:end="85:46">PL181_STATUS_DATABLOCKEND</name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:39"><expr pos:start="87:9" pos:end="87:38"><call pos:start="87:9" pos:end="87:38"><name pos:start="87:9" pos:end="87:15">DPRINTF</name><argument_list pos:start="87:16" pos:end="87:38">(<argument pos:start="87:17" pos:end="87:37"><expr pos:start="87:17" pos:end="87:37"><literal type="string" pos:start="87:17" pos:end="87:37">"Transfer Complete\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="91:5" pos:end="149:5"><if pos:start="91:5" pos:end="97:5">if <condition pos:start="91:8" pos:end="91:44">(<expr pos:start="91:9" pos:end="91:43"><name pos:start="91:9" pos:end="91:18"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:18">datacnt</name></name> <operator pos:start="91:20" pos:end="91:21">==</operator> <literal type="number" pos:start="91:23" pos:end="91:23">0</literal> <operator pos:start="91:25" pos:end="91:26">&amp;&amp;</operator> <name pos:start="91:28" pos:end="91:38"><name pos:start="91:28" pos:end="91:28">s</name><operator pos:start="91:29" pos:end="91:30">-&gt;</operator><name pos:start="91:31" pos:end="91:38">fifo_len</name></name> <operator pos:start="91:40" pos:end="91:41">==</operator> <literal type="number" pos:start="91:43" pos:end="91:43">0</literal></expr>)</condition> <block pos:start="91:46" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:38">

        <expr_stmt pos:start="93:9" pos:end="93:42"><expr pos:start="93:9" pos:end="93:41"><name pos:start="93:9" pos:end="93:19"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:19">datactrl</name></name> <operator pos:start="93:21" pos:end="93:22">&amp;=</operator> <operator pos:start="93:24" pos:end="93:24">~</operator><name pos:start="93:25" pos:end="93:41">PL181_DATA_ENABLE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:38"><expr pos:start="95:9" pos:end="95:37"><call pos:start="95:9" pos:end="95:37"><name pos:start="95:9" pos:end="95:15">DPRINTF</name><argument_list pos:start="95:16" pos:end="95:37">(<argument pos:start="95:17" pos:end="95:36"><expr pos:start="95:17" pos:end="95:36"><literal type="string" pos:start="95:17" pos:end="95:36">"Data engine idle\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="97:7" pos:end="149:5">else <block pos:start="97:12" pos:end="149:5">{<block_content pos:start="101:9" pos:end="147:26">

        <comment type="block" pos:start="99:9" pos:end="99:32">/* Update FIFO bits.  */</comment>

        <expr_stmt pos:start="101:9" pos:end="101:61"><expr pos:start="101:9" pos:end="101:60"><name pos:start="101:9" pos:end="101:12">bits</name> <operator pos:start="101:14" pos:end="101:14">=</operator> <name pos:start="101:16" pos:end="101:36">PL181_STATUS_TXACTIVE</name> <operator pos:start="101:38" pos:end="101:38">|</operator> <name pos:start="101:40" pos:end="101:60">PL181_STATUS_RXACTIVE</name></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="115:9"><if pos:start="103:9" pos:end="109:9">if <condition pos:start="103:12" pos:end="103:29">(<expr pos:start="103:13" pos:end="103:28"><name pos:start="103:13" pos:end="103:23"><name pos:start="103:13" pos:end="103:13">s</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:23">fifo_len</name></name> <operator pos:start="103:25" pos:end="103:26">==</operator> <literal type="number" pos:start="103:28" pos:end="103:28">0</literal></expr>)</condition> <block pos:start="103:31" pos:end="109:9">{<block_content pos:start="105:13" pos:end="107:45">

            <expr_stmt pos:start="105:13" pos:end="105:45"><expr pos:start="105:13" pos:end="105:44"><name pos:start="105:13" pos:end="105:16">bits</name> <operator pos:start="105:18" pos:end="105:19">|=</operator> <name pos:start="105:21" pos:end="105:44">PL181_STATUS_TXFIFOEMPTY</name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:45"><expr pos:start="107:13" pos:end="107:44"><name pos:start="107:13" pos:end="107:16">bits</name> <operator pos:start="107:18" pos:end="107:19">|=</operator> <name pos:start="107:21" pos:end="107:44">PL181_STATUS_RXFIFOEMPTY</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="109:11" pos:end="115:9">else <block pos:start="109:16" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:45">

            <expr_stmt pos:start="111:13" pos:end="111:45"><expr pos:start="111:13" pos:end="111:44"><name pos:start="111:13" pos:end="111:16">bits</name> <operator pos:start="111:18" pos:end="111:19">|=</operator> <name pos:start="111:21" pos:end="111:44">PL181_STATUS_TXDATAAVLBL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:45"><expr pos:start="113:13" pos:end="113:44"><name pos:start="113:13" pos:end="113:16">bits</name> <operator pos:start="113:18" pos:end="113:19">|=</operator> <name pos:start="113:21" pos:end="113:44">PL181_STATUS_RXDATAAVLBL</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="117:9" pos:end="123:9"><if pos:start="117:9" pos:end="123:9">if <condition pos:start="117:12" pos:end="117:30">(<expr pos:start="117:13" pos:end="117:29"><name pos:start="117:13" pos:end="117:23"><name pos:start="117:13" pos:end="117:13">s</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:23">fifo_len</name></name> <operator pos:start="117:25" pos:end="117:26">==</operator> <literal type="number" pos:start="117:28" pos:end="117:29">16</literal></expr>)</condition> <block pos:start="117:32" pos:end="123:9">{<block_content pos:start="119:13" pos:end="121:44">

            <expr_stmt pos:start="119:13" pos:end="119:44"><expr pos:start="119:13" pos:end="119:43"><name pos:start="119:13" pos:end="119:16">bits</name> <operator pos:start="119:18" pos:end="119:19">|=</operator> <name pos:start="119:21" pos:end="119:43">PL181_STATUS_TXFIFOFULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:44"><expr pos:start="121:13" pos:end="121:43"><name pos:start="121:13" pos:end="121:16">bits</name> <operator pos:start="121:18" pos:end="121:19">|=</operator> <name pos:start="121:21" pos:end="121:43">PL181_STATUS_RXFIFOFULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="125:9" pos:end="129:9"><if pos:start="125:9" pos:end="129:9">if <condition pos:start="125:12" pos:end="125:29">(<expr pos:start="125:13" pos:end="125:28"><name pos:start="125:13" pos:end="125:23"><name pos:start="125:13" pos:end="125:13">s</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:23">fifo_len</name></name> <operator pos:start="125:25" pos:end="125:26">&lt;=</operator> <literal type="number" pos:start="125:28" pos:end="125:28">8</literal></expr>)</condition> <block pos:start="125:31" pos:end="129:9">{<block_content pos:start="127:13" pos:end="127:49">

            <expr_stmt pos:start="127:13" pos:end="127:49"><expr pos:start="127:13" pos:end="127:48"><name pos:start="127:13" pos:end="127:16">bits</name> <operator pos:start="127:18" pos:end="127:19">|=</operator> <name pos:start="127:21" pos:end="127:48">PL181_STATUS_TXFIFOHALFEMPTY</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="131:9" pos:end="135:9"><if pos:start="131:9" pos:end="135:9">if <condition pos:start="131:12" pos:end="131:29">(<expr pos:start="131:13" pos:end="131:28"><name pos:start="131:13" pos:end="131:23"><name pos:start="131:13" pos:end="131:13">s</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:23">fifo_len</name></name> <operator pos:start="131:25" pos:end="131:26">&gt;=</operator> <literal type="number" pos:start="131:28" pos:end="131:28">8</literal></expr>)</condition> <block pos:start="131:31" pos:end="135:9">{<block_content pos:start="133:13" pos:end="133:48">

            <expr_stmt pos:start="133:13" pos:end="133:48"><expr pos:start="133:13" pos:end="133:47"><name pos:start="133:13" pos:end="133:16">bits</name> <operator pos:start="133:18" pos:end="133:19">|=</operator> <name pos:start="133:21" pos:end="133:47">PL181_STATUS_RXFIFOHALFFULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="137:9" pos:end="145:9"><if pos:start="137:9" pos:end="141:9">if <condition pos:start="137:12" pos:end="137:47">(<expr pos:start="137:13" pos:end="137:46"><name pos:start="137:13" pos:end="137:23"><name pos:start="137:13" pos:end="137:13">s</name><operator pos:start="137:14" pos:end="137:15">-&gt;</operator><name pos:start="137:16" pos:end="137:23">datactrl</name></name> <operator pos:start="137:25" pos:end="137:25">&amp;</operator> <name pos:start="137:27" pos:end="137:46">PL181_DATA_DIRECTION</name></expr>)</condition> <block pos:start="137:49" pos:end="141:9">{<block_content pos:start="139:13" pos:end="139:41">

            <expr_stmt pos:start="139:13" pos:end="139:41"><expr pos:start="139:13" pos:end="139:40"><name pos:start="139:13" pos:end="139:16">bits</name> <operator pos:start="139:18" pos:end="139:19">&amp;=</operator> <name pos:start="139:21" pos:end="139:40">PL181_STATUS_RX_FIFO</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="141:11" pos:end="145:9">else <block pos:start="141:16" pos:end="145:9">{<block_content pos:start="143:13" pos:end="143:41">

            <expr_stmt pos:start="143:13" pos:end="143:41"><expr pos:start="143:13" pos:end="143:40"><name pos:start="143:13" pos:end="143:16">bits</name> <operator pos:start="143:18" pos:end="143:19">&amp;=</operator> <name pos:start="143:21" pos:end="143:40">PL181_STATUS_TX_FIFO</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:26"><expr pos:start="147:9" pos:end="147:25"><name pos:start="147:9" pos:end="147:17"><name pos:start="147:9" pos:end="147:9">s</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:17">status</name></name> <operator pos:start="147:19" pos:end="147:20">|=</operator> <name pos:start="147:22" pos:end="147:25">bits</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
