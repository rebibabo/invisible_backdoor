<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6705.c" pos:tabs="8"><function pos:start="1:1" pos:end="295:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">avi_sync</name><parameter_list pos:start="1:20" pos:end="1:55">(<parameter pos:start="1:21" pos:end="1:38"><decl pos:start="1:21" pos:end="1:38"><type pos:start="1:21" pos:end="1:38"><name pos:start="1:21" pos:end="1:35">AVFormatContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:54">exit_early</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="295:1">{<block_content pos:start="5:5" pos:end="293:23">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">AVIContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">avi</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:21"><name pos:start="11:18" pos:end="11:18">d</name><index pos:start="11:19" pos:end="11:21">[<expr pos:start="11:20" pos:end="11:20"><literal type="number" pos:start="11:20" pos:end="11:20">8</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:21">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:13">i</name></decl>, <decl pos:start="15:16" pos:end="15:19"><type ref="prev" pos:start="15:5" pos:end="15:11"/><name pos:start="15:16" pos:end="15:19">sync</name></decl>;</decl_stmt>



<label pos:start="19:1" pos:end="19:11"><name pos:start="19:1" pos:end="19:10">start_sync</name>:</label>

    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><call pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:10">memset</name><argument_list pos:start="21:11" pos:end="21:28">(<argument pos:start="21:12" pos:end="21:12"><expr pos:start="21:12" pos:end="21:12"><name pos:start="21:12" pos:end="21:12">d</name></expr></argument>, <argument pos:start="21:15" pos:end="21:16"><expr pos:start="21:15" pos:end="21:16"><operator pos:start="21:15" pos:end="21:15">-</operator><literal type="number" pos:start="21:16" pos:end="21:16">1</literal></expr></argument>, <argument pos:start="21:19" pos:end="21:27"><expr pos:start="21:19" pos:end="21:27"><sizeof pos:start="21:19" pos:end="21:27">sizeof<argument_list pos:start="21:25" pos:end="21:27">(<argument pos:start="21:26" pos:end="21:26"><expr pos:start="21:26" pos:end="21:26"><name pos:start="21:26" pos:end="21:26">d</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="23:5" pos:end="285:5">for <control pos:start="23:9" pos:end="23:55">(<init pos:start="23:10" pos:end="23:34"><expr pos:start="23:10" pos:end="23:33"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <name pos:start="23:14" pos:end="23:17">sync</name> <operator pos:start="23:19" pos:end="23:19">=</operator> <call pos:start="23:21" pos:end="23:33"><name pos:start="23:21" pos:end="23:29">avio_tell</name><argument_list pos:start="23:30" pos:end="23:33">(<argument pos:start="23:31" pos:end="23:32"><expr pos:start="23:31" pos:end="23:32"><name pos:start="23:31" pos:end="23:32">pb</name></expr></argument>)</argument_list></call></expr>;</init> <condition pos:start="23:36" pos:end="23:50"><expr pos:start="23:36" pos:end="23:49"><operator pos:start="23:36" pos:end="23:36">!</operator><call pos:start="23:37" pos:end="23:49"><name pos:start="23:37" pos:end="23:45">avio_feof</name><argument_list pos:start="23:46" pos:end="23:49">(<argument pos:start="23:47" pos:end="23:48"><expr pos:start="23:47" pos:end="23:48"><name pos:start="23:47" pos:end="23:48">pb</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="23:52" pos:end="23:54"><expr pos:start="23:52" pos:end="23:54"><name pos:start="23:52" pos:end="23:52">i</name><operator pos:start="23:53" pos:end="23:54">++</operator></expr></incr>)</control> <block pos:start="23:57" pos:end="285:5">{<block_content pos:start="25:9" pos:end="283:9">

        <decl_stmt pos:start="25:9" pos:end="25:14"><decl pos:start="25:9" pos:end="25:13"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:13">j</name></decl>;</decl_stmt>



        <for pos:start="29:9" pos:end="31:28">for <control pos:start="29:13" pos:end="29:31">(<init pos:start="29:14" pos:end="29:19"><expr pos:start="29:14" pos:end="29:18"><name pos:start="29:14" pos:end="29:14">j</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>;</init> <condition pos:start="29:21" pos:end="29:26"><expr pos:start="29:21" pos:end="29:25"><name pos:start="29:21" pos:end="29:21">j</name> <operator pos:start="29:23" pos:end="29:23">&lt;</operator> <literal type="number" pos:start="29:25" pos:end="29:25">7</literal></expr>;</condition> <incr pos:start="29:28" pos:end="29:30"><expr pos:start="29:28" pos:end="29:30"><name pos:start="29:28" pos:end="29:28">j</name><operator pos:start="29:29" pos:end="29:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="31:13" pos:end="31:28"><block_content pos:start="31:13" pos:end="31:28">

            <expr_stmt pos:start="31:13" pos:end="31:28"><expr pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:16"><name pos:start="31:13" pos:end="31:13">d</name><index pos:start="31:14" pos:end="31:16">[<expr pos:start="31:15" pos:end="31:15"><name pos:start="31:15" pos:end="31:15">j</name></expr>]</index></name> <operator pos:start="31:18" pos:end="31:18">=</operator> <name pos:start="31:20" pos:end="31:27"><name pos:start="31:20" pos:end="31:20">d</name><index pos:start="31:21" pos:end="31:27">[<expr pos:start="31:22" pos:end="31:26"><name pos:start="31:22" pos:end="31:22">j</name> <operator pos:start="31:24" pos:end="31:24">+</operator> <literal type="number" pos:start="31:26" pos:end="31:26">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="33:9" pos:end="33:27"><expr pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:12"><name pos:start="33:9" pos:end="33:9">d</name><index pos:start="33:10" pos:end="33:12">[<expr pos:start="33:11" pos:end="33:11"><literal type="number" pos:start="33:11" pos:end="33:11">7</literal></expr>]</index></name> <operator pos:start="33:14" pos:end="33:14">=</operator> <call pos:start="33:16" pos:end="33:26"><name pos:start="33:16" pos:end="33:22">avio_r8</name><argument_list pos:start="33:23" pos:end="33:26">(<argument pos:start="33:24" pos:end="33:25"><expr pos:start="33:24" pos:end="33:25"><name pos:start="33:24" pos:end="33:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:64"><expr pos:start="37:9" pos:end="37:63"><name pos:start="37:9" pos:end="37:12">size</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <name pos:start="37:16" pos:end="37:19"><name pos:start="37:16" pos:end="37:16">d</name><index pos:start="37:17" pos:end="37:19">[<expr pos:start="37:18" pos:end="37:18"><literal type="number" pos:start="37:18" pos:end="37:18">4</literal></expr>]</index></name> <operator pos:start="37:21" pos:end="37:21">+</operator> <operator pos:start="37:23" pos:end="37:23">(</operator><name pos:start="37:24" pos:end="37:27"><name pos:start="37:24" pos:end="37:24">d</name><index pos:start="37:25" pos:end="37:27">[<expr pos:start="37:26" pos:end="37:26"><literal type="number" pos:start="37:26" pos:end="37:26">5</literal></expr>]</index></name> <operator pos:start="37:29" pos:end="37:30">&lt;&lt;</operator> <literal type="number" pos:start="37:32" pos:end="37:32">8</literal><operator pos:start="37:33" pos:end="37:33">)</operator> <operator pos:start="37:35" pos:end="37:35">+</operator> <operator pos:start="37:37" pos:end="37:37">(</operator><name pos:start="37:38" pos:end="37:41"><name pos:start="37:38" pos:end="37:38">d</name><index pos:start="37:39" pos:end="37:41">[<expr pos:start="37:40" pos:end="37:40"><literal type="number" pos:start="37:40" pos:end="37:40">6</literal></expr>]</index></name> <operator pos:start="37:43" pos:end="37:44">&lt;&lt;</operator> <literal type="number" pos:start="37:46" pos:end="37:47">16</literal><operator pos:start="37:48" pos:end="37:48">)</operator> <operator pos:start="37:50" pos:end="37:50">+</operator> <operator pos:start="37:52" pos:end="37:52">(</operator><name pos:start="37:53" pos:end="37:56"><name pos:start="37:53" pos:end="37:53">d</name><index pos:start="37:54" pos:end="37:56">[<expr pos:start="37:55" pos:end="37:55"><literal type="number" pos:start="37:55" pos:end="37:55">7</literal></expr>]</index></name> <operator pos:start="37:58" pos:end="37:59">&lt;&lt;</operator> <literal type="number" pos:start="37:61" pos:end="37:62">24</literal><operator pos:start="37:63" pos:end="37:63">)</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:34"><expr pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:9">n</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <call pos:start="41:13" pos:end="41:33"><name pos:start="41:13" pos:end="41:26">get_stream_idx</name><argument_list pos:start="41:27" pos:end="41:33">(<argument pos:start="41:28" pos:end="41:32"><expr pos:start="41:28" pos:end="41:32"><name pos:start="41:28" pos:end="41:28">d</name> <operator pos:start="41:30" pos:end="41:30">+</operator> <literal type="number" pos:start="41:32" pos:end="41:32">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="45:76"><expr pos:start="43:9" pos:end="45:75"><call pos:start="43:9" pos:end="45:75"><name pos:start="43:9" pos:end="43:15">ff_tlog</name><argument_list pos:start="43:16" pos:end="45:75">(<argument pos:start="43:17" pos:end="43:17"><expr pos:start="43:17" pos:end="43:17"><name pos:start="43:17" pos:end="43:17">s</name></expr></argument>, <argument pos:start="43:20" pos:end="43:62"><expr pos:start="43:20" pos:end="43:62"><literal type="string" pos:start="43:20" pos:end="43:46">"%X %X %X %X %X %X %X %X %"</literal><name pos:start="43:47" pos:end="43:52">PRId64</name><literal type="string" pos:start="43:53" pos:end="43:62">" %u %d\n"</literal></expr></argument>,

                <argument pos:start="45:17" pos:end="45:20"><expr pos:start="45:17" pos:end="45:20"><name pos:start="45:17" pos:end="45:20"><name pos:start="45:17" pos:end="45:17">d</name><index pos:start="45:18" pos:end="45:20">[<expr pos:start="45:19" pos:end="45:19"><literal type="number" pos:start="45:19" pos:end="45:19">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="45:23" pos:end="45:26"><expr pos:start="45:23" pos:end="45:26"><name pos:start="45:23" pos:end="45:26"><name pos:start="45:23" pos:end="45:23">d</name><index pos:start="45:24" pos:end="45:26">[<expr pos:start="45:25" pos:end="45:25"><literal type="number" pos:start="45:25" pos:end="45:25">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="45:29" pos:end="45:32"><expr pos:start="45:29" pos:end="45:32"><name pos:start="45:29" pos:end="45:32"><name pos:start="45:29" pos:end="45:29">d</name><index pos:start="45:30" pos:end="45:32">[<expr pos:start="45:31" pos:end="45:31"><literal type="number" pos:start="45:31" pos:end="45:31">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="45:35" pos:end="45:38"><expr pos:start="45:35" pos:end="45:38"><name pos:start="45:35" pos:end="45:38"><name pos:start="45:35" pos:end="45:35">d</name><index pos:start="45:36" pos:end="45:38">[<expr pos:start="45:37" pos:end="45:37"><literal type="number" pos:start="45:37" pos:end="45:37">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="45:41" pos:end="45:44"><expr pos:start="45:41" pos:end="45:44"><name pos:start="45:41" pos:end="45:44"><name pos:start="45:41" pos:end="45:41">d</name><index pos:start="45:42" pos:end="45:44">[<expr pos:start="45:43" pos:end="45:43"><literal type="number" pos:start="45:43" pos:end="45:43">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="45:47" pos:end="45:50"><expr pos:start="45:47" pos:end="45:50"><name pos:start="45:47" pos:end="45:50"><name pos:start="45:47" pos:end="45:47">d</name><index pos:start="45:48" pos:end="45:50">[<expr pos:start="45:49" pos:end="45:49"><literal type="number" pos:start="45:49" pos:end="45:49">5</literal></expr>]</index></name></expr></argument>, <argument pos:start="45:53" pos:end="45:56"><expr pos:start="45:53" pos:end="45:56"><name pos:start="45:53" pos:end="45:56"><name pos:start="45:53" pos:end="45:53">d</name><index pos:start="45:54" pos:end="45:56">[<expr pos:start="45:55" pos:end="45:55"><literal type="number" pos:start="45:55" pos:end="45:55">6</literal></expr>]</index></name></expr></argument>, <argument pos:start="45:59" pos:end="45:62"><expr pos:start="45:59" pos:end="45:62"><name pos:start="45:59" pos:end="45:62"><name pos:start="45:59" pos:end="45:59">d</name><index pos:start="45:60" pos:end="45:62">[<expr pos:start="45:61" pos:end="45:61"><literal type="number" pos:start="45:61" pos:end="45:61">7</literal></expr>]</index></name></expr></argument>, <argument pos:start="45:65" pos:end="45:65"><expr pos:start="45:65" pos:end="45:65"><name pos:start="45:65" pos:end="45:65">i</name></expr></argument>, <argument pos:start="45:68" pos:end="45:71"><expr pos:start="45:68" pos:end="45:71"><name pos:start="45:68" pos:end="45:71">size</name></expr></argument>, <argument pos:start="45:74" pos:end="45:74"><expr pos:start="45:74" pos:end="45:74"><name pos:start="45:74" pos:end="45:74">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="49:21"><if pos:start="47:9" pos:end="49:21">if <condition pos:start="47:12" pos:end="47:76">(<expr pos:start="47:13" pos:end="47:75"><name pos:start="47:13" pos:end="47:13">i</name><operator pos:start="47:14" pos:end="47:14">*</operator><operator pos:start="47:15" pos:end="47:15">(</operator><name pos:start="47:16" pos:end="47:28"><name pos:start="47:16" pos:end="47:18">avi</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:28">io_fsize</name></name><operator pos:start="47:29" pos:end="47:29">&gt;</operator><literal type="number" pos:start="47:30" pos:end="47:30">0</literal><operator pos:start="47:31" pos:end="47:31">)</operator> <operator pos:start="47:33" pos:end="47:33">+</operator> <operator pos:start="47:35" pos:end="47:35">(</operator><name pos:start="47:36" pos:end="47:43">uint64_t</name><operator pos:start="47:44" pos:end="47:44">)</operator><name pos:start="47:45" pos:end="47:48">size</name> <operator pos:start="47:50" pos:end="47:50">&gt;</operator> <name pos:start="47:52" pos:end="47:61"><name pos:start="47:52" pos:end="47:54">avi</name><operator pos:start="47:55" pos:end="47:56">-&gt;</operator><name pos:start="47:57" pos:end="47:61">fsize</name></name> <operator pos:start="47:63" pos:end="47:64">||</operator> <name pos:start="47:66" pos:end="47:69"><name pos:start="47:66" pos:end="47:66">d</name><index pos:start="47:67" pos:end="47:69">[<expr pos:start="47:68" pos:end="47:68"><literal type="number" pos:start="47:68" pos:end="47:68">0</literal></expr>]</index></name> <operator pos:start="47:71" pos:end="47:71">&gt;</operator> <literal type="number" pos:start="47:73" pos:end="47:75">127</literal></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:21"><block_content pos:start="49:13" pos:end="49:21">

            <continue pos:start="49:13" pos:end="49:21">continue;</continue></block_content></block></if></if_stmt>



        <comment type="line" pos:start="53:9" pos:end="53:21">// parse ix##</comment>

        <if_stmt pos:start="55:9" pos:end="69:9"><if pos:start="55:9" pos:end="69:9">if <condition pos:start="55:12" pos:end="63:71">(<expr pos:start="55:13" pos:end="63:70"><operator pos:start="55:13" pos:end="55:13">(</operator><name pos:start="55:14" pos:end="55:17"><name pos:start="55:14" pos:end="55:14">d</name><index pos:start="55:15" pos:end="55:17">[<expr pos:start="55:16" pos:end="55:16"><literal type="number" pos:start="55:16" pos:end="55:16">0</literal></expr>]</index></name> <operator pos:start="55:19" pos:end="55:20">==</operator> <literal type="char" pos:start="55:22" pos:end="55:24">'i'</literal> <operator pos:start="55:26" pos:end="55:27">&amp;&amp;</operator> <name pos:start="55:29" pos:end="55:32"><name pos:start="55:29" pos:end="55:29">d</name><index pos:start="55:30" pos:end="55:32">[<expr pos:start="55:31" pos:end="55:31"><literal type="number" pos:start="55:31" pos:end="55:31">1</literal></expr>]</index></name> <operator pos:start="55:34" pos:end="55:35">==</operator> <literal type="char" pos:start="55:37" pos:end="55:39">'x'</literal> <operator pos:start="55:41" pos:end="55:42">&amp;&amp;</operator> <name pos:start="55:44" pos:end="55:44">n</name> <operator pos:start="55:46" pos:end="55:46">&lt;</operator> <name pos:start="55:48" pos:end="55:60"><name pos:start="55:48" pos:end="55:48">s</name><operator pos:start="55:49" pos:end="55:50">-&gt;</operator><name pos:start="55:51" pos:end="55:60">nb_streams</name></name><operator pos:start="55:61" pos:end="55:61">)</operator> <operator pos:start="55:63" pos:end="55:64">||</operator>

            <comment type="line" pos:start="57:13" pos:end="57:25">// parse JUNK</comment>

            <operator pos:start="59:13" pos:end="59:13">(</operator><name pos:start="59:14" pos:end="59:17"><name pos:start="59:14" pos:end="59:14">d</name><index pos:start="59:15" pos:end="59:17">[<expr pos:start="59:16" pos:end="59:16"><literal type="number" pos:start="59:16" pos:end="59:16">0</literal></expr>]</index></name> <operator pos:start="59:19" pos:end="59:20">==</operator> <literal type="char" pos:start="59:22" pos:end="59:24">'J'</literal> <operator pos:start="59:26" pos:end="59:27">&amp;&amp;</operator> <name pos:start="59:29" pos:end="59:32"><name pos:start="59:29" pos:end="59:29">d</name><index pos:start="59:30" pos:end="59:32">[<expr pos:start="59:31" pos:end="59:31"><literal type="number" pos:start="59:31" pos:end="59:31">1</literal></expr>]</index></name> <operator pos:start="59:34" pos:end="59:35">==</operator> <literal type="char" pos:start="59:37" pos:end="59:39">'U'</literal> <operator pos:start="59:41" pos:end="59:42">&amp;&amp;</operator> <name pos:start="59:44" pos:end="59:47"><name pos:start="59:44" pos:end="59:44">d</name><index pos:start="59:45" pos:end="59:47">[<expr pos:start="59:46" pos:end="59:46"><literal type="number" pos:start="59:46" pos:end="59:46">2</literal></expr>]</index></name> <operator pos:start="59:49" pos:end="59:50">==</operator> <literal type="char" pos:start="59:52" pos:end="59:54">'N'</literal> <operator pos:start="59:56" pos:end="59:57">&amp;&amp;</operator> <name pos:start="59:59" pos:end="59:62"><name pos:start="59:59" pos:end="59:59">d</name><index pos:start="59:60" pos:end="59:62">[<expr pos:start="59:61" pos:end="59:61"><literal type="number" pos:start="59:61" pos:end="59:61">3</literal></expr>]</index></name> <operator pos:start="59:64" pos:end="59:65">==</operator> <literal type="char" pos:start="59:67" pos:end="59:69">'K'</literal><operator pos:start="59:70" pos:end="59:70">)</operator> <operator pos:start="59:72" pos:end="59:73">||</operator>

            <operator pos:start="61:13" pos:end="61:13">(</operator><name pos:start="61:14" pos:end="61:17"><name pos:start="61:14" pos:end="61:14">d</name><index pos:start="61:15" pos:end="61:17">[<expr pos:start="61:16" pos:end="61:16"><literal type="number" pos:start="61:16" pos:end="61:16">0</literal></expr>]</index></name> <operator pos:start="61:19" pos:end="61:20">==</operator> <literal type="char" pos:start="61:22" pos:end="61:24">'i'</literal> <operator pos:start="61:26" pos:end="61:27">&amp;&amp;</operator> <name pos:start="61:29" pos:end="61:32"><name pos:start="61:29" pos:end="61:29">d</name><index pos:start="61:30" pos:end="61:32">[<expr pos:start="61:31" pos:end="61:31"><literal type="number" pos:start="61:31" pos:end="61:31">1</literal></expr>]</index></name> <operator pos:start="61:34" pos:end="61:35">==</operator> <literal type="char" pos:start="61:37" pos:end="61:39">'d'</literal> <operator pos:start="61:41" pos:end="61:42">&amp;&amp;</operator> <name pos:start="61:44" pos:end="61:47"><name pos:start="61:44" pos:end="61:44">d</name><index pos:start="61:45" pos:end="61:47">[<expr pos:start="61:46" pos:end="61:46"><literal type="number" pos:start="61:46" pos:end="61:46">2</literal></expr>]</index></name> <operator pos:start="61:49" pos:end="61:50">==</operator> <literal type="char" pos:start="61:52" pos:end="61:54">'x'</literal> <operator pos:start="61:56" pos:end="61:57">&amp;&amp;</operator> <name pos:start="61:59" pos:end="61:62"><name pos:start="61:59" pos:end="61:59">d</name><index pos:start="61:60" pos:end="61:62">[<expr pos:start="61:61" pos:end="61:61"><literal type="number" pos:start="61:61" pos:end="61:61">3</literal></expr>]</index></name> <operator pos:start="61:64" pos:end="61:65">==</operator> <literal type="char" pos:start="61:67" pos:end="61:69">'1'</literal><operator pos:start="61:70" pos:end="61:70">)</operator> <operator pos:start="61:72" pos:end="61:73">||</operator>

            <operator pos:start="63:13" pos:end="63:13">(</operator><name pos:start="63:14" pos:end="63:17"><name pos:start="63:14" pos:end="63:14">d</name><index pos:start="63:15" pos:end="63:17">[<expr pos:start="63:16" pos:end="63:16"><literal type="number" pos:start="63:16" pos:end="63:16">0</literal></expr>]</index></name> <operator pos:start="63:19" pos:end="63:20">==</operator> <literal type="char" pos:start="63:22" pos:end="63:24">'i'</literal> <operator pos:start="63:26" pos:end="63:27">&amp;&amp;</operator> <name pos:start="63:29" pos:end="63:32"><name pos:start="63:29" pos:end="63:29">d</name><index pos:start="63:30" pos:end="63:32">[<expr pos:start="63:31" pos:end="63:31"><literal type="number" pos:start="63:31" pos:end="63:31">1</literal></expr>]</index></name> <operator pos:start="63:34" pos:end="63:35">==</operator> <literal type="char" pos:start="63:37" pos:end="63:39">'n'</literal> <operator pos:start="63:41" pos:end="63:42">&amp;&amp;</operator> <name pos:start="63:44" pos:end="63:47"><name pos:start="63:44" pos:end="63:44">d</name><index pos:start="63:45" pos:end="63:47">[<expr pos:start="63:46" pos:end="63:46"><literal type="number" pos:start="63:46" pos:end="63:46">2</literal></expr>]</index></name> <operator pos:start="63:49" pos:end="63:50">==</operator> <literal type="char" pos:start="63:52" pos:end="63:54">'d'</literal> <operator pos:start="63:56" pos:end="63:57">&amp;&amp;</operator> <name pos:start="63:59" pos:end="63:62"><name pos:start="63:59" pos:end="63:59">d</name><index pos:start="63:60" pos:end="63:62">[<expr pos:start="63:61" pos:end="63:61"><literal type="number" pos:start="63:61" pos:end="63:61">3</literal></expr>]</index></name> <operator pos:start="63:64" pos:end="63:65">==</operator> <literal type="char" pos:start="63:67" pos:end="63:69">'x'</literal><operator pos:start="63:70" pos:end="63:70">)</operator></expr>)</condition> <block pos:start="63:73" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:28">

            <expr_stmt pos:start="65:13" pos:end="65:32"><expr pos:start="65:13" pos:end="65:31"><call pos:start="65:13" pos:end="65:31"><name pos:start="65:13" pos:end="65:21">avio_skip</name><argument_list pos:start="65:22" pos:end="65:31">(<argument pos:start="65:23" pos:end="65:24"><expr pos:start="65:23" pos:end="65:24"><name pos:start="65:23" pos:end="65:24">pb</name></expr></argument>, <argument pos:start="65:27" pos:end="65:30"><expr pos:start="65:27" pos:end="65:30"><name pos:start="65:27" pos:end="65:30">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="67:13" pos:end="67:28">goto <name pos:start="67:18" pos:end="67:27">start_sync</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <comment type="line" pos:start="73:9" pos:end="73:27">// parse stray LIST</comment>

        <if_stmt pos:start="75:9" pos:end="81:9"><if pos:start="75:9" pos:end="81:9">if <condition pos:start="75:12" pos:end="75:69">(<expr pos:start="75:13" pos:end="75:68"><name pos:start="75:13" pos:end="75:16"><name pos:start="75:13" pos:end="75:13">d</name><index pos:start="75:14" pos:end="75:16">[<expr pos:start="75:15" pos:end="75:15"><literal type="number" pos:start="75:15" pos:end="75:15">0</literal></expr>]</index></name> <operator pos:start="75:18" pos:end="75:19">==</operator> <literal type="char" pos:start="75:21" pos:end="75:23">'L'</literal> <operator pos:start="75:25" pos:end="75:26">&amp;&amp;</operator> <name pos:start="75:28" pos:end="75:31"><name pos:start="75:28" pos:end="75:28">d</name><index pos:start="75:29" pos:end="75:31">[<expr pos:start="75:30" pos:end="75:30"><literal type="number" pos:start="75:30" pos:end="75:30">1</literal></expr>]</index></name> <operator pos:start="75:33" pos:end="75:34">==</operator> <literal type="char" pos:start="75:36" pos:end="75:38">'I'</literal> <operator pos:start="75:40" pos:end="75:41">&amp;&amp;</operator> <name pos:start="75:43" pos:end="75:46"><name pos:start="75:43" pos:end="75:43">d</name><index pos:start="75:44" pos:end="75:46">[<expr pos:start="75:45" pos:end="75:45"><literal type="number" pos:start="75:45" pos:end="75:45">2</literal></expr>]</index></name> <operator pos:start="75:48" pos:end="75:49">==</operator> <literal type="char" pos:start="75:51" pos:end="75:53">'S'</literal> <operator pos:start="75:55" pos:end="75:56">&amp;&amp;</operator> <name pos:start="75:58" pos:end="75:61"><name pos:start="75:58" pos:end="75:58">d</name><index pos:start="75:59" pos:end="75:61">[<expr pos:start="75:60" pos:end="75:60"><literal type="number" pos:start="75:60" pos:end="75:60">3</literal></expr>]</index></name> <operator pos:start="75:63" pos:end="75:64">==</operator> <literal type="char" pos:start="75:66" pos:end="75:68">'T'</literal></expr>)</condition> <block pos:start="75:71" pos:end="81:9">{<block_content pos:start="77:13" pos:end="79:28">

            <expr_stmt pos:start="77:13" pos:end="77:29"><expr pos:start="77:13" pos:end="77:28"><call pos:start="77:13" pos:end="77:28"><name pos:start="77:13" pos:end="77:21">avio_skip</name><argument_list pos:start="77:22" pos:end="77:28">(<argument pos:start="77:23" pos:end="77:24"><expr pos:start="77:23" pos:end="77:24"><name pos:start="77:23" pos:end="77:24">pb</name></expr></argument>, <argument pos:start="77:27" pos:end="77:27"><expr pos:start="77:27" pos:end="77:27"><literal type="number" pos:start="77:27" pos:end="77:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="79:13" pos:end="79:28">goto <name pos:start="79:18" pos:end="79:27">start_sync</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:30"><expr pos:start="85:9" pos:end="85:29"><name pos:start="85:9" pos:end="85:9">n</name> <operator pos:start="85:11" pos:end="85:11">=</operator> <call pos:start="85:13" pos:end="85:29"><name pos:start="85:13" pos:end="85:26">get_stream_idx</name><argument_list pos:start="85:27" pos:end="85:29">(<argument pos:start="85:28" pos:end="85:28"><expr pos:start="85:28" pos:end="85:28"><name pos:start="85:28" pos:end="85:28">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="89:9" pos:end="93:21"><if pos:start="89:9" pos:end="93:21">if <condition pos:start="89:12" pos:end="91:50">(<expr pos:start="89:13" pos:end="91:49"><operator pos:start="89:13" pos:end="89:13">!</operator><operator pos:start="89:14" pos:end="89:14">(</operator><operator pos:start="89:15" pos:end="89:15">(</operator><name pos:start="89:16" pos:end="89:16">i</name> <operator pos:start="89:18" pos:end="89:18">-</operator> <name pos:start="89:20" pos:end="89:36"><name pos:start="89:20" pos:end="89:22">avi</name><operator pos:start="89:23" pos:end="89:24">-&gt;</operator><name pos:start="89:25" pos:end="89:36">last_pkt_pos</name></name><operator pos:start="89:37" pos:end="89:37">)</operator> <operator pos:start="89:39" pos:end="89:39">&amp;</operator> <literal type="number" pos:start="89:41" pos:end="89:41">1</literal><operator pos:start="89:42" pos:end="89:42">)</operator> <operator pos:start="89:44" pos:end="89:45">&amp;&amp;</operator>

            <call pos:start="91:13" pos:end="91:33"><name pos:start="91:13" pos:end="91:26">get_stream_idx</name><argument_list pos:start="91:27" pos:end="91:33">(<argument pos:start="91:28" pos:end="91:32"><expr pos:start="91:28" pos:end="91:32"><name pos:start="91:28" pos:end="91:28">d</name> <operator pos:start="91:30" pos:end="91:30">+</operator> <literal type="number" pos:start="91:32" pos:end="91:32">1</literal></expr></argument>)</argument_list></call> <operator pos:start="91:35" pos:end="91:35">&lt;</operator> <name pos:start="91:37" pos:end="91:49"><name pos:start="91:37" pos:end="91:37">s</name><operator pos:start="91:38" pos:end="91:39">-&gt;</operator><name pos:start="91:40" pos:end="91:49">nb_streams</name></name></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:21"><block_content pos:start="93:13" pos:end="93:21">

            <continue pos:start="93:13" pos:end="93:21">continue;</continue></block_content></block></if></if_stmt>



        <comment type="line" pos:start="97:9" pos:end="97:37">// detect ##ix chunk and skip</comment>

        <if_stmt pos:start="99:9" pos:end="105:9"><if pos:start="99:9" pos:end="105:9">if <condition pos:start="99:12" pos:end="99:60">(<expr pos:start="99:13" pos:end="99:59"><name pos:start="99:13" pos:end="99:16"><name pos:start="99:13" pos:end="99:13">d</name><index pos:start="99:14" pos:end="99:16">[<expr pos:start="99:15" pos:end="99:15"><literal type="number" pos:start="99:15" pos:end="99:15">2</literal></expr>]</index></name> <operator pos:start="99:18" pos:end="99:19">==</operator> <literal type="char" pos:start="99:21" pos:end="99:23">'i'</literal> <operator pos:start="99:25" pos:end="99:26">&amp;&amp;</operator> <name pos:start="99:28" pos:end="99:31"><name pos:start="99:28" pos:end="99:28">d</name><index pos:start="99:29" pos:end="99:31">[<expr pos:start="99:30" pos:end="99:30"><literal type="number" pos:start="99:30" pos:end="99:30">3</literal></expr>]</index></name> <operator pos:start="99:33" pos:end="99:34">==</operator> <literal type="char" pos:start="99:36" pos:end="99:38">'x'</literal> <operator pos:start="99:40" pos:end="99:41">&amp;&amp;</operator> <name pos:start="99:43" pos:end="99:43">n</name> <operator pos:start="99:45" pos:end="99:45">&lt;</operator> <name pos:start="99:47" pos:end="99:59"><name pos:start="99:47" pos:end="99:47">s</name><operator pos:start="99:48" pos:end="99:49">-&gt;</operator><name pos:start="99:50" pos:end="99:59">nb_streams</name></name></expr>)</condition> <block pos:start="99:62" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:28">

            <expr_stmt pos:start="101:13" pos:end="101:32"><expr pos:start="101:13" pos:end="101:31"><call pos:start="101:13" pos:end="101:31"><name pos:start="101:13" pos:end="101:21">avio_skip</name><argument_list pos:start="101:22" pos:end="101:31">(<argument pos:start="101:23" pos:end="101:24"><expr pos:start="101:23" pos:end="101:24"><name pos:start="101:23" pos:end="101:24">pb</name></expr></argument>, <argument pos:start="101:27" pos:end="101:30"><expr pos:start="101:27" pos:end="101:30"><name pos:start="101:27" pos:end="101:30">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="103:13" pos:end="103:28">goto <name pos:start="103:18" pos:end="103:27">start_sync</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="109:9" pos:end="111:21"><if pos:start="109:9" pos:end="111:21">if <condition pos:start="109:12" pos:end="109:36">(<expr pos:start="109:13" pos:end="109:35"><name pos:start="109:13" pos:end="109:25"><name pos:start="109:13" pos:end="109:15">avi</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:25">dv_demux</name></name> <operator pos:start="109:27" pos:end="109:28">&amp;&amp;</operator> <name pos:start="109:30" pos:end="109:30">n</name> <operator pos:start="109:32" pos:end="109:33">!=</operator> <literal type="number" pos:start="109:35" pos:end="109:35">0</literal></expr>)</condition><block type="pseudo" pos:start="111:13" pos:end="111:21"><block_content pos:start="111:13" pos:end="111:21">

            <continue pos:start="111:13" pos:end="111:21">continue;</continue></block_content></block></if></if_stmt>



        <comment type="line" pos:start="115:9" pos:end="115:26">// parse ##dc/##wb</comment>

        <if_stmt pos:start="117:9" pos:end="283:9"><if pos:start="117:9" pos:end="283:9">if <condition pos:start="117:12" pos:end="117:30">(<expr pos:start="117:13" pos:end="117:29"><name pos:start="117:13" pos:end="117:13">n</name> <operator pos:start="117:15" pos:end="117:15">&lt;</operator> <name pos:start="117:17" pos:end="117:29"><name pos:start="117:17" pos:end="117:17">s</name><operator pos:start="117:18" pos:end="117:19">-&gt;</operator><name pos:start="117:20" pos:end="117:29">nb_streams</name></name></expr>)</condition> <block pos:start="117:32" pos:end="283:9">{<block_content pos:start="119:13" pos:end="281:13">

            <decl_stmt pos:start="119:13" pos:end="119:25"><decl pos:start="119:13" pos:end="119:24"><type pos:start="119:13" pos:end="119:22"><name pos:start="119:13" pos:end="119:20">AVStream</name> <modifier pos:start="119:22" pos:end="119:22">*</modifier></type><name pos:start="119:23" pos:end="119:24">st</name></decl>;</decl_stmt>

            <decl_stmt pos:start="121:13" pos:end="121:27"><decl pos:start="121:13" pos:end="121:26"><type pos:start="121:13" pos:end="121:23"><name pos:start="121:13" pos:end="121:21">AVIStream</name> <modifier pos:start="121:23" pos:end="121:23">*</modifier></type><name pos:start="121:24" pos:end="121:26">ast</name></decl>;</decl_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:32"><expr pos:start="123:13" pos:end="123:31"><name pos:start="123:13" pos:end="123:14">st</name>  <operator pos:start="123:17" pos:end="123:17">=</operator> <name pos:start="123:19" pos:end="123:31"><name pos:start="123:19" pos:end="123:19">s</name><operator pos:start="123:20" pos:end="123:21">-&gt;</operator><name pos:start="123:22" pos:end="123:28">streams</name><index pos:start="123:29" pos:end="123:31">[<expr pos:start="123:30" pos:end="123:30"><name pos:start="123:30" pos:end="123:30">n</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:32"><expr pos:start="125:13" pos:end="125:31"><name pos:start="125:13" pos:end="125:15">ast</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <name pos:start="125:19" pos:end="125:31"><name pos:start="125:19" pos:end="125:20">st</name><operator pos:start="125:21" pos:end="125:22">-&gt;</operator><name pos:start="125:23" pos:end="125:31">priv_data</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="129:13" pos:end="135:13"><if pos:start="129:13" pos:end="135:13">if <condition pos:start="129:16" pos:end="129:21">(<expr pos:start="129:17" pos:end="129:20"><operator pos:start="129:17" pos:end="129:17">!</operator><name pos:start="129:18" pos:end="129:20">ast</name></expr>)</condition> <block pos:start="129:23" pos:end="135:13">{<block_content pos:start="131:17" pos:end="133:25">

                <expr_stmt pos:start="131:17" pos:end="131:84"><expr pos:start="131:17" pos:end="131:83"><call pos:start="131:17" pos:end="131:83"><name pos:start="131:17" pos:end="131:22">av_log</name><argument_list pos:start="131:23" pos:end="131:83">(<argument pos:start="131:24" pos:end="131:24"><expr pos:start="131:24" pos:end="131:24"><name pos:start="131:24" pos:end="131:24">s</name></expr></argument>, <argument pos:start="131:27" pos:end="131:40"><expr pos:start="131:27" pos:end="131:40"><name pos:start="131:27" pos:end="131:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="131:43" pos:end="131:79"><expr pos:start="131:43" pos:end="131:79"><literal type="string" pos:start="131:43" pos:end="131:79">"Skipping foreign stream %d packet\n"</literal></expr></argument>, <argument pos:start="131:82" pos:end="131:82"><expr pos:start="131:82" pos:end="131:82"><name pos:start="131:82" pos:end="131:82">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="133:17" pos:end="133:25">continue;</continue>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="139:13" pos:end="173:13"><if pos:start="139:13" pos:end="173:13">if <condition pos:start="139:16" pos:end="139:35">(<expr pos:start="139:17" pos:end="139:34"><name pos:start="139:17" pos:end="139:29"><name pos:start="139:17" pos:end="139:17">s</name><operator pos:start="139:18" pos:end="139:19">-&gt;</operator><name pos:start="139:20" pos:end="139:29">nb_streams</name></name> <operator pos:start="139:31" pos:end="139:32">&gt;=</operator> <literal type="number" pos:start="139:34" pos:end="139:34">2</literal></expr>)</condition> <block pos:start="139:37" pos:end="173:13">{<block_content pos:start="141:17" pos:end="171:17">

                <decl_stmt pos:start="141:17" pos:end="141:48"><decl pos:start="141:17" pos:end="141:47"><type pos:start="141:17" pos:end="141:26"><name pos:start="141:17" pos:end="141:24">AVStream</name> <modifier pos:start="141:26" pos:end="141:26">*</modifier></type><name pos:start="141:27" pos:end="141:29">st1</name>   <init pos:start="141:33" pos:end="141:47">= <expr pos:start="141:35" pos:end="141:47"><name pos:start="141:35" pos:end="141:47"><name pos:start="141:35" pos:end="141:35">s</name><operator pos:start="141:36" pos:end="141:37">-&gt;</operator><name pos:start="141:38" pos:end="141:44">streams</name><index pos:start="141:45" pos:end="141:47">[<expr pos:start="141:46" pos:end="141:46"><literal type="number" pos:start="141:46" pos:end="141:46">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="143:17" pos:end="143:49"><decl pos:start="143:17" pos:end="143:48"><type pos:start="143:17" pos:end="143:27"><name pos:start="143:17" pos:end="143:25">AVIStream</name> <modifier pos:start="143:27" pos:end="143:27">*</modifier></type><name pos:start="143:28" pos:end="143:31">ast1</name> <init pos:start="143:33" pos:end="143:48">= <expr pos:start="143:35" pos:end="143:48"><name pos:start="143:35" pos:end="143:48"><name pos:start="143:35" pos:end="143:37">st1</name><operator pos:start="143:38" pos:end="143:39">-&gt;</operator><name pos:start="143:40" pos:end="143:48">priv_data</name></name></expr></init></decl>;</decl_stmt>

                <comment type="line" pos:start="145:17" pos:end="145:62">// workaround for broken small-file-bug402.avi</comment>

                <if_stmt pos:start="147:17" pos:end="171:17"><if pos:start="147:17" pos:end="171:17">if <condition pos:start="147:20" pos:end="159:19">(   <expr pos:start="147:24" pos:end="157:76"><name pos:start="147:24" pos:end="147:27"><name pos:start="147:24" pos:end="147:24">d</name><index pos:start="147:25" pos:end="147:27">[<expr pos:start="147:26" pos:end="147:26"><literal type="number" pos:start="147:26" pos:end="147:26">2</literal></expr>]</index></name> <operator pos:start="147:29" pos:end="147:30">==</operator> <literal type="char" pos:start="147:32" pos:end="147:34">'w'</literal> <operator pos:start="147:36" pos:end="147:37">&amp;&amp;</operator> <name pos:start="147:39" pos:end="147:42"><name pos:start="147:39" pos:end="147:39">d</name><index pos:start="147:40" pos:end="147:42">[<expr pos:start="147:41" pos:end="147:41"><literal type="number" pos:start="147:41" pos:end="147:41">3</literal></expr>]</index></name> <operator pos:start="147:44" pos:end="147:45">==</operator> <literal type="char" pos:start="147:47" pos:end="147:49">'b'</literal>

                   <operator pos:start="149:20" pos:end="149:21">&amp;&amp;</operator> <name pos:start="149:23" pos:end="149:23">n</name> <operator pos:start="149:25" pos:end="149:26">==</operator> <literal type="number" pos:start="149:28" pos:end="149:28">0</literal>

                   <operator pos:start="151:20" pos:end="151:21">&amp;&amp;</operator> <name pos:start="151:23" pos:end="151:47"><name pos:start="151:23" pos:end="151:24">st</name> <operator pos:start="151:26" pos:end="151:27">-&gt;</operator><name pos:start="151:28" pos:end="151:35">codecpar</name><operator pos:start="151:36" pos:end="151:37">-&gt;</operator><name pos:start="151:38" pos:end="151:47">codec_type</name></name> <operator pos:start="151:49" pos:end="151:50">==</operator> <name pos:start="151:52" pos:end="151:69">AVMEDIA_TYPE_VIDEO</name>

                   <operator pos:start="153:20" pos:end="153:21">&amp;&amp;</operator> <name pos:start="153:23" pos:end="153:47"><name pos:start="153:23" pos:end="153:25">st1</name><operator pos:start="153:26" pos:end="153:27">-&gt;</operator><name pos:start="153:28" pos:end="153:35">codecpar</name><operator pos:start="153:36" pos:end="153:37">-&gt;</operator><name pos:start="153:38" pos:end="153:47">codec_type</name></name> <operator pos:start="153:49" pos:end="153:50">==</operator> <name pos:start="153:52" pos:end="153:69">AVMEDIA_TYPE_AUDIO</name>

                   <operator pos:start="155:20" pos:end="155:21">&amp;&amp;</operator> <name pos:start="155:23" pos:end="155:33"><name pos:start="155:23" pos:end="155:25">ast</name><operator pos:start="155:26" pos:end="155:27">-&gt;</operator><name pos:start="155:28" pos:end="155:33">prefix</name></name> <operator pos:start="155:35" pos:end="155:36">==</operator> <literal type="char" pos:start="155:38" pos:end="155:40">'d'</literal><operator pos:start="155:41" pos:end="155:41">*</operator><literal type="number" pos:start="155:42" pos:end="155:45">256</literal><operator pos:start="155:45" pos:end="155:45">+</operator><literal type="char" pos:start="155:46" pos:end="155:48">'c'</literal>

                   <operator pos:start="157:20" pos:end="157:21">&amp;&amp;</operator> <operator pos:start="157:23" pos:end="157:23">(</operator><name pos:start="157:24" pos:end="157:27"><name pos:start="157:24" pos:end="157:24">d</name><index pos:start="157:25" pos:end="157:27">[<expr pos:start="157:26" pos:end="157:26"><literal type="number" pos:start="157:26" pos:end="157:26">2</literal></expr>]</index></name><operator pos:start="157:28" pos:end="157:28">*</operator><literal type="number" pos:start="157:29" pos:end="157:32">256</literal><operator pos:start="157:32" pos:end="157:32">+</operator><name pos:start="157:33" pos:end="157:36"><name pos:start="157:33" pos:end="157:33">d</name><index pos:start="157:34" pos:end="157:36">[<expr pos:start="157:35" pos:end="157:35"><literal type="number" pos:start="157:35" pos:end="157:35">3</literal></expr>]</index></name> <operator pos:start="157:38" pos:end="157:39">==</operator> <name pos:start="157:41" pos:end="157:52"><name pos:start="157:41" pos:end="157:44">ast1</name><operator pos:start="157:45" pos:end="157:46">-&gt;</operator><name pos:start="157:47" pos:end="157:52">prefix</name></name> <operator pos:start="157:54" pos:end="157:55">||</operator> <operator pos:start="157:57" pos:end="157:57">!</operator><name pos:start="157:58" pos:end="157:75"><name pos:start="157:58" pos:end="157:61">ast1</name><operator pos:start="157:62" pos:end="157:63">-&gt;</operator><name pos:start="157:64" pos:end="157:75">prefix_count</name></name><operator pos:start="157:76" pos:end="157:76">)</operator></expr>

                  )</condition> <block pos:start="159:21" pos:end="171:17">{<block_content pos:start="161:21" pos:end="169:85">

                    <expr_stmt pos:start="161:21" pos:end="161:28"><expr pos:start="161:21" pos:end="161:27"><name pos:start="161:21" pos:end="161:21">n</name>   <operator pos:start="161:25" pos:end="161:25">=</operator> <literal type="number" pos:start="161:27" pos:end="161:27">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="163:21" pos:end="163:30"><expr pos:start="163:21" pos:end="163:29"><name pos:start="163:21" pos:end="163:22">st</name>  <operator pos:start="163:25" pos:end="163:25">=</operator> <name pos:start="163:27" pos:end="163:29">st1</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="165:21" pos:end="165:31"><expr pos:start="165:21" pos:end="165:30"><name pos:start="165:21" pos:end="165:23">ast</name> <operator pos:start="165:25" pos:end="165:25">=</operator> <name pos:start="165:27" pos:end="165:30">ast1</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="167:21" pos:end="169:85"><expr pos:start="167:21" pos:end="169:84"><call pos:start="167:21" pos:end="169:84"><name pos:start="167:21" pos:end="167:26">av_log</name><argument_list pos:start="167:27" pos:end="169:84">(<argument pos:start="167:28" pos:end="167:28"><expr pos:start="167:28" pos:end="167:28"><name pos:start="167:28" pos:end="167:28">s</name></expr></argument>, <argument pos:start="167:31" pos:end="167:44"><expr pos:start="167:31" pos:end="167:44"><name pos:start="167:31" pos:end="167:44">AV_LOG_WARNING</name></expr></argument>,

                           <argument pos:start="169:28" pos:end="169:83"><expr pos:start="169:28" pos:end="169:83"><literal type="string" pos:start="169:28" pos:end="169:83">"Invalid stream + prefix combination, assuming audio.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="177:13" pos:end="199:13"><if pos:start="177:13" pos:end="199:13">if <condition pos:start="177:16" pos:end="187:49">(<expr pos:start="177:17" pos:end="187:48"><operator pos:start="177:17" pos:end="177:17">!</operator><name pos:start="177:18" pos:end="177:30"><name pos:start="177:18" pos:end="177:20">avi</name><operator pos:start="177:21" pos:end="177:22">-&gt;</operator><name pos:start="177:23" pos:end="177:30">dv_demux</name></name> <operator pos:start="177:32" pos:end="177:33">&amp;&amp;</operator>

                <operator pos:start="179:17" pos:end="179:17">(</operator><operator pos:start="179:18" pos:end="179:18">(</operator><name pos:start="179:19" pos:end="179:29"><name pos:start="179:19" pos:end="179:20">st</name><operator pos:start="179:21" pos:end="179:22">-&gt;</operator><name pos:start="179:23" pos:end="179:29">discard</name></name> <operator pos:start="179:31" pos:end="179:32">&gt;=</operator> <name pos:start="179:34" pos:end="179:50">AVDISCARD_DEFAULT</name> <operator pos:start="179:52" pos:end="179:53">&amp;&amp;</operator> <name pos:start="179:55" pos:end="179:58">size</name> <operator pos:start="179:60" pos:end="179:61">==</operator> <literal type="number" pos:start="179:63" pos:end="179:63">0</literal><operator pos:start="179:64" pos:end="179:64">)</operator> <comment type="block" pos:start="179:66" pos:end="185:52">/* ||

                 // FIXME: needs a little reordering

                 (st-&gt;discard &gt;= AVDISCARD_NONKEY &amp;&amp;

                 !(pkt-&gt;flags &amp; AV_PKT_FLAG_KEY)) */</comment>

                <operator pos:start="187:17" pos:end="187:18">||</operator> <name pos:start="187:20" pos:end="187:30"><name pos:start="187:20" pos:end="187:21">st</name><operator pos:start="187:22" pos:end="187:23">-&gt;</operator><name pos:start="187:24" pos:end="187:30">discard</name></name> <operator pos:start="187:32" pos:end="187:33">&gt;=</operator> <name pos:start="187:35" pos:end="187:47">AVDISCARD_ALL</name><operator pos:start="187:48" pos:end="187:48">)</operator></expr>)</condition> <block pos:start="187:51" pos:end="199:13">{<block_content pos:start="189:17" pos:end="197:17">

                <if_stmt pos:start="189:17" pos:end="197:17"><if pos:start="189:17" pos:end="197:17">if <condition pos:start="189:20" pos:end="189:32">(<expr pos:start="189:21" pos:end="189:31"><operator pos:start="189:21" pos:end="189:21">!</operator><name pos:start="189:22" pos:end="189:31">exit_early</name></expr>)</condition> <block pos:start="189:34" pos:end="197:17">{<block_content pos:start="191:21" pos:end="195:36">

                    <expr_stmt pos:start="191:21" pos:end="191:65"><expr pos:start="191:21" pos:end="191:64"><name pos:start="191:21" pos:end="191:37"><name pos:start="191:21" pos:end="191:23">ast</name><operator pos:start="191:24" pos:end="191:25">-&gt;</operator><name pos:start="191:26" pos:end="191:37">frame_offset</name></name> <operator pos:start="191:39" pos:end="191:40">+=</operator> <call pos:start="191:42" pos:end="191:64"><name pos:start="191:42" pos:end="191:53">get_duration</name><argument_list pos:start="191:54" pos:end="191:64">(<argument pos:start="191:55" pos:end="191:57"><expr pos:start="191:55" pos:end="191:57"><name pos:start="191:55" pos:end="191:57">ast</name></expr></argument>, <argument pos:start="191:60" pos:end="191:63"><expr pos:start="191:60" pos:end="191:63"><name pos:start="191:60" pos:end="191:63">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:40"><expr pos:start="193:21" pos:end="193:39"><call pos:start="193:21" pos:end="193:39"><name pos:start="193:21" pos:end="193:29">avio_skip</name><argument_list pos:start="193:30" pos:end="193:39">(<argument pos:start="193:31" pos:end="193:32"><expr pos:start="193:31" pos:end="193:32"><name pos:start="193:31" pos:end="193:32">pb</name></expr></argument>, <argument pos:start="193:35" pos:end="193:38"><expr pos:start="193:35" pos:end="193:38"><name pos:start="193:35" pos:end="193:38">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="195:21" pos:end="195:36">goto <name pos:start="195:26" pos:end="195:35">start_sync</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="203:13" pos:end="281:13"><if pos:start="203:13" pos:end="227:13">if <condition pos:start="203:16" pos:end="203:66">(<expr pos:start="203:17" pos:end="203:65"><name pos:start="203:17" pos:end="203:20"><name pos:start="203:17" pos:end="203:17">d</name><index pos:start="203:18" pos:end="203:20">[<expr pos:start="203:19" pos:end="203:19"><literal type="number" pos:start="203:19" pos:end="203:19">2</literal></expr>]</index></name> <operator pos:start="203:22" pos:end="203:23">==</operator> <literal type="char" pos:start="203:25" pos:end="203:27">'p'</literal> <operator pos:start="203:29" pos:end="203:30">&amp;&amp;</operator> <name pos:start="203:32" pos:end="203:35"><name pos:start="203:32" pos:end="203:32">d</name><index pos:start="203:33" pos:end="203:35">[<expr pos:start="203:34" pos:end="203:34"><literal type="number" pos:start="203:34" pos:end="203:34">3</literal></expr>]</index></name> <operator pos:start="203:37" pos:end="203:38">==</operator> <literal type="char" pos:start="203:40" pos:end="203:42">'c'</literal> <operator pos:start="203:44" pos:end="203:45">&amp;&amp;</operator> <name pos:start="203:47" pos:end="203:50">size</name> <operator pos:start="203:52" pos:end="203:53">&lt;=</operator> <literal type="number" pos:start="203:55" pos:end="203:55">4</literal> <operator pos:start="203:57" pos:end="203:57">*</operator> <literal type="number" pos:start="203:59" pos:end="203:63">256</literal> <operator pos:start="203:63" pos:end="203:63">+</operator> <literal type="number" pos:start="203:65" pos:end="203:65">4</literal></expr>)</condition> <block pos:start="203:68" pos:end="227:13">{<block_content pos:start="205:17" pos:end="225:32">

                <decl_stmt pos:start="205:17" pos:end="205:39"><decl pos:start="205:17" pos:end="205:38"><type pos:start="205:17" pos:end="205:19"><name pos:start="205:17" pos:end="205:19">int</name></type> <name pos:start="205:21" pos:end="205:21">k</name>    <init pos:start="205:26" pos:end="205:38">= <expr pos:start="205:28" pos:end="205:38"><call pos:start="205:28" pos:end="205:38"><name pos:start="205:28" pos:end="205:34">avio_r8</name><argument_list pos:start="205:35" pos:end="205:38">(<argument pos:start="205:36" pos:end="205:37"><expr pos:start="205:36" pos:end="205:37"><name pos:start="205:36" pos:end="205:37">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="207:17" pos:end="207:56"><decl pos:start="207:17" pos:end="207:55"><type pos:start="207:17" pos:end="207:19"><name pos:start="207:17" pos:end="207:19">int</name></type> <name pos:start="207:21" pos:end="207:24">last</name> <init pos:start="207:26" pos:end="207:55">= <expr pos:start="207:28" pos:end="207:55"><operator pos:start="207:28" pos:end="207:28">(</operator><name pos:start="207:29" pos:end="207:29">k</name> <operator pos:start="207:31" pos:end="207:31">+</operator> <call pos:start="207:33" pos:end="207:43"><name pos:start="207:33" pos:end="207:39">avio_r8</name><argument_list pos:start="207:40" pos:end="207:43">(<argument pos:start="207:41" pos:end="207:42"><expr pos:start="207:41" pos:end="207:42"><name pos:start="207:41" pos:end="207:42">pb</name></expr></argument>)</argument_list></call> <operator pos:start="207:45" pos:end="207:45">-</operator> <literal type="number" pos:start="207:47" pos:end="207:47">1</literal><operator pos:start="207:48" pos:end="207:48">)</operator> <operator pos:start="207:50" pos:end="207:50">&amp;</operator> <literal type="number" pos:start="207:52" pos:end="207:55">0xFF</literal></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="211:17" pos:end="211:30"><expr pos:start="211:17" pos:end="211:29"><call pos:start="211:17" pos:end="211:29"><name pos:start="211:17" pos:end="211:25">avio_rl16</name><argument_list pos:start="211:26" pos:end="211:29">(<argument pos:start="211:27" pos:end="211:28"><expr pos:start="211:27" pos:end="211:28"><name pos:start="211:27" pos:end="211:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="211:32" pos:end="211:39">// flags</comment>



                <comment type="line" pos:start="215:17" pos:end="215:44">// b + (g &lt;&lt; 8) + (r &lt;&lt; 16);</comment>

                <for pos:start="217:17" pos:end="219:63">for <control pos:start="217:21" pos:end="217:38">(<init pos:start="217:22" pos:end="217:22">;</init> <condition pos:start="217:24" pos:end="217:33"><expr pos:start="217:24" pos:end="217:32"><name pos:start="217:24" pos:end="217:24">k</name> <operator pos:start="217:26" pos:end="217:27">&lt;=</operator> <name pos:start="217:29" pos:end="217:32">last</name></expr>;</condition> <incr pos:start="217:35" pos:end="217:37"><expr pos:start="217:35" pos:end="217:37"><name pos:start="217:35" pos:end="217:35">k</name><operator pos:start="217:36" pos:end="217:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="219:21" pos:end="219:63"><block_content pos:start="219:21" pos:end="219:63">

                    <expr_stmt pos:start="219:21" pos:end="219:63"><expr pos:start="219:21" pos:end="219:62"><name pos:start="219:21" pos:end="219:31"><name pos:start="219:21" pos:end="219:23">ast</name><operator pos:start="219:24" pos:end="219:25">-&gt;</operator><name pos:start="219:26" pos:end="219:28">pal</name><index pos:start="219:29" pos:end="219:31">[<expr pos:start="219:30" pos:end="219:30"><name pos:start="219:30" pos:end="219:30">k</name></expr>]</index></name> <operator pos:start="219:33" pos:end="219:33">=</operator> <literal type="number" pos:start="219:35" pos:end="219:39">0xFFU</literal><operator pos:start="219:40" pos:end="219:41">&lt;&lt;</operator><literal type="number" pos:start="219:42" pos:end="219:43">24</literal> <operator pos:start="219:45" pos:end="219:45">|</operator> <call pos:start="219:47" pos:end="219:59"><name pos:start="219:47" pos:end="219:55">avio_rb32</name><argument_list pos:start="219:56" pos:end="219:59">(<argument pos:start="219:57" pos:end="219:58"><expr pos:start="219:57" pos:end="219:58"><name pos:start="219:57" pos:end="219:58">pb</name></expr></argument>)</argument_list></call><operator pos:start="219:60" pos:end="219:61">&gt;&gt;</operator><literal type="number" pos:start="219:62" pos:end="219:62">8</literal></expr>;</expr_stmt></block_content></block></for>



                <expr_stmt pos:start="223:17" pos:end="223:33"><expr pos:start="223:17" pos:end="223:32"><name pos:start="223:17" pos:end="223:28"><name pos:start="223:17" pos:end="223:19">ast</name><operator pos:start="223:20" pos:end="223:21">-&gt;</operator><name pos:start="223:22" pos:end="223:28">has_pal</name></name> <operator pos:start="223:30" pos:end="223:30">=</operator> <literal type="number" pos:start="223:32" pos:end="223:32">1</literal></expr>;</expr_stmt>

                <goto pos:start="225:17" pos:end="225:32">goto <name pos:start="225:22" pos:end="225:31">start_sync</name>;</goto>

            </block_content>}</block></if> <if type="elseif" pos:start="227:15" pos:end="281:13">else if <condition pos:start="227:23" pos:end="235:55">(<expr pos:start="227:24" pos:end="231:55"><operator pos:start="227:24" pos:end="227:24">(</operator><operator pos:start="227:25" pos:end="227:25">(</operator><name pos:start="227:26" pos:end="227:42"><name pos:start="227:26" pos:end="227:28">ast</name><operator pos:start="227:29" pos:end="227:30">-&gt;</operator><name pos:start="227:31" pos:end="227:42">prefix_count</name></name> <operator pos:start="227:44" pos:end="227:44">&lt;</operator> <literal type="number" pos:start="227:46" pos:end="227:46">5</literal> <operator pos:start="227:48" pos:end="227:49">||</operator> <name pos:start="227:51" pos:end="227:54">sync</name> <operator pos:start="227:56" pos:end="227:56">+</operator> <literal type="number" pos:start="227:58" pos:end="227:58">9</literal> <operator pos:start="227:60" pos:end="227:60">&gt;</operator> <name pos:start="227:62" pos:end="227:62">i</name><operator pos:start="227:63" pos:end="227:63">)</operator> <operator pos:start="227:65" pos:end="227:66">&amp;&amp;</operator>

                        <name pos:start="229:25" pos:end="229:28"><name pos:start="229:25" pos:end="229:25">d</name><index pos:start="229:26" pos:end="229:28">[<expr pos:start="229:27" pos:end="229:27"><literal type="number" pos:start="229:27" pos:end="229:27">2</literal></expr>]</index></name> <operator pos:start="229:30" pos:end="229:30">&lt;</operator> <literal type="number" pos:start="229:32" pos:end="229:34">128</literal> <operator pos:start="229:36" pos:end="229:37">&amp;&amp;</operator> <name pos:start="229:39" pos:end="229:42"><name pos:start="229:39" pos:end="229:39">d</name><index pos:start="229:40" pos:end="229:42">[<expr pos:start="229:41" pos:end="229:41"><literal type="number" pos:start="229:41" pos:end="229:41">3</literal></expr>]</index></name> <operator pos:start="229:44" pos:end="229:44">&lt;</operator> <literal type="number" pos:start="229:46" pos:end="229:48">128</literal><operator pos:start="229:49" pos:end="229:49">)</operator> <operator pos:start="229:51" pos:end="229:52">||</operator>

                       <name pos:start="231:24" pos:end="231:27"><name pos:start="231:24" pos:end="231:24">d</name><index pos:start="231:25" pos:end="231:27">[<expr pos:start="231:26" pos:end="231:26"><literal type="number" pos:start="231:26" pos:end="231:26">2</literal></expr>]</index></name> <operator pos:start="231:29" pos:end="231:29">*</operator> <literal type="number" pos:start="231:31" pos:end="231:35">256</literal> <operator pos:start="231:35" pos:end="231:35">+</operator> <name pos:start="231:37" pos:end="231:40"><name pos:start="231:37" pos:end="231:37">d</name><index pos:start="231:38" pos:end="231:40">[<expr pos:start="231:39" pos:end="231:39"><literal type="number" pos:start="231:39" pos:end="231:39">3</literal></expr>]</index></name> <operator pos:start="231:42" pos:end="231:43">==</operator> <name pos:start="231:45" pos:end="231:55"><name pos:start="231:45" pos:end="231:47">ast</name><operator pos:start="231:48" pos:end="231:49">-&gt;</operator><name pos:start="231:50" pos:end="231:55">prefix</name></name></expr> <comment type="block" pos:start="231:57" pos:end="235:54">/* ||

                       (d[2] == 'd' &amp;&amp; d[3] == 'c') ||

                       (d[2] == 'w' &amp;&amp; d[3] == 'b') */</comment>)</condition> <block pos:start="235:57" pos:end="281:13">{<block_content pos:start="237:17" pos:end="279:25">

                <if_stmt pos:start="237:17" pos:end="239:29"><if pos:start="237:17" pos:end="239:29">if <condition pos:start="237:20" pos:end="237:31">(<expr pos:start="237:21" pos:end="237:30"><name pos:start="237:21" pos:end="237:30">exit_early</name></expr>)</condition><block type="pseudo" pos:start="239:21" pos:end="239:29"><block_content pos:start="239:21" pos:end="239:29">

                    <return pos:start="239:21" pos:end="239:29">return <expr pos:start="239:28" pos:end="239:28"><literal type="number" pos:start="239:28" pos:end="239:28">0</literal></expr>;</return></block_content></block></if></if_stmt>

                <if_stmt pos:start="241:17" pos:end="251:17"><if pos:start="241:17" pos:end="243:40">if <condition pos:start="241:20" pos:end="241:53">(<expr pos:start="241:21" pos:end="241:52"><name pos:start="241:21" pos:end="241:24"><name pos:start="241:21" pos:end="241:21">d</name><index pos:start="241:22" pos:end="241:24">[<expr pos:start="241:23" pos:end="241:23"><literal type="number" pos:start="241:23" pos:end="241:23">2</literal></expr>]</index></name> <operator pos:start="241:26" pos:end="241:26">*</operator> <literal type="number" pos:start="241:28" pos:end="241:32">256</literal> <operator pos:start="241:32" pos:end="241:32">+</operator> <name pos:start="241:34" pos:end="241:37"><name pos:start="241:34" pos:end="241:34">d</name><index pos:start="241:35" pos:end="241:37">[<expr pos:start="241:36" pos:end="241:36"><literal type="number" pos:start="241:36" pos:end="241:36">3</literal></expr>]</index></name> <operator pos:start="241:39" pos:end="241:40">==</operator> <name pos:start="241:42" pos:end="241:52"><name pos:start="241:42" pos:end="241:44">ast</name><operator pos:start="241:45" pos:end="241:46">-&gt;</operator><name pos:start="241:47" pos:end="241:52">prefix</name></name></expr>)</condition><block type="pseudo" pos:start="243:21" pos:end="243:40"><block_content pos:start="243:21" pos:end="243:40">

                    <expr_stmt pos:start="243:21" pos:end="243:40"><expr pos:start="243:21" pos:end="243:39"><name pos:start="243:21" pos:end="243:37"><name pos:start="243:21" pos:end="243:23">ast</name><operator pos:start="243:24" pos:end="243:25">-&gt;</operator><name pos:start="243:26" pos:end="243:37">prefix_count</name></name><operator pos:start="243:38" pos:end="243:39">++</operator></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="245:17" pos:end="251:17">else <block pos:start="245:22" pos:end="251:17">{<block_content pos:start="247:21" pos:end="249:42">

                    <expr_stmt pos:start="247:21" pos:end="247:58"><expr pos:start="247:21" pos:end="247:57"><name pos:start="247:21" pos:end="247:31"><name pos:start="247:21" pos:end="247:23">ast</name><operator pos:start="247:24" pos:end="247:25">-&gt;</operator><name pos:start="247:26" pos:end="247:31">prefix</name></name>       <operator pos:start="247:39" pos:end="247:39">=</operator> <name pos:start="247:41" pos:end="247:44"><name pos:start="247:41" pos:end="247:41">d</name><index pos:start="247:42" pos:end="247:44">[<expr pos:start="247:43" pos:end="247:43"><literal type="number" pos:start="247:43" pos:end="247:43">2</literal></expr>]</index></name> <operator pos:start="247:46" pos:end="247:46">*</operator> <literal type="number" pos:start="247:48" pos:end="247:52">256</literal> <operator pos:start="247:52" pos:end="247:52">+</operator> <name pos:start="247:54" pos:end="247:57"><name pos:start="247:54" pos:end="247:54">d</name><index pos:start="247:55" pos:end="247:57">[<expr pos:start="247:56" pos:end="247:56"><literal type="number" pos:start="247:56" pos:end="247:56">3</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="249:21" pos:end="249:42"><expr pos:start="249:21" pos:end="249:41"><name pos:start="249:21" pos:end="249:37"><name pos:start="249:21" pos:end="249:23">ast</name><operator pos:start="249:24" pos:end="249:25">-&gt;</operator><name pos:start="249:26" pos:end="249:37">prefix_count</name></name> <operator pos:start="249:39" pos:end="249:39">=</operator> <literal type="number" pos:start="249:41" pos:end="249:41">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <expr_stmt pos:start="255:17" pos:end="255:38"><expr pos:start="255:17" pos:end="255:37"><name pos:start="255:17" pos:end="255:33"><name pos:start="255:17" pos:end="255:19">avi</name><operator pos:start="255:20" pos:end="255:21">-&gt;</operator><name pos:start="255:22" pos:end="255:33">stream_index</name></name> <operator pos:start="255:35" pos:end="255:35">=</operator> <name pos:start="255:37" pos:end="255:37">n</name></expr>;</expr_stmt>

                <expr_stmt pos:start="257:17" pos:end="257:45"><expr pos:start="257:17" pos:end="257:44"><name pos:start="257:17" pos:end="257:32"><name pos:start="257:17" pos:end="257:19">ast</name><operator pos:start="257:20" pos:end="257:21">-&gt;</operator><name pos:start="257:22" pos:end="257:32">packet_size</name></name>  <operator pos:start="257:35" pos:end="257:35">=</operator> <name pos:start="257:37" pos:end="257:40">size</name> <operator pos:start="257:42" pos:end="257:42">+</operator> <literal type="number" pos:start="257:44" pos:end="257:44">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="259:17" pos:end="259:41"><expr pos:start="259:17" pos:end="259:40"><name pos:start="259:17" pos:end="259:30"><name pos:start="259:17" pos:end="259:19">ast</name><operator pos:start="259:20" pos:end="259:21">-&gt;</operator><name pos:start="259:22" pos:end="259:30">remaining</name></name>    <operator pos:start="259:35" pos:end="259:35">=</operator> <name pos:start="259:37" pos:end="259:40">size</name></expr>;</expr_stmt>



                <if_stmt pos:start="263:17" pos:end="277:17"><if pos:start="263:17" pos:end="277:17">if <condition pos:start="263:20" pos:end="263:25">(<expr pos:start="263:21" pos:end="263:24"><name pos:start="263:21" pos:end="263:24">size</name></expr>)</condition> <block pos:start="263:27" pos:end="277:17">{<block_content pos:start="265:21" pos:end="275:21">

                    <decl_stmt pos:start="265:21" pos:end="265:53"><decl pos:start="265:21" pos:end="265:52"><type pos:start="265:21" pos:end="265:28"><name pos:start="265:21" pos:end="265:28">uint64_t</name></type> <name pos:start="265:30" pos:end="265:32">pos</name> <init pos:start="265:34" pos:end="265:52">= <expr pos:start="265:36" pos:end="265:52"><call pos:start="265:36" pos:end="265:48"><name pos:start="265:36" pos:end="265:44">avio_tell</name><argument_list pos:start="265:45" pos:end="265:48">(<argument pos:start="265:46" pos:end="265:47"><expr pos:start="265:46" pos:end="265:47"><name pos:start="265:46" pos:end="265:47">pb</name></expr></argument>)</argument_list></call> <operator pos:start="265:50" pos:end="265:50">-</operator> <literal type="number" pos:start="265:52" pos:end="265:52">8</literal></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="267:21" pos:end="275:21"><if pos:start="267:21" pos:end="275:21">if <condition pos:start="267:24" pos:end="269:78">(<expr pos:start="267:25" pos:end="269:77"><operator pos:start="267:25" pos:end="267:25">!</operator><name pos:start="267:26" pos:end="267:42"><name pos:start="267:26" pos:end="267:27">st</name><operator pos:start="267:28" pos:end="267:29">-&gt;</operator><name pos:start="267:30" pos:end="267:42">index_entries</name></name> <operator pos:start="267:44" pos:end="267:45">||</operator> <operator pos:start="267:47" pos:end="267:47">!</operator><name pos:start="267:48" pos:end="267:67"><name pos:start="267:48" pos:end="267:49">st</name><operator pos:start="267:50" pos:end="267:51">-&gt;</operator><name pos:start="267:52" pos:end="267:67">nb_index_entries</name></name> <operator pos:start="267:69" pos:end="267:70">||</operator>

                        <name pos:start="269:25" pos:end="269:67"><name pos:start="269:25" pos:end="269:26">st</name><operator pos:start="269:27" pos:end="269:28">-&gt;</operator><name pos:start="269:29" pos:end="269:41">index_entries</name><index pos:start="269:42" pos:end="269:67">[<expr pos:start="269:43" pos:end="269:66"><name pos:start="269:43" pos:end="269:62"><name pos:start="269:43" pos:end="269:44">st</name><operator pos:start="269:45" pos:end="269:46">-&gt;</operator><name pos:start="269:47" pos:end="269:62">nb_index_entries</name></name> <operator pos:start="269:64" pos:end="269:64">-</operator> <literal type="number" pos:start="269:66" pos:end="269:66">1</literal></expr>]</index></name><operator pos:start="269:68" pos:end="269:68">.</operator><name pos:start="269:69" pos:end="269:71">pos</name> <operator pos:start="269:73" pos:end="269:73">&lt;</operator> <name pos:start="269:75" pos:end="269:77">pos</name></expr>)</condition> <block pos:start="269:80" pos:end="275:21">{<block_content pos:start="271:25" pos:end="273:64">

                        <expr_stmt pos:start="271:25" pos:end="273:64"><expr pos:start="271:25" pos:end="273:63"><call pos:start="271:25" pos:end="273:63"><name pos:start="271:25" pos:end="271:42">av_add_index_entry</name><argument_list pos:start="271:43" pos:end="273:63">(<argument pos:start="271:44" pos:end="271:45"><expr pos:start="271:44" pos:end="271:45"><name pos:start="271:44" pos:end="271:45">st</name></expr></argument>, <argument pos:start="271:48" pos:end="271:50"><expr pos:start="271:48" pos:end="271:50"><name pos:start="271:48" pos:end="271:50">pos</name></expr></argument>, <argument pos:start="271:53" pos:end="271:69"><expr pos:start="271:53" pos:end="271:69"><name pos:start="271:53" pos:end="271:69"><name pos:start="271:53" pos:end="271:55">ast</name><operator pos:start="271:56" pos:end="271:57">-&gt;</operator><name pos:start="271:58" pos:end="271:69">frame_offset</name></name></expr></argument>, <argument pos:start="271:72" pos:end="271:75"><expr pos:start="271:72" pos:end="271:75"><name pos:start="271:72" pos:end="271:75">size</name></expr></argument>,

                                           <argument pos:start="273:44" pos:end="273:44"><expr pos:start="273:44" pos:end="273:44"><literal type="number" pos:start="273:44" pos:end="273:44">0</literal></expr></argument>, <argument pos:start="273:47" pos:end="273:62"><expr pos:start="273:47" pos:end="273:62"><name pos:start="273:47" pos:end="273:62">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <return pos:start="279:17" pos:end="279:25">return <expr pos:start="279:24" pos:end="279:24"><literal type="number" pos:start="279:24" pos:end="279:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="289:5" pos:end="291:25"><if pos:start="289:5" pos:end="291:25">if <condition pos:start="289:8" pos:end="289:18">(<expr pos:start="289:9" pos:end="289:17"><name pos:start="289:9" pos:end="289:17"><name pos:start="289:9" pos:end="289:10">pb</name><operator pos:start="289:11" pos:end="289:12">-&gt;</operator><name pos:start="289:13" pos:end="289:17">error</name></name></expr>)</condition><block type="pseudo" pos:start="291:9" pos:end="291:25"><block_content pos:start="291:9" pos:end="291:25">

        <return pos:start="291:9" pos:end="291:25">return <expr pos:start="291:16" pos:end="291:24"><name pos:start="291:16" pos:end="291:24"><name pos:start="291:16" pos:end="291:17">pb</name><operator pos:start="291:18" pos:end="291:19">-&gt;</operator><name pos:start="291:20" pos:end="291:24">error</name></name></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="293:5" pos:end="293:23">return <expr pos:start="293:12" pos:end="293:22"><name pos:start="293:12" pos:end="293:22">AVERROR_EOF</name></expr>;</return>

</block_content>}</block></function>
</unit>
