<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5594.c" pos:tabs="8"><function pos:start="1:1" pos:end="329:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">do_audio_out</name><parameter_list pos:start="1:25" pos:end="7:54">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:44"><decl pos:start="3:26" pos:end="3:44"><type pos:start="3:26" pos:end="3:44"><name pos:start="3:26" pos:end="3:39">AVOutputStream</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:44">ost</name></decl></parameter>,

                         <parameter pos:start="5:26" pos:end="5:43"><decl pos:start="5:26" pos:end="5:43"><type pos:start="5:26" pos:end="5:43"><name pos:start="5:26" pos:end="5:38">AVInputStream</name> <modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:43">ist</name></decl></parameter>,

                         <parameter pos:start="7:26" pos:end="7:43"><decl pos:start="7:26" pos:end="7:43"><type pos:start="7:26" pos:end="7:43"><name pos:start="7:26" pos:end="7:33">unsigned</name> <name pos:start="7:35" pos:end="7:38">char</name> <modifier pos:start="7:40" pos:end="7:40">*</modifier></type><name pos:start="7:41" pos:end="7:43">buf</name></decl></parameter>, <parameter pos:start="7:46" pos:end="7:53"><decl pos:start="7:46" pos:end="7:53"><type pos:start="7:46" pos:end="7:53"><name pos:start="7:46" pos:end="7:48">int</name></type> <name pos:start="7:50" pos:end="7:53">size</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="329:1">{<block_content pos:start="11:5" pos:end="327:5">

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:19">buftmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:36"><type pos:start="13:5" pos:end="13:20"><specifier pos:start="13:5" pos:end="13:10">static</specifier> <name pos:start="13:12" pos:end="13:18">uint8_t</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:29">audio_buf</name> <init pos:start="13:31" pos:end="13:36">= <expr pos:start="13:33" pos:end="13:36"><name pos:start="13:33" pos:end="13:36">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:36"><type pos:start="15:5" pos:end="15:20"><specifier pos:start="15:5" pos:end="15:10">static</specifier> <name pos:start="15:12" pos:end="15:18">uint8_t</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:29">audio_out</name> <init pos:start="15:31" pos:end="15:36">= <expr pos:start="15:33" pos:end="15:36"><name pos:start="15:33" pos:end="15:36">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:54"><decl pos:start="17:5" pos:end="17:53"><type pos:start="17:5" pos:end="17:13"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:13">int</name></type> <name pos:start="17:15" pos:end="17:28">audio_out_size</name><init pos:start="17:29" pos:end="17:53">= <expr pos:start="17:31" pos:end="17:53"><literal type="number" pos:start="17:31" pos:end="17:31">4</literal><operator pos:start="17:32" pos:end="17:32">*</operator><name pos:start="17:33" pos:end="17:53">MAX_AUDIO_PACKET_SIZE</name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="21:5" pos:end="21:35"><decl pos:start="21:5" pos:end="21:16"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:16">size_out</name></decl>, <decl pos:start="21:19" pos:end="21:29"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:19" pos:end="21:29">frame_bytes</name></decl>, <decl pos:start="21:32" pos:end="21:34"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:32" pos:end="21:34">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:40"><decl pos:start="23:5" pos:end="23:39"><type pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:18">AVCodecContext</name> <modifier pos:start="23:20" pos:end="23:20">*</modifier></type><name pos:start="23:21" pos:end="23:23">enc</name><init pos:start="23:24" pos:end="23:39">= <expr pos:start="23:26" pos:end="23:39"><name pos:start="23:26" pos:end="23:39"><name pos:start="23:26" pos:end="23:28">ost</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:32">st</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:39">codec</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:40"><decl pos:start="25:5" pos:end="25:39"><type pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:18">AVCodecContext</name> <modifier pos:start="25:20" pos:end="25:20">*</modifier></type><name pos:start="25:21" pos:end="25:23">dec</name><init pos:start="25:24" pos:end="25:39">= <expr pos:start="25:26" pos:end="25:39"><name pos:start="25:26" pos:end="25:39"><name pos:start="25:26" pos:end="25:28">ist</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:32">st</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:39">codec</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:43">/* SC: dynamic allocation of buffers */</comment>

    <if_stmt pos:start="31:5" pos:end="33:55"><if pos:start="31:5" pos:end="33:55">if <condition pos:start="31:8" pos:end="31:19">(<expr pos:start="31:9" pos:end="31:18"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:18">audio_buf</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:55"><block_content pos:start="33:9" pos:end="33:55">

        <expr_stmt pos:start="33:9" pos:end="33:55"><expr pos:start="33:9" pos:end="33:54"><name pos:start="33:9" pos:end="33:17">audio_buf</name> <operator pos:start="33:19" pos:end="33:19">=</operator> <call pos:start="33:21" pos:end="33:54"><name pos:start="33:21" pos:end="33:29">av_malloc</name><argument_list pos:start="33:30" pos:end="33:54">(<argument pos:start="33:31" pos:end="33:53"><expr pos:start="33:31" pos:end="33:53"><literal type="number" pos:start="33:31" pos:end="33:31">2</literal><operator pos:start="33:32" pos:end="33:32">*</operator><name pos:start="33:33" pos:end="33:53">MAX_AUDIO_PACKET_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="37:46"><if pos:start="35:5" pos:end="37:46">if <condition pos:start="35:8" pos:end="35:19">(<expr pos:start="35:9" pos:end="35:18"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:18">audio_out</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:46"><block_content pos:start="37:9" pos:end="37:46">

        <expr_stmt pos:start="37:9" pos:end="37:46"><expr pos:start="37:9" pos:end="37:45"><name pos:start="37:9" pos:end="37:17">audio_out</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <call pos:start="37:21" pos:end="37:45"><name pos:start="37:21" pos:end="37:29">av_malloc</name><argument_list pos:start="37:30" pos:end="37:45">(<argument pos:start="37:31" pos:end="37:44"><expr pos:start="37:31" pos:end="37:44"><name pos:start="37:31" pos:end="37:44">audio_out_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="41:15"><if pos:start="39:5" pos:end="41:15">if <condition pos:start="39:8" pos:end="39:33">(<expr pos:start="39:9" pos:end="39:32"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:18">audio_buf</name> <operator pos:start="39:20" pos:end="39:21">||</operator> <operator pos:start="39:23" pos:end="39:23">!</operator><name pos:start="39:24" pos:end="39:32">audio_out</name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:15"><block_content pos:start="41:9" pos:end="41:15">

        <return pos:start="41:9" pos:end="41:15">return;</return></block_content></block></if></if_stmt>               <comment type="block" pos:start="41:31" pos:end="41:60">/* Should signal an error ! */</comment>



    <if_stmt pos:start="45:5" pos:end="47:32"><if pos:start="45:5" pos:end="47:32">if <condition pos:start="45:8" pos:end="45:39">(<expr pos:start="45:9" pos:end="45:38"><name pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:11">enc</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:21">channels</name></name> <operator pos:start="45:23" pos:end="45:24">!=</operator> <name pos:start="45:26" pos:end="45:38"><name pos:start="45:26" pos:end="45:28">dec</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:38">channels</name></name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:32"><block_content pos:start="47:9" pos:end="47:32">

        <expr_stmt pos:start="47:9" pos:end="47:32"><expr pos:start="47:9" pos:end="47:31"><name pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:11">ost</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:27">audio_resample</name></name> <operator pos:start="47:29" pos:end="47:29">=</operator> <literal type="number" pos:start="47:31" pos:end="47:31">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="69:5"><if pos:start="51:5" pos:end="69:5">if <condition pos:start="51:8" pos:end="51:46">(<expr pos:start="51:9" pos:end="51:45"><name pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:11">ost</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:27">audio_resample</name></name> <operator pos:start="51:29" pos:end="51:30">&amp;&amp;</operator> <operator pos:start="51:32" pos:end="51:32">!</operator><name pos:start="51:33" pos:end="51:45"><name pos:start="51:33" pos:end="51:35">ost</name><operator pos:start="51:36" pos:end="51:37">-&gt;</operator><name pos:start="51:38" pos:end="51:45">resample</name></name></expr>)</condition> <block pos:start="51:48" pos:end="69:5">{<block_content pos:start="53:9" pos:end="67:9">

        <expr_stmt pos:start="53:9" pos:end="55:80"><expr pos:start="53:9" pos:end="55:79"><name pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:11">ost</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:21">resample</name></name> <operator pos:start="53:23" pos:end="53:23">=</operator> <call pos:start="53:25" pos:end="55:79"><name pos:start="53:25" pos:end="53:43">audio_resample_init</name><argument_list pos:start="53:44" pos:end="55:79">(<argument pos:start="53:45" pos:end="53:57"><expr pos:start="53:45" pos:end="53:57"><name pos:start="53:45" pos:end="53:57"><name pos:start="53:45" pos:end="53:47">enc</name><operator pos:start="53:48" pos:end="53:49">-&gt;</operator><name pos:start="53:50" pos:end="53:57">channels</name></name></expr></argument>,    <argument pos:start="53:63" pos:end="53:75"><expr pos:start="53:63" pos:end="53:75"><name pos:start="53:63" pos:end="53:75"><name pos:start="53:63" pos:end="53:65">dec</name><operator pos:start="53:66" pos:end="53:67">-&gt;</operator><name pos:start="53:68" pos:end="53:75">channels</name></name></expr></argument>,

                                            <argument pos:start="55:45" pos:end="55:60"><expr pos:start="55:45" pos:end="55:60"><name pos:start="55:45" pos:end="55:60"><name pos:start="55:45" pos:end="55:47">enc</name><operator pos:start="55:48" pos:end="55:49">-&gt;</operator><name pos:start="55:50" pos:end="55:60">sample_rate</name></name></expr></argument>, <argument pos:start="55:63" pos:end="55:78"><expr pos:start="55:63" pos:end="55:78"><name pos:start="55:63" pos:end="55:78"><name pos:start="55:63" pos:end="55:65">dec</name><operator pos:start="55:66" pos:end="55:67">-&gt;</operator><name pos:start="55:68" pos:end="55:78">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="67:9"><if pos:start="57:9" pos:end="67:9">if <condition pos:start="57:12" pos:end="57:27">(<expr pos:start="57:13" pos:end="57:26"><operator pos:start="57:13" pos:end="57:13">!</operator><name pos:start="57:14" pos:end="57:26"><name pos:start="57:14" pos:end="57:16">ost</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:26">resample</name></name></expr>)</condition> <block pos:start="57:29" pos:end="67:9">{<block_content pos:start="59:13" pos:end="65:23">

            <expr_stmt pos:start="59:13" pos:end="63:53"><expr pos:start="59:13" pos:end="63:52"><call pos:start="59:13" pos:end="63:52"><name pos:start="59:13" pos:end="59:19">fprintf</name><argument_list pos:start="59:20" pos:end="63:52">(<argument pos:start="59:21" pos:end="59:26"><expr pos:start="59:21" pos:end="59:26"><name pos:start="59:21" pos:end="59:26">stderr</name></expr></argument>, <argument pos:start="59:29" pos:end="59:91"><expr pos:start="59:29" pos:end="59:91"><literal type="string" pos:start="59:29" pos:end="59:91">"Can not resample %d channels @ %d Hz to %d channels @ %d Hz\n"</literal></expr></argument>,

                    <argument pos:start="61:21" pos:end="61:33"><expr pos:start="61:21" pos:end="61:33"><name pos:start="61:21" pos:end="61:33"><name pos:start="61:21" pos:end="61:23">dec</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:33">channels</name></name></expr></argument>, <argument pos:start="61:36" pos:end="61:51"><expr pos:start="61:36" pos:end="61:51"><name pos:start="61:36" pos:end="61:51"><name pos:start="61:36" pos:end="61:38">dec</name><operator pos:start="61:39" pos:end="61:40">-&gt;</operator><name pos:start="61:41" pos:end="61:51">sample_rate</name></name></expr></argument>,

                    <argument pos:start="63:21" pos:end="63:33"><expr pos:start="63:21" pos:end="63:33"><name pos:start="63:21" pos:end="63:33"><name pos:start="63:21" pos:end="63:23">enc</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:33">channels</name></name></expr></argument>, <argument pos:start="63:36" pos:end="63:51"><expr pos:start="63:36" pos:end="63:51"><name pos:start="63:36" pos:end="63:51"><name pos:start="63:36" pos:end="63:38">enc</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:51">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:23"><expr pos:start="65:13" pos:end="65:22"><call pos:start="65:13" pos:end="65:22"><name pos:start="65:13" pos:end="65:19">av_exit</name><argument_list pos:start="65:20" pos:end="65:22">(<argument pos:start="65:21" pos:end="65:21"><expr pos:start="65:21" pos:end="65:21"><literal type="number" pos:start="65:21" pos:end="65:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="73:5" pos:end="163:82"><if pos:start="73:5" pos:end="159:5">if<condition pos:start="73:7" pos:end="73:25">(<expr pos:start="73:8" pos:end="73:24"><name pos:start="73:8" pos:end="73:24">audio_sync_method</name></expr>)</condition><block pos:start="73:26" pos:end="159:5">{<block_content pos:start="75:9" pos:end="157:9">

        <decl_stmt pos:start="75:9" pos:end="77:74"><decl pos:start="75:9" pos:end="77:73"><type pos:start="75:9" pos:end="75:14"><name pos:start="75:9" pos:end="75:14">double</name></type> <name pos:start="75:16" pos:end="75:20">delta</name> <init pos:start="75:22" pos:end="77:73">= <expr pos:start="75:24" pos:end="77:73"><call pos:start="75:24" pos:end="75:41"><name pos:start="75:24" pos:end="75:36">get_sync_ipts</name><argument_list pos:start="75:37" pos:end="75:41">(<argument pos:start="75:38" pos:end="75:40"><expr pos:start="75:38" pos:end="75:40"><name pos:start="75:38" pos:end="75:40">ost</name></expr></argument>)</argument_list></call> <operator pos:start="75:43" pos:end="75:43">*</operator> <name pos:start="75:45" pos:end="75:60"><name pos:start="75:45" pos:end="75:47">enc</name><operator pos:start="75:48" pos:end="75:49">-&gt;</operator><name pos:start="75:50" pos:end="75:60">sample_rate</name></name> <operator pos:start="75:62" pos:end="75:62">-</operator> <name pos:start="75:64" pos:end="75:77"><name pos:start="75:64" pos:end="75:66">ost</name><operator pos:start="75:67" pos:end="75:68">-&gt;</operator><name pos:start="75:69" pos:end="75:77">sync_opts</name></name>

                <operator pos:start="77:17" pos:end="77:17">-</operator> <call pos:start="77:19" pos:end="77:42"><name pos:start="77:19" pos:end="77:30">av_fifo_size</name><argument_list pos:start="77:31" pos:end="77:42">(<argument pos:start="77:32" pos:end="77:41"><expr pos:start="77:32" pos:end="77:41"><operator pos:start="77:32" pos:end="77:32">&amp;</operator><name pos:start="77:33" pos:end="77:41"><name pos:start="77:33" pos:end="77:35">ost</name><operator pos:start="77:36" pos:end="77:37">-&gt;</operator><name pos:start="77:38" pos:end="77:41">fifo</name></name></expr></argument>)</argument_list></call><operator pos:start="77:43" pos:end="77:43">/</operator><operator pos:start="77:44" pos:end="77:44">(</operator><name pos:start="77:45" pos:end="77:68"><name pos:start="77:45" pos:end="77:47">ost</name><operator pos:start="77:48" pos:end="77:49">-&gt;</operator><name pos:start="77:50" pos:end="77:51">st</name><operator pos:start="77:52" pos:end="77:53">-&gt;</operator><name pos:start="77:54" pos:end="77:58">codec</name><operator pos:start="77:59" pos:end="77:60">-&gt;</operator><name pos:start="77:61" pos:end="77:68">channels</name></name> <operator pos:start="77:70" pos:end="77:70">*</operator> <literal type="number" pos:start="77:72" pos:end="77:72">2</literal><operator pos:start="77:73" pos:end="77:73">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="79:9" pos:end="79:76"><decl pos:start="79:9" pos:end="79:75"><type pos:start="79:9" pos:end="79:14"><name pos:start="79:9" pos:end="79:14">double</name></type> <name pos:start="79:16" pos:end="79:21">idelta</name><init pos:start="79:22" pos:end="79:75">= <expr pos:start="79:24" pos:end="79:75"><name pos:start="79:24" pos:end="79:28">delta</name><operator pos:start="79:29" pos:end="79:29">*</operator><name pos:start="79:30" pos:end="79:56"><name pos:start="79:30" pos:end="79:32">ist</name><operator pos:start="79:33" pos:end="79:34">-&gt;</operator><name pos:start="79:35" pos:end="79:36">st</name><operator pos:start="79:37" pos:end="79:38">-&gt;</operator><name pos:start="79:39" pos:end="79:43">codec</name><operator pos:start="79:44" pos:end="79:45">-&gt;</operator><name pos:start="79:46" pos:end="79:56">sample_rate</name></name> <operator pos:start="79:58" pos:end="79:58">/</operator> <name pos:start="79:60" pos:end="79:75"><name pos:start="79:60" pos:end="79:62">enc</name><operator pos:start="79:63" pos:end="79:64">-&gt;</operator><name pos:start="79:65" pos:end="79:75">sample_rate</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="81:9" pos:end="81:65"><decl pos:start="81:9" pos:end="81:64"><type pos:start="81:9" pos:end="81:11"><name pos:start="81:9" pos:end="81:11">int</name></type> <name pos:start="81:13" pos:end="81:22">byte_delta</name><init pos:start="81:23" pos:end="81:64">= <expr pos:start="81:25" pos:end="81:64"><operator pos:start="81:25" pos:end="81:25">(</operator><operator pos:start="81:26" pos:end="81:26">(</operator><name pos:start="81:27" pos:end="81:29">int</name><operator pos:start="81:30" pos:end="81:30">)</operator><name pos:start="81:31" pos:end="81:36">idelta</name><operator pos:start="81:37" pos:end="81:37">)</operator><operator pos:start="81:38" pos:end="81:38">*</operator><literal type="number" pos:start="81:39" pos:end="81:39">2</literal><operator pos:start="81:40" pos:end="81:40">*</operator><name pos:start="81:41" pos:end="81:64"><name pos:start="81:41" pos:end="81:43">ist</name><operator pos:start="81:44" pos:end="81:45">-&gt;</operator><name pos:start="81:46" pos:end="81:47">st</name><operator pos:start="81:48" pos:end="81:49">-&gt;</operator><name pos:start="81:50" pos:end="81:54">codec</name><operator pos:start="81:55" pos:end="81:56">-&gt;</operator><name pos:start="81:57" pos:end="81:64">channels</name></name></expr></init></decl>;</decl_stmt>



        <comment type="line" pos:start="85:9" pos:end="85:30">//FIXME resample delay</comment>

        <if_stmt pos:start="87:9" pos:end="157:9"><if pos:start="87:9" pos:end="157:9">if<condition pos:start="87:11" pos:end="87:28">(<expr pos:start="87:12" pos:end="87:27"><call pos:start="87:12" pos:end="87:22"><name pos:start="87:12" pos:end="87:15">fabs</name><argument_list pos:start="87:16" pos:end="87:22">(<argument pos:start="87:17" pos:end="87:21"><expr pos:start="87:17" pos:end="87:21"><name pos:start="87:17" pos:end="87:21">delta</name></expr></argument>)</argument_list></call> <operator pos:start="87:24" pos:end="87:24">&gt;</operator> <literal type="number" pos:start="87:26" pos:end="87:27">50</literal></expr>)</condition><block pos:start="87:29" pos:end="157:9">{<block_content pos:start="89:13" pos:end="155:13">

            <if_stmt pos:start="89:13" pos:end="155:13"><if pos:start="89:13" pos:end="141:13">if<condition pos:start="89:15" pos:end="89:85">(<expr pos:start="89:16" pos:end="89:84"><name pos:start="89:16" pos:end="89:28"><name pos:start="89:16" pos:end="89:18">ist</name><operator pos:start="89:19" pos:end="89:20">-&gt;</operator><name pos:start="89:21" pos:end="89:28">is_start</name></name> <operator pos:start="89:30" pos:end="89:31">||</operator> <call pos:start="89:33" pos:end="89:43"><name pos:start="89:33" pos:end="89:36">fabs</name><argument_list pos:start="89:37" pos:end="89:43">(<argument pos:start="89:38" pos:end="89:42"><expr pos:start="89:38" pos:end="89:42"><name pos:start="89:38" pos:end="89:42">delta</name></expr></argument>)</argument_list></call> <operator pos:start="89:45" pos:end="89:45">&gt;</operator> <name pos:start="89:47" pos:end="89:67">audio_drift_threshold</name><operator pos:start="89:68" pos:end="89:68">*</operator><name pos:start="89:69" pos:end="89:84"><name pos:start="89:69" pos:end="89:71">enc</name><operator pos:start="89:72" pos:end="89:73">-&gt;</operator><name pos:start="89:74" pos:end="89:84">sample_rate</name></name></expr>)</condition><block pos:start="89:86" pos:end="141:13">{<block_content pos:start="91:17" pos:end="139:17">

                <if_stmt pos:start="91:17" pos:end="139:17"><if pos:start="91:17" pos:end="109:17">if<condition pos:start="91:19" pos:end="91:34">(<expr pos:start="91:20" pos:end="91:33"><name pos:start="91:20" pos:end="91:29">byte_delta</name> <operator pos:start="91:31" pos:end="91:31">&lt;</operator> <literal type="number" pos:start="91:33" pos:end="91:33">0</literal></expr>)</condition><block pos:start="91:35" pos:end="109:17">{<block_content pos:start="93:21" pos:end="107:36">

                    <expr_stmt pos:start="93:21" pos:end="93:57"><expr pos:start="93:21" pos:end="93:56"><name pos:start="93:21" pos:end="93:30">byte_delta</name><operator pos:start="93:31" pos:end="93:31">=</operator> <call pos:start="93:33" pos:end="93:56"><name pos:start="93:33" pos:end="93:37">FFMAX</name><argument_list pos:start="93:38" pos:end="93:56">(<argument pos:start="93:39" pos:end="93:48"><expr pos:start="93:39" pos:end="93:48"><name pos:start="93:39" pos:end="93:48">byte_delta</name></expr></argument>, <argument pos:start="93:51" pos:end="93:55"><expr pos:start="93:51" pos:end="93:55"><operator pos:start="93:51" pos:end="93:51">-</operator><name pos:start="93:52" pos:end="93:55">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="95:21" pos:end="95:39"><expr pos:start="95:21" pos:end="95:38"><name pos:start="95:21" pos:end="95:24">size</name> <operator pos:start="95:26" pos:end="95:27">+=</operator> <name pos:start="95:29" pos:end="95:38">byte_delta</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="97:21" pos:end="97:39"><expr pos:start="97:21" pos:end="97:38"><name pos:start="97:21" pos:end="97:23">buf</name>  <operator pos:start="97:26" pos:end="97:27">-=</operator> <name pos:start="97:29" pos:end="97:38">byte_delta</name></expr>;</expr_stmt>

                    <if_stmt pos:start="99:21" pos:end="101:86"><if pos:start="99:21" pos:end="101:86">if<condition pos:start="99:23" pos:end="99:35">(<expr pos:start="99:24" pos:end="99:34"><name pos:start="99:24" pos:end="99:30">verbose</name> <operator pos:start="99:32" pos:end="99:32">&gt;</operator> <literal type="number" pos:start="99:34" pos:end="99:34">2</literal></expr>)</condition><block type="pseudo" pos:start="101:25" pos:end="101:86"><block_content pos:start="101:25" pos:end="101:86">

                        <expr_stmt pos:start="101:25" pos:end="101:86"><expr pos:start="101:25" pos:end="101:85"><call pos:start="101:25" pos:end="101:85"><name pos:start="101:25" pos:end="101:31">fprintf</name><argument_list pos:start="101:32" pos:end="101:85">(<argument pos:start="101:33" pos:end="101:38"><expr pos:start="101:33" pos:end="101:38"><name pos:start="101:33" pos:end="101:38">stderr</name></expr></argument>, <argument pos:start="101:41" pos:end="101:71"><expr pos:start="101:41" pos:end="101:71"><literal type="string" pos:start="101:41" pos:end="101:71">"discarding %d audio samples\n"</literal></expr></argument>, <argument pos:start="101:74" pos:end="101:84"><expr pos:start="101:74" pos:end="101:84"><operator pos:start="101:74" pos:end="101:74">(</operator><name pos:start="101:75" pos:end="101:77">int</name><operator pos:start="101:78" pos:end="101:78">)</operator><operator pos:start="101:79" pos:end="101:79">-</operator><name pos:start="101:80" pos:end="101:84">delta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="103:21" pos:end="105:31"><if pos:start="103:21" pos:end="105:31">if<condition pos:start="103:23" pos:end="103:29">(<expr pos:start="103:24" pos:end="103:28"><operator pos:start="103:24" pos:end="103:24">!</operator><name pos:start="103:25" pos:end="103:28">size</name></expr>)</condition><block type="pseudo" pos:start="105:25" pos:end="105:31"><block_content pos:start="105:25" pos:end="105:31">

                        <return pos:start="105:25" pos:end="105:31">return;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="107:21" pos:end="107:36"><expr pos:start="107:21" pos:end="107:35"><name pos:start="107:21" pos:end="107:33"><name pos:start="107:21" pos:end="107:23">ist</name><operator pos:start="107:24" pos:end="107:25">-&gt;</operator><name pos:start="107:26" pos:end="107:33">is_start</name></name><operator pos:start="107:34" pos:end="107:34">=</operator><literal type="number" pos:start="107:35" pos:end="107:35">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="109:18" pos:end="139:17">else<block pos:start="109:22" pos:end="139:17">{<block_content pos:start="111:21" pos:end="137:92">

                    <decl_stmt pos:start="111:21" pos:end="111:52"><decl pos:start="111:21" pos:end="111:51"><type pos:start="111:21" pos:end="111:36"><specifier pos:start="111:21" pos:end="111:26">static</specifier> <name pos:start="111:28" pos:end="111:34">uint8_t</name> <modifier pos:start="111:36" pos:end="111:36">*</modifier></type><name pos:start="111:37" pos:end="111:45">input_tmp</name><init pos:start="111:46" pos:end="111:51">= <expr pos:start="111:48" pos:end="111:51"><name pos:start="111:48" pos:end="111:51">NULL</name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="113:21" pos:end="113:72"><expr pos:start="113:21" pos:end="113:71"><name pos:start="113:21" pos:end="113:29">input_tmp</name><operator pos:start="113:30" pos:end="113:30">=</operator> <call pos:start="113:32" pos:end="113:71"><name pos:start="113:32" pos:end="113:41">av_realloc</name><argument_list pos:start="113:42" pos:end="113:71">(<argument pos:start="113:43" pos:end="113:51"><expr pos:start="113:43" pos:end="113:51"><name pos:start="113:43" pos:end="113:51">input_tmp</name></expr></argument>, <argument pos:start="113:54" pos:end="113:70"><expr pos:start="113:54" pos:end="113:70"><name pos:start="113:54" pos:end="113:63">byte_delta</name> <operator pos:start="113:65" pos:end="113:65">+</operator> <name pos:start="113:67" pos:end="113:70">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <if_stmt pos:start="117:21" pos:end="123:65"><if pos:start="117:21" pos:end="119:40">if<condition pos:start="117:23" pos:end="117:66">(<expr pos:start="117:24" pos:end="117:65"><name pos:start="117:24" pos:end="117:33">byte_delta</name> <operator pos:start="117:35" pos:end="117:35">+</operator> <name pos:start="117:37" pos:end="117:40">size</name> <operator pos:start="117:42" pos:end="117:43">&lt;=</operator> <name pos:start="117:45" pos:end="117:65">MAX_AUDIO_PACKET_SIZE</name></expr>)</condition><block type="pseudo" pos:start="119:25" pos:end="119:40"><block_content pos:start="119:25" pos:end="119:40">

                        <expr_stmt pos:start="119:25" pos:end="119:40"><expr pos:start="119:25" pos:end="119:39"><name pos:start="119:25" pos:end="119:37"><name pos:start="119:25" pos:end="119:27">ist</name><operator pos:start="119:28" pos:end="119:29">-&gt;</operator><name pos:start="119:30" pos:end="119:37">is_start</name></name><operator pos:start="119:38" pos:end="119:38">=</operator><literal type="number" pos:start="119:39" pos:end="119:39">0</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="121:21" pos:end="123:65">else<block type="pseudo" pos:start="123:25" pos:end="123:65"><block_content pos:start="123:25" pos:end="123:65">

                        <expr_stmt pos:start="123:25" pos:end="123:65"><expr pos:start="123:25" pos:end="123:64"><name pos:start="123:25" pos:end="123:34">byte_delta</name><operator pos:start="123:35" pos:end="123:35">=</operator> <name pos:start="123:37" pos:end="123:57">MAX_AUDIO_PACKET_SIZE</name> <operator pos:start="123:59" pos:end="123:59">-</operator> <name pos:start="123:61" pos:end="123:64">size</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                    <expr_stmt pos:start="127:21" pos:end="127:53"><expr pos:start="127:21" pos:end="127:52"><call pos:start="127:21" pos:end="127:52"><name pos:start="127:21" pos:end="127:26">memset</name><argument_list pos:start="127:27" pos:end="127:52">(<argument pos:start="127:28" pos:end="127:36"><expr pos:start="127:28" pos:end="127:36"><name pos:start="127:28" pos:end="127:36">input_tmp</name></expr></argument>, <argument pos:start="127:39" pos:end="127:39"><expr pos:start="127:39" pos:end="127:39"><literal type="number" pos:start="127:39" pos:end="127:39">0</literal></expr></argument>, <argument pos:start="127:42" pos:end="127:51"><expr pos:start="127:42" pos:end="127:51"><name pos:start="127:42" pos:end="127:51">byte_delta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="129:21" pos:end="129:62"><expr pos:start="129:21" pos:end="129:61"><call pos:start="129:21" pos:end="129:61"><name pos:start="129:21" pos:end="129:26">memcpy</name><argument_list pos:start="129:27" pos:end="129:61">(<argument pos:start="129:28" pos:end="129:49"><expr pos:start="129:28" pos:end="129:49"><name pos:start="129:28" pos:end="129:36">input_tmp</name> <operator pos:start="129:38" pos:end="129:38">+</operator> <name pos:start="129:40" pos:end="129:49">byte_delta</name></expr></argument>, <argument pos:start="129:52" pos:end="129:54"><expr pos:start="129:52" pos:end="129:54"><name pos:start="129:52" pos:end="129:54">buf</name></expr></argument>, <argument pos:start="129:57" pos:end="129:60"><expr pos:start="129:57" pos:end="129:60"><name pos:start="129:57" pos:end="129:60">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="131:21" pos:end="131:35"><expr pos:start="131:21" pos:end="131:34"><name pos:start="131:21" pos:end="131:23">buf</name><operator pos:start="131:24" pos:end="131:24">=</operator> <name pos:start="131:26" pos:end="131:34">input_tmp</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="133:21" pos:end="133:39"><expr pos:start="133:21" pos:end="133:38"><name pos:start="133:21" pos:end="133:24">size</name> <operator pos:start="133:26" pos:end="133:27">+=</operator> <name pos:start="133:29" pos:end="133:38">byte_delta</name></expr>;</expr_stmt>

                    <if_stmt pos:start="135:21" pos:end="137:92"><if pos:start="135:21" pos:end="137:92">if<condition pos:start="135:23" pos:end="135:35">(<expr pos:start="135:24" pos:end="135:34"><name pos:start="135:24" pos:end="135:30">verbose</name> <operator pos:start="135:32" pos:end="135:32">&gt;</operator> <literal type="number" pos:start="135:34" pos:end="135:34">2</literal></expr>)</condition><block type="pseudo" pos:start="137:25" pos:end="137:92"><block_content pos:start="137:25" pos:end="137:92">

                        <expr_stmt pos:start="137:25" pos:end="137:92"><expr pos:start="137:25" pos:end="137:91"><call pos:start="137:25" pos:end="137:91"><name pos:start="137:25" pos:end="137:31">fprintf</name><argument_list pos:start="137:32" pos:end="137:91">(<argument pos:start="137:33" pos:end="137:38"><expr pos:start="137:33" pos:end="137:38"><name pos:start="137:33" pos:end="137:38">stderr</name></expr></argument>, <argument pos:start="137:41" pos:end="137:78"><expr pos:start="137:41" pos:end="137:78"><literal type="string" pos:start="137:41" pos:end="137:78">"adding %d audio samples of silence\n"</literal></expr></argument>, <argument pos:start="137:81" pos:end="137:90"><expr pos:start="137:81" pos:end="137:90"><operator pos:start="137:81" pos:end="137:81">(</operator><name pos:start="137:82" pos:end="137:84">int</name><operator pos:start="137:85" pos:end="137:85">)</operator><name pos:start="137:86" pos:end="137:90">delta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if><if type="elseif" pos:start="141:14" pos:end="155:13">else if<condition pos:start="141:21" pos:end="141:41">(<expr pos:start="141:22" pos:end="141:40"><name pos:start="141:22" pos:end="141:38">audio_sync_method</name><operator pos:start="141:39" pos:end="141:39">&gt;</operator><literal type="number" pos:start="141:40" pos:end="141:40">1</literal></expr>)</condition><block pos:start="141:42" pos:end="155:13">{<block_content pos:start="143:17" pos:end="153:107">

                <decl_stmt pos:start="143:17" pos:end="143:80"><decl pos:start="143:17" pos:end="143:79"><type pos:start="143:17" pos:end="143:19"><name pos:start="143:17" pos:end="143:19">int</name></type> <name pos:start="143:21" pos:end="143:24">comp</name><init pos:start="143:25" pos:end="143:79">= <expr pos:start="143:27" pos:end="143:79"><call pos:start="143:27" pos:end="143:79"><name pos:start="143:27" pos:end="143:33">av_clip</name><argument_list pos:start="143:34" pos:end="143:79">(<argument pos:start="143:35" pos:end="143:39"><expr pos:start="143:35" pos:end="143:39"><name pos:start="143:35" pos:end="143:39">delta</name></expr></argument>, <argument pos:start="143:42" pos:end="143:59"><expr pos:start="143:42" pos:end="143:59"><operator pos:start="143:42" pos:end="143:42">-</operator><name pos:start="143:43" pos:end="143:59">audio_sync_method</name></expr></argument>, <argument pos:start="143:62" pos:end="143:78"><expr pos:start="143:62" pos:end="143:78"><name pos:start="143:62" pos:end="143:78">audio_sync_method</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:44"><expr pos:start="145:17" pos:end="145:43"><call pos:start="145:17" pos:end="145:43"><name pos:start="145:17" pos:end="145:22">assert</name><argument_list pos:start="145:23" pos:end="145:43">(<argument pos:start="145:24" pos:end="145:42"><expr pos:start="145:24" pos:end="145:42"><name pos:start="145:24" pos:end="145:42"><name pos:start="145:24" pos:end="145:26">ost</name><operator pos:start="145:27" pos:end="145:28">-&gt;</operator><name pos:start="145:29" pos:end="145:42">audio_resample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="147:17" pos:end="149:132"><if pos:start="147:17" pos:end="149:132">if<condition pos:start="147:19" pos:end="147:31">(<expr pos:start="147:20" pos:end="147:30"><name pos:start="147:20" pos:end="147:26">verbose</name> <operator pos:start="147:28" pos:end="147:28">&gt;</operator> <literal type="number" pos:start="147:30" pos:end="147:30">2</literal></expr>)</condition><block type="pseudo" pos:start="149:21" pos:end="149:132"><block_content pos:start="149:21" pos:end="149:132">

                    <expr_stmt pos:start="149:21" pos:end="149:132"><expr pos:start="149:21" pos:end="149:131"><call pos:start="149:21" pos:end="149:131"><name pos:start="149:21" pos:end="149:27">fprintf</name><argument_list pos:start="149:28" pos:end="149:131">(<argument pos:start="149:29" pos:end="149:34"><expr pos:start="149:29" pos:end="149:34"><name pos:start="149:29" pos:end="149:34">stderr</name></expr></argument>, <argument pos:start="149:37" pos:end="149:99"><expr pos:start="149:37" pos:end="149:99"><literal type="string" pos:start="149:37" pos:end="149:99">"compensating audio timestamp drift:%f compensation:%d in:%d\n"</literal></expr></argument>, <argument pos:start="149:102" pos:end="149:106"><expr pos:start="149:102" pos:end="149:106"><name pos:start="149:102" pos:end="149:106">delta</name></expr></argument>, <argument pos:start="149:109" pos:end="149:112"><expr pos:start="149:109" pos:end="149:112"><name pos:start="149:109" pos:end="149:112">comp</name></expr></argument>, <argument pos:start="149:115" pos:end="149:130"><expr pos:start="149:115" pos:end="149:130"><name pos:start="149:115" pos:end="149:130"><name pos:start="149:115" pos:end="149:117">enc</name><operator pos:start="149:118" pos:end="149:119">-&gt;</operator><name pos:start="149:120" pos:end="149:130">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<comment type="line" pos:start="151:1" pos:end="151:227">//                fprintf(stderr, "drift:%f len:%d opts:%"PRId64" ipts:%"PRId64" fifo:%d\n", delta, -1, ost-&gt;sync_opts, (int64_t)(get_sync_ipts(ost) * enc-&gt;sample_rate), av_fifo_size(&amp;ost-&gt;fifo)/(ost-&gt;st-&gt;codec-&gt;channels * 2));</comment>

                <expr_stmt pos:start="153:17" pos:end="153:107"><expr pos:start="153:17" pos:end="153:106"><call pos:start="153:17" pos:end="153:106"><name pos:start="153:17" pos:end="153:38">av_resample_compensate</name><argument_list pos:start="153:39" pos:end="153:106">(<argument pos:start="153:40" pos:end="153:81"><expr pos:start="153:40" pos:end="153:81"><operator pos:start="153:40" pos:end="153:40">*</operator><operator pos:start="153:41" pos:end="153:41">(</operator>struct <name pos:start="153:49" pos:end="153:65">AVResampleContext</name><operator pos:start="153:66" pos:end="153:66">*</operator><operator pos:start="153:67" pos:end="153:67">*</operator><operator pos:start="153:68" pos:end="153:68">)</operator><name pos:start="153:69" pos:end="153:81"><name pos:start="153:69" pos:end="153:71">ost</name><operator pos:start="153:72" pos:end="153:73">-&gt;</operator><name pos:start="153:74" pos:end="153:81">resample</name></name></expr></argument>, <argument pos:start="153:84" pos:end="153:87"><expr pos:start="153:84" pos:end="153:87"><name pos:start="153:84" pos:end="153:87">comp</name></expr></argument>, <argument pos:start="153:90" pos:end="153:105"><expr pos:start="153:90" pos:end="153:105"><name pos:start="153:90" pos:end="153:105"><name pos:start="153:90" pos:end="153:92">enc</name><operator pos:start="153:93" pos:end="153:94">-&gt;</operator><name pos:start="153:95" pos:end="153:105">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if><else pos:start="159:6" pos:end="163:82">else<block type="pseudo" pos:start="161:9" pos:end="163:82"><block_content pos:start="161:9" pos:end="163:82">

        <expr_stmt pos:start="161:9" pos:end="163:82"><expr pos:start="161:9" pos:end="163:81"><name pos:start="161:9" pos:end="161:22"><name pos:start="161:9" pos:end="161:11">ost</name><operator pos:start="161:12" pos:end="161:13">-&gt;</operator><name pos:start="161:14" pos:end="161:22">sync_opts</name></name><operator pos:start="161:23" pos:end="161:23">=</operator> <call pos:start="161:25" pos:end="161:69"><name pos:start="161:25" pos:end="161:30">lrintf</name><argument_list pos:start="161:31" pos:end="161:69">(<argument pos:start="161:32" pos:end="161:68"><expr pos:start="161:32" pos:end="161:68"><call pos:start="161:32" pos:end="161:49"><name pos:start="161:32" pos:end="161:44">get_sync_ipts</name><argument_list pos:start="161:45" pos:end="161:49">(<argument pos:start="161:46" pos:end="161:48"><expr pos:start="161:46" pos:end="161:48"><name pos:start="161:46" pos:end="161:48">ost</name></expr></argument>)</argument_list></call> <operator pos:start="161:51" pos:end="161:51">*</operator> <name pos:start="161:53" pos:end="161:68"><name pos:start="161:53" pos:end="161:55">enc</name><operator pos:start="161:56" pos:end="161:57">-&gt;</operator><name pos:start="161:58" pos:end="161:68">sample_rate</name></name></expr></argument>)</argument_list></call>

                        <operator pos:start="163:25" pos:end="163:25">-</operator> <call pos:start="163:27" pos:end="163:50"><name pos:start="163:27" pos:end="163:38">av_fifo_size</name><argument_list pos:start="163:39" pos:end="163:50">(<argument pos:start="163:40" pos:end="163:49"><expr pos:start="163:40" pos:end="163:49"><operator pos:start="163:40" pos:end="163:40">&amp;</operator><name pos:start="163:41" pos:end="163:49"><name pos:start="163:41" pos:end="163:43">ost</name><operator pos:start="163:44" pos:end="163:45">-&gt;</operator><name pos:start="163:46" pos:end="163:49">fifo</name></name></expr></argument>)</argument_list></call><operator pos:start="163:51" pos:end="163:51">/</operator><operator pos:start="163:52" pos:end="163:52">(</operator><name pos:start="163:53" pos:end="163:76"><name pos:start="163:53" pos:end="163:55">ost</name><operator pos:start="163:56" pos:end="163:57">-&gt;</operator><name pos:start="163:58" pos:end="163:59">st</name><operator pos:start="163:60" pos:end="163:61">-&gt;</operator><name pos:start="163:62" pos:end="163:66">codec</name><operator pos:start="163:67" pos:end="163:68">-&gt;</operator><name pos:start="163:69" pos:end="163:76">channels</name></name> <operator pos:start="163:78" pos:end="163:78">*</operator> <literal type="number" pos:start="163:80" pos:end="163:80">2</literal><operator pos:start="163:81" pos:end="163:81">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="163:84" pos:end="163:96">//FIXME wrong</comment>



    <if_stmt pos:start="167:5" pos:end="185:5"><if pos:start="167:5" pos:end="179:5">if <condition pos:start="167:8" pos:end="167:28">(<expr pos:start="167:9" pos:end="167:27"><name pos:start="167:9" pos:end="167:27"><name pos:start="167:9" pos:end="167:11">ost</name><operator pos:start="167:12" pos:end="167:13">-&gt;</operator><name pos:start="167:14" pos:end="167:27">audio_resample</name></name></expr>)</condition> <block pos:start="167:30" pos:end="179:5">{<block_content pos:start="169:9" pos:end="177:48">

        <expr_stmt pos:start="169:9" pos:end="169:27"><expr pos:start="169:9" pos:end="169:26"><name pos:start="169:9" pos:end="169:14">buftmp</name> <operator pos:start="169:16" pos:end="169:16">=</operator> <name pos:start="169:18" pos:end="169:26">audio_buf</name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="175:73"><expr pos:start="171:9" pos:end="175:72"><name pos:start="171:9" pos:end="171:16">size_out</name> <operator pos:start="171:18" pos:end="171:18">=</operator> <call pos:start="171:20" pos:end="175:72"><name pos:start="171:20" pos:end="171:33">audio_resample</name><argument_list pos:start="171:34" pos:end="175:72">(<argument pos:start="171:35" pos:end="171:47"><expr pos:start="171:35" pos:end="171:47"><name pos:start="171:35" pos:end="171:47"><name pos:start="171:35" pos:end="171:37">ost</name><operator pos:start="171:38" pos:end="171:39">-&gt;</operator><name pos:start="171:40" pos:end="171:47">resample</name></name></expr></argument>,

                                  <argument pos:start="173:35" pos:end="173:49"><expr pos:start="173:35" pos:end="173:49"><operator pos:start="173:35" pos:end="173:35">(</operator><name pos:start="173:36" pos:end="173:40">short</name> <operator pos:start="173:42" pos:end="173:42">*</operator><operator pos:start="173:43" pos:end="173:43">)</operator><name pos:start="173:44" pos:end="173:49">buftmp</name></expr></argument>, <argument pos:start="173:52" pos:end="173:63"><expr pos:start="173:52" pos:end="173:63"><operator pos:start="173:52" pos:end="173:52">(</operator><name pos:start="173:53" pos:end="173:57">short</name> <operator pos:start="173:59" pos:end="173:59">*</operator><operator pos:start="173:60" pos:end="173:60">)</operator><name pos:start="173:61" pos:end="173:63">buf</name></expr></argument>,

                                  <argument pos:start="175:35" pos:end="175:71"><expr pos:start="175:35" pos:end="175:71"><name pos:start="175:35" pos:end="175:38">size</name> <operator pos:start="175:40" pos:end="175:40">/</operator> <operator pos:start="175:42" pos:end="175:42">(</operator><name pos:start="175:43" pos:end="175:66"><name pos:start="175:43" pos:end="175:45">ist</name><operator pos:start="175:46" pos:end="175:47">-&gt;</operator><name pos:start="175:48" pos:end="175:49">st</name><operator pos:start="175:50" pos:end="175:51">-&gt;</operator><name pos:start="175:52" pos:end="175:56">codec</name><operator pos:start="175:57" pos:end="175:58">-&gt;</operator><name pos:start="175:59" pos:end="175:66">channels</name></name> <operator pos:start="175:68" pos:end="175:68">*</operator> <literal type="number" pos:start="175:70" pos:end="175:70">2</literal><operator pos:start="175:71" pos:end="175:71">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:48"><expr pos:start="177:9" pos:end="177:47"><name pos:start="177:9" pos:end="177:16">size_out</name> <operator pos:start="177:18" pos:end="177:18">=</operator> <name pos:start="177:20" pos:end="177:27">size_out</name> <operator pos:start="177:29" pos:end="177:29">*</operator> <name pos:start="177:31" pos:end="177:43"><name pos:start="177:31" pos:end="177:33">enc</name><operator pos:start="177:34" pos:end="177:35">-&gt;</operator><name pos:start="177:36" pos:end="177:43">channels</name></name> <operator pos:start="177:45" pos:end="177:45">*</operator> <literal type="number" pos:start="177:47" pos:end="177:47">2</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="179:7" pos:end="185:5">else <block pos:start="179:12" pos:end="185:5">{<block_content pos:start="181:9" pos:end="183:24">

        <expr_stmt pos:start="181:9" pos:end="181:21"><expr pos:start="181:9" pos:end="181:20"><name pos:start="181:9" pos:end="181:14">buftmp</name> <operator pos:start="181:16" pos:end="181:16">=</operator> <name pos:start="181:18" pos:end="181:20">buf</name></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:24"><expr pos:start="183:9" pos:end="183:23"><name pos:start="183:9" pos:end="183:16">size_out</name> <operator pos:start="183:18" pos:end="183:18">=</operator> <name pos:start="183:20" pos:end="183:23">size</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="189:5" pos:end="189:47">/* now encode as many frames as possible */</comment>

    <if_stmt pos:start="191:5" pos:end="327:5"><if pos:start="191:5" pos:end="243:5">if <condition pos:start="191:8" pos:end="191:28">(<expr pos:start="191:9" pos:end="191:27"><name pos:start="191:9" pos:end="191:23"><name pos:start="191:9" pos:end="191:11">enc</name><operator pos:start="191:12" pos:end="191:13">-&gt;</operator><name pos:start="191:14" pos:end="191:23">frame_size</name></name> <operator pos:start="191:25" pos:end="191:25">&gt;</operator> <literal type="number" pos:start="191:27" pos:end="191:27">1</literal></expr>)</condition> <block pos:start="191:30" pos:end="243:5">{<block_content pos:start="195:9" pos:end="241:9">

        <comment type="block" pos:start="193:9" pos:end="193:42">/* output resampled raw samples */</comment>

        <expr_stmt pos:start="195:9" pos:end="195:77"><expr pos:start="195:9" pos:end="195:76"><call pos:start="195:9" pos:end="195:76"><name pos:start="195:9" pos:end="195:23">av_fifo_realloc</name><argument_list pos:start="195:24" pos:end="195:76">(<argument pos:start="195:25" pos:end="195:34"><expr pos:start="195:25" pos:end="195:34"><operator pos:start="195:25" pos:end="195:25">&amp;</operator><name pos:start="195:26" pos:end="195:34"><name pos:start="195:26" pos:end="195:28">ost</name><operator pos:start="195:29" pos:end="195:30">-&gt;</operator><name pos:start="195:31" pos:end="195:34">fifo</name></name></expr></argument>, <argument pos:start="195:37" pos:end="195:75"><expr pos:start="195:37" pos:end="195:75"><call pos:start="195:37" pos:end="195:60"><name pos:start="195:37" pos:end="195:48">av_fifo_size</name><argument_list pos:start="195:49" pos:end="195:60">(<argument pos:start="195:50" pos:end="195:59"><expr pos:start="195:50" pos:end="195:59"><operator pos:start="195:50" pos:end="195:50">&amp;</operator><name pos:start="195:51" pos:end="195:59"><name pos:start="195:51" pos:end="195:53">ost</name><operator pos:start="195:54" pos:end="195:55">-&gt;</operator><name pos:start="195:56" pos:end="195:59">fifo</name></name></expr></argument>)</argument_list></call> <operator pos:start="195:62" pos:end="195:62">+</operator> <name pos:start="195:64" pos:end="195:71">size_out</name> <operator pos:start="195:73" pos:end="195:73">+</operator> <literal type="number" pos:start="195:75" pos:end="195:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:52"><expr pos:start="197:9" pos:end="197:51"><call pos:start="197:9" pos:end="197:51"><name pos:start="197:9" pos:end="197:21">av_fifo_write</name><argument_list pos:start="197:22" pos:end="197:51">(<argument pos:start="197:23" pos:end="197:32"><expr pos:start="197:23" pos:end="197:32"><operator pos:start="197:23" pos:end="197:23">&amp;</operator><name pos:start="197:24" pos:end="197:32"><name pos:start="197:24" pos:end="197:26">ost</name><operator pos:start="197:27" pos:end="197:28">-&gt;</operator><name pos:start="197:29" pos:end="197:32">fifo</name></name></expr></argument>, <argument pos:start="197:35" pos:end="197:40"><expr pos:start="197:35" pos:end="197:40"><name pos:start="197:35" pos:end="197:40">buftmp</name></expr></argument>, <argument pos:start="197:43" pos:end="197:50"><expr pos:start="197:43" pos:end="197:50"><name pos:start="197:43" pos:end="197:50">size_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="201:9" pos:end="201:58"><expr pos:start="201:9" pos:end="201:57"><name pos:start="201:9" pos:end="201:19">frame_bytes</name> <operator pos:start="201:21" pos:end="201:21">=</operator> <name pos:start="201:23" pos:end="201:37"><name pos:start="201:23" pos:end="201:25">enc</name><operator pos:start="201:26" pos:end="201:27">-&gt;</operator><name pos:start="201:28" pos:end="201:37">frame_size</name></name> <operator pos:start="201:39" pos:end="201:39">*</operator> <literal type="number" pos:start="201:41" pos:end="201:41">2</literal> <operator pos:start="201:43" pos:end="201:43">*</operator> <name pos:start="201:45" pos:end="201:57"><name pos:start="201:45" pos:end="201:47">enc</name><operator pos:start="201:48" pos:end="201:49">-&gt;</operator><name pos:start="201:50" pos:end="201:57">channels</name></name></expr>;</expr_stmt>



        <while pos:start="205:9" pos:end="241:9">while <condition pos:start="205:15" pos:end="205:69">(<expr pos:start="205:16" pos:end="205:68"><call pos:start="205:16" pos:end="205:63"><name pos:start="205:16" pos:end="205:27">av_fifo_read</name><argument_list pos:start="205:28" pos:end="205:63">(<argument pos:start="205:29" pos:end="205:38"><expr pos:start="205:29" pos:end="205:38"><operator pos:start="205:29" pos:end="205:29">&amp;</operator><name pos:start="205:30" pos:end="205:38"><name pos:start="205:30" pos:end="205:32">ost</name><operator pos:start="205:33" pos:end="205:34">-&gt;</operator><name pos:start="205:35" pos:end="205:38">fifo</name></name></expr></argument>, <argument pos:start="205:41" pos:end="205:49"><expr pos:start="205:41" pos:end="205:49"><name pos:start="205:41" pos:end="205:49">audio_buf</name></expr></argument>, <argument pos:start="205:52" pos:end="205:62"><expr pos:start="205:52" pos:end="205:62"><name pos:start="205:52" pos:end="205:62">frame_bytes</name></expr></argument>)</argument_list></call> <operator pos:start="205:65" pos:end="205:66">==</operator> <literal type="number" pos:start="205:68" pos:end="205:68">0</literal></expr>)</condition> <block pos:start="205:71" pos:end="241:9">{<block_content pos:start="207:13" pos:end="239:46">

            <decl_stmt pos:start="207:13" pos:end="207:25"><decl pos:start="207:13" pos:end="207:24"><type pos:start="207:13" pos:end="207:20"><name pos:start="207:13" pos:end="207:20">AVPacket</name></type> <name pos:start="207:22" pos:end="207:24">pkt</name></decl>;</decl_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:33"><expr pos:start="209:13" pos:end="209:32"><call pos:start="209:13" pos:end="209:32"><name pos:start="209:13" pos:end="209:26">av_init_packet</name><argument_list pos:start="209:27" pos:end="209:32">(<argument pos:start="209:28" pos:end="209:31"><expr pos:start="209:28" pos:end="209:31"><operator pos:start="209:28" pos:end="209:28">&amp;</operator><name pos:start="209:29" pos:end="209:31">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="line" pos:start="213:13" pos:end="213:80">//FIXME pass ost-&gt;sync_opts as AVFrame.pts in avcodec_encode_audio()</comment>



            <expr_stmt pos:start="217:13" pos:end="219:59"><expr pos:start="217:13" pos:end="219:58"><name pos:start="217:13" pos:end="217:15">ret</name> <operator pos:start="217:17" pos:end="217:17">=</operator> <call pos:start="217:19" pos:end="219:58"><name pos:start="217:19" pos:end="217:38">avcodec_encode_audio</name><argument_list pos:start="217:39" pos:end="219:58">(<argument pos:start="217:40" pos:end="217:42"><expr pos:start="217:40" pos:end="217:42"><name pos:start="217:40" pos:end="217:42">enc</name></expr></argument>, <argument pos:start="217:45" pos:end="217:53"><expr pos:start="217:45" pos:end="217:53"><name pos:start="217:45" pos:end="217:53">audio_out</name></expr></argument>, <argument pos:start="217:56" pos:end="217:69"><expr pos:start="217:56" pos:end="217:69"><name pos:start="217:56" pos:end="217:69">audio_out_size</name></expr></argument>,

                                       <argument pos:start="219:40" pos:end="219:57"><expr pos:start="219:40" pos:end="219:57"><operator pos:start="219:40" pos:end="219:40">(</operator><name pos:start="219:41" pos:end="219:45">short</name> <operator pos:start="219:47" pos:end="219:47">*</operator><operator pos:start="219:48" pos:end="219:48">)</operator><name pos:start="219:49" pos:end="219:57">audio_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:30"><expr pos:start="221:13" pos:end="221:29"><name pos:start="221:13" pos:end="221:22">audio_size</name> <operator pos:start="221:24" pos:end="221:25">+=</operator> <name pos:start="221:27" pos:end="221:29">ret</name></expr>;</expr_stmt>

            <expr_stmt pos:start="223:13" pos:end="223:41"><expr pos:start="223:13" pos:end="223:40"><name pos:start="223:13" pos:end="223:28"><name pos:start="223:13" pos:end="223:15">pkt</name><operator pos:start="223:16" pos:end="223:16">.</operator><name pos:start="223:17" pos:end="223:28">stream_index</name></name><operator pos:start="223:29" pos:end="223:29">=</operator> <name pos:start="223:31" pos:end="223:40"><name pos:start="223:31" pos:end="223:33">ost</name><operator pos:start="223:34" pos:end="223:35">-&gt;</operator><name pos:start="223:36" pos:end="223:40">index</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:32"><expr pos:start="225:13" pos:end="225:31"><name pos:start="225:13" pos:end="225:20"><name pos:start="225:13" pos:end="225:15">pkt</name><operator pos:start="225:16" pos:end="225:16">.</operator><name pos:start="225:17" pos:end="225:20">data</name></name><operator pos:start="225:21" pos:end="225:21">=</operator> <name pos:start="225:23" pos:end="225:31">audio_out</name></expr>;</expr_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:26"><expr pos:start="227:13" pos:end="227:25"><name pos:start="227:13" pos:end="227:20"><name pos:start="227:13" pos:end="227:15">pkt</name><operator pos:start="227:16" pos:end="227:16">.</operator><name pos:start="227:17" pos:end="227:20">size</name></name><operator pos:start="227:21" pos:end="227:21">=</operator> <name pos:start="227:23" pos:end="227:25">ret</name></expr>;</expr_stmt>

            <if_stmt pos:start="229:13" pos:end="231:97"><if pos:start="229:13" pos:end="231:97">if<condition pos:start="229:15" pos:end="229:75">(<expr pos:start="229:16" pos:end="229:74"><name pos:start="229:16" pos:end="229:31"><name pos:start="229:16" pos:end="229:18">enc</name><operator pos:start="229:19" pos:end="229:20">-&gt;</operator><name pos:start="229:21" pos:end="229:31">coded_frame</name></name> <operator pos:start="229:33" pos:end="229:34">&amp;&amp;</operator> <name pos:start="229:36" pos:end="229:56"><name pos:start="229:36" pos:end="229:38">enc</name><operator pos:start="229:39" pos:end="229:40">-&gt;</operator><name pos:start="229:41" pos:end="229:51">coded_frame</name><operator pos:start="229:52" pos:end="229:53">-&gt;</operator><name pos:start="229:54" pos:end="229:56">pts</name></name> <operator pos:start="229:58" pos:end="229:59">!=</operator> <name pos:start="229:61" pos:end="229:74">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="231:17" pos:end="231:97"><block_content pos:start="231:17" pos:end="231:97">

                <expr_stmt pos:start="231:17" pos:end="231:97"><expr pos:start="231:17" pos:end="231:96"><name pos:start="231:17" pos:end="231:23"><name pos:start="231:17" pos:end="231:19">pkt</name><operator pos:start="231:20" pos:end="231:20">.</operator><name pos:start="231:21" pos:end="231:23">pts</name></name><operator pos:start="231:24" pos:end="231:24">=</operator> <call pos:start="231:26" pos:end="231:96"><name pos:start="231:26" pos:end="231:37">av_rescale_q</name><argument_list pos:start="231:38" pos:end="231:96">(<argument pos:start="231:39" pos:end="231:59"><expr pos:start="231:39" pos:end="231:59"><name pos:start="231:39" pos:end="231:59"><name pos:start="231:39" pos:end="231:41">enc</name><operator pos:start="231:42" pos:end="231:43">-&gt;</operator><name pos:start="231:44" pos:end="231:54">coded_frame</name><operator pos:start="231:55" pos:end="231:56">-&gt;</operator><name pos:start="231:57" pos:end="231:59">pts</name></name></expr></argument>, <argument pos:start="231:62" pos:end="231:75"><expr pos:start="231:62" pos:end="231:75"><name pos:start="231:62" pos:end="231:75"><name pos:start="231:62" pos:end="231:64">enc</name><operator pos:start="231:65" pos:end="231:66">-&gt;</operator><name pos:start="231:67" pos:end="231:75">time_base</name></name></expr></argument>, <argument pos:start="231:78" pos:end="231:95"><expr pos:start="231:78" pos:end="231:95"><name pos:start="231:78" pos:end="231:95"><name pos:start="231:78" pos:end="231:80">ost</name><operator pos:start="231:81" pos:end="231:82">-&gt;</operator><name pos:start="231:83" pos:end="231:84">st</name><operator pos:start="231:85" pos:end="231:86">-&gt;</operator><name pos:start="231:87" pos:end="231:95">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:38"><expr pos:start="233:13" pos:end="233:37"><name pos:start="233:13" pos:end="233:21"><name pos:start="233:13" pos:end="233:15">pkt</name><operator pos:start="233:16" pos:end="233:16">.</operator><name pos:start="233:17" pos:end="233:21">flags</name></name> <operator pos:start="233:23" pos:end="233:24">|=</operator> <name pos:start="233:26" pos:end="233:37">PKT_FLAG_KEY</name></expr>;</expr_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:103"><expr pos:start="235:13" pos:end="235:102"><call pos:start="235:13" pos:end="235:102"><name pos:start="235:13" pos:end="235:23">write_frame</name><argument_list pos:start="235:24" pos:end="235:102">(<argument pos:start="235:25" pos:end="235:25"><expr pos:start="235:25" pos:end="235:25"><name pos:start="235:25" pos:end="235:25">s</name></expr></argument>, <argument pos:start="235:28" pos:end="235:31"><expr pos:start="235:28" pos:end="235:31"><operator pos:start="235:28" pos:end="235:28">&amp;</operator><name pos:start="235:29" pos:end="235:31">pkt</name></expr></argument>, <argument pos:start="235:34" pos:end="235:47"><expr pos:start="235:34" pos:end="235:47"><name pos:start="235:34" pos:end="235:47"><name pos:start="235:34" pos:end="235:36">ost</name><operator pos:start="235:37" pos:end="235:38">-&gt;</operator><name pos:start="235:39" pos:end="235:40">st</name><operator pos:start="235:41" pos:end="235:42">-&gt;</operator><name pos:start="235:43" pos:end="235:47">codec</name></name></expr></argument>, <argument pos:start="235:50" pos:end="235:101"><expr pos:start="235:50" pos:end="235:101"><name pos:start="235:50" pos:end="235:101"><name pos:start="235:50" pos:end="235:66">bitstream_filters</name><index pos:start="235:67" pos:end="235:83">[<expr pos:start="235:68" pos:end="235:82"><name pos:start="235:68" pos:end="235:82"><name pos:start="235:68" pos:end="235:70">ost</name><operator pos:start="235:71" pos:end="235:72">-&gt;</operator><name pos:start="235:73" pos:end="235:82">file_index</name></name></expr>]</index><index pos:start="235:84" pos:end="235:101">[<expr pos:start="235:85" pos:end="235:100"><name pos:start="235:85" pos:end="235:100"><name pos:start="235:85" pos:end="235:87">pkt</name><operator pos:start="235:88" pos:end="235:88">.</operator><name pos:start="235:89" pos:end="235:100">stream_index</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="239:13" pos:end="239:46"><expr pos:start="239:13" pos:end="239:45"><name pos:start="239:13" pos:end="239:26"><name pos:start="239:13" pos:end="239:15">ost</name><operator pos:start="239:16" pos:end="239:17">-&gt;</operator><name pos:start="239:18" pos:end="239:26">sync_opts</name></name> <operator pos:start="239:28" pos:end="239:29">+=</operator> <name pos:start="239:31" pos:end="239:45"><name pos:start="239:31" pos:end="239:33">enc</name><operator pos:start="239:34" pos:end="239:35">-&gt;</operator><name pos:start="239:36" pos:end="239:45">frame_size</name></name></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if> <else pos:start="243:7" pos:end="327:5">else <block pos:start="243:12" pos:end="327:5">{<block_content pos:start="245:9" pos:end="325:99">

        <decl_stmt pos:start="245:9" pos:end="245:21"><decl pos:start="245:9" pos:end="245:20"><type pos:start="245:9" pos:end="245:16"><name pos:start="245:9" pos:end="245:16">AVPacket</name></type> <name pos:start="245:18" pos:end="245:20">pkt</name></decl>;</decl_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:29"><expr pos:start="247:9" pos:end="247:28"><call pos:start="247:9" pos:end="247:28"><name pos:start="247:9" pos:end="247:22">av_init_packet</name><argument_list pos:start="247:23" pos:end="247:28">(<argument pos:start="247:24" pos:end="247:27"><expr pos:start="247:24" pos:end="247:27"><operator pos:start="247:24" pos:end="247:24">&amp;</operator><name pos:start="247:25" pos:end="247:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="251:9" pos:end="251:57"><expr pos:start="251:9" pos:end="251:56"><name pos:start="251:9" pos:end="251:22"><name pos:start="251:9" pos:end="251:11">ost</name><operator pos:start="251:12" pos:end="251:13">-&gt;</operator><name pos:start="251:14" pos:end="251:22">sync_opts</name></name> <operator pos:start="251:24" pos:end="251:25">+=</operator> <name pos:start="251:27" pos:end="251:34">size_out</name> <operator pos:start="251:36" pos:end="251:36">/</operator> <operator pos:start="251:38" pos:end="251:38">(</operator><literal type="number" pos:start="251:39" pos:end="251:39">2</literal> <operator pos:start="251:41" pos:end="251:41">*</operator> <name pos:start="251:43" pos:end="251:55"><name pos:start="251:43" pos:end="251:45">enc</name><operator pos:start="251:46" pos:end="251:47">-&gt;</operator><name pos:start="251:48" pos:end="251:55">channels</name></name><operator pos:start="251:56" pos:end="251:56">)</operator></expr>;</expr_stmt>



        <comment type="block" pos:start="255:9" pos:end="255:32">/* output a pcm frame */</comment>

        <comment type="block" pos:start="257:9" pos:end="257:60">/* XXX: change encoding codec API to avoid this ? */</comment>

        <switch pos:start="259:9" pos:end="303:9">switch<condition pos:start="259:15" pos:end="259:30">(<expr pos:start="259:16" pos:end="259:29"><name pos:start="259:16" pos:end="259:29"><name pos:start="259:16" pos:end="259:18">enc</name><operator pos:start="259:19" pos:end="259:20">-&gt;</operator><name pos:start="259:21" pos:end="259:25">codec</name><operator pos:start="259:26" pos:end="259:27">-&gt;</operator><name pos:start="259:28" pos:end="259:29">id</name></name></expr>)</condition> <block pos:start="259:32" pos:end="303:9">{<block_content pos:start="261:9" pos:end="301:18">

        <case pos:start="261:9" pos:end="261:32">case <expr pos:start="261:14" pos:end="261:31"><name pos:start="261:14" pos:end="261:31">CODEC_ID_PCM_S32LE</name></expr>:</case>

        <case pos:start="263:9" pos:end="263:32">case <expr pos:start="263:14" pos:end="263:31"><name pos:start="263:14" pos:end="263:31">CODEC_ID_PCM_S32BE</name></expr>:</case>

        <case pos:start="265:9" pos:end="265:32">case <expr pos:start="265:14" pos:end="265:31"><name pos:start="265:14" pos:end="265:31">CODEC_ID_PCM_U32LE</name></expr>:</case>

        <case pos:start="267:9" pos:end="267:32">case <expr pos:start="267:14" pos:end="267:31"><name pos:start="267:14" pos:end="267:31">CODEC_ID_PCM_U32BE</name></expr>:</case>

            <expr_stmt pos:start="269:13" pos:end="269:37"><expr pos:start="269:13" pos:end="269:36"><name pos:start="269:13" pos:end="269:20">size_out</name> <operator pos:start="269:22" pos:end="269:22">=</operator> <name pos:start="269:24" pos:end="269:31">size_out</name> <operator pos:start="269:33" pos:end="269:34">&lt;&lt;</operator> <literal type="number" pos:start="269:36" pos:end="269:36">1</literal></expr>;</expr_stmt>

            <break pos:start="271:13" pos:end="271:18">break;</break>

        <case pos:start="273:9" pos:end="273:32">case <expr pos:start="273:14" pos:end="273:31"><name pos:start="273:14" pos:end="273:31">CODEC_ID_PCM_S24LE</name></expr>:</case>

        <case pos:start="275:9" pos:end="275:32">case <expr pos:start="275:14" pos:end="275:31"><name pos:start="275:14" pos:end="275:31">CODEC_ID_PCM_S24BE</name></expr>:</case>

        <case pos:start="277:9" pos:end="277:32">case <expr pos:start="277:14" pos:end="277:31"><name pos:start="277:14" pos:end="277:31">CODEC_ID_PCM_U24LE</name></expr>:</case>

        <case pos:start="279:9" pos:end="279:32">case <expr pos:start="279:14" pos:end="279:31"><name pos:start="279:14" pos:end="279:31">CODEC_ID_PCM_U24BE</name></expr>:</case>

        <case pos:start="281:9" pos:end="281:34">case <expr pos:start="281:14" pos:end="281:33"><name pos:start="281:14" pos:end="281:33">CODEC_ID_PCM_S24DAUD</name></expr>:</case>

            <expr_stmt pos:start="283:13" pos:end="283:40"><expr pos:start="283:13" pos:end="283:39"><name pos:start="283:13" pos:end="283:20">size_out</name> <operator pos:start="283:22" pos:end="283:22">=</operator> <name pos:start="283:24" pos:end="283:31">size_out</name> <operator pos:start="283:33" pos:end="283:33">/</operator> <literal type="number" pos:start="283:35" pos:end="283:35">2</literal> <operator pos:start="283:37" pos:end="283:37">*</operator> <literal type="number" pos:start="283:39" pos:end="283:39">3</literal></expr>;</expr_stmt>

            <break pos:start="285:13" pos:end="285:18">break;</break>

        <case pos:start="287:9" pos:end="287:32">case <expr pos:start="287:14" pos:end="287:31"><name pos:start="287:14" pos:end="287:31">CODEC_ID_PCM_S16LE</name></expr>:</case>

        <case pos:start="289:9" pos:end="289:32">case <expr pos:start="289:14" pos:end="289:31"><name pos:start="289:14" pos:end="289:31">CODEC_ID_PCM_S16BE</name></expr>:</case>

        <case pos:start="291:9" pos:end="291:32">case <expr pos:start="291:14" pos:end="291:31"><name pos:start="291:14" pos:end="291:31">CODEC_ID_PCM_U16LE</name></expr>:</case>

        <case pos:start="293:9" pos:end="293:32">case <expr pos:start="293:14" pos:end="293:31"><name pos:start="293:14" pos:end="293:31">CODEC_ID_PCM_U16BE</name></expr>:</case>

            <break pos:start="295:13" pos:end="295:18">break;</break>

        <default pos:start="297:9" pos:end="297:16">default:</default>

            <expr_stmt pos:start="299:13" pos:end="299:37"><expr pos:start="299:13" pos:end="299:36"><name pos:start="299:13" pos:end="299:20">size_out</name> <operator pos:start="299:22" pos:end="299:22">=</operator> <name pos:start="299:24" pos:end="299:31">size_out</name> <operator pos:start="299:33" pos:end="299:34">&gt;&gt;</operator> <literal type="number" pos:start="299:36" pos:end="299:36">1</literal></expr>;</expr_stmt>

            <break pos:start="301:13" pos:end="301:18">break;</break>

        </block_content>}</block></switch>

        <comment type="line" pos:start="305:9" pos:end="305:76">//FIXME pass ost-&gt;sync_opts as AVFrame.pts in avcodec_encode_audio()</comment>

        <expr_stmt pos:start="307:9" pos:end="309:52"><expr pos:start="307:9" pos:end="309:51"><name pos:start="307:9" pos:end="307:11">ret</name> <operator pos:start="307:13" pos:end="307:13">=</operator> <call pos:start="307:15" pos:end="309:51"><name pos:start="307:15" pos:end="307:34">avcodec_encode_audio</name><argument_list pos:start="307:35" pos:end="309:51">(<argument pos:start="307:36" pos:end="307:38"><expr pos:start="307:36" pos:end="307:38"><name pos:start="307:36" pos:end="307:38">enc</name></expr></argument>, <argument pos:start="307:41" pos:end="307:49"><expr pos:start="307:41" pos:end="307:49"><name pos:start="307:41" pos:end="307:49">audio_out</name></expr></argument>, <argument pos:start="307:52" pos:end="307:59"><expr pos:start="307:52" pos:end="307:59"><name pos:start="307:52" pos:end="307:59">size_out</name></expr></argument>,

                                   <argument pos:start="309:36" pos:end="309:50"><expr pos:start="309:36" pos:end="309:50"><operator pos:start="309:36" pos:end="309:36">(</operator><name pos:start="309:37" pos:end="309:41">short</name> <operator pos:start="309:43" pos:end="309:43">*</operator><operator pos:start="309:44" pos:end="309:44">)</operator><name pos:start="309:45" pos:end="309:50">buftmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="311:9" pos:end="311:26"><expr pos:start="311:9" pos:end="311:25"><name pos:start="311:9" pos:end="311:18">audio_size</name> <operator pos:start="311:20" pos:end="311:21">+=</operator> <name pos:start="311:23" pos:end="311:25">ret</name></expr>;</expr_stmt>

        <expr_stmt pos:start="313:9" pos:end="313:37"><expr pos:start="313:9" pos:end="313:36"><name pos:start="313:9" pos:end="313:24"><name pos:start="313:9" pos:end="313:11">pkt</name><operator pos:start="313:12" pos:end="313:12">.</operator><name pos:start="313:13" pos:end="313:24">stream_index</name></name><operator pos:start="313:25" pos:end="313:25">=</operator> <name pos:start="313:27" pos:end="313:36"><name pos:start="313:27" pos:end="313:29">ost</name><operator pos:start="313:30" pos:end="313:31">-&gt;</operator><name pos:start="313:32" pos:end="313:36">index</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="315:9" pos:end="315:28"><expr pos:start="315:9" pos:end="315:27"><name pos:start="315:9" pos:end="315:16"><name pos:start="315:9" pos:end="315:11">pkt</name><operator pos:start="315:12" pos:end="315:12">.</operator><name pos:start="315:13" pos:end="315:16">data</name></name><operator pos:start="315:17" pos:end="315:17">=</operator> <name pos:start="315:19" pos:end="315:27">audio_out</name></expr>;</expr_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:22"><expr pos:start="317:9" pos:end="317:21"><name pos:start="317:9" pos:end="317:16"><name pos:start="317:9" pos:end="317:11">pkt</name><operator pos:start="317:12" pos:end="317:12">.</operator><name pos:start="317:13" pos:end="317:16">size</name></name><operator pos:start="317:17" pos:end="317:17">=</operator> <name pos:start="317:19" pos:end="317:21">ret</name></expr>;</expr_stmt>

        <if_stmt pos:start="319:9" pos:end="321:93"><if pos:start="319:9" pos:end="321:93">if<condition pos:start="319:11" pos:end="319:71">(<expr pos:start="319:12" pos:end="319:70"><name pos:start="319:12" pos:end="319:27"><name pos:start="319:12" pos:end="319:14">enc</name><operator pos:start="319:15" pos:end="319:16">-&gt;</operator><name pos:start="319:17" pos:end="319:27">coded_frame</name></name> <operator pos:start="319:29" pos:end="319:30">&amp;&amp;</operator> <name pos:start="319:32" pos:end="319:52"><name pos:start="319:32" pos:end="319:34">enc</name><operator pos:start="319:35" pos:end="319:36">-&gt;</operator><name pos:start="319:37" pos:end="319:47">coded_frame</name><operator pos:start="319:48" pos:end="319:49">-&gt;</operator><name pos:start="319:50" pos:end="319:52">pts</name></name> <operator pos:start="319:54" pos:end="319:55">!=</operator> <name pos:start="319:57" pos:end="319:70">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="321:13" pos:end="321:93"><block_content pos:start="321:13" pos:end="321:93">

            <expr_stmt pos:start="321:13" pos:end="321:93"><expr pos:start="321:13" pos:end="321:92"><name pos:start="321:13" pos:end="321:19"><name pos:start="321:13" pos:end="321:15">pkt</name><operator pos:start="321:16" pos:end="321:16">.</operator><name pos:start="321:17" pos:end="321:19">pts</name></name><operator pos:start="321:20" pos:end="321:20">=</operator> <call pos:start="321:22" pos:end="321:92"><name pos:start="321:22" pos:end="321:33">av_rescale_q</name><argument_list pos:start="321:34" pos:end="321:92">(<argument pos:start="321:35" pos:end="321:55"><expr pos:start="321:35" pos:end="321:55"><name pos:start="321:35" pos:end="321:55"><name pos:start="321:35" pos:end="321:37">enc</name><operator pos:start="321:38" pos:end="321:39">-&gt;</operator><name pos:start="321:40" pos:end="321:50">coded_frame</name><operator pos:start="321:51" pos:end="321:52">-&gt;</operator><name pos:start="321:53" pos:end="321:55">pts</name></name></expr></argument>, <argument pos:start="321:58" pos:end="321:71"><expr pos:start="321:58" pos:end="321:71"><name pos:start="321:58" pos:end="321:71"><name pos:start="321:58" pos:end="321:60">enc</name><operator pos:start="321:61" pos:end="321:62">-&gt;</operator><name pos:start="321:63" pos:end="321:71">time_base</name></name></expr></argument>, <argument pos:start="321:74" pos:end="321:91"><expr pos:start="321:74" pos:end="321:91"><name pos:start="321:74" pos:end="321:91"><name pos:start="321:74" pos:end="321:76">ost</name><operator pos:start="321:77" pos:end="321:78">-&gt;</operator><name pos:start="321:79" pos:end="321:80">st</name><operator pos:start="321:81" pos:end="321:82">-&gt;</operator><name pos:start="321:83" pos:end="321:91">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="323:9" pos:end="323:34"><expr pos:start="323:9" pos:end="323:33"><name pos:start="323:9" pos:end="323:17"><name pos:start="323:9" pos:end="323:11">pkt</name><operator pos:start="323:12" pos:end="323:12">.</operator><name pos:start="323:13" pos:end="323:17">flags</name></name> <operator pos:start="323:19" pos:end="323:20">|=</operator> <name pos:start="323:22" pos:end="323:33">PKT_FLAG_KEY</name></expr>;</expr_stmt>

        <expr_stmt pos:start="325:9" pos:end="325:99"><expr pos:start="325:9" pos:end="325:98"><call pos:start="325:9" pos:end="325:98"><name pos:start="325:9" pos:end="325:19">write_frame</name><argument_list pos:start="325:20" pos:end="325:98">(<argument pos:start="325:21" pos:end="325:21"><expr pos:start="325:21" pos:end="325:21"><name pos:start="325:21" pos:end="325:21">s</name></expr></argument>, <argument pos:start="325:24" pos:end="325:27"><expr pos:start="325:24" pos:end="325:27"><operator pos:start="325:24" pos:end="325:24">&amp;</operator><name pos:start="325:25" pos:end="325:27">pkt</name></expr></argument>, <argument pos:start="325:30" pos:end="325:43"><expr pos:start="325:30" pos:end="325:43"><name pos:start="325:30" pos:end="325:43"><name pos:start="325:30" pos:end="325:32">ost</name><operator pos:start="325:33" pos:end="325:34">-&gt;</operator><name pos:start="325:35" pos:end="325:36">st</name><operator pos:start="325:37" pos:end="325:38">-&gt;</operator><name pos:start="325:39" pos:end="325:43">codec</name></name></expr></argument>, <argument pos:start="325:46" pos:end="325:97"><expr pos:start="325:46" pos:end="325:97"><name pos:start="325:46" pos:end="325:97"><name pos:start="325:46" pos:end="325:62">bitstream_filters</name><index pos:start="325:63" pos:end="325:79">[<expr pos:start="325:64" pos:end="325:78"><name pos:start="325:64" pos:end="325:78"><name pos:start="325:64" pos:end="325:66">ost</name><operator pos:start="325:67" pos:end="325:68">-&gt;</operator><name pos:start="325:69" pos:end="325:78">file_index</name></name></expr>]</index><index pos:start="325:80" pos:end="325:97">[<expr pos:start="325:81" pos:end="325:96"><name pos:start="325:81" pos:end="325:96"><name pos:start="325:81" pos:end="325:83">pkt</name><operator pos:start="325:84" pos:end="325:84">.</operator><name pos:start="325:85" pos:end="325:96">stream_index</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
