<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24568.c" pos:tabs="8"><function pos:start="1:1" pos:end="317:1"><type pos:start="1:1" pos:end="1:21"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">OutputStream</name> <modifier pos:start="1:21" pos:end="1:21">*</modifier></type><name pos:start="1:22" pos:end="1:38">new_output_stream</name><parameter_list pos:start="1:39" pos:end="1:119">(<parameter pos:start="1:40" pos:end="1:56"><decl pos:start="1:40" pos:end="1:56"><type pos:start="1:40" pos:end="1:56"><name pos:start="1:40" pos:end="1:53">OptionsContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">o</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:77"><decl pos:start="1:59" pos:end="1:77"><type pos:start="1:59" pos:end="1:77"><name pos:start="1:59" pos:end="1:73">AVFormatContext</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:77">oc</name></decl></parameter>, <parameter pos:start="1:80" pos:end="1:100"><decl pos:start="1:80" pos:end="1:100"><type pos:start="1:80" pos:end="1:100"><name pos:start="1:80" pos:end="1:95"><name pos:start="1:80" pos:end="1:83">enum</name> <name pos:start="1:85" pos:end="1:95">AVMediaType</name></name></type> <name pos:start="1:97" pos:end="1:100">type</name></decl></parameter>, <parameter pos:start="1:103" pos:end="1:118"><decl pos:start="1:103" pos:end="1:118"><type pos:start="1:103" pos:end="1:118"><name pos:start="1:103" pos:end="1:105">int</name></type> <name pos:start="1:107" pos:end="1:118">source_index</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="317:1">{<block_content pos:start="5:5" pos:end="315:15">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">OutputStream</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">ost</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name> <init pos:start="7:18" pos:end="7:48">= <expr pos:start="7:20" pos:end="7:48"><call pos:start="7:20" pos:end="7:48"><name pos:start="7:20" pos:end="7:38">avformat_new_stream</name><argument_list pos:start="7:39" pos:end="7:48">(<argument pos:start="7:40" pos:end="7:41"><expr pos:start="7:40" pos:end="7:41"><name pos:start="7:40" pos:end="7:41">oc</name></expr></argument>, <argument pos:start="7:44" pos:end="7:47"><expr pos:start="7:44" pos:end="7:47"><name pos:start="7:44" pos:end="7:47">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">idx</name>      <init pos:start="9:18" pos:end="9:37">= <expr pos:start="9:20" pos:end="9:37"><name pos:start="9:20" pos:end="9:33"><name pos:start="9:20" pos:end="9:21">oc</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:33">nb_streams</name></name> <operator pos:start="9:35" pos:end="9:35">-</operator> <literal type="number" pos:start="9:37" pos:end="9:37">1</literal></expr></init></decl>, <decl pos:start="9:40" pos:end="9:46"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:40" pos:end="9:42">ret</name> <init pos:start="9:44" pos:end="9:46">= <expr pos:start="9:46" pos:end="9:46"><literal type="number" pos:start="9:46" pos:end="9:46">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:13">bsf</name> <init pos:start="11:15" pos:end="11:20">= <expr pos:start="11:17" pos:end="11:20"><name pos:start="11:17" pos:end="11:20">NULL</name></expr></init></decl>, <decl pos:start="11:23" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:10"><modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:27">next</name></decl>, <decl pos:start="11:30" pos:end="11:46"><type ref="prev" pos:start="11:5" pos:end="11:10"><modifier pos:start="11:30" pos:end="11:30">*</modifier></type><name pos:start="11:31" pos:end="11:39">codec_tag</name> <init pos:start="11:41" pos:end="11:46">= <expr pos:start="11:43" pos:end="11:46"><name pos:start="11:43" pos:end="11:46">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:54"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:28">AVBitStreamFilterContext</name> <modifier pos:start="13:30" pos:end="13:30">*</modifier></type><name pos:start="13:31" pos:end="13:34">bsfc</name></decl>, <decl pos:start="13:37" pos:end="13:53"><type ref="prev" pos:start="13:5" pos:end="13:30"><modifier pos:start="13:37" pos:end="13:37">*</modifier></type><name pos:start="13:38" pos:end="13:46">bsfc_prev</name> <init pos:start="13:48" pos:end="13:53">= <expr pos:start="13:50" pos:end="13:53"><name pos:start="13:50" pos:end="13:53">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">double</name></type> <name pos:start="15:12" pos:end="15:17">qscale</name> <init pos:start="15:19" pos:end="15:22">= <expr pos:start="15:21" pos:end="15:22"><operator pos:start="15:21" pos:end="15:21">-</operator><literal type="number" pos:start="15:22" pos:end="15:22">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:12">(<expr pos:start="21:9" pos:end="21:11"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:11">st</name></expr>)</condition> <block pos:start="21:14" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:24">

        <expr_stmt pos:start="23:9" pos:end="23:64"><expr pos:start="23:9" pos:end="23:63"><call pos:start="23:9" pos:end="23:63"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="23:63">(<argument pos:start="23:16" pos:end="23:19"><expr pos:start="23:16" pos:end="23:19"><name pos:start="23:16" pos:end="23:19">NULL</name></expr></argument>, <argument pos:start="23:22" pos:end="23:33"><expr pos:start="23:22" pos:end="23:33"><name pos:start="23:22" pos:end="23:33">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="23:36" pos:end="23:62"><expr pos:start="23:36" pos:end="23:62"><literal type="string" pos:start="23:36" pos:end="23:62">"Could not alloc stream.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:24"><expr pos:start="25:9" pos:end="25:23"><call pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:20">exit_program</name><argument_list pos:start="25:21" pos:end="25:23">(<argument pos:start="25:22" pos:end="25:22"><expr pos:start="25:22" pos:end="25:22"><literal type="number" pos:start="25:22" pos:end="25:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="33:53"><if pos:start="31:5" pos:end="33:53">if <condition pos:start="31:8" pos:end="31:48">(<expr pos:start="31:9" pos:end="31:47"><name pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:10">oc</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:22">nb_streams</name></name> <operator pos:start="31:24" pos:end="31:24">-</operator> <literal type="number" pos:start="31:26" pos:end="31:26">1</literal> <operator pos:start="31:28" pos:end="31:28">&lt;</operator> <name pos:start="31:30" pos:end="31:47"><name pos:start="31:30" pos:end="31:30">o</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:47">nb_streamid_map</name></name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:53"><block_content pos:start="33:9" pos:end="33:53">

        <expr_stmt pos:start="33:9" pos:end="33:53"><expr pos:start="33:9" pos:end="33:52"><name pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:10">st</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:14">id</name></name> <operator pos:start="33:16" pos:end="33:16">=</operator> <name pos:start="33:18" pos:end="33:52"><name pos:start="33:18" pos:end="33:18">o</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:32">streamid_map</name><index pos:start="33:33" pos:end="33:52">[<expr pos:start="33:34" pos:end="33:51"><name pos:start="33:34" pos:end="33:47"><name pos:start="33:34" pos:end="33:35">oc</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:47">nb_streams</name></name> <operator pos:start="33:49" pos:end="33:49">-</operator> <literal type="number" pos:start="33:51" pos:end="33:51">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:50"><expr pos:start="37:5" pos:end="37:49"><call pos:start="37:5" pos:end="37:49"><name pos:start="37:5" pos:end="37:14">GROW_ARRAY</name><argument_list pos:start="37:15" pos:end="37:49">(<argument pos:start="37:16" pos:end="37:29"><expr pos:start="37:16" pos:end="37:29"><name pos:start="37:16" pos:end="37:29">output_streams</name></expr></argument>, <argument pos:start="37:32" pos:end="37:48"><expr pos:start="37:32" pos:end="37:48"><name pos:start="37:32" pos:end="37:48">nb_output_streams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="41:24"><if pos:start="39:5" pos:end="41:24">if <condition pos:start="39:8" pos:end="39:42">(<expr pos:start="39:9" pos:end="39:41"><operator pos:start="39:9" pos:end="39:9">!</operator><operator pos:start="39:10" pos:end="39:10">(</operator><name pos:start="39:11" pos:end="39:13">ost</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <call pos:start="39:17" pos:end="39:40"><name pos:start="39:17" pos:end="39:26">av_mallocz</name><argument_list pos:start="39:27" pos:end="39:40">(<argument pos:start="39:28" pos:end="39:39"><expr pos:start="39:28" pos:end="39:39"><sizeof pos:start="39:28" pos:end="39:39">sizeof<argument_list pos:start="39:34" pos:end="39:39">(<argument pos:start="39:35" pos:end="39:38"><expr pos:start="39:35" pos:end="39:38"><operator pos:start="39:35" pos:end="39:35">*</operator><name pos:start="39:36" pos:end="39:38">ost</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="39:41" pos:end="39:41">)</operator></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:24"><block_content pos:start="41:9" pos:end="41:24">

        <expr_stmt pos:start="41:9" pos:end="41:24"><expr pos:start="41:9" pos:end="41:23"><call pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:20">exit_program</name><argument_list pos:start="41:21" pos:end="41:23">(<argument pos:start="41:22" pos:end="41:22"><expr pos:start="41:22" pos:end="41:22"><literal type="number" pos:start="41:22" pos:end="41:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:48"><expr pos:start="43:5" pos:end="43:47"><name pos:start="43:5" pos:end="43:41"><name pos:start="43:5" pos:end="43:18">output_streams</name><index pos:start="43:19" pos:end="43:41">[<expr pos:start="43:20" pos:end="43:40"><name pos:start="43:20" pos:end="43:36">nb_output_streams</name> <operator pos:start="43:38" pos:end="43:38">-</operator> <literal type="number" pos:start="43:40" pos:end="43:40">1</literal></expr>]</index></name> <operator pos:start="43:43" pos:end="43:43">=</operator> <name pos:start="43:45" pos:end="43:47">ost</name></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:42"><expr pos:start="47:5" pos:end="47:41"><name pos:start="47:5" pos:end="47:19"><name pos:start="47:5" pos:end="47:7">ost</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:19">file_index</name></name> <operator pos:start="47:21" pos:end="47:21">=</operator> <name pos:start="47:23" pos:end="47:37">nb_output_files</name> <operator pos:start="47:39" pos:end="47:39">-</operator> <literal type="number" pos:start="47:41" pos:end="47:41">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:26"><expr pos:start="49:5" pos:end="49:25"><name pos:start="49:5" pos:end="49:14"><name pos:start="49:5" pos:end="49:7">ost</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:14">index</name></name>      <operator pos:start="49:21" pos:end="49:21">=</operator> <name pos:start="49:23" pos:end="49:25">idx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:25"><expr pos:start="51:5" pos:end="51:24"><name pos:start="51:5" pos:end="51:11"><name pos:start="51:5" pos:end="51:7">ost</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:11">st</name></name>         <operator pos:start="51:21" pos:end="51:21">=</operator> <name pos:start="51:23" pos:end="51:24">st</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:36"><expr pos:start="53:5" pos:end="53:35"><name pos:start="53:5" pos:end="53:28"><name pos:start="53:5" pos:end="53:6">st</name><operator pos:start="53:7" pos:end="53:8">-&gt;</operator><name pos:start="53:9" pos:end="53:16">codecpar</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:28">codec_type</name></name> <operator pos:start="53:30" pos:end="53:30">=</operator> <name pos:start="53:32" pos:end="53:35">type</name></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:37"><expr pos:start="57:5" pos:end="57:36"><name pos:start="57:5" pos:end="57:7">ret</name> <operator pos:start="57:9" pos:end="57:9">=</operator> <call pos:start="57:11" pos:end="57:36"><name pos:start="57:11" pos:end="57:24">choose_encoder</name><argument_list pos:start="57:25" pos:end="57:36">(<argument pos:start="57:26" pos:end="57:26"><expr pos:start="57:26" pos:end="57:26"><name pos:start="57:26" pos:end="57:26">o</name></expr></argument>, <argument pos:start="57:29" pos:end="57:30"><expr pos:start="57:29" pos:end="57:30"><name pos:start="57:29" pos:end="57:30">oc</name></expr></argument>, <argument pos:start="57:33" pos:end="57:35"><expr pos:start="57:33" pos:end="57:35"><name pos:start="57:33" pos:end="57:35">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="67:5"><if pos:start="59:5" pos:end="67:5">if <condition pos:start="59:8" pos:end="59:16">(<expr pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:11">ret</name> <operator pos:start="59:13" pos:end="59:13">&lt;</operator> <literal type="number" pos:start="59:15" pos:end="59:15">0</literal></expr>)</condition> <block pos:start="59:18" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:24">

        <expr_stmt pos:start="61:9" pos:end="63:55"><expr pos:start="61:9" pos:end="63:54"><call pos:start="61:9" pos:end="63:54"><name pos:start="61:9" pos:end="61:14">av_log</name><argument_list pos:start="61:15" pos:end="63:54">(<argument pos:start="61:16" pos:end="61:19"><expr pos:start="61:16" pos:end="61:19"><name pos:start="61:16" pos:end="61:19">NULL</name></expr></argument>, <argument pos:start="61:22" pos:end="61:33"><expr pos:start="61:22" pos:end="61:33"><name pos:start="61:22" pos:end="61:33">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="61:36" pos:end="63:24"><expr pos:start="61:36" pos:end="63:24"><literal type="string" pos:start="61:36" pos:end="61:75">"Error selecting an encoder for stream "</literal>

               <literal type="string" pos:start="63:16" pos:end="63:24">"%d:%d\n"</literal></expr></argument>, <argument pos:start="63:27" pos:end="63:41"><expr pos:start="63:27" pos:end="63:41"><name pos:start="63:27" pos:end="63:41"><name pos:start="63:27" pos:end="63:29">ost</name><operator pos:start="63:30" pos:end="63:31">-&gt;</operator><name pos:start="63:32" pos:end="63:41">file_index</name></name></expr></argument>, <argument pos:start="63:44" pos:end="63:53"><expr pos:start="63:44" pos:end="63:53"><name pos:start="63:44" pos:end="63:53"><name pos:start="63:44" pos:end="63:46">ost</name><operator pos:start="63:47" pos:end="63:48">-&gt;</operator><name pos:start="63:49" pos:end="63:53">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:24"><expr pos:start="65:9" pos:end="65:23"><call pos:start="65:9" pos:end="65:23"><name pos:start="65:9" pos:end="65:20">exit_program</name><argument_list pos:start="65:21" pos:end="65:23">(<argument pos:start="65:22" pos:end="65:22"><expr pos:start="65:22" pos:end="65:22"><literal type="number" pos:start="65:22" pos:end="65:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:52"><expr pos:start="71:5" pos:end="71:51"><name pos:start="71:5" pos:end="71:16"><name pos:start="71:5" pos:end="71:7">ost</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:16">enc_ctx</name></name> <operator pos:start="71:18" pos:end="71:18">=</operator> <call pos:start="71:20" pos:end="71:51"><name pos:start="71:20" pos:end="71:41">avcodec_alloc_context3</name><argument_list pos:start="71:42" pos:end="71:51">(<argument pos:start="71:43" pos:end="71:50"><expr pos:start="71:43" pos:end="71:50"><name pos:start="71:43" pos:end="71:50"><name pos:start="71:43" pos:end="71:45">ost</name><operator pos:start="71:46" pos:end="71:47">-&gt;</operator><name pos:start="71:48" pos:end="71:50">enc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if <condition pos:start="73:8" pos:end="73:22">(<expr pos:start="73:9" pos:end="73:21"><operator pos:start="73:9" pos:end="73:9">!</operator><name pos:start="73:10" pos:end="73:21"><name pos:start="73:10" pos:end="73:12">ost</name><operator pos:start="73:13" pos:end="73:14">-&gt;</operator><name pos:start="73:15" pos:end="73:21">enc_ctx</name></name></expr>)</condition> <block pos:start="73:24" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:24">

        <expr_stmt pos:start="75:9" pos:end="75:79"><expr pos:start="75:9" pos:end="75:78"><call pos:start="75:9" pos:end="75:78"><name pos:start="75:9" pos:end="75:14">av_log</name><argument_list pos:start="75:15" pos:end="75:78">(<argument pos:start="75:16" pos:end="75:19"><expr pos:start="75:16" pos:end="75:19"><name pos:start="75:16" pos:end="75:19">NULL</name></expr></argument>, <argument pos:start="75:22" pos:end="75:33"><expr pos:start="75:22" pos:end="75:33"><name pos:start="75:22" pos:end="75:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="75:36" pos:end="75:77"><expr pos:start="75:36" pos:end="75:77"><literal type="string" pos:start="75:36" pos:end="75:77">"Error allocating the encoding context.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:24"><expr pos:start="77:9" pos:end="77:23"><call pos:start="77:9" pos:end="77:23"><name pos:start="77:9" pos:end="77:20">exit_program</name><argument_list pos:start="77:21" pos:end="77:23">(<argument pos:start="77:22" pos:end="77:22"><expr pos:start="77:22" pos:end="77:22"><literal type="number" pos:start="77:22" pos:end="77:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:36"><expr pos:start="81:5" pos:end="81:35"><name pos:start="81:5" pos:end="81:28"><name pos:start="81:5" pos:end="81:7">ost</name><operator pos:start="81:8" pos:end="81:9">-&gt;</operator><name pos:start="81:10" pos:end="81:16">enc_ctx</name><operator pos:start="81:17" pos:end="81:18">-&gt;</operator><name pos:start="81:19" pos:end="81:28">codec_type</name></name> <operator pos:start="81:30" pos:end="81:30">=</operator> <name pos:start="81:32" pos:end="81:35">type</name></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:46"><expr pos:start="85:5" pos:end="85:45"><name pos:start="85:5" pos:end="85:16"><name pos:start="85:5" pos:end="85:7">ost</name><operator pos:start="85:8" pos:end="85:9">-&gt;</operator><name pos:start="85:10" pos:end="85:16">ref_par</name></name> <operator pos:start="85:18" pos:end="85:18">=</operator> <call pos:start="85:20" pos:end="85:45"><name pos:start="85:20" pos:end="85:43">avcodec_parameters_alloc</name><argument_list pos:start="85:44" pos:end="85:45">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="93:5"><if pos:start="87:5" pos:end="93:5">if <condition pos:start="87:8" pos:end="87:22">(<expr pos:start="87:9" pos:end="87:21"><operator pos:start="87:9" pos:end="87:9">!</operator><name pos:start="87:10" pos:end="87:21"><name pos:start="87:10" pos:end="87:12">ost</name><operator pos:start="87:13" pos:end="87:14">-&gt;</operator><name pos:start="87:15" pos:end="87:21">ref_par</name></name></expr>)</condition> <block pos:start="87:24" pos:end="93:5">{<block_content pos:start="89:9" pos:end="91:24">

        <expr_stmt pos:start="89:9" pos:end="89:82"><expr pos:start="89:9" pos:end="89:81"><call pos:start="89:9" pos:end="89:81"><name pos:start="89:9" pos:end="89:14">av_log</name><argument_list pos:start="89:15" pos:end="89:81">(<argument pos:start="89:16" pos:end="89:19"><expr pos:start="89:16" pos:end="89:19"><name pos:start="89:16" pos:end="89:19">NULL</name></expr></argument>, <argument pos:start="89:22" pos:end="89:33"><expr pos:start="89:22" pos:end="89:33"><name pos:start="89:22" pos:end="89:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="89:36" pos:end="89:80"><expr pos:start="89:36" pos:end="89:80"><literal type="string" pos:start="89:36" pos:end="89:80">"Error allocating the encoding parameters.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:24"><expr pos:start="91:9" pos:end="91:23"><call pos:start="91:9" pos:end="91:23"><name pos:start="91:9" pos:end="91:20">exit_program</name><argument_list pos:start="91:21" pos:end="91:23">(<argument pos:start="91:22" pos:end="91:22"><expr pos:start="91:22" pos:end="91:22"><literal type="number" pos:start="91:22" pos:end="91:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="97:5" pos:end="161:5"><if pos:start="97:5" pos:end="157:5">if <condition pos:start="97:8" pos:end="97:17">(<expr pos:start="97:9" pos:end="97:16"><name pos:start="97:9" pos:end="97:16"><name pos:start="97:9" pos:end="97:11">ost</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:16">enc</name></name></expr>)</condition> <block pos:start="97:19" pos:end="157:5">{<block_content pos:start="99:9" pos:end="155:9">

        <decl_stmt pos:start="99:9" pos:end="99:30"><decl pos:start="99:9" pos:end="99:29"><type pos:start="99:9" pos:end="99:21"><name pos:start="99:9" pos:end="99:19">AVIOContext</name> <modifier pos:start="99:21" pos:end="99:21">*</modifier></type><name pos:start="99:22" pos:end="99:22">s</name> <init pos:start="99:24" pos:end="99:29">= <expr pos:start="99:26" pos:end="99:29"><name pos:start="99:26" pos:end="99:29">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="101:9" pos:end="101:54"><decl pos:start="101:9" pos:end="101:24"><type pos:start="101:9" pos:end="101:14"><name pos:start="101:9" pos:end="101:12">char</name> <modifier pos:start="101:14" pos:end="101:14">*</modifier></type><name pos:start="101:15" pos:end="101:17">buf</name> <init pos:start="101:19" pos:end="101:24">= <expr pos:start="101:21" pos:end="101:24"><name pos:start="101:21" pos:end="101:24">NULL</name></expr></init></decl>, <decl pos:start="101:27" pos:end="101:37"><type ref="prev" pos:start="101:9" pos:end="101:14"><modifier pos:start="101:27" pos:end="101:27">*</modifier></type><name pos:start="101:28" pos:end="101:30">arg</name> <init pos:start="101:32" pos:end="101:37">= <expr pos:start="101:34" pos:end="101:37"><name pos:start="101:34" pos:end="101:37">NULL</name></expr></init></decl>, <decl pos:start="101:40" pos:end="101:53"><type ref="prev" pos:start="101:9" pos:end="101:14"><modifier pos:start="101:40" pos:end="101:40">*</modifier></type><name pos:start="101:41" pos:end="101:46">preset</name> <init pos:start="101:48" pos:end="101:53">= <expr pos:start="101:50" pos:end="101:53"><name pos:start="101:50" pos:end="101:53">NULL</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="105:9" pos:end="105:97"><expr pos:start="105:9" pos:end="105:96"><name pos:start="105:9" pos:end="105:25"><name pos:start="105:9" pos:end="105:11">ost</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:25">encoder_opts</name></name>  <operator pos:start="105:28" pos:end="105:28">=</operator> <call pos:start="105:30" pos:end="105:96"><name pos:start="105:30" pos:end="105:46">filter_codec_opts</name><argument_list pos:start="105:47" pos:end="105:96">(<argument pos:start="105:48" pos:end="105:63"><expr pos:start="105:48" pos:end="105:63"><name pos:start="105:48" pos:end="105:63"><name pos:start="105:48" pos:end="105:48">o</name><operator pos:start="105:49" pos:end="105:50">-&gt;</operator><name pos:start="105:51" pos:end="105:51">g</name><operator pos:start="105:52" pos:end="105:53">-&gt;</operator><name pos:start="105:54" pos:end="105:63">codec_opts</name></name></expr></argument>, <argument pos:start="105:66" pos:end="105:77"><expr pos:start="105:66" pos:end="105:77"><name pos:start="105:66" pos:end="105:77"><name pos:start="105:66" pos:end="105:68">ost</name><operator pos:start="105:69" pos:end="105:70">-&gt;</operator><name pos:start="105:71" pos:end="105:73">enc</name><operator pos:start="105:74" pos:end="105:75">-&gt;</operator><name pos:start="105:76" pos:end="105:77">id</name></name></expr></argument>, <argument pos:start="105:80" pos:end="105:81"><expr pos:start="105:80" pos:end="105:81"><name pos:start="105:80" pos:end="105:81">oc</name></expr></argument>, <argument pos:start="105:84" pos:end="105:85"><expr pos:start="105:84" pos:end="105:85"><name pos:start="105:84" pos:end="105:85">st</name></expr></argument>, <argument pos:start="105:88" pos:end="105:95"><expr pos:start="105:88" pos:end="105:95"><name pos:start="105:88" pos:end="105:95"><name pos:start="105:88" pos:end="105:90">ost</name><operator pos:start="105:91" pos:end="105:92">-&gt;</operator><name pos:start="105:93" pos:end="105:95">enc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="109:9" pos:end="109:59"><expr pos:start="109:9" pos:end="109:58"><call pos:start="109:9" pos:end="109:58"><name pos:start="109:9" pos:end="109:28">MATCH_PER_STREAM_OPT</name><argument_list pos:start="109:29" pos:end="109:58">(<argument pos:start="109:30" pos:end="109:36"><expr pos:start="109:30" pos:end="109:36"><name pos:start="109:30" pos:end="109:36">presets</name></expr></argument>, <argument pos:start="109:39" pos:end="109:41"><expr pos:start="109:39" pos:end="109:41"><name pos:start="109:39" pos:end="109:41">str</name></expr></argument>, <argument pos:start="109:44" pos:end="109:49"><expr pos:start="109:44" pos:end="109:49"><name pos:start="109:44" pos:end="109:49">preset</name></expr></argument>, <argument pos:start="109:52" pos:end="109:53"><expr pos:start="109:52" pos:end="109:53"><name pos:start="109:52" pos:end="109:53">oc</name></expr></argument>, <argument pos:start="109:56" pos:end="109:57"><expr pos:start="109:56" pos:end="109:57"><name pos:start="109:56" pos:end="109:57">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="111:9" pos:end="143:9"><if pos:start="111:9" pos:end="143:9">if <condition pos:start="111:12" pos:end="111:79">(<expr pos:start="111:13" pos:end="111:78"><name pos:start="111:13" pos:end="111:18">preset</name> <operator pos:start="111:20" pos:end="111:21">&amp;&amp;</operator> <operator pos:start="111:23" pos:end="111:23">(</operator><operator pos:start="111:24" pos:end="111:24">!</operator><operator pos:start="111:25" pos:end="111:25">(</operator><name pos:start="111:26" pos:end="111:28">ret</name> <operator pos:start="111:30" pos:end="111:30">=</operator> <call pos:start="111:32" pos:end="111:76"><name pos:start="111:32" pos:end="111:48">get_preset_file_2</name><argument_list pos:start="111:49" pos:end="111:76">(<argument pos:start="111:50" pos:end="111:55"><expr pos:start="111:50" pos:end="111:55"><name pos:start="111:50" pos:end="111:55">preset</name></expr></argument>, <argument pos:start="111:58" pos:end="111:71"><expr pos:start="111:58" pos:end="111:71"><name pos:start="111:58" pos:end="111:71"><name pos:start="111:58" pos:end="111:60">ost</name><operator pos:start="111:61" pos:end="111:62">-&gt;</operator><name pos:start="111:63" pos:end="111:65">enc</name><operator pos:start="111:66" pos:end="111:67">-&gt;</operator><name pos:start="111:68" pos:end="111:71">name</name></name></expr></argument>, <argument pos:start="111:74" pos:end="111:75"><expr pos:start="111:74" pos:end="111:75"><operator pos:start="111:74" pos:end="111:74">&amp;</operator><name pos:start="111:75" pos:end="111:75">s</name></expr></argument>)</argument_list></call><operator pos:start="111:77" pos:end="111:77">)</operator><operator pos:start="111:78" pos:end="111:78">)</operator></expr>)</condition> <block pos:start="111:81" pos:end="143:9">{<block_content pos:start="113:13" pos:end="141:28">

            <do pos:start="113:13" pos:end="139:38">do  <block pos:start="113:17" pos:end="139:13">{<block_content pos:start="115:17" pos:end="137:29">

                <expr_stmt pos:start="115:17" pos:end="115:34"><expr pos:start="115:17" pos:end="115:33"><name pos:start="115:17" pos:end="115:19">buf</name> <operator pos:start="115:21" pos:end="115:21">=</operator> <call pos:start="115:23" pos:end="115:33"><name pos:start="115:23" pos:end="115:30">get_line</name><argument_list pos:start="115:31" pos:end="115:33">(<argument pos:start="115:32" pos:end="115:32"><expr pos:start="115:32" pos:end="115:32"><name pos:start="115:32" pos:end="115:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="117:17" pos:end="123:17"><if pos:start="117:17" pos:end="123:17">if <condition pos:start="117:20" pos:end="117:45">(<expr pos:start="117:21" pos:end="117:44"><operator pos:start="117:21" pos:end="117:21">!</operator><name pos:start="117:22" pos:end="117:27"><name pos:start="117:22" pos:end="117:24">buf</name><index pos:start="117:25" pos:end="117:27">[<expr pos:start="117:26" pos:end="117:26"><literal type="number" pos:start="117:26" pos:end="117:26">0</literal></expr>]</index></name> <operator pos:start="117:29" pos:end="117:30">||</operator> <name pos:start="117:32" pos:end="117:37"><name pos:start="117:32" pos:end="117:34">buf</name><index pos:start="117:35" pos:end="117:37">[<expr pos:start="117:36" pos:end="117:36"><literal type="number" pos:start="117:36" pos:end="117:36">0</literal></expr>]</index></name> <operator pos:start="117:39" pos:end="117:40">==</operator> <literal type="char" pos:start="117:42" pos:end="117:44">'#'</literal></expr>)</condition> <block pos:start="117:47" pos:end="123:17">{<block_content pos:start="119:21" pos:end="121:29">

                    <expr_stmt pos:start="119:21" pos:end="119:33"><expr pos:start="119:21" pos:end="119:32"><call pos:start="119:21" pos:end="119:32"><name pos:start="119:21" pos:end="119:27">av_free</name><argument_list pos:start="119:28" pos:end="119:32">(<argument pos:start="119:29" pos:end="119:31"><expr pos:start="119:29" pos:end="119:31"><name pos:start="119:29" pos:end="119:31">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <continue pos:start="121:21" pos:end="121:29">continue;</continue>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="125:17" pos:end="131:17"><if pos:start="125:17" pos:end="131:17">if <condition pos:start="125:20" pos:end="125:46">(<expr pos:start="125:21" pos:end="125:45"><operator pos:start="125:21" pos:end="125:21">!</operator><operator pos:start="125:22" pos:end="125:22">(</operator><name pos:start="125:23" pos:end="125:25">arg</name> <operator pos:start="125:27" pos:end="125:27">=</operator> <call pos:start="125:29" pos:end="125:44"><name pos:start="125:29" pos:end="125:34">strchr</name><argument_list pos:start="125:35" pos:end="125:44">(<argument pos:start="125:36" pos:end="125:38"><expr pos:start="125:36" pos:end="125:38"><name pos:start="125:36" pos:end="125:38">buf</name></expr></argument>, <argument pos:start="125:41" pos:end="125:43"><expr pos:start="125:41" pos:end="125:43"><literal type="char" pos:start="125:41" pos:end="125:43">'='</literal></expr></argument>)</argument_list></call><operator pos:start="125:45" pos:end="125:45">)</operator></expr>)</condition> <block pos:start="125:48" pos:end="131:17">{<block_content pos:start="127:21" pos:end="129:36">

                    <expr_stmt pos:start="127:21" pos:end="127:91"><expr pos:start="127:21" pos:end="127:90"><call pos:start="127:21" pos:end="127:90"><name pos:start="127:21" pos:end="127:26">av_log</name><argument_list pos:start="127:27" pos:end="127:90">(<argument pos:start="127:28" pos:end="127:31"><expr pos:start="127:28" pos:end="127:31"><name pos:start="127:28" pos:end="127:31">NULL</name></expr></argument>, <argument pos:start="127:34" pos:end="127:45"><expr pos:start="127:34" pos:end="127:45"><name pos:start="127:34" pos:end="127:45">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="127:48" pos:end="127:89"><expr pos:start="127:48" pos:end="127:89"><literal type="string" pos:start="127:48" pos:end="127:89">"Invalid line found in the preset file.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="129:21" pos:end="129:36"><expr pos:start="129:21" pos:end="129:35"><call pos:start="129:21" pos:end="129:35"><name pos:start="129:21" pos:end="129:32">exit_program</name><argument_list pos:start="129:33" pos:end="129:35">(<argument pos:start="129:34" pos:end="129:34"><expr pos:start="129:34" pos:end="129:34"><literal type="number" pos:start="129:34" pos:end="129:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="133:17" pos:end="133:27"><expr pos:start="133:17" pos:end="133:26"><operator pos:start="133:17" pos:end="133:17">*</operator><name pos:start="133:18" pos:end="133:20">arg</name><operator pos:start="133:21" pos:end="133:22">++</operator> <operator pos:start="133:24" pos:end="133:24">=</operator> <literal type="number" pos:start="133:26" pos:end="133:26">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="135:17" pos:end="135:82"><expr pos:start="135:17" pos:end="135:81"><call pos:start="135:17" pos:end="135:81"><name pos:start="135:17" pos:end="135:27">av_dict_set</name><argument_list pos:start="135:28" pos:end="135:81">(<argument pos:start="135:29" pos:end="135:46"><expr pos:start="135:29" pos:end="135:46"><operator pos:start="135:29" pos:end="135:29">&amp;</operator><name pos:start="135:30" pos:end="135:46"><name pos:start="135:30" pos:end="135:32">ost</name><operator pos:start="135:33" pos:end="135:34">-&gt;</operator><name pos:start="135:35" pos:end="135:46">encoder_opts</name></name></expr></argument>, <argument pos:start="135:49" pos:end="135:51"><expr pos:start="135:49" pos:end="135:51"><name pos:start="135:49" pos:end="135:51">buf</name></expr></argument>, <argument pos:start="135:54" pos:end="135:56"><expr pos:start="135:54" pos:end="135:56"><name pos:start="135:54" pos:end="135:56">arg</name></expr></argument>, <argument pos:start="135:59" pos:end="135:80"><expr pos:start="135:59" pos:end="135:80"><name pos:start="135:59" pos:end="135:80">AV_DICT_DONT_OVERWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="137:17" pos:end="137:29"><expr pos:start="137:17" pos:end="137:28"><call pos:start="137:17" pos:end="137:28"><name pos:start="137:17" pos:end="137:23">av_free</name><argument_list pos:start="137:24" pos:end="137:28">(<argument pos:start="137:25" pos:end="137:27"><expr pos:start="137:25" pos:end="137:27"><name pos:start="137:25" pos:end="137:27">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block> while <condition pos:start="139:21" pos:end="139:37">(<expr pos:start="139:22" pos:end="139:36"><operator pos:start="139:22" pos:end="139:22">!</operator><name pos:start="139:23" pos:end="139:36"><name pos:start="139:23" pos:end="139:23">s</name><operator pos:start="139:24" pos:end="139:25">-&gt;</operator><name pos:start="139:26" pos:end="139:36">eof_reached</name></name></expr>)</condition>;</do>

            <expr_stmt pos:start="141:13" pos:end="141:28"><expr pos:start="141:13" pos:end="141:27"><call pos:start="141:13" pos:end="141:27"><name pos:start="141:13" pos:end="141:23">avio_closep</name><argument_list pos:start="141:24" pos:end="141:27">(<argument pos:start="141:25" pos:end="141:26"><expr pos:start="141:25" pos:end="141:26"><operator pos:start="141:25" pos:end="141:25">&amp;</operator><name pos:start="141:26" pos:end="141:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="145:9" pos:end="155:9"><if pos:start="145:9" pos:end="155:9">if <condition pos:start="145:12" pos:end="145:16">(<expr pos:start="145:13" pos:end="145:15"><name pos:start="145:13" pos:end="145:15">ret</name></expr>)</condition> <block pos:start="145:18" pos:end="155:9">{<block_content pos:start="147:13" pos:end="153:28">

            <expr_stmt pos:start="147:13" pos:end="151:56"><expr pos:start="147:13" pos:end="151:55"><call pos:start="147:13" pos:end="151:55"><name pos:start="147:13" pos:end="147:18">av_log</name><argument_list pos:start="147:19" pos:end="151:55">(<argument pos:start="147:20" pos:end="147:23"><expr pos:start="147:20" pos:end="147:23"><name pos:start="147:20" pos:end="147:23">NULL</name></expr></argument>, <argument pos:start="147:26" pos:end="147:37"><expr pos:start="147:26" pos:end="147:37"><name pos:start="147:26" pos:end="147:37">AV_LOG_FATAL</name></expr></argument>,

                   <argument pos:start="149:20" pos:end="149:85"><expr pos:start="149:20" pos:end="149:85"><literal type="string" pos:start="149:20" pos:end="149:85">"Preset %s specified for stream %d:%d, but could not be opened.\n"</literal></expr></argument>,

                   <argument pos:start="151:20" pos:end="151:25"><expr pos:start="151:20" pos:end="151:25"><name pos:start="151:20" pos:end="151:25">preset</name></expr></argument>, <argument pos:start="151:28" pos:end="151:42"><expr pos:start="151:28" pos:end="151:42"><name pos:start="151:28" pos:end="151:42"><name pos:start="151:28" pos:end="151:30">ost</name><operator pos:start="151:31" pos:end="151:32">-&gt;</operator><name pos:start="151:33" pos:end="151:42">file_index</name></name></expr></argument>, <argument pos:start="151:45" pos:end="151:54"><expr pos:start="151:45" pos:end="151:54"><name pos:start="151:45" pos:end="151:54"><name pos:start="151:45" pos:end="151:47">ost</name><operator pos:start="151:48" pos:end="151:49">-&gt;</operator><name pos:start="151:50" pos:end="151:54">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:28"><expr pos:start="153:13" pos:end="153:27"><call pos:start="153:13" pos:end="153:27"><name pos:start="153:13" pos:end="153:24">exit_program</name><argument_list pos:start="153:25" pos:end="153:27">(<argument pos:start="153:26" pos:end="153:26"><expr pos:start="153:26" pos:end="153:26"><literal type="number" pos:start="153:26" pos:end="153:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="157:7" pos:end="161:5">else <block pos:start="157:12" pos:end="161:5">{<block_content pos:start="159:9" pos:end="159:96">

        <expr_stmt pos:start="159:9" pos:end="159:96"><expr pos:start="159:9" pos:end="159:95"><name pos:start="159:9" pos:end="159:25"><name pos:start="159:9" pos:end="159:11">ost</name><operator pos:start="159:12" pos:end="159:13">-&gt;</operator><name pos:start="159:14" pos:end="159:25">encoder_opts</name></name> <operator pos:start="159:27" pos:end="159:27">=</operator> <call pos:start="159:29" pos:end="159:95"><name pos:start="159:29" pos:end="159:45">filter_codec_opts</name><argument_list pos:start="159:46" pos:end="159:95">(<argument pos:start="159:47" pos:end="159:62"><expr pos:start="159:47" pos:end="159:62"><name pos:start="159:47" pos:end="159:62"><name pos:start="159:47" pos:end="159:47">o</name><operator pos:start="159:48" pos:end="159:49">-&gt;</operator><name pos:start="159:50" pos:end="159:50">g</name><operator pos:start="159:51" pos:end="159:52">-&gt;</operator><name pos:start="159:53" pos:end="159:62">codec_opts</name></name></expr></argument>, <argument pos:start="159:65" pos:end="159:80"><expr pos:start="159:65" pos:end="159:80"><name pos:start="159:65" pos:end="159:80">AV_CODEC_ID_NONE</name></expr></argument>, <argument pos:start="159:83" pos:end="159:84"><expr pos:start="159:83" pos:end="159:84"><name pos:start="159:83" pos:end="159:84">oc</name></expr></argument>, <argument pos:start="159:87" pos:end="159:88"><expr pos:start="159:87" pos:end="159:88"><name pos:start="159:87" pos:end="159:88">st</name></expr></argument>, <argument pos:start="159:91" pos:end="159:94"><expr pos:start="159:91" pos:end="159:94"><name pos:start="159:91" pos:end="159:94">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="165:5" pos:end="165:32"><expr pos:start="165:5" pos:end="165:31"><name pos:start="165:5" pos:end="165:19"><name pos:start="165:5" pos:end="165:7">ost</name><operator pos:start="165:8" pos:end="165:9">-&gt;</operator><name pos:start="165:10" pos:end="165:19">max_frames</name></name> <operator pos:start="165:21" pos:end="165:21">=</operator> <name pos:start="165:23" pos:end="165:31">INT64_MAX</name></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:67"><expr pos:start="167:5" pos:end="167:66"><call pos:start="167:5" pos:end="167:66"><name pos:start="167:5" pos:end="167:24">MATCH_PER_STREAM_OPT</name><argument_list pos:start="167:25" pos:end="167:66">(<argument pos:start="167:26" pos:end="167:35"><expr pos:start="167:26" pos:end="167:35"><name pos:start="167:26" pos:end="167:35">max_frames</name></expr></argument>, <argument pos:start="167:38" pos:end="167:40"><expr pos:start="167:38" pos:end="167:40"><name pos:start="167:38" pos:end="167:40">i64</name></expr></argument>, <argument pos:start="167:43" pos:end="167:57"><expr pos:start="167:43" pos:end="167:57"><name pos:start="167:43" pos:end="167:57"><name pos:start="167:43" pos:end="167:45">ost</name><operator pos:start="167:46" pos:end="167:47">-&gt;</operator><name pos:start="167:48" pos:end="167:57">max_frames</name></name></expr></argument>, <argument pos:start="167:60" pos:end="167:61"><expr pos:start="167:60" pos:end="167:61"><name pos:start="167:60" pos:end="167:61">oc</name></expr></argument>, <argument pos:start="167:64" pos:end="167:65"><expr pos:start="167:64" pos:end="167:65"><name pos:start="167:64" pos:end="167:65">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="169:5" pos:end="181:5">for <control pos:start="169:9" pos:end="169:40">(<init pos:start="169:10" pos:end="169:15"><expr pos:start="169:10" pos:end="169:14"><name pos:start="169:10" pos:end="169:10">i</name> <operator pos:start="169:12" pos:end="169:12">=</operator> <literal type="number" pos:start="169:14" pos:end="169:14">0</literal></expr>;</init> <condition pos:start="169:17" pos:end="169:35"><expr pos:start="169:17" pos:end="169:34"><name pos:start="169:17" pos:end="169:17">i</name><operator pos:start="169:18" pos:end="169:18">&lt;</operator><name pos:start="169:19" pos:end="169:34"><name pos:start="169:19" pos:end="169:19">o</name><operator pos:start="169:20" pos:end="169:21">-&gt;</operator><name pos:start="169:22" pos:end="169:34">nb_max_frames</name></name></expr>;</condition> <incr pos:start="169:37" pos:end="169:39"><expr pos:start="169:37" pos:end="169:39"><name pos:start="169:37" pos:end="169:37">i</name><operator pos:start="169:38" pos:end="169:39">++</operator></expr></incr>)</control> <block pos:start="169:42" pos:end="181:5">{<block_content pos:start="171:9" pos:end="179:9">

        <decl_stmt pos:start="171:9" pos:end="171:45"><decl pos:start="171:9" pos:end="171:44"><type pos:start="171:9" pos:end="171:14"><name pos:start="171:9" pos:end="171:12">char</name> <modifier pos:start="171:14" pos:end="171:14">*</modifier></type><name pos:start="171:15" pos:end="171:15">p</name> <init pos:start="171:17" pos:end="171:44">= <expr pos:start="171:19" pos:end="171:44"><name pos:start="171:19" pos:end="171:34"><name pos:start="171:19" pos:end="171:19">o</name><operator pos:start="171:20" pos:end="171:21">-&gt;</operator><name pos:start="171:22" pos:end="171:31">max_frames</name><index pos:start="171:32" pos:end="171:34">[<expr pos:start="171:33" pos:end="171:33"><name pos:start="171:33" pos:end="171:33">i</name></expr>]</index></name><operator pos:start="171:35" pos:end="171:35">.</operator><name pos:start="171:36" pos:end="171:44">specifier</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="173:9" pos:end="179:9"><if pos:start="173:9" pos:end="179:9">if <condition pos:start="173:12" pos:end="173:46">(<expr pos:start="173:13" pos:end="173:45"><operator pos:start="173:13" pos:end="173:13">!</operator><operator pos:start="173:14" pos:end="173:14">*</operator><name pos:start="173:15" pos:end="173:15">p</name> <operator pos:start="173:17" pos:end="173:18">&amp;&amp;</operator> <name pos:start="173:20" pos:end="173:23">type</name> <operator pos:start="173:25" pos:end="173:26">!=</operator> <name pos:start="173:28" pos:end="173:45">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="173:48" pos:end="179:9">{<block_content pos:start="175:13" pos:end="177:18">

            <expr_stmt pos:start="175:13" pos:end="175:123"><expr pos:start="175:13" pos:end="175:122"><call pos:start="175:13" pos:end="175:122"><name pos:start="175:13" pos:end="175:18">av_log</name><argument_list pos:start="175:19" pos:end="175:122">(<argument pos:start="175:20" pos:end="175:23"><expr pos:start="175:20" pos:end="175:23"><name pos:start="175:20" pos:end="175:23">NULL</name></expr></argument>, <argument pos:start="175:26" pos:end="175:39"><expr pos:start="175:26" pos:end="175:39"><name pos:start="175:26" pos:end="175:39">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="175:42" pos:end="175:121"><expr pos:start="175:42" pos:end="175:121"><literal type="string" pos:start="175:42" pos:end="175:121">"Applying unspecific -frames to non video streams, maybe you meant -vframes ?\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="177:13" pos:end="177:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="185:5" pos:end="185:31"><expr pos:start="185:5" pos:end="185:30"><name pos:start="185:5" pos:end="185:25"><name pos:start="185:5" pos:end="185:7">ost</name><operator pos:start="185:8" pos:end="185:9">-&gt;</operator><name pos:start="185:10" pos:end="185:25">copy_prior_start</name></name> <operator pos:start="185:27" pos:end="185:27">=</operator> <operator pos:start="185:29" pos:end="185:29">-</operator><literal type="number" pos:start="185:30" pos:end="185:30">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:77"><expr pos:start="187:5" pos:end="187:76"><call pos:start="187:5" pos:end="187:76"><name pos:start="187:5" pos:end="187:24">MATCH_PER_STREAM_OPT</name><argument_list pos:start="187:25" pos:end="187:76">(<argument pos:start="187:26" pos:end="187:41"><expr pos:start="187:26" pos:end="187:41"><name pos:start="187:26" pos:end="187:41">copy_prior_start</name></expr></argument>, <argument pos:start="187:44" pos:end="187:44"><expr pos:start="187:44" pos:end="187:44"><name pos:start="187:44" pos:end="187:44">i</name></expr></argument>, <argument pos:start="187:47" pos:end="187:67"><expr pos:start="187:47" pos:end="187:67"><name pos:start="187:47" pos:end="187:67"><name pos:start="187:47" pos:end="187:49">ost</name><operator pos:start="187:50" pos:end="187:51">-&gt;</operator><name pos:start="187:52" pos:end="187:67">copy_prior_start</name></name></expr></argument>, <argument pos:start="187:70" pos:end="187:71"><expr pos:start="187:70" pos:end="187:71"><name pos:start="187:70" pos:end="187:71">oc</name></expr></argument> ,<argument pos:start="187:74" pos:end="187:75"><expr pos:start="187:74" pos:end="187:75"><name pos:start="187:74" pos:end="187:75">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:62"><expr pos:start="191:5" pos:end="191:61"><call pos:start="191:5" pos:end="191:61"><name pos:start="191:5" pos:end="191:24">MATCH_PER_STREAM_OPT</name><argument_list pos:start="191:25" pos:end="191:61">(<argument pos:start="191:26" pos:end="191:42"><expr pos:start="191:26" pos:end="191:42"><name pos:start="191:26" pos:end="191:42">bitstream_filters</name></expr></argument>, <argument pos:start="191:45" pos:end="191:47"><expr pos:start="191:45" pos:end="191:47"><name pos:start="191:45" pos:end="191:47">str</name></expr></argument>, <argument pos:start="191:50" pos:end="191:52"><expr pos:start="191:50" pos:end="191:52"><name pos:start="191:50" pos:end="191:52">bsf</name></expr></argument>, <argument pos:start="191:55" pos:end="191:56"><expr pos:start="191:55" pos:end="191:56"><name pos:start="191:55" pos:end="191:56">oc</name></expr></argument>, <argument pos:start="191:59" pos:end="191:60"><expr pos:start="191:59" pos:end="191:60"><name pos:start="191:59" pos:end="191:60">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="193:5" pos:end="237:5">while <condition pos:start="193:11" pos:end="193:15">(<expr pos:start="193:12" pos:end="193:14"><name pos:start="193:12" pos:end="193:14">bsf</name></expr>)</condition> <block pos:start="193:17" pos:end="237:5">{<block_content pos:start="195:9" pos:end="235:25">

        <decl_stmt pos:start="195:9" pos:end="195:25"><decl pos:start="195:9" pos:end="195:24"><type pos:start="195:9" pos:end="195:14"><name pos:start="195:9" pos:end="195:12">char</name> <modifier pos:start="195:14" pos:end="195:14">*</modifier></type><name pos:start="195:15" pos:end="195:17">arg</name> <init pos:start="195:19" pos:end="195:24">= <expr pos:start="195:21" pos:end="195:24"><name pos:start="195:21" pos:end="195:24">NULL</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="197:9" pos:end="199:24"><if pos:start="197:9" pos:end="199:24">if <condition pos:start="197:12" pos:end="197:36">(<expr pos:start="197:13" pos:end="197:35"><name pos:start="197:13" pos:end="197:16">next</name> <operator pos:start="197:18" pos:end="197:18">=</operator> <call pos:start="197:20" pos:end="197:35"><name pos:start="197:20" pos:end="197:25">strchr</name><argument_list pos:start="197:26" pos:end="197:35">(<argument pos:start="197:27" pos:end="197:29"><expr pos:start="197:27" pos:end="197:29"><name pos:start="197:27" pos:end="197:29">bsf</name></expr></argument>, <argument pos:start="197:32" pos:end="197:34"><expr pos:start="197:32" pos:end="197:34"><literal type="char" pos:start="197:32" pos:end="197:34">','</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="199:13" pos:end="199:24"><block_content pos:start="199:13" pos:end="199:24">

            <expr_stmt pos:start="199:13" pos:end="199:24"><expr pos:start="199:13" pos:end="199:23"><operator pos:start="199:13" pos:end="199:13">*</operator><name pos:start="199:14" pos:end="199:17">next</name><operator pos:start="199:18" pos:end="199:19">++</operator> <operator pos:start="199:21" pos:end="199:21">=</operator> <literal type="number" pos:start="199:23" pos:end="199:23">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="201:9" pos:end="203:23"><if pos:start="201:9" pos:end="203:23">if <condition pos:start="201:12" pos:end="201:35">(<expr pos:start="201:13" pos:end="201:34"><name pos:start="201:13" pos:end="201:15">arg</name> <operator pos:start="201:17" pos:end="201:17">=</operator> <call pos:start="201:19" pos:end="201:34"><name pos:start="201:19" pos:end="201:24">strchr</name><argument_list pos:start="201:25" pos:end="201:34">(<argument pos:start="201:26" pos:end="201:28"><expr pos:start="201:26" pos:end="201:28"><name pos:start="201:26" pos:end="201:28">bsf</name></expr></argument>, <argument pos:start="201:31" pos:end="201:33"><expr pos:start="201:31" pos:end="201:33"><literal type="char" pos:start="201:31" pos:end="201:33">'='</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="203:13" pos:end="203:23"><block_content pos:start="203:13" pos:end="203:23">

            <expr_stmt pos:start="203:13" pos:end="203:23"><expr pos:start="203:13" pos:end="203:22"><operator pos:start="203:13" pos:end="203:13">*</operator><name pos:start="203:14" pos:end="203:16">arg</name><operator pos:start="203:17" pos:end="203:18">++</operator> <operator pos:start="203:20" pos:end="203:20">=</operator> <literal type="number" pos:start="203:22" pos:end="203:22">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="205:9" pos:end="211:9"><if pos:start="205:9" pos:end="211:9">if <condition pos:start="205:12" pos:end="205:52">(<expr pos:start="205:13" pos:end="205:51"><operator pos:start="205:13" pos:end="205:13">!</operator><operator pos:start="205:14" pos:end="205:14">(</operator><name pos:start="205:15" pos:end="205:18">bsfc</name> <operator pos:start="205:20" pos:end="205:20">=</operator> <call pos:start="205:22" pos:end="205:50"><name pos:start="205:22" pos:end="205:45">av_bitstream_filter_init</name><argument_list pos:start="205:46" pos:end="205:50">(<argument pos:start="205:47" pos:end="205:49"><expr pos:start="205:47" pos:end="205:49"><name pos:start="205:47" pos:end="205:49">bsf</name></expr></argument>)</argument_list></call><operator pos:start="205:51" pos:end="205:51">)</operator></expr>)</condition> <block pos:start="205:54" pos:end="211:9">{<block_content pos:start="207:13" pos:end="209:28">

            <expr_stmt pos:start="207:13" pos:end="207:77"><expr pos:start="207:13" pos:end="207:76"><call pos:start="207:13" pos:end="207:76"><name pos:start="207:13" pos:end="207:18">av_log</name><argument_list pos:start="207:19" pos:end="207:76">(<argument pos:start="207:20" pos:end="207:23"><expr pos:start="207:20" pos:end="207:23"><name pos:start="207:20" pos:end="207:23">NULL</name></expr></argument>, <argument pos:start="207:26" pos:end="207:37"><expr pos:start="207:26" pos:end="207:37"><name pos:start="207:26" pos:end="207:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="207:40" pos:end="207:70"><expr pos:start="207:40" pos:end="207:70"><literal type="string" pos:start="207:40" pos:end="207:70">"Unknown bitstream filter %s\n"</literal></expr></argument>, <argument pos:start="207:73" pos:end="207:75"><expr pos:start="207:73" pos:end="207:75"><name pos:start="207:73" pos:end="207:75">bsf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:28"><expr pos:start="209:13" pos:end="209:27"><call pos:start="209:13" pos:end="209:27"><name pos:start="209:13" pos:end="209:24">exit_program</name><argument_list pos:start="209:25" pos:end="209:27">(<argument pos:start="209:26" pos:end="209:26"><expr pos:start="209:26" pos:end="209:26"><literal type="number" pos:start="209:26" pos:end="209:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="213:9" pos:end="219:42"><if pos:start="213:9" pos:end="215:35">if <condition pos:start="213:12" pos:end="213:22">(<expr pos:start="213:13" pos:end="213:21"><name pos:start="213:13" pos:end="213:21">bsfc_prev</name></expr>)</condition><block type="pseudo" pos:start="215:13" pos:end="215:35"><block_content pos:start="215:13" pos:end="215:35">

            <expr_stmt pos:start="215:13" pos:end="215:35"><expr pos:start="215:13" pos:end="215:34"><name pos:start="215:13" pos:end="215:27"><name pos:start="215:13" pos:end="215:21">bsfc_prev</name><operator pos:start="215:22" pos:end="215:23">-&gt;</operator><name pos:start="215:24" pos:end="215:27">next</name></name> <operator pos:start="215:29" pos:end="215:29">=</operator> <name pos:start="215:31" pos:end="215:34">bsfc</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="217:9" pos:end="219:42">else<block type="pseudo" pos:start="219:13" pos:end="219:42"><block_content pos:start="219:13" pos:end="219:42">

            <expr_stmt pos:start="219:13" pos:end="219:42"><expr pos:start="219:13" pos:end="219:41"><name pos:start="219:13" pos:end="219:34"><name pos:start="219:13" pos:end="219:15">ost</name><operator pos:start="219:16" pos:end="219:17">-&gt;</operator><name pos:start="219:18" pos:end="219:34">bitstream_filters</name></name> <operator pos:start="219:36" pos:end="219:36">=</operator> <name pos:start="219:38" pos:end="219:41">bsfc</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="221:9" pos:end="229:13"><if pos:start="221:9" pos:end="229:13">if <condition pos:start="221:12" pos:end="221:16">(<expr pos:start="221:13" pos:end="221:15"><name pos:start="221:13" pos:end="221:15">arg</name></expr>)</condition><block type="pseudo" pos:start="223:13" pos:end="229:13"><block_content pos:start="223:13" pos:end="229:13">

            <if_stmt pos:start="223:13" pos:end="229:13"><if pos:start="223:13" pos:end="229:13">if <condition pos:start="223:16" pos:end="223:47">(<expr pos:start="223:17" pos:end="223:46"><operator pos:start="223:17" pos:end="223:17">!</operator><operator pos:start="223:18" pos:end="223:18">(</operator><name pos:start="223:19" pos:end="223:28"><name pos:start="223:19" pos:end="223:22">bsfc</name><operator pos:start="223:23" pos:end="223:24">-&gt;</operator><name pos:start="223:25" pos:end="223:28">args</name></name> <operator pos:start="223:30" pos:end="223:30">=</operator> <call pos:start="223:32" pos:end="223:45"><name pos:start="223:32" pos:end="223:40">av_strdup</name><argument_list pos:start="223:41" pos:end="223:45">(<argument pos:start="223:42" pos:end="223:44"><expr pos:start="223:42" pos:end="223:44"><name pos:start="223:42" pos:end="223:44">arg</name></expr></argument>)</argument_list></call><operator pos:start="223:46" pos:end="223:46">)</operator></expr>)</condition> <block pos:start="223:49" pos:end="229:13">{<block_content pos:start="225:17" pos:end="227:32">

                <expr_stmt pos:start="225:17" pos:end="225:90"><expr pos:start="225:17" pos:end="225:89"><call pos:start="225:17" pos:end="225:89"><name pos:start="225:17" pos:end="225:22">av_log</name><argument_list pos:start="225:23" pos:end="225:89">(<argument pos:start="225:24" pos:end="225:27"><expr pos:start="225:24" pos:end="225:27"><name pos:start="225:24" pos:end="225:27">NULL</name></expr></argument>, <argument pos:start="225:30" pos:end="225:41"><expr pos:start="225:30" pos:end="225:41"><name pos:start="225:30" pos:end="225:41">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="225:44" pos:end="225:88"><expr pos:start="225:44" pos:end="225:88"><literal type="string" pos:start="225:44" pos:end="225:88">"Bitstream filter memory allocation failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="227:17" pos:end="227:32"><expr pos:start="227:17" pos:end="227:31"><call pos:start="227:17" pos:end="227:31"><name pos:start="227:17" pos:end="227:28">exit_program</name><argument_list pos:start="227:29" pos:end="227:31">(<argument pos:start="227:30" pos:end="227:30"><expr pos:start="227:30" pos:end="227:30"><literal type="number" pos:start="227:30" pos:end="227:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="233:9" pos:end="233:25"><expr pos:start="233:9" pos:end="233:24"><name pos:start="233:9" pos:end="233:17">bsfc_prev</name> <operator pos:start="233:19" pos:end="233:19">=</operator> <name pos:start="233:21" pos:end="233:24">bsfc</name></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:25"><expr pos:start="235:9" pos:end="235:24"><name pos:start="235:9" pos:end="235:11">bsf</name>       <operator pos:start="235:19" pos:end="235:19">=</operator> <name pos:start="235:21" pos:end="235:24">next</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="241:5" pos:end="241:61"><expr pos:start="241:5" pos:end="241:60"><call pos:start="241:5" pos:end="241:60"><name pos:start="241:5" pos:end="241:24">MATCH_PER_STREAM_OPT</name><argument_list pos:start="241:25" pos:end="241:60">(<argument pos:start="241:26" pos:end="241:35"><expr pos:start="241:26" pos:end="241:35"><name pos:start="241:26" pos:end="241:35">codec_tags</name></expr></argument>, <argument pos:start="241:38" pos:end="241:40"><expr pos:start="241:38" pos:end="241:40"><name pos:start="241:38" pos:end="241:40">str</name></expr></argument>, <argument pos:start="241:43" pos:end="241:51"><expr pos:start="241:43" pos:end="241:51"><name pos:start="241:43" pos:end="241:51">codec_tag</name></expr></argument>, <argument pos:start="241:54" pos:end="241:55"><expr pos:start="241:54" pos:end="241:55"><name pos:start="241:54" pos:end="241:55">oc</name></expr></argument>, <argument pos:start="241:58" pos:end="241:59"><expr pos:start="241:58" pos:end="241:59"><name pos:start="241:58" pos:end="241:59">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="243:5" pos:end="255:5"><if pos:start="243:5" pos:end="255:5">if <condition pos:start="243:8" pos:end="243:18">(<expr pos:start="243:9" pos:end="243:17"><name pos:start="243:9" pos:end="243:17">codec_tag</name></expr>)</condition> <block pos:start="243:20" pos:end="255:5">{<block_content pos:start="245:9" pos:end="253:38">

        <decl_stmt pos:start="245:9" pos:end="245:51"><decl pos:start="245:9" pos:end="245:50"><type pos:start="245:9" pos:end="245:16"><name pos:start="245:9" pos:end="245:16">uint32_t</name></type> <name pos:start="245:18" pos:end="245:20">tag</name> <init pos:start="245:22" pos:end="245:50">= <expr pos:start="245:24" pos:end="245:50"><call pos:start="245:24" pos:end="245:50"><name pos:start="245:24" pos:end="245:29">strtol</name><argument_list pos:start="245:30" pos:end="245:50">(<argument pos:start="245:31" pos:end="245:39"><expr pos:start="245:31" pos:end="245:39"><name pos:start="245:31" pos:end="245:39">codec_tag</name></expr></argument>, <argument pos:start="245:42" pos:end="245:46"><expr pos:start="245:42" pos:end="245:46"><operator pos:start="245:42" pos:end="245:42">&amp;</operator><name pos:start="245:43" pos:end="245:46">next</name></expr></argument>, <argument pos:start="245:49" pos:end="245:49"><expr pos:start="245:49" pos:end="245:49"><literal type="number" pos:start="245:49" pos:end="245:49">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="247:9" pos:end="249:37"><if pos:start="247:9" pos:end="249:37">if <condition pos:start="247:12" pos:end="247:18">(<expr pos:start="247:13" pos:end="247:17"><operator pos:start="247:13" pos:end="247:13">*</operator><name pos:start="247:14" pos:end="247:17">next</name></expr>)</condition><block type="pseudo" pos:start="249:13" pos:end="249:37"><block_content pos:start="249:13" pos:end="249:37">

            <expr_stmt pos:start="249:13" pos:end="249:37"><expr pos:start="249:13" pos:end="249:36"><name pos:start="249:13" pos:end="249:15">tag</name> <operator pos:start="249:17" pos:end="249:17">=</operator> <call pos:start="249:19" pos:end="249:36"><name pos:start="249:19" pos:end="249:25">AV_RL32</name><argument_list pos:start="249:26" pos:end="249:36">(<argument pos:start="249:27" pos:end="249:35"><expr pos:start="249:27" pos:end="249:35"><name pos:start="249:27" pos:end="249:35">codec_tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="251:9" pos:end="253:38"><expr pos:start="251:9" pos:end="253:37"><name pos:start="251:9" pos:end="251:36"><name pos:start="251:9" pos:end="251:11">ost</name><operator pos:start="251:12" pos:end="251:13">-&gt;</operator><name pos:start="251:14" pos:end="251:15">st</name><operator pos:start="251:16" pos:end="251:17">-&gt;</operator><name pos:start="251:18" pos:end="251:25">codecpar</name><operator pos:start="251:26" pos:end="251:27">-&gt;</operator><name pos:start="251:28" pos:end="251:36">codec_tag</name></name> <operator pos:start="251:38" pos:end="251:38">=</operator>

        <name pos:start="253:9" pos:end="253:31"><name pos:start="253:9" pos:end="253:11">ost</name><operator pos:start="253:12" pos:end="253:13">-&gt;</operator><name pos:start="253:14" pos:end="253:20">enc_ctx</name><operator pos:start="253:21" pos:end="253:22">-&gt;</operator><name pos:start="253:23" pos:end="253:31">codec_tag</name></name> <operator pos:start="253:33" pos:end="253:33">=</operator> <name pos:start="253:35" pos:end="253:37">tag</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="259:5" pos:end="259:54"><expr pos:start="259:5" pos:end="259:53"><call pos:start="259:5" pos:end="259:53"><name pos:start="259:5" pos:end="259:24">MATCH_PER_STREAM_OPT</name><argument_list pos:start="259:25" pos:end="259:53">(<argument pos:start="259:26" pos:end="259:31"><expr pos:start="259:26" pos:end="259:31"><name pos:start="259:26" pos:end="259:31">qscale</name></expr></argument>, <argument pos:start="259:34" pos:end="259:36"><expr pos:start="259:34" pos:end="259:36"><name pos:start="259:34" pos:end="259:36">dbl</name></expr></argument>, <argument pos:start="259:39" pos:end="259:44"><expr pos:start="259:39" pos:end="259:44"><name pos:start="259:39" pos:end="259:44">qscale</name></expr></argument>, <argument pos:start="259:47" pos:end="259:48"><expr pos:start="259:47" pos:end="259:48"><name pos:start="259:47" pos:end="259:48">oc</name></expr></argument>, <argument pos:start="259:51" pos:end="259:52"><expr pos:start="259:51" pos:end="259:52"><name pos:start="259:51" pos:end="259:52">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="261:5" pos:end="267:5"><if pos:start="261:5" pos:end="267:5">if <condition pos:start="261:8" pos:end="261:20">(<expr pos:start="261:9" pos:end="261:19"><name pos:start="261:9" pos:end="261:14">qscale</name> <operator pos:start="261:16" pos:end="261:17">&gt;=</operator> <literal type="number" pos:start="261:19" pos:end="261:19">0</literal></expr>)</condition> <block pos:start="261:22" pos:end="267:5">{<block_content pos:start="263:9" pos:end="265:61">

        <expr_stmt pos:start="263:9" pos:end="263:52"><expr pos:start="263:9" pos:end="263:51"><name pos:start="263:9" pos:end="263:27"><name pos:start="263:9" pos:end="263:11">ost</name><operator pos:start="263:12" pos:end="263:13">-&gt;</operator><name pos:start="263:14" pos:end="263:20">enc_ctx</name><operator pos:start="263:21" pos:end="263:22">-&gt;</operator><name pos:start="263:23" pos:end="263:27">flags</name></name> <operator pos:start="263:29" pos:end="263:30">|=</operator> <name pos:start="263:32" pos:end="263:51">AV_CODEC_FLAG_QSCALE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="265:9" pos:end="265:61"><expr pos:start="265:9" pos:end="265:60"><name pos:start="265:9" pos:end="265:36"><name pos:start="265:9" pos:end="265:11">ost</name><operator pos:start="265:12" pos:end="265:13">-&gt;</operator><name pos:start="265:14" pos:end="265:20">enc_ctx</name><operator pos:start="265:21" pos:end="265:22">-&gt;</operator><name pos:start="265:23" pos:end="265:36">global_quality</name></name> <operator pos:start="265:38" pos:end="265:38">=</operator> <name pos:start="265:40" pos:end="265:51">FF_QP2LAMBDA</name> <operator pos:start="265:53" pos:end="265:53">*</operator> <name pos:start="265:55" pos:end="265:60">qscale</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="271:5" pos:end="271:69"><expr pos:start="271:5" pos:end="271:68"><call pos:start="271:5" pos:end="271:68"><name pos:start="271:5" pos:end="271:24">MATCH_PER_STREAM_OPT</name><argument_list pos:start="271:25" pos:end="271:68">(<argument pos:start="271:26" pos:end="271:36"><expr pos:start="271:26" pos:end="271:36"><name pos:start="271:26" pos:end="271:36">disposition</name></expr></argument>, <argument pos:start="271:39" pos:end="271:41"><expr pos:start="271:39" pos:end="271:41"><name pos:start="271:39" pos:end="271:41">str</name></expr></argument>, <argument pos:start="271:44" pos:end="271:59"><expr pos:start="271:44" pos:end="271:59"><name pos:start="271:44" pos:end="271:59"><name pos:start="271:44" pos:end="271:46">ost</name><operator pos:start="271:47" pos:end="271:48">-&gt;</operator><name pos:start="271:49" pos:end="271:59">disposition</name></name></expr></argument>, <argument pos:start="271:62" pos:end="271:63"><expr pos:start="271:62" pos:end="271:63"><name pos:start="271:62" pos:end="271:63">oc</name></expr></argument>, <argument pos:start="271:66" pos:end="271:67"><expr pos:start="271:66" pos:end="271:67"><name pos:start="271:66" pos:end="271:67">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="273:5" pos:end="273:51"><expr pos:start="273:5" pos:end="273:50"><name pos:start="273:5" pos:end="273:20"><name pos:start="273:5" pos:end="273:7">ost</name><operator pos:start="273:8" pos:end="273:9">-&gt;</operator><name pos:start="273:10" pos:end="273:20">disposition</name></name> <operator pos:start="273:22" pos:end="273:22">=</operator> <call pos:start="273:24" pos:end="273:50"><name pos:start="273:24" pos:end="273:32">av_strdup</name><argument_list pos:start="273:33" pos:end="273:50">(<argument pos:start="273:34" pos:end="273:49"><expr pos:start="273:34" pos:end="273:49"><name pos:start="273:34" pos:end="273:49"><name pos:start="273:34" pos:end="273:36">ost</name><operator pos:start="273:37" pos:end="273:38">-&gt;</operator><name pos:start="273:39" pos:end="273:49">disposition</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="277:5" pos:end="279:59"><if pos:start="277:5" pos:end="279:59">if <condition pos:start="277:8" pos:end="277:48">(<expr pos:start="277:9" pos:end="277:47"><name pos:start="277:9" pos:end="277:26"><name pos:start="277:9" pos:end="277:10">oc</name><operator pos:start="277:11" pos:end="277:12">-&gt;</operator><name pos:start="277:13" pos:end="277:19">oformat</name><operator pos:start="277:20" pos:end="277:21">-&gt;</operator><name pos:start="277:22" pos:end="277:26">flags</name></name> <operator pos:start="277:28" pos:end="277:28">&amp;</operator> <name pos:start="277:30" pos:end="277:47">AVFMT_GLOBALHEADER</name></expr>)</condition><block type="pseudo" pos:start="279:9" pos:end="279:59"><block_content pos:start="279:9" pos:end="279:59">

        <expr_stmt pos:start="279:9" pos:end="279:59"><expr pos:start="279:9" pos:end="279:58"><name pos:start="279:9" pos:end="279:27"><name pos:start="279:9" pos:end="279:11">ost</name><operator pos:start="279:12" pos:end="279:13">-&gt;</operator><name pos:start="279:14" pos:end="279:20">enc_ctx</name><operator pos:start="279:21" pos:end="279:22">-&gt;</operator><name pos:start="279:23" pos:end="279:27">flags</name></name> <operator pos:start="279:29" pos:end="279:30">|=</operator> <name pos:start="279:32" pos:end="279:58">AV_CODEC_FLAG_GLOBAL_HEADER</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="283:5" pos:end="283:52"><expr pos:start="283:5" pos:end="283:51"><call pos:start="283:5" pos:end="283:51"><name pos:start="283:5" pos:end="283:16">av_dict_copy</name><argument_list pos:start="283:17" pos:end="283:51">(<argument pos:start="283:18" pos:end="283:31"><expr pos:start="283:18" pos:end="283:31"><operator pos:start="283:18" pos:end="283:18">&amp;</operator><name pos:start="283:19" pos:end="283:31"><name pos:start="283:19" pos:end="283:21">ost</name><operator pos:start="283:22" pos:end="283:23">-&gt;</operator><name pos:start="283:24" pos:end="283:31">sws_dict</name></name></expr></argument>, <argument pos:start="283:34" pos:end="283:47"><expr pos:start="283:34" pos:end="283:47"><name pos:start="283:34" pos:end="283:47"><name pos:start="283:34" pos:end="283:34">o</name><operator pos:start="283:35" pos:end="283:36">-&gt;</operator><name pos:start="283:37" pos:end="283:37">g</name><operator pos:start="283:38" pos:end="283:39">-&gt;</operator><name pos:start="283:40" pos:end="283:47">sws_dict</name></name></expr></argument>, <argument pos:start="283:50" pos:end="283:50"><expr pos:start="283:50" pos:end="283:50"><literal type="number" pos:start="283:50" pos:end="283:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="287:5" pos:end="287:52"><expr pos:start="287:5" pos:end="287:51"><call pos:start="287:5" pos:end="287:51"><name pos:start="287:5" pos:end="287:16">av_dict_copy</name><argument_list pos:start="287:17" pos:end="287:51">(<argument pos:start="287:18" pos:end="287:31"><expr pos:start="287:18" pos:end="287:31"><operator pos:start="287:18" pos:end="287:18">&amp;</operator><name pos:start="287:19" pos:end="287:31"><name pos:start="287:19" pos:end="287:21">ost</name><operator pos:start="287:22" pos:end="287:23">-&gt;</operator><name pos:start="287:24" pos:end="287:31">swr_opts</name></name></expr></argument>, <argument pos:start="287:34" pos:end="287:47"><expr pos:start="287:34" pos:end="287:47"><name pos:start="287:34" pos:end="287:47"><name pos:start="287:34" pos:end="287:34">o</name><operator pos:start="287:35" pos:end="287:36">-&gt;</operator><name pos:start="287:37" pos:end="287:37">g</name><operator pos:start="287:38" pos:end="287:39">-&gt;</operator><name pos:start="287:40" pos:end="287:47">swr_opts</name></name></expr></argument>, <argument pos:start="287:50" pos:end="287:50"><expr pos:start="287:50" pos:end="287:50"><literal type="number" pos:start="287:50" pos:end="287:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="289:5" pos:end="291:67"><if pos:start="289:5" pos:end="291:67">if <condition pos:start="289:8" pos:end="289:69">(<expr pos:start="289:9" pos:end="289:68"><name pos:start="289:9" pos:end="289:16"><name pos:start="289:9" pos:end="289:11">ost</name><operator pos:start="289:12" pos:end="289:13">-&gt;</operator><name pos:start="289:14" pos:end="289:16">enc</name></name> <operator pos:start="289:18" pos:end="289:19">&amp;&amp;</operator> <call pos:start="289:21" pos:end="289:62"><name pos:start="289:21" pos:end="289:48">av_get_exact_bits_per_sample</name><argument_list pos:start="289:49" pos:end="289:62">(<argument pos:start="289:50" pos:end="289:61"><expr pos:start="289:50" pos:end="289:61"><name pos:start="289:50" pos:end="289:61"><name pos:start="289:50" pos:end="289:52">ost</name><operator pos:start="289:53" pos:end="289:54">-&gt;</operator><name pos:start="289:55" pos:end="289:57">enc</name><operator pos:start="289:58" pos:end="289:59">-&gt;</operator><name pos:start="289:60" pos:end="289:61">id</name></name></expr></argument>)</argument_list></call> <operator pos:start="289:64" pos:end="289:65">==</operator> <literal type="number" pos:start="289:67" pos:end="289:68">24</literal></expr>)</condition><block type="pseudo" pos:start="291:9" pos:end="291:67"><block_content pos:start="291:9" pos:end="291:67">

        <expr_stmt pos:start="291:9" pos:end="291:67"><expr pos:start="291:9" pos:end="291:66"><call pos:start="291:9" pos:end="291:66"><name pos:start="291:9" pos:end="291:19">av_dict_set</name><argument_list pos:start="291:20" pos:end="291:66">(<argument pos:start="291:21" pos:end="291:34"><expr pos:start="291:21" pos:end="291:34"><operator pos:start="291:21" pos:end="291:21">&amp;</operator><name pos:start="291:22" pos:end="291:34"><name pos:start="291:22" pos:end="291:24">ost</name><operator pos:start="291:25" pos:end="291:26">-&gt;</operator><name pos:start="291:27" pos:end="291:34">swr_opts</name></name></expr></argument>, <argument pos:start="291:37" pos:end="291:56"><expr pos:start="291:37" pos:end="291:56"><literal type="string" pos:start="291:37" pos:end="291:56">"output_sample_bits"</literal></expr></argument>, <argument pos:start="291:59" pos:end="291:62"><expr pos:start="291:59" pos:end="291:62"><literal type="string" pos:start="291:59" pos:end="291:62">"24"</literal></expr></argument>, <argument pos:start="291:65" pos:end="291:65"><expr pos:start="291:65" pos:end="291:65"><literal type="number" pos:start="291:65" pos:end="291:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="295:5" pos:end="295:62"><expr pos:start="295:5" pos:end="295:61"><call pos:start="295:5" pos:end="295:61"><name pos:start="295:5" pos:end="295:16">av_dict_copy</name><argument_list pos:start="295:17" pos:end="295:61">(<argument pos:start="295:18" pos:end="295:36"><expr pos:start="295:18" pos:end="295:36"><operator pos:start="295:18" pos:end="295:18">&amp;</operator><name pos:start="295:19" pos:end="295:36"><name pos:start="295:19" pos:end="295:21">ost</name><operator pos:start="295:22" pos:end="295:23">-&gt;</operator><name pos:start="295:24" pos:end="295:36">resample_opts</name></name></expr></argument>, <argument pos:start="295:39" pos:end="295:57"><expr pos:start="295:39" pos:end="295:57"><name pos:start="295:39" pos:end="295:57"><name pos:start="295:39" pos:end="295:39">o</name><operator pos:start="295:40" pos:end="295:41">-&gt;</operator><name pos:start="295:42" pos:end="295:42">g</name><operator pos:start="295:43" pos:end="295:44">-&gt;</operator><name pos:start="295:45" pos:end="295:57">resample_opts</name></name></expr></argument>, <argument pos:start="295:60" pos:end="295:60"><expr pos:start="295:60" pos:end="295:60"><literal type="number" pos:start="295:60" pos:end="295:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="299:5" pos:end="299:37"><expr pos:start="299:5" pos:end="299:36"><name pos:start="299:5" pos:end="299:21"><name pos:start="299:5" pos:end="299:7">ost</name><operator pos:start="299:8" pos:end="299:9">-&gt;</operator><name pos:start="299:10" pos:end="299:21">source_index</name></name> <operator pos:start="299:23" pos:end="299:23">=</operator> <name pos:start="299:25" pos:end="299:36">source_index</name></expr>;</expr_stmt>

    <if_stmt pos:start="301:5" pos:end="309:5"><if pos:start="301:5" pos:end="309:5">if <condition pos:start="301:8" pos:end="301:26">(<expr pos:start="301:9" pos:end="301:25"><name pos:start="301:9" pos:end="301:20">source_index</name> <operator pos:start="301:22" pos:end="301:23">&gt;=</operator> <literal type="number" pos:start="301:25" pos:end="301:25">0</literal></expr>)</condition> <block pos:start="301:28" pos:end="309:5">{<block_content pos:start="303:9" pos:end="307:97">

        <expr_stmt pos:start="303:9" pos:end="303:52"><expr pos:start="303:9" pos:end="303:51"><name pos:start="303:9" pos:end="303:21"><name pos:start="303:9" pos:end="303:11">ost</name><operator pos:start="303:12" pos:end="303:13">-&gt;</operator><name pos:start="303:14" pos:end="303:21">sync_ist</name></name> <operator pos:start="303:23" pos:end="303:23">=</operator> <name pos:start="303:25" pos:end="303:51"><name pos:start="303:25" pos:end="303:37">input_streams</name><index pos:start="303:38" pos:end="303:51">[<expr pos:start="303:39" pos:end="303:50"><name pos:start="303:39" pos:end="303:50">source_index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="305:9" pos:end="305:49"><expr pos:start="305:9" pos:end="305:48"><name pos:start="305:9" pos:end="305:35"><name pos:start="305:9" pos:end="305:21">input_streams</name><index pos:start="305:22" pos:end="305:35">[<expr pos:start="305:23" pos:end="305:34"><name pos:start="305:23" pos:end="305:34">source_index</name></expr>]</index></name><operator pos:start="305:36" pos:end="305:37">-&gt;</operator><name pos:start="305:38" pos:end="305:44">discard</name> <operator pos:start="305:46" pos:end="305:46">=</operator> <literal type="number" pos:start="305:48" pos:end="305:48">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="307:9" pos:end="307:97"><expr pos:start="307:9" pos:end="307:96"><name pos:start="307:9" pos:end="307:35"><name pos:start="307:9" pos:end="307:21">input_streams</name><index pos:start="307:22" pos:end="307:35">[<expr pos:start="307:23" pos:end="307:34"><name pos:start="307:23" pos:end="307:34">source_index</name></expr>]</index></name><operator pos:start="307:36" pos:end="307:37">-&gt;</operator><name pos:start="307:38" pos:end="307:48"><name pos:start="307:38" pos:end="307:39">st</name><operator pos:start="307:40" pos:end="307:41">-&gt;</operator><name pos:start="307:42" pos:end="307:48">discard</name></name> <operator pos:start="307:50" pos:end="307:50">=</operator> <name pos:start="307:52" pos:end="307:78"><name pos:start="307:52" pos:end="307:64">input_streams</name><index pos:start="307:65" pos:end="307:78">[<expr pos:start="307:66" pos:end="307:77"><name pos:start="307:66" pos:end="307:77">source_index</name></expr>]</index></name><operator pos:start="307:79" pos:end="307:80">-&gt;</operator><name pos:start="307:81" pos:end="307:96">user_set_discard</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="311:5" pos:end="311:39"><expr pos:start="311:5" pos:end="311:38"><name pos:start="311:5" pos:end="311:21"><name pos:start="311:5" pos:end="311:7">ost</name><operator pos:start="311:8" pos:end="311:9">-&gt;</operator><name pos:start="311:10" pos:end="311:21">last_mux_dts</name></name> <operator pos:start="311:23" pos:end="311:23">=</operator> <name pos:start="311:25" pos:end="311:38">AV_NOPTS_VALUE</name></expr>;</expr_stmt>



    <return pos:start="315:5" pos:end="315:15">return <expr pos:start="315:12" pos:end="315:14"><name pos:start="315:12" pos:end="315:14">ost</name></expr>;</return>

</block_content>}</block></function>
</unit>
