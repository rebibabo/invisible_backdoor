<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5744.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">ssize_t</name></type> <name pos:start="1:9" pos:end="1:22">qsb_get_buffer</name><parameter_list pos:start="1:23" pos:end="3:53">(<parameter pos:start="1:24" pos:end="1:49"><decl pos:start="1:24" pos:end="1:49"><type pos:start="1:24" pos:end="1:49"><specifier pos:start="1:24" pos:end="1:28">const</specifier> <name pos:start="1:30" pos:end="1:44">QEMUSizedBuffer</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">qsb</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:62"><decl pos:start="1:52" pos:end="1:62"><type pos:start="1:52" pos:end="1:62"><name pos:start="1:52" pos:end="1:56">off_t</name></type> <name pos:start="1:58" pos:end="1:62">start</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:35"><decl pos:start="3:24" pos:end="3:35"><type pos:start="3:24" pos:end="3:35"><name pos:start="3:24" pos:end="3:29">size_t</name></type> <name pos:start="3:31" pos:end="3:35">count</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:52"><decl pos:start="3:38" pos:end="3:52"><type pos:start="3:38" pos:end="3:52"><name pos:start="3:38" pos:end="3:44">uint8_t</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:52">buffer</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="91:1">{<block_content pos:start="7:5" pos:end="89:17">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:24"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:22"><name pos:start="7:11" pos:end="7:16">struct</name> <name pos:start="7:18" pos:end="7:22">iovec</name></name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:27">iov</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:18">to_copy</name></decl>, <decl pos:start="9:21" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:10"/><name pos:start="9:21" pos:end="9:28">all_copy</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">ssize_t</name></type> <name pos:start="11:13" pos:end="11:17">index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:9">off_t</name></type> <name pos:start="13:11" pos:end="13:15">s_off</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:9">off_t</name></type> <name pos:start="15:11" pos:end="15:15">d_off</name> <init pos:start="15:17" pos:end="15:19">= <expr pos:start="15:19" pos:end="15:19"><literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:8">char</name> <modifier pos:start="17:10" pos:end="17:10">*</modifier></type><name pos:start="17:11" pos:end="17:11">s</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:26">(<expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:13">start</name> <operator pos:start="21:15" pos:end="21:15">&gt;</operator> <name pos:start="21:17" pos:end="21:25"><name pos:start="21:17" pos:end="21:19">qsb</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:25">used</name></name></expr>)</condition> <block pos:start="21:28" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:17">

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:33"><expr pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:12">all_copy</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <name pos:start="29:16" pos:end="29:24"><name pos:start="29:16" pos:end="29:18">qsb</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:24">used</name></name> <operator pos:start="29:26" pos:end="29:26">-</operator> <name pos:start="29:28" pos:end="29:32">start</name></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:25">(<expr pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:16">all_copy</name> <operator pos:start="31:18" pos:end="31:18">&gt;</operator> <name pos:start="31:20" pos:end="31:24">count</name></expr>)</condition> <block pos:start="31:27" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:25">

        <expr_stmt pos:start="33:9" pos:end="33:25"><expr pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:16">all_copy</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <name pos:start="33:20" pos:end="33:24">count</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="39:5">else <block pos:start="35:12" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:25">

        <expr_stmt pos:start="37:9" pos:end="37:25"><expr pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:13">count</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <name pos:start="37:17" pos:end="37:24">all_copy</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:46"><expr pos:start="43:5" pos:end="43:45"><name pos:start="43:5" pos:end="43:9">index</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <call pos:start="43:13" pos:end="43:45"><name pos:start="43:13" pos:end="43:25">qsb_get_iovec</name><argument_list pos:start="43:26" pos:end="43:45">(<argument pos:start="43:27" pos:end="43:29"><expr pos:start="43:27" pos:end="43:29"><name pos:start="43:27" pos:end="43:29">qsb</name></expr></argument>, <argument pos:start="43:32" pos:end="43:36"><expr pos:start="43:32" pos:end="43:36"><name pos:start="43:32" pos:end="43:36">start</name></expr></argument>, <argument pos:start="43:39" pos:end="43:44"><expr pos:start="43:39" pos:end="43:44"><operator pos:start="43:39" pos:end="43:39">&amp;</operator><name pos:start="43:40" pos:end="43:44">s_off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:18">(<expr pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:13">index</name> <operator pos:start="45:15" pos:end="45:15">&lt;</operator> <literal type="number" pos:start="45:17" pos:end="45:17">0</literal></expr>)</condition> <block pos:start="45:20" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:17">

        <return pos:start="47:9" pos:end="47:17">return <expr pos:start="47:16" pos:end="47:16"><literal type="number" pos:start="47:16" pos:end="47:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="53:5" pos:end="85:5">while <condition pos:start="53:11" pos:end="53:24">(<expr pos:start="53:12" pos:end="53:23"><name pos:start="53:12" pos:end="53:19">all_copy</name> <operator pos:start="53:21" pos:end="53:21">&gt;</operator> <literal type="number" pos:start="53:23" pos:end="53:23">0</literal></expr>)</condition> <block pos:start="53:26" pos:end="85:5">{<block_content pos:start="55:9" pos:end="83:16">

        <expr_stmt pos:start="55:9" pos:end="55:31"><expr pos:start="55:9" pos:end="55:30"><name pos:start="55:9" pos:end="55:11">iov</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <operator pos:start="55:15" pos:end="55:15">&amp;</operator><name pos:start="55:16" pos:end="55:30"><name pos:start="55:16" pos:end="55:18">qsb</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:23">iov</name><index pos:start="55:24" pos:end="55:30">[<expr pos:start="55:25" pos:end="55:29"><name pos:start="55:25" pos:end="55:29">index</name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:26"><expr pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:9">s</name> <operator pos:start="59:11" pos:end="59:11">=</operator> <name pos:start="59:13" pos:end="59:25"><name pos:start="59:13" pos:end="59:15">iov</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:25">iov_base</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:39"><expr pos:start="63:9" pos:end="63:38"><name pos:start="63:9" pos:end="63:15">to_copy</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <name pos:start="63:19" pos:end="63:30"><name pos:start="63:19" pos:end="63:21">iov</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:30">iov_len</name></name> <operator pos:start="63:32" pos:end="63:32">-</operator> <name pos:start="63:34" pos:end="63:38">s_off</name></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="69:9"><if pos:start="65:9" pos:end="69:9">if <condition pos:start="65:12" pos:end="65:31">(<expr pos:start="65:13" pos:end="65:30"><name pos:start="65:13" pos:end="65:19">to_copy</name> <operator pos:start="65:21" pos:end="65:21">&gt;</operator> <name pos:start="65:23" pos:end="65:30">all_copy</name></expr>)</condition> <block pos:start="65:33" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:31">

            <expr_stmt pos:start="67:13" pos:end="67:31"><expr pos:start="67:13" pos:end="67:30"><name pos:start="67:13" pos:end="67:19">to_copy</name> <operator pos:start="67:21" pos:end="67:21">=</operator> <name pos:start="67:23" pos:end="67:30">all_copy</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:51"><expr pos:start="71:9" pos:end="71:50"><call pos:start="71:9" pos:end="71:50"><name pos:start="71:9" pos:end="71:14">memcpy</name><argument_list pos:start="71:15" pos:end="71:50">(<argument pos:start="71:16" pos:end="71:29"><expr pos:start="71:16" pos:end="71:29"><operator pos:start="71:16" pos:end="71:16">&amp;</operator><name pos:start="71:17" pos:end="71:29"><name pos:start="71:17" pos:end="71:22">buffer</name><index pos:start="71:23" pos:end="71:29">[<expr pos:start="71:24" pos:end="71:28"><name pos:start="71:24" pos:end="71:28">d_off</name></expr>]</index></name></expr></argument>, <argument pos:start="71:32" pos:end="71:40"><expr pos:start="71:32" pos:end="71:40"><operator pos:start="71:32" pos:end="71:32">&amp;</operator><name pos:start="71:33" pos:end="71:40"><name pos:start="71:33" pos:end="71:33">s</name><index pos:start="71:34" pos:end="71:40">[<expr pos:start="71:35" pos:end="71:39"><name pos:start="71:35" pos:end="71:39">s_off</name></expr>]</index></name></expr></argument>, <argument pos:start="71:43" pos:end="71:49"><expr pos:start="71:43" pos:end="71:49"><name pos:start="71:43" pos:end="71:49">to_copy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:25"><expr pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:13">d_off</name> <operator pos:start="75:15" pos:end="75:16">+=</operator> <name pos:start="75:18" pos:end="75:24">to_copy</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:28"><expr pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:16">all_copy</name> <operator pos:start="77:18" pos:end="77:19">-=</operator> <name pos:start="77:21" pos:end="77:27">to_copy</name></expr>;</expr_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:18"><expr pos:start="81:9" pos:end="81:17"><name pos:start="81:9" pos:end="81:13">s_off</name> <operator pos:start="81:15" pos:end="81:15">=</operator> <literal type="number" pos:start="81:17" pos:end="81:17">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:16"><expr pos:start="83:9" pos:end="83:15"><name pos:start="83:9" pos:end="83:13">index</name><operator pos:start="83:14" pos:end="83:15">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="89:5" pos:end="89:17">return <expr pos:start="89:12" pos:end="89:16"><name pos:start="89:12" pos:end="89:16">count</name></expr>;</return>

</block_content>}</block></function>
</unit>
