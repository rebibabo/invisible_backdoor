<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9392.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">scsi_write_complete_noio</name><parameter_list pos:start="1:37" pos:end="1:61">(<parameter pos:start="1:38" pos:end="1:51"><decl pos:start="1:38" pos:end="1:51"><type pos:start="1:38" pos:end="1:51"><name pos:start="1:38" pos:end="1:48">SCSIDiskReq</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">r</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:60"><decl pos:start="1:54" pos:end="1:60"><type pos:start="1:54" pos:end="1:60"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:60">ret</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:28">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:14">n</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:34"><expr pos:start="9:5" pos:end="9:33"><call pos:start="9:5" pos:end="9:33"><name pos:start="9:5" pos:end="9:10">assert</name> <argument_list pos:start="9:12" pos:end="9:33">(<argument pos:start="9:13" pos:end="9:32"><expr pos:start="9:13" pos:end="9:32"><name pos:start="9:13" pos:end="9:24"><name pos:start="9:13" pos:end="9:13">r</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:18">req</name><operator pos:start="9:19" pos:end="9:19">.</operator><name pos:start="9:20" pos:end="9:24">aiocb</name></name> <operator pos:start="9:26" pos:end="9:27">==</operator> <name pos:start="9:29" pos:end="9:32">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:27">(<expr pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:9">r</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:14">req</name><operator pos:start="13:15" pos:end="13:15">.</operator><name pos:start="13:16" pos:end="13:26">io_canceled</name></name></expr>)</condition> <block pos:start="13:29" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:18">

        <expr_stmt pos:start="15:9" pos:end="15:42"><expr pos:start="15:9" pos:end="15:41"><call pos:start="15:9" pos:end="15:41"><name pos:start="15:9" pos:end="15:32">scsi_req_cancel_complete</name><argument_list pos:start="15:33" pos:end="15:41">(<argument pos:start="15:34" pos:end="15:40"><expr pos:start="15:34" pos:end="15:40"><operator pos:start="15:34" pos:end="15:34">&amp;</operator><name pos:start="15:35" pos:end="15:40"><name pos:start="15:35" pos:end="15:35">r</name><operator pos:start="15:36" pos:end="15:37">-&gt;</operator><name pos:start="15:38" pos:end="15:40">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="17:9" pos:end="17:18">goto <name pos:start="17:14" pos:end="17:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:16">(<expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">&lt;</operator> <literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr>)</condition> <block pos:start="23:18" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:9">

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:49">(<expr pos:start="25:13" pos:end="25:48"><call pos:start="25:13" pos:end="25:48"><name pos:start="25:13" pos:end="25:32">scsi_handle_rw_error</name><argument_list pos:start="25:33" pos:end="25:48">(<argument pos:start="25:34" pos:end="25:34"><expr pos:start="25:34" pos:end="25:34"><name pos:start="25:34" pos:end="25:34">r</name></expr></argument>, <argument pos:start="25:37" pos:end="25:40"><expr pos:start="25:37" pos:end="25:40"><operator pos:start="25:37" pos:end="25:37">-</operator><name pos:start="25:38" pos:end="25:40">ret</name></expr></argument>, <argument pos:start="25:43" pos:end="25:47"><expr pos:start="25:43" pos:end="25:47"><name pos:start="25:43" pos:end="25:47">false</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:51" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:22">

            <goto pos:start="27:13" pos:end="27:22">goto <name pos:start="27:18" pos:end="27:21">done</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:5">n</name> <operator pos:start="35:7" pos:end="35:7">=</operator> <name pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:9">r</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:15">qiov</name><operator pos:start="35:16" pos:end="35:16">.</operator><name pos:start="35:17" pos:end="35:20">size</name></name> <operator pos:start="35:22" pos:end="35:22">/</operator> <literal type="number" pos:start="35:24" pos:end="35:26">512</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:19"><expr pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:5">r</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:13">sector</name></name> <operator pos:start="37:15" pos:end="37:16">+=</operator> <name pos:start="37:18" pos:end="37:18">n</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:25"><expr pos:start="39:5" pos:end="39:24"><name pos:start="39:5" pos:end="39:19"><name pos:start="39:5" pos:end="39:5">r</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:19">sector_count</name></name> <operator pos:start="39:21" pos:end="39:22">-=</operator> <name pos:start="39:24" pos:end="39:24">n</name></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="55:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:29">(<expr pos:start="41:9" pos:end="41:28"><name pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:9">r</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:23">sector_count</name></name> <operator pos:start="41:25" pos:end="41:26">==</operator> <literal type="number" pos:start="41:28" pos:end="41:28">0</literal></expr>)</condition> <block pos:start="41:31" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:15">

        <expr_stmt pos:start="43:9" pos:end="43:29"><expr pos:start="43:9" pos:end="43:28"><call pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:25">scsi_write_do_fua</name><argument_list pos:start="43:26" pos:end="43:28">(<argument pos:start="43:27" pos:end="43:27"><expr pos:start="43:27" pos:end="43:27"><name pos:start="43:27" pos:end="43:27">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:15">return;</return>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="55:5">else <block pos:start="47:12" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:45">

        <expr_stmt pos:start="49:9" pos:end="49:46"><expr pos:start="49:9" pos:end="49:45"><call pos:start="49:9" pos:end="49:45"><name pos:start="49:9" pos:end="49:23">scsi_init_iovec</name><argument_list pos:start="49:24" pos:end="49:45">(<argument pos:start="49:25" pos:end="49:25"><expr pos:start="49:25" pos:end="49:25"><name pos:start="49:25" pos:end="49:25">r</name></expr></argument>, <argument pos:start="49:28" pos:end="49:44"><expr pos:start="49:28" pos:end="49:44"><name pos:start="49:28" pos:end="49:44">SCSI_DMA_BUF_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:80"><expr pos:start="51:9" pos:end="51:79"><call pos:start="51:9" pos:end="51:79"><name pos:start="51:9" pos:end="51:15">DPRINTF</name><argument_list pos:start="51:16" pos:end="51:79">(<argument pos:start="51:17" pos:end="51:52"><expr pos:start="51:17" pos:end="51:52"><literal type="string" pos:start="51:17" pos:end="51:52">"Write complete tag=0x%x more=%zd\n"</literal></expr></argument>, <argument pos:start="51:55" pos:end="51:64"><expr pos:start="51:55" pos:end="51:64"><name pos:start="51:55" pos:end="51:64"><name pos:start="51:55" pos:end="51:55">r</name><operator pos:start="51:56" pos:end="51:57">-&gt;</operator><name pos:start="51:58" pos:end="51:60">req</name><operator pos:start="51:61" pos:end="51:61">.</operator><name pos:start="51:62" pos:end="51:64">tag</name></name></expr></argument>, <argument pos:start="51:67" pos:end="51:78"><expr pos:start="51:67" pos:end="51:78"><name pos:start="51:67" pos:end="51:78"><name pos:start="51:67" pos:end="51:67">r</name><operator pos:start="51:68" pos:end="51:69">-&gt;</operator><name pos:start="51:70" pos:end="51:73">qiov</name><operator pos:start="51:74" pos:end="51:74">.</operator><name pos:start="51:75" pos:end="51:78">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:45"><expr pos:start="53:9" pos:end="53:44"><call pos:start="53:9" pos:end="53:44"><name pos:start="53:9" pos:end="53:21">scsi_req_data</name><argument_list pos:start="53:22" pos:end="53:44">(<argument pos:start="53:23" pos:end="53:29"><expr pos:start="53:23" pos:end="53:29"><operator pos:start="53:23" pos:end="53:23">&amp;</operator><name pos:start="53:24" pos:end="53:29"><name pos:start="53:24" pos:end="53:24">r</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:29">req</name></name></expr></argument>, <argument pos:start="53:32" pos:end="53:43"><expr pos:start="53:32" pos:end="53:43"><name pos:start="53:32" pos:end="53:43"><name pos:start="53:32" pos:end="53:32">r</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:38">qiov</name><operator pos:start="53:39" pos:end="53:39">.</operator><name pos:start="53:40" pos:end="53:43">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<label pos:start="59:1" pos:end="59:5"><name pos:start="59:1" pos:end="59:4">done</name>:</label>

    <expr_stmt pos:start="61:5" pos:end="61:28"><expr pos:start="61:5" pos:end="61:27"><call pos:start="61:5" pos:end="61:27"><name pos:start="61:5" pos:end="61:18">scsi_req_unref</name><argument_list pos:start="61:19" pos:end="61:27">(<argument pos:start="61:20" pos:end="61:26"><expr pos:start="61:20" pos:end="61:26"><operator pos:start="61:20" pos:end="61:20">&amp;</operator><name pos:start="61:21" pos:end="61:26"><name pos:start="61:21" pos:end="61:21">r</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:26">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
