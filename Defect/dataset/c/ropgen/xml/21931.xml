<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21931.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:27">av_image_fill_linesizes</name><parameter_list pos:start="1:28" pos:end="1:82">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:31">int</name></type> <name pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:41">linesizes</name><index pos:start="1:42" pos:end="1:44">[<expr pos:start="1:43" pos:end="1:43"><literal type="number" pos:start="1:43" pos:end="1:43">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:70"><decl pos:start="1:47" pos:end="1:70"><type pos:start="1:47" pos:end="1:70"><name pos:start="1:47" pos:end="1:62"><name pos:start="1:47" pos:end="1:50">enum</name> <name pos:start="1:52" pos:end="1:62">PixelFormat</name></name></type> <name pos:start="1:64" pos:end="1:70">pix_fmt</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:81"><decl pos:start="1:73" pos:end="1:81"><type pos:start="1:73" pos:end="1:81"><name pos:start="1:73" pos:end="1:75">int</name></type> <name pos:start="1:77" pos:end="1:81">width</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:70"><decl pos:start="7:5" pos:end="7:69"><type pos:start="7:5" pos:end="7:30"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:28">AVPixFmtDescriptor</name> <modifier pos:start="7:30" pos:end="7:30">*</modifier></type><name pos:start="7:31" pos:end="7:34">desc</name> <init pos:start="7:36" pos:end="7:69">= <expr pos:start="7:38" pos:end="7:69"><operator pos:start="7:38" pos:end="7:38">&amp;</operator><name pos:start="7:39" pos:end="7:69"><name pos:start="7:39" pos:end="7:60">av_pix_fmt_descriptors</name><index pos:start="7:61" pos:end="7:69">[<expr pos:start="7:62" pos:end="7:68"><name pos:start="7:62" pos:end="7:68">pix_fmt</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:24"><name pos:start="9:9" pos:end="9:16">max_step</name>     <index pos:start="9:22" pos:end="9:24">[<expr pos:start="9:23" pos:end="9:23"><literal type="number" pos:start="9:23" pos:end="9:23">4</literal></expr>]</index></name></decl>;</decl_stmt>       <comment type="block" pos:start="9:33" pos:end="9:67">/* max pixel step for each plane */</comment>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:24"><name pos:start="11:9" pos:end="11:21">max_step_comp</name><index pos:start="11:22" pos:end="11:24">[<expr pos:start="11:23" pos:end="11:23"><literal type="number" pos:start="11:23" pos:end="11:23">4</literal></expr>]</index></name></decl>;</decl_stmt>       <comment type="block" pos:start="11:33" pos:end="11:95">/* the component for each plane which has the max pixel step */</comment>



    <expr_stmt pos:start="15:5" pos:end="15:49"><expr pos:start="15:5" pos:end="15:48"><call pos:start="15:5" pos:end="15:48"><name pos:start="15:5" pos:end="15:10">memset</name><argument_list pos:start="15:11" pos:end="15:48">(<argument pos:start="15:12" pos:end="15:20"><expr pos:start="15:12" pos:end="15:20"><name pos:start="15:12" pos:end="15:20">linesizes</name></expr></argument>, <argument pos:start="15:23" pos:end="15:23"><expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr></argument>, <argument pos:start="15:26" pos:end="15:47"><expr pos:start="15:26" pos:end="15:47"><literal type="number" pos:start="15:26" pos:end="15:26">4</literal><operator pos:start="15:27" pos:end="15:27">*</operator><sizeof pos:start="15:28" pos:end="15:47">sizeof<argument_list pos:start="15:34" pos:end="15:47">(<argument pos:start="15:35" pos:end="15:46"><expr pos:start="15:35" pos:end="15:46"><name pos:start="15:35" pos:end="15:46"><name pos:start="15:35" pos:end="15:43">linesizes</name><index pos:start="15:44" pos:end="15:46">[<expr pos:start="15:45" pos:end="15:45"><literal type="number" pos:start="15:45" pos:end="15:45">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="21:31"><if pos:start="19:5" pos:end="21:31">if <condition pos:start="19:8" pos:end="19:73">(<expr pos:start="19:9" pos:end="19:72"><operator pos:start="19:9" pos:end="19:9">(</operator><name pos:start="19:10" pos:end="19:17">unsigned</name><operator pos:start="19:18" pos:end="19:18">)</operator><name pos:start="19:19" pos:end="19:25">pix_fmt</name> <operator pos:start="19:27" pos:end="19:28">&gt;=</operator> <name pos:start="19:30" pos:end="19:39">PIX_FMT_NB</name> <operator pos:start="19:41" pos:end="19:42">||</operator> <name pos:start="19:44" pos:end="19:54"><name pos:start="19:44" pos:end="19:47">desc</name><operator pos:start="19:48" pos:end="19:49">-&gt;</operator><name pos:start="19:50" pos:end="19:54">flags</name></name> <operator pos:start="19:56" pos:end="19:56">&amp;</operator> <name pos:start="19:58" pos:end="19:72">PIX_FMT_HWACCEL</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:31"><block_content pos:start="21:9" pos:end="21:31">

        <return pos:start="21:9" pos:end="21:31">return <expr pos:start="21:16" pos:end="21:30"><call pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:30">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="35:5"><if pos:start="25:5" pos:end="35:5">if <condition pos:start="25:8" pos:end="25:40">(<expr pos:start="25:9" pos:end="25:39"><name pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:12">desc</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:19">flags</name></name> <operator pos:start="25:21" pos:end="25:21">&amp;</operator> <name pos:start="25:23" pos:end="25:39">PIX_FMT_BITSTREAM</name></expr>)</condition> <block pos:start="25:42" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:17">

        <if_stmt pos:start="27:9" pos:end="29:35"><if pos:start="27:9" pos:end="29:35">if <condition pos:start="27:12" pos:end="27:65">(<expr pos:start="27:13" pos:end="27:64"><name pos:start="27:13" pos:end="27:17">width</name> <operator pos:start="27:19" pos:end="27:19">&gt;</operator> <operator pos:start="27:21" pos:end="27:21">(</operator><name pos:start="27:22" pos:end="27:28">INT_MAX</name> <operator pos:start="27:30" pos:end="27:30">-</operator><literal type="number" pos:start="27:31" pos:end="27:31">7</literal><operator pos:start="27:32" pos:end="27:32">)</operator> <operator pos:start="27:34" pos:end="27:34">/</operator> <operator pos:start="27:36" pos:end="27:36">(</operator><name pos:start="27:37" pos:end="27:49"><name pos:start="27:37" pos:end="27:40">desc</name><operator pos:start="27:41" pos:end="27:42">-&gt;</operator><name pos:start="27:43" pos:end="27:46">comp</name><index pos:start="27:47" pos:end="27:49">[<expr pos:start="27:48" pos:end="27:48"><literal type="number" pos:start="27:48" pos:end="27:48">0</literal></expr>]</index></name><operator pos:start="27:50" pos:end="27:50">.</operator><name pos:start="27:51" pos:end="27:61">step_minus1</name><operator pos:start="27:62" pos:end="27:62">+</operator><literal type="number" pos:start="27:63" pos:end="27:63">1</literal><operator pos:start="27:64" pos:end="27:64">)</operator></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:35"><block_content pos:start="29:13" pos:end="29:35">

            <return pos:start="29:13" pos:end="29:35">return <expr pos:start="29:20" pos:end="29:34"><call pos:start="29:20" pos:end="29:34"><name pos:start="29:20" pos:end="29:26">AVERROR</name><argument_list pos:start="29:27" pos:end="29:34">(<argument pos:start="29:28" pos:end="29:33"><expr pos:start="29:28" pos:end="29:33"><name pos:start="29:28" pos:end="29:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:72"><expr pos:start="31:9" pos:end="31:71"><name pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:17">linesizes</name><index pos:start="31:18" pos:end="31:20">[<expr pos:start="31:19" pos:end="31:19"><literal type="number" pos:start="31:19" pos:end="31:19">0</literal></expr>]</index></name> <operator pos:start="31:22" pos:end="31:22">=</operator> <operator pos:start="31:24" pos:end="31:24">(</operator><name pos:start="31:25" pos:end="31:29">width</name> <operator pos:start="31:31" pos:end="31:31">*</operator> <operator pos:start="31:33" pos:end="31:33">(</operator><name pos:start="31:34" pos:end="31:46"><name pos:start="31:34" pos:end="31:37">desc</name><operator pos:start="31:38" pos:end="31:39">-&gt;</operator><name pos:start="31:40" pos:end="31:43">comp</name><index pos:start="31:44" pos:end="31:46">[<expr pos:start="31:45" pos:end="31:45"><literal type="number" pos:start="31:45" pos:end="31:45">0</literal></expr>]</index></name><operator pos:start="31:47" pos:end="31:47">.</operator><name pos:start="31:48" pos:end="31:58">step_minus1</name><operator pos:start="31:59" pos:end="31:59">+</operator><literal type="number" pos:start="31:60" pos:end="31:60">1</literal><operator pos:start="31:61" pos:end="31:61">)</operator> <operator pos:start="31:63" pos:end="31:63">+</operator> <literal type="number" pos:start="31:65" pos:end="31:65">7</literal><operator pos:start="31:66" pos:end="31:66">)</operator> <operator pos:start="31:68" pos:end="31:69">&gt;&gt;</operator> <literal type="number" pos:start="31:71" pos:end="31:71">3</literal></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:17">return <expr pos:start="33:16" pos:end="33:16"><literal type="number" pos:start="33:16" pos:end="33:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:62"><expr pos:start="39:5" pos:end="39:61"><call pos:start="39:5" pos:end="39:61"><name pos:start="39:5" pos:end="39:30">av_image_fill_max_pixsteps</name><argument_list pos:start="39:31" pos:end="39:61">(<argument pos:start="39:32" pos:end="39:39"><expr pos:start="39:32" pos:end="39:39"><name pos:start="39:32" pos:end="39:39">max_step</name></expr></argument>, <argument pos:start="39:42" pos:end="39:54"><expr pos:start="39:42" pos:end="39:54"><name pos:start="39:42" pos:end="39:54">max_step_comp</name></expr></argument>, <argument pos:start="39:57" pos:end="39:60"><expr pos:start="39:57" pos:end="39:60"><name pos:start="39:57" pos:end="39:60">desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="41:5" pos:end="53:5">for <control pos:start="41:9" pos:end="41:27">(<init pos:start="41:10" pos:end="41:15"><expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:10">i</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>;</init> <condition pos:start="41:17" pos:end="41:22"><expr pos:start="41:17" pos:end="41:21"><name pos:start="41:17" pos:end="41:17">i</name> <operator pos:start="41:19" pos:end="41:19">&lt;</operator> <literal type="number" pos:start="41:21" pos:end="41:21">4</literal></expr>;</condition> <incr pos:start="41:24" pos:end="41:26"><expr pos:start="41:24" pos:end="41:26"><name pos:start="41:24" pos:end="41:24">i</name><operator pos:start="41:25" pos:end="41:26">++</operator></expr></incr>)</control> <block pos:start="41:29" pos:end="53:5">{<block_content pos:start="43:9" pos:end="51:47">

        <decl_stmt pos:start="43:9" pos:end="43:91"><decl pos:start="43:9" pos:end="43:90"><type pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:11">int</name></type> <name pos:start="43:13" pos:end="43:13">s</name> <init pos:start="43:15" pos:end="43:90">= <expr pos:start="43:17" pos:end="43:90"><ternary pos:start="43:17" pos:end="43:90"><condition pos:start="43:17" pos:end="43:66"><expr pos:start="43:17" pos:end="43:64"><operator pos:start="43:17" pos:end="43:17">(</operator><name pos:start="43:18" pos:end="43:33"><name pos:start="43:18" pos:end="43:30">max_step_comp</name><index pos:start="43:31" pos:end="43:33">[<expr pos:start="43:32" pos:end="43:32"><name pos:start="43:32" pos:end="43:32">i</name></expr>]</index></name> <operator pos:start="43:35" pos:end="43:36">==</operator> <literal type="number" pos:start="43:38" pos:end="43:38">1</literal> <operator pos:start="43:40" pos:end="43:41">||</operator> <name pos:start="43:43" pos:end="43:58"><name pos:start="43:43" pos:end="43:55">max_step_comp</name><index pos:start="43:56" pos:end="43:58">[<expr pos:start="43:57" pos:end="43:57"><name pos:start="43:57" pos:end="43:57">i</name></expr>]</index></name> <operator pos:start="43:60" pos:end="43:61">==</operator> <literal type="number" pos:start="43:63" pos:end="43:63">2</literal><operator pos:start="43:64" pos:end="43:64">)</operator></expr> ?</condition><then pos:start="43:68" pos:end="43:86"> <expr pos:start="43:68" pos:end="43:86"><name pos:start="43:68" pos:end="43:86"><name pos:start="43:68" pos:end="43:71">desc</name><operator pos:start="43:72" pos:end="43:73">-&gt;</operator><name pos:start="43:74" pos:end="43:86">log2_chroma_w</name></name></expr> </then><else pos:start="43:88" pos:end="43:90">: <expr pos:start="43:90" pos:end="43:90"><literal type="number" pos:start="43:90" pos:end="43:90">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:54"><decl pos:start="45:9" pos:end="45:53"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:21">shifted_w</name> <init pos:start="45:23" pos:end="45:53">= <expr pos:start="45:25" pos:end="45:53"><operator pos:start="45:25" pos:end="45:25">(</operator><operator pos:start="45:26" pos:end="45:26">(</operator><name pos:start="45:27" pos:end="45:31">width</name> <operator pos:start="45:33" pos:end="45:33">+</operator> <operator pos:start="45:35" pos:end="45:35">(</operator><literal type="number" pos:start="45:36" pos:end="45:36">1</literal> <operator pos:start="45:38" pos:end="45:39">&lt;&lt;</operator> <name pos:start="45:41" pos:end="45:41">s</name><operator pos:start="45:42" pos:end="45:42">)</operator> <operator pos:start="45:44" pos:end="45:44">-</operator> <literal type="number" pos:start="45:46" pos:end="45:46">1</literal><operator pos:start="45:47" pos:end="45:47">)</operator><operator pos:start="45:48" pos:end="45:48">)</operator> <operator pos:start="45:50" pos:end="45:51">&gt;&gt;</operator> <name pos:start="45:53" pos:end="45:53">s</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="47:9" pos:end="49:35"><if pos:start="47:9" pos:end="49:35">if <condition pos:start="47:12" pos:end="47:46">(<expr pos:start="47:13" pos:end="47:45"><name pos:start="47:13" pos:end="47:23"><name pos:start="47:13" pos:end="47:20">max_step</name><index pos:start="47:21" pos:end="47:23">[<expr pos:start="47:22" pos:end="47:22"><name pos:start="47:22" pos:end="47:22">i</name></expr>]</index></name> <operator pos:start="47:25" pos:end="47:25">&gt;</operator> <name pos:start="47:27" pos:end="47:33">INT_MAX</name> <operator pos:start="47:35" pos:end="47:35">/</operator> <name pos:start="47:37" pos:end="47:45">shifted_w</name></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:35"><block_content pos:start="49:13" pos:end="49:35">

            <return pos:start="49:13" pos:end="49:35">return <expr pos:start="49:20" pos:end="49:34"><call pos:start="49:20" pos:end="49:34"><name pos:start="49:20" pos:end="49:26">AVERROR</name><argument_list pos:start="49:27" pos:end="49:34">(<argument pos:start="49:28" pos:end="49:33"><expr pos:start="49:28" pos:end="49:33"><name pos:start="49:28" pos:end="49:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:47"><expr pos:start="51:9" pos:end="51:46"><name pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:17">linesizes</name><index pos:start="51:18" pos:end="51:20">[<expr pos:start="51:19" pos:end="51:19"><name pos:start="51:19" pos:end="51:19">i</name></expr>]</index></name> <operator pos:start="51:22" pos:end="51:22">=</operator> <name pos:start="51:24" pos:end="51:34"><name pos:start="51:24" pos:end="51:31">max_step</name><index pos:start="51:32" pos:end="51:34">[<expr pos:start="51:33" pos:end="51:33"><name pos:start="51:33" pos:end="51:33">i</name></expr>]</index></name> <operator pos:start="51:36" pos:end="51:36">*</operator> <name pos:start="51:38" pos:end="51:46">shifted_w</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="57:5" pos:end="57:13">return <expr pos:start="57:12" pos:end="57:12"><literal type="number" pos:start="57:12" pos:end="57:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
