<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15580.c" pos:tabs="8"><function pos:start="1:1" pos:end="489:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">gen_compute_branch</name><parameter_list pos:start="1:31" pos:end="3:74">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:43">DisasContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">ctx</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:62"><decl pos:start="1:51" pos:end="1:62"><type pos:start="1:51" pos:end="1:62"><name pos:start="1:51" pos:end="1:58">uint32_t</name></type> <name pos:start="1:60" pos:end="1:62">opc</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:70"><decl pos:start="1:65" pos:end="1:70"><type pos:start="1:65" pos:end="1:70"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:70">r1</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:37"><decl pos:start="3:32" pos:end="3:37"><type pos:start="3:32" pos:end="3:37"><name pos:start="3:32" pos:end="3:34">int</name></type> <name pos:start="3:36" pos:end="3:37">r2</name></decl></parameter> , <parameter pos:start="3:41" pos:end="3:56"><decl pos:start="3:41" pos:end="3:56"><type pos:start="3:41" pos:end="3:56"><name pos:start="3:41" pos:end="3:47">int32_t</name></type> <name pos:start="3:49" pos:end="3:56">constant</name></decl></parameter> , <parameter pos:start="3:60" pos:end="3:73"><decl pos:start="3:60" pos:end="3:73"><type pos:start="3:60" pos:end="3:73"><name pos:start="3:60" pos:end="3:66">int32_t</name></type> <name pos:start="3:68" pos:end="3:73">offset</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="489:1">{<block_content pos:start="7:5" pos:end="487:28">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">TCGv</name></type> <name pos:start="7:10" pos:end="7:13">temp</name></decl>, <decl pos:start="7:16" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:16" pos:end="7:20">temp2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">n</name></decl>;</decl_stmt>



    <switch pos:start="13:5" pos:end="485:5">switch <condition pos:start="13:12" pos:end="13:16">(<expr pos:start="13:13" pos:end="13:15"><name pos:start="13:13" pos:end="13:15">opc</name></expr>)</condition> <block pos:start="13:18" pos:end="485:5">{<block_content pos:start="17:5" pos:end="483:48">

<comment type="block" pos:start="15:1" pos:end="15:21">/* SB-format jumps */</comment>

    <case pos:start="17:5" pos:end="17:22">case <expr pos:start="17:10" pos:end="17:21"><name pos:start="17:10" pos:end="17:21">OPC1_16_SB_J</name></expr>:</case>

    <case pos:start="19:5" pos:end="19:21">case <expr pos:start="19:10" pos:end="19:20"><name pos:start="19:10" pos:end="19:20">OPC1_32_B_J</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:50"><expr pos:start="21:9" pos:end="21:49"><call pos:start="21:9" pos:end="21:49"><name pos:start="21:9" pos:end="21:19">gen_goto_tb</name><argument_list pos:start="21:20" pos:end="21:49">(<argument pos:start="21:21" pos:end="21:23"><expr pos:start="21:21" pos:end="21:23"><name pos:start="21:21" pos:end="21:23">ctx</name></expr></argument>, <argument pos:start="21:26" pos:end="21:26"><expr pos:start="21:26" pos:end="21:26"><literal type="number" pos:start="21:26" pos:end="21:26">0</literal></expr></argument>, <argument pos:start="21:29" pos:end="21:48"><expr pos:start="21:29" pos:end="21:48"><name pos:start="21:29" pos:end="21:35"><name pos:start="21:29" pos:end="21:31">ctx</name><operator pos:start="21:32" pos:end="21:33">-&gt;</operator><name pos:start="21:34" pos:end="21:35">pc</name></name> <operator pos:start="21:37" pos:end="21:37">+</operator> <name pos:start="21:39" pos:end="21:44">offset</name> <operator pos:start="21:46" pos:end="21:46">*</operator> <literal type="number" pos:start="21:48" pos:end="21:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="23:9" pos:end="23:14">break;</break>

    <case pos:start="25:5" pos:end="25:24">case <expr pos:start="25:10" pos:end="25:23"><name pos:start="25:10" pos:end="25:23">OPC1_32_B_CALL</name></expr>:</case>

    <case pos:start="27:5" pos:end="27:25">case <expr pos:start="27:10" pos:end="27:24"><name pos:start="27:10" pos:end="27:24">OPC1_16_SB_CALL</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:44"><expr pos:start="29:9" pos:end="29:43"><call pos:start="29:9" pos:end="29:43"><name pos:start="29:9" pos:end="29:23">gen_helper_1arg</name><argument_list pos:start="29:24" pos:end="29:43">(<argument pos:start="29:25" pos:end="29:28"><expr pos:start="29:25" pos:end="29:28"><name pos:start="29:25" pos:end="29:28">call</name></expr></argument>, <argument pos:start="29:31" pos:end="29:42"><expr pos:start="29:31" pos:end="29:42"><name pos:start="29:31" pos:end="29:42"><name pos:start="29:31" pos:end="29:33">ctx</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:42">next_pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:50"><expr pos:start="31:9" pos:end="31:49"><call pos:start="31:9" pos:end="31:49"><name pos:start="31:9" pos:end="31:19">gen_goto_tb</name><argument_list pos:start="31:20" pos:end="31:49">(<argument pos:start="31:21" pos:end="31:23"><expr pos:start="31:21" pos:end="31:23"><name pos:start="31:21" pos:end="31:23">ctx</name></expr></argument>, <argument pos:start="31:26" pos:end="31:26"><expr pos:start="31:26" pos:end="31:26"><literal type="number" pos:start="31:26" pos:end="31:26">0</literal></expr></argument>, <argument pos:start="31:29" pos:end="31:48"><expr pos:start="31:29" pos:end="31:48"><name pos:start="31:29" pos:end="31:35"><name pos:start="31:29" pos:end="31:31">ctx</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:35">pc</name></name> <operator pos:start="31:37" pos:end="31:37">+</operator> <name pos:start="31:39" pos:end="31:44">offset</name> <operator pos:start="31:46" pos:end="31:46">*</operator> <literal type="number" pos:start="31:48" pos:end="31:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <case pos:start="35:5" pos:end="35:23">case <expr pos:start="35:10" pos:end="35:22"><name pos:start="35:10" pos:end="35:22">OPC1_16_SB_JZ</name></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:69"><expr pos:start="37:9" pos:end="37:68"><call pos:start="37:9" pos:end="37:68"><name pos:start="37:9" pos:end="37:24">gen_branch_condi</name><argument_list pos:start="37:25" pos:end="37:68">(<argument pos:start="37:26" pos:end="37:28"><expr pos:start="37:26" pos:end="37:28"><name pos:start="37:26" pos:end="37:28">ctx</name></expr></argument>, <argument pos:start="37:31" pos:end="37:41"><expr pos:start="37:31" pos:end="37:41"><name pos:start="37:31" pos:end="37:41">TCG_COND_EQ</name></expr></argument>, <argument pos:start="37:44" pos:end="37:56"><expr pos:start="37:44" pos:end="37:56"><name pos:start="37:44" pos:end="37:56"><name pos:start="37:44" pos:end="37:52">cpu_gpr_d</name><index pos:start="37:53" pos:end="37:56">[<expr pos:start="37:54" pos:end="37:55"><literal type="number" pos:start="37:54" pos:end="37:55">15</literal></expr>]</index></name></expr></argument>, <argument pos:start="37:59" pos:end="37:59"><expr pos:start="37:59" pos:end="37:59"><literal type="number" pos:start="37:59" pos:end="37:59">0</literal></expr></argument>, <argument pos:start="37:62" pos:end="37:67"><expr pos:start="37:62" pos:end="37:67"><name pos:start="37:62" pos:end="37:67">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:24">case <expr pos:start="41:10" pos:end="41:23"><name pos:start="41:10" pos:end="41:23">OPC1_16_SB_JNZ</name></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:69"><expr pos:start="43:9" pos:end="43:68"><call pos:start="43:9" pos:end="43:68"><name pos:start="43:9" pos:end="43:24">gen_branch_condi</name><argument_list pos:start="43:25" pos:end="43:68">(<argument pos:start="43:26" pos:end="43:28"><expr pos:start="43:26" pos:end="43:28"><name pos:start="43:26" pos:end="43:28">ctx</name></expr></argument>, <argument pos:start="43:31" pos:end="43:41"><expr pos:start="43:31" pos:end="43:41"><name pos:start="43:31" pos:end="43:41">TCG_COND_NE</name></expr></argument>, <argument pos:start="43:44" pos:end="43:56"><expr pos:start="43:44" pos:end="43:56"><name pos:start="43:44" pos:end="43:56"><name pos:start="43:44" pos:end="43:52">cpu_gpr_d</name><index pos:start="43:53" pos:end="43:56">[<expr pos:start="43:54" pos:end="43:55"><literal type="number" pos:start="43:54" pos:end="43:55">15</literal></expr>]</index></name></expr></argument>, <argument pos:start="43:59" pos:end="43:59"><expr pos:start="43:59" pos:end="43:59"><literal type="number" pos:start="43:59" pos:end="43:59">0</literal></expr></argument>, <argument pos:start="43:62" pos:end="43:67"><expr pos:start="43:62" pos:end="43:67"><name pos:start="43:62" pos:end="43:67">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

<comment type="block" pos:start="47:1" pos:end="47:22">/* SBC-format jumps */</comment>

    <case pos:start="49:5" pos:end="49:25">case <expr pos:start="49:10" pos:end="49:24"><name pos:start="49:10" pos:end="49:24">OPC1_16_SBC_JEQ</name></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:76"><expr pos:start="51:9" pos:end="51:75"><call pos:start="51:9" pos:end="51:75"><name pos:start="51:9" pos:end="51:24">gen_branch_condi</name><argument_list pos:start="51:25" pos:end="51:75">(<argument pos:start="51:26" pos:end="51:28"><expr pos:start="51:26" pos:end="51:28"><name pos:start="51:26" pos:end="51:28">ctx</name></expr></argument>, <argument pos:start="51:31" pos:end="51:41"><expr pos:start="51:31" pos:end="51:41"><name pos:start="51:31" pos:end="51:41">TCG_COND_EQ</name></expr></argument>, <argument pos:start="51:44" pos:end="51:56"><expr pos:start="51:44" pos:end="51:56"><name pos:start="51:44" pos:end="51:56"><name pos:start="51:44" pos:end="51:52">cpu_gpr_d</name><index pos:start="51:53" pos:end="51:56">[<expr pos:start="51:54" pos:end="51:55"><literal type="number" pos:start="51:54" pos:end="51:55">15</literal></expr>]</index></name></expr></argument>, <argument pos:start="51:59" pos:end="51:66"><expr pos:start="51:59" pos:end="51:66"><name pos:start="51:59" pos:end="51:66">constant</name></expr></argument>, <argument pos:start="51:69" pos:end="51:74"><expr pos:start="51:69" pos:end="51:74"><name pos:start="51:69" pos:end="51:74">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:25">case <expr pos:start="55:10" pos:end="55:24"><name pos:start="55:10" pos:end="55:24">OPC1_16_SBC_JNE</name></expr>:</case>

        <expr_stmt pos:start="57:9" pos:end="57:76"><expr pos:start="57:9" pos:end="57:75"><call pos:start="57:9" pos:end="57:75"><name pos:start="57:9" pos:end="57:24">gen_branch_condi</name><argument_list pos:start="57:25" pos:end="57:75">(<argument pos:start="57:26" pos:end="57:28"><expr pos:start="57:26" pos:end="57:28"><name pos:start="57:26" pos:end="57:28">ctx</name></expr></argument>, <argument pos:start="57:31" pos:end="57:41"><expr pos:start="57:31" pos:end="57:41"><name pos:start="57:31" pos:end="57:41">TCG_COND_NE</name></expr></argument>, <argument pos:start="57:44" pos:end="57:56"><expr pos:start="57:44" pos:end="57:56"><name pos:start="57:44" pos:end="57:56"><name pos:start="57:44" pos:end="57:52">cpu_gpr_d</name><index pos:start="57:53" pos:end="57:56">[<expr pos:start="57:54" pos:end="57:55"><literal type="number" pos:start="57:54" pos:end="57:55">15</literal></expr>]</index></name></expr></argument>, <argument pos:start="57:59" pos:end="57:66"><expr pos:start="57:59" pos:end="57:66"><name pos:start="57:59" pos:end="57:66">constant</name></expr></argument>, <argument pos:start="57:69" pos:end="57:74"><expr pos:start="57:69" pos:end="57:74"><name pos:start="57:69" pos:end="57:74">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

<comment type="block" pos:start="61:1" pos:end="61:23">/* SBRN-format jumps */</comment>

    <case pos:start="63:5" pos:end="63:27">case <expr pos:start="63:10" pos:end="63:26"><name pos:start="63:10" pos:end="63:26">OPC1_16_SBRN_JZ_T</name></expr>:</case>

        <expr_stmt pos:start="65:9" pos:end="65:30"><expr pos:start="65:9" pos:end="65:29"><name pos:start="65:9" pos:end="65:12">temp</name> <operator pos:start="65:14" pos:end="65:14">=</operator> <call pos:start="65:16" pos:end="65:29"><name pos:start="65:16" pos:end="65:27">tcg_temp_new</name><argument_list pos:start="65:28" pos:end="65:29">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:63"><expr pos:start="67:9" pos:end="67:62"><call pos:start="67:9" pos:end="67:62"><name pos:start="67:9" pos:end="67:23">tcg_gen_andi_tl</name><argument_list pos:start="67:24" pos:end="67:62">(<argument pos:start="67:25" pos:end="67:28"><expr pos:start="67:25" pos:end="67:28"><name pos:start="67:25" pos:end="67:28">temp</name></expr></argument>, <argument pos:start="67:31" pos:end="67:43"><expr pos:start="67:31" pos:end="67:43"><name pos:start="67:31" pos:end="67:43"><name pos:start="67:31" pos:end="67:39">cpu_gpr_d</name><index pos:start="67:40" pos:end="67:43">[<expr pos:start="67:41" pos:end="67:42"><literal type="number" pos:start="67:41" pos:end="67:42">15</literal></expr>]</index></name></expr></argument>, <argument pos:start="67:46" pos:end="67:61"><expr pos:start="67:46" pos:end="67:61"><literal type="number" pos:start="67:46" pos:end="67:49">0x1u</literal> <operator pos:start="67:51" pos:end="67:52">&lt;&lt;</operator> <name pos:start="67:54" pos:end="67:61">constant</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:60"><expr pos:start="69:9" pos:end="69:59"><call pos:start="69:9" pos:end="69:59"><name pos:start="69:9" pos:end="69:24">gen_branch_condi</name><argument_list pos:start="69:25" pos:end="69:59">(<argument pos:start="69:26" pos:end="69:28"><expr pos:start="69:26" pos:end="69:28"><name pos:start="69:26" pos:end="69:28">ctx</name></expr></argument>, <argument pos:start="69:31" pos:end="69:41"><expr pos:start="69:31" pos:end="69:41"><name pos:start="69:31" pos:end="69:41">TCG_COND_EQ</name></expr></argument>, <argument pos:start="69:44" pos:end="69:47"><expr pos:start="69:44" pos:end="69:47"><name pos:start="69:44" pos:end="69:47">temp</name></expr></argument>, <argument pos:start="69:50" pos:end="69:50"><expr pos:start="69:50" pos:end="69:50"><literal type="number" pos:start="69:50" pos:end="69:50">0</literal></expr></argument>, <argument pos:start="69:53" pos:end="69:58"><expr pos:start="69:53" pos:end="69:58"><name pos:start="69:53" pos:end="69:58">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:28"><expr pos:start="71:9" pos:end="71:27"><call pos:start="71:9" pos:end="71:27"><name pos:start="71:9" pos:end="71:21">tcg_temp_free</name><argument_list pos:start="71:22" pos:end="71:27">(<argument pos:start="71:23" pos:end="71:26"><expr pos:start="71:23" pos:end="71:26"><name pos:start="71:23" pos:end="71:26">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <case pos:start="75:5" pos:end="75:28">case <expr pos:start="75:10" pos:end="75:27"><name pos:start="75:10" pos:end="75:27">OPC1_16_SBRN_JNZ_T</name></expr>:</case>

        <expr_stmt pos:start="77:9" pos:end="77:30"><expr pos:start="77:9" pos:end="77:29"><name pos:start="77:9" pos:end="77:12">temp</name> <operator pos:start="77:14" pos:end="77:14">=</operator> <call pos:start="77:16" pos:end="77:29"><name pos:start="77:16" pos:end="77:27">tcg_temp_new</name><argument_list pos:start="77:28" pos:end="77:29">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:63"><expr pos:start="79:9" pos:end="79:62"><call pos:start="79:9" pos:end="79:62"><name pos:start="79:9" pos:end="79:23">tcg_gen_andi_tl</name><argument_list pos:start="79:24" pos:end="79:62">(<argument pos:start="79:25" pos:end="79:28"><expr pos:start="79:25" pos:end="79:28"><name pos:start="79:25" pos:end="79:28">temp</name></expr></argument>, <argument pos:start="79:31" pos:end="79:43"><expr pos:start="79:31" pos:end="79:43"><name pos:start="79:31" pos:end="79:43"><name pos:start="79:31" pos:end="79:39">cpu_gpr_d</name><index pos:start="79:40" pos:end="79:43">[<expr pos:start="79:41" pos:end="79:42"><literal type="number" pos:start="79:41" pos:end="79:42">15</literal></expr>]</index></name></expr></argument>, <argument pos:start="79:46" pos:end="79:61"><expr pos:start="79:46" pos:end="79:61"><literal type="number" pos:start="79:46" pos:end="79:49">0x1u</literal> <operator pos:start="79:51" pos:end="79:52">&lt;&lt;</operator> <name pos:start="79:54" pos:end="79:61">constant</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:60"><expr pos:start="81:9" pos:end="81:59"><call pos:start="81:9" pos:end="81:59"><name pos:start="81:9" pos:end="81:24">gen_branch_condi</name><argument_list pos:start="81:25" pos:end="81:59">(<argument pos:start="81:26" pos:end="81:28"><expr pos:start="81:26" pos:end="81:28"><name pos:start="81:26" pos:end="81:28">ctx</name></expr></argument>, <argument pos:start="81:31" pos:end="81:41"><expr pos:start="81:31" pos:end="81:41"><name pos:start="81:31" pos:end="81:41">TCG_COND_NE</name></expr></argument>, <argument pos:start="81:44" pos:end="81:47"><expr pos:start="81:44" pos:end="81:47"><name pos:start="81:44" pos:end="81:47">temp</name></expr></argument>, <argument pos:start="81:50" pos:end="81:50"><expr pos:start="81:50" pos:end="81:50"><literal type="number" pos:start="81:50" pos:end="81:50">0</literal></expr></argument>, <argument pos:start="81:53" pos:end="81:58"><expr pos:start="81:53" pos:end="81:58"><name pos:start="81:53" pos:end="81:58">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:28"><expr pos:start="83:9" pos:end="83:27"><call pos:start="83:9" pos:end="83:27"><name pos:start="83:9" pos:end="83:21">tcg_temp_free</name><argument_list pos:start="83:22" pos:end="83:27">(<argument pos:start="83:23" pos:end="83:26"><expr pos:start="83:23" pos:end="83:26"><name pos:start="83:23" pos:end="83:26">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="85:9" pos:end="85:14">break;</break>

<comment type="block" pos:start="87:1" pos:end="87:22">/* SBR-format jumps */</comment>

    <case pos:start="89:5" pos:end="89:25">case <expr pos:start="89:10" pos:end="89:24"><name pos:start="89:10" pos:end="89:24">OPC1_16_SBR_JEQ</name></expr>:</case>

        <expr_stmt pos:start="91:9" pos:end="93:32"><expr pos:start="91:9" pos:end="93:31"><call pos:start="91:9" pos:end="93:31"><name pos:start="91:9" pos:end="91:23">gen_branch_cond</name><argument_list pos:start="91:24" pos:end="93:31">(<argument pos:start="91:25" pos:end="91:27"><expr pos:start="91:25" pos:end="91:27"><name pos:start="91:25" pos:end="91:27">ctx</name></expr></argument>, <argument pos:start="91:30" pos:end="91:40"><expr pos:start="91:30" pos:end="91:40"><name pos:start="91:30" pos:end="91:40">TCG_COND_EQ</name></expr></argument>, <argument pos:start="91:43" pos:end="91:55"><expr pos:start="91:43" pos:end="91:55"><name pos:start="91:43" pos:end="91:55"><name pos:start="91:43" pos:end="91:51">cpu_gpr_d</name><index pos:start="91:52" pos:end="91:55">[<expr pos:start="91:53" pos:end="91:54"><name pos:start="91:53" pos:end="91:54">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="91:58" pos:end="91:70"><expr pos:start="91:58" pos:end="91:70"><name pos:start="91:58" pos:end="91:70"><name pos:start="91:58" pos:end="91:66">cpu_gpr_d</name><index pos:start="91:67" pos:end="91:70">[<expr pos:start="91:68" pos:end="91:69"><literal type="number" pos:start="91:68" pos:end="91:69">15</literal></expr>]</index></name></expr></argument>,

                        <argument pos:start="93:25" pos:end="93:30"><expr pos:start="93:25" pos:end="93:30"><name pos:start="93:25" pos:end="93:30">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="95:9" pos:end="95:14">break;</break>

    <case pos:start="97:5" pos:end="97:25">case <expr pos:start="97:10" pos:end="97:24"><name pos:start="97:10" pos:end="97:24">OPC1_16_SBR_JNE</name></expr>:</case>

        <expr_stmt pos:start="99:9" pos:end="101:32"><expr pos:start="99:9" pos:end="101:31"><call pos:start="99:9" pos:end="101:31"><name pos:start="99:9" pos:end="99:23">gen_branch_cond</name><argument_list pos:start="99:24" pos:end="101:31">(<argument pos:start="99:25" pos:end="99:27"><expr pos:start="99:25" pos:end="99:27"><name pos:start="99:25" pos:end="99:27">ctx</name></expr></argument>, <argument pos:start="99:30" pos:end="99:40"><expr pos:start="99:30" pos:end="99:40"><name pos:start="99:30" pos:end="99:40">TCG_COND_NE</name></expr></argument>, <argument pos:start="99:43" pos:end="99:55"><expr pos:start="99:43" pos:end="99:55"><name pos:start="99:43" pos:end="99:55"><name pos:start="99:43" pos:end="99:51">cpu_gpr_d</name><index pos:start="99:52" pos:end="99:55">[<expr pos:start="99:53" pos:end="99:54"><name pos:start="99:53" pos:end="99:54">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="99:58" pos:end="99:70"><expr pos:start="99:58" pos:end="99:70"><name pos:start="99:58" pos:end="99:70"><name pos:start="99:58" pos:end="99:66">cpu_gpr_d</name><index pos:start="99:67" pos:end="99:70">[<expr pos:start="99:68" pos:end="99:69"><literal type="number" pos:start="99:68" pos:end="99:69">15</literal></expr>]</index></name></expr></argument>,

                        <argument pos:start="101:25" pos:end="101:30"><expr pos:start="101:25" pos:end="101:30"><name pos:start="101:25" pos:end="101:30">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="103:9" pos:end="103:14">break;</break>

    <case pos:start="105:5" pos:end="105:25">case <expr pos:start="105:10" pos:end="105:24"><name pos:start="105:10" pos:end="105:24">OPC1_16_SBR_JNZ</name></expr>:</case>

        <expr_stmt pos:start="107:9" pos:end="107:69"><expr pos:start="107:9" pos:end="107:68"><call pos:start="107:9" pos:end="107:68"><name pos:start="107:9" pos:end="107:24">gen_branch_condi</name><argument_list pos:start="107:25" pos:end="107:68">(<argument pos:start="107:26" pos:end="107:28"><expr pos:start="107:26" pos:end="107:28"><name pos:start="107:26" pos:end="107:28">ctx</name></expr></argument>, <argument pos:start="107:31" pos:end="107:41"><expr pos:start="107:31" pos:end="107:41"><name pos:start="107:31" pos:end="107:41">TCG_COND_NE</name></expr></argument>, <argument pos:start="107:44" pos:end="107:56"><expr pos:start="107:44" pos:end="107:56"><name pos:start="107:44" pos:end="107:56"><name pos:start="107:44" pos:end="107:52">cpu_gpr_d</name><index pos:start="107:53" pos:end="107:56">[<expr pos:start="107:54" pos:end="107:55"><name pos:start="107:54" pos:end="107:55">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="107:59" pos:end="107:59"><expr pos:start="107:59" pos:end="107:59"><literal type="number" pos:start="107:59" pos:end="107:59">0</literal></expr></argument>, <argument pos:start="107:62" pos:end="107:67"><expr pos:start="107:62" pos:end="107:67"><name pos:start="107:62" pos:end="107:67">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="109:9" pos:end="109:14">break;</break>

    <case pos:start="111:5" pos:end="111:27">case <expr pos:start="111:10" pos:end="111:26"><name pos:start="111:10" pos:end="111:26">OPC1_16_SBR_JNZ_A</name></expr>:</case>

        <expr_stmt pos:start="113:9" pos:end="113:69"><expr pos:start="113:9" pos:end="113:68"><call pos:start="113:9" pos:end="113:68"><name pos:start="113:9" pos:end="113:24">gen_branch_condi</name><argument_list pos:start="113:25" pos:end="113:68">(<argument pos:start="113:26" pos:end="113:28"><expr pos:start="113:26" pos:end="113:28"><name pos:start="113:26" pos:end="113:28">ctx</name></expr></argument>, <argument pos:start="113:31" pos:end="113:41"><expr pos:start="113:31" pos:end="113:41"><name pos:start="113:31" pos:end="113:41">TCG_COND_NE</name></expr></argument>, <argument pos:start="113:44" pos:end="113:56"><expr pos:start="113:44" pos:end="113:56"><name pos:start="113:44" pos:end="113:56"><name pos:start="113:44" pos:end="113:52">cpu_gpr_a</name><index pos:start="113:53" pos:end="113:56">[<expr pos:start="113:54" pos:end="113:55"><name pos:start="113:54" pos:end="113:55">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="113:59" pos:end="113:59"><expr pos:start="113:59" pos:end="113:59"><literal type="number" pos:start="113:59" pos:end="113:59">0</literal></expr></argument>, <argument pos:start="113:62" pos:end="113:67"><expr pos:start="113:62" pos:end="113:67"><name pos:start="113:62" pos:end="113:67">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="115:9" pos:end="115:14">break;</break>

    <case pos:start="117:5" pos:end="117:26">case <expr pos:start="117:10" pos:end="117:25"><name pos:start="117:10" pos:end="117:25">OPC1_16_SBR_JGEZ</name></expr>:</case>

        <expr_stmt pos:start="119:9" pos:end="119:69"><expr pos:start="119:9" pos:end="119:68"><call pos:start="119:9" pos:end="119:68"><name pos:start="119:9" pos:end="119:24">gen_branch_condi</name><argument_list pos:start="119:25" pos:end="119:68">(<argument pos:start="119:26" pos:end="119:28"><expr pos:start="119:26" pos:end="119:28"><name pos:start="119:26" pos:end="119:28">ctx</name></expr></argument>, <argument pos:start="119:31" pos:end="119:41"><expr pos:start="119:31" pos:end="119:41"><name pos:start="119:31" pos:end="119:41">TCG_COND_GE</name></expr></argument>, <argument pos:start="119:44" pos:end="119:56"><expr pos:start="119:44" pos:end="119:56"><name pos:start="119:44" pos:end="119:56"><name pos:start="119:44" pos:end="119:52">cpu_gpr_d</name><index pos:start="119:53" pos:end="119:56">[<expr pos:start="119:54" pos:end="119:55"><name pos:start="119:54" pos:end="119:55">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="119:59" pos:end="119:59"><expr pos:start="119:59" pos:end="119:59"><literal type="number" pos:start="119:59" pos:end="119:59">0</literal></expr></argument>, <argument pos:start="119:62" pos:end="119:67"><expr pos:start="119:62" pos:end="119:67"><name pos:start="119:62" pos:end="119:67">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="121:9" pos:end="121:14">break;</break>

    <case pos:start="123:5" pos:end="123:26">case <expr pos:start="123:10" pos:end="123:25"><name pos:start="123:10" pos:end="123:25">OPC1_16_SBR_JGTZ</name></expr>:</case>

        <expr_stmt pos:start="125:9" pos:end="125:69"><expr pos:start="125:9" pos:end="125:68"><call pos:start="125:9" pos:end="125:68"><name pos:start="125:9" pos:end="125:24">gen_branch_condi</name><argument_list pos:start="125:25" pos:end="125:68">(<argument pos:start="125:26" pos:end="125:28"><expr pos:start="125:26" pos:end="125:28"><name pos:start="125:26" pos:end="125:28">ctx</name></expr></argument>, <argument pos:start="125:31" pos:end="125:41"><expr pos:start="125:31" pos:end="125:41"><name pos:start="125:31" pos:end="125:41">TCG_COND_GT</name></expr></argument>, <argument pos:start="125:44" pos:end="125:56"><expr pos:start="125:44" pos:end="125:56"><name pos:start="125:44" pos:end="125:56"><name pos:start="125:44" pos:end="125:52">cpu_gpr_d</name><index pos:start="125:53" pos:end="125:56">[<expr pos:start="125:54" pos:end="125:55"><name pos:start="125:54" pos:end="125:55">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="125:59" pos:end="125:59"><expr pos:start="125:59" pos:end="125:59"><literal type="number" pos:start="125:59" pos:end="125:59">0</literal></expr></argument>, <argument pos:start="125:62" pos:end="125:67"><expr pos:start="125:62" pos:end="125:67"><name pos:start="125:62" pos:end="125:67">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="127:9" pos:end="127:14">break;</break>

    <case pos:start="129:5" pos:end="129:26">case <expr pos:start="129:10" pos:end="129:25"><name pos:start="129:10" pos:end="129:25">OPC1_16_SBR_JLEZ</name></expr>:</case>

        <expr_stmt pos:start="131:9" pos:end="131:69"><expr pos:start="131:9" pos:end="131:68"><call pos:start="131:9" pos:end="131:68"><name pos:start="131:9" pos:end="131:24">gen_branch_condi</name><argument_list pos:start="131:25" pos:end="131:68">(<argument pos:start="131:26" pos:end="131:28"><expr pos:start="131:26" pos:end="131:28"><name pos:start="131:26" pos:end="131:28">ctx</name></expr></argument>, <argument pos:start="131:31" pos:end="131:41"><expr pos:start="131:31" pos:end="131:41"><name pos:start="131:31" pos:end="131:41">TCG_COND_LE</name></expr></argument>, <argument pos:start="131:44" pos:end="131:56"><expr pos:start="131:44" pos:end="131:56"><name pos:start="131:44" pos:end="131:56"><name pos:start="131:44" pos:end="131:52">cpu_gpr_d</name><index pos:start="131:53" pos:end="131:56">[<expr pos:start="131:54" pos:end="131:55"><name pos:start="131:54" pos:end="131:55">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="131:59" pos:end="131:59"><expr pos:start="131:59" pos:end="131:59"><literal type="number" pos:start="131:59" pos:end="131:59">0</literal></expr></argument>, <argument pos:start="131:62" pos:end="131:67"><expr pos:start="131:62" pos:end="131:67"><name pos:start="131:62" pos:end="131:67">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="133:9" pos:end="133:14">break;</break>

    <case pos:start="135:5" pos:end="135:26">case <expr pos:start="135:10" pos:end="135:25"><name pos:start="135:10" pos:end="135:25">OPC1_16_SBR_JLTZ</name></expr>:</case>

        <expr_stmt pos:start="137:9" pos:end="137:69"><expr pos:start="137:9" pos:end="137:68"><call pos:start="137:9" pos:end="137:68"><name pos:start="137:9" pos:end="137:24">gen_branch_condi</name><argument_list pos:start="137:25" pos:end="137:68">(<argument pos:start="137:26" pos:end="137:28"><expr pos:start="137:26" pos:end="137:28"><name pos:start="137:26" pos:end="137:28">ctx</name></expr></argument>, <argument pos:start="137:31" pos:end="137:41"><expr pos:start="137:31" pos:end="137:41"><name pos:start="137:31" pos:end="137:41">TCG_COND_LT</name></expr></argument>, <argument pos:start="137:44" pos:end="137:56"><expr pos:start="137:44" pos:end="137:56"><name pos:start="137:44" pos:end="137:56"><name pos:start="137:44" pos:end="137:52">cpu_gpr_d</name><index pos:start="137:53" pos:end="137:56">[<expr pos:start="137:54" pos:end="137:55"><name pos:start="137:54" pos:end="137:55">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="137:59" pos:end="137:59"><expr pos:start="137:59" pos:end="137:59"><literal type="number" pos:start="137:59" pos:end="137:59">0</literal></expr></argument>, <argument pos:start="137:62" pos:end="137:67"><expr pos:start="137:62" pos:end="137:67"><name pos:start="137:62" pos:end="137:67">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="139:9" pos:end="139:14">break;</break>

    <case pos:start="141:5" pos:end="141:24">case <expr pos:start="141:10" pos:end="141:23"><name pos:start="141:10" pos:end="141:23">OPC1_16_SBR_JZ</name></expr>:</case>

        <expr_stmt pos:start="143:9" pos:end="143:69"><expr pos:start="143:9" pos:end="143:68"><call pos:start="143:9" pos:end="143:68"><name pos:start="143:9" pos:end="143:24">gen_branch_condi</name><argument_list pos:start="143:25" pos:end="143:68">(<argument pos:start="143:26" pos:end="143:28"><expr pos:start="143:26" pos:end="143:28"><name pos:start="143:26" pos:end="143:28">ctx</name></expr></argument>, <argument pos:start="143:31" pos:end="143:41"><expr pos:start="143:31" pos:end="143:41"><name pos:start="143:31" pos:end="143:41">TCG_COND_EQ</name></expr></argument>, <argument pos:start="143:44" pos:end="143:56"><expr pos:start="143:44" pos:end="143:56"><name pos:start="143:44" pos:end="143:56"><name pos:start="143:44" pos:end="143:52">cpu_gpr_d</name><index pos:start="143:53" pos:end="143:56">[<expr pos:start="143:54" pos:end="143:55"><name pos:start="143:54" pos:end="143:55">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="143:59" pos:end="143:59"><expr pos:start="143:59" pos:end="143:59"><literal type="number" pos:start="143:59" pos:end="143:59">0</literal></expr></argument>, <argument pos:start="143:62" pos:end="143:67"><expr pos:start="143:62" pos:end="143:67"><name pos:start="143:62" pos:end="143:67">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="145:9" pos:end="145:14">break;</break>

    <case pos:start="147:5" pos:end="147:26">case <expr pos:start="147:10" pos:end="147:25"><name pos:start="147:10" pos:end="147:25">OPC1_16_SBR_JZ_A</name></expr>:</case>

        <expr_stmt pos:start="149:9" pos:end="149:69"><expr pos:start="149:9" pos:end="149:68"><call pos:start="149:9" pos:end="149:68"><name pos:start="149:9" pos:end="149:24">gen_branch_condi</name><argument_list pos:start="149:25" pos:end="149:68">(<argument pos:start="149:26" pos:end="149:28"><expr pos:start="149:26" pos:end="149:28"><name pos:start="149:26" pos:end="149:28">ctx</name></expr></argument>, <argument pos:start="149:31" pos:end="149:41"><expr pos:start="149:31" pos:end="149:41"><name pos:start="149:31" pos:end="149:41">TCG_COND_EQ</name></expr></argument>, <argument pos:start="149:44" pos:end="149:56"><expr pos:start="149:44" pos:end="149:56"><name pos:start="149:44" pos:end="149:56"><name pos:start="149:44" pos:end="149:52">cpu_gpr_a</name><index pos:start="149:53" pos:end="149:56">[<expr pos:start="149:54" pos:end="149:55"><name pos:start="149:54" pos:end="149:55">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="149:59" pos:end="149:59"><expr pos:start="149:59" pos:end="149:59"><literal type="number" pos:start="149:59" pos:end="149:59">0</literal></expr></argument>, <argument pos:start="149:62" pos:end="149:67"><expr pos:start="149:62" pos:end="149:67"><name pos:start="149:62" pos:end="149:67">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="151:9" pos:end="151:14">break;</break>

    <case pos:start="153:5" pos:end="153:26">case <expr pos:start="153:10" pos:end="153:25"><name pos:start="153:10" pos:end="153:25">OPC1_16_SBR_LOOP</name></expr>:</case>

        <expr_stmt pos:start="155:9" pos:end="155:43"><expr pos:start="155:9" pos:end="155:42"><call pos:start="155:9" pos:end="155:42"><name pos:start="155:9" pos:end="155:16">gen_loop</name><argument_list pos:start="155:17" pos:end="155:42">(<argument pos:start="155:18" pos:end="155:20"><expr pos:start="155:18" pos:end="155:20"><name pos:start="155:18" pos:end="155:20">ctx</name></expr></argument>, <argument pos:start="155:23" pos:end="155:24"><expr pos:start="155:23" pos:end="155:24"><name pos:start="155:23" pos:end="155:24">r1</name></expr></argument>, <argument pos:start="155:27" pos:end="155:41"><expr pos:start="155:27" pos:end="155:41"><name pos:start="155:27" pos:end="155:32">offset</name> <operator pos:start="155:34" pos:end="155:34">*</operator> <literal type="number" pos:start="155:36" pos:end="155:38">2</literal> <operator pos:start="155:38" pos:end="155:38">-</operator> <literal type="number" pos:start="155:40" pos:end="155:41">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="157:9" pos:end="157:14">break;</break>

<comment type="block" pos:start="159:1" pos:end="159:21">/* SR-format jumps */</comment>

    <case pos:start="161:5" pos:end="161:23">case <expr pos:start="161:10" pos:end="161:22"><name pos:start="161:10" pos:end="161:22">OPC1_16_SR_JI</name></expr>:</case>

        <expr_stmt pos:start="163:9" pos:end="163:59"><expr pos:start="163:9" pos:end="163:58"><call pos:start="163:9" pos:end="163:58"><name pos:start="163:9" pos:end="163:23">tcg_gen_andi_tl</name><argument_list pos:start="163:24" pos:end="163:58">(<argument pos:start="163:25" pos:end="163:30"><expr pos:start="163:25" pos:end="163:30"><name pos:start="163:25" pos:end="163:30">cpu_PC</name></expr></argument>, <argument pos:start="163:33" pos:end="163:45"><expr pos:start="163:33" pos:end="163:45"><name pos:start="163:33" pos:end="163:45"><name pos:start="163:33" pos:end="163:41">cpu_gpr_a</name><index pos:start="163:42" pos:end="163:45">[<expr pos:start="163:43" pos:end="163:44"><name pos:start="163:43" pos:end="163:44">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="163:48" pos:end="163:57"><expr pos:start="163:48" pos:end="163:57"><literal type="number" pos:start="163:48" pos:end="163:57">0xfffffffe</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:27"><expr pos:start="165:9" pos:end="165:26"><call pos:start="165:9" pos:end="165:26"><name pos:start="165:9" pos:end="165:23">tcg_gen_exit_tb</name><argument_list pos:start="165:24" pos:end="165:26">(<argument pos:start="165:25" pos:end="165:25"><expr pos:start="165:25" pos:end="165:25"><literal type="number" pos:start="165:25" pos:end="165:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="167:9" pos:end="167:14">break;</break>

    <case pos:start="169:5" pos:end="169:25">case <expr pos:start="169:10" pos:end="169:24"><name pos:start="169:10" pos:end="169:24">OPC2_32_SYS_RET</name></expr>:</case>

    <case pos:start="171:5" pos:end="171:24">case <expr pos:start="171:10" pos:end="171:23"><name pos:start="171:10" pos:end="171:23">OPC2_16_SR_RET</name></expr>:</case>

        <expr_stmt pos:start="173:9" pos:end="173:32"><expr pos:start="173:9" pos:end="173:31"><call pos:start="173:9" pos:end="173:31"><name pos:start="173:9" pos:end="173:22">gen_helper_ret</name><argument_list pos:start="173:23" pos:end="173:31">(<argument pos:start="173:24" pos:end="173:30"><expr pos:start="173:24" pos:end="173:30"><name pos:start="173:24" pos:end="173:30">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:27"><expr pos:start="175:9" pos:end="175:26"><call pos:start="175:9" pos:end="175:26"><name pos:start="175:9" pos:end="175:23">tcg_gen_exit_tb</name><argument_list pos:start="175:24" pos:end="175:26">(<argument pos:start="175:25" pos:end="175:25"><expr pos:start="175:25" pos:end="175:25"><literal type="number" pos:start="175:25" pos:end="175:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="177:9" pos:end="177:14">break;</break>

<comment type="block" pos:start="179:1" pos:end="179:14">/* B-format */</comment>

    <case pos:start="181:5" pos:end="181:25">case <expr pos:start="181:10" pos:end="181:24"><name pos:start="181:10" pos:end="181:24">OPC1_32_B_CALLA</name></expr>:</case>

        <expr_stmt pos:start="183:9" pos:end="183:44"><expr pos:start="183:9" pos:end="183:43"><call pos:start="183:9" pos:end="183:43"><name pos:start="183:9" pos:end="183:23">gen_helper_1arg</name><argument_list pos:start="183:24" pos:end="183:43">(<argument pos:start="183:25" pos:end="183:28"><expr pos:start="183:25" pos:end="183:28"><name pos:start="183:25" pos:end="183:28">call</name></expr></argument>, <argument pos:start="183:31" pos:end="183:42"><expr pos:start="183:31" pos:end="183:42"><name pos:start="183:31" pos:end="183:42"><name pos:start="183:31" pos:end="183:33">ctx</name><operator pos:start="183:34" pos:end="183:35">-&gt;</operator><name pos:start="183:36" pos:end="183:42">next_pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:50"><expr pos:start="185:9" pos:end="185:49"><call pos:start="185:9" pos:end="185:49"><name pos:start="185:9" pos:end="185:19">gen_goto_tb</name><argument_list pos:start="185:20" pos:end="185:49">(<argument pos:start="185:21" pos:end="185:23"><expr pos:start="185:21" pos:end="185:23"><name pos:start="185:21" pos:end="185:23">ctx</name></expr></argument>, <argument pos:start="185:26" pos:end="185:26"><expr pos:start="185:26" pos:end="185:26"><literal type="number" pos:start="185:26" pos:end="185:26">0</literal></expr></argument>, <argument pos:start="185:29" pos:end="185:48"><expr pos:start="185:29" pos:end="185:48"><call pos:start="185:29" pos:end="185:48"><name pos:start="185:29" pos:end="185:40">EA_B_ABSOLUT</name><argument_list pos:start="185:41" pos:end="185:48">(<argument pos:start="185:42" pos:end="185:47"><expr pos:start="185:42" pos:end="185:47"><name pos:start="185:42" pos:end="185:47">offset</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="187:9" pos:end="187:14">break;</break>

    <case pos:start="189:5" pos:end="189:25">case <expr pos:start="189:10" pos:end="189:24"><name pos:start="189:10" pos:end="189:24">OPC1_32_B_FCALL</name></expr>:</case>

        <expr_stmt pos:start="191:9" pos:end="191:32"><expr pos:start="191:9" pos:end="191:31"><call pos:start="191:9" pos:end="191:31"><name pos:start="191:9" pos:end="191:26">gen_fcall_save_ctx</name><argument_list pos:start="191:27" pos:end="191:31">(<argument pos:start="191:28" pos:end="191:30"><expr pos:start="191:28" pos:end="191:30"><name pos:start="191:28" pos:end="191:30">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:50"><expr pos:start="193:9" pos:end="193:49"><call pos:start="193:9" pos:end="193:49"><name pos:start="193:9" pos:end="193:19">gen_goto_tb</name><argument_list pos:start="193:20" pos:end="193:49">(<argument pos:start="193:21" pos:end="193:23"><expr pos:start="193:21" pos:end="193:23"><name pos:start="193:21" pos:end="193:23">ctx</name></expr></argument>, <argument pos:start="193:26" pos:end="193:26"><expr pos:start="193:26" pos:end="193:26"><literal type="number" pos:start="193:26" pos:end="193:26">0</literal></expr></argument>, <argument pos:start="193:29" pos:end="193:48"><expr pos:start="193:29" pos:end="193:48"><name pos:start="193:29" pos:end="193:35"><name pos:start="193:29" pos:end="193:31">ctx</name><operator pos:start="193:32" pos:end="193:33">-&gt;</operator><name pos:start="193:34" pos:end="193:35">pc</name></name> <operator pos:start="193:37" pos:end="193:37">+</operator> <name pos:start="193:39" pos:end="193:44">offset</name> <operator pos:start="193:46" pos:end="193:46">*</operator> <literal type="number" pos:start="193:48" pos:end="193:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="195:9" pos:end="195:14">break;</break>

    <case pos:start="197:5" pos:end="197:26">case <expr pos:start="197:10" pos:end="197:25"><name pos:start="197:10" pos:end="197:25">OPC1_32_B_FCALLA</name></expr>:</case>

        <expr_stmt pos:start="199:9" pos:end="199:32"><expr pos:start="199:9" pos:end="199:31"><call pos:start="199:9" pos:end="199:31"><name pos:start="199:9" pos:end="199:26">gen_fcall_save_ctx</name><argument_list pos:start="199:27" pos:end="199:31">(<argument pos:start="199:28" pos:end="199:30"><expr pos:start="199:28" pos:end="199:30"><name pos:start="199:28" pos:end="199:30">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:50"><expr pos:start="201:9" pos:end="201:49"><call pos:start="201:9" pos:end="201:49"><name pos:start="201:9" pos:end="201:19">gen_goto_tb</name><argument_list pos:start="201:20" pos:end="201:49">(<argument pos:start="201:21" pos:end="201:23"><expr pos:start="201:21" pos:end="201:23"><name pos:start="201:21" pos:end="201:23">ctx</name></expr></argument>, <argument pos:start="201:26" pos:end="201:26"><expr pos:start="201:26" pos:end="201:26"><literal type="number" pos:start="201:26" pos:end="201:26">0</literal></expr></argument>, <argument pos:start="201:29" pos:end="201:48"><expr pos:start="201:29" pos:end="201:48"><call pos:start="201:29" pos:end="201:48"><name pos:start="201:29" pos:end="201:40">EA_B_ABSOLUT</name><argument_list pos:start="201:41" pos:end="201:48">(<argument pos:start="201:42" pos:end="201:47"><expr pos:start="201:42" pos:end="201:47"><name pos:start="201:42" pos:end="201:47">offset</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="203:9" pos:end="203:14">break;</break>

    <case pos:start="205:5" pos:end="205:23">case <expr pos:start="205:10" pos:end="205:22"><name pos:start="205:10" pos:end="205:22">OPC1_32_B_JLA</name></expr>:</case>

        <expr_stmt pos:start="207:9" pos:end="207:53"><expr pos:start="207:9" pos:end="207:52"><call pos:start="207:9" pos:end="207:52"><name pos:start="207:9" pos:end="207:23">tcg_gen_movi_tl</name><argument_list pos:start="207:24" pos:end="207:52">(<argument pos:start="207:25" pos:end="207:37"><expr pos:start="207:25" pos:end="207:37"><name pos:start="207:25" pos:end="207:37"><name pos:start="207:25" pos:end="207:33">cpu_gpr_a</name><index pos:start="207:34" pos:end="207:37">[<expr pos:start="207:35" pos:end="207:36"><literal type="number" pos:start="207:35" pos:end="207:36">11</literal></expr>]</index></name></expr></argument>, <argument pos:start="207:40" pos:end="207:51"><expr pos:start="207:40" pos:end="207:51"><name pos:start="207:40" pos:end="207:51"><name pos:start="207:40" pos:end="207:42">ctx</name><operator pos:start="207:43" pos:end="207:44">-&gt;</operator><name pos:start="207:45" pos:end="207:51">next_pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="209:9" pos:end="209:26">/* fall through */</comment>

    <case pos:start="211:5" pos:end="211:22">case <expr pos:start="211:10" pos:end="211:21"><name pos:start="211:10" pos:end="211:21">OPC1_32_B_JA</name></expr>:</case>

        <expr_stmt pos:start="213:9" pos:end="213:50"><expr pos:start="213:9" pos:end="213:49"><call pos:start="213:9" pos:end="213:49"><name pos:start="213:9" pos:end="213:19">gen_goto_tb</name><argument_list pos:start="213:20" pos:end="213:49">(<argument pos:start="213:21" pos:end="213:23"><expr pos:start="213:21" pos:end="213:23"><name pos:start="213:21" pos:end="213:23">ctx</name></expr></argument>, <argument pos:start="213:26" pos:end="213:26"><expr pos:start="213:26" pos:end="213:26"><literal type="number" pos:start="213:26" pos:end="213:26">0</literal></expr></argument>, <argument pos:start="213:29" pos:end="213:48"><expr pos:start="213:29" pos:end="213:48"><call pos:start="213:29" pos:end="213:48"><name pos:start="213:29" pos:end="213:40">EA_B_ABSOLUT</name><argument_list pos:start="213:41" pos:end="213:48">(<argument pos:start="213:42" pos:end="213:47"><expr pos:start="213:42" pos:end="213:47"><name pos:start="213:42" pos:end="213:47">offset</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="215:9" pos:end="215:14">break;</break>

    <case pos:start="217:5" pos:end="217:22">case <expr pos:start="217:10" pos:end="217:21"><name pos:start="217:10" pos:end="217:21">OPC1_32_B_JL</name></expr>:</case>

        <expr_stmt pos:start="219:9" pos:end="219:53"><expr pos:start="219:9" pos:end="219:52"><call pos:start="219:9" pos:end="219:52"><name pos:start="219:9" pos:end="219:23">tcg_gen_movi_tl</name><argument_list pos:start="219:24" pos:end="219:52">(<argument pos:start="219:25" pos:end="219:37"><expr pos:start="219:25" pos:end="219:37"><name pos:start="219:25" pos:end="219:37"><name pos:start="219:25" pos:end="219:33">cpu_gpr_a</name><index pos:start="219:34" pos:end="219:37">[<expr pos:start="219:35" pos:end="219:36"><literal type="number" pos:start="219:35" pos:end="219:36">11</literal></expr>]</index></name></expr></argument>, <argument pos:start="219:40" pos:end="219:51"><expr pos:start="219:40" pos:end="219:51"><name pos:start="219:40" pos:end="219:51"><name pos:start="219:40" pos:end="219:42">ctx</name><operator pos:start="219:43" pos:end="219:44">-&gt;</operator><name pos:start="219:45" pos:end="219:51">next_pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:50"><expr pos:start="221:9" pos:end="221:49"><call pos:start="221:9" pos:end="221:49"><name pos:start="221:9" pos:end="221:19">gen_goto_tb</name><argument_list pos:start="221:20" pos:end="221:49">(<argument pos:start="221:21" pos:end="221:23"><expr pos:start="221:21" pos:end="221:23"><name pos:start="221:21" pos:end="221:23">ctx</name></expr></argument>, <argument pos:start="221:26" pos:end="221:26"><expr pos:start="221:26" pos:end="221:26"><literal type="number" pos:start="221:26" pos:end="221:26">0</literal></expr></argument>, <argument pos:start="221:29" pos:end="221:48"><expr pos:start="221:29" pos:end="221:48"><name pos:start="221:29" pos:end="221:35"><name pos:start="221:29" pos:end="221:31">ctx</name><operator pos:start="221:32" pos:end="221:33">-&gt;</operator><name pos:start="221:34" pos:end="221:35">pc</name></name> <operator pos:start="221:37" pos:end="221:37">+</operator> <name pos:start="221:39" pos:end="221:44">offset</name> <operator pos:start="221:46" pos:end="221:46">*</operator> <literal type="number" pos:start="221:48" pos:end="221:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="223:9" pos:end="223:14">break;</break>

<comment type="block" pos:start="225:1" pos:end="225:16">/* BOL format */</comment>

    <case pos:start="227:5" pos:end="227:28">case <expr pos:start="227:10" pos:end="227:27"><name pos:start="227:10" pos:end="227:27">OPCM_32_BRC_EQ_NEQ</name></expr>:</case>

         <if_stmt pos:start="229:10" pos:end="237:10"><if pos:start="229:10" pos:end="233:10">if <condition pos:start="229:13" pos:end="229:61">(<expr pos:start="229:14" pos:end="229:60"><call pos:start="229:14" pos:end="229:41"><name pos:start="229:14" pos:end="229:28">MASK_OP_BRC_OP2</name><argument_list pos:start="229:29" pos:end="229:41">(<argument pos:start="229:30" pos:end="229:40"><expr pos:start="229:30" pos:end="229:40"><name pos:start="229:30" pos:end="229:40"><name pos:start="229:30" pos:end="229:32">ctx</name><operator pos:start="229:33" pos:end="229:34">-&gt;</operator><name pos:start="229:35" pos:end="229:40">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="229:43" pos:end="229:44">==</operator> <name pos:start="229:46" pos:end="229:60">OPC2_32_BRC_JEQ</name></expr>)</condition> <block pos:start="229:63" pos:end="233:10">{<block_content pos:start="231:13" pos:end="231:80">

            <expr_stmt pos:start="231:13" pos:end="231:80"><expr pos:start="231:13" pos:end="231:79"><call pos:start="231:13" pos:end="231:79"><name pos:start="231:13" pos:end="231:28">gen_branch_condi</name><argument_list pos:start="231:29" pos:end="231:79">(<argument pos:start="231:30" pos:end="231:32"><expr pos:start="231:30" pos:end="231:32"><name pos:start="231:30" pos:end="231:32">ctx</name></expr></argument>, <argument pos:start="231:35" pos:end="231:45"><expr pos:start="231:35" pos:end="231:45"><name pos:start="231:35" pos:end="231:45">TCG_COND_EQ</name></expr></argument>, <argument pos:start="231:48" pos:end="231:60"><expr pos:start="231:48" pos:end="231:60"><name pos:start="231:48" pos:end="231:60"><name pos:start="231:48" pos:end="231:56">cpu_gpr_d</name><index pos:start="231:57" pos:end="231:60">[<expr pos:start="231:58" pos:end="231:59"><name pos:start="231:58" pos:end="231:59">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="231:63" pos:end="231:70"><expr pos:start="231:63" pos:end="231:70"><name pos:start="231:63" pos:end="231:70">constant</name></expr></argument>, <argument pos:start="231:73" pos:end="231:78"><expr pos:start="231:73" pos:end="231:78"><name pos:start="231:73" pos:end="231:78">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         </block_content>}</block></if> <else pos:start="233:12" pos:end="237:10">else <block pos:start="233:17" pos:end="237:10">{<block_content pos:start="235:13" pos:end="235:80">

            <expr_stmt pos:start="235:13" pos:end="235:80"><expr pos:start="235:13" pos:end="235:79"><call pos:start="235:13" pos:end="235:79"><name pos:start="235:13" pos:end="235:28">gen_branch_condi</name><argument_list pos:start="235:29" pos:end="235:79">(<argument pos:start="235:30" pos:end="235:32"><expr pos:start="235:30" pos:end="235:32"><name pos:start="235:30" pos:end="235:32">ctx</name></expr></argument>, <argument pos:start="235:35" pos:end="235:45"><expr pos:start="235:35" pos:end="235:45"><name pos:start="235:35" pos:end="235:45">TCG_COND_NE</name></expr></argument>, <argument pos:start="235:48" pos:end="235:60"><expr pos:start="235:48" pos:end="235:60"><name pos:start="235:48" pos:end="235:60"><name pos:start="235:48" pos:end="235:56">cpu_gpr_d</name><index pos:start="235:57" pos:end="235:60">[<expr pos:start="235:58" pos:end="235:59"><name pos:start="235:58" pos:end="235:59">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="235:63" pos:end="235:70"><expr pos:start="235:63" pos:end="235:70"><name pos:start="235:63" pos:end="235:70">constant</name></expr></argument>, <argument pos:start="235:73" pos:end="235:78"><expr pos:start="235:73" pos:end="235:78"><name pos:start="235:73" pos:end="235:78">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         </block_content>}</block></else></if_stmt>

         <break pos:start="239:10" pos:end="239:15">break;</break>

    <case pos:start="241:5" pos:end="241:24">case <expr pos:start="241:10" pos:end="241:23"><name pos:start="241:10" pos:end="241:23">OPCM_32_BRC_GE</name></expr>:</case>

         <if_stmt pos:start="243:10" pos:end="255:10"><if pos:start="243:10" pos:end="247:10">if <condition pos:start="243:13" pos:end="243:60">(<expr pos:start="243:14" pos:end="243:59"><call pos:start="243:14" pos:end="243:41"><name pos:start="243:14" pos:end="243:28">MASK_OP_BRC_OP2</name><argument_list pos:start="243:29" pos:end="243:41">(<argument pos:start="243:30" pos:end="243:40"><expr pos:start="243:30" pos:end="243:40"><name pos:start="243:30" pos:end="243:40"><name pos:start="243:30" pos:end="243:32">ctx</name><operator pos:start="243:33" pos:end="243:34">-&gt;</operator><name pos:start="243:35" pos:end="243:40">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="243:43" pos:end="243:44">==</operator> <name pos:start="243:46" pos:end="243:59">OP2_32_BRC_JGE</name></expr>)</condition> <block pos:start="243:62" pos:end="247:10">{<block_content pos:start="245:13" pos:end="245:80">

            <expr_stmt pos:start="245:13" pos:end="245:80"><expr pos:start="245:13" pos:end="245:79"><call pos:start="245:13" pos:end="245:79"><name pos:start="245:13" pos:end="245:28">gen_branch_condi</name><argument_list pos:start="245:29" pos:end="245:79">(<argument pos:start="245:30" pos:end="245:32"><expr pos:start="245:30" pos:end="245:32"><name pos:start="245:30" pos:end="245:32">ctx</name></expr></argument>, <argument pos:start="245:35" pos:end="245:45"><expr pos:start="245:35" pos:end="245:45"><name pos:start="245:35" pos:end="245:45">TCG_COND_GE</name></expr></argument>, <argument pos:start="245:48" pos:end="245:60"><expr pos:start="245:48" pos:end="245:60"><name pos:start="245:48" pos:end="245:60"><name pos:start="245:48" pos:end="245:56">cpu_gpr_d</name><index pos:start="245:57" pos:end="245:60">[<expr pos:start="245:58" pos:end="245:59"><name pos:start="245:58" pos:end="245:59">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="245:63" pos:end="245:70"><expr pos:start="245:63" pos:end="245:70"><name pos:start="245:63" pos:end="245:70">constant</name></expr></argument>, <argument pos:start="245:73" pos:end="245:78"><expr pos:start="245:73" pos:end="245:78"><name pos:start="245:73" pos:end="245:78">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         </block_content>}</block></if> <else pos:start="247:12" pos:end="255:10">else <block pos:start="247:17" pos:end="255:10">{<block_content pos:start="249:13" pos:end="253:37">

            <expr_stmt pos:start="249:13" pos:end="249:55"><expr pos:start="249:13" pos:end="249:54"><name pos:start="249:13" pos:end="249:20">constant</name> <operator pos:start="249:22" pos:end="249:22">=</operator> <call pos:start="249:24" pos:end="249:54"><name pos:start="249:24" pos:end="249:41">MASK_OP_BRC_CONST4</name><argument_list pos:start="249:42" pos:end="249:54">(<argument pos:start="249:43" pos:end="249:53"><expr pos:start="249:43" pos:end="249:53"><name pos:start="249:43" pos:end="249:53"><name pos:start="249:43" pos:end="249:45">ctx</name><operator pos:start="249:46" pos:end="249:47">-&gt;</operator><name pos:start="249:48" pos:end="249:53">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="253:37"><expr pos:start="251:13" pos:end="253:36"><call pos:start="251:13" pos:end="253:36"><name pos:start="251:13" pos:end="251:28">gen_branch_condi</name><argument_list pos:start="251:29" pos:end="253:36">(<argument pos:start="251:30" pos:end="251:32"><expr pos:start="251:30" pos:end="251:32"><name pos:start="251:30" pos:end="251:32">ctx</name></expr></argument>, <argument pos:start="251:35" pos:end="251:46"><expr pos:start="251:35" pos:end="251:46"><name pos:start="251:35" pos:end="251:46">TCG_COND_GEU</name></expr></argument>, <argument pos:start="251:49" pos:end="251:61"><expr pos:start="251:49" pos:end="251:61"><name pos:start="251:49" pos:end="251:61"><name pos:start="251:49" pos:end="251:57">cpu_gpr_d</name><index pos:start="251:58" pos:end="251:61">[<expr pos:start="251:59" pos:end="251:60"><name pos:start="251:59" pos:end="251:60">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="251:64" pos:end="251:71"><expr pos:start="251:64" pos:end="251:71"><name pos:start="251:64" pos:end="251:71">constant</name></expr></argument>,

                             <argument pos:start="253:30" pos:end="253:35"><expr pos:start="253:30" pos:end="253:35"><name pos:start="253:30" pos:end="253:35">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         </block_content>}</block></else></if_stmt>

         <break pos:start="257:10" pos:end="257:15">break;</break>

    <case pos:start="259:5" pos:end="259:25">case <expr pos:start="259:10" pos:end="259:24"><name pos:start="259:10" pos:end="259:24">OPCM_32_BRC_JLT</name></expr>:</case>

         <if_stmt pos:start="261:10" pos:end="273:10"><if pos:start="261:10" pos:end="265:10">if <condition pos:start="261:13" pos:end="261:61">(<expr pos:start="261:14" pos:end="261:60"><call pos:start="261:14" pos:end="261:41"><name pos:start="261:14" pos:end="261:28">MASK_OP_BRC_OP2</name><argument_list pos:start="261:29" pos:end="261:41">(<argument pos:start="261:30" pos:end="261:40"><expr pos:start="261:30" pos:end="261:40"><name pos:start="261:30" pos:end="261:40"><name pos:start="261:30" pos:end="261:32">ctx</name><operator pos:start="261:33" pos:end="261:34">-&gt;</operator><name pos:start="261:35" pos:end="261:40">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="261:43" pos:end="261:44">==</operator> <name pos:start="261:46" pos:end="261:60">OPC2_32_BRC_JLT</name></expr>)</condition> <block pos:start="261:63" pos:end="265:10">{<block_content pos:start="263:13" pos:end="263:80">

            <expr_stmt pos:start="263:13" pos:end="263:80"><expr pos:start="263:13" pos:end="263:79"><call pos:start="263:13" pos:end="263:79"><name pos:start="263:13" pos:end="263:28">gen_branch_condi</name><argument_list pos:start="263:29" pos:end="263:79">(<argument pos:start="263:30" pos:end="263:32"><expr pos:start="263:30" pos:end="263:32"><name pos:start="263:30" pos:end="263:32">ctx</name></expr></argument>, <argument pos:start="263:35" pos:end="263:45"><expr pos:start="263:35" pos:end="263:45"><name pos:start="263:35" pos:end="263:45">TCG_COND_LT</name></expr></argument>, <argument pos:start="263:48" pos:end="263:60"><expr pos:start="263:48" pos:end="263:60"><name pos:start="263:48" pos:end="263:60"><name pos:start="263:48" pos:end="263:56">cpu_gpr_d</name><index pos:start="263:57" pos:end="263:60">[<expr pos:start="263:58" pos:end="263:59"><name pos:start="263:58" pos:end="263:59">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="263:63" pos:end="263:70"><expr pos:start="263:63" pos:end="263:70"><name pos:start="263:63" pos:end="263:70">constant</name></expr></argument>, <argument pos:start="263:73" pos:end="263:78"><expr pos:start="263:73" pos:end="263:78"><name pos:start="263:73" pos:end="263:78">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         </block_content>}</block></if> <else pos:start="265:12" pos:end="273:10">else <block pos:start="265:17" pos:end="273:10">{<block_content pos:start="267:13" pos:end="271:37">

            <expr_stmt pos:start="267:13" pos:end="267:55"><expr pos:start="267:13" pos:end="267:54"><name pos:start="267:13" pos:end="267:20">constant</name> <operator pos:start="267:22" pos:end="267:22">=</operator> <call pos:start="267:24" pos:end="267:54"><name pos:start="267:24" pos:end="267:41">MASK_OP_BRC_CONST4</name><argument_list pos:start="267:42" pos:end="267:54">(<argument pos:start="267:43" pos:end="267:53"><expr pos:start="267:43" pos:end="267:53"><name pos:start="267:43" pos:end="267:53"><name pos:start="267:43" pos:end="267:45">ctx</name><operator pos:start="267:46" pos:end="267:47">-&gt;</operator><name pos:start="267:48" pos:end="267:53">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="269:13" pos:end="271:37"><expr pos:start="269:13" pos:end="271:36"><call pos:start="269:13" pos:end="271:36"><name pos:start="269:13" pos:end="269:28">gen_branch_condi</name><argument_list pos:start="269:29" pos:end="271:36">(<argument pos:start="269:30" pos:end="269:32"><expr pos:start="269:30" pos:end="269:32"><name pos:start="269:30" pos:end="269:32">ctx</name></expr></argument>, <argument pos:start="269:35" pos:end="269:46"><expr pos:start="269:35" pos:end="269:46"><name pos:start="269:35" pos:end="269:46">TCG_COND_LTU</name></expr></argument>, <argument pos:start="269:49" pos:end="269:61"><expr pos:start="269:49" pos:end="269:61"><name pos:start="269:49" pos:end="269:61"><name pos:start="269:49" pos:end="269:57">cpu_gpr_d</name><index pos:start="269:58" pos:end="269:61">[<expr pos:start="269:59" pos:end="269:60"><name pos:start="269:59" pos:end="269:60">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="269:64" pos:end="269:71"><expr pos:start="269:64" pos:end="269:71"><name pos:start="269:64" pos:end="269:71">constant</name></expr></argument>,

                             <argument pos:start="271:30" pos:end="271:35"><expr pos:start="271:30" pos:end="271:35"><name pos:start="271:30" pos:end="271:35">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         </block_content>}</block></else></if_stmt>

         <break pos:start="275:10" pos:end="275:15">break;</break>

    <case pos:start="277:5" pos:end="277:25">case <expr pos:start="277:10" pos:end="277:24"><name pos:start="277:10" pos:end="277:24">OPCM_32_BRC_JNE</name></expr>:</case>

        <expr_stmt pos:start="279:9" pos:end="279:30"><expr pos:start="279:9" pos:end="279:29"><name pos:start="279:9" pos:end="279:12">temp</name> <operator pos:start="279:14" pos:end="279:14">=</operator> <call pos:start="279:16" pos:end="279:29"><name pos:start="279:16" pos:end="279:27">tcg_temp_new</name><argument_list pos:start="279:28" pos:end="279:29">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="281:9" pos:end="301:9"><if pos:start="281:9" pos:end="291:9">if <condition pos:start="281:12" pos:end="281:61">(<expr pos:start="281:13" pos:end="281:60"><call pos:start="281:13" pos:end="281:40"><name pos:start="281:13" pos:end="281:27">MASK_OP_BRC_OP2</name><argument_list pos:start="281:28" pos:end="281:40">(<argument pos:start="281:29" pos:end="281:39"><expr pos:start="281:29" pos:end="281:39"><name pos:start="281:29" pos:end="281:39"><name pos:start="281:29" pos:end="281:31">ctx</name><operator pos:start="281:32" pos:end="281:33">-&gt;</operator><name pos:start="281:34" pos:end="281:39">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="281:42" pos:end="281:43">==</operator> <name pos:start="281:45" pos:end="281:60">OPC2_32_BRC_JNED</name></expr>)</condition> <block pos:start="281:63" pos:end="291:9">{<block_content pos:start="283:13" pos:end="289:71">

            <expr_stmt pos:start="283:13" pos:end="283:48"><expr pos:start="283:13" pos:end="283:47"><call pos:start="283:13" pos:end="283:47"><name pos:start="283:13" pos:end="283:26">tcg_gen_mov_tl</name><argument_list pos:start="283:27" pos:end="283:47">(<argument pos:start="283:28" pos:end="283:31"><expr pos:start="283:28" pos:end="283:31"><name pos:start="283:28" pos:end="283:31">temp</name></expr></argument>, <argument pos:start="283:34" pos:end="283:46"><expr pos:start="283:34" pos:end="283:46"><name pos:start="283:34" pos:end="283:46"><name pos:start="283:34" pos:end="283:42">cpu_gpr_d</name><index pos:start="283:43" pos:end="283:46">[<expr pos:start="283:44" pos:end="283:45"><name pos:start="283:44" pos:end="283:45">r1</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="285:13" pos:end="285:39">/* subi is unconditional */</comment>

            <expr_stmt pos:start="287:13" pos:end="287:61"><expr pos:start="287:13" pos:end="287:60"><call pos:start="287:13" pos:end="287:60"><name pos:start="287:13" pos:end="287:27">tcg_gen_subi_tl</name><argument_list pos:start="287:28" pos:end="287:60">(<argument pos:start="287:29" pos:end="287:41"><expr pos:start="287:29" pos:end="287:41"><name pos:start="287:29" pos:end="287:41"><name pos:start="287:29" pos:end="287:37">cpu_gpr_d</name><index pos:start="287:38" pos:end="287:41">[<expr pos:start="287:39" pos:end="287:40"><name pos:start="287:39" pos:end="287:40">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="287:44" pos:end="287:56"><expr pos:start="287:44" pos:end="287:56"><name pos:start="287:44" pos:end="287:56"><name pos:start="287:44" pos:end="287:52">cpu_gpr_d</name><index pos:start="287:53" pos:end="287:56">[<expr pos:start="287:54" pos:end="287:55"><name pos:start="287:54" pos:end="287:55">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="287:59" pos:end="287:59"><expr pos:start="287:59" pos:end="287:59"><literal type="number" pos:start="287:59" pos:end="287:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="289:13" pos:end="289:71"><expr pos:start="289:13" pos:end="289:70"><call pos:start="289:13" pos:end="289:70"><name pos:start="289:13" pos:end="289:28">gen_branch_condi</name><argument_list pos:start="289:29" pos:end="289:70">(<argument pos:start="289:30" pos:end="289:32"><expr pos:start="289:30" pos:end="289:32"><name pos:start="289:30" pos:end="289:32">ctx</name></expr></argument>, <argument pos:start="289:35" pos:end="289:45"><expr pos:start="289:35" pos:end="289:45"><name pos:start="289:35" pos:end="289:45">TCG_COND_NE</name></expr></argument>, <argument pos:start="289:48" pos:end="289:51"><expr pos:start="289:48" pos:end="289:51"><name pos:start="289:48" pos:end="289:51">temp</name></expr></argument>, <argument pos:start="289:54" pos:end="289:61"><expr pos:start="289:54" pos:end="289:61"><name pos:start="289:54" pos:end="289:61">constant</name></expr></argument>, <argument pos:start="289:64" pos:end="289:69"><expr pos:start="289:64" pos:end="289:69"><name pos:start="289:64" pos:end="289:69">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="291:11" pos:end="301:9">else <block pos:start="291:16" pos:end="301:9">{<block_content pos:start="293:13" pos:end="299:71">

            <expr_stmt pos:start="293:13" pos:end="293:48"><expr pos:start="293:13" pos:end="293:47"><call pos:start="293:13" pos:end="293:47"><name pos:start="293:13" pos:end="293:26">tcg_gen_mov_tl</name><argument_list pos:start="293:27" pos:end="293:47">(<argument pos:start="293:28" pos:end="293:31"><expr pos:start="293:28" pos:end="293:31"><name pos:start="293:28" pos:end="293:31">temp</name></expr></argument>, <argument pos:start="293:34" pos:end="293:46"><expr pos:start="293:34" pos:end="293:46"><name pos:start="293:34" pos:end="293:46"><name pos:start="293:34" pos:end="293:42">cpu_gpr_d</name><index pos:start="293:43" pos:end="293:46">[<expr pos:start="293:44" pos:end="293:45"><name pos:start="293:44" pos:end="293:45">r1</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="295:13" pos:end="295:39">/* addi is unconditional */</comment>

            <expr_stmt pos:start="297:13" pos:end="297:61"><expr pos:start="297:13" pos:end="297:60"><call pos:start="297:13" pos:end="297:60"><name pos:start="297:13" pos:end="297:27">tcg_gen_addi_tl</name><argument_list pos:start="297:28" pos:end="297:60">(<argument pos:start="297:29" pos:end="297:41"><expr pos:start="297:29" pos:end="297:41"><name pos:start="297:29" pos:end="297:41"><name pos:start="297:29" pos:end="297:37">cpu_gpr_d</name><index pos:start="297:38" pos:end="297:41">[<expr pos:start="297:39" pos:end="297:40"><name pos:start="297:39" pos:end="297:40">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="297:44" pos:end="297:56"><expr pos:start="297:44" pos:end="297:56"><name pos:start="297:44" pos:end="297:56"><name pos:start="297:44" pos:end="297:52">cpu_gpr_d</name><index pos:start="297:53" pos:end="297:56">[<expr pos:start="297:54" pos:end="297:55"><name pos:start="297:54" pos:end="297:55">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="297:59" pos:end="297:59"><expr pos:start="297:59" pos:end="297:59"><literal type="number" pos:start="297:59" pos:end="297:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="299:13" pos:end="299:71"><expr pos:start="299:13" pos:end="299:70"><call pos:start="299:13" pos:end="299:70"><name pos:start="299:13" pos:end="299:28">gen_branch_condi</name><argument_list pos:start="299:29" pos:end="299:70">(<argument pos:start="299:30" pos:end="299:32"><expr pos:start="299:30" pos:end="299:32"><name pos:start="299:30" pos:end="299:32">ctx</name></expr></argument>, <argument pos:start="299:35" pos:end="299:45"><expr pos:start="299:35" pos:end="299:45"><name pos:start="299:35" pos:end="299:45">TCG_COND_NE</name></expr></argument>, <argument pos:start="299:48" pos:end="299:51"><expr pos:start="299:48" pos:end="299:51"><name pos:start="299:48" pos:end="299:51">temp</name></expr></argument>, <argument pos:start="299:54" pos:end="299:61"><expr pos:start="299:54" pos:end="299:61"><name pos:start="299:54" pos:end="299:61">constant</name></expr></argument>, <argument pos:start="299:64" pos:end="299:69"><expr pos:start="299:64" pos:end="299:69"><name pos:start="299:64" pos:end="299:69">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="303:9" pos:end="303:28"><expr pos:start="303:9" pos:end="303:27"><call pos:start="303:9" pos:end="303:27"><name pos:start="303:9" pos:end="303:21">tcg_temp_free</name><argument_list pos:start="303:22" pos:end="303:27">(<argument pos:start="303:23" pos:end="303:26"><expr pos:start="303:23" pos:end="303:26"><name pos:start="303:23" pos:end="303:26">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="305:9" pos:end="305:14">break;</break>

<comment type="block" pos:start="307:1" pos:end="307:16">/* BRN format */</comment>

    <case pos:start="309:5" pos:end="309:25">case <expr pos:start="309:10" pos:end="309:24"><name pos:start="309:10" pos:end="309:24">OPCM_32_BRN_JTT</name></expr>:</case>

        <expr_stmt pos:start="311:9" pos:end="311:39"><expr pos:start="311:9" pos:end="311:38"><name pos:start="311:9" pos:end="311:9">n</name> <operator pos:start="311:11" pos:end="311:11">=</operator> <call pos:start="311:13" pos:end="311:38"><name pos:start="311:13" pos:end="311:25">MASK_OP_BRN_N</name><argument_list pos:start="311:26" pos:end="311:38">(<argument pos:start="311:27" pos:end="311:37"><expr pos:start="311:27" pos:end="311:37"><name pos:start="311:27" pos:end="311:37"><name pos:start="311:27" pos:end="311:29">ctx</name><operator pos:start="311:30" pos:end="311:31">-&gt;</operator><name pos:start="311:32" pos:end="311:37">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="315:9" pos:end="315:30"><expr pos:start="315:9" pos:end="315:29"><name pos:start="315:9" pos:end="315:12">temp</name> <operator pos:start="315:14" pos:end="315:14">=</operator> <call pos:start="315:16" pos:end="315:29"><name pos:start="315:16" pos:end="315:27">tcg_temp_new</name><argument_list pos:start="315:28" pos:end="315:29">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:55"><expr pos:start="317:9" pos:end="317:54"><call pos:start="317:9" pos:end="317:54"><name pos:start="317:9" pos:end="317:23">tcg_gen_andi_tl</name><argument_list pos:start="317:24" pos:end="317:54">(<argument pos:start="317:25" pos:end="317:28"><expr pos:start="317:25" pos:end="317:28"><name pos:start="317:25" pos:end="317:28">temp</name></expr></argument>, <argument pos:start="317:31" pos:end="317:43"><expr pos:start="317:31" pos:end="317:43"><name pos:start="317:31" pos:end="317:43"><name pos:start="317:31" pos:end="317:39">cpu_gpr_d</name><index pos:start="317:40" pos:end="317:43">[<expr pos:start="317:41" pos:end="317:42"><name pos:start="317:41" pos:end="317:42">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="317:46" pos:end="317:53"><expr pos:start="317:46" pos:end="317:53"><operator pos:start="317:46" pos:end="317:46">(</operator><literal type="number" pos:start="317:47" pos:end="317:47">1</literal> <operator pos:start="317:49" pos:end="317:50">&lt;&lt;</operator> <name pos:start="317:52" pos:end="317:52">n</name><operator pos:start="317:53" pos:end="317:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="321:9" pos:end="329:9"><if pos:start="321:9" pos:end="325:9">if <condition pos:start="321:12" pos:end="321:62">(<expr pos:start="321:13" pos:end="321:61"><call pos:start="321:13" pos:end="321:40"><name pos:start="321:13" pos:end="321:27">MASK_OP_BRN_OP2</name><argument_list pos:start="321:28" pos:end="321:40">(<argument pos:start="321:29" pos:end="321:39"><expr pos:start="321:29" pos:end="321:39"><name pos:start="321:29" pos:end="321:39"><name pos:start="321:29" pos:end="321:31">ctx</name><operator pos:start="321:32" pos:end="321:33">-&gt;</operator><name pos:start="321:34" pos:end="321:39">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="321:42" pos:end="321:43">==</operator> <name pos:start="321:45" pos:end="321:61">OPC2_32_BRN_JNZ_T</name></expr>)</condition> <block pos:start="321:64" pos:end="325:9">{<block_content pos:start="323:13" pos:end="323:64">

            <expr_stmt pos:start="323:13" pos:end="323:64"><expr pos:start="323:13" pos:end="323:63"><call pos:start="323:13" pos:end="323:63"><name pos:start="323:13" pos:end="323:28">gen_branch_condi</name><argument_list pos:start="323:29" pos:end="323:63">(<argument pos:start="323:30" pos:end="323:32"><expr pos:start="323:30" pos:end="323:32"><name pos:start="323:30" pos:end="323:32">ctx</name></expr></argument>, <argument pos:start="323:35" pos:end="323:45"><expr pos:start="323:35" pos:end="323:45"><name pos:start="323:35" pos:end="323:45">TCG_COND_NE</name></expr></argument>, <argument pos:start="323:48" pos:end="323:51"><expr pos:start="323:48" pos:end="323:51"><name pos:start="323:48" pos:end="323:51">temp</name></expr></argument>, <argument pos:start="323:54" pos:end="323:54"><expr pos:start="323:54" pos:end="323:54"><literal type="number" pos:start="323:54" pos:end="323:54">0</literal></expr></argument>, <argument pos:start="323:57" pos:end="323:62"><expr pos:start="323:57" pos:end="323:62"><name pos:start="323:57" pos:end="323:62">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="325:11" pos:end="329:9">else <block pos:start="325:16" pos:end="329:9">{<block_content pos:start="327:13" pos:end="327:64">

            <expr_stmt pos:start="327:13" pos:end="327:64"><expr pos:start="327:13" pos:end="327:63"><call pos:start="327:13" pos:end="327:63"><name pos:start="327:13" pos:end="327:28">gen_branch_condi</name><argument_list pos:start="327:29" pos:end="327:63">(<argument pos:start="327:30" pos:end="327:32"><expr pos:start="327:30" pos:end="327:32"><name pos:start="327:30" pos:end="327:32">ctx</name></expr></argument>, <argument pos:start="327:35" pos:end="327:45"><expr pos:start="327:35" pos:end="327:45"><name pos:start="327:35" pos:end="327:45">TCG_COND_EQ</name></expr></argument>, <argument pos:start="327:48" pos:end="327:51"><expr pos:start="327:48" pos:end="327:51"><name pos:start="327:48" pos:end="327:51">temp</name></expr></argument>, <argument pos:start="327:54" pos:end="327:54"><expr pos:start="327:54" pos:end="327:54"><literal type="number" pos:start="327:54" pos:end="327:54">0</literal></expr></argument>, <argument pos:start="327:57" pos:end="327:62"><expr pos:start="327:57" pos:end="327:62"><name pos:start="327:57" pos:end="327:62">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="331:9" pos:end="331:28"><expr pos:start="331:9" pos:end="331:27"><call pos:start="331:9" pos:end="331:27"><name pos:start="331:9" pos:end="331:21">tcg_temp_free</name><argument_list pos:start="331:22" pos:end="331:27">(<argument pos:start="331:23" pos:end="331:26"><expr pos:start="331:23" pos:end="331:26"><name pos:start="331:23" pos:end="331:26">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="333:9" pos:end="333:14">break;</break>

<comment type="block" pos:start="335:1" pos:end="335:16">/* BRR Format */</comment>

    <case pos:start="337:5" pos:end="337:28">case <expr pos:start="337:10" pos:end="337:27"><name pos:start="337:10" pos:end="337:27">OPCM_32_BRR_EQ_NEQ</name></expr>:</case>

        <if_stmt pos:start="339:9" pos:end="351:9"><if pos:start="339:9" pos:end="345:9">if <condition pos:start="339:12" pos:end="339:60">(<expr pos:start="339:13" pos:end="339:59"><call pos:start="339:13" pos:end="339:40"><name pos:start="339:13" pos:end="339:27">MASK_OP_BRR_OP2</name><argument_list pos:start="339:28" pos:end="339:40">(<argument pos:start="339:29" pos:end="339:39"><expr pos:start="339:29" pos:end="339:39"><name pos:start="339:29" pos:end="339:39"><name pos:start="339:29" pos:end="339:31">ctx</name><operator pos:start="339:32" pos:end="339:33">-&gt;</operator><name pos:start="339:34" pos:end="339:39">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="339:42" pos:end="339:43">==</operator> <name pos:start="339:45" pos:end="339:59">OPC2_32_BRR_JEQ</name></expr>)</condition> <block pos:start="339:62" pos:end="345:9">{<block_content pos:start="341:13" pos:end="343:36">

            <expr_stmt pos:start="341:13" pos:end="343:36"><expr pos:start="341:13" pos:end="343:35"><call pos:start="341:13" pos:end="343:35"><name pos:start="341:13" pos:end="341:27">gen_branch_cond</name><argument_list pos:start="341:28" pos:end="343:35">(<argument pos:start="341:29" pos:end="341:31"><expr pos:start="341:29" pos:end="341:31"><name pos:start="341:29" pos:end="341:31">ctx</name></expr></argument>, <argument pos:start="341:34" pos:end="341:44"><expr pos:start="341:34" pos:end="341:44"><name pos:start="341:34" pos:end="341:44">TCG_COND_EQ</name></expr></argument>, <argument pos:start="341:47" pos:end="341:59"><expr pos:start="341:47" pos:end="341:59"><name pos:start="341:47" pos:end="341:59"><name pos:start="341:47" pos:end="341:55">cpu_gpr_d</name><index pos:start="341:56" pos:end="341:59">[<expr pos:start="341:57" pos:end="341:58"><name pos:start="341:57" pos:end="341:58">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="341:62" pos:end="341:74"><expr pos:start="341:62" pos:end="341:74"><name pos:start="341:62" pos:end="341:74"><name pos:start="341:62" pos:end="341:70">cpu_gpr_d</name><index pos:start="341:71" pos:end="341:74">[<expr pos:start="341:72" pos:end="341:73"><name pos:start="341:72" pos:end="341:73">r2</name></expr>]</index></name></expr></argument>,

                            <argument pos:start="343:29" pos:end="343:34"><expr pos:start="343:29" pos:end="343:34"><name pos:start="343:29" pos:end="343:34">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="345:11" pos:end="351:9">else <block pos:start="345:16" pos:end="351:9">{<block_content pos:start="347:13" pos:end="349:36">

            <expr_stmt pos:start="347:13" pos:end="349:36"><expr pos:start="347:13" pos:end="349:35"><call pos:start="347:13" pos:end="349:35"><name pos:start="347:13" pos:end="347:27">gen_branch_cond</name><argument_list pos:start="347:28" pos:end="349:35">(<argument pos:start="347:29" pos:end="347:31"><expr pos:start="347:29" pos:end="347:31"><name pos:start="347:29" pos:end="347:31">ctx</name></expr></argument>, <argument pos:start="347:34" pos:end="347:44"><expr pos:start="347:34" pos:end="347:44"><name pos:start="347:34" pos:end="347:44">TCG_COND_NE</name></expr></argument>, <argument pos:start="347:47" pos:end="347:59"><expr pos:start="347:47" pos:end="347:59"><name pos:start="347:47" pos:end="347:59"><name pos:start="347:47" pos:end="347:55">cpu_gpr_d</name><index pos:start="347:56" pos:end="347:59">[<expr pos:start="347:57" pos:end="347:58"><name pos:start="347:57" pos:end="347:58">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="347:62" pos:end="347:74"><expr pos:start="347:62" pos:end="347:74"><name pos:start="347:62" pos:end="347:74"><name pos:start="347:62" pos:end="347:70">cpu_gpr_d</name><index pos:start="347:71" pos:end="347:74">[<expr pos:start="347:72" pos:end="347:73"><name pos:start="347:72" pos:end="347:73">r2</name></expr>]</index></name></expr></argument>,

                            <argument pos:start="349:29" pos:end="349:34"><expr pos:start="349:29" pos:end="349:34"><name pos:start="349:29" pos:end="349:34">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="353:9" pos:end="353:14">break;</break>

    <case pos:start="355:5" pos:end="355:33">case <expr pos:start="355:10" pos:end="355:32"><name pos:start="355:10" pos:end="355:32">OPCM_32_BRR_ADDR_EQ_NEQ</name></expr>:</case>

        <if_stmt pos:start="357:9" pos:end="369:9"><if pos:start="357:9" pos:end="363:9">if <condition pos:start="357:12" pos:end="357:62">(<expr pos:start="357:13" pos:end="357:61"><call pos:start="357:13" pos:end="357:40"><name pos:start="357:13" pos:end="357:27">MASK_OP_BRR_OP2</name><argument_list pos:start="357:28" pos:end="357:40">(<argument pos:start="357:29" pos:end="357:39"><expr pos:start="357:29" pos:end="357:39"><name pos:start="357:29" pos:end="357:39"><name pos:start="357:29" pos:end="357:31">ctx</name><operator pos:start="357:32" pos:end="357:33">-&gt;</operator><name pos:start="357:34" pos:end="357:39">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="357:42" pos:end="357:43">==</operator> <name pos:start="357:45" pos:end="357:61">OPC2_32_BRR_JEQ_A</name></expr>)</condition> <block pos:start="357:64" pos:end="363:9">{<block_content pos:start="359:13" pos:end="361:36">

            <expr_stmt pos:start="359:13" pos:end="361:36"><expr pos:start="359:13" pos:end="361:35"><call pos:start="359:13" pos:end="361:35"><name pos:start="359:13" pos:end="359:27">gen_branch_cond</name><argument_list pos:start="359:28" pos:end="361:35">(<argument pos:start="359:29" pos:end="359:31"><expr pos:start="359:29" pos:end="359:31"><name pos:start="359:29" pos:end="359:31">ctx</name></expr></argument>, <argument pos:start="359:34" pos:end="359:44"><expr pos:start="359:34" pos:end="359:44"><name pos:start="359:34" pos:end="359:44">TCG_COND_EQ</name></expr></argument>, <argument pos:start="359:47" pos:end="359:59"><expr pos:start="359:47" pos:end="359:59"><name pos:start="359:47" pos:end="359:59"><name pos:start="359:47" pos:end="359:55">cpu_gpr_a</name><index pos:start="359:56" pos:end="359:59">[<expr pos:start="359:57" pos:end="359:58"><name pos:start="359:57" pos:end="359:58">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="359:62" pos:end="359:74"><expr pos:start="359:62" pos:end="359:74"><name pos:start="359:62" pos:end="359:74"><name pos:start="359:62" pos:end="359:70">cpu_gpr_a</name><index pos:start="359:71" pos:end="359:74">[<expr pos:start="359:72" pos:end="359:73"><name pos:start="359:72" pos:end="359:73">r2</name></expr>]</index></name></expr></argument>,

                            <argument pos:start="361:29" pos:end="361:34"><expr pos:start="361:29" pos:end="361:34"><name pos:start="361:29" pos:end="361:34">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="363:11" pos:end="369:9">else <block pos:start="363:16" pos:end="369:9">{<block_content pos:start="365:13" pos:end="367:36">

            <expr_stmt pos:start="365:13" pos:end="367:36"><expr pos:start="365:13" pos:end="367:35"><call pos:start="365:13" pos:end="367:35"><name pos:start="365:13" pos:end="365:27">gen_branch_cond</name><argument_list pos:start="365:28" pos:end="367:35">(<argument pos:start="365:29" pos:end="365:31"><expr pos:start="365:29" pos:end="365:31"><name pos:start="365:29" pos:end="365:31">ctx</name></expr></argument>, <argument pos:start="365:34" pos:end="365:44"><expr pos:start="365:34" pos:end="365:44"><name pos:start="365:34" pos:end="365:44">TCG_COND_NE</name></expr></argument>, <argument pos:start="365:47" pos:end="365:59"><expr pos:start="365:47" pos:end="365:59"><name pos:start="365:47" pos:end="365:59"><name pos:start="365:47" pos:end="365:55">cpu_gpr_a</name><index pos:start="365:56" pos:end="365:59">[<expr pos:start="365:57" pos:end="365:58"><name pos:start="365:57" pos:end="365:58">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="365:62" pos:end="365:74"><expr pos:start="365:62" pos:end="365:74"><name pos:start="365:62" pos:end="365:74"><name pos:start="365:62" pos:end="365:70">cpu_gpr_a</name><index pos:start="365:71" pos:end="365:74">[<expr pos:start="365:72" pos:end="365:73"><name pos:start="365:72" pos:end="365:73">r2</name></expr>]</index></name></expr></argument>,

                            <argument pos:start="367:29" pos:end="367:34"><expr pos:start="367:29" pos:end="367:34"><name pos:start="367:29" pos:end="367:34">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="371:9" pos:end="371:14">break;</break>

    <case pos:start="373:5" pos:end="373:24">case <expr pos:start="373:10" pos:end="373:23"><name pos:start="373:10" pos:end="373:23">OPCM_32_BRR_GE</name></expr>:</case>

        <if_stmt pos:start="375:9" pos:end="387:9"><if pos:start="375:9" pos:end="381:9">if <condition pos:start="375:12" pos:end="375:60">(<expr pos:start="375:13" pos:end="375:59"><call pos:start="375:13" pos:end="375:40"><name pos:start="375:13" pos:end="375:27">MASK_OP_BRR_OP2</name><argument_list pos:start="375:28" pos:end="375:40">(<argument pos:start="375:29" pos:end="375:39"><expr pos:start="375:29" pos:end="375:39"><name pos:start="375:29" pos:end="375:39"><name pos:start="375:29" pos:end="375:31">ctx</name><operator pos:start="375:32" pos:end="375:33">-&gt;</operator><name pos:start="375:34" pos:end="375:39">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="375:42" pos:end="375:43">==</operator> <name pos:start="375:45" pos:end="375:59">OPC2_32_BRR_JGE</name></expr>)</condition> <block pos:start="375:62" pos:end="381:9">{<block_content pos:start="377:13" pos:end="379:36">

            <expr_stmt pos:start="377:13" pos:end="379:36"><expr pos:start="377:13" pos:end="379:35"><call pos:start="377:13" pos:end="379:35"><name pos:start="377:13" pos:end="377:27">gen_branch_cond</name><argument_list pos:start="377:28" pos:end="379:35">(<argument pos:start="377:29" pos:end="377:31"><expr pos:start="377:29" pos:end="377:31"><name pos:start="377:29" pos:end="377:31">ctx</name></expr></argument>, <argument pos:start="377:34" pos:end="377:44"><expr pos:start="377:34" pos:end="377:44"><name pos:start="377:34" pos:end="377:44">TCG_COND_GE</name></expr></argument>, <argument pos:start="377:47" pos:end="377:59"><expr pos:start="377:47" pos:end="377:59"><name pos:start="377:47" pos:end="377:59"><name pos:start="377:47" pos:end="377:55">cpu_gpr_d</name><index pos:start="377:56" pos:end="377:59">[<expr pos:start="377:57" pos:end="377:58"><name pos:start="377:57" pos:end="377:58">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="377:62" pos:end="377:74"><expr pos:start="377:62" pos:end="377:74"><name pos:start="377:62" pos:end="377:74"><name pos:start="377:62" pos:end="377:70">cpu_gpr_d</name><index pos:start="377:71" pos:end="377:74">[<expr pos:start="377:72" pos:end="377:73"><name pos:start="377:72" pos:end="377:73">r2</name></expr>]</index></name></expr></argument>,

                            <argument pos:start="379:29" pos:end="379:34"><expr pos:start="379:29" pos:end="379:34"><name pos:start="379:29" pos:end="379:34">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="381:11" pos:end="387:9">else <block pos:start="381:16" pos:end="387:9">{<block_content pos:start="383:13" pos:end="385:36">

            <expr_stmt pos:start="383:13" pos:end="385:36"><expr pos:start="383:13" pos:end="385:35"><call pos:start="383:13" pos:end="385:35"><name pos:start="383:13" pos:end="383:27">gen_branch_cond</name><argument_list pos:start="383:28" pos:end="385:35">(<argument pos:start="383:29" pos:end="383:31"><expr pos:start="383:29" pos:end="383:31"><name pos:start="383:29" pos:end="383:31">ctx</name></expr></argument>, <argument pos:start="383:34" pos:end="383:45"><expr pos:start="383:34" pos:end="383:45"><name pos:start="383:34" pos:end="383:45">TCG_COND_GEU</name></expr></argument>, <argument pos:start="383:48" pos:end="383:60"><expr pos:start="383:48" pos:end="383:60"><name pos:start="383:48" pos:end="383:60"><name pos:start="383:48" pos:end="383:56">cpu_gpr_d</name><index pos:start="383:57" pos:end="383:60">[<expr pos:start="383:58" pos:end="383:59"><name pos:start="383:58" pos:end="383:59">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="383:63" pos:end="383:75"><expr pos:start="383:63" pos:end="383:75"><name pos:start="383:63" pos:end="383:75"><name pos:start="383:63" pos:end="383:71">cpu_gpr_d</name><index pos:start="383:72" pos:end="383:75">[<expr pos:start="383:73" pos:end="383:74"><name pos:start="383:73" pos:end="383:74">r2</name></expr>]</index></name></expr></argument>,

                            <argument pos:start="385:29" pos:end="385:34"><expr pos:start="385:29" pos:end="385:34"><name pos:start="385:29" pos:end="385:34">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="389:9" pos:end="389:14">break;</break>

    <case pos:start="391:5" pos:end="391:25">case <expr pos:start="391:10" pos:end="391:24"><name pos:start="391:10" pos:end="391:24">OPCM_32_BRR_JLT</name></expr>:</case>

        <if_stmt pos:start="393:9" pos:end="405:9"><if pos:start="393:9" pos:end="399:9">if <condition pos:start="393:12" pos:end="393:60">(<expr pos:start="393:13" pos:end="393:59"><call pos:start="393:13" pos:end="393:40"><name pos:start="393:13" pos:end="393:27">MASK_OP_BRR_OP2</name><argument_list pos:start="393:28" pos:end="393:40">(<argument pos:start="393:29" pos:end="393:39"><expr pos:start="393:29" pos:end="393:39"><name pos:start="393:29" pos:end="393:39"><name pos:start="393:29" pos:end="393:31">ctx</name><operator pos:start="393:32" pos:end="393:33">-&gt;</operator><name pos:start="393:34" pos:end="393:39">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="393:42" pos:end="393:43">==</operator> <name pos:start="393:45" pos:end="393:59">OPC2_32_BRR_JLT</name></expr>)</condition> <block pos:start="393:62" pos:end="399:9">{<block_content pos:start="395:13" pos:end="397:36">

            <expr_stmt pos:start="395:13" pos:end="397:36"><expr pos:start="395:13" pos:end="397:35"><call pos:start="395:13" pos:end="397:35"><name pos:start="395:13" pos:end="395:27">gen_branch_cond</name><argument_list pos:start="395:28" pos:end="397:35">(<argument pos:start="395:29" pos:end="395:31"><expr pos:start="395:29" pos:end="395:31"><name pos:start="395:29" pos:end="395:31">ctx</name></expr></argument>, <argument pos:start="395:34" pos:end="395:44"><expr pos:start="395:34" pos:end="395:44"><name pos:start="395:34" pos:end="395:44">TCG_COND_LT</name></expr></argument>, <argument pos:start="395:47" pos:end="395:59"><expr pos:start="395:47" pos:end="395:59"><name pos:start="395:47" pos:end="395:59"><name pos:start="395:47" pos:end="395:55">cpu_gpr_d</name><index pos:start="395:56" pos:end="395:59">[<expr pos:start="395:57" pos:end="395:58"><name pos:start="395:57" pos:end="395:58">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="395:62" pos:end="395:74"><expr pos:start="395:62" pos:end="395:74"><name pos:start="395:62" pos:end="395:74"><name pos:start="395:62" pos:end="395:70">cpu_gpr_d</name><index pos:start="395:71" pos:end="395:74">[<expr pos:start="395:72" pos:end="395:73"><name pos:start="395:72" pos:end="395:73">r2</name></expr>]</index></name></expr></argument>,

                            <argument pos:start="397:29" pos:end="397:34"><expr pos:start="397:29" pos:end="397:34"><name pos:start="397:29" pos:end="397:34">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="399:11" pos:end="405:9">else <block pos:start="399:16" pos:end="405:9">{<block_content pos:start="401:13" pos:end="403:36">

            <expr_stmt pos:start="401:13" pos:end="403:36"><expr pos:start="401:13" pos:end="403:35"><call pos:start="401:13" pos:end="403:35"><name pos:start="401:13" pos:end="401:27">gen_branch_cond</name><argument_list pos:start="401:28" pos:end="403:35">(<argument pos:start="401:29" pos:end="401:31"><expr pos:start="401:29" pos:end="401:31"><name pos:start="401:29" pos:end="401:31">ctx</name></expr></argument>, <argument pos:start="401:34" pos:end="401:45"><expr pos:start="401:34" pos:end="401:45"><name pos:start="401:34" pos:end="401:45">TCG_COND_LTU</name></expr></argument>, <argument pos:start="401:48" pos:end="401:60"><expr pos:start="401:48" pos:end="401:60"><name pos:start="401:48" pos:end="401:60"><name pos:start="401:48" pos:end="401:56">cpu_gpr_d</name><index pos:start="401:57" pos:end="401:60">[<expr pos:start="401:58" pos:end="401:59"><name pos:start="401:58" pos:end="401:59">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="401:63" pos:end="401:75"><expr pos:start="401:63" pos:end="401:75"><name pos:start="401:63" pos:end="401:75"><name pos:start="401:63" pos:end="401:71">cpu_gpr_d</name><index pos:start="401:72" pos:end="401:75">[<expr pos:start="401:73" pos:end="401:74"><name pos:start="401:73" pos:end="401:74">r2</name></expr>]</index></name></expr></argument>,

                            <argument pos:start="403:29" pos:end="403:34"><expr pos:start="403:29" pos:end="403:34"><name pos:start="403:29" pos:end="403:34">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="407:9" pos:end="407:14">break;</break>

    <case pos:start="409:5" pos:end="409:26">case <expr pos:start="409:10" pos:end="409:25"><name pos:start="409:10" pos:end="409:25">OPCM_32_BRR_LOOP</name></expr>:</case>

        <if_stmt pos:start="411:9" pos:end="421:9"><if pos:start="411:9" pos:end="415:9">if <condition pos:start="411:12" pos:end="411:61">(<expr pos:start="411:13" pos:end="411:60"><call pos:start="411:13" pos:end="411:40"><name pos:start="411:13" pos:end="411:27">MASK_OP_BRR_OP2</name><argument_list pos:start="411:28" pos:end="411:40">(<argument pos:start="411:29" pos:end="411:39"><expr pos:start="411:29" pos:end="411:39"><name pos:start="411:29" pos:end="411:39"><name pos:start="411:29" pos:end="411:31">ctx</name><operator pos:start="411:32" pos:end="411:33">-&gt;</operator><name pos:start="411:34" pos:end="411:39">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="411:42" pos:end="411:43">==</operator> <name pos:start="411:45" pos:end="411:60">OPC2_32_BRR_LOOP</name></expr>)</condition> <block pos:start="411:63" pos:end="415:9">{<block_content pos:start="413:13" pos:end="413:42">

            <expr_stmt pos:start="413:13" pos:end="413:42"><expr pos:start="413:13" pos:end="413:41"><call pos:start="413:13" pos:end="413:41"><name pos:start="413:13" pos:end="413:20">gen_loop</name><argument_list pos:start="413:21" pos:end="413:41">(<argument pos:start="413:22" pos:end="413:24"><expr pos:start="413:22" pos:end="413:24"><name pos:start="413:22" pos:end="413:24">ctx</name></expr></argument>, <argument pos:start="413:27" pos:end="413:28"><expr pos:start="413:27" pos:end="413:28"><name pos:start="413:27" pos:end="413:28">r2</name></expr></argument>, <argument pos:start="413:31" pos:end="413:40"><expr pos:start="413:31" pos:end="413:40"><name pos:start="413:31" pos:end="413:36">offset</name> <operator pos:start="413:38" pos:end="413:38">*</operator> <literal type="number" pos:start="413:40" pos:end="413:40">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="415:11" pos:end="421:9">else <block pos:start="415:16" pos:end="421:9">{<block_content pos:start="419:13" pos:end="419:54">

            <comment type="block" pos:start="417:13" pos:end="417:35">/* OPC2_32_BRR_LOOPU */</comment>

            <expr_stmt pos:start="419:13" pos:end="419:54"><expr pos:start="419:13" pos:end="419:53"><call pos:start="419:13" pos:end="419:53"><name pos:start="419:13" pos:end="419:23">gen_goto_tb</name><argument_list pos:start="419:24" pos:end="419:53">(<argument pos:start="419:25" pos:end="419:27"><expr pos:start="419:25" pos:end="419:27"><name pos:start="419:25" pos:end="419:27">ctx</name></expr></argument>, <argument pos:start="419:30" pos:end="419:30"><expr pos:start="419:30" pos:end="419:30"><literal type="number" pos:start="419:30" pos:end="419:30">0</literal></expr></argument>, <argument pos:start="419:33" pos:end="419:52"><expr pos:start="419:33" pos:end="419:52"><name pos:start="419:33" pos:end="419:39"><name pos:start="419:33" pos:end="419:35">ctx</name><operator pos:start="419:36" pos:end="419:37">-&gt;</operator><name pos:start="419:38" pos:end="419:39">pc</name></name> <operator pos:start="419:41" pos:end="419:41">+</operator> <name pos:start="419:43" pos:end="419:48">offset</name> <operator pos:start="419:50" pos:end="419:50">*</operator> <literal type="number" pos:start="419:52" pos:end="419:52">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="423:9" pos:end="423:14">break;</break>

    <case pos:start="425:5" pos:end="425:25">case <expr pos:start="425:10" pos:end="425:24"><name pos:start="425:10" pos:end="425:24">OPCM_32_BRR_JNE</name></expr>:</case>

        <expr_stmt pos:start="427:9" pos:end="427:30"><expr pos:start="427:9" pos:end="427:29"><name pos:start="427:9" pos:end="427:12">temp</name> <operator pos:start="427:14" pos:end="427:14">=</operator> <call pos:start="427:16" pos:end="427:29"><name pos:start="427:16" pos:end="427:27">tcg_temp_new</name><argument_list pos:start="427:28" pos:end="427:29">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="429:9" pos:end="429:31"><expr pos:start="429:9" pos:end="429:30"><name pos:start="429:9" pos:end="429:13">temp2</name> <operator pos:start="429:15" pos:end="429:15">=</operator> <call pos:start="429:17" pos:end="429:30"><name pos:start="429:17" pos:end="429:28">tcg_temp_new</name><argument_list pos:start="429:29" pos:end="429:30">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="431:9" pos:end="459:9"><if pos:start="431:9" pos:end="445:9">if <condition pos:start="431:12" pos:end="431:61">(<expr pos:start="431:13" pos:end="431:60"><call pos:start="431:13" pos:end="431:40"><name pos:start="431:13" pos:end="431:27">MASK_OP_BRC_OP2</name><argument_list pos:start="431:28" pos:end="431:40">(<argument pos:start="431:29" pos:end="431:39"><expr pos:start="431:29" pos:end="431:39"><name pos:start="431:29" pos:end="431:39"><name pos:start="431:29" pos:end="431:31">ctx</name><operator pos:start="431:32" pos:end="431:33">-&gt;</operator><name pos:start="431:34" pos:end="431:39">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="431:42" pos:end="431:43">==</operator> <name pos:start="431:45" pos:end="431:60">OPC2_32_BRR_JNED</name></expr>)</condition> <block pos:start="431:63" pos:end="445:9">{<block_content pos:start="433:13" pos:end="443:67">

            <expr_stmt pos:start="433:13" pos:end="433:48"><expr pos:start="433:13" pos:end="433:47"><call pos:start="433:13" pos:end="433:47"><name pos:start="433:13" pos:end="433:26">tcg_gen_mov_tl</name><argument_list pos:start="433:27" pos:end="433:47">(<argument pos:start="433:28" pos:end="433:31"><expr pos:start="433:28" pos:end="433:31"><name pos:start="433:28" pos:end="433:31">temp</name></expr></argument>, <argument pos:start="433:34" pos:end="433:46"><expr pos:start="433:34" pos:end="433:46"><name pos:start="433:34" pos:end="433:46"><name pos:start="433:34" pos:end="433:42">cpu_gpr_d</name><index pos:start="433:43" pos:end="433:46">[<expr pos:start="433:44" pos:end="433:45"><name pos:start="433:44" pos:end="433:45">r1</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="435:13" pos:end="435:77">/* also save r2, in case of r1 == r2, so r2 is not decremented */</comment>

            <expr_stmt pos:start="437:13" pos:end="437:49"><expr pos:start="437:13" pos:end="437:48"><call pos:start="437:13" pos:end="437:48"><name pos:start="437:13" pos:end="437:26">tcg_gen_mov_tl</name><argument_list pos:start="437:27" pos:end="437:48">(<argument pos:start="437:28" pos:end="437:32"><expr pos:start="437:28" pos:end="437:32"><name pos:start="437:28" pos:end="437:32">temp2</name></expr></argument>, <argument pos:start="437:35" pos:end="437:47"><expr pos:start="437:35" pos:end="437:47"><name pos:start="437:35" pos:end="437:47"><name pos:start="437:35" pos:end="437:43">cpu_gpr_d</name><index pos:start="437:44" pos:end="437:47">[<expr pos:start="437:45" pos:end="437:46"><name pos:start="437:45" pos:end="437:46">r2</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="439:13" pos:end="439:39">/* subi is unconditional */</comment>

            <expr_stmt pos:start="441:13" pos:end="441:61"><expr pos:start="441:13" pos:end="441:60"><call pos:start="441:13" pos:end="441:60"><name pos:start="441:13" pos:end="441:27">tcg_gen_subi_tl</name><argument_list pos:start="441:28" pos:end="441:60">(<argument pos:start="441:29" pos:end="441:41"><expr pos:start="441:29" pos:end="441:41"><name pos:start="441:29" pos:end="441:41"><name pos:start="441:29" pos:end="441:37">cpu_gpr_d</name><index pos:start="441:38" pos:end="441:41">[<expr pos:start="441:39" pos:end="441:40"><name pos:start="441:39" pos:end="441:40">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="441:44" pos:end="441:56"><expr pos:start="441:44" pos:end="441:56"><name pos:start="441:44" pos:end="441:56"><name pos:start="441:44" pos:end="441:52">cpu_gpr_d</name><index pos:start="441:53" pos:end="441:56">[<expr pos:start="441:54" pos:end="441:55"><name pos:start="441:54" pos:end="441:55">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="441:59" pos:end="441:59"><expr pos:start="441:59" pos:end="441:59"><literal type="number" pos:start="441:59" pos:end="441:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="443:13" pos:end="443:67"><expr pos:start="443:13" pos:end="443:66"><call pos:start="443:13" pos:end="443:66"><name pos:start="443:13" pos:end="443:27">gen_branch_cond</name><argument_list pos:start="443:28" pos:end="443:66">(<argument pos:start="443:29" pos:end="443:31"><expr pos:start="443:29" pos:end="443:31"><name pos:start="443:29" pos:end="443:31">ctx</name></expr></argument>, <argument pos:start="443:34" pos:end="443:44"><expr pos:start="443:34" pos:end="443:44"><name pos:start="443:34" pos:end="443:44">TCG_COND_NE</name></expr></argument>, <argument pos:start="443:47" pos:end="443:50"><expr pos:start="443:47" pos:end="443:50"><name pos:start="443:47" pos:end="443:50">temp</name></expr></argument>, <argument pos:start="443:53" pos:end="443:57"><expr pos:start="443:53" pos:end="443:57"><name pos:start="443:53" pos:end="443:57">temp2</name></expr></argument>, <argument pos:start="443:60" pos:end="443:65"><expr pos:start="443:60" pos:end="443:65"><name pos:start="443:60" pos:end="443:65">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="445:11" pos:end="459:9">else <block pos:start="445:16" pos:end="459:9">{<block_content pos:start="447:13" pos:end="457:67">

            <expr_stmt pos:start="447:13" pos:end="447:48"><expr pos:start="447:13" pos:end="447:47"><call pos:start="447:13" pos:end="447:47"><name pos:start="447:13" pos:end="447:26">tcg_gen_mov_tl</name><argument_list pos:start="447:27" pos:end="447:47">(<argument pos:start="447:28" pos:end="447:31"><expr pos:start="447:28" pos:end="447:31"><name pos:start="447:28" pos:end="447:31">temp</name></expr></argument>, <argument pos:start="447:34" pos:end="447:46"><expr pos:start="447:34" pos:end="447:46"><name pos:start="447:34" pos:end="447:46"><name pos:start="447:34" pos:end="447:42">cpu_gpr_d</name><index pos:start="447:43" pos:end="447:46">[<expr pos:start="447:44" pos:end="447:45"><name pos:start="447:44" pos:end="447:45">r1</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="449:13" pos:end="449:77">/* also save r2, in case of r1 == r2, so r2 is not decremented */</comment>

            <expr_stmt pos:start="451:13" pos:end="451:49"><expr pos:start="451:13" pos:end="451:48"><call pos:start="451:13" pos:end="451:48"><name pos:start="451:13" pos:end="451:26">tcg_gen_mov_tl</name><argument_list pos:start="451:27" pos:end="451:48">(<argument pos:start="451:28" pos:end="451:32"><expr pos:start="451:28" pos:end="451:32"><name pos:start="451:28" pos:end="451:32">temp2</name></expr></argument>, <argument pos:start="451:35" pos:end="451:47"><expr pos:start="451:35" pos:end="451:47"><name pos:start="451:35" pos:end="451:47"><name pos:start="451:35" pos:end="451:43">cpu_gpr_d</name><index pos:start="451:44" pos:end="451:47">[<expr pos:start="451:45" pos:end="451:46"><name pos:start="451:45" pos:end="451:46">r2</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="453:13" pos:end="453:39">/* addi is unconditional */</comment>

            <expr_stmt pos:start="455:13" pos:end="455:61"><expr pos:start="455:13" pos:end="455:60"><call pos:start="455:13" pos:end="455:60"><name pos:start="455:13" pos:end="455:27">tcg_gen_addi_tl</name><argument_list pos:start="455:28" pos:end="455:60">(<argument pos:start="455:29" pos:end="455:41"><expr pos:start="455:29" pos:end="455:41"><name pos:start="455:29" pos:end="455:41"><name pos:start="455:29" pos:end="455:37">cpu_gpr_d</name><index pos:start="455:38" pos:end="455:41">[<expr pos:start="455:39" pos:end="455:40"><name pos:start="455:39" pos:end="455:40">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="455:44" pos:end="455:56"><expr pos:start="455:44" pos:end="455:56"><name pos:start="455:44" pos:end="455:56"><name pos:start="455:44" pos:end="455:52">cpu_gpr_d</name><index pos:start="455:53" pos:end="455:56">[<expr pos:start="455:54" pos:end="455:55"><name pos:start="455:54" pos:end="455:55">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="455:59" pos:end="455:59"><expr pos:start="455:59" pos:end="455:59"><literal type="number" pos:start="455:59" pos:end="455:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="457:13" pos:end="457:67"><expr pos:start="457:13" pos:end="457:66"><call pos:start="457:13" pos:end="457:66"><name pos:start="457:13" pos:end="457:27">gen_branch_cond</name><argument_list pos:start="457:28" pos:end="457:66">(<argument pos:start="457:29" pos:end="457:31"><expr pos:start="457:29" pos:end="457:31"><name pos:start="457:29" pos:end="457:31">ctx</name></expr></argument>, <argument pos:start="457:34" pos:end="457:44"><expr pos:start="457:34" pos:end="457:44"><name pos:start="457:34" pos:end="457:44">TCG_COND_NE</name></expr></argument>, <argument pos:start="457:47" pos:end="457:50"><expr pos:start="457:47" pos:end="457:50"><name pos:start="457:47" pos:end="457:50">temp</name></expr></argument>, <argument pos:start="457:53" pos:end="457:57"><expr pos:start="457:53" pos:end="457:57"><name pos:start="457:53" pos:end="457:57">temp2</name></expr></argument>, <argument pos:start="457:60" pos:end="457:65"><expr pos:start="457:60" pos:end="457:65"><name pos:start="457:60" pos:end="457:65">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="461:9" pos:end="461:28"><expr pos:start="461:9" pos:end="461:27"><call pos:start="461:9" pos:end="461:27"><name pos:start="461:9" pos:end="461:21">tcg_temp_free</name><argument_list pos:start="461:22" pos:end="461:27">(<argument pos:start="461:23" pos:end="461:26"><expr pos:start="461:23" pos:end="461:26"><name pos:start="461:23" pos:end="461:26">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="463:9" pos:end="463:29"><expr pos:start="463:9" pos:end="463:28"><call pos:start="463:9" pos:end="463:28"><name pos:start="463:9" pos:end="463:21">tcg_temp_free</name><argument_list pos:start="463:22" pos:end="463:28">(<argument pos:start="463:23" pos:end="463:27"><expr pos:start="463:23" pos:end="463:27"><name pos:start="463:23" pos:end="463:27">temp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="465:9" pos:end="465:14">break;</break>

    <case pos:start="467:5" pos:end="467:25">case <expr pos:start="467:10" pos:end="467:24"><name pos:start="467:10" pos:end="467:24">OPCM_32_BRR_JNZ</name></expr>:</case>

        <if_stmt pos:start="469:9" pos:end="477:9"><if pos:start="469:9" pos:end="473:9">if <condition pos:start="469:12" pos:end="469:62">(<expr pos:start="469:13" pos:end="469:61"><call pos:start="469:13" pos:end="469:40"><name pos:start="469:13" pos:end="469:27">MASK_OP_BRR_OP2</name><argument_list pos:start="469:28" pos:end="469:40">(<argument pos:start="469:29" pos:end="469:39"><expr pos:start="469:29" pos:end="469:39"><name pos:start="469:29" pos:end="469:39"><name pos:start="469:29" pos:end="469:31">ctx</name><operator pos:start="469:32" pos:end="469:33">-&gt;</operator><name pos:start="469:34" pos:end="469:39">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="469:42" pos:end="469:43">==</operator> <name pos:start="469:45" pos:end="469:61">OPC2_32_BRR_JNZ_A</name></expr>)</condition> <block pos:start="469:64" pos:end="473:9">{<block_content pos:start="471:13" pos:end="471:73">

            <expr_stmt pos:start="471:13" pos:end="471:73"><expr pos:start="471:13" pos:end="471:72"><call pos:start="471:13" pos:end="471:72"><name pos:start="471:13" pos:end="471:28">gen_branch_condi</name><argument_list pos:start="471:29" pos:end="471:72">(<argument pos:start="471:30" pos:end="471:32"><expr pos:start="471:30" pos:end="471:32"><name pos:start="471:30" pos:end="471:32">ctx</name></expr></argument>, <argument pos:start="471:35" pos:end="471:45"><expr pos:start="471:35" pos:end="471:45"><name pos:start="471:35" pos:end="471:45">TCG_COND_NE</name></expr></argument>, <argument pos:start="471:48" pos:end="471:60"><expr pos:start="471:48" pos:end="471:60"><name pos:start="471:48" pos:end="471:60"><name pos:start="471:48" pos:end="471:56">cpu_gpr_a</name><index pos:start="471:57" pos:end="471:60">[<expr pos:start="471:58" pos:end="471:59"><name pos:start="471:58" pos:end="471:59">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="471:63" pos:end="471:63"><expr pos:start="471:63" pos:end="471:63"><literal type="number" pos:start="471:63" pos:end="471:63">0</literal></expr></argument>, <argument pos:start="471:66" pos:end="471:71"><expr pos:start="471:66" pos:end="471:71"><name pos:start="471:66" pos:end="471:71">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="473:11" pos:end="477:9">else <block pos:start="473:16" pos:end="477:9">{<block_content pos:start="475:13" pos:end="475:73">

            <expr_stmt pos:start="475:13" pos:end="475:73"><expr pos:start="475:13" pos:end="475:72"><call pos:start="475:13" pos:end="475:72"><name pos:start="475:13" pos:end="475:28">gen_branch_condi</name><argument_list pos:start="475:29" pos:end="475:72">(<argument pos:start="475:30" pos:end="475:32"><expr pos:start="475:30" pos:end="475:32"><name pos:start="475:30" pos:end="475:32">ctx</name></expr></argument>, <argument pos:start="475:35" pos:end="475:45"><expr pos:start="475:35" pos:end="475:45"><name pos:start="475:35" pos:end="475:45">TCG_COND_EQ</name></expr></argument>, <argument pos:start="475:48" pos:end="475:60"><expr pos:start="475:48" pos:end="475:60"><name pos:start="475:48" pos:end="475:60"><name pos:start="475:48" pos:end="475:56">cpu_gpr_a</name><index pos:start="475:57" pos:end="475:60">[<expr pos:start="475:58" pos:end="475:59"><name pos:start="475:58" pos:end="475:59">r1</name></expr>]</index></name></expr></argument>, <argument pos:start="475:63" pos:end="475:63"><expr pos:start="475:63" pos:end="475:63"><literal type="number" pos:start="475:63" pos:end="475:63">0</literal></expr></argument>, <argument pos:start="475:66" pos:end="475:71"><expr pos:start="475:66" pos:end="475:71"><name pos:start="475:66" pos:end="475:71">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="479:9" pos:end="479:14">break;</break>

    <default pos:start="481:5" pos:end="481:12">default:</default>

        <expr_stmt pos:start="483:9" pos:end="483:48"><expr pos:start="483:9" pos:end="483:47"><call pos:start="483:9" pos:end="483:47"><name pos:start="483:9" pos:end="483:14">printf</name><argument_list pos:start="483:15" pos:end="483:47">(<argument pos:start="483:16" pos:end="483:37"><expr pos:start="483:16" pos:end="483:37"><literal type="string" pos:start="483:16" pos:end="483:37">"Branch Error at %x\n"</literal></expr></argument>, <argument pos:start="483:40" pos:end="483:46"><expr pos:start="483:40" pos:end="483:46"><name pos:start="483:40" pos:end="483:46"><name pos:start="483:40" pos:end="483:42">ctx</name><operator pos:start="483:43" pos:end="483:44">-&gt;</operator><name pos:start="483:45" pos:end="483:46">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

    <expr_stmt pos:start="487:5" pos:end="487:28"><expr pos:start="487:5" pos:end="487:27"><name pos:start="487:5" pos:end="487:15"><name pos:start="487:5" pos:end="487:7">ctx</name><operator pos:start="487:8" pos:end="487:9">-&gt;</operator><name pos:start="487:10" pos:end="487:15">bstate</name></name> <operator pos:start="487:17" pos:end="487:17">=</operator> <name pos:start="487:19" pos:end="487:27">BS_BRANCH</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
