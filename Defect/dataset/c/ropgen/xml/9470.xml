<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9470.c" pos:tabs="8"><function pos:start="1:1" pos:end="205:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_b_mbs</name><parameter_list pos:start="1:24" pos:end="1:38">(<parameter pos:start="1:25" pos:end="1:37"><decl pos:start="1:25" pos:end="1:37"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:34">VC9Context</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">v</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="205:1">{<block_content pos:start="5:5" pos:end="203:13">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:29">= <expr pos:start="5:25" pos:end="5:29"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:29"><name pos:start="5:26" pos:end="5:26">v</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">GetBitContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">gb</name> <init pos:start="7:23" pos:end="7:32">= <expr pos:start="7:25" pos:end="7:32"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:32"><name pos:start="7:26" pos:end="7:26">v</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:29">s</name><operator pos:start="7:30" pos:end="7:30">.</operator><name pos:start="7:31" pos:end="7:32">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:59"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:18">current_mb</name> <init pos:start="9:20" pos:end="9:22">= <expr pos:start="9:22" pos:end="9:22"><literal type="number" pos:start="9:22" pos:end="9:22">0</literal></expr></init></decl>, <decl pos:start="9:25" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:25" pos:end="9:25">i</name></decl> <comment type="block" pos:start="9:27" pos:end="9:58">/* MB / B postion information */</comment>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">b_mv_type</name> <init pos:start="11:19" pos:end="11:37">= <expr pos:start="11:21" pos:end="11:37"><name pos:start="11:21" pos:end="11:37">BMV_TYPE_BACKWARD</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">mquant</name></decl>, <decl pos:start="13:17" pos:end="13:22"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:17" pos:end="13:22">mqdiff</name></decl>;</decl_stmt> <comment type="block" pos:start="13:25" pos:end="13:44">/* MB quant stuff */</comment>

    <decl_stmt pos:start="15:5" pos:end="15:13"><decl pos:start="15:5" pos:end="15:12"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">ttmb</name></decl>;</decl_stmt> <comment type="block" pos:start="15:15" pos:end="15:45">/* MacroBlock transform type */</comment>

    

    <decl_stmt pos:start="19:5" pos:end="21:49"><decl pos:start="19:5" pos:end="19:57"><type pos:start="19:5" pos:end="19:20"><specifier pos:start="19:5" pos:end="19:10">static</specifier> <specifier pos:start="19:12" pos:end="19:16">const</specifier> <name pos:start="19:18" pos:end="19:20">int</name></type> <name pos:start="19:22" pos:end="19:34"><name pos:start="19:22" pos:end="19:31">size_table</name><index pos:start="19:32" pos:end="19:34">[<expr pos:start="19:33" pos:end="19:33"><literal type="number" pos:start="19:33" pos:end="19:33">6</literal></expr>]</index></name> <init pos:start="19:36" pos:end="19:57">= <expr pos:start="19:38" pos:end="19:57"><block pos:start="19:38" pos:end="19:57">{ <expr pos:start="19:40" pos:end="19:40"><literal type="number" pos:start="19:40" pos:end="19:40">0</literal></expr>, <expr pos:start="19:43" pos:end="19:43"><literal type="number" pos:start="19:43" pos:end="19:43">2</literal></expr>, <expr pos:start="19:46" pos:end="19:46"><literal type="number" pos:start="19:46" pos:end="19:46">3</literal></expr>, <expr pos:start="19:49" pos:end="19:49"><literal type="number" pos:start="19:49" pos:end="19:49">4</literal></expr>, <expr pos:start="19:52" pos:end="19:52"><literal type="number" pos:start="19:52" pos:end="19:52">5</literal></expr>, <expr pos:start="19:55" pos:end="19:55"><literal type="number" pos:start="19:55" pos:end="19:55">8</literal></expr> }</block></expr></init></decl>,

        <decl pos:start="21:9" pos:end="21:48"><type ref="prev" pos:start="19:5" pos:end="19:20"/><name pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:20">offset_table</name><index pos:start="21:21" pos:end="21:23">[<expr pos:start="21:22" pos:end="21:22"><literal type="number" pos:start="21:22" pos:end="21:22">6</literal></expr>]</index></name> <init pos:start="21:25" pos:end="21:48">= <expr pos:start="21:27" pos:end="21:48"><block pos:start="21:27" pos:end="21:48">{ <expr pos:start="21:29" pos:end="21:29"><literal type="number" pos:start="21:29" pos:end="21:29">0</literal></expr>, <expr pos:start="21:32" pos:end="21:32"><literal type="number" pos:start="21:32" pos:end="21:32">1</literal></expr>, <expr pos:start="21:35" pos:end="21:35"><literal type="number" pos:start="21:35" pos:end="21:35">3</literal></expr>, <expr pos:start="21:38" pos:end="21:38"><literal type="number" pos:start="21:38" pos:end="21:38">7</literal></expr>, <expr pos:start="21:41" pos:end="21:42"><literal type="number" pos:start="21:41" pos:end="21:42">15</literal></expr>, <expr pos:start="21:45" pos:end="21:46"><literal type="number" pos:start="21:45" pos:end="21:46">31</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:26"><decl pos:start="23:5" pos:end="23:25"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:21">mb_has_coeffs</name> <init pos:start="23:23" pos:end="23:25">= <expr pos:start="23:25" pos:end="23:25"><literal type="number" pos:start="23:25" pos:end="23:25">1</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="23:28" pos:end="23:42">/* last_flag */</comment>

    <decl_stmt pos:start="25:5" pos:end="25:39"><decl pos:start="25:5" pos:end="25:14"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:14">dmv1_x</name></decl>, <decl pos:start="25:17" pos:end="25:22"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:17" pos:end="25:22">dmv1_y</name></decl>, <decl pos:start="25:25" pos:end="25:30"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:25" pos:end="25:30">dmv2_x</name></decl>, <decl pos:start="25:33" pos:end="25:38"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:33" pos:end="25:38">dmv2_y</name></decl>;</decl_stmt> <comment type="block" pos:start="25:41" pos:end="25:72">/* Differential MV components */</comment>

    <decl_stmt pos:start="27:5" pos:end="27:17"><decl pos:start="27:5" pos:end="27:11"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">k_x</name></decl>, <decl pos:start="27:14" pos:end="27:16"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:14" pos:end="27:16">k_y</name></decl>;</decl_stmt> <comment type="block" pos:start="27:19" pos:end="27:47">/* Long MV fixed bitlength */</comment>

    <decl_stmt pos:start="29:5" pos:end="29:18"><decl pos:start="29:5" pos:end="29:17"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:17">hpel_flag</name></decl>;</decl_stmt> <comment type="block" pos:start="29:20" pos:end="29:43">/* Some MB properties */</comment>

    <decl_stmt pos:start="31:5" pos:end="31:22"><decl pos:start="31:5" pos:end="31:13"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:13">index</name></decl>, <decl pos:start="31:16" pos:end="31:21"><type ref="prev" pos:start="31:5" pos:end="31:7"/><name pos:start="31:16" pos:end="31:21">index1</name></decl>;</decl_stmt> <comment type="block" pos:start="31:24" pos:end="31:40">/* LUT indices */</comment>

    <decl_stmt pos:start="33:5" pos:end="33:18"><decl pos:start="33:5" pos:end="33:11"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:11">val</name></decl>, <decl pos:start="33:14" pos:end="33:17"><type ref="prev" pos:start="33:5" pos:end="33:7"/><name pos:start="33:14" pos:end="33:17">sign</name></decl>;</decl_stmt> <comment type="block" pos:start="33:20" pos:end="33:43">/* MVDATA temp values */</comment>

    

    <comment type="block" pos:start="37:5" pos:end="37:37">/* Select proper long MV range */</comment>

    <switch pos:start="39:5" pos:end="51:5">switch <condition pos:start="39:12" pos:end="39:23">(<expr pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:13">v</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:22">mvrange</name></name></expr>)</condition>

    <block pos:start="41:5" pos:end="51:5">{<block_content pos:start="43:5" pos:end="49:53">

    <case pos:start="43:5" pos:end="43:11">case <expr pos:start="43:10" pos:end="43:10"><literal type="number" pos:start="43:10" pos:end="43:10">1</literal></expr>:</case> <expr_stmt pos:start="43:13" pos:end="43:21"><expr pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:15">k_x</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <literal type="number" pos:start="43:19" pos:end="43:20">10</literal></expr>;</expr_stmt> <expr_stmt pos:start="43:23" pos:end="43:30"><expr pos:start="43:23" pos:end="43:29"><name pos:start="43:23" pos:end="43:25">k_y</name> <operator pos:start="43:27" pos:end="43:27">=</operator> <literal type="number" pos:start="43:29" pos:end="43:29">9</literal></expr>;</expr_stmt> <break pos:start="43:32" pos:end="43:37">break;</break>

    <case pos:start="45:5" pos:end="45:11">case <expr pos:start="45:10" pos:end="45:10"><literal type="number" pos:start="45:10" pos:end="45:10">2</literal></expr>:</case> <expr_stmt pos:start="45:13" pos:end="45:21"><expr pos:start="45:13" pos:end="45:20"><name pos:start="45:13" pos:end="45:15">k_x</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <literal type="number" pos:start="45:19" pos:end="45:20">12</literal></expr>;</expr_stmt> <expr_stmt pos:start="45:23" pos:end="45:31"><expr pos:start="45:23" pos:end="45:30"><name pos:start="45:23" pos:end="45:25">k_y</name> <operator pos:start="45:27" pos:end="45:27">=</operator> <literal type="number" pos:start="45:29" pos:end="45:30">10</literal></expr>;</expr_stmt> <break pos:start="45:33" pos:end="45:38">break;</break>

    <case pos:start="47:5" pos:end="47:11">case <expr pos:start="47:10" pos:end="47:10"><literal type="number" pos:start="47:10" pos:end="47:10">3</literal></expr>:</case> <expr_stmt pos:start="47:13" pos:end="47:21"><expr pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:15">k_x</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <literal type="number" pos:start="47:19" pos:end="47:20">13</literal></expr>;</expr_stmt> <expr_stmt pos:start="47:23" pos:end="47:31"><expr pos:start="47:23" pos:end="47:30"><name pos:start="47:23" pos:end="47:25">k_y</name> <operator pos:start="47:27" pos:end="47:27">=</operator> <literal type="number" pos:start="47:29" pos:end="47:30">11</literal></expr>;</expr_stmt> <break pos:start="47:33" pos:end="47:38">break;</break>

    <default pos:start="49:5" pos:end="49:12">default:</default> <comment type="block" pos:start="49:14" pos:end="49:28">/*case 0 too */</comment> <expr_stmt pos:start="49:30" pos:end="49:37"><expr pos:start="49:30" pos:end="49:36"><name pos:start="49:30" pos:end="49:32">k_x</name> <operator pos:start="49:34" pos:end="49:34">=</operator> <literal type="number" pos:start="49:36" pos:end="49:36">9</literal></expr>;</expr_stmt> <expr_stmt pos:start="49:39" pos:end="49:46"><expr pos:start="49:39" pos:end="49:45"><name pos:start="49:39" pos:end="49:41">k_y</name> <operator pos:start="49:43" pos:end="49:43">=</operator> <literal type="number" pos:start="49:45" pos:end="49:45">8</literal></expr>;</expr_stmt> <break pos:start="49:48" pos:end="49:53">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="53:5" pos:end="53:31"><expr pos:start="53:5" pos:end="53:30"><name pos:start="53:5" pos:end="53:13">hpel_flag</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <name pos:start="53:17" pos:end="53:26"><name pos:start="53:17" pos:end="53:17">v</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:26">mv_mode</name></name> <operator pos:start="53:28" pos:end="53:28">&amp;</operator> <literal type="number" pos:start="53:30" pos:end="53:30">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="53:33" pos:end="53:50">//MV_PMODE is HPEL</comment>

    <expr_stmt pos:start="55:5" pos:end="55:21"><expr pos:start="55:5" pos:end="55:20"><name pos:start="55:5" pos:end="55:7">k_x</name> <operator pos:start="55:9" pos:end="55:10">-=</operator> <name pos:start="55:12" pos:end="55:20">hpel_flag</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:21"><expr pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:7">k_y</name> <operator pos:start="57:9" pos:end="57:10">-=</operator> <name pos:start="57:12" pos:end="57:20">hpel_flag</name></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:43">/* Select ttmb table depending on pq */</comment>

    <if_stmt pos:start="63:5" pos:end="67:40"><if pos:start="63:5" pos:end="63:50">if <condition pos:start="63:8" pos:end="63:18">(<expr pos:start="63:9" pos:end="63:17"><name pos:start="63:9" pos:end="63:13"><name pos:start="63:9" pos:end="63:9">v</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:13">pq</name></name> <operator pos:start="63:15" pos:end="63:15">&lt;</operator> <literal type="number" pos:start="63:17" pos:end="63:17">5</literal></expr>)</condition><block type="pseudo" pos:start="63:20" pos:end="63:50"><block_content pos:start="63:20" pos:end="63:50"> <expr_stmt pos:start="63:20" pos:end="63:50"><expr pos:start="63:20" pos:end="63:49"><name pos:start="63:20" pos:end="63:30"><name pos:start="63:20" pos:end="63:20">v</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:30">ttmb_vlc</name></name> <operator pos:start="63:32" pos:end="63:32">=</operator> <operator pos:start="63:34" pos:end="63:34">&amp;</operator><name pos:start="63:35" pos:end="63:49"><name pos:start="63:35" pos:end="63:46">vc9_ttmb_vlc</name><index pos:start="63:47" pos:end="63:49">[<expr pos:start="63:48" pos:end="63:48"><literal type="number" pos:start="63:48" pos:end="63:48">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="65:5" pos:end="65:56">else if <condition pos:start="65:13" pos:end="65:24">(<expr pos:start="65:14" pos:end="65:23"><name pos:start="65:14" pos:end="65:18"><name pos:start="65:14" pos:end="65:14">v</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:18">pq</name></name> <operator pos:start="65:20" pos:end="65:20">&lt;</operator> <literal type="number" pos:start="65:22" pos:end="65:23">13</literal></expr>)</condition><block type="pseudo" pos:start="65:26" pos:end="65:56"><block_content pos:start="65:26" pos:end="65:56"> <expr_stmt pos:start="65:26" pos:end="65:56"><expr pos:start="65:26" pos:end="65:55"><name pos:start="65:26" pos:end="65:36"><name pos:start="65:26" pos:end="65:26">v</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:36">ttmb_vlc</name></name> <operator pos:start="65:38" pos:end="65:38">=</operator> <operator pos:start="65:40" pos:end="65:40">&amp;</operator><name pos:start="65:41" pos:end="65:55"><name pos:start="65:41" pos:end="65:52">vc9_ttmb_vlc</name><index pos:start="65:53" pos:end="65:55">[<expr pos:start="65:54" pos:end="65:54"><literal type="number" pos:start="65:54" pos:end="65:54">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="67:5" pos:end="67:40">else<block type="pseudo" pos:start="67:10" pos:end="67:40"><block_content pos:start="67:10" pos:end="67:40"> <expr_stmt pos:start="67:10" pos:end="67:40"><expr pos:start="67:10" pos:end="67:39"><name pos:start="67:10" pos:end="67:20"><name pos:start="67:10" pos:end="67:10">v</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:20">ttmb_vlc</name></name> <operator pos:start="67:22" pos:end="67:22">=</operator> <operator pos:start="67:24" pos:end="67:24">&amp;</operator><name pos:start="67:25" pos:end="67:39"><name pos:start="67:25" pos:end="67:36">vc9_ttmb_vlc</name><index pos:start="67:37" pos:end="67:39">[<expr pos:start="67:38" pos:end="67:38"><literal type="number" pos:start="67:38" pos:end="67:38">2</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <for pos:start="71:5" pos:end="201:5">for <control pos:start="71:9" pos:end="71:52">(<init pos:start="71:10" pos:end="71:19"><expr pos:start="71:10" pos:end="71:18"><name pos:start="71:10" pos:end="71:16"><name pos:start="71:10" pos:end="71:10">s</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:16">mb_y</name></name><operator pos:start="71:17" pos:end="71:17">=</operator><literal type="number" pos:start="71:18" pos:end="71:18">0</literal></expr>;</init> <condition pos:start="71:21" pos:end="71:41"><expr pos:start="71:21" pos:end="71:40"><name pos:start="71:21" pos:end="71:27"><name pos:start="71:21" pos:end="71:21">s</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:27">mb_y</name></name><operator pos:start="71:28" pos:end="71:28">&lt;</operator><name pos:start="71:29" pos:end="71:40"><name pos:start="71:29" pos:end="71:29">s</name><operator pos:start="71:30" pos:end="71:31">-&gt;</operator><name pos:start="71:32" pos:end="71:40">mb_height</name></name></expr>;</condition> <incr pos:start="71:43" pos:end="71:51"><expr pos:start="71:43" pos:end="71:51"><name pos:start="71:43" pos:end="71:49"><name pos:start="71:43" pos:end="71:43">s</name><operator pos:start="71:44" pos:end="71:45">-&gt;</operator><name pos:start="71:46" pos:end="71:49">mb_y</name></name><operator pos:start="71:50" pos:end="71:51">++</operator></expr></incr>)</control>

    <block pos:start="73:5" pos:end="201:5">{<block_content pos:start="75:9" pos:end="199:9">

        <for pos:start="75:9" pos:end="199:9">for <control pos:start="75:13" pos:end="75:55">(<init pos:start="75:14" pos:end="75:23"><expr pos:start="75:14" pos:end="75:22"><name pos:start="75:14" pos:end="75:20"><name pos:start="75:14" pos:end="75:14">s</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:20">mb_x</name></name><operator pos:start="75:21" pos:end="75:21">=</operator><literal type="number" pos:start="75:22" pos:end="75:22">0</literal></expr>;</init> <condition pos:start="75:25" pos:end="75:44"><expr pos:start="75:25" pos:end="75:43"><name pos:start="75:25" pos:end="75:31"><name pos:start="75:25" pos:end="75:25">s</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:31">mb_x</name></name><operator pos:start="75:32" pos:end="75:32">&lt;</operator><name pos:start="75:33" pos:end="75:43"><name pos:start="75:33" pos:end="75:33">s</name><operator pos:start="75:34" pos:end="75:35">-&gt;</operator><name pos:start="75:36" pos:end="75:43">mb_width</name></name></expr>;</condition> <incr pos:start="75:46" pos:end="75:54"><expr pos:start="75:46" pos:end="75:54"><name pos:start="75:46" pos:end="75:52"><name pos:start="75:46" pos:end="75:46">s</name><operator pos:start="75:47" pos:end="75:48">-&gt;</operator><name pos:start="75:49" pos:end="75:52">mb_x</name></name><operator pos:start="75:53" pos:end="75:54">++</operator></expr></incr>)</control>

        <block pos:start="77:9" pos:end="199:9">{<block_content pos:start="79:13" pos:end="197:25">

            <if_stmt pos:start="79:13" pos:end="81:70"><if pos:start="79:13" pos:end="81:70">if <condition pos:start="79:16" pos:end="79:42">(<expr pos:start="79:17" pos:end="79:41"><name pos:start="79:17" pos:end="79:41"><name pos:start="79:17" pos:end="79:17">v</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:34">direct_mb_plane</name><operator pos:start="79:35" pos:end="79:35">.</operator><name pos:start="79:36" pos:end="79:41">is_raw</name></name></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:70"><block_content pos:start="81:17" pos:end="81:70">

                <expr_stmt pos:start="81:17" pos:end="81:70"><expr pos:start="81:17" pos:end="81:69"><name pos:start="81:17" pos:end="81:51"><name pos:start="81:17" pos:end="81:17">v</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:34">direct_mb_plane</name><operator pos:start="81:35" pos:end="81:35">.</operator><name pos:start="81:36" pos:end="81:39">data</name><index pos:start="81:40" pos:end="81:51">[<expr pos:start="81:41" pos:end="81:50"><name pos:start="81:41" pos:end="81:50">current_mb</name></expr>]</index></name> <operator pos:start="81:53" pos:end="81:53">=</operator> <call pos:start="81:55" pos:end="81:69"><name pos:start="81:55" pos:end="81:62">get_bits</name><argument_list pos:start="81:63" pos:end="81:69">(<argument pos:start="81:64" pos:end="81:65"><expr pos:start="81:64" pos:end="81:65"><name pos:start="81:64" pos:end="81:65">gb</name></expr></argument>, <argument pos:start="81:68" pos:end="81:68"><expr pos:start="81:68" pos:end="81:68"><literal type="number" pos:start="81:68" pos:end="81:68">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="83:13" pos:end="85:68"><if pos:start="83:13" pos:end="85:68">if <condition pos:start="83:16" pos:end="83:40">(<expr pos:start="83:17" pos:end="83:39"><name pos:start="83:17" pos:end="83:39"><name pos:start="83:17" pos:end="83:17">v</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:32">skip_mb_plane</name><operator pos:start="83:33" pos:end="83:33">.</operator><name pos:start="83:34" pos:end="83:39">is_raw</name></name></expr>)</condition><block type="pseudo" pos:start="85:17" pos:end="85:68"><block_content pos:start="85:17" pos:end="85:68">

                <expr_stmt pos:start="85:17" pos:end="85:68"><expr pos:start="85:17" pos:end="85:67"><name pos:start="85:17" pos:end="85:49"><name pos:start="85:17" pos:end="85:17">v</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:32">skip_mb_plane</name><operator pos:start="85:33" pos:end="85:33">.</operator><name pos:start="85:34" pos:end="85:37">data</name><index pos:start="85:38" pos:end="85:49">[<expr pos:start="85:39" pos:end="85:48"><name pos:start="85:39" pos:end="85:48">current_mb</name></expr>]</index></name> <operator pos:start="85:51" pos:end="85:51">=</operator> <call pos:start="85:53" pos:end="85:67"><name pos:start="85:53" pos:end="85:60">get_bits</name><argument_list pos:start="85:61" pos:end="85:67">(<argument pos:start="85:62" pos:end="85:63"><expr pos:start="85:62" pos:end="85:63"><name pos:start="85:62" pos:end="85:63">gb</name></expr></argument>, <argument pos:start="85:66" pos:end="85:66"><expr pos:start="85:66" pos:end="85:66"><literal type="number" pos:start="85:66" pos:end="85:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            

            <if_stmt pos:start="89:13" pos:end="125:13"><if pos:start="89:13" pos:end="125:13">if <condition pos:start="89:16" pos:end="89:53">(<expr pos:start="89:17" pos:end="89:52"><operator pos:start="89:17" pos:end="89:17">!</operator><name pos:start="89:18" pos:end="89:52"><name pos:start="89:18" pos:end="89:18">v</name><operator pos:start="89:19" pos:end="89:20">-&gt;</operator><name pos:start="89:21" pos:end="89:35">direct_mb_plane</name><operator pos:start="89:36" pos:end="89:36">.</operator><name pos:start="89:37" pos:end="89:40">data</name><index pos:start="89:41" pos:end="89:52">[<expr pos:start="89:42" pos:end="89:51"><name pos:start="89:42" pos:end="89:51">current_mb</name></expr>]</index></name></expr>)</condition>

            <block pos:start="91:13" pos:end="125:13">{<block_content pos:start="93:17" pos:end="123:17">

                <if_stmt pos:start="93:17" pos:end="123:17"><if pos:start="93:17" pos:end="103:17">if <condition pos:start="93:20" pos:end="93:54">(<expr pos:start="93:21" pos:end="93:53"><name pos:start="93:21" pos:end="93:53"><name pos:start="93:21" pos:end="93:21">v</name><operator pos:start="93:22" pos:end="93:23">-&gt;</operator><name pos:start="93:24" pos:end="93:36">skip_mb_plane</name><operator pos:start="93:37" pos:end="93:37">.</operator><name pos:start="93:38" pos:end="93:41">data</name><index pos:start="93:42" pos:end="93:53">[<expr pos:start="93:43" pos:end="93:52"><name pos:start="93:43" pos:end="93:52">current_mb</name></expr>]</index></name></expr>)</condition>

                <block pos:start="95:17" pos:end="103:17">{<block_content pos:start="97:21" pos:end="101:63">

                    <expr_stmt pos:start="97:21" pos:end="97:46"><expr pos:start="97:21" pos:end="97:45"><name pos:start="97:21" pos:end="97:29">b_mv_type</name> <operator pos:start="97:31" pos:end="97:31">=</operator> <call pos:start="97:33" pos:end="97:45"><name pos:start="97:33" pos:end="97:41">decode012</name><argument_list pos:start="97:42" pos:end="97:45">(<argument pos:start="97:43" pos:end="97:44"><expr pos:start="97:43" pos:end="97:44"><name pos:start="97:43" pos:end="97:44">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="99:21" pos:end="101:63"><if pos:start="99:21" pos:end="101:63">if <condition pos:start="99:24" pos:end="101:38">(<expr pos:start="99:25" pos:end="101:37"><name pos:start="99:25" pos:end="99:36"><name pos:start="99:25" pos:end="99:25">v</name><operator pos:start="99:26" pos:end="99:27">-&gt;</operator><name pos:start="99:28" pos:end="99:36">bfraction</name></name> <operator pos:start="99:38" pos:end="99:38">&gt;</operator> <literal type="number" pos:start="99:40" pos:end="99:42">420</literal> <comment type="block" pos:start="99:44" pos:end="99:50">/*1/2*/</comment> <operator pos:start="99:52" pos:end="99:53">&amp;&amp;</operator>

                        <name pos:start="101:25" pos:end="101:33">b_mv_type</name> <operator pos:start="101:35" pos:end="101:35">&lt;</operator> <literal type="number" pos:start="101:37" pos:end="101:37">3</literal></expr>)</condition><block type="pseudo" pos:start="101:40" pos:end="101:63"><block_content pos:start="101:40" pos:end="101:63"> <expr_stmt pos:start="101:40" pos:end="101:63"><expr pos:start="101:40" pos:end="101:62"><name pos:start="101:40" pos:end="101:48">b_mv_type</name> <operator pos:start="101:50" pos:end="101:50">=</operator> <literal type="number" pos:start="101:52" pos:end="101:53">1</literal><operator pos:start="101:53" pos:end="101:53">-</operator><name pos:start="101:54" pos:end="101:62">b_mv_type</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if>

                <else pos:start="105:17" pos:end="123:17">else

                <block pos:start="107:17" pos:end="123:17">{<block_content pos:start="109:21" pos:end="121:21"> 

                    <expr_stmt pos:start="109:21" pos:end="109:47"><expr pos:start="109:21" pos:end="109:46"><call pos:start="109:21" pos:end="109:46"><name pos:start="109:21" pos:end="109:30">GET_MVDATA</name><argument_list pos:start="109:31" pos:end="109:46">(<argument pos:start="109:32" pos:end="109:37"><expr pos:start="109:32" pos:end="109:37"><name pos:start="109:32" pos:end="109:37">dmv1_x</name></expr></argument>, <argument pos:start="109:40" pos:end="109:45"><expr pos:start="109:40" pos:end="109:45"><name pos:start="109:40" pos:end="109:45">dmv1_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="111:21" pos:end="121:21"><if pos:start="111:21" pos:end="121:21">if <condition pos:start="111:24" pos:end="111:65">(<expr pos:start="111:25" pos:end="111:36"><operator pos:start="111:25" pos:end="111:25">!</operator><name pos:start="111:26" pos:end="111:36"><name pos:start="111:26" pos:end="111:26">s</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:36">mb_intra</name></name></expr> <comment type="block" pos:start="111:38" pos:end="111:64">/* b_mv1 tells not intra */</comment>)</condition>

                    <block pos:start="113:21" pos:end="121:21">{<block_content pos:start="115:25" pos:end="119:67">

                        <expr_stmt pos:start="115:25" pos:end="115:50"><expr pos:start="115:25" pos:end="115:49"><name pos:start="115:25" pos:end="115:33">b_mv_type</name> <operator pos:start="115:35" pos:end="115:35">=</operator> <call pos:start="115:37" pos:end="115:49"><name pos:start="115:37" pos:end="115:45">decode012</name><argument_list pos:start="115:46" pos:end="115:49">(<argument pos:start="115:47" pos:end="115:48"><expr pos:start="115:47" pos:end="115:48"><name pos:start="115:47" pos:end="115:48">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="117:25" pos:end="119:67"><if pos:start="117:25" pos:end="119:67">if <condition pos:start="117:28" pos:end="119:42">(<expr pos:start="117:29" pos:end="119:41"><name pos:start="117:29" pos:end="117:40"><name pos:start="117:29" pos:end="117:29">v</name><operator pos:start="117:30" pos:end="117:31">-&gt;</operator><name pos:start="117:32" pos:end="117:40">bfraction</name></name> <operator pos:start="117:42" pos:end="117:42">&gt;</operator> <literal type="number" pos:start="117:44" pos:end="117:46">420</literal> <comment type="block" pos:start="117:48" pos:end="117:54">/*1/2*/</comment> <operator pos:start="117:56" pos:end="117:57">&amp;&amp;</operator>

                            <name pos:start="119:29" pos:end="119:37">b_mv_type</name> <operator pos:start="119:39" pos:end="119:39">&lt;</operator> <literal type="number" pos:start="119:41" pos:end="119:41">3</literal></expr>)</condition><block type="pseudo" pos:start="119:44" pos:end="119:67"><block_content pos:start="119:44" pos:end="119:67"> <expr_stmt pos:start="119:44" pos:end="119:67"><expr pos:start="119:44" pos:end="119:66"><name pos:start="119:44" pos:end="119:52">b_mv_type</name> <operator pos:start="119:54" pos:end="119:54">=</operator> <literal type="number" pos:start="119:56" pos:end="119:57">1</literal><operator pos:start="119:57" pos:end="119:57">-</operator><name pos:start="119:58" pos:end="119:66">b_mv_type</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="127:13" pos:end="173:13"><if pos:start="127:13" pos:end="173:13">if <condition pos:start="127:16" pos:end="127:51">(<expr pos:start="127:17" pos:end="127:50"><operator pos:start="127:17" pos:end="127:17">!</operator><name pos:start="127:18" pos:end="127:50"><name pos:start="127:18" pos:end="127:18">v</name><operator pos:start="127:19" pos:end="127:20">-&gt;</operator><name pos:start="127:21" pos:end="127:33">skip_mb_plane</name><operator pos:start="127:34" pos:end="127:34">.</operator><name pos:start="127:35" pos:end="127:38">data</name><index pos:start="127:39" pos:end="127:50">[<expr pos:start="127:40" pos:end="127:49"><name pos:start="127:40" pos:end="127:49">current_mb</name></expr>]</index></name></expr>)</condition>

            <block pos:start="129:13" pos:end="173:13">{<block_content pos:start="131:17" pos:end="171:17">

                <if_stmt pos:start="131:17" pos:end="171:17"><if pos:start="131:17" pos:end="141:17">if <condition pos:start="131:20" pos:end="131:55">(<expr pos:start="131:21" pos:end="131:33"><name pos:start="131:21" pos:end="131:33">mb_has_coeffs</name></expr> <comment type="block" pos:start="131:35" pos:end="131:54">/* BMV1 == "last" */</comment>)</condition>

                <block pos:start="133:17" pos:end="141:17">{<block_content pos:start="135:21" pos:end="139:53">

                    <expr_stmt pos:start="135:21" pos:end="135:33"><expr pos:start="135:21" pos:end="135:32"><call pos:start="135:21" pos:end="135:32"><name pos:start="135:21" pos:end="135:30">GET_MQUANT</name><argument_list pos:start="135:31" pos:end="135:32">()</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="137:21" pos:end="139:53"><if pos:start="137:21" pos:end="139:53">if <condition pos:start="137:24" pos:end="137:51">(<expr pos:start="137:25" pos:end="137:35"><name pos:start="137:25" pos:end="137:35"><name pos:start="137:25" pos:end="137:25">s</name><operator pos:start="137:26" pos:end="137:27">-&gt;</operator><name pos:start="137:28" pos:end="137:35">mb_intra</name></name></expr> <comment type="block" pos:start="137:37" pos:end="137:50">/* intra mb */</comment>)</condition><block type="pseudo" pos:start="139:25" pos:end="139:53"><block_content pos:start="139:25" pos:end="139:53">

                        <expr_stmt pos:start="139:25" pos:end="139:53"><expr pos:start="139:25" pos:end="139:52"><name pos:start="139:25" pos:end="139:34"><name pos:start="139:25" pos:end="139:25">s</name><operator pos:start="139:26" pos:end="139:27">-&gt;</operator><name pos:start="139:28" pos:end="139:34">ac_pred</name></name> <operator pos:start="139:36" pos:end="139:36">=</operator> <call pos:start="139:38" pos:end="139:52"><name pos:start="139:38" pos:end="139:45">get_bits</name><argument_list pos:start="139:46" pos:end="139:52">(<argument pos:start="139:47" pos:end="139:48"><expr pos:start="139:47" pos:end="139:48"><name pos:start="139:47" pos:end="139:48">gb</name></expr></argument>, <argument pos:start="139:51" pos:end="139:51"><expr pos:start="139:51" pos:end="139:51"><literal type="number" pos:start="139:51" pos:end="139:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if>

                <else pos:start="143:17" pos:end="171:17">else

                <block pos:start="145:17" pos:end="171:17">{<block_content pos:start="149:21" pos:end="169:21">

                    <comment type="block" pos:start="147:21" pos:end="147:60">/* if bmv1 tells MVs are interpolated */</comment>

                    <if_stmt pos:start="149:21" pos:end="155:21"><if pos:start="149:21" pos:end="155:21">if <condition pos:start="149:24" pos:end="149:59">(<expr pos:start="149:25" pos:end="149:58"><name pos:start="149:25" pos:end="149:33">b_mv_type</name> <operator pos:start="149:35" pos:end="149:36">==</operator> <name pos:start="149:38" pos:end="149:58">BMV_TYPE_INTERPOLATED</name></expr>)</condition>

                    <block pos:start="151:21" pos:end="155:21">{<block_content pos:start="153:25" pos:end="153:51">

                        <expr_stmt pos:start="153:25" pos:end="153:51"><expr pos:start="153:25" pos:end="153:50"><call pos:start="153:25" pos:end="153:50"><name pos:start="153:25" pos:end="153:34">GET_MVDATA</name><argument_list pos:start="153:35" pos:end="153:50">(<argument pos:start="153:36" pos:end="153:41"><expr pos:start="153:36" pos:end="153:41"><name pos:start="153:36" pos:end="153:41">dmv2_x</name></expr></argument>, <argument pos:start="153:44" pos:end="153:49"><expr pos:start="153:44" pos:end="153:49"><name pos:start="153:44" pos:end="153:49">dmv2_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <comment type="block" pos:start="157:21" pos:end="157:57">/* GET_MVDATA has reset some stuff */</comment>

                    <if_stmt pos:start="159:21" pos:end="169:21"><if pos:start="159:21" pos:end="169:21">if <condition pos:start="159:24" pos:end="159:60">(<expr pos:start="159:25" pos:end="159:37"><name pos:start="159:25" pos:end="159:37">mb_has_coeffs</name></expr> <comment type="block" pos:start="159:39" pos:end="159:59">/* b_mv2 == "last" */</comment>)</condition>

                    <block pos:start="161:21" pos:end="169:21">{<block_content pos:start="163:25" pos:end="167:37">

                        <if_stmt pos:start="163:25" pos:end="165:57"><if pos:start="163:25" pos:end="165:57">if <condition pos:start="163:28" pos:end="163:55">(<expr pos:start="163:29" pos:end="163:39"><name pos:start="163:29" pos:end="163:39"><name pos:start="163:29" pos:end="163:29">s</name><operator pos:start="163:30" pos:end="163:31">-&gt;</operator><name pos:start="163:32" pos:end="163:39">mb_intra</name></name></expr> <comment type="block" pos:start="163:41" pos:end="163:54">/* intra_mb */</comment>)</condition><block type="pseudo" pos:start="165:29" pos:end="165:57"><block_content pos:start="165:29" pos:end="165:57">

                            <expr_stmt pos:start="165:29" pos:end="165:57"><expr pos:start="165:29" pos:end="165:56"><name pos:start="165:29" pos:end="165:38"><name pos:start="165:29" pos:end="165:29">s</name><operator pos:start="165:30" pos:end="165:31">-&gt;</operator><name pos:start="165:32" pos:end="165:38">ac_pred</name></name> <operator pos:start="165:40" pos:end="165:40">=</operator> <call pos:start="165:42" pos:end="165:56"><name pos:start="165:42" pos:end="165:49">get_bits</name><argument_list pos:start="165:50" pos:end="165:56">(<argument pos:start="165:51" pos:end="165:52"><expr pos:start="165:51" pos:end="165:52"><name pos:start="165:51" pos:end="165:52">gb</name></expr></argument>, <argument pos:start="165:55" pos:end="165:55"><expr pos:start="165:55" pos:end="165:55"><literal type="number" pos:start="165:55" pos:end="165:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="167:25" pos:end="167:37"><expr pos:start="167:25" pos:end="167:36"><call pos:start="167:25" pos:end="167:36"><name pos:start="167:25" pos:end="167:34">GET_MQUANT</name><argument_list pos:start="167:35" pos:end="167:36">()</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="line" pos:start="175:13" pos:end="175:18">//End1</comment>

            <if_stmt pos:start="177:13" pos:end="181:58"><if pos:start="177:13" pos:end="181:58">if <condition pos:start="177:16" pos:end="177:25">(<expr pos:start="177:17" pos:end="177:24"><name pos:start="177:17" pos:end="177:24"><name pos:start="177:17" pos:end="177:17">v</name><operator pos:start="177:18" pos:end="177:19">-&gt;</operator><name pos:start="177:20" pos:end="177:24">ttmbf</name></name></expr>)</condition><block type="pseudo" pos:start="179:17" pos:end="181:58"><block_content pos:start="179:17" pos:end="181:58">

                <expr_stmt pos:start="179:17" pos:end="181:58"><expr pos:start="179:17" pos:end="181:57"><name pos:start="179:17" pos:end="179:20">ttmb</name> <operator pos:start="179:22" pos:end="179:22">=</operator> <call pos:start="179:24" pos:end="181:57"><name pos:start="179:24" pos:end="179:31">get_vlc2</name><argument_list pos:start="179:32" pos:end="181:57">(<argument pos:start="179:33" pos:end="179:34"><expr pos:start="179:33" pos:end="179:34"><name pos:start="179:33" pos:end="179:34">gb</name></expr></argument>, <argument pos:start="179:37" pos:end="179:54"><expr pos:start="179:37" pos:end="179:54"><name pos:start="179:37" pos:end="179:54"><name pos:start="179:37" pos:end="179:37">v</name><operator pos:start="179:38" pos:end="179:39">-&gt;</operator><name pos:start="179:40" pos:end="179:47">ttmb_vlc</name><operator pos:start="179:48" pos:end="179:49">-&gt;</operator><name pos:start="179:50" pos:end="179:54">table</name></name></expr></argument>,

                                   <argument pos:start="181:36" pos:end="181:52"><expr pos:start="181:36" pos:end="181:52"><name pos:start="181:36" pos:end="181:52">VC9_TTMB_VLC_BITS</name></expr></argument>, <argument pos:start="181:55" pos:end="181:56"><expr pos:start="181:55" pos:end="181:56"><literal type="number" pos:start="181:55" pos:end="181:56">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <comment type="line" pos:start="185:13" pos:end="185:18">//End2</comment>

            <for pos:start="187:13" pos:end="193:13">for <control pos:start="187:17" pos:end="187:31">(<init pos:start="187:18" pos:end="187:21"><expr pos:start="187:18" pos:end="187:20"><name pos:start="187:18" pos:end="187:18">i</name><operator pos:start="187:19" pos:end="187:19">=</operator><literal type="number" pos:start="187:20" pos:end="187:20">0</literal></expr>;</init> <condition pos:start="187:23" pos:end="187:26"><expr pos:start="187:23" pos:end="187:25"><name pos:start="187:23" pos:end="187:23">i</name><operator pos:start="187:24" pos:end="187:24">&lt;</operator><literal type="number" pos:start="187:25" pos:end="187:25">6</literal></expr>;</condition> <incr pos:start="187:28" pos:end="187:30"><expr pos:start="187:28" pos:end="187:30"><name pos:start="187:28" pos:end="187:28">i</name><operator pos:start="187:29" pos:end="187:30">++</operator></expr></incr>)</control>

            <block pos:start="189:13" pos:end="193:13">{<block_content>

                <comment type="block" pos:start="191:17" pos:end="191:46">/* FIXME: process the block */</comment>

            </block_content>}</block></for>



            <expr_stmt pos:start="197:13" pos:end="197:25"><expr pos:start="197:13" pos:end="197:24"><name pos:start="197:13" pos:end="197:22">current_mb</name><operator pos:start="197:23" pos:end="197:24">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <return pos:start="203:5" pos:end="203:13">return <expr pos:start="203:12" pos:end="203:12"><literal type="number" pos:start="203:12" pos:end="203:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
