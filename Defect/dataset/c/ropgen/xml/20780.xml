<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20780.c" pos:tabs="8"><function pos:start="1:1" pos:end="433:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:29">ff_vc1_parse_frame_header</name><parameter_list pos:start="1:30" pos:end="1:63">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:40">VC1Context</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">v</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:62"><decl pos:start="1:46" pos:end="1:62"><type pos:start="1:46" pos:end="1:62"><name pos:start="1:46" pos:end="1:58">GetBitContext</name><modifier pos:start="1:59" pos:end="1:59">*</modifier></type> <name pos:start="1:61" pos:end="1:62">gb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="433:1">{<block_content pos:start="5:5" pos:end="431:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:15">pqindex</name></decl>, <decl pos:start="5:18" pos:end="5:25"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:25">lowquant</name></decl>, <decl pos:start="5:28" pos:end="5:33"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:28" pos:end="5:33">status</name></decl>;</decl_stmt>





    <if_stmt pos:start="11:5" pos:end="13:37"><if pos:start="11:5" pos:end="13:37">if <condition pos:start="11:8" pos:end="11:23">(<expr pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:9">v</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:22">finterpflag</name></name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:37"><block_content pos:start="13:9" pos:end="13:37">

        <expr_stmt pos:start="13:9" pos:end="13:37"><expr pos:start="13:9" pos:end="13:36"><name pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:9">v</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:20">interpfrm</name></name> <operator pos:start="13:22" pos:end="13:22">=</operator> <call pos:start="13:24" pos:end="13:36"><name pos:start="13:24" pos:end="13:32">get_bits1</name><argument_list pos:start="13:33" pos:end="13:36">(<argument pos:start="13:34" pos:end="13:35"><expr pos:start="13:34" pos:end="13:35"><name pos:start="13:34" pos:end="13:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="15:5" pos:end="17:18"><if pos:start="15:5" pos:end="17:18">if <condition pos:start="15:8" pos:end="15:27">(<expr pos:start="15:9" pos:end="15:26"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:26"><name pos:start="15:10" pos:end="15:10">v</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:13">s</name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:19">avctx</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:26">codec</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:18"><block_content pos:start="17:9" pos:end="17:18">

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="29:25"><if pos:start="19:5" pos:end="25:43">if <condition pos:start="19:8" pos:end="19:49">(<expr pos:start="19:9" pos:end="19:48"><name pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:9">v</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:12">s</name><operator pos:start="19:13" pos:end="19:13">.</operator><name pos:start="19:14" pos:end="19:18">avctx</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:28">codec_id</name></name> <operator pos:start="19:30" pos:end="19:31">==</operator> <name pos:start="19:33" pos:end="19:48">AV_CODEC_ID_MSS2</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="25:43"><block_content pos:start="21:9" pos:end="25:43">

        <expr_stmt pos:start="21:9" pos:end="25:43"><expr pos:start="21:9" pos:end="25:42"><name pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:9">v</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:17">respic</name></name>   <operator pos:start="21:21" pos:end="21:21">=</operator>

        <name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:9">v</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:19">rangered</name></name> <operator pos:start="23:21" pos:end="23:21">=</operator>

        <name pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:9">v</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:19">multires</name></name> <operator pos:start="25:21" pos:end="25:21">=</operator> <call pos:start="25:23" pos:end="25:37"><name pos:start="25:23" pos:end="25:30">get_bits</name><argument_list pos:start="25:31" pos:end="25:37">(<argument pos:start="25:32" pos:end="25:33"><expr pos:start="25:32" pos:end="25:33"><name pos:start="25:32" pos:end="25:33">gb</name></expr></argument>, <argument pos:start="25:36" pos:end="25:36"><expr pos:start="25:36" pos:end="25:36"><literal type="number" pos:start="25:36" pos:end="25:36">2</literal></expr></argument>)</argument_list></call> <operator pos:start="25:39" pos:end="25:40">==</operator> <literal type="number" pos:start="25:42" pos:end="25:42">1</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="27:5" pos:end="29:25">else<block type="pseudo" pos:start="29:9" pos:end="29:25"><block_content pos:start="29:9" pos:end="29:25">

        <expr_stmt pos:start="29:9" pos:end="29:25"><expr pos:start="29:9" pos:end="29:24"><call pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:17">skip_bits</name><argument_list pos:start="29:18" pos:end="29:24">(<argument pos:start="29:19" pos:end="29:20"><expr pos:start="29:19" pos:end="29:20"><name pos:start="29:19" pos:end="29:20">gb</name></expr></argument>, <argument pos:start="29:23" pos:end="29:23"><expr pos:start="29:23" pos:end="29:23"><literal type="number" pos:start="29:23" pos:end="29:23">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="29:27" pos:end="29:43">//framecnt unused</comment>

    <expr_stmt pos:start="31:5" pos:end="31:23"><expr pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:5">v</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:18">rangeredfrm</name></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <literal type="number" pos:start="31:22" pos:end="31:22">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="35:39"><if pos:start="33:5" pos:end="35:39">if <condition pos:start="33:8" pos:end="33:20">(<expr pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:9">v</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:19">rangered</name></name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:39"><block_content pos:start="35:9" pos:end="35:39">

        <expr_stmt pos:start="35:9" pos:end="35:39"><expr pos:start="35:9" pos:end="35:38"><name pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:9">v</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:22">rangeredfrm</name></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <call pos:start="35:26" pos:end="35:38"><name pos:start="35:26" pos:end="35:34">get_bits1</name><argument_list pos:start="35:35" pos:end="35:38">(<argument pos:start="35:36" pos:end="35:37"><expr pos:start="35:36" pos:end="35:37"><name pos:start="35:36" pos:end="35:37">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:35"><expr pos:start="37:5" pos:end="37:34"><name pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:5">v</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:8">s</name><operator pos:start="37:9" pos:end="37:9">.</operator><name pos:start="37:10" pos:end="37:18">pict_type</name></name> <operator pos:start="37:20" pos:end="37:20">=</operator> <call pos:start="37:22" pos:end="37:34"><name pos:start="37:22" pos:end="37:30">get_bits1</name><argument_list pos:start="37:31" pos:end="37:34">(<argument pos:start="37:32" pos:end="37:33"><expr pos:start="37:32" pos:end="37:33"><name pos:start="37:32" pos:end="37:33">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="57:80"><if pos:start="39:5" pos:end="55:5">if <condition pos:start="39:8" pos:end="39:33">(<expr pos:start="39:9" pos:end="39:32"><name pos:start="39:9" pos:end="39:32"><name pos:start="39:9" pos:end="39:9">v</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:12">s</name><operator pos:start="39:13" pos:end="39:13">.</operator><name pos:start="39:14" pos:end="39:18">avctx</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:32">max_b_frames</name></name></expr>)</condition> <block pos:start="39:35" pos:end="55:5">{<block_content pos:start="41:9" pos:end="53:47">

        <if_stmt pos:start="41:9" pos:end="53:47"><if pos:start="41:9" pos:end="51:9">if <condition pos:start="41:12" pos:end="41:28">(<expr pos:start="41:13" pos:end="41:27"><operator pos:start="41:13" pos:end="41:13">!</operator><name pos:start="41:14" pos:end="41:27"><name pos:start="41:14" pos:end="41:14">v</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:17">s</name><operator pos:start="41:18" pos:end="41:18">.</operator><name pos:start="41:19" pos:end="41:27">pict_type</name></name></expr>)</condition> <block pos:start="41:30" pos:end="51:9">{<block_content pos:start="43:13" pos:end="49:51">

            <if_stmt pos:start="43:13" pos:end="49:51"><if pos:start="43:13" pos:end="45:51">if <condition pos:start="43:16" pos:end="43:30">(<expr pos:start="43:17" pos:end="43:29"><call pos:start="43:17" pos:end="43:29"><name pos:start="43:17" pos:end="43:25">get_bits1</name><argument_list pos:start="43:26" pos:end="43:29">(<argument pos:start="43:27" pos:end="43:28"><expr pos:start="43:27" pos:end="43:28"><name pos:start="43:27" pos:end="43:28">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:51"><block_content pos:start="45:17" pos:end="45:51">

                <expr_stmt pos:start="45:17" pos:end="45:51"><expr pos:start="45:17" pos:end="45:50"><name pos:start="45:17" pos:end="45:30"><name pos:start="45:17" pos:end="45:17">v</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:20">s</name><operator pos:start="45:21" pos:end="45:21">.</operator><name pos:start="45:22" pos:end="45:30">pict_type</name></name> <operator pos:start="45:32" pos:end="45:32">=</operator> <name pos:start="45:34" pos:end="45:50">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="47:13" pos:end="49:51">else<block type="pseudo" pos:start="49:17" pos:end="49:51"><block_content pos:start="49:17" pos:end="49:51">

                <expr_stmt pos:start="49:17" pos:end="49:51"><expr pos:start="49:17" pos:end="49:50"><name pos:start="49:17" pos:end="49:30"><name pos:start="49:17" pos:end="49:17">v</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:20">s</name><operator pos:start="49:21" pos:end="49:21">.</operator><name pos:start="49:22" pos:end="49:30">pict_type</name></name> <operator pos:start="49:32" pos:end="49:32">=</operator> <name pos:start="49:34" pos:end="49:50">AV_PICTURE_TYPE_B</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="51:11" pos:end="53:47">else<block type="pseudo" pos:start="53:13" pos:end="53:47"><block_content pos:start="53:13" pos:end="53:47">

            <expr_stmt pos:start="53:13" pos:end="53:47"><expr pos:start="53:13" pos:end="53:46"><name pos:start="53:13" pos:end="53:26"><name pos:start="53:13" pos:end="53:13">v</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:16">s</name><operator pos:start="53:17" pos:end="53:17">.</operator><name pos:start="53:18" pos:end="53:26">pict_type</name></name> <operator pos:start="53:28" pos:end="53:28">=</operator> <name pos:start="53:30" pos:end="53:46">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="57:80">else<block type="pseudo" pos:start="57:9" pos:end="57:80"><block_content pos:start="57:9" pos:end="57:80">

        <expr_stmt pos:start="57:9" pos:end="57:80"><expr pos:start="57:9" pos:end="57:79"><name pos:start="57:9" pos:end="57:22"><name pos:start="57:9" pos:end="57:9">v</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:12">s</name><operator pos:start="57:13" pos:end="57:13">.</operator><name pos:start="57:14" pos:end="57:22">pict_type</name></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <ternary pos:start="57:26" pos:end="57:79"><condition pos:start="57:26" pos:end="57:41"><expr pos:start="57:26" pos:end="57:39"><name pos:start="57:26" pos:end="57:39"><name pos:start="57:26" pos:end="57:26">v</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:29">s</name><operator pos:start="57:30" pos:end="57:30">.</operator><name pos:start="57:31" pos:end="57:39">pict_type</name></name></expr> ?</condition><then pos:start="57:43" pos:end="57:59"> <expr pos:start="57:43" pos:end="57:59"><name pos:start="57:43" pos:end="57:59">AV_PICTURE_TYPE_P</name></expr> </then><else pos:start="57:61" pos:end="57:79">: <expr pos:start="57:63" pos:end="57:79"><name pos:start="57:63" pos:end="57:79">AV_PICTURE_TYPE_I</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:19"><expr pos:start="61:5" pos:end="61:18"><name pos:start="61:5" pos:end="61:14"><name pos:start="61:5" pos:end="61:5">v</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:14">bi_type</name></name> <operator pos:start="61:16" pos:end="61:16">=</operator> <literal type="number" pos:start="61:18" pos:end="61:18">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="75:5"><if pos:start="63:5" pos:end="75:5">if <condition pos:start="63:8" pos:end="63:44">(<expr pos:start="63:9" pos:end="63:43"><name pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:9">v</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:12">s</name><operator pos:start="63:13" pos:end="63:13">.</operator><name pos:start="63:14" pos:end="63:22">pict_type</name></name> <operator pos:start="63:24" pos:end="63:25">==</operator> <name pos:start="63:27" pos:end="63:43">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="63:46" pos:end="75:5">{<block_content pos:start="65:9" pos:end="73:9">

        <if_stmt pos:start="65:9" pos:end="67:39"><if pos:start="65:9" pos:end="67:39">if <condition pos:start="65:12" pos:end="65:38">(<expr pos:start="65:13" pos:end="65:37"><call pos:start="65:13" pos:end="65:33"><name pos:start="65:13" pos:end="65:26">read_bfraction</name><argument_list pos:start="65:27" pos:end="65:33">(<argument pos:start="65:28" pos:end="65:28"><expr pos:start="65:28" pos:end="65:28"><name pos:start="65:28" pos:end="65:28">v</name></expr></argument>, <argument pos:start="65:31" pos:end="65:32"><expr pos:start="65:31" pos:end="65:32"><name pos:start="65:31" pos:end="65:32">gb</name></expr></argument>)</argument_list></call> <operator pos:start="65:35" pos:end="65:35">&lt;</operator> <literal type="number" pos:start="65:37" pos:end="65:37">0</literal></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:39"><block_content pos:start="67:13" pos:end="67:39">

            <return pos:start="67:13" pos:end="67:39">return <expr pos:start="67:20" pos:end="67:38"><name pos:start="67:20" pos:end="67:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="69:9" pos:end="73:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:30">(<expr pos:start="69:13" pos:end="69:29"><name pos:start="69:13" pos:end="69:24"><name pos:start="69:13" pos:end="69:13">v</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:24">bfraction</name></name> <operator pos:start="69:26" pos:end="69:27">==</operator> <literal type="number" pos:start="69:29" pos:end="69:29">0</literal></expr>)</condition> <block pos:start="69:32" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:48">

            <expr_stmt pos:start="71:13" pos:end="71:48"><expr pos:start="71:13" pos:end="71:47"><name pos:start="71:13" pos:end="71:26"><name pos:start="71:13" pos:end="71:13">v</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:16">s</name><operator pos:start="71:17" pos:end="71:17">.</operator><name pos:start="71:18" pos:end="71:26">pict_type</name></name> <operator pos:start="71:28" pos:end="71:28">=</operator> <name pos:start="71:30" pos:end="71:47">AV_PICTURE_TYPE_BI</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="77:5" pos:end="79:25"><if pos:start="77:5" pos:end="79:25">if <condition pos:start="77:8" pos:end="77:84">(<expr pos:start="77:9" pos:end="77:83"><name pos:start="77:9" pos:end="77:22"><name pos:start="77:9" pos:end="77:9">v</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:12">s</name><operator pos:start="77:13" pos:end="77:13">.</operator><name pos:start="77:14" pos:end="77:22">pict_type</name></name> <operator pos:start="77:24" pos:end="77:25">==</operator> <name pos:start="77:27" pos:end="77:43">AV_PICTURE_TYPE_I</name> <operator pos:start="77:45" pos:end="77:46">||</operator> <name pos:start="77:48" pos:end="77:61"><name pos:start="77:48" pos:end="77:48">v</name><operator pos:start="77:49" pos:end="77:50">-&gt;</operator><name pos:start="77:51" pos:end="77:51">s</name><operator pos:start="77:52" pos:end="77:52">.</operator><name pos:start="77:53" pos:end="77:61">pict_type</name></name> <operator pos:start="77:63" pos:end="77:64">==</operator> <name pos:start="77:66" pos:end="77:83">AV_PICTURE_TYPE_BI</name></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:25"><block_content pos:start="79:9" pos:end="79:25">

        <expr_stmt pos:start="79:9" pos:end="79:25"><expr pos:start="79:9" pos:end="79:24"><call pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:17">skip_bits</name><argument_list pos:start="79:18" pos:end="79:24">(<argument pos:start="79:19" pos:end="79:20"><expr pos:start="79:19" pos:end="79:20"><name pos:start="79:19" pos:end="79:20">gb</name></expr></argument>, <argument pos:start="79:23" pos:end="79:23"><expr pos:start="79:23" pos:end="79:23"><literal type="number" pos:start="79:23" pos:end="79:23">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="79:27" pos:end="79:49">// skip buffer fullness</comment>



    <if_stmt pos:start="83:5" pos:end="85:17"><if pos:start="83:5" pos:end="85:17">if <condition pos:start="83:8" pos:end="83:22">(<expr pos:start="83:9" pos:end="83:21"><name pos:start="83:9" pos:end="83:21"><name pos:start="83:9" pos:end="83:9">v</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:21">parse_only</name></name></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:17"><block_content pos:start="85:9" pos:end="85:17">

        <return pos:start="85:9" pos:end="85:17">return <expr pos:start="85:16" pos:end="85:16"><literal type="number" pos:start="85:16" pos:end="85:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="89:5" pos:end="89:23">/* calculate RND */</comment>

    <if_stmt pos:start="91:5" pos:end="93:19"><if pos:start="91:5" pos:end="93:19">if <condition pos:start="91:8" pos:end="91:84">(<expr pos:start="91:9" pos:end="91:83"><name pos:start="91:9" pos:end="91:22"><name pos:start="91:9" pos:end="91:9">v</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:12">s</name><operator pos:start="91:13" pos:end="91:13">.</operator><name pos:start="91:14" pos:end="91:22">pict_type</name></name> <operator pos:start="91:24" pos:end="91:25">==</operator> <name pos:start="91:27" pos:end="91:43">AV_PICTURE_TYPE_I</name> <operator pos:start="91:45" pos:end="91:46">||</operator> <name pos:start="91:48" pos:end="91:61"><name pos:start="91:48" pos:end="91:48">v</name><operator pos:start="91:49" pos:end="91:50">-&gt;</operator><name pos:start="91:51" pos:end="91:51">s</name><operator pos:start="91:52" pos:end="91:52">.</operator><name pos:start="91:53" pos:end="91:61">pict_type</name></name> <operator pos:start="91:63" pos:end="91:64">==</operator> <name pos:start="91:66" pos:end="91:83">AV_PICTURE_TYPE_BI</name></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:19"><block_content pos:start="93:9" pos:end="93:19">

        <expr_stmt pos:start="93:9" pos:end="93:19"><expr pos:start="93:9" pos:end="93:18"><name pos:start="93:9" pos:end="93:14"><name pos:start="93:9" pos:end="93:9">v</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:14">rnd</name></name> <operator pos:start="93:16" pos:end="93:16">=</operator> <literal type="number" pos:start="93:18" pos:end="93:18">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="95:5" pos:end="97:20"><if pos:start="95:5" pos:end="97:20">if <condition pos:start="95:8" pos:end="95:44">(<expr pos:start="95:9" pos:end="95:43"><name pos:start="95:9" pos:end="95:22"><name pos:start="95:9" pos:end="95:9">v</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:12">s</name><operator pos:start="95:13" pos:end="95:13">.</operator><name pos:start="95:14" pos:end="95:22">pict_type</name></name> <operator pos:start="95:24" pos:end="95:25">==</operator> <name pos:start="95:27" pos:end="95:43">AV_PICTURE_TYPE_P</name></expr>)</condition><block type="pseudo" pos:start="97:9" pos:end="97:20"><block_content pos:start="97:9" pos:end="97:20">

        <expr_stmt pos:start="97:9" pos:end="97:20"><expr pos:start="97:9" pos:end="97:19"><name pos:start="97:9" pos:end="97:14"><name pos:start="97:9" pos:end="97:9">v</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:14">rnd</name></name> <operator pos:start="97:16" pos:end="97:17">^=</operator> <literal type="number" pos:start="97:19" pos:end="97:19">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="101:5" pos:end="101:25">/* Quantizer stuff */</comment>

    <expr_stmt pos:start="103:5" pos:end="103:30"><expr pos:start="103:5" pos:end="103:29"><name pos:start="103:5" pos:end="103:11">pqindex</name> <operator pos:start="103:13" pos:end="103:13">=</operator> <call pos:start="103:15" pos:end="103:29"><name pos:start="103:15" pos:end="103:22">get_bits</name><argument_list pos:start="103:23" pos:end="103:29">(<argument pos:start="103:24" pos:end="103:25"><expr pos:start="103:24" pos:end="103:25"><name pos:start="103:24" pos:end="103:25">gb</name></expr></argument>, <argument pos:start="103:28" pos:end="103:28"><expr pos:start="103:28" pos:end="103:28"><literal type="number" pos:start="103:28" pos:end="103:28">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="105:5" pos:end="107:18"><if pos:start="105:5" pos:end="107:18">if <condition pos:start="105:8" pos:end="105:17">(<expr pos:start="105:9" pos:end="105:16"><operator pos:start="105:9" pos:end="105:9">!</operator><name pos:start="105:10" pos:end="105:16">pqindex</name></expr>)</condition><block type="pseudo" pos:start="107:9" pos:end="107:18"><block_content pos:start="107:9" pos:end="107:18">

        <return pos:start="107:9" pos:end="107:18">return <expr pos:start="107:16" pos:end="107:17"><operator pos:start="107:16" pos:end="107:16">-</operator><literal type="number" pos:start="107:17" pos:end="107:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="109:5" pos:end="115:48"><if pos:start="109:5" pos:end="111:48">if <condition pos:start="109:8" pos:end="109:50">(<expr pos:start="109:9" pos:end="109:49"><name pos:start="109:9" pos:end="109:25"><name pos:start="109:9" pos:end="109:9">v</name><operator pos:start="109:10" pos:end="109:11">-&gt;</operator><name pos:start="109:12" pos:end="109:25">quantizer_mode</name></name> <operator pos:start="109:27" pos:end="109:28">==</operator> <name pos:start="109:30" pos:end="109:49">QUANT_FRAME_IMPLICIT</name></expr>)</condition><block type="pseudo" pos:start="111:9" pos:end="111:48"><block_content pos:start="111:9" pos:end="111:48">

        <expr_stmt pos:start="111:9" pos:end="111:48"><expr pos:start="111:9" pos:end="111:47"><name pos:start="111:9" pos:end="111:13"><name pos:start="111:9" pos:end="111:9">v</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:13">pq</name></name> <operator pos:start="111:15" pos:end="111:15">=</operator> <name pos:start="111:17" pos:end="111:47"><name pos:start="111:17" pos:end="111:35">ff_vc1_pquant_table</name><index pos:start="111:36" pos:end="111:38">[<expr pos:start="111:37" pos:end="111:37"><literal type="number" pos:start="111:37" pos:end="111:37">0</literal></expr>]</index><index pos:start="111:39" pos:end="111:47">[<expr pos:start="111:40" pos:end="111:46"><name pos:start="111:40" pos:end="111:46">pqindex</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="113:5" pos:end="115:48">else<block type="pseudo" pos:start="115:9" pos:end="115:48"><block_content pos:start="115:9" pos:end="115:48">

        <expr_stmt pos:start="115:9" pos:end="115:48"><expr pos:start="115:9" pos:end="115:47"><name pos:start="115:9" pos:end="115:13"><name pos:start="115:9" pos:end="115:9">v</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:13">pq</name></name> <operator pos:start="115:15" pos:end="115:15">=</operator> <name pos:start="115:17" pos:end="115:47"><name pos:start="115:17" pos:end="115:35">ff_vc1_pquant_table</name><index pos:start="115:36" pos:end="115:38">[<expr pos:start="115:37" pos:end="115:37"><literal type="number" pos:start="115:37" pos:end="115:37">1</literal></expr>]</index><index pos:start="115:39" pos:end="115:47">[<expr pos:start="115:40" pos:end="115:46"><name pos:start="115:40" pos:end="115:46">pqindex</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:22"><expr pos:start="119:5" pos:end="119:21"><name pos:start="119:5" pos:end="119:17"><name pos:start="119:5" pos:end="119:5">v</name><operator pos:start="119:6" pos:end="119:7">-&gt;</operator><name pos:start="119:8" pos:end="119:17">pquantizer</name></name> <operator pos:start="119:19" pos:end="119:19">=</operator> <literal type="number" pos:start="119:21" pos:end="119:21">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="121:5" pos:end="123:36"><if pos:start="121:5" pos:end="123:36">if <condition pos:start="121:8" pos:end="121:50">(<expr pos:start="121:9" pos:end="121:49"><name pos:start="121:9" pos:end="121:25"><name pos:start="121:9" pos:end="121:9">v</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:25">quantizer_mode</name></name> <operator pos:start="121:27" pos:end="121:28">==</operator> <name pos:start="121:30" pos:end="121:49">QUANT_FRAME_IMPLICIT</name></expr>)</condition><block type="pseudo" pos:start="123:9" pos:end="123:36"><block_content pos:start="123:9" pos:end="123:36">

        <expr_stmt pos:start="123:9" pos:end="123:36"><expr pos:start="123:9" pos:end="123:35"><name pos:start="123:9" pos:end="123:21"><name pos:start="123:9" pos:end="123:9">v</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:21">pquantizer</name></name> <operator pos:start="123:23" pos:end="123:23">=</operator> <name pos:start="123:25" pos:end="123:31">pqindex</name> <operator pos:start="123:33" pos:end="123:33">&lt;</operator> <literal type="number" pos:start="123:35" pos:end="123:35">9</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="125:5" pos:end="127:26"><if pos:start="125:5" pos:end="127:26">if <condition pos:start="125:8" pos:end="125:47">(<expr pos:start="125:9" pos:end="125:46"><name pos:start="125:9" pos:end="125:25"><name pos:start="125:9" pos:end="125:9">v</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:25">quantizer_mode</name></name> <operator pos:start="125:27" pos:end="125:28">==</operator> <name pos:start="125:30" pos:end="125:46">QUANT_NON_UNIFORM</name></expr>)</condition><block type="pseudo" pos:start="127:9" pos:end="127:26"><block_content pos:start="127:9" pos:end="127:26">

        <expr_stmt pos:start="127:9" pos:end="127:26"><expr pos:start="127:9" pos:end="127:25"><name pos:start="127:9" pos:end="127:21"><name pos:start="127:9" pos:end="127:9">v</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:21">pquantizer</name></name> <operator pos:start="127:23" pos:end="127:23">=</operator> <literal type="number" pos:start="127:25" pos:end="127:25">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:25"><expr pos:start="129:5" pos:end="129:24"><name pos:start="129:5" pos:end="129:14"><name pos:start="129:5" pos:end="129:5">v</name><operator pos:start="129:6" pos:end="129:7">-&gt;</operator><name pos:start="129:8" pos:end="129:14">pqindex</name></name> <operator pos:start="129:16" pos:end="129:16">=</operator> <name pos:start="129:18" pos:end="129:24">pqindex</name></expr>;</expr_stmt>

    <if_stmt pos:start="131:5" pos:end="137:22"><if pos:start="131:5" pos:end="133:34">if <condition pos:start="131:8" pos:end="131:20">(<expr pos:start="131:9" pos:end="131:19"><name pos:start="131:9" pos:end="131:15">pqindex</name> <operator pos:start="131:17" pos:end="131:17">&lt;</operator> <literal type="number" pos:start="131:19" pos:end="131:19">9</literal></expr>)</condition><block type="pseudo" pos:start="133:9" pos:end="133:34"><block_content pos:start="133:9" pos:end="133:34">

        <expr_stmt pos:start="133:9" pos:end="133:34"><expr pos:start="133:9" pos:end="133:33"><name pos:start="133:9" pos:end="133:17"><name pos:start="133:9" pos:end="133:9">v</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:17">halfpq</name></name> <operator pos:start="133:19" pos:end="133:19">=</operator> <call pos:start="133:21" pos:end="133:33"><name pos:start="133:21" pos:end="133:29">get_bits1</name><argument_list pos:start="133:30" pos:end="133:33">(<argument pos:start="133:31" pos:end="133:32"><expr pos:start="133:31" pos:end="133:32"><name pos:start="133:31" pos:end="133:32">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="135:5" pos:end="137:22">else<block type="pseudo" pos:start="137:9" pos:end="137:22"><block_content pos:start="137:9" pos:end="137:22">

        <expr_stmt pos:start="137:9" pos:end="137:22"><expr pos:start="137:9" pos:end="137:21"><name pos:start="137:9" pos:end="137:17"><name pos:start="137:9" pos:end="137:9">v</name><operator pos:start="137:10" pos:end="137:11">-&gt;</operator><name pos:start="137:12" pos:end="137:17">halfpq</name></name> <operator pos:start="137:19" pos:end="137:19">=</operator> <literal type="number" pos:start="137:21" pos:end="137:21">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="139:5" pos:end="141:38"><if pos:start="139:5" pos:end="141:38">if <condition pos:start="139:8" pos:end="139:50">(<expr pos:start="139:9" pos:end="139:49"><name pos:start="139:9" pos:end="139:25"><name pos:start="139:9" pos:end="139:9">v</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:25">quantizer_mode</name></name> <operator pos:start="139:27" pos:end="139:28">==</operator> <name pos:start="139:30" pos:end="139:49">QUANT_FRAME_EXPLICIT</name></expr>)</condition><block type="pseudo" pos:start="141:9" pos:end="141:38"><block_content pos:start="141:9" pos:end="141:38">

        <expr_stmt pos:start="141:9" pos:end="141:38"><expr pos:start="141:9" pos:end="141:37"><name pos:start="141:9" pos:end="141:21"><name pos:start="141:9" pos:end="141:9">v</name><operator pos:start="141:10" pos:end="141:11">-&gt;</operator><name pos:start="141:12" pos:end="141:21">pquantizer</name></name> <operator pos:start="141:23" pos:end="141:23">=</operator> <call pos:start="141:25" pos:end="141:37"><name pos:start="141:25" pos:end="141:33">get_bits1</name><argument_list pos:start="141:34" pos:end="141:37">(<argument pos:start="141:35" pos:end="141:36"><expr pos:start="141:35" pos:end="141:36"><name pos:start="141:35" pos:end="141:36">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:21"><expr pos:start="143:5" pos:end="143:20"><name pos:start="143:5" pos:end="143:16"><name pos:start="143:5" pos:end="143:5">v</name><operator pos:start="143:6" pos:end="143:7">-&gt;</operator><name pos:start="143:8" pos:end="143:16">dquantfrm</name></name> <operator pos:start="143:18" pos:end="143:18">=</operator> <literal type="number" pos:start="143:20" pos:end="143:20">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="145:5" pos:end="147:41"><if pos:start="145:5" pos:end="147:41">if <condition pos:start="145:8" pos:end="145:28">(<expr pos:start="145:9" pos:end="145:27"><name pos:start="145:9" pos:end="145:22"><name pos:start="145:9" pos:end="145:9">v</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:22">extended_mv</name></name> <operator pos:start="145:24" pos:end="145:25">==</operator> <literal type="number" pos:start="145:27" pos:end="145:27">1</literal></expr>)</condition><block type="pseudo" pos:start="147:9" pos:end="147:41"><block_content pos:start="147:9" pos:end="147:41">

        <expr_stmt pos:start="147:9" pos:end="147:41"><expr pos:start="147:9" pos:end="147:40"><name pos:start="147:9" pos:end="147:18"><name pos:start="147:9" pos:end="147:9">v</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:18">mvrange</name></name> <operator pos:start="147:20" pos:end="147:20">=</operator> <call pos:start="147:22" pos:end="147:40"><name pos:start="147:22" pos:end="147:30">get_unary</name><argument_list pos:start="147:31" pos:end="147:40">(<argument pos:start="147:32" pos:end="147:33"><expr pos:start="147:32" pos:end="147:33"><name pos:start="147:32" pos:end="147:33">gb</name></expr></argument>, <argument pos:start="147:36" pos:end="147:36"><expr pos:start="147:36" pos:end="147:36"><literal type="number" pos:start="147:36" pos:end="147:36">0</literal></expr></argument>, <argument pos:start="147:39" pos:end="147:39"><expr pos:start="147:39" pos:end="147:39"><literal type="number" pos:start="147:39" pos:end="147:39">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:48"><expr pos:start="149:5" pos:end="149:47"><name pos:start="149:5" pos:end="149:10"><name pos:start="149:5" pos:end="149:5">v</name><operator pos:start="149:6" pos:end="149:7">-&gt;</operator><name pos:start="149:8" pos:end="149:10">k_x</name></name> <operator pos:start="149:12" pos:end="149:12">=</operator> <name pos:start="149:14" pos:end="149:23"><name pos:start="149:14" pos:end="149:14">v</name><operator pos:start="149:15" pos:end="149:16">-&gt;</operator><name pos:start="149:17" pos:end="149:23">mvrange</name></name> <operator pos:start="149:25" pos:end="149:25">+</operator> <literal type="number" pos:start="149:27" pos:end="149:29">9</literal> <operator pos:start="149:29" pos:end="149:29">+</operator> <operator pos:start="149:31" pos:end="149:31">(</operator><name pos:start="149:32" pos:end="149:41"><name pos:start="149:32" pos:end="149:32">v</name><operator pos:start="149:33" pos:end="149:34">-&gt;</operator><name pos:start="149:35" pos:end="149:41">mvrange</name></name> <operator pos:start="149:43" pos:end="149:44">&gt;&gt;</operator> <literal type="number" pos:start="149:46" pos:end="149:46">1</literal><operator pos:start="149:47" pos:end="149:47">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="149:50" pos:end="149:72">//k_x can be 9 10 12 13</comment>

    <expr_stmt pos:start="151:5" pos:end="151:28"><expr pos:start="151:5" pos:end="151:27"><name pos:start="151:5" pos:end="151:10"><name pos:start="151:5" pos:end="151:5">v</name><operator pos:start="151:6" pos:end="151:7">-&gt;</operator><name pos:start="151:8" pos:end="151:10">k_y</name></name> <operator pos:start="151:12" pos:end="151:12">=</operator> <name pos:start="151:14" pos:end="151:23"><name pos:start="151:14" pos:end="151:14">v</name><operator pos:start="151:15" pos:end="151:16">-&gt;</operator><name pos:start="151:17" pos:end="151:23">mvrange</name></name> <operator pos:start="151:25" pos:end="151:25">+</operator> <literal type="number" pos:start="151:27" pos:end="151:27">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="151:30" pos:end="151:51">//k_y can be 8 9 10 11</comment>

    <expr_stmt pos:start="153:5" pos:end="153:35"><expr pos:start="153:5" pos:end="153:34"><name pos:start="153:5" pos:end="153:14"><name pos:start="153:5" pos:end="153:5">v</name><operator pos:start="153:6" pos:end="153:7">-&gt;</operator><name pos:start="153:8" pos:end="153:14">range_x</name></name> <operator pos:start="153:16" pos:end="153:16">=</operator> <literal type="number" pos:start="153:18" pos:end="153:18">1</literal> <operator pos:start="153:20" pos:end="153:21">&lt;&lt;</operator> <operator pos:start="153:23" pos:end="153:23">(</operator><name pos:start="153:24" pos:end="153:29"><name pos:start="153:24" pos:end="153:24">v</name><operator pos:start="153:25" pos:end="153:26">-&gt;</operator><name pos:start="153:27" pos:end="153:29">k_x</name></name> <operator pos:start="153:31" pos:end="153:31">-</operator> <literal type="number" pos:start="153:33" pos:end="153:33">1</literal><operator pos:start="153:34" pos:end="153:34">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:35"><expr pos:start="155:5" pos:end="155:34"><name pos:start="155:5" pos:end="155:14"><name pos:start="155:5" pos:end="155:5">v</name><operator pos:start="155:6" pos:end="155:7">-&gt;</operator><name pos:start="155:8" pos:end="155:14">range_y</name></name> <operator pos:start="155:16" pos:end="155:16">=</operator> <literal type="number" pos:start="155:18" pos:end="155:18">1</literal> <operator pos:start="155:20" pos:end="155:21">&lt;&lt;</operator> <operator pos:start="155:23" pos:end="155:23">(</operator><name pos:start="155:24" pos:end="155:29"><name pos:start="155:24" pos:end="155:24">v</name><operator pos:start="155:25" pos:end="155:26">-&gt;</operator><name pos:start="155:27" pos:end="155:29">k_y</name></name> <operator pos:start="155:31" pos:end="155:31">-</operator> <literal type="number" pos:start="155:33" pos:end="155:33">1</literal><operator pos:start="155:34" pos:end="155:34">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="157:5" pos:end="159:36"><if pos:start="157:5" pos:end="159:36">if <condition pos:start="157:8" pos:end="157:59">(<expr pos:start="157:9" pos:end="157:58"><name pos:start="157:9" pos:end="157:19"><name pos:start="157:9" pos:end="157:9">v</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:19">multires</name></name> <operator pos:start="157:21" pos:end="157:22">&amp;&amp;</operator> <name pos:start="157:24" pos:end="157:37"><name pos:start="157:24" pos:end="157:24">v</name><operator pos:start="157:25" pos:end="157:26">-&gt;</operator><name pos:start="157:27" pos:end="157:27">s</name><operator pos:start="157:28" pos:end="157:28">.</operator><name pos:start="157:29" pos:end="157:37">pict_type</name></name> <operator pos:start="157:39" pos:end="157:40">!=</operator> <name pos:start="157:42" pos:end="157:58">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="159:9" pos:end="159:36"><block_content pos:start="159:9" pos:end="159:36">

        <expr_stmt pos:start="159:9" pos:end="159:36"><expr pos:start="159:9" pos:end="159:35"><name pos:start="159:9" pos:end="159:17"><name pos:start="159:9" pos:end="159:9">v</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:17">respic</name></name> <operator pos:start="159:19" pos:end="159:19">=</operator> <call pos:start="159:21" pos:end="159:35"><name pos:start="159:21" pos:end="159:28">get_bits</name><argument_list pos:start="159:29" pos:end="159:35">(<argument pos:start="159:30" pos:end="159:31"><expr pos:start="159:30" pos:end="159:31"><name pos:start="159:30" pos:end="159:31">gb</name></expr></argument>, <argument pos:start="159:34" pos:end="159:34"><expr pos:start="159:34" pos:end="159:34"><literal type="number" pos:start="159:34" pos:end="159:34">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="163:5" pos:end="169:23"><if pos:start="163:5" pos:end="167:5">if <condition pos:start="163:8" pos:end="163:99">(<expr pos:start="163:9" pos:end="163:98"><name pos:start="163:9" pos:end="163:17"><name pos:start="163:9" pos:end="163:9">v</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:17">res_x8</name></name> <operator pos:start="163:19" pos:end="163:20">&amp;&amp;</operator> <operator pos:start="163:22" pos:end="163:22">(</operator><name pos:start="163:23" pos:end="163:36"><name pos:start="163:23" pos:end="163:23">v</name><operator pos:start="163:24" pos:end="163:25">-&gt;</operator><name pos:start="163:26" pos:end="163:26">s</name><operator pos:start="163:27" pos:end="163:27">.</operator><name pos:start="163:28" pos:end="163:36">pict_type</name></name> <operator pos:start="163:38" pos:end="163:39">==</operator> <name pos:start="163:41" pos:end="163:57">AV_PICTURE_TYPE_I</name> <operator pos:start="163:59" pos:end="163:60">||</operator> <name pos:start="163:62" pos:end="163:75"><name pos:start="163:62" pos:end="163:62">v</name><operator pos:start="163:63" pos:end="163:64">-&gt;</operator><name pos:start="163:65" pos:end="163:65">s</name><operator pos:start="163:66" pos:end="163:66">.</operator><name pos:start="163:67" pos:end="163:75">pict_type</name></name> <operator pos:start="163:77" pos:end="163:78">==</operator> <name pos:start="163:80" pos:end="163:97">AV_PICTURE_TYPE_BI</name><operator pos:start="163:98" pos:end="163:98">)</operator></expr>)</condition> <block pos:start="163:101" pos:end="167:5">{<block_content pos:start="165:9" pos:end="165:35">

        <expr_stmt pos:start="165:9" pos:end="165:35"><expr pos:start="165:9" pos:end="165:34"><name pos:start="165:9" pos:end="165:18"><name pos:start="165:9" pos:end="165:9">v</name><operator pos:start="165:10" pos:end="165:11">-&gt;</operator><name pos:start="165:12" pos:end="165:18">x8_type</name></name> <operator pos:start="165:20" pos:end="165:20">=</operator> <call pos:start="165:22" pos:end="165:34"><name pos:start="165:22" pos:end="165:30">get_bits1</name><argument_list pos:start="165:31" pos:end="165:34">(<argument pos:start="165:32" pos:end="165:33"><expr pos:start="165:32" pos:end="165:33"><name pos:start="165:32" pos:end="165:33">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="167:7" pos:end="169:23">else<block type="pseudo" pos:start="169:9" pos:end="169:23"><block_content pos:start="169:9" pos:end="169:23">

        <expr_stmt pos:start="169:9" pos:end="169:23"><expr pos:start="169:9" pos:end="169:22"><name pos:start="169:9" pos:end="169:18"><name pos:start="169:9" pos:end="169:9">v</name><operator pos:start="169:10" pos:end="169:11">-&gt;</operator><name pos:start="169:12" pos:end="169:18">x8_type</name></name> <operator pos:start="169:20" pos:end="169:20">=</operator> <literal type="number" pos:start="169:22" pos:end="169:22">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="171:5" pos:end="175:55"><expr pos:start="171:5" pos:end="175:54"><call pos:start="171:5" pos:end="175:54"><name pos:start="171:5" pos:end="171:11">av_dlog</name><argument_list pos:start="171:12" pos:end="175:54">(<argument pos:start="171:13" pos:end="171:22"><expr pos:start="171:13" pos:end="171:22"><name pos:start="171:13" pos:end="171:22"><name pos:start="171:13" pos:end="171:13">v</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:16">s</name><operator pos:start="171:17" pos:end="171:17">.</operator><name pos:start="171:18" pos:end="171:22">avctx</name></name></expr></argument>, <argument pos:start="171:25" pos:end="171:58"><expr pos:start="171:25" pos:end="171:58"><literal type="string" pos:start="171:25" pos:end="171:58">"%c Frame: QP=[%i]%i (+%i/2) %i\n"</literal></expr></argument>,

            <argument pos:start="173:13" pos:end="173:109"><expr pos:start="173:13" pos:end="173:109"><ternary pos:start="173:13" pos:end="173:109"><condition pos:start="173:13" pos:end="173:51"><expr pos:start="173:13" pos:end="173:49"><operator pos:start="173:13" pos:end="173:13">(</operator><name pos:start="173:14" pos:end="173:27"><name pos:start="173:14" pos:end="173:14">v</name><operator pos:start="173:15" pos:end="173:16">-&gt;</operator><name pos:start="173:17" pos:end="173:17">s</name><operator pos:start="173:18" pos:end="173:18">.</operator><name pos:start="173:19" pos:end="173:27">pict_type</name></name> <operator pos:start="173:29" pos:end="173:30">==</operator> <name pos:start="173:32" pos:end="173:48">AV_PICTURE_TYPE_P</name><operator pos:start="173:49" pos:end="173:49">)</operator></expr> ?</condition><then pos:start="173:53" pos:end="173:55"> <expr pos:start="173:53" pos:end="173:55"><literal type="char" pos:start="173:53" pos:end="173:55">'P'</literal></expr> </then><else pos:start="173:57" pos:end="173:109">: <expr pos:start="173:59" pos:end="173:109"><operator pos:start="173:59" pos:end="173:59">(</operator><ternary pos:start="173:60" pos:end="173:108"><condition pos:start="173:60" pos:end="173:98"><expr pos:start="173:60" pos:end="173:96"><operator pos:start="173:60" pos:end="173:60">(</operator><name pos:start="173:61" pos:end="173:74"><name pos:start="173:61" pos:end="173:61">v</name><operator pos:start="173:62" pos:end="173:63">-&gt;</operator><name pos:start="173:64" pos:end="173:64">s</name><operator pos:start="173:65" pos:end="173:65">.</operator><name pos:start="173:66" pos:end="173:74">pict_type</name></name> <operator pos:start="173:76" pos:end="173:77">==</operator> <name pos:start="173:79" pos:end="173:95">AV_PICTURE_TYPE_I</name><operator pos:start="173:96" pos:end="173:96">)</operator></expr> ?</condition><then pos:start="173:100" pos:end="173:102"> <expr pos:start="173:100" pos:end="173:102"><literal type="char" pos:start="173:100" pos:end="173:102">'I'</literal></expr> </then><else pos:start="173:104" pos:end="173:108">: <expr pos:start="173:106" pos:end="173:108"><literal type="char" pos:start="173:106" pos:end="173:108">'B'</literal></expr></else></ternary><operator pos:start="173:109" pos:end="173:109">)</operator></expr></else></ternary></expr></argument>,

            <argument pos:start="175:13" pos:end="175:19"><expr pos:start="175:13" pos:end="175:19"><name pos:start="175:13" pos:end="175:19">pqindex</name></expr></argument>, <argument pos:start="175:22" pos:end="175:26"><expr pos:start="175:22" pos:end="175:26"><name pos:start="175:22" pos:end="175:26"><name pos:start="175:22" pos:end="175:22">v</name><operator pos:start="175:23" pos:end="175:24">-&gt;</operator><name pos:start="175:25" pos:end="175:26">pq</name></name></expr></argument>, <argument pos:start="175:29" pos:end="175:37"><expr pos:start="175:29" pos:end="175:37"><name pos:start="175:29" pos:end="175:37"><name pos:start="175:29" pos:end="175:29">v</name><operator pos:start="175:30" pos:end="175:31">-&gt;</operator><name pos:start="175:32" pos:end="175:37">halfpq</name></name></expr></argument>, <argument pos:start="175:40" pos:end="175:53"><expr pos:start="175:40" pos:end="175:53"><name pos:start="175:40" pos:end="175:53"><name pos:start="175:40" pos:end="175:40">v</name><operator pos:start="175:41" pos:end="175:42">-&gt;</operator><name pos:start="175:43" pos:end="175:53">rangeredfrm</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="179:5" pos:end="181:23"><if pos:start="179:5" pos:end="181:23">if <condition pos:start="179:8" pos:end="179:33">(<expr pos:start="179:9" pos:end="179:32"><name pos:start="179:9" pos:end="179:32"><name pos:start="179:9" pos:end="179:9">v</name><operator pos:start="179:10" pos:end="179:11">-&gt;</operator><name pos:start="179:12" pos:end="179:32">first_pic_header_flag</name></name></expr>)</condition><block type="pseudo" pos:start="181:9" pos:end="181:23"><block_content pos:start="181:9" pos:end="181:23">

        <expr_stmt pos:start="181:9" pos:end="181:23"><expr pos:start="181:9" pos:end="181:22"><call pos:start="181:9" pos:end="181:22"><name pos:start="181:9" pos:end="181:19">rotate_luts</name><argument_list pos:start="181:20" pos:end="181:22">(<argument pos:start="181:21" pos:end="181:21"><expr pos:start="181:21" pos:end="181:21"><name pos:start="181:21" pos:end="181:21">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <switch pos:start="185:5" pos:end="399:5">switch <condition pos:start="185:12" pos:end="185:27">(<expr pos:start="185:13" pos:end="185:26"><name pos:start="185:13" pos:end="185:26"><name pos:start="185:13" pos:end="185:13">v</name><operator pos:start="185:14" pos:end="185:15">-&gt;</operator><name pos:start="185:16" pos:end="185:16">s</name><operator pos:start="185:17" pos:end="185:17">.</operator><name pos:start="185:18" pos:end="185:26">pict_type</name></name></expr>)</condition> <block pos:start="185:29" pos:end="399:5">{<block_content pos:start="187:5" pos:end="397:14">

    <case pos:start="187:5" pos:end="187:27">case <expr pos:start="187:10" pos:end="187:26"><name pos:start="187:10" pos:end="187:26">AV_PICTURE_TYPE_P</name></expr>:</case>

        <if_stmt pos:start="189:9" pos:end="193:45"><if pos:start="189:9" pos:end="189:45">if <condition pos:start="189:12" pos:end="189:22">(<expr pos:start="189:13" pos:end="189:21"><name pos:start="189:13" pos:end="189:17"><name pos:start="189:13" pos:end="189:13">v</name><operator pos:start="189:14" pos:end="189:15">-&gt;</operator><name pos:start="189:16" pos:end="189:17">pq</name></name> <operator pos:start="189:19" pos:end="189:19">&lt;</operator> <literal type="number" pos:start="189:21" pos:end="189:21">5</literal></expr>)</condition><block type="pseudo" pos:start="189:30" pos:end="189:45"><block_content pos:start="189:30" pos:end="189:45">       <expr_stmt pos:start="189:30" pos:end="189:45"><expr pos:start="189:30" pos:end="189:44"><name pos:start="189:30" pos:end="189:40"><name pos:start="189:30" pos:end="189:30">v</name><operator pos:start="189:31" pos:end="189:32">-&gt;</operator><name pos:start="189:33" pos:end="189:40">tt_index</name></name> <operator pos:start="189:42" pos:end="189:42">=</operator> <literal type="number" pos:start="189:44" pos:end="189:44">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="191:9" pos:end="191:45">else if <condition pos:start="191:17" pos:end="191:28">(<expr pos:start="191:18" pos:end="191:27"><name pos:start="191:18" pos:end="191:22"><name pos:start="191:18" pos:end="191:18">v</name><operator pos:start="191:19" pos:end="191:20">-&gt;</operator><name pos:start="191:21" pos:end="191:22">pq</name></name> <operator pos:start="191:24" pos:end="191:24">&lt;</operator> <literal type="number" pos:start="191:26" pos:end="191:27">13</literal></expr>)</condition><block type="pseudo" pos:start="191:30" pos:end="191:45"><block_content pos:start="191:30" pos:end="191:45"> <expr_stmt pos:start="191:30" pos:end="191:45"><expr pos:start="191:30" pos:end="191:44"><name pos:start="191:30" pos:end="191:40"><name pos:start="191:30" pos:end="191:30">v</name><operator pos:start="191:31" pos:end="191:32">-&gt;</operator><name pos:start="191:33" pos:end="191:40">tt_index</name></name> <operator pos:start="191:42" pos:end="191:42">=</operator> <literal type="number" pos:start="191:44" pos:end="191:44">1</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="193:9" pos:end="193:45">else<block type="pseudo" pos:start="193:30" pos:end="193:45"><block_content pos:start="193:30" pos:end="193:45">                 <expr_stmt pos:start="193:30" pos:end="193:45"><expr pos:start="193:30" pos:end="193:44"><name pos:start="193:30" pos:end="193:40"><name pos:start="193:30" pos:end="193:30">v</name><operator pos:start="193:31" pos:end="193:32">-&gt;</operator><name pos:start="193:33" pos:end="193:40">tt_index</name></name> <operator pos:start="193:42" pos:end="193:42">=</operator> <literal type="number" pos:start="193:44" pos:end="193:44">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="197:9" pos:end="197:40"><expr pos:start="197:9" pos:end="197:39"><name pos:start="197:9" pos:end="197:16">lowquant</name> <operator pos:start="197:18" pos:end="197:18">=</operator> <ternary pos:start="197:20" pos:end="197:39"><condition pos:start="197:20" pos:end="197:33"><expr pos:start="197:20" pos:end="197:31"><operator pos:start="197:20" pos:end="197:20">(</operator><name pos:start="197:21" pos:end="197:25"><name pos:start="197:21" pos:end="197:21">v</name><operator pos:start="197:22" pos:end="197:23">-&gt;</operator><name pos:start="197:24" pos:end="197:25">pq</name></name> <operator pos:start="197:27" pos:end="197:27">&gt;</operator> <literal type="number" pos:start="197:29" pos:end="197:30">12</literal><operator pos:start="197:31" pos:end="197:31">)</operator></expr> ?</condition><then pos:start="197:35" pos:end="197:35"> <expr pos:start="197:35" pos:end="197:35"><literal type="number" pos:start="197:35" pos:end="197:35">0</literal></expr> </then><else pos:start="197:37" pos:end="197:39">: <expr pos:start="197:39" pos:end="197:39"><literal type="number" pos:start="197:39" pos:end="197:39">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:74"><expr pos:start="199:9" pos:end="199:73"><name pos:start="199:9" pos:end="199:18"><name pos:start="199:9" pos:end="199:9">v</name><operator pos:start="199:10" pos:end="199:11">-&gt;</operator><name pos:start="199:12" pos:end="199:18">mv_mode</name></name> <operator pos:start="199:20" pos:end="199:20">=</operator> <name pos:start="199:22" pos:end="199:73"><name pos:start="199:22" pos:end="199:42">ff_vc1_mv_pmode_table</name><index pos:start="199:43" pos:end="199:52">[<expr pos:start="199:44" pos:end="199:51"><name pos:start="199:44" pos:end="199:51">lowquant</name></expr>]</index><index pos:start="199:53" pos:end="199:73">[<expr pos:start="199:54" pos:end="199:72"><call pos:start="199:54" pos:end="199:72"><name pos:start="199:54" pos:end="199:62">get_unary</name><argument_list pos:start="199:63" pos:end="199:72">(<argument pos:start="199:64" pos:end="199:65"><expr pos:start="199:64" pos:end="199:65"><name pos:start="199:64" pos:end="199:65">gb</name></expr></argument>, <argument pos:start="199:68" pos:end="199:68"><expr pos:start="199:68" pos:end="199:68"><literal type="number" pos:start="199:68" pos:end="199:68">1</literal></expr></argument>, <argument pos:start="199:71" pos:end="199:71"><expr pos:start="199:71" pos:end="199:71"><literal type="number" pos:start="199:71" pos:end="199:71">4</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="201:9" pos:end="217:9"><if pos:start="201:9" pos:end="217:9">if <condition pos:start="201:12" pos:end="201:50">(<expr pos:start="201:13" pos:end="201:49"><name pos:start="201:13" pos:end="201:22"><name pos:start="201:13" pos:end="201:13">v</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:22">mv_mode</name></name> <operator pos:start="201:24" pos:end="201:25">==</operator> <name pos:start="201:27" pos:end="201:49">MV_PMODE_INTENSITY_COMP</name></expr>)</condition> <block pos:start="201:52" pos:end="217:9">{<block_content pos:start="203:13" pos:end="215:85">

            <expr_stmt pos:start="203:13" pos:end="203:80"><expr pos:start="203:13" pos:end="203:79"><name pos:start="203:13" pos:end="203:23"><name pos:start="203:13" pos:end="203:13">v</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:23">mv_mode2</name></name> <operator pos:start="203:25" pos:end="203:25">=</operator> <name pos:start="203:27" pos:end="203:79"><name pos:start="203:27" pos:end="203:48">ff_vc1_mv_pmode_table2</name><index pos:start="203:49" pos:end="203:58">[<expr pos:start="203:50" pos:end="203:57"><name pos:start="203:50" pos:end="203:57">lowquant</name></expr>]</index><index pos:start="203:59" pos:end="203:79">[<expr pos:start="203:60" pos:end="203:78"><call pos:start="203:60" pos:end="203:78"><name pos:start="203:60" pos:end="203:68">get_unary</name><argument_list pos:start="203:69" pos:end="203:78">(<argument pos:start="203:70" pos:end="203:71"><expr pos:start="203:70" pos:end="203:71"><name pos:start="203:70" pos:end="203:71">gb</name></expr></argument>, <argument pos:start="203:74" pos:end="203:74"><expr pos:start="203:74" pos:end="203:74"><literal type="number" pos:start="203:74" pos:end="203:74">1</literal></expr></argument>, <argument pos:start="203:77" pos:end="203:77"><expr pos:start="203:77" pos:end="203:77"><literal type="number" pos:start="203:77" pos:end="203:77">3</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:42"><expr pos:start="205:13" pos:end="205:41"><name pos:start="205:13" pos:end="205:23"><name pos:start="205:13" pos:end="205:13">v</name><operator pos:start="205:14" pos:end="205:15">-&gt;</operator><name pos:start="205:16" pos:end="205:23">lumscale</name></name> <operator pos:start="205:25" pos:end="205:25">=</operator> <call pos:start="205:27" pos:end="205:41"><name pos:start="205:27" pos:end="205:34">get_bits</name><argument_list pos:start="205:35" pos:end="205:41">(<argument pos:start="205:36" pos:end="205:37"><expr pos:start="205:36" pos:end="205:37"><name pos:start="205:36" pos:end="205:37">gb</name></expr></argument>, <argument pos:start="205:40" pos:end="205:40"><expr pos:start="205:40" pos:end="205:40"><literal type="number" pos:start="205:40" pos:end="205:40">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:42"><expr pos:start="207:13" pos:end="207:41"><name pos:start="207:13" pos:end="207:23"><name pos:start="207:13" pos:end="207:13">v</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:23">lumshift</name></name> <operator pos:start="207:25" pos:end="207:25">=</operator> <call pos:start="207:27" pos:end="207:41"><name pos:start="207:27" pos:end="207:34">get_bits</name><argument_list pos:start="207:35" pos:end="207:41">(<argument pos:start="207:36" pos:end="207:37"><expr pos:start="207:36" pos:end="207:37"><name pos:start="207:36" pos:end="207:37">gb</name></expr></argument>, <argument pos:start="207:40" pos:end="207:40"><expr pos:start="207:40" pos:end="207:40"><literal type="number" pos:start="207:40" pos:end="207:40">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:31"><expr pos:start="209:13" pos:end="209:30"><name pos:start="209:13" pos:end="209:26"><name pos:start="209:13" pos:end="209:13">v</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:26">last_use_ic</name></name> <operator pos:start="209:28" pos:end="209:28">=</operator> <literal type="number" pos:start="209:30" pos:end="209:30">1</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="211:13" pos:end="211:63">/* fill lookup tables for intensity compensation */</comment>

            <expr_stmt pos:start="213:13" pos:end="213:85"><expr pos:start="213:13" pos:end="213:84"><call pos:start="213:13" pos:end="213:84"><name pos:start="213:13" pos:end="213:20">INIT_LUT</name><argument_list pos:start="213:21" pos:end="213:84">(<argument pos:start="213:22" pos:end="213:32"><expr pos:start="213:22" pos:end="213:32"><name pos:start="213:22" pos:end="213:32"><name pos:start="213:22" pos:end="213:22">v</name><operator pos:start="213:23" pos:end="213:24">-&gt;</operator><name pos:start="213:25" pos:end="213:32">lumscale</name></name></expr></argument>, <argument pos:start="213:35" pos:end="213:45"><expr pos:start="213:35" pos:end="213:45"><name pos:start="213:35" pos:end="213:45"><name pos:start="213:35" pos:end="213:35">v</name><operator pos:start="213:36" pos:end="213:37">-&gt;</operator><name pos:start="213:38" pos:end="213:45">lumshift</name></name></expr></argument>, <argument pos:start="213:48" pos:end="213:62"><expr pos:start="213:48" pos:end="213:62"><name pos:start="213:48" pos:end="213:62"><name pos:start="213:48" pos:end="213:48">v</name><operator pos:start="213:49" pos:end="213:50">-&gt;</operator><name pos:start="213:51" pos:end="213:59">last_luty</name><index pos:start="213:60" pos:end="213:62">[<expr pos:start="213:61" pos:end="213:61"><literal type="number" pos:start="213:61" pos:end="213:61">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="213:65" pos:end="213:80"><expr pos:start="213:65" pos:end="213:80"><name pos:start="213:65" pos:end="213:80"><name pos:start="213:65" pos:end="213:65">v</name><operator pos:start="213:66" pos:end="213:67">-&gt;</operator><name pos:start="213:68" pos:end="213:77">last_lutuv</name><index pos:start="213:78" pos:end="213:80">[<expr pos:start="213:79" pos:end="213:79"><literal type="number" pos:start="213:79" pos:end="213:79">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="213:83" pos:end="213:83"><expr pos:start="213:83" pos:end="213:83"><literal type="number" pos:start="213:83" pos:end="213:83">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:85"><expr pos:start="215:13" pos:end="215:84"><call pos:start="215:13" pos:end="215:84"><name pos:start="215:13" pos:end="215:20">INIT_LUT</name><argument_list pos:start="215:21" pos:end="215:84">(<argument pos:start="215:22" pos:end="215:32"><expr pos:start="215:22" pos:end="215:32"><name pos:start="215:22" pos:end="215:32"><name pos:start="215:22" pos:end="215:22">v</name><operator pos:start="215:23" pos:end="215:24">-&gt;</operator><name pos:start="215:25" pos:end="215:32">lumscale</name></name></expr></argument>, <argument pos:start="215:35" pos:end="215:45"><expr pos:start="215:35" pos:end="215:45"><name pos:start="215:35" pos:end="215:45"><name pos:start="215:35" pos:end="215:35">v</name><operator pos:start="215:36" pos:end="215:37">-&gt;</operator><name pos:start="215:38" pos:end="215:45">lumshift</name></name></expr></argument>, <argument pos:start="215:48" pos:end="215:62"><expr pos:start="215:48" pos:end="215:62"><name pos:start="215:48" pos:end="215:62"><name pos:start="215:48" pos:end="215:48">v</name><operator pos:start="215:49" pos:end="215:50">-&gt;</operator><name pos:start="215:51" pos:end="215:59">last_luty</name><index pos:start="215:60" pos:end="215:62">[<expr pos:start="215:61" pos:end="215:61"><literal type="number" pos:start="215:61" pos:end="215:61">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="215:65" pos:end="215:80"><expr pos:start="215:65" pos:end="215:80"><name pos:start="215:65" pos:end="215:80"><name pos:start="215:65" pos:end="215:65">v</name><operator pos:start="215:66" pos:end="215:67">-&gt;</operator><name pos:start="215:68" pos:end="215:77">last_lutuv</name><index pos:start="215:78" pos:end="215:80">[<expr pos:start="215:79" pos:end="215:79"><literal type="number" pos:start="215:79" pos:end="215:79">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="215:83" pos:end="215:83"><expr pos:start="215:83" pos:end="215:83"><literal type="number" pos:start="215:83" pos:end="215:83">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:41"><expr pos:start="219:9" pos:end="219:40"><name pos:start="219:9" pos:end="219:18"><name pos:start="219:9" pos:end="219:9">v</name><operator pos:start="219:10" pos:end="219:11">-&gt;</operator><name pos:start="219:12" pos:end="219:18">qs_last</name></name> <operator pos:start="219:20" pos:end="219:20">=</operator> <name pos:start="219:22" pos:end="219:40"><name pos:start="219:22" pos:end="219:22">v</name><operator pos:start="219:23" pos:end="219:24">-&gt;</operator><name pos:start="219:25" pos:end="219:25">s</name><operator pos:start="219:26" pos:end="219:26">.</operator><name pos:start="219:27" pos:end="219:40">quarter_sample</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="221:9" pos:end="237:36"><if pos:start="221:9" pos:end="223:36">if <condition pos:start="221:12" pos:end="221:85">(<expr pos:start="221:13" pos:end="221:84"><name pos:start="221:13" pos:end="221:22"><name pos:start="221:13" pos:end="221:13">v</name><operator pos:start="221:14" pos:end="221:15">-&gt;</operator><name pos:start="221:16" pos:end="221:22">mv_mode</name></name> <operator pos:start="221:24" pos:end="221:25">==</operator> <name pos:start="221:27" pos:end="221:43">MV_PMODE_1MV_HPEL</name> <operator pos:start="221:45" pos:end="221:46">||</operator> <name pos:start="221:48" pos:end="221:57"><name pos:start="221:48" pos:end="221:48">v</name><operator pos:start="221:49" pos:end="221:50">-&gt;</operator><name pos:start="221:51" pos:end="221:57">mv_mode</name></name> <operator pos:start="221:59" pos:end="221:60">==</operator> <name pos:start="221:62" pos:end="221:84">MV_PMODE_1MV_HPEL_BILIN</name></expr>)</condition><block type="pseudo" pos:start="223:13" pos:end="223:36"><block_content pos:start="223:13" pos:end="223:36">

            <expr_stmt pos:start="223:13" pos:end="223:36"><expr pos:start="223:13" pos:end="223:35"><name pos:start="223:13" pos:end="223:31"><name pos:start="223:13" pos:end="223:13">v</name><operator pos:start="223:14" pos:end="223:15">-&gt;</operator><name pos:start="223:16" pos:end="223:16">s</name><operator pos:start="223:17" pos:end="223:17">.</operator><name pos:start="223:18" pos:end="223:31">quarter_sample</name></name> <operator pos:start="223:33" pos:end="223:33">=</operator> <literal type="number" pos:start="223:35" pos:end="223:35">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="225:9" pos:end="235:9">else if <condition pos:start="225:17" pos:end="225:55">(<expr pos:start="225:18" pos:end="225:54"><name pos:start="225:18" pos:end="225:27"><name pos:start="225:18" pos:end="225:18">v</name><operator pos:start="225:19" pos:end="225:20">-&gt;</operator><name pos:start="225:21" pos:end="225:27">mv_mode</name></name> <operator pos:start="225:29" pos:end="225:30">==</operator> <name pos:start="225:32" pos:end="225:54">MV_PMODE_INTENSITY_COMP</name></expr>)</condition> <block pos:start="225:57" pos:end="235:9">{<block_content pos:start="227:13" pos:end="233:40">

            <if_stmt pos:start="227:13" pos:end="233:40"><if pos:start="227:13" pos:end="229:40">if <condition pos:start="227:16" pos:end="227:91">(<expr pos:start="227:17" pos:end="227:90"><name pos:start="227:17" pos:end="227:27"><name pos:start="227:17" pos:end="227:17">v</name><operator pos:start="227:18" pos:end="227:19">-&gt;</operator><name pos:start="227:20" pos:end="227:27">mv_mode2</name></name> <operator pos:start="227:29" pos:end="227:30">==</operator> <name pos:start="227:32" pos:end="227:48">MV_PMODE_1MV_HPEL</name> <operator pos:start="227:50" pos:end="227:51">||</operator> <name pos:start="227:53" pos:end="227:63"><name pos:start="227:53" pos:end="227:53">v</name><operator pos:start="227:54" pos:end="227:55">-&gt;</operator><name pos:start="227:56" pos:end="227:63">mv_mode2</name></name> <operator pos:start="227:65" pos:end="227:66">==</operator> <name pos:start="227:68" pos:end="227:90">MV_PMODE_1MV_HPEL_BILIN</name></expr>)</condition><block type="pseudo" pos:start="229:17" pos:end="229:40"><block_content pos:start="229:17" pos:end="229:40">

                <expr_stmt pos:start="229:17" pos:end="229:40"><expr pos:start="229:17" pos:end="229:39"><name pos:start="229:17" pos:end="229:35"><name pos:start="229:17" pos:end="229:17">v</name><operator pos:start="229:18" pos:end="229:19">-&gt;</operator><name pos:start="229:20" pos:end="229:20">s</name><operator pos:start="229:21" pos:end="229:21">.</operator><name pos:start="229:22" pos:end="229:35">quarter_sample</name></name> <operator pos:start="229:37" pos:end="229:37">=</operator> <literal type="number" pos:start="229:39" pos:end="229:39">0</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="231:13" pos:end="233:40">else<block type="pseudo" pos:start="233:17" pos:end="233:40"><block_content pos:start="233:17" pos:end="233:40">

                <expr_stmt pos:start="233:17" pos:end="233:40"><expr pos:start="233:17" pos:end="233:39"><name pos:start="233:17" pos:end="233:35"><name pos:start="233:17" pos:end="233:17">v</name><operator pos:start="233:18" pos:end="233:19">-&gt;</operator><name pos:start="233:20" pos:end="233:20">s</name><operator pos:start="233:21" pos:end="233:21">.</operator><name pos:start="233:22" pos:end="233:35">quarter_sample</name></name> <operator pos:start="233:37" pos:end="233:37">=</operator> <literal type="number" pos:start="233:39" pos:end="233:39">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="235:11" pos:end="237:36">else<block type="pseudo" pos:start="237:13" pos:end="237:36"><block_content pos:start="237:13" pos:end="237:36">

            <expr_stmt pos:start="237:13" pos:end="237:36"><expr pos:start="237:13" pos:end="237:35"><name pos:start="237:13" pos:end="237:31"><name pos:start="237:13" pos:end="237:13">v</name><operator pos:start="237:14" pos:end="237:15">-&gt;</operator><name pos:start="237:16" pos:end="237:16">s</name><operator pos:start="237:17" pos:end="237:17">.</operator><name pos:start="237:18" pos:end="237:31">quarter_sample</name></name> <operator pos:start="237:33" pos:end="237:33">=</operator> <literal type="number" pos:start="237:35" pos:end="237:35">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:147"><expr pos:start="239:9" pos:end="239:146"><name pos:start="239:9" pos:end="239:18"><name pos:start="239:9" pos:end="239:9">v</name><operator pos:start="239:10" pos:end="239:11">-&gt;</operator><name pos:start="239:12" pos:end="239:12">s</name><operator pos:start="239:13" pos:end="239:13">.</operator><name pos:start="239:14" pos:end="239:18">mspel</name></name> <operator pos:start="239:20" pos:end="239:20">=</operator> <operator pos:start="239:22" pos:end="239:22">!</operator><operator pos:start="239:23" pos:end="239:23">(</operator><name pos:start="239:24" pos:end="239:33"><name pos:start="239:24" pos:end="239:24">v</name><operator pos:start="239:25" pos:end="239:26">-&gt;</operator><name pos:start="239:27" pos:end="239:33">mv_mode</name></name> <operator pos:start="239:35" pos:end="239:36">==</operator> <name pos:start="239:38" pos:end="239:60">MV_PMODE_1MV_HPEL_BILIN</name> <operator pos:start="239:62" pos:end="239:63">||</operator> <operator pos:start="239:65" pos:end="239:65">(</operator><name pos:start="239:66" pos:end="239:75"><name pos:start="239:66" pos:end="239:66">v</name><operator pos:start="239:67" pos:end="239:68">-&gt;</operator><name pos:start="239:69" pos:end="239:75">mv_mode</name></name> <operator pos:start="239:77" pos:end="239:78">==</operator> <name pos:start="239:80" pos:end="239:102">MV_PMODE_INTENSITY_COMP</name> <operator pos:start="239:104" pos:end="239:105">&amp;&amp;</operator> <name pos:start="239:107" pos:end="239:117"><name pos:start="239:107" pos:end="239:107">v</name><operator pos:start="239:108" pos:end="239:109">-&gt;</operator><name pos:start="239:110" pos:end="239:117">mv_mode2</name></name> <operator pos:start="239:119" pos:end="239:120">==</operator> <name pos:start="239:122" pos:end="239:144">MV_PMODE_1MV_HPEL_BILIN</name><operator pos:start="239:145" pos:end="239:145">)</operator><operator pos:start="239:146" pos:end="239:146">)</operator></expr>;</expr_stmt>



        <if_stmt pos:start="243:9" pos:end="265:9"><if pos:start="243:9" pos:end="259:9">if <condition pos:start="243:12" pos:end="247:46">(<expr pos:start="243:13" pos:end="247:45"><operator pos:start="243:13" pos:end="243:13">(</operator><name pos:start="243:14" pos:end="243:23"><name pos:start="243:14" pos:end="243:14">v</name><operator pos:start="243:15" pos:end="243:16">-&gt;</operator><name pos:start="243:17" pos:end="243:23">mv_mode</name></name>  <operator pos:start="243:26" pos:end="243:27">==</operator> <name pos:start="243:29" pos:end="243:51">MV_PMODE_INTENSITY_COMP</name> <operator pos:start="243:53" pos:end="243:54">&amp;&amp;</operator>

             <name pos:start="245:14" pos:end="245:24"><name pos:start="245:14" pos:end="245:14">v</name><operator pos:start="245:15" pos:end="245:16">-&gt;</operator><name pos:start="245:17" pos:end="245:24">mv_mode2</name></name> <operator pos:start="245:26" pos:end="245:27">==</operator> <name pos:start="245:29" pos:end="245:45">MV_PMODE_MIXED_MV</name><operator pos:start="245:46" pos:end="245:46">)</operator>      <operator pos:start="245:53" pos:end="245:54">||</operator>

            <name pos:start="247:13" pos:end="247:22"><name pos:start="247:13" pos:end="247:13">v</name><operator pos:start="247:14" pos:end="247:15">-&gt;</operator><name pos:start="247:16" pos:end="247:22">mv_mode</name></name>   <operator pos:start="247:26" pos:end="247:27">==</operator> <name pos:start="247:29" pos:end="247:45">MV_PMODE_MIXED_MV</name></expr>)</condition> <block pos:start="247:48" pos:end="259:9">{<block_content pos:start="249:13" pos:end="257:67">

            <expr_stmt pos:start="249:13" pos:end="249:83"><expr pos:start="249:13" pos:end="249:82"><name pos:start="249:13" pos:end="249:18">status</name> <operator pos:start="249:20" pos:end="249:20">=</operator> <call pos:start="249:22" pos:end="249:82"><name pos:start="249:22" pos:end="249:38">bitplane_decoding</name><argument_list pos:start="249:39" pos:end="249:82">(<argument pos:start="249:40" pos:end="249:58"><expr pos:start="249:40" pos:end="249:58"><name pos:start="249:40" pos:end="249:58"><name pos:start="249:40" pos:end="249:40">v</name><operator pos:start="249:41" pos:end="249:42">-&gt;</operator><name pos:start="249:43" pos:end="249:58">mv_type_mb_plane</name></name></expr></argument>, <argument pos:start="249:61" pos:end="249:78"><expr pos:start="249:61" pos:end="249:78"><operator pos:start="249:61" pos:end="249:61">&amp;</operator><name pos:start="249:62" pos:end="249:78"><name pos:start="249:62" pos:end="249:62">v</name><operator pos:start="249:63" pos:end="249:64">-&gt;</operator><name pos:start="249:65" pos:end="249:78">mv_type_is_raw</name></name></expr></argument>, <argument pos:start="249:81" pos:end="249:81"><expr pos:start="249:81" pos:end="249:81"><name pos:start="249:81" pos:end="249:81">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="251:13" pos:end="253:26"><if pos:start="251:13" pos:end="253:26">if <condition pos:start="251:16" pos:end="251:27">(<expr pos:start="251:17" pos:end="251:26"><name pos:start="251:17" pos:end="251:22">status</name> <operator pos:start="251:24" pos:end="251:24">&lt;</operator> <literal type="number" pos:start="251:26" pos:end="251:26">0</literal></expr>)</condition><block type="pseudo" pos:start="253:17" pos:end="253:26"><block_content pos:start="253:17" pos:end="253:26">

                <return pos:start="253:17" pos:end="253:26">return <expr pos:start="253:24" pos:end="253:25"><operator pos:start="253:24" pos:end="253:24">-</operator><literal type="number" pos:start="253:25" pos:end="253:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="255:13" pos:end="257:67"><expr pos:start="255:13" pos:end="257:66"><call pos:start="255:13" pos:end="257:66"><name pos:start="255:13" pos:end="255:18">av_log</name><argument_list pos:start="255:19" pos:end="257:66">(<argument pos:start="255:20" pos:end="255:29"><expr pos:start="255:20" pos:end="255:29"><name pos:start="255:20" pos:end="255:29"><name pos:start="255:20" pos:end="255:20">v</name><operator pos:start="255:21" pos:end="255:22">-&gt;</operator><name pos:start="255:23" pos:end="255:23">s</name><operator pos:start="255:24" pos:end="255:24">.</operator><name pos:start="255:25" pos:end="255:29">avctx</name></name></expr></argument>, <argument pos:start="255:32" pos:end="255:43"><expr pos:start="255:32" pos:end="255:43"><name pos:start="255:32" pos:end="255:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="255:46" pos:end="257:44"><expr pos:start="255:46" pos:end="257:44"><literal type="string" pos:start="255:46" pos:end="255:74">"MB MV Type plane encoding: "</literal>

                   <literal type="string" pos:start="257:20" pos:end="257:44">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="257:47" pos:end="257:55"><expr pos:start="257:47" pos:end="257:55"><name pos:start="257:47" pos:end="257:52">status</name><operator pos:start="257:53" pos:end="257:54">&gt;&gt;</operator><literal type="number" pos:start="257:55" pos:end="257:55">1</literal></expr></argument>, <argument pos:start="257:58" pos:end="257:65"><expr pos:start="257:58" pos:end="257:65"><name pos:start="257:58" pos:end="257:63">status</name><operator pos:start="257:64" pos:end="257:64">&amp;</operator><literal type="number" pos:start="257:65" pos:end="257:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="259:11" pos:end="265:9">else <block pos:start="259:16" pos:end="265:9">{<block_content pos:start="261:13" pos:end="263:76">

            <expr_stmt pos:start="261:13" pos:end="261:34"><expr pos:start="261:13" pos:end="261:33"><name pos:start="261:13" pos:end="261:29"><name pos:start="261:13" pos:end="261:13">v</name><operator pos:start="261:14" pos:end="261:15">-&gt;</operator><name pos:start="261:16" pos:end="261:29">mv_type_is_raw</name></name> <operator pos:start="261:31" pos:end="261:31">=</operator> <literal type="number" pos:start="261:33" pos:end="261:33">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="263:13" pos:end="263:76"><expr pos:start="263:13" pos:end="263:75"><call pos:start="263:13" pos:end="263:75"><name pos:start="263:13" pos:end="263:18">memset</name><argument_list pos:start="263:19" pos:end="263:75">(<argument pos:start="263:20" pos:end="263:38"><expr pos:start="263:20" pos:end="263:38"><name pos:start="263:20" pos:end="263:38"><name pos:start="263:20" pos:end="263:20">v</name><operator pos:start="263:21" pos:end="263:22">-&gt;</operator><name pos:start="263:23" pos:end="263:38">mv_type_mb_plane</name></name></expr></argument>, <argument pos:start="263:41" pos:end="263:41"><expr pos:start="263:41" pos:end="263:41"><literal type="number" pos:start="263:41" pos:end="263:41">0</literal></expr></argument>, <argument pos:start="263:44" pos:end="263:74"><expr pos:start="263:44" pos:end="263:74"><name pos:start="263:44" pos:end="263:57"><name pos:start="263:44" pos:end="263:44">v</name><operator pos:start="263:45" pos:end="263:46">-&gt;</operator><name pos:start="263:47" pos:end="263:47">s</name><operator pos:start="263:48" pos:end="263:48">.</operator><name pos:start="263:49" pos:end="263:57">mb_stride</name></name> <operator pos:start="263:59" pos:end="263:59">*</operator> <name pos:start="263:61" pos:end="263:74"><name pos:start="263:61" pos:end="263:61">v</name><operator pos:start="263:62" pos:end="263:63">-&gt;</operator><name pos:start="263:64" pos:end="263:64">s</name><operator pos:start="263:65" pos:end="263:65">.</operator><name pos:start="263:66" pos:end="263:74">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="267:9" pos:end="267:74"><expr pos:start="267:9" pos:end="267:73"><name pos:start="267:9" pos:end="267:14">status</name> <operator pos:start="267:16" pos:end="267:16">=</operator> <call pos:start="267:18" pos:end="267:73"><name pos:start="267:18" pos:end="267:34">bitplane_decoding</name><argument_list pos:start="267:35" pos:end="267:73">(<argument pos:start="267:36" pos:end="267:52"><expr pos:start="267:36" pos:end="267:52"><name pos:start="267:36" pos:end="267:52"><name pos:start="267:36" pos:end="267:36">v</name><operator pos:start="267:37" pos:end="267:38">-&gt;</operator><name pos:start="267:39" pos:end="267:39">s</name><operator pos:start="267:40" pos:end="267:40">.</operator><name pos:start="267:41" pos:end="267:52">mbskip_table</name></name></expr></argument>, <argument pos:start="267:55" pos:end="267:69"><expr pos:start="267:55" pos:end="267:69"><operator pos:start="267:55" pos:end="267:55">&amp;</operator><name pos:start="267:56" pos:end="267:69"><name pos:start="267:56" pos:end="267:56">v</name><operator pos:start="267:57" pos:end="267:58">-&gt;</operator><name pos:start="267:59" pos:end="267:69">skip_is_raw</name></name></expr></argument>, <argument pos:start="267:72" pos:end="267:72"><expr pos:start="267:72" pos:end="267:72"><name pos:start="267:72" pos:end="267:72">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="269:9" pos:end="271:22"><if pos:start="269:9" pos:end="271:22">if <condition pos:start="269:12" pos:end="269:23">(<expr pos:start="269:13" pos:end="269:22"><name pos:start="269:13" pos:end="269:18">status</name> <operator pos:start="269:20" pos:end="269:20">&lt;</operator> <literal type="number" pos:start="269:22" pos:end="269:22">0</literal></expr>)</condition><block type="pseudo" pos:start="271:13" pos:end="271:22"><block_content pos:start="271:13" pos:end="271:22">

            <return pos:start="271:13" pos:end="271:22">return <expr pos:start="271:20" pos:end="271:21"><operator pos:start="271:20" pos:end="271:20">-</operator><literal type="number" pos:start="271:21" pos:end="271:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="273:9" pos:end="275:63"><expr pos:start="273:9" pos:end="275:62"><call pos:start="273:9" pos:end="275:62"><name pos:start="273:9" pos:end="273:14">av_log</name><argument_list pos:start="273:15" pos:end="275:62">(<argument pos:start="273:16" pos:end="273:25"><expr pos:start="273:16" pos:end="273:25"><name pos:start="273:16" pos:end="273:25"><name pos:start="273:16" pos:end="273:16">v</name><operator pos:start="273:17" pos:end="273:18">-&gt;</operator><name pos:start="273:19" pos:end="273:19">s</name><operator pos:start="273:20" pos:end="273:20">.</operator><name pos:start="273:21" pos:end="273:25">avctx</name></name></expr></argument>, <argument pos:start="273:28" pos:end="273:39"><expr pos:start="273:28" pos:end="273:39"><name pos:start="273:28" pos:end="273:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="273:42" pos:end="275:40"><expr pos:start="273:42" pos:end="275:40"><literal type="string" pos:start="273:42" pos:end="273:67">"MB Skip plane encoding: "</literal>

               <literal type="string" pos:start="275:16" pos:end="275:40">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="275:43" pos:end="275:51"><expr pos:start="275:43" pos:end="275:51"><name pos:start="275:43" pos:end="275:48">status</name><operator pos:start="275:49" pos:end="275:50">&gt;&gt;</operator><literal type="number" pos:start="275:51" pos:end="275:51">1</literal></expr></argument>, <argument pos:start="275:54" pos:end="275:61"><expr pos:start="275:54" pos:end="275:61"><name pos:start="275:54" pos:end="275:59">status</name><operator pos:start="275:60" pos:end="275:60">&amp;</operator><literal type="number" pos:start="275:61" pos:end="275:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="279:9" pos:end="279:52">/* Hopefully this is correct for P frames */</comment>

        <expr_stmt pos:start="281:9" pos:end="281:46"><expr pos:start="281:9" pos:end="281:45"><name pos:start="281:9" pos:end="281:27"><name pos:start="281:9" pos:end="281:9">v</name><operator pos:start="281:10" pos:end="281:11">-&gt;</operator><name pos:start="281:12" pos:end="281:12">s</name><operator pos:start="281:13" pos:end="281:13">.</operator><name pos:start="281:14" pos:end="281:27">mv_table_index</name></name> <operator pos:start="281:29" pos:end="281:29">=</operator> <call pos:start="281:31" pos:end="281:45"><name pos:start="281:31" pos:end="281:38">get_bits</name><argument_list pos:start="281:39" pos:end="281:45">(<argument pos:start="281:40" pos:end="281:41"><expr pos:start="281:40" pos:end="281:41"><name pos:start="281:40" pos:end="281:41">gb</name></expr></argument>, <argument pos:start="281:44" pos:end="281:44"><expr pos:start="281:44" pos:end="281:44"><literal type="number" pos:start="281:44" pos:end="281:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="281:48" pos:end="281:73">//but using ff_vc1_ tables</comment>

        <expr_stmt pos:start="283:9" pos:end="283:60"><expr pos:start="283:9" pos:end="283:59"><name pos:start="283:9" pos:end="283:20"><name pos:start="283:9" pos:end="283:9">v</name><operator pos:start="283:10" pos:end="283:11">-&gt;</operator><name pos:start="283:12" pos:end="283:20">cbpcy_vlc</name></name> <operator pos:start="283:22" pos:end="283:22">=</operator> <operator pos:start="283:24" pos:end="283:24">&amp;</operator><name pos:start="283:25" pos:end="283:59"><name pos:start="283:25" pos:end="283:42">ff_vc1_cbpcy_p_vlc</name><index pos:start="283:43" pos:end="283:59">[<expr pos:start="283:44" pos:end="283:58"><call pos:start="283:44" pos:end="283:58"><name pos:start="283:44" pos:end="283:51">get_bits</name><argument_list pos:start="283:52" pos:end="283:58">(<argument pos:start="283:53" pos:end="283:54"><expr pos:start="283:53" pos:end="283:54"><name pos:start="283:53" pos:end="283:54">gb</name></expr></argument>, <argument pos:start="283:57" pos:end="283:57"><expr pos:start="283:57" pos:end="283:57"><literal type="number" pos:start="283:57" pos:end="283:57">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="287:9" pos:end="293:9"><if pos:start="287:9" pos:end="293:9">if <condition pos:start="287:12" pos:end="287:22">(<expr pos:start="287:13" pos:end="287:21"><name pos:start="287:13" pos:end="287:21"><name pos:start="287:13" pos:end="287:13">v</name><operator pos:start="287:14" pos:end="287:15">-&gt;</operator><name pos:start="287:16" pos:end="287:21">dquant</name></name></expr>)</condition> <block pos:start="287:24" pos:end="293:9">{<block_content pos:start="289:13" pos:end="291:35">

            <expr_stmt pos:start="289:13" pos:end="289:66"><expr pos:start="289:13" pos:end="289:65"><call pos:start="289:13" pos:end="289:65"><name pos:start="289:13" pos:end="289:18">av_log</name><argument_list pos:start="289:19" pos:end="289:65">(<argument pos:start="289:20" pos:end="289:29"><expr pos:start="289:20" pos:end="289:29"><name pos:start="289:20" pos:end="289:29"><name pos:start="289:20" pos:end="289:20">v</name><operator pos:start="289:21" pos:end="289:22">-&gt;</operator><name pos:start="289:23" pos:end="289:23">s</name><operator pos:start="289:24" pos:end="289:24">.</operator><name pos:start="289:25" pos:end="289:29">avctx</name></name></expr></argument>, <argument pos:start="289:32" pos:end="289:43"><expr pos:start="289:32" pos:end="289:43"><name pos:start="289:32" pos:end="289:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="289:46" pos:end="289:64"><expr pos:start="289:46" pos:end="289:64"><literal type="string" pos:start="289:46" pos:end="289:64">"VOP DQuant info\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:35"><expr pos:start="291:13" pos:end="291:34"><call pos:start="291:13" pos:end="291:34"><name pos:start="291:13" pos:end="291:31">vop_dquant_decoding</name><argument_list pos:start="291:32" pos:end="291:34">(<argument pos:start="291:33" pos:end="291:33"><expr pos:start="291:33" pos:end="291:33"><name pos:start="291:33" pos:end="291:33">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="297:9" pos:end="297:21"><expr pos:start="297:9" pos:end="297:20"><name pos:start="297:9" pos:end="297:16"><name pos:start="297:9" pos:end="297:9">v</name><operator pos:start="297:10" pos:end="297:11">-&gt;</operator><name pos:start="297:12" pos:end="297:16">ttfrm</name></name> <operator pos:start="297:18" pos:end="297:18">=</operator> <literal type="number" pos:start="297:20" pos:end="297:20">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="297:23" pos:end="297:42">//FIXME Is that so ?</comment>

        <if_stmt pos:start="299:9" pos:end="315:9"><if pos:start="299:9" pos:end="309:9">if <condition pos:start="299:12" pos:end="299:27">(<expr pos:start="299:13" pos:end="299:26"><name pos:start="299:13" pos:end="299:26"><name pos:start="299:13" pos:end="299:13">v</name><operator pos:start="299:14" pos:end="299:15">-&gt;</operator><name pos:start="299:16" pos:end="299:26">vstransform</name></name></expr>)</condition> <block pos:start="299:29" pos:end="309:9">{<block_content pos:start="301:13" pos:end="307:13">

            <expr_stmt pos:start="301:13" pos:end="301:37"><expr pos:start="301:13" pos:end="301:36"><name pos:start="301:13" pos:end="301:20"><name pos:start="301:13" pos:end="301:13">v</name><operator pos:start="301:14" pos:end="301:15">-&gt;</operator><name pos:start="301:16" pos:end="301:20">ttmbf</name></name> <operator pos:start="301:22" pos:end="301:22">=</operator> <call pos:start="301:24" pos:end="301:36"><name pos:start="301:24" pos:end="301:32">get_bits1</name><argument_list pos:start="301:33" pos:end="301:36">(<argument pos:start="301:34" pos:end="301:35"><expr pos:start="301:34" pos:end="301:35"><name pos:start="301:34" pos:end="301:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="303:13" pos:end="307:13"><if pos:start="303:13" pos:end="307:13">if <condition pos:start="303:16" pos:end="303:25">(<expr pos:start="303:17" pos:end="303:24"><name pos:start="303:17" pos:end="303:24"><name pos:start="303:17" pos:end="303:17">v</name><operator pos:start="303:18" pos:end="303:19">-&gt;</operator><name pos:start="303:20" pos:end="303:24">ttmbf</name></name></expr>)</condition> <block pos:start="303:27" pos:end="307:13">{<block_content pos:start="305:17" pos:end="305:63">

                <expr_stmt pos:start="305:17" pos:end="305:63"><expr pos:start="305:17" pos:end="305:62"><name pos:start="305:17" pos:end="305:24"><name pos:start="305:17" pos:end="305:17">v</name><operator pos:start="305:18" pos:end="305:19">-&gt;</operator><name pos:start="305:20" pos:end="305:24">ttfrm</name></name> <operator pos:start="305:26" pos:end="305:26">=</operator> <name pos:start="305:28" pos:end="305:62"><name pos:start="305:28" pos:end="305:45">ff_vc1_ttfrm_to_tt</name><index pos:start="305:46" pos:end="305:62">[<expr pos:start="305:47" pos:end="305:61"><call pos:start="305:47" pos:end="305:61"><name pos:start="305:47" pos:end="305:54">get_bits</name><argument_list pos:start="305:55" pos:end="305:61">(<argument pos:start="305:56" pos:end="305:57"><expr pos:start="305:56" pos:end="305:57"><name pos:start="305:56" pos:end="305:57">gb</name></expr></argument>, <argument pos:start="305:60" pos:end="305:60"><expr pos:start="305:60" pos:end="305:60"><literal type="number" pos:start="305:60" pos:end="305:60">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="309:11" pos:end="315:9">else <block pos:start="309:16" pos:end="315:9">{<block_content pos:start="311:13" pos:end="313:30">

            <expr_stmt pos:start="311:13" pos:end="311:25"><expr pos:start="311:13" pos:end="311:24"><name pos:start="311:13" pos:end="311:20"><name pos:start="311:13" pos:end="311:13">v</name><operator pos:start="311:14" pos:end="311:15">-&gt;</operator><name pos:start="311:16" pos:end="311:20">ttmbf</name></name> <operator pos:start="311:22" pos:end="311:22">=</operator> <literal type="number" pos:start="311:24" pos:end="311:24">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="313:13" pos:end="313:30"><expr pos:start="313:13" pos:end="313:29"><name pos:start="313:13" pos:end="313:20"><name pos:start="313:13" pos:end="313:13">v</name><operator pos:start="313:14" pos:end="313:15">-&gt;</operator><name pos:start="313:16" pos:end="313:20">ttfrm</name></name> <operator pos:start="313:22" pos:end="313:22">=</operator> <name pos:start="313:24" pos:end="313:29">TT_8X8</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="317:9" pos:end="317:14">break;</break>

    <case pos:start="319:5" pos:end="319:27">case <expr pos:start="319:10" pos:end="319:26"><name pos:start="319:10" pos:end="319:26">AV_PICTURE_TYPE_B</name></expr>:</case>

        <if_stmt pos:start="321:9" pos:end="325:45"><if pos:start="321:9" pos:end="321:45">if <condition pos:start="321:12" pos:end="321:22">(<expr pos:start="321:13" pos:end="321:21"><name pos:start="321:13" pos:end="321:17"><name pos:start="321:13" pos:end="321:13">v</name><operator pos:start="321:14" pos:end="321:15">-&gt;</operator><name pos:start="321:16" pos:end="321:17">pq</name></name> <operator pos:start="321:19" pos:end="321:19">&lt;</operator> <literal type="number" pos:start="321:21" pos:end="321:21">5</literal></expr>)</condition><block type="pseudo" pos:start="321:30" pos:end="321:45"><block_content pos:start="321:30" pos:end="321:45">       <expr_stmt pos:start="321:30" pos:end="321:45"><expr pos:start="321:30" pos:end="321:44"><name pos:start="321:30" pos:end="321:40"><name pos:start="321:30" pos:end="321:30">v</name><operator pos:start="321:31" pos:end="321:32">-&gt;</operator><name pos:start="321:33" pos:end="321:40">tt_index</name></name> <operator pos:start="321:42" pos:end="321:42">=</operator> <literal type="number" pos:start="321:44" pos:end="321:44">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="323:9" pos:end="323:45">else if <condition pos:start="323:17" pos:end="323:28">(<expr pos:start="323:18" pos:end="323:27"><name pos:start="323:18" pos:end="323:22"><name pos:start="323:18" pos:end="323:18">v</name><operator pos:start="323:19" pos:end="323:20">-&gt;</operator><name pos:start="323:21" pos:end="323:22">pq</name></name> <operator pos:start="323:24" pos:end="323:24">&lt;</operator> <literal type="number" pos:start="323:26" pos:end="323:27">13</literal></expr>)</condition><block type="pseudo" pos:start="323:30" pos:end="323:45"><block_content pos:start="323:30" pos:end="323:45"> <expr_stmt pos:start="323:30" pos:end="323:45"><expr pos:start="323:30" pos:end="323:44"><name pos:start="323:30" pos:end="323:40"><name pos:start="323:30" pos:end="323:30">v</name><operator pos:start="323:31" pos:end="323:32">-&gt;</operator><name pos:start="323:33" pos:end="323:40">tt_index</name></name> <operator pos:start="323:42" pos:end="323:42">=</operator> <literal type="number" pos:start="323:44" pos:end="323:44">1</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="325:9" pos:end="325:45">else<block type="pseudo" pos:start="325:30" pos:end="325:45"><block_content pos:start="325:30" pos:end="325:45">                 <expr_stmt pos:start="325:30" pos:end="325:45"><expr pos:start="325:30" pos:end="325:44"><name pos:start="325:30" pos:end="325:40"><name pos:start="325:30" pos:end="325:30">v</name><operator pos:start="325:31" pos:end="325:32">-&gt;</operator><name pos:start="325:33" pos:end="325:40">tt_index</name></name> <operator pos:start="325:42" pos:end="325:42">=</operator> <literal type="number" pos:start="325:44" pos:end="325:44">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="329:9" pos:end="329:85"><expr pos:start="329:9" pos:end="329:84"><name pos:start="329:9" pos:end="329:18"><name pos:start="329:9" pos:end="329:9">v</name><operator pos:start="329:10" pos:end="329:11">-&gt;</operator><name pos:start="329:12" pos:end="329:18">mv_mode</name></name>          <operator pos:start="329:29" pos:end="329:29">=</operator> <ternary pos:start="329:31" pos:end="329:84"><condition pos:start="329:31" pos:end="329:45"><expr pos:start="329:31" pos:end="329:43"><call pos:start="329:31" pos:end="329:43"><name pos:start="329:31" pos:end="329:39">get_bits1</name><argument_list pos:start="329:40" pos:end="329:43">(<argument pos:start="329:41" pos:end="329:42"><expr pos:start="329:41" pos:end="329:42"><name pos:start="329:41" pos:end="329:42">gb</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="329:47" pos:end="329:58"> <expr pos:start="329:47" pos:end="329:58"><name pos:start="329:47" pos:end="329:58">MV_PMODE_1MV</name></expr> </then><else pos:start="329:60" pos:end="329:84">: <expr pos:start="329:62" pos:end="329:84"><name pos:start="329:62" pos:end="329:84">MV_PMODE_1MV_HPEL_BILIN</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="331:9" pos:end="331:50"><expr pos:start="331:9" pos:end="331:49"><name pos:start="331:9" pos:end="331:18"><name pos:start="331:9" pos:end="331:9">v</name><operator pos:start="331:10" pos:end="331:11">-&gt;</operator><name pos:start="331:12" pos:end="331:18">qs_last</name></name>          <operator pos:start="331:29" pos:end="331:29">=</operator> <name pos:start="331:31" pos:end="331:49"><name pos:start="331:31" pos:end="331:31">v</name><operator pos:start="331:32" pos:end="331:33">-&gt;</operator><name pos:start="331:34" pos:end="331:34">s</name><operator pos:start="331:35" pos:end="331:35">.</operator><name pos:start="331:36" pos:end="331:49">quarter_sample</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="333:9" pos:end="333:59"><expr pos:start="333:9" pos:end="333:58"><name pos:start="333:9" pos:end="333:27"><name pos:start="333:9" pos:end="333:9">v</name><operator pos:start="333:10" pos:end="333:11">-&gt;</operator><name pos:start="333:12" pos:end="333:12">s</name><operator pos:start="333:13" pos:end="333:13">.</operator><name pos:start="333:14" pos:end="333:27">quarter_sample</name></name> <operator pos:start="333:29" pos:end="333:29">=</operator> <operator pos:start="333:31" pos:end="333:31">(</operator><name pos:start="333:32" pos:end="333:41"><name pos:start="333:32" pos:end="333:32">v</name><operator pos:start="333:33" pos:end="333:34">-&gt;</operator><name pos:start="333:35" pos:end="333:41">mv_mode</name></name> <operator pos:start="333:43" pos:end="333:44">==</operator> <name pos:start="333:46" pos:end="333:57">MV_PMODE_1MV</name><operator pos:start="333:58" pos:end="333:58">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="335:9" pos:end="335:50"><expr pos:start="335:9" pos:end="335:49"><name pos:start="335:9" pos:end="335:18"><name pos:start="335:9" pos:end="335:9">v</name><operator pos:start="335:10" pos:end="335:11">-&gt;</operator><name pos:start="335:12" pos:end="335:12">s</name><operator pos:start="335:13" pos:end="335:13">.</operator><name pos:start="335:14" pos:end="335:18">mspel</name></name>          <operator pos:start="335:29" pos:end="335:29">=</operator> <name pos:start="335:31" pos:end="335:49"><name pos:start="335:31" pos:end="335:31">v</name><operator pos:start="335:32" pos:end="335:33">-&gt;</operator><name pos:start="335:34" pos:end="335:34">s</name><operator pos:start="335:35" pos:end="335:35">.</operator><name pos:start="335:36" pos:end="335:49">quarter_sample</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="339:9" pos:end="339:74"><expr pos:start="339:9" pos:end="339:73"><name pos:start="339:9" pos:end="339:14">status</name> <operator pos:start="339:16" pos:end="339:16">=</operator> <call pos:start="339:18" pos:end="339:73"><name pos:start="339:18" pos:end="339:34">bitplane_decoding</name><argument_list pos:start="339:35" pos:end="339:73">(<argument pos:start="339:36" pos:end="339:53"><expr pos:start="339:36" pos:end="339:53"><name pos:start="339:36" pos:end="339:53"><name pos:start="339:36" pos:end="339:36">v</name><operator pos:start="339:37" pos:end="339:38">-&gt;</operator><name pos:start="339:39" pos:end="339:53">direct_mb_plane</name></name></expr></argument>, <argument pos:start="339:56" pos:end="339:69"><expr pos:start="339:56" pos:end="339:69"><operator pos:start="339:56" pos:end="339:56">&amp;</operator><name pos:start="339:57" pos:end="339:69"><name pos:start="339:57" pos:end="339:57">v</name><operator pos:start="339:58" pos:end="339:59">-&gt;</operator><name pos:start="339:60" pos:end="339:69">dmb_is_raw</name></name></expr></argument>, <argument pos:start="339:72" pos:end="339:72"><expr pos:start="339:72" pos:end="339:72"><name pos:start="339:72" pos:end="339:72">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="341:9" pos:end="343:22"><if pos:start="341:9" pos:end="343:22">if <condition pos:start="341:12" pos:end="341:23">(<expr pos:start="341:13" pos:end="341:22"><name pos:start="341:13" pos:end="341:18">status</name> <operator pos:start="341:20" pos:end="341:20">&lt;</operator> <literal type="number" pos:start="341:22" pos:end="341:22">0</literal></expr>)</condition><block type="pseudo" pos:start="343:13" pos:end="343:22"><block_content pos:start="343:13" pos:end="343:22">

            <return pos:start="343:13" pos:end="343:22">return <expr pos:start="343:20" pos:end="343:21"><operator pos:start="343:20" pos:end="343:20">-</operator><literal type="number" pos:start="343:21" pos:end="343:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="345:9" pos:end="347:63"><expr pos:start="345:9" pos:end="347:62"><call pos:start="345:9" pos:end="347:62"><name pos:start="345:9" pos:end="345:14">av_log</name><argument_list pos:start="345:15" pos:end="347:62">(<argument pos:start="345:16" pos:end="345:25"><expr pos:start="345:16" pos:end="345:25"><name pos:start="345:16" pos:end="345:25"><name pos:start="345:16" pos:end="345:16">v</name><operator pos:start="345:17" pos:end="345:18">-&gt;</operator><name pos:start="345:19" pos:end="345:19">s</name><operator pos:start="345:20" pos:end="345:20">.</operator><name pos:start="345:21" pos:end="345:25">avctx</name></name></expr></argument>, <argument pos:start="345:28" pos:end="345:39"><expr pos:start="345:28" pos:end="345:39"><name pos:start="345:28" pos:end="345:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="345:42" pos:end="347:40"><expr pos:start="345:42" pos:end="347:40"><literal type="string" pos:start="345:42" pos:end="345:74">"MB Direct Type plane encoding: "</literal>

               <literal type="string" pos:start="347:16" pos:end="347:40">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="347:43" pos:end="347:51"><expr pos:start="347:43" pos:end="347:51"><name pos:start="347:43" pos:end="347:48">status</name><operator pos:start="347:49" pos:end="347:50">&gt;&gt;</operator><literal type="number" pos:start="347:51" pos:end="347:51">1</literal></expr></argument>, <argument pos:start="347:54" pos:end="347:61"><expr pos:start="347:54" pos:end="347:61"><name pos:start="347:54" pos:end="347:59">status</name><operator pos:start="347:60" pos:end="347:60">&amp;</operator><literal type="number" pos:start="347:61" pos:end="347:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="349:9" pos:end="349:74"><expr pos:start="349:9" pos:end="349:73"><name pos:start="349:9" pos:end="349:14">status</name> <operator pos:start="349:16" pos:end="349:16">=</operator> <call pos:start="349:18" pos:end="349:73"><name pos:start="349:18" pos:end="349:34">bitplane_decoding</name><argument_list pos:start="349:35" pos:end="349:73">(<argument pos:start="349:36" pos:end="349:52"><expr pos:start="349:36" pos:end="349:52"><name pos:start="349:36" pos:end="349:52"><name pos:start="349:36" pos:end="349:36">v</name><operator pos:start="349:37" pos:end="349:38">-&gt;</operator><name pos:start="349:39" pos:end="349:39">s</name><operator pos:start="349:40" pos:end="349:40">.</operator><name pos:start="349:41" pos:end="349:52">mbskip_table</name></name></expr></argument>, <argument pos:start="349:55" pos:end="349:69"><expr pos:start="349:55" pos:end="349:69"><operator pos:start="349:55" pos:end="349:55">&amp;</operator><name pos:start="349:56" pos:end="349:69"><name pos:start="349:56" pos:end="349:56">v</name><operator pos:start="349:57" pos:end="349:58">-&gt;</operator><name pos:start="349:59" pos:end="349:69">skip_is_raw</name></name></expr></argument>, <argument pos:start="349:72" pos:end="349:72"><expr pos:start="349:72" pos:end="349:72"><name pos:start="349:72" pos:end="349:72">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="351:9" pos:end="353:22"><if pos:start="351:9" pos:end="353:22">if <condition pos:start="351:12" pos:end="351:23">(<expr pos:start="351:13" pos:end="351:22"><name pos:start="351:13" pos:end="351:18">status</name> <operator pos:start="351:20" pos:end="351:20">&lt;</operator> <literal type="number" pos:start="351:22" pos:end="351:22">0</literal></expr>)</condition><block type="pseudo" pos:start="353:13" pos:end="353:22"><block_content pos:start="353:13" pos:end="353:22">

            <return pos:start="353:13" pos:end="353:22">return <expr pos:start="353:20" pos:end="353:21"><operator pos:start="353:20" pos:end="353:20">-</operator><literal type="number" pos:start="353:21" pos:end="353:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="355:9" pos:end="357:63"><expr pos:start="355:9" pos:end="357:62"><call pos:start="355:9" pos:end="357:62"><name pos:start="355:9" pos:end="355:14">av_log</name><argument_list pos:start="355:15" pos:end="357:62">(<argument pos:start="355:16" pos:end="355:25"><expr pos:start="355:16" pos:end="355:25"><name pos:start="355:16" pos:end="355:25"><name pos:start="355:16" pos:end="355:16">v</name><operator pos:start="355:17" pos:end="355:18">-&gt;</operator><name pos:start="355:19" pos:end="355:19">s</name><operator pos:start="355:20" pos:end="355:20">.</operator><name pos:start="355:21" pos:end="355:25">avctx</name></name></expr></argument>, <argument pos:start="355:28" pos:end="355:39"><expr pos:start="355:28" pos:end="355:39"><name pos:start="355:28" pos:end="355:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="355:42" pos:end="357:40"><expr pos:start="355:42" pos:end="357:40"><literal type="string" pos:start="355:42" pos:end="355:67">"MB Skip plane encoding: "</literal>

               <literal type="string" pos:start="357:16" pos:end="357:40">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="357:43" pos:end="357:51"><expr pos:start="357:43" pos:end="357:51"><name pos:start="357:43" pos:end="357:48">status</name><operator pos:start="357:49" pos:end="357:50">&gt;&gt;</operator><literal type="number" pos:start="357:51" pos:end="357:51">1</literal></expr></argument>, <argument pos:start="357:54" pos:end="357:61"><expr pos:start="357:54" pos:end="357:61"><name pos:start="357:54" pos:end="357:59">status</name><operator pos:start="357:60" pos:end="357:60">&amp;</operator><literal type="number" pos:start="357:61" pos:end="357:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="361:9" pos:end="361:46"><expr pos:start="361:9" pos:end="361:45"><name pos:start="361:9" pos:end="361:27"><name pos:start="361:9" pos:end="361:9">v</name><operator pos:start="361:10" pos:end="361:11">-&gt;</operator><name pos:start="361:12" pos:end="361:12">s</name><operator pos:start="361:13" pos:end="361:13">.</operator><name pos:start="361:14" pos:end="361:27">mv_table_index</name></name> <operator pos:start="361:29" pos:end="361:29">=</operator> <call pos:start="361:31" pos:end="361:45"><name pos:start="361:31" pos:end="361:38">get_bits</name><argument_list pos:start="361:39" pos:end="361:45">(<argument pos:start="361:40" pos:end="361:41"><expr pos:start="361:40" pos:end="361:41"><name pos:start="361:40" pos:end="361:41">gb</name></expr></argument>, <argument pos:start="361:44" pos:end="361:44"><expr pos:start="361:44" pos:end="361:44"><literal type="number" pos:start="361:44" pos:end="361:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="363:9" pos:end="363:67"><expr pos:start="363:9" pos:end="363:66"><name pos:start="363:9" pos:end="363:20"><name pos:start="363:9" pos:end="363:9">v</name><operator pos:start="363:10" pos:end="363:11">-&gt;</operator><name pos:start="363:12" pos:end="363:20">cbpcy_vlc</name></name>        <operator pos:start="363:29" pos:end="363:29">=</operator> <operator pos:start="363:31" pos:end="363:31">&amp;</operator><name pos:start="363:32" pos:end="363:66"><name pos:start="363:32" pos:end="363:49">ff_vc1_cbpcy_p_vlc</name><index pos:start="363:50" pos:end="363:66">[<expr pos:start="363:51" pos:end="363:65"><call pos:start="363:51" pos:end="363:65"><name pos:start="363:51" pos:end="363:58">get_bits</name><argument_list pos:start="363:59" pos:end="363:65">(<argument pos:start="363:60" pos:end="363:61"><expr pos:start="363:60" pos:end="363:61"><name pos:start="363:60" pos:end="363:61">gb</name></expr></argument>, <argument pos:start="363:64" pos:end="363:64"><expr pos:start="363:64" pos:end="363:64"><literal type="number" pos:start="363:64" pos:end="363:64">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="367:9" pos:end="373:9"><if pos:start="367:9" pos:end="373:9">if <condition pos:start="367:12" pos:end="367:22">(<expr pos:start="367:13" pos:end="367:21"><name pos:start="367:13" pos:end="367:21"><name pos:start="367:13" pos:end="367:13">v</name><operator pos:start="367:14" pos:end="367:15">-&gt;</operator><name pos:start="367:16" pos:end="367:21">dquant</name></name></expr>)</condition> <block pos:start="367:24" pos:end="373:9">{<block_content pos:start="369:13" pos:end="371:35">

            <expr_stmt pos:start="369:13" pos:end="369:66"><expr pos:start="369:13" pos:end="369:65"><call pos:start="369:13" pos:end="369:65"><name pos:start="369:13" pos:end="369:18">av_log</name><argument_list pos:start="369:19" pos:end="369:65">(<argument pos:start="369:20" pos:end="369:29"><expr pos:start="369:20" pos:end="369:29"><name pos:start="369:20" pos:end="369:29"><name pos:start="369:20" pos:end="369:20">v</name><operator pos:start="369:21" pos:end="369:22">-&gt;</operator><name pos:start="369:23" pos:end="369:23">s</name><operator pos:start="369:24" pos:end="369:24">.</operator><name pos:start="369:25" pos:end="369:29">avctx</name></name></expr></argument>, <argument pos:start="369:32" pos:end="369:43"><expr pos:start="369:32" pos:end="369:43"><name pos:start="369:32" pos:end="369:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="369:46" pos:end="369:64"><expr pos:start="369:46" pos:end="369:64"><literal type="string" pos:start="369:46" pos:end="369:64">"VOP DQuant info\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="371:13" pos:end="371:35"><expr pos:start="371:13" pos:end="371:34"><call pos:start="371:13" pos:end="371:34"><name pos:start="371:13" pos:end="371:31">vop_dquant_decoding</name><argument_list pos:start="371:32" pos:end="371:34">(<argument pos:start="371:33" pos:end="371:33"><expr pos:start="371:33" pos:end="371:33"><name pos:start="371:33" pos:end="371:33">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="377:9" pos:end="377:21"><expr pos:start="377:9" pos:end="377:20"><name pos:start="377:9" pos:end="377:16"><name pos:start="377:9" pos:end="377:9">v</name><operator pos:start="377:10" pos:end="377:11">-&gt;</operator><name pos:start="377:12" pos:end="377:16">ttfrm</name></name> <operator pos:start="377:18" pos:end="377:18">=</operator> <literal type="number" pos:start="377:20" pos:end="377:20">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="379:9" pos:end="395:9"><if pos:start="379:9" pos:end="389:9">if <condition pos:start="379:12" pos:end="379:27">(<expr pos:start="379:13" pos:end="379:26"><name pos:start="379:13" pos:end="379:26"><name pos:start="379:13" pos:end="379:13">v</name><operator pos:start="379:14" pos:end="379:15">-&gt;</operator><name pos:start="379:16" pos:end="379:26">vstransform</name></name></expr>)</condition> <block pos:start="379:29" pos:end="389:9">{<block_content pos:start="381:13" pos:end="387:13">

            <expr_stmt pos:start="381:13" pos:end="381:37"><expr pos:start="381:13" pos:end="381:36"><name pos:start="381:13" pos:end="381:20"><name pos:start="381:13" pos:end="381:13">v</name><operator pos:start="381:14" pos:end="381:15">-&gt;</operator><name pos:start="381:16" pos:end="381:20">ttmbf</name></name> <operator pos:start="381:22" pos:end="381:22">=</operator> <call pos:start="381:24" pos:end="381:36"><name pos:start="381:24" pos:end="381:32">get_bits1</name><argument_list pos:start="381:33" pos:end="381:36">(<argument pos:start="381:34" pos:end="381:35"><expr pos:start="381:34" pos:end="381:35"><name pos:start="381:34" pos:end="381:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="383:13" pos:end="387:13"><if pos:start="383:13" pos:end="387:13">if <condition pos:start="383:16" pos:end="383:25">(<expr pos:start="383:17" pos:end="383:24"><name pos:start="383:17" pos:end="383:24"><name pos:start="383:17" pos:end="383:17">v</name><operator pos:start="383:18" pos:end="383:19">-&gt;</operator><name pos:start="383:20" pos:end="383:24">ttmbf</name></name></expr>)</condition> <block pos:start="383:27" pos:end="387:13">{<block_content pos:start="385:17" pos:end="385:63">

                <expr_stmt pos:start="385:17" pos:end="385:63"><expr pos:start="385:17" pos:end="385:62"><name pos:start="385:17" pos:end="385:24"><name pos:start="385:17" pos:end="385:17">v</name><operator pos:start="385:18" pos:end="385:19">-&gt;</operator><name pos:start="385:20" pos:end="385:24">ttfrm</name></name> <operator pos:start="385:26" pos:end="385:26">=</operator> <name pos:start="385:28" pos:end="385:62"><name pos:start="385:28" pos:end="385:45">ff_vc1_ttfrm_to_tt</name><index pos:start="385:46" pos:end="385:62">[<expr pos:start="385:47" pos:end="385:61"><call pos:start="385:47" pos:end="385:61"><name pos:start="385:47" pos:end="385:54">get_bits</name><argument_list pos:start="385:55" pos:end="385:61">(<argument pos:start="385:56" pos:end="385:57"><expr pos:start="385:56" pos:end="385:57"><name pos:start="385:56" pos:end="385:57">gb</name></expr></argument>, <argument pos:start="385:60" pos:end="385:60"><expr pos:start="385:60" pos:end="385:60"><literal type="number" pos:start="385:60" pos:end="385:60">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="389:11" pos:end="395:9">else <block pos:start="389:16" pos:end="395:9">{<block_content pos:start="391:13" pos:end="393:30">

            <expr_stmt pos:start="391:13" pos:end="391:25"><expr pos:start="391:13" pos:end="391:24"><name pos:start="391:13" pos:end="391:20"><name pos:start="391:13" pos:end="391:13">v</name><operator pos:start="391:14" pos:end="391:15">-&gt;</operator><name pos:start="391:16" pos:end="391:20">ttmbf</name></name> <operator pos:start="391:22" pos:end="391:22">=</operator> <literal type="number" pos:start="391:24" pos:end="391:24">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="393:13" pos:end="393:30"><expr pos:start="393:13" pos:end="393:29"><name pos:start="393:13" pos:end="393:20"><name pos:start="393:13" pos:end="393:13">v</name><operator pos:start="393:14" pos:end="393:15">-&gt;</operator><name pos:start="393:16" pos:end="393:20">ttfrm</name></name> <operator pos:start="393:22" pos:end="393:22">=</operator> <name pos:start="393:24" pos:end="393:29">TT_8X8</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="397:9" pos:end="397:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="403:5" pos:end="419:5"><if pos:start="403:5" pos:end="419:5">if <condition pos:start="403:8" pos:end="403:20">(<expr pos:start="403:9" pos:end="403:19"><operator pos:start="403:9" pos:end="403:9">!</operator><name pos:start="403:10" pos:end="403:19"><name pos:start="403:10" pos:end="403:10">v</name><operator pos:start="403:11" pos:end="403:12">-&gt;</operator><name pos:start="403:13" pos:end="403:19">x8_type</name></name></expr>)</condition> <block pos:start="403:22" pos:end="419:5">{<block_content pos:start="407:9" pos:end="417:44">

        <comment type="block" pos:start="405:9" pos:end="405:23">/* AC Syntax */</comment>

        <expr_stmt pos:start="407:9" pos:end="407:44"><expr pos:start="407:9" pos:end="407:43"><name pos:start="407:9" pos:end="407:27"><name pos:start="407:9" pos:end="407:9">v</name><operator pos:start="407:10" pos:end="407:11">-&gt;</operator><name pos:start="407:12" pos:end="407:27">c_ac_table_index</name></name> <operator pos:start="407:29" pos:end="407:29">=</operator> <call pos:start="407:31" pos:end="407:43"><name pos:start="407:31" pos:end="407:39">decode012</name><argument_list pos:start="407:40" pos:end="407:43">(<argument pos:start="407:41" pos:end="407:42"><expr pos:start="407:41" pos:end="407:42"><name pos:start="407:41" pos:end="407:42">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="409:9" pos:end="413:9"><if pos:start="409:9" pos:end="413:9">if <condition pos:start="409:12" pos:end="409:88">(<expr pos:start="409:13" pos:end="409:87"><name pos:start="409:13" pos:end="409:26"><name pos:start="409:13" pos:end="409:13">v</name><operator pos:start="409:14" pos:end="409:15">-&gt;</operator><name pos:start="409:16" pos:end="409:16">s</name><operator pos:start="409:17" pos:end="409:17">.</operator><name pos:start="409:18" pos:end="409:26">pict_type</name></name> <operator pos:start="409:28" pos:end="409:29">==</operator> <name pos:start="409:31" pos:end="409:47">AV_PICTURE_TYPE_I</name> <operator pos:start="409:49" pos:end="409:50">||</operator> <name pos:start="409:52" pos:end="409:65"><name pos:start="409:52" pos:end="409:52">v</name><operator pos:start="409:53" pos:end="409:54">-&gt;</operator><name pos:start="409:55" pos:end="409:55">s</name><operator pos:start="409:56" pos:end="409:56">.</operator><name pos:start="409:57" pos:end="409:65">pict_type</name></name> <operator pos:start="409:67" pos:end="409:68">==</operator> <name pos:start="409:70" pos:end="409:87">AV_PICTURE_TYPE_BI</name></expr>)</condition> <block pos:start="409:90" pos:end="413:9">{<block_content pos:start="411:13" pos:end="411:48">

            <expr_stmt pos:start="411:13" pos:end="411:48"><expr pos:start="411:13" pos:end="411:47"><name pos:start="411:13" pos:end="411:31"><name pos:start="411:13" pos:end="411:13">v</name><operator pos:start="411:14" pos:end="411:15">-&gt;</operator><name pos:start="411:16" pos:end="411:31">y_ac_table_index</name></name> <operator pos:start="411:33" pos:end="411:33">=</operator> <call pos:start="411:35" pos:end="411:47"><name pos:start="411:35" pos:end="411:43">decode012</name><argument_list pos:start="411:44" pos:end="411:47">(<argument pos:start="411:45" pos:end="411:46"><expr pos:start="411:45" pos:end="411:46"><name pos:start="411:45" pos:end="411:46">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="415:9" pos:end="415:23">/* DC Syntax */</comment>

        <expr_stmt pos:start="417:9" pos:end="417:44"><expr pos:start="417:9" pos:end="417:43"><name pos:start="417:9" pos:end="417:27"><name pos:start="417:9" pos:end="417:9">v</name><operator pos:start="417:10" pos:end="417:11">-&gt;</operator><name pos:start="417:12" pos:end="417:12">s</name><operator pos:start="417:13" pos:end="417:13">.</operator><name pos:start="417:14" pos:end="417:27">dc_table_index</name></name> <operator pos:start="417:29" pos:end="417:29">=</operator> <call pos:start="417:31" pos:end="417:43"><name pos:start="417:31" pos:end="417:39">get_bits1</name><argument_list pos:start="417:40" pos:end="417:43">(<argument pos:start="417:41" pos:end="417:42"><expr pos:start="417:41" pos:end="417:42"><name pos:start="417:41" pos:end="417:42">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="423:5" pos:end="429:5"><if pos:start="423:5" pos:end="429:5">if <condition pos:start="423:8" pos:end="423:45">(<expr pos:start="423:9" pos:end="423:44"><name pos:start="423:9" pos:end="423:22"><name pos:start="423:9" pos:end="423:9">v</name><operator pos:start="423:10" pos:end="423:11">-&gt;</operator><name pos:start="423:12" pos:end="423:12">s</name><operator pos:start="423:13" pos:end="423:13">.</operator><name pos:start="423:14" pos:end="423:22">pict_type</name></name> <operator pos:start="423:24" pos:end="423:25">==</operator> <name pos:start="423:27" pos:end="423:44">AV_PICTURE_TYPE_BI</name></expr>)</condition> <block pos:start="423:47" pos:end="429:5">{<block_content pos:start="425:9" pos:end="427:27">

        <expr_stmt pos:start="425:9" pos:end="425:43"><expr pos:start="425:9" pos:end="425:42"><name pos:start="425:9" pos:end="425:22"><name pos:start="425:9" pos:end="425:9">v</name><operator pos:start="425:10" pos:end="425:11">-&gt;</operator><name pos:start="425:12" pos:end="425:12">s</name><operator pos:start="425:13" pos:end="425:13">.</operator><name pos:start="425:14" pos:end="425:22">pict_type</name></name> <operator pos:start="425:24" pos:end="425:24">=</operator> <name pos:start="425:26" pos:end="425:42">AV_PICTURE_TYPE_B</name></expr>;</expr_stmt>

        <expr_stmt pos:start="427:9" pos:end="427:27"><expr pos:start="427:9" pos:end="427:26"><name pos:start="427:9" pos:end="427:18"><name pos:start="427:9" pos:end="427:9">v</name><operator pos:start="427:10" pos:end="427:11">-&gt;</operator><name pos:start="427:12" pos:end="427:18">bi_type</name></name>     <operator pos:start="427:24" pos:end="427:24">=</operator> <literal type="number" pos:start="427:26" pos:end="427:26">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="431:5" pos:end="431:13">return <expr pos:start="431:12" pos:end="431:12"><literal type="number" pos:start="431:12" pos:end="431:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
