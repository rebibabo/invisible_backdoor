<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21636.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:25"><name pos:start="1:1" pos:end="1:6">sofree</name><argument_list pos:start="1:7" pos:end="1:25">(<argument pos:start="1:8" pos:end="1:24">struct socket *so</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="72:11">{<block_content pos:start="5:3" pos:end="72:11">

  <decl_stmt pos:start="5:3" pos:end="5:27"><decl pos:start="5:3" pos:end="5:26"><type pos:start="5:3" pos:end="5:9"><name pos:start="5:3" pos:end="5:7">Slirp</name> <modifier pos:start="5:9" pos:end="5:9">*</modifier></type><name pos:start="5:10" pos:end="5:14">slirp</name> <init pos:start="5:16" pos:end="5:26">= <expr pos:start="5:18" pos:end="5:26"><name pos:start="5:18" pos:end="5:26"><name pos:start="5:18" pos:end="5:19">so</name><operator pos:start="5:20" pos:end="5:21">-&gt;</operator><name pos:start="5:22" pos:end="5:26">slirp</name></name></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="7:3" pos:end="7:19"><decl pos:start="7:3" pos:end="7:18"><type pos:start="7:3" pos:end="7:15"><name pos:start="7:3" pos:end="7:13"><name pos:start="7:3" pos:end="7:8">struct</name> <name pos:start="7:10" pos:end="7:13">mbuf</name></name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:18">ifm</name></decl>;</decl_stmt>



  <for pos:start="11:3" pos:end="72:11">for <control pos:start="11:7" pos:end="15:27">(<init pos:start="11:8" pos:end="11:53"><expr pos:start="11:8" pos:end="11:52"><name pos:start="11:8" pos:end="11:10">ifm</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <operator pos:start="11:14" pos:end="11:14">(</operator>struct <name pos:start="11:22" pos:end="11:25">mbuf</name> <operator pos:start="11:27" pos:end="11:27">*</operator><operator pos:start="11:28" pos:end="11:28">)</operator> <name pos:start="11:30" pos:end="11:52"><name pos:start="11:30" pos:end="11:34">slirp</name><operator pos:start="11:35" pos:end="11:36">-&gt;</operator><name pos:start="11:37" pos:end="11:44">if_fastq</name><operator pos:start="11:45" pos:end="11:45">.</operator><name pos:start="11:46" pos:end="11:52">qh_link</name></name></expr>;</init>

       <condition pos:start="13:8" pos:end="13:50"><expr pos:start="13:8" pos:end="13:49"><operator pos:start="13:8" pos:end="13:8">(</operator>struct <name pos:start="13:16" pos:end="13:22">quehead</name> <operator pos:start="13:24" pos:end="13:24">*</operator><operator pos:start="13:25" pos:end="13:25">)</operator> <name pos:start="13:27" pos:end="13:29">ifm</name> <operator pos:start="13:31" pos:end="13:32">!=</operator> <operator pos:start="13:34" pos:end="13:34">&amp;</operator><name pos:start="13:35" pos:end="13:49"><name pos:start="13:35" pos:end="13:39">slirp</name><operator pos:start="13:40" pos:end="13:41">-&gt;</operator><name pos:start="13:42" pos:end="13:49">if_fastq</name></name></expr>;</condition>

       <incr pos:start="15:8" pos:end="15:26"><expr pos:start="15:8" pos:end="15:26"><name pos:start="15:8" pos:end="15:10">ifm</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <name pos:start="15:14" pos:end="15:26"><name pos:start="15:14" pos:end="15:16">ifm</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:26">ifq_next</name></name></expr></incr>)</control> <block pos:start="15:29" pos:end="72:11">{<block_content pos:start="17:5" pos:end="72:11">

    <if_stmt pos:start="17:5" pos:end="72:11"><if pos:start="17:5" pos:end="72:11">if <condition pos:start="17:8" pos:end="17:26">(<expr pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:11">ifm</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:19">ifq_so</name></name> <operator pos:start="17:21" pos:end="17:22">==</operator> <name pos:start="17:24" pos:end="17:25">so</name></expr>)</condition> <block pos:start="17:28" pos:end="72:11">{<block_content pos:start="19:7" pos:end="72:11">

      <expr_stmt pos:start="19:7" pos:end="19:25"><expr pos:start="19:7" pos:end="19:24"><name pos:start="19:7" pos:end="19:17"><name pos:start="19:7" pos:end="19:9">ifm</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:17">ifq_so</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <name pos:start="19:21" pos:end="19:24">NULL</name></expr>;</expr_stmt>





  <for pos:start="25:3" pos:end="72:11">for <control pos:start="25:7" pos:end="29:27">(<init pos:start="25:8" pos:end="25:54"><expr pos:start="25:8" pos:end="25:53"><name pos:start="25:8" pos:end="25:10">ifm</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <operator pos:start="25:14" pos:end="25:14">(</operator>struct <name pos:start="25:22" pos:end="25:25">mbuf</name> <operator pos:start="25:27" pos:end="25:27">*</operator><operator pos:start="25:28" pos:end="25:28">)</operator> <name pos:start="25:30" pos:end="25:53"><name pos:start="25:30" pos:end="25:34">slirp</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:45">if_batchq</name><operator pos:start="25:46" pos:end="25:46">.</operator><name pos:start="25:47" pos:end="25:53">qh_link</name></name></expr>;</init>

       <condition pos:start="27:8" pos:end="27:51"><expr pos:start="27:8" pos:end="27:50"><operator pos:start="27:8" pos:end="27:8">(</operator>struct <name pos:start="27:16" pos:end="27:22">quehead</name> <operator pos:start="27:24" pos:end="27:24">*</operator><operator pos:start="27:25" pos:end="27:25">)</operator> <name pos:start="27:27" pos:end="27:29">ifm</name> <operator pos:start="27:31" pos:end="27:32">!=</operator> <operator pos:start="27:34" pos:end="27:34">&amp;</operator><name pos:start="27:35" pos:end="27:50"><name pos:start="27:35" pos:end="27:39">slirp</name><operator pos:start="27:40" pos:end="27:41">-&gt;</operator><name pos:start="27:42" pos:end="27:50">if_batchq</name></name></expr>;</condition>

       <incr pos:start="29:8" pos:end="29:26"><expr pos:start="29:8" pos:end="29:26"><name pos:start="29:8" pos:end="29:10">ifm</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <name pos:start="29:14" pos:end="29:26"><name pos:start="29:14" pos:end="29:16">ifm</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:26">ifq_next</name></name></expr></incr>)</control> <block pos:start="29:29" pos:end="72:11">{<block_content pos:start="31:5" pos:end="72:11">

    <if_stmt pos:start="31:5" pos:end="72:11"><if pos:start="31:5" pos:end="72:11">if <condition pos:start="31:8" pos:end="31:26">(<expr pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:11">ifm</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:19">ifq_so</name></name> <operator pos:start="31:21" pos:end="31:22">==</operator> <name pos:start="31:24" pos:end="31:25">so</name></expr>)</condition> <block pos:start="31:28" pos:end="72:11">{<block_content pos:start="33:7" pos:end="72:11">

      <expr_stmt pos:start="33:7" pos:end="33:25"><expr pos:start="33:7" pos:end="33:24"><name pos:start="33:7" pos:end="33:17"><name pos:start="33:7" pos:end="33:9">ifm</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:17">ifq_so</name></name> <operator pos:start="33:19" pos:end="33:19">=</operator> <name pos:start="33:21" pos:end="33:24">NULL</name></expr>;</expr_stmt>





  <if_stmt pos:start="39:3" pos:end="72:11"><if pos:start="39:3" pos:end="72:11">if <condition pos:start="39:6" pos:end="39:39">(<expr pos:start="39:7" pos:end="39:38"><name pos:start="39:7" pos:end="39:16"><name pos:start="39:7" pos:end="39:8">so</name><operator pos:start="39:9" pos:end="39:10">-&gt;</operator><name pos:start="39:11" pos:end="39:16">so_emu</name></name><operator pos:start="39:17" pos:end="39:18">==</operator><name pos:start="39:19" pos:end="39:25">EMU_RSH</name> <operator pos:start="39:27" pos:end="39:28">&amp;&amp;</operator> <name pos:start="39:30" pos:end="39:38"><name pos:start="39:30" pos:end="39:31">so</name><operator pos:start="39:32" pos:end="39:33">-&gt;</operator><name pos:start="39:34" pos:end="39:38">extra</name></name></expr>)</condition> <block pos:start="39:41" pos:end="72:11">{<block_content pos:start="41:9" pos:end="72:11">

	<expr_stmt pos:start="41:9" pos:end="41:26"><expr pos:start="41:9" pos:end="41:25"><call pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:14">sofree</name><argument_list pos:start="41:15" pos:end="41:25">(<argument pos:start="41:16" pos:end="41:24"><expr pos:start="41:16" pos:end="41:24"><name pos:start="41:16" pos:end="41:24"><name pos:start="41:16" pos:end="41:17">so</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:24">extra</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="43:9" pos:end="43:23"><expr pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:10">so</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:17">extra</name></name><operator pos:start="43:18" pos:end="43:18">=</operator><name pos:start="43:19" pos:end="43:22">NULL</name></expr>;</expr_stmt>


  <if_stmt pos:start="46:3" pos:end="72:11"><if pos:start="46:3" pos:end="50:3">if <condition pos:start="46:6" pos:end="46:31">(<expr pos:start="46:7" pos:end="46:30"><name pos:start="46:7" pos:end="46:8">so</name> <operator pos:start="46:10" pos:end="46:11">==</operator> <name pos:start="46:13" pos:end="46:30"><name pos:start="46:13" pos:end="46:17">slirp</name><operator pos:start="46:18" pos:end="46:19">-&gt;</operator><name pos:start="46:20" pos:end="46:30">tcp_last_so</name></name></expr>)</condition> <block pos:start="46:33" pos:end="50:3">{<block_content pos:start="48:7" pos:end="48:39">

      <expr_stmt pos:start="48:7" pos:end="48:39"><expr pos:start="48:7" pos:end="48:38"><name pos:start="48:7" pos:end="48:24"><name pos:start="48:7" pos:end="48:11">slirp</name><operator pos:start="48:12" pos:end="48:13">-&gt;</operator><name pos:start="48:14" pos:end="48:24">tcp_last_so</name></name> <operator pos:start="48:26" pos:end="48:26">=</operator> <operator pos:start="48:28" pos:end="48:28">&amp;</operator><name pos:start="48:29" pos:end="48:38"><name pos:start="48:29" pos:end="48:33">slirp</name><operator pos:start="48:34" pos:end="48:35">-&gt;</operator><name pos:start="48:36" pos:end="48:38">tcb</name></name></expr>;</expr_stmt>

  </block_content>}</block></if> <if type="elseif" pos:start="50:5" pos:end="54:3">else if <condition pos:start="50:13" pos:end="50:38">(<expr pos:start="50:14" pos:end="50:37"><name pos:start="50:14" pos:end="50:15">so</name> <operator pos:start="50:17" pos:end="50:18">==</operator> <name pos:start="50:20" pos:end="50:37"><name pos:start="50:20" pos:end="50:24">slirp</name><operator pos:start="50:25" pos:end="50:26">-&gt;</operator><name pos:start="50:27" pos:end="50:37">udp_last_so</name></name></expr>)</condition> <block pos:start="50:40" pos:end="54:3">{<block_content pos:start="52:7" pos:end="52:39">

      <expr_stmt pos:start="52:7" pos:end="52:39"><expr pos:start="52:7" pos:end="52:38"><name pos:start="52:7" pos:end="52:24"><name pos:start="52:7" pos:end="52:11">slirp</name><operator pos:start="52:12" pos:end="52:13">-&gt;</operator><name pos:start="52:14" pos:end="52:24">udp_last_so</name></name> <operator pos:start="52:26" pos:end="52:26">=</operator> <operator pos:start="52:28" pos:end="52:28">&amp;</operator><name pos:start="52:29" pos:end="52:38"><name pos:start="52:29" pos:end="52:33">slirp</name><operator pos:start="52:34" pos:end="52:35">-&gt;</operator><name pos:start="52:36" pos:end="52:38">udb</name></name></expr>;</expr_stmt>

  </block_content>}</block></if> <if type="elseif" pos:start="54:5" pos:end="72:11">else if <condition pos:start="54:13" pos:end="54:39">(<expr pos:start="54:14" pos:end="54:38"><name pos:start="54:14" pos:end="54:15">so</name> <operator pos:start="54:17" pos:end="54:18">==</operator> <name pos:start="54:20" pos:end="54:38"><name pos:start="54:20" pos:end="54:24">slirp</name><operator pos:start="54:25" pos:end="54:26">-&gt;</operator><name pos:start="54:27" pos:end="54:38">icmp_last_so</name></name></expr>)</condition> <block pos:start="54:41" pos:end="72:11">{<block_content pos:start="56:7" pos:end="72:11">

      <expr_stmt pos:start="56:7" pos:end="56:41"><expr pos:start="56:7" pos:end="56:40"><name pos:start="56:7" pos:end="56:25"><name pos:start="56:7" pos:end="56:11">slirp</name><operator pos:start="56:12" pos:end="56:13">-&gt;</operator><name pos:start="56:14" pos:end="56:25">icmp_last_so</name></name> <operator pos:start="56:27" pos:end="56:27">=</operator> <operator pos:start="56:29" pos:end="56:29">&amp;</operator><name pos:start="56:30" pos:end="56:40"><name pos:start="56:30" pos:end="56:34">slirp</name><operator pos:start="56:35" pos:end="56:36">-&gt;</operator><name pos:start="56:37" pos:end="56:40">icmp</name></name></expr>;</expr_stmt>


  <expr_stmt pos:start="59:3" pos:end="59:19"><expr pos:start="59:3" pos:end="59:18"><call pos:start="59:3" pos:end="59:18"><name pos:start="59:3" pos:end="59:8">m_free</name><argument_list pos:start="59:9" pos:end="59:18">(<argument pos:start="59:10" pos:end="59:17"><expr pos:start="59:10" pos:end="59:17"><name pos:start="59:10" pos:end="59:17"><name pos:start="59:10" pos:end="59:11">so</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:17">so_m</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



  <if_stmt pos:start="63:3" pos:end="65:15"><if pos:start="63:3" pos:end="65:15">if<condition pos:start="63:5" pos:end="63:32">(<expr pos:start="63:6" pos:end="63:31"><name pos:start="63:6" pos:end="63:16"><name pos:start="63:6" pos:end="63:7">so</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:16">so_next</name></name> <operator pos:start="63:18" pos:end="63:19">&amp;&amp;</operator> <name pos:start="63:21" pos:end="63:31"><name pos:start="63:21" pos:end="63:22">so</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:31">so_prev</name></name></expr>)</condition><block type="pseudo" pos:start="65:5" pos:end="65:15"><block_content pos:start="65:5" pos:end="65:15">

    <expr_stmt pos:start="65:5" pos:end="65:15"><expr pos:start="65:5" pos:end="65:14"><call pos:start="65:5" pos:end="65:14"><name pos:start="65:5" pos:end="65:10">remque</name><argument_list pos:start="65:11" pos:end="65:14">(<argument pos:start="65:12" pos:end="65:13"><expr pos:start="65:12" pos:end="65:13"><name pos:start="65:12" pos:end="65:13">so</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>  <comment type="block" pos:start="65:18" pos:end="65:54">/* crashes if so is not in a queue */</comment>






  <expr_stmt pos:start="72:3" pos:end="72:11"><expr pos:start="72:3" pos:end="72:10"><call pos:start="72:3" pos:end="72:10"><name pos:start="72:3" pos:end="72:6">free</name><argument_list pos:start="72:7" pos:end="72:10">(<argument pos:start="72:8" pos:end="72:9"><expr pos:start="72:8" pos:end="72:9"><name pos:start="72:8" pos:end="72:9">so</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block>
</unit>
