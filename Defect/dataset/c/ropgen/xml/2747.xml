<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2747.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">qemu_del_net_client</name><parameter_list pos:start="1:25" pos:end="1:44">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:41"><name pos:start="1:26" pos:end="1:39">NetClientState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">nc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:5">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">NetClientState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:38"><name pos:start="5:21" pos:end="5:23">ncs</name><index pos:start="5:24" pos:end="5:38">[<expr pos:start="5:25" pos:end="5:37"><name pos:start="5:25" pos:end="5:37">MAX_QUEUE_NUM</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">queues</name></decl>, <decl pos:start="7:17" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:17">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="15:7">/* If the NetClientState belongs to a multiqueue backend, we will change all

     * other NetClientStates also.

     */</comment>

    <expr_stmt pos:start="17:5" pos:end="21:57"><expr pos:start="17:5" pos:end="21:56"><name pos:start="17:5" pos:end="17:10">queues</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <call pos:start="17:14" pos:end="21:56"><name pos:start="17:14" pos:end="17:41">qemu_find_net_clients_except</name><argument_list pos:start="17:42" pos:end="21:56">(<argument pos:start="17:43" pos:end="17:50"><expr pos:start="17:43" pos:end="17:50"><name pos:start="17:43" pos:end="17:50"><name pos:start="17:43" pos:end="17:44">nc</name><operator pos:start="17:45" pos:end="17:46">-&gt;</operator><name pos:start="17:47" pos:end="17:50">name</name></name></expr></argument>, <argument pos:start="17:53" pos:end="17:55"><expr pos:start="17:53" pos:end="17:55"><name pos:start="17:53" pos:end="17:55">ncs</name></expr></argument>,

                                          <argument pos:start="19:43" pos:end="19:69"><expr pos:start="19:43" pos:end="19:69"><name pos:start="19:43" pos:end="19:69">NET_CLIENT_OPTIONS_KIND_NIC</name></expr></argument>,

                                          <argument pos:start="21:43" pos:end="21:55"><expr pos:start="21:43" pos:end="21:55"><name pos:start="21:43" pos:end="21:55">MAX_QUEUE_NUM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:24"><expr pos:start="23:5" pos:end="23:23"><call pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:10">assert</name><argument_list pos:start="23:11" pos:end="23:23">(<argument pos:start="23:12" pos:end="23:22"><expr pos:start="23:12" pos:end="23:22"><name pos:start="23:12" pos:end="23:17">queues</name> <operator pos:start="23:19" pos:end="23:20">!=</operator> <literal type="number" pos:start="23:22" pos:end="23:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:77">/* If there is a peer NIC, delete and cleanup client, but do not free. */</comment>

    <if_stmt pos:start="29:5" pos:end="69:5"><if pos:start="29:5" pos:end="69:5">if <condition pos:start="29:8" pos:end="29:72">(<expr pos:start="29:9" pos:end="29:71"><name pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:10">nc</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:16">peer</name></name> <operator pos:start="29:18" pos:end="29:19">&amp;&amp;</operator> <name pos:start="29:21" pos:end="29:40"><name pos:start="29:21" pos:end="29:22">nc</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:28">peer</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:34">info</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:40">type</name></name> <operator pos:start="29:42" pos:end="29:43">==</operator> <name pos:start="29:45" pos:end="29:71">NET_CLIENT_OPTIONS_KIND_NIC</name></expr>)</condition> <block pos:start="29:74" pos:end="69:5">{<block_content pos:start="31:9" pos:end="67:15">

        <decl_stmt pos:start="31:9" pos:end="31:47"><decl pos:start="31:9" pos:end="31:46"><type pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:16">NICState</name> <modifier pos:start="31:18" pos:end="31:18">*</modifier></type><name pos:start="31:19" pos:end="31:21">nic</name> <init pos:start="31:23" pos:end="31:46">= <expr pos:start="31:25" pos:end="31:46"><call pos:start="31:25" pos:end="31:46"><name pos:start="31:25" pos:end="31:36">qemu_get_nic</name><argument_list pos:start="31:37" pos:end="31:46">(<argument pos:start="31:38" pos:end="31:45"><expr pos:start="31:38" pos:end="31:45"><name pos:start="31:38" pos:end="31:45"><name pos:start="31:38" pos:end="31:39">nc</name><operator pos:start="31:40" pos:end="31:41">-&gt;</operator><name pos:start="31:42" pos:end="31:45">peer</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="33:9" pos:end="37:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:30">(<expr pos:start="33:13" pos:end="33:29"><name pos:start="33:13" pos:end="33:29"><name pos:start="33:13" pos:end="33:15">nic</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:29">peer_deleted</name></name></expr>)</condition> <block pos:start="33:32" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:19">

            <return pos:start="35:13" pos:end="35:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:33"><expr pos:start="39:9" pos:end="39:32"><name pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:11">nic</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:25">peer_deleted</name></name> <operator pos:start="39:27" pos:end="39:27">=</operator> <name pos:start="39:29" pos:end="39:32">true</name></expr>;</expr_stmt>



        <for pos:start="43:9" pos:end="47:9">for <control pos:start="43:13" pos:end="43:36">(<init pos:start="43:14" pos:end="43:19"><expr pos:start="43:14" pos:end="43:18"><name pos:start="43:14" pos:end="43:14">i</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr>;</init> <condition pos:start="43:21" pos:end="43:31"><expr pos:start="43:21" pos:end="43:30"><name pos:start="43:21" pos:end="43:21">i</name> <operator pos:start="43:23" pos:end="43:23">&lt;</operator> <name pos:start="43:25" pos:end="43:30">queues</name></expr>;</condition> <incr pos:start="43:33" pos:end="43:35"><expr pos:start="43:33" pos:end="43:35"><name pos:start="43:33" pos:end="43:33">i</name><operator pos:start="43:34" pos:end="43:35">++</operator></expr></incr>)</control> <block pos:start="43:38" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:43">

            <expr_stmt pos:start="45:13" pos:end="45:43"><expr pos:start="45:13" pos:end="45:42"><name pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:15">ncs</name><index pos:start="45:16" pos:end="45:18">[<expr pos:start="45:17" pos:end="45:17"><name pos:start="45:17" pos:end="45:17">i</name></expr>]</index></name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:35"><name pos:start="45:21" pos:end="45:24">peer</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:35">link_down</name></name> <operator pos:start="45:37" pos:end="45:37">=</operator> <name pos:start="45:39" pos:end="45:42">true</name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="51:9" pos:end="55:9"><if pos:start="51:9" pos:end="55:9">if <condition pos:start="51:12" pos:end="51:48">(<expr pos:start="51:13" pos:end="51:47"><name pos:start="51:13" pos:end="51:47"><name pos:start="51:13" pos:end="51:14">nc</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:20">peer</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:26">info</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:47">link_status_changed</name></name></expr>)</condition> <block pos:start="51:50" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:58">

            <expr_stmt pos:start="53:13" pos:end="53:58"><expr pos:start="53:13" pos:end="53:57"><call pos:start="53:13" pos:end="53:57"><name pos:start="53:13" pos:end="53:47"><name pos:start="53:13" pos:end="53:14">nc</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:20">peer</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:26">info</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:47">link_status_changed</name></name><argument_list pos:start="53:48" pos:end="53:57">(<argument pos:start="53:49" pos:end="53:56"><expr pos:start="53:49" pos:end="53:56"><name pos:start="53:49" pos:end="53:56"><name pos:start="53:49" pos:end="53:50">nc</name><operator pos:start="53:51" pos:end="53:52">-&gt;</operator><name pos:start="53:53" pos:end="53:56">peer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <for pos:start="59:9" pos:end="63:9">for <control pos:start="59:13" pos:end="59:36">(<init pos:start="59:14" pos:end="59:19"><expr pos:start="59:14" pos:end="59:18"><name pos:start="59:14" pos:end="59:14">i</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <literal type="number" pos:start="59:18" pos:end="59:18">0</literal></expr>;</init> <condition pos:start="59:21" pos:end="59:31"><expr pos:start="59:21" pos:end="59:30"><name pos:start="59:21" pos:end="59:21">i</name> <operator pos:start="59:23" pos:end="59:23">&lt;</operator> <name pos:start="59:25" pos:end="59:30">queues</name></expr>;</condition> <incr pos:start="59:33" pos:end="59:35"><expr pos:start="59:33" pos:end="59:35"><name pos:start="59:33" pos:end="59:33">i</name><operator pos:start="59:34" pos:end="59:35">++</operator></expr></incr>)</control> <block pos:start="59:38" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:44">

            <expr_stmt pos:start="61:13" pos:end="61:44"><expr pos:start="61:13" pos:end="61:43"><call pos:start="61:13" pos:end="61:43"><name pos:start="61:13" pos:end="61:35">qemu_cleanup_net_client</name><argument_list pos:start="61:36" pos:end="61:43">(<argument pos:start="61:37" pos:end="61:42"><expr pos:start="61:37" pos:end="61:42"><name pos:start="61:37" pos:end="61:42"><name pos:start="61:37" pos:end="61:39">ncs</name><index pos:start="61:40" pos:end="61:42">[<expr pos:start="61:41" pos:end="61:41"><name pos:start="61:41" pos:end="61:41">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <return pos:start="67:9" pos:end="67:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:58"><expr pos:start="73:5" pos:end="73:57"><call pos:start="73:5" pos:end="73:57"><name pos:start="73:5" pos:end="73:10">assert</name><argument_list pos:start="73:11" pos:end="73:57">(<argument pos:start="73:12" pos:end="73:56"><expr pos:start="73:12" pos:end="73:56"><name pos:start="73:12" pos:end="73:25"><name pos:start="73:12" pos:end="73:13">nc</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:19">info</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:25">type</name></name> <operator pos:start="73:27" pos:end="73:28">!=</operator> <name pos:start="73:30" pos:end="73:56">NET_CLIENT_OPTIONS_KIND_NIC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="77:5" pos:end="83:5">for <control pos:start="77:9" pos:end="77:32">(<init pos:start="77:10" pos:end="77:15"><expr pos:start="77:10" pos:end="77:14"><name pos:start="77:10" pos:end="77:10">i</name> <operator pos:start="77:12" pos:end="77:12">=</operator> <literal type="number" pos:start="77:14" pos:end="77:14">0</literal></expr>;</init> <condition pos:start="77:17" pos:end="77:27"><expr pos:start="77:17" pos:end="77:26"><name pos:start="77:17" pos:end="77:17">i</name> <operator pos:start="77:19" pos:end="77:19">&lt;</operator> <name pos:start="77:21" pos:end="77:26">queues</name></expr>;</condition> <incr pos:start="77:29" pos:end="77:31"><expr pos:start="77:29" pos:end="77:31"><name pos:start="77:29" pos:end="77:29">i</name><operator pos:start="77:30" pos:end="77:31">++</operator></expr></incr>)</control> <block pos:start="77:34" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:37">

        <expr_stmt pos:start="79:9" pos:end="79:40"><expr pos:start="79:9" pos:end="79:39"><call pos:start="79:9" pos:end="79:39"><name pos:start="79:9" pos:end="79:31">qemu_cleanup_net_client</name><argument_list pos:start="79:32" pos:end="79:39">(<argument pos:start="79:33" pos:end="79:38"><expr pos:start="79:33" pos:end="79:38"><name pos:start="79:33" pos:end="79:38"><name pos:start="79:33" pos:end="79:35">ncs</name><index pos:start="79:36" pos:end="79:38">[<expr pos:start="79:37" pos:end="79:37"><name pos:start="79:37" pos:end="79:37">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:37"><expr pos:start="81:9" pos:end="81:36"><call pos:start="81:9" pos:end="81:36"><name pos:start="81:9" pos:end="81:28">qemu_free_net_client</name><argument_list pos:start="81:29" pos:end="81:36">(<argument pos:start="81:30" pos:end="81:35"><expr pos:start="81:30" pos:end="81:35"><name pos:start="81:30" pos:end="81:35"><name pos:start="81:30" pos:end="81:32">ncs</name><index pos:start="81:33" pos:end="81:35">[<expr pos:start="81:34" pos:end="81:34"><name pos:start="81:34" pos:end="81:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
