<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15236.c" pos:tabs="8"><function pos:start="1:1" pos:end="559:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">ff_mov_write_packet</name><parameter_list pos:start="1:24" pos:end="1:58">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:42"><name pos:start="1:25" pos:end="1:39">AVFormatContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:52">AVPacket</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="559:1">{<block_content pos:start="5:5" pos:end="557:15">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">MOVMuxContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">mov</name> <init pos:start="5:24" pos:end="5:37">= <expr pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:52"><decl pos:start="9:5" pos:end="9:51"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">MOVTrack</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:17">trk</name> <init pos:start="9:19" pos:end="9:51">= <expr pos:start="9:21" pos:end="9:51"><operator pos:start="9:21" pos:end="9:21">&amp;</operator><name pos:start="9:22" pos:end="9:51"><name pos:start="9:22" pos:end="9:24">mov</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:32">tracks</name><index pos:start="9:33" pos:end="9:51">[<expr pos:start="9:34" pos:end="9:50"><name pos:start="9:34" pos:end="9:50"><name pos:start="9:34" pos:end="9:36">pkt</name><operator pos:start="9:37" pos:end="9:38">-&gt;</operator><name pos:start="9:39" pos:end="9:50">stream_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">AVCodecContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:23">enc</name> <init pos:start="11:25" pos:end="11:34">= <expr pos:start="11:27" pos:end="11:34"><name pos:start="11:27" pos:end="11:34"><name pos:start="11:27" pos:end="11:29">trk</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:34">enc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:37"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:33">samples_in_chunk</name> <init pos:start="13:35" pos:end="13:37">= <expr pos:start="13:37" pos:end="13:37"><literal type="number" pos:start="13:37" pos:end="13:37">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:34"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">size</name> <init pos:start="15:14" pos:end="15:24">= <expr pos:start="15:16" pos:end="15:24"><name pos:start="15:16" pos:end="15:24"><name pos:start="15:16" pos:end="15:18">pkt</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:24">size</name></name></expr></init></decl>, <decl pos:start="15:27" pos:end="15:33"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:27" pos:end="15:29">ret</name> <init pos:start="15:31" pos:end="15:33">= <expr pos:start="15:33" pos:end="15:33"><literal type="number" pos:start="15:33" pos:end="15:33">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:37"><decl pos:start="17:5" pos:end="17:36"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:29">reformatted_data</name> <init pos:start="17:31" pos:end="17:36">= <expr pos:start="17:33" pos:end="17:36"><name pos:start="17:33" pos:end="17:36">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="49:5"><if pos:start="21:5" pos:end="49:5">if <condition pos:start="21:8" pos:end="21:19">(<expr pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:11">trk</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:18">entry</name></name></expr>)</condition> <block pos:start="21:21" pos:end="49:5">{<block_content pos:start="23:9" pos:end="47:9">

        <decl_stmt pos:start="23:9" pos:end="23:71"><decl pos:start="23:9" pos:end="23:70"><type pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:15">int64_t</name></type> <name pos:start="23:17" pos:end="23:24">duration</name> <init pos:start="23:26" pos:end="23:70">= <expr pos:start="23:28" pos:end="23:70"><name pos:start="23:28" pos:end="23:35"><name pos:start="23:28" pos:end="23:30">pkt</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:35">dts</name></name> <operator pos:start="23:37" pos:end="23:37">-</operator> <name pos:start="23:39" pos:end="23:66"><name pos:start="23:39" pos:end="23:41">trk</name><operator pos:start="23:42" pos:end="23:43">-&gt;</operator><name pos:start="23:44" pos:end="23:50">cluster</name><index pos:start="23:51" pos:end="23:66">[<expr pos:start="23:52" pos:end="23:65"><name pos:start="23:52" pos:end="23:61"><name pos:start="23:52" pos:end="23:54">trk</name><operator pos:start="23:55" pos:end="23:56">-&gt;</operator><name pos:start="23:57" pos:end="23:61">entry</name></name> <operator pos:start="23:63" pos:end="23:63">-</operator> <literal type="number" pos:start="23:65" pos:end="23:65">1</literal></expr>]</index></name><operator pos:start="23:67" pos:end="23:67">.</operator><name pos:start="23:68" pos:end="23:70">dts</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="25:9" pos:end="39:9"><if pos:start="25:9" pos:end="39:9">if <condition pos:start="25:12" pos:end="25:47">(<expr pos:start="25:13" pos:end="25:46"><name pos:start="25:13" pos:end="25:38"><name pos:start="25:13" pos:end="25:20">duration</name> <argument_list type="generic" pos:start="25:22" pos:end="25:38">&lt; <argument pos:start="25:24" pos:end="25:36"><expr pos:start="25:24" pos:end="25:36"><literal type="number" pos:start="25:24" pos:end="25:24">0</literal> <operator pos:start="25:26" pos:end="25:27">||</operator> <name pos:start="25:29" pos:end="25:36">duration</name></expr></argument> &gt;</argument_list></name> <name pos:start="25:40" pos:end="25:46">INT_MAX</name></expr>)</condition> <block pos:start="25:49" pos:end="39:9">{<block_content pos:start="27:13" pos:end="37:38">

            <expr_stmt pos:start="27:13" pos:end="31:14"><expr pos:start="27:13" pos:end="31:13"><call pos:start="27:13" pos:end="31:13"><name pos:start="27:13" pos:end="27:18">av_log</name><argument_list pos:start="27:19" pos:end="31:13">(<argument pos:start="27:20" pos:end="27:20"><expr pos:start="27:20" pos:end="27:20"><name pos:start="27:20" pos:end="27:20">s</name></expr></argument>, <argument pos:start="27:23" pos:end="27:34"><expr pos:start="27:23" pos:end="27:34"><name pos:start="27:23" pos:end="27:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:37" pos:end="27:138"><expr pos:start="27:37" pos:end="27:138"><literal type="string" pos:start="27:37" pos:end="27:70">"Application provided duration: %"</literal><name pos:start="27:71" pos:end="27:76">PRId64</name><literal type="string" pos:start="27:77" pos:end="27:93">" / timestamp: %"</literal><name pos:start="27:94" pos:end="27:99">PRId64</name><literal type="string" pos:start="27:100" pos:end="27:138">" is out of range for mov/mp4 format\n"</literal></expr></argument>,

                <argument pos:start="29:17" pos:end="29:24"><expr pos:start="29:17" pos:end="29:24"><name pos:start="29:17" pos:end="29:24">duration</name></expr></argument>, <argument pos:start="29:27" pos:end="29:34"><expr pos:start="29:27" pos:end="29:34"><name pos:start="29:27" pos:end="29:34"><name pos:start="29:27" pos:end="29:29">pkt</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:34">dts</name></name></expr></argument>

            )</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="35:13" pos:end="35:60"><expr pos:start="35:13" pos:end="35:59"><name pos:start="35:13" pos:end="35:20"><name pos:start="35:13" pos:end="35:15">pkt</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:20">dts</name></name> <operator pos:start="35:22" pos:end="35:22">=</operator> <name pos:start="35:24" pos:end="35:51"><name pos:start="35:24" pos:end="35:26">trk</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:35">cluster</name><index pos:start="35:36" pos:end="35:51">[<expr pos:start="35:37" pos:end="35:50"><name pos:start="35:37" pos:end="35:46"><name pos:start="35:37" pos:end="35:39">trk</name><operator pos:start="35:40" pos:end="35:41">-&gt;</operator><name pos:start="35:42" pos:end="35:46">entry</name></name> <operator pos:start="35:48" pos:end="35:48">-</operator> <literal type="number" pos:start="35:50" pos:end="35:50">1</literal></expr>]</index></name><operator pos:start="35:52" pos:end="35:52">.</operator><name pos:start="35:53" pos:end="35:55">dts</name> <operator pos:start="35:57" pos:end="35:57">+</operator> <literal type="number" pos:start="35:59" pos:end="35:59">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:38"><expr pos:start="37:13" pos:end="37:37"><name pos:start="37:13" pos:end="37:20"><name pos:start="37:13" pos:end="37:15">pkt</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:20">pts</name></name> <operator pos:start="37:22" pos:end="37:22">=</operator> <name pos:start="37:24" pos:end="37:37">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:30">(<expr pos:start="41:13" pos:end="41:29"><name pos:start="41:13" pos:end="41:25"><name pos:start="41:13" pos:end="41:15">pkt</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:25">duration</name></name> <operator pos:start="41:27" pos:end="41:27">&lt;</operator> <literal type="number" pos:start="41:29" pos:end="41:29">0</literal></expr>)</condition> <block pos:start="41:32" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:35">

            <expr_stmt pos:start="43:13" pos:end="43:108"><expr pos:start="43:13" pos:end="43:107"><call pos:start="43:13" pos:end="43:107"><name pos:start="43:13" pos:end="43:18">av_log</name><argument_list pos:start="43:19" pos:end="43:107">(<argument pos:start="43:20" pos:end="43:20"><expr pos:start="43:20" pos:end="43:20"><name pos:start="43:20" pos:end="43:20">s</name></expr></argument>, <argument pos:start="43:23" pos:end="43:34"><expr pos:start="43:23" pos:end="43:34"><name pos:start="43:23" pos:end="43:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:37" pos:end="43:91"><expr pos:start="43:37" pos:end="43:91"><literal type="string" pos:start="43:37" pos:end="43:70">"Application provided duration: %"</literal><name pos:start="43:71" pos:end="43:76">PRId64</name><literal type="string" pos:start="43:77" pos:end="43:91">" is invalid\n"</literal></expr></argument>, <argument pos:start="43:94" pos:end="43:106"><expr pos:start="43:94" pos:end="43:106"><name pos:start="43:94" pos:end="43:106"><name pos:start="43:94" pos:end="43:96">pkt</name><operator pos:start="43:97" pos:end="43:98">-&gt;</operator><name pos:start="43:99" pos:end="43:106">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="45:13" pos:end="45:35">return <expr pos:start="45:20" pos:end="45:34"><call pos:start="45:20" pos:end="45:34"><name pos:start="45:20" pos:end="45:26">AVERROR</name><argument_list pos:start="45:27" pos:end="45:34">(<argument pos:start="45:28" pos:end="45:33"><expr pos:start="45:28" pos:end="45:33"><name pos:start="45:28" pos:end="45:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="51:5" pos:end="95:5"><if pos:start="51:5" pos:end="95:5">if <condition pos:start="51:8" pos:end="51:42">(<expr pos:start="51:9" pos:end="51:41"><name pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:11">mov</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:18">flags</name></name> <operator pos:start="51:20" pos:end="51:20">&amp;</operator> <name pos:start="51:22" pos:end="51:41">FF_MOV_FLAG_FRAGMENT</name></expr>)</condition> <block pos:start="51:44" pos:end="95:5">{<block_content pos:start="53:9" pos:end="93:9">

        <decl_stmt pos:start="53:9" pos:end="53:16"><decl pos:start="53:9" pos:end="53:15"><type pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:11">int</name></type> <name pos:start="53:13" pos:end="53:15">ret</name></decl>;</decl_stmt>

        <if_stmt pos:start="55:9" pos:end="93:9"><if pos:start="55:9" pos:end="81:9">if <condition pos:start="55:12" pos:end="55:69">(<expr pos:start="55:13" pos:end="55:68"><name pos:start="55:13" pos:end="55:29"><name pos:start="55:13" pos:end="55:15">mov</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:29">moov_written</name></name> <operator pos:start="55:31" pos:end="55:32">||</operator> <name pos:start="55:34" pos:end="55:43"><name pos:start="55:34" pos:end="55:36">mov</name><operator pos:start="55:37" pos:end="55:38">-&gt;</operator><name pos:start="55:39" pos:end="55:43">flags</name></name> <operator pos:start="55:45" pos:end="55:45">&amp;</operator> <name pos:start="55:47" pos:end="55:68">FF_MOV_FLAG_EMPTY_MOOV</name></expr>)</condition> <block pos:start="55:71" pos:end="81:9">{<block_content pos:start="57:13" pos:end="79:31">

            <if_stmt pos:start="57:13" pos:end="67:13"><if pos:start="57:13" pos:end="67:13">if <condition pos:start="57:16" pos:end="57:59">(<expr pos:start="57:17" pos:end="57:58"><name pos:start="57:17" pos:end="57:36"><name pos:start="57:17" pos:end="57:19">mov</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:36">frag_interleave</name></name> <operator pos:start="57:38" pos:end="57:39">&amp;&amp;</operator> <name pos:start="57:41" pos:end="57:54"><name pos:start="57:41" pos:end="57:43">mov</name><operator pos:start="57:44" pos:end="57:45">-&gt;</operator><name pos:start="57:46" pos:end="57:54">fragments</name></name> <operator pos:start="57:56" pos:end="57:56">&gt;</operator> <literal type="number" pos:start="57:58" pos:end="57:58">0</literal></expr>)</condition> <block pos:start="57:61" pos:end="67:13">{<block_content pos:start="59:17" pos:end="65:17">

                <if_stmt pos:start="59:17" pos:end="65:17"><if pos:start="59:17" pos:end="65:17">if <condition pos:start="59:20" pos:end="59:78">(<expr pos:start="59:21" pos:end="59:77"><name pos:start="59:21" pos:end="59:30"><name pos:start="59:21" pos:end="59:23">trk</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:30">entry</name></name> <operator pos:start="59:32" pos:end="59:32">-</operator> <name pos:start="59:34" pos:end="59:53"><name pos:start="59:34" pos:end="59:36">trk</name><operator pos:start="59:37" pos:end="59:38">-&gt;</operator><name pos:start="59:39" pos:end="59:53">entries_flushed</name></name> <operator pos:start="59:55" pos:end="59:56">&gt;=</operator> <name pos:start="59:58" pos:end="59:77"><name pos:start="59:58" pos:end="59:60">mov</name><operator pos:start="59:61" pos:end="59:62">-&gt;</operator><name pos:start="59:63" pos:end="59:77">frag_interleave</name></name></expr>)</condition> <block pos:start="59:80" pos:end="65:17">{<block_content pos:start="61:21" pos:end="63:35">

                    <if_stmt pos:start="61:21" pos:end="63:35"><if pos:start="61:21" pos:end="63:35">if <condition pos:start="61:24" pos:end="61:76">(<expr pos:start="61:25" pos:end="61:75"><operator pos:start="61:25" pos:end="61:25">(</operator><name pos:start="61:26" pos:end="61:28">ret</name> <operator pos:start="61:30" pos:end="61:30">=</operator> <call pos:start="61:32" pos:end="61:70"><name pos:start="61:32" pos:end="61:62">mov_flush_fragment_interleaving</name><argument_list pos:start="61:63" pos:end="61:70">(<argument pos:start="61:64" pos:end="61:64"><expr pos:start="61:64" pos:end="61:64"><name pos:start="61:64" pos:end="61:64">s</name></expr></argument>, <argument pos:start="61:67" pos:end="61:69"><expr pos:start="61:67" pos:end="61:69"><name pos:start="61:67" pos:end="61:69">trk</name></expr></argument>)</argument_list></call><operator pos:start="61:71" pos:end="61:71">)</operator> <operator pos:start="61:73" pos:end="61:73">&lt;</operator> <literal type="number" pos:start="61:75" pos:end="61:75">0</literal></expr>)</condition><block type="pseudo" pos:start="63:25" pos:end="63:35"><block_content pos:start="63:25" pos:end="63:35">

                        <return pos:start="63:25" pos:end="63:35">return <expr pos:start="63:32" pos:end="63:34"><name pos:start="63:32" pos:end="63:34">ret</name></expr>;</return></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="71:13" pos:end="77:13"><if pos:start="71:13" pos:end="77:13">if <condition pos:start="71:16" pos:end="71:31">(<expr pos:start="71:17" pos:end="71:30"><operator pos:start="71:17" pos:end="71:17">!</operator><name pos:start="71:18" pos:end="71:30"><name pos:start="71:18" pos:end="71:20">trk</name><operator pos:start="71:21" pos:end="71:22">-&gt;</operator><name pos:start="71:23" pos:end="71:30">mdat_buf</name></name></expr>)</condition> <block pos:start="71:33" pos:end="77:13">{<block_content pos:start="73:17" pos:end="75:31">

                <if_stmt pos:start="73:17" pos:end="75:31"><if pos:start="73:17" pos:end="75:31">if <condition pos:start="73:20" pos:end="73:66">(<expr pos:start="73:21" pos:end="73:65"><operator pos:start="73:21" pos:end="73:21">(</operator><name pos:start="73:22" pos:end="73:24">ret</name> <operator pos:start="73:26" pos:end="73:26">=</operator> <call pos:start="73:28" pos:end="73:60"><name pos:start="73:28" pos:end="73:44">avio_open_dyn_buf</name><argument_list pos:start="73:45" pos:end="73:60">(<argument pos:start="73:46" pos:end="73:59"><expr pos:start="73:46" pos:end="73:59"><operator pos:start="73:46" pos:end="73:46">&amp;</operator><name pos:start="73:47" pos:end="73:59"><name pos:start="73:47" pos:end="73:49">trk</name><operator pos:start="73:50" pos:end="73:51">-&gt;</operator><name pos:start="73:52" pos:end="73:59">mdat_buf</name></name></expr></argument>)</argument_list></call><operator pos:start="73:61" pos:end="73:61">)</operator> <operator pos:start="73:63" pos:end="73:63">&lt;</operator> <literal type="number" pos:start="73:65" pos:end="73:65">0</literal></expr>)</condition><block type="pseudo" pos:start="75:21" pos:end="75:31"><block_content pos:start="75:21" pos:end="75:31">

                    <return pos:start="75:21" pos:end="75:31">return <expr pos:start="75:28" pos:end="75:30"><name pos:start="75:28" pos:end="75:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:31"><expr pos:start="79:13" pos:end="79:30"><name pos:start="79:13" pos:end="79:14">pb</name> <operator pos:start="79:16" pos:end="79:16">=</operator> <name pos:start="79:18" pos:end="79:30"><name pos:start="79:18" pos:end="79:20">trk</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:30">mdat_buf</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="81:11" pos:end="93:9">else <block pos:start="81:16" pos:end="93:9">{<block_content pos:start="83:13" pos:end="91:31">

            <if_stmt pos:start="83:13" pos:end="89:13"><if pos:start="83:13" pos:end="89:13">if <condition pos:start="83:16" pos:end="83:31">(<expr pos:start="83:17" pos:end="83:30"><operator pos:start="83:17" pos:end="83:17">!</operator><name pos:start="83:18" pos:end="83:30"><name pos:start="83:18" pos:end="83:20">mov</name><operator pos:start="83:21" pos:end="83:22">-&gt;</operator><name pos:start="83:23" pos:end="83:30">mdat_buf</name></name></expr>)</condition> <block pos:start="83:33" pos:end="89:13">{<block_content pos:start="85:17" pos:end="87:31">

                <if_stmt pos:start="85:17" pos:end="87:31"><if pos:start="85:17" pos:end="87:31">if <condition pos:start="85:20" pos:end="85:66">(<expr pos:start="85:21" pos:end="85:65"><operator pos:start="85:21" pos:end="85:21">(</operator><name pos:start="85:22" pos:end="85:24">ret</name> <operator pos:start="85:26" pos:end="85:26">=</operator> <call pos:start="85:28" pos:end="85:60"><name pos:start="85:28" pos:end="85:44">avio_open_dyn_buf</name><argument_list pos:start="85:45" pos:end="85:60">(<argument pos:start="85:46" pos:end="85:59"><expr pos:start="85:46" pos:end="85:59"><operator pos:start="85:46" pos:end="85:46">&amp;</operator><name pos:start="85:47" pos:end="85:59"><name pos:start="85:47" pos:end="85:49">mov</name><operator pos:start="85:50" pos:end="85:51">-&gt;</operator><name pos:start="85:52" pos:end="85:59">mdat_buf</name></name></expr></argument>)</argument_list></call><operator pos:start="85:61" pos:end="85:61">)</operator> <operator pos:start="85:63" pos:end="85:63">&lt;</operator> <literal type="number" pos:start="85:65" pos:end="85:65">0</literal></expr>)</condition><block type="pseudo" pos:start="87:21" pos:end="87:31"><block_content pos:start="87:21" pos:end="87:31">

                    <return pos:start="87:21" pos:end="87:31">return <expr pos:start="87:28" pos:end="87:30"><name pos:start="87:28" pos:end="87:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:31"><expr pos:start="91:13" pos:end="91:30"><name pos:start="91:13" pos:end="91:14">pb</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <name pos:start="91:18" pos:end="91:30"><name pos:start="91:18" pos:end="91:20">mov</name><operator pos:start="91:21" pos:end="91:22">-&gt;</operator><name pos:start="91:23" pos:end="91:30">mdat_buf</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="99:5" pos:end="139:29"><if pos:start="99:5" pos:end="127:5">if <condition pos:start="99:8" pos:end="99:44">(<expr pos:start="99:9" pos:end="99:43"><name pos:start="99:9" pos:end="99:21"><name pos:start="99:9" pos:end="99:11">enc</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:21">codec_id</name></name> <operator pos:start="99:23" pos:end="99:24">==</operator> <name pos:start="99:26" pos:end="99:43">AV_CODEC_ID_AMR_NB</name></expr>)</condition> <block pos:start="99:46" pos:end="127:5">{<block_content pos:start="103:9" pos:end="125:9">

        <comment type="block" pos:start="101:9" pos:end="101:74">/* We must find out how many AMR blocks there are in one packet */</comment>

        <decl_stmt pos:start="103:9" pos:end="105:69"><decl pos:start="103:9" pos:end="105:68"><type pos:start="103:9" pos:end="103:29"><specifier pos:start="103:9" pos:end="103:14">static</specifier> <specifier pos:start="103:16" pos:end="103:20">const</specifier> <name pos:start="103:22" pos:end="103:29">uint16_t</name></type> <name pos:start="103:31" pos:end="103:45"><name pos:start="103:31" pos:end="103:41">packed_size</name><index pos:start="103:42" pos:end="103:45">[<expr pos:start="103:43" pos:end="103:44"><literal type="number" pos:start="103:43" pos:end="103:44">16</literal></expr>]</index></name> <init pos:start="103:47" pos:end="105:68">=

            <expr pos:start="105:13" pos:end="105:68"><block pos:start="105:13" pos:end="105:68">{<expr pos:start="105:14" pos:end="105:15"><literal type="number" pos:start="105:14" pos:end="105:15">13</literal></expr>, <expr pos:start="105:18" pos:end="105:19"><literal type="number" pos:start="105:18" pos:end="105:19">14</literal></expr>, <expr pos:start="105:22" pos:end="105:23"><literal type="number" pos:start="105:22" pos:end="105:23">16</literal></expr>, <expr pos:start="105:26" pos:end="105:27"><literal type="number" pos:start="105:26" pos:end="105:27">18</literal></expr>, <expr pos:start="105:30" pos:end="105:31"><literal type="number" pos:start="105:30" pos:end="105:31">20</literal></expr>, <expr pos:start="105:34" pos:end="105:35"><literal type="number" pos:start="105:34" pos:end="105:35">21</literal></expr>, <expr pos:start="105:38" pos:end="105:39"><literal type="number" pos:start="105:38" pos:end="105:39">27</literal></expr>, <expr pos:start="105:42" pos:end="105:43"><literal type="number" pos:start="105:42" pos:end="105:43">32</literal></expr>, <expr pos:start="105:46" pos:end="105:46"><literal type="number" pos:start="105:46" pos:end="105:46">6</literal></expr>, <expr pos:start="105:49" pos:end="105:49"><literal type="number" pos:start="105:49" pos:end="105:49">0</literal></expr>, <expr pos:start="105:52" pos:end="105:52"><literal type="number" pos:start="105:52" pos:end="105:52">0</literal></expr>, <expr pos:start="105:55" pos:end="105:55"><literal type="number" pos:start="105:55" pos:end="105:55">0</literal></expr>, <expr pos:start="105:58" pos:end="105:58"><literal type="number" pos:start="105:58" pos:end="105:58">0</literal></expr>, <expr pos:start="105:61" pos:end="105:61"><literal type="number" pos:start="105:61" pos:end="105:61">0</literal></expr>, <expr pos:start="105:64" pos:end="105:64"><literal type="number" pos:start="105:64" pos:end="105:64">0</literal></expr>, <expr pos:start="105:67" pos:end="105:67"><literal type="number" pos:start="105:67" pos:end="105:67">1</literal></expr>}</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="107:9" pos:end="107:20"><decl pos:start="107:9" pos:end="107:19"><type pos:start="107:9" pos:end="107:11"><name pos:start="107:9" pos:end="107:11">int</name></type> <name pos:start="107:13" pos:end="107:15">len</name> <init pos:start="107:17" pos:end="107:19">= <expr pos:start="107:19" pos:end="107:19"><literal type="number" pos:start="107:19" pos:end="107:19">0</literal></expr></init></decl>;</decl_stmt>



        <while pos:start="111:9" pos:end="117:9">while <condition pos:start="111:15" pos:end="111:52">(<expr pos:start="111:16" pos:end="111:51"><name pos:start="111:16" pos:end="111:18">len</name> <operator pos:start="111:20" pos:end="111:20">&lt;</operator> <name pos:start="111:22" pos:end="111:25">size</name> <operator pos:start="111:27" pos:end="111:28">&amp;&amp;</operator> <name pos:start="111:30" pos:end="111:45">samples_in_chunk</name> <operator pos:start="111:47" pos:end="111:47">&lt;</operator> <literal type="number" pos:start="111:49" pos:end="111:51">100</literal></expr>)</condition> <block pos:start="111:54" pos:end="117:9">{<block_content pos:start="113:13" pos:end="115:31">

            <expr_stmt pos:start="113:13" pos:end="113:61"><expr pos:start="113:13" pos:end="113:60"><name pos:start="113:13" pos:end="113:15">len</name> <operator pos:start="113:17" pos:end="113:18">+=</operator> <name pos:start="113:20" pos:end="113:60"><name pos:start="113:20" pos:end="113:30">packed_size</name><index pos:start="113:31" pos:end="113:60">[<expr pos:start="113:32" pos:end="113:59"><operator pos:start="113:32" pos:end="113:32">(</operator><name pos:start="113:33" pos:end="113:46"><name pos:start="113:33" pos:end="113:35">pkt</name><operator pos:start="113:36" pos:end="113:37">-&gt;</operator><name pos:start="113:38" pos:end="113:41">data</name><index pos:start="113:42" pos:end="113:46">[<expr pos:start="113:43" pos:end="113:45"><name pos:start="113:43" pos:end="113:45">len</name></expr>]</index></name> <operator pos:start="113:48" pos:end="113:49">&gt;&gt;</operator> <literal type="number" pos:start="113:51" pos:end="113:51">3</literal><operator pos:start="113:52" pos:end="113:52">)</operator> <operator pos:start="113:54" pos:end="113:54">&amp;</operator> <literal type="number" pos:start="113:56" pos:end="113:59">0x0F</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:31"><expr pos:start="115:13" pos:end="115:30"><name pos:start="115:13" pos:end="115:28">samples_in_chunk</name><operator pos:start="115:29" pos:end="115:30">++</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

        <if_stmt pos:start="119:9" pos:end="125:9"><if pos:start="119:9" pos:end="125:9">if <condition pos:start="119:12" pos:end="119:33">(<expr pos:start="119:13" pos:end="119:32"><name pos:start="119:13" pos:end="119:28">samples_in_chunk</name> <operator pos:start="119:30" pos:end="119:30">&gt;</operator> <literal type="number" pos:start="119:32" pos:end="119:32">1</literal></expr>)</condition> <block pos:start="119:35" pos:end="125:9">{<block_content pos:start="121:13" pos:end="123:22">

            <expr_stmt pos:start="121:13" pos:end="121:112"><expr pos:start="121:13" pos:end="121:111"><call pos:start="121:13" pos:end="121:111"><name pos:start="121:13" pos:end="121:18">av_log</name><argument_list pos:start="121:19" pos:end="121:111">(<argument pos:start="121:20" pos:end="121:20"><expr pos:start="121:20" pos:end="121:20"><name pos:start="121:20" pos:end="121:20">s</name></expr></argument>, <argument pos:start="121:23" pos:end="121:34"><expr pos:start="121:23" pos:end="121:34"><name pos:start="121:23" pos:end="121:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="121:37" pos:end="121:110"><expr pos:start="121:37" pos:end="121:110"><literal type="string" pos:start="121:37" pos:end="121:110">"fatal error, input is not a single packet, implement a AVParser for it\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="123:13" pos:end="123:22">return <expr pos:start="123:20" pos:end="123:21"><operator pos:start="123:20" pos:end="123:20">-</operator><literal type="number" pos:start="123:21" pos:end="123:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="127:7" pos:end="133:5">else if <condition pos:start="127:15" pos:end="129:58">(<expr pos:start="127:16" pos:end="129:57"><name pos:start="127:16" pos:end="127:28"><name pos:start="127:16" pos:end="127:18">enc</name><operator pos:start="127:19" pos:end="127:20">-&gt;</operator><name pos:start="127:21" pos:end="127:28">codec_id</name></name> <operator pos:start="127:30" pos:end="127:31">==</operator> <name pos:start="127:33" pos:end="127:52">AV_CODEC_ID_ADPCM_MS</name> <operator pos:start="127:54" pos:end="127:55">||</operator>

               <name pos:start="129:16" pos:end="129:28"><name pos:start="129:16" pos:end="129:18">enc</name><operator pos:start="129:19" pos:end="129:20">-&gt;</operator><name pos:start="129:21" pos:end="129:28">codec_id</name></name> <operator pos:start="129:30" pos:end="129:31">==</operator> <name pos:start="129:33" pos:end="129:57">AV_CODEC_ID_ADPCM_IMA_WAV</name></expr>)</condition> <block pos:start="129:60" pos:end="133:5">{<block_content pos:start="131:9" pos:end="131:43">

        <expr_stmt pos:start="131:9" pos:end="131:43"><expr pos:start="131:9" pos:end="131:42"><name pos:start="131:9" pos:end="131:24">samples_in_chunk</name> <operator pos:start="131:26" pos:end="131:26">=</operator> <name pos:start="131:28" pos:end="131:42"><name pos:start="131:28" pos:end="131:30">enc</name><operator pos:start="131:31" pos:end="131:32">-&gt;</operator><name pos:start="131:33" pos:end="131:42">frame_size</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="133:7" pos:end="135:51">else if <condition pos:start="133:15" pos:end="133:32">(<expr pos:start="133:16" pos:end="133:31"><name pos:start="133:16" pos:end="133:31"><name pos:start="133:16" pos:end="133:18">trk</name><operator pos:start="133:19" pos:end="133:20">-&gt;</operator><name pos:start="133:21" pos:end="133:31">sample_size</name></name></expr>)</condition><block type="pseudo" pos:start="135:9" pos:end="135:51"><block_content pos:start="135:9" pos:end="135:51">

        <expr_stmt pos:start="135:9" pos:end="135:51"><expr pos:start="135:9" pos:end="135:50"><name pos:start="135:9" pos:end="135:24">samples_in_chunk</name> <operator pos:start="135:26" pos:end="135:26">=</operator> <name pos:start="135:28" pos:end="135:31">size</name> <operator pos:start="135:33" pos:end="135:33">/</operator> <name pos:start="135:35" pos:end="135:50"><name pos:start="135:35" pos:end="135:37">trk</name><operator pos:start="135:38" pos:end="135:39">-&gt;</operator><name pos:start="135:40" pos:end="135:50">sample_size</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="137:5" pos:end="139:29">else<block type="pseudo" pos:start="139:9" pos:end="139:29"><block_content pos:start="139:9" pos:end="139:29">

        <expr_stmt pos:start="139:9" pos:end="139:29"><expr pos:start="139:9" pos:end="139:28"><name pos:start="139:9" pos:end="139:24">samples_in_chunk</name> <operator pos:start="139:26" pos:end="139:26">=</operator> <literal type="number" pos:start="139:28" pos:end="139:28">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="143:5" pos:end="143:37">/* copy extradata if it exists */</comment>

    <if_stmt pos:start="145:5" pos:end="165:5"><if pos:start="145:5" pos:end="165:5">if <condition pos:start="145:8" pos:end="149:45">(<expr pos:start="145:9" pos:end="149:44"><name pos:start="145:9" pos:end="145:20"><name pos:start="145:9" pos:end="145:11">trk</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:20">vos_len</name></name> <operator pos:start="145:22" pos:end="145:23">==</operator> <literal type="number" pos:start="145:25" pos:end="145:25">0</literal> <operator pos:start="145:27" pos:end="145:28">&amp;&amp;</operator> <name pos:start="145:30" pos:end="145:48"><name pos:start="145:30" pos:end="145:32">enc</name><operator pos:start="145:33" pos:end="145:34">-&gt;</operator><name pos:start="145:35" pos:end="145:48">extradata_size</name></name> <operator pos:start="145:50" pos:end="145:50">&gt;</operator> <literal type="number" pos:start="145:52" pos:end="145:52">0</literal> <operator pos:start="145:54" pos:end="145:55">&amp;&amp;</operator>

        <operator pos:start="147:9" pos:end="147:9">!</operator><call pos:start="147:10" pos:end="147:30"><name pos:start="147:10" pos:end="147:20">TAG_IS_AVCI</name><argument_list pos:start="147:21" pos:end="147:30">(<argument pos:start="147:22" pos:end="147:29"><expr pos:start="147:22" pos:end="147:29"><name pos:start="147:22" pos:end="147:29"><name pos:start="147:22" pos:end="147:24">trk</name><operator pos:start="147:25" pos:end="147:26">-&gt;</operator><name pos:start="147:27" pos:end="147:29">tag</name></name></expr></argument>)</argument_list></call> <operator pos:start="147:32" pos:end="147:33">&amp;&amp;</operator>

        <operator pos:start="149:9" pos:end="149:9">(</operator><name pos:start="149:10" pos:end="149:22"><name pos:start="149:10" pos:end="149:12">enc</name><operator pos:start="149:13" pos:end="149:14">-&gt;</operator><name pos:start="149:15" pos:end="149:22">codec_id</name></name> <operator pos:start="149:24" pos:end="149:25">!=</operator> <name pos:start="149:27" pos:end="149:43">AV_CODEC_ID_DNXHD</name><operator pos:start="149:44" pos:end="149:44">)</operator></expr>)</condition> <block pos:start="149:47" pos:end="165:5">{<block_content pos:start="151:9" pos:end="163:60">

        <expr_stmt pos:start="151:9" pos:end="151:44"><expr pos:start="151:9" pos:end="151:43"><name pos:start="151:9" pos:end="151:20"><name pos:start="151:9" pos:end="151:11">trk</name><operator pos:start="151:12" pos:end="151:13">-&gt;</operator><name pos:start="151:14" pos:end="151:20">vos_len</name></name>  <operator pos:start="151:23" pos:end="151:23">=</operator> <name pos:start="151:25" pos:end="151:43"><name pos:start="151:25" pos:end="151:27">enc</name><operator pos:start="151:28" pos:end="151:29">-&gt;</operator><name pos:start="151:30" pos:end="151:43">extradata_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:48"><expr pos:start="153:9" pos:end="153:47"><name pos:start="153:9" pos:end="153:21"><name pos:start="153:9" pos:end="153:11">trk</name><operator pos:start="153:12" pos:end="153:13">-&gt;</operator><name pos:start="153:14" pos:end="153:21">vos_data</name></name> <operator pos:start="153:23" pos:end="153:23">=</operator> <call pos:start="153:25" pos:end="153:47"><name pos:start="153:25" pos:end="153:33">av_malloc</name><argument_list pos:start="153:34" pos:end="153:47">(<argument pos:start="153:35" pos:end="153:46"><expr pos:start="153:35" pos:end="153:46"><name pos:start="153:35" pos:end="153:46"><name pos:start="153:35" pos:end="153:37">trk</name><operator pos:start="153:38" pos:end="153:39">-&gt;</operator><name pos:start="153:40" pos:end="153:46">vos_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="155:9" pos:end="161:9"><if pos:start="155:9" pos:end="161:9">if <condition pos:start="155:12" pos:end="155:27">(<expr pos:start="155:13" pos:end="155:26"><operator pos:start="155:13" pos:end="155:13">!</operator><name pos:start="155:14" pos:end="155:26"><name pos:start="155:14" pos:end="155:16">trk</name><operator pos:start="155:17" pos:end="155:18">-&gt;</operator><name pos:start="155:19" pos:end="155:26">vos_data</name></name></expr>)</condition> <block pos:start="155:29" pos:end="161:9">{<block_content pos:start="157:13" pos:end="159:21">

            <expr_stmt pos:start="157:13" pos:end="157:34"><expr pos:start="157:13" pos:end="157:33"><name pos:start="157:13" pos:end="157:15">ret</name> <operator pos:start="157:17" pos:end="157:17">=</operator> <call pos:start="157:19" pos:end="157:33"><name pos:start="157:19" pos:end="157:25">AVERROR</name><argument_list pos:start="157:26" pos:end="157:33">(<argument pos:start="157:27" pos:end="157:32"><expr pos:start="157:27" pos:end="157:32"><name pos:start="157:27" pos:end="157:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="159:13" pos:end="159:21">goto <name pos:start="159:18" pos:end="159:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:60"><expr pos:start="163:9" pos:end="163:59"><call pos:start="163:9" pos:end="163:59"><name pos:start="163:9" pos:end="163:14">memcpy</name><argument_list pos:start="163:15" pos:end="163:59">(<argument pos:start="163:16" pos:end="163:28"><expr pos:start="163:16" pos:end="163:28"><name pos:start="163:16" pos:end="163:28"><name pos:start="163:16" pos:end="163:18">trk</name><operator pos:start="163:19" pos:end="163:20">-&gt;</operator><name pos:start="163:21" pos:end="163:28">vos_data</name></name></expr></argument>, <argument pos:start="163:31" pos:end="163:44"><expr pos:start="163:31" pos:end="163:44"><name pos:start="163:31" pos:end="163:44"><name pos:start="163:31" pos:end="163:33">enc</name><operator pos:start="163:34" pos:end="163:35">-&gt;</operator><name pos:start="163:36" pos:end="163:44">extradata</name></name></expr></argument>, <argument pos:start="163:47" pos:end="163:58"><expr pos:start="163:47" pos:end="163:58"><name pos:start="163:47" pos:end="163:58"><name pos:start="163:47" pos:end="163:49">trk</name><operator pos:start="163:50" pos:end="163:51">-&gt;</operator><name pos:start="163:52" pos:end="163:58">vos_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="169:5" pos:end="187:5"><if pos:start="169:5" pos:end="187:5">if <condition pos:start="169:8" pos:end="171:48">(<expr pos:start="169:9" pos:end="171:47"><name pos:start="169:9" pos:end="169:21"><name pos:start="169:9" pos:end="169:11">enc</name><operator pos:start="169:12" pos:end="169:13">-&gt;</operator><name pos:start="169:14" pos:end="169:21">codec_id</name></name> <operator pos:start="169:23" pos:end="169:24">==</operator> <name pos:start="169:26" pos:end="169:40">AV_CODEC_ID_AAC</name> <operator pos:start="169:42" pos:end="169:43">&amp;&amp;</operator> <name pos:start="169:45" pos:end="169:53"><name pos:start="169:45" pos:end="169:47">pkt</name><operator pos:start="169:48" pos:end="169:49">-&gt;</operator><name pos:start="169:50" pos:end="169:53">size</name></name> <operator pos:start="169:55" pos:end="169:55">&gt;</operator> <literal type="number" pos:start="169:57" pos:end="169:57">2</literal> <operator pos:start="169:59" pos:end="169:60">&amp;&amp;</operator>

        <operator pos:start="171:9" pos:end="171:9">(</operator><call pos:start="171:10" pos:end="171:27"><name pos:start="171:10" pos:end="171:16">AV_RB16</name><argument_list pos:start="171:17" pos:end="171:27">(<argument pos:start="171:18" pos:end="171:26"><expr pos:start="171:18" pos:end="171:26"><name pos:start="171:18" pos:end="171:26"><name pos:start="171:18" pos:end="171:20">pkt</name><operator pos:start="171:21" pos:end="171:22">-&gt;</operator><name pos:start="171:23" pos:end="171:26">data</name></name></expr></argument>)</argument_list></call> <operator pos:start="171:29" pos:end="171:29">&amp;</operator> <literal type="number" pos:start="171:31" pos:end="171:36">0xfff0</literal><operator pos:start="171:37" pos:end="171:37">)</operator> <operator pos:start="171:39" pos:end="171:40">==</operator> <literal type="number" pos:start="171:42" pos:end="171:47">0xfff0</literal></expr>)</condition> <block pos:start="171:50" pos:end="187:5">{<block_content pos:start="173:9" pos:end="185:59">

        <if_stmt pos:start="173:9" pos:end="183:9"><if pos:start="173:9" pos:end="183:9">if <condition pos:start="173:12" pos:end="173:54">(<expr pos:start="173:13" pos:end="173:53"><operator pos:start="173:13" pos:end="173:13">!</operator><name pos:start="173:14" pos:end="173:42"><name pos:start="173:14" pos:end="173:14">s</name><operator pos:start="173:15" pos:end="173:16">-&gt;</operator><name pos:start="173:17" pos:end="173:23">streams</name><index pos:start="173:24" pos:end="173:42">[<expr pos:start="173:25" pos:end="173:41"><name pos:start="173:25" pos:end="173:41"><name pos:start="173:25" pos:end="173:27">pkt</name><operator pos:start="173:28" pos:end="173:29">-&gt;</operator><name pos:start="173:30" pos:end="173:41">stream_index</name></name></expr>]</index></name><operator pos:start="173:43" pos:end="173:44">-&gt;</operator><name pos:start="173:45" pos:end="173:53">nb_frames</name></expr>)</condition> <block pos:start="173:56" pos:end="183:9">{<block_content pos:start="175:13" pos:end="181:22">

            <expr_stmt pos:start="175:13" pos:end="179:68"><expr pos:start="175:13" pos:end="179:67"><call pos:start="175:13" pos:end="179:67"><name pos:start="175:13" pos:end="175:18">av_log</name><argument_list pos:start="175:19" pos:end="179:67">(<argument pos:start="175:20" pos:end="175:20"><expr pos:start="175:20" pos:end="175:20"><name pos:start="175:20" pos:end="175:20">s</name></expr></argument>, <argument pos:start="175:23" pos:end="175:34"><expr pos:start="175:23" pos:end="175:34"><name pos:start="175:23" pos:end="175:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="175:37" pos:end="179:66"><expr pos:start="175:37" pos:end="179:66"><literal type="string" pos:start="175:37" pos:end="175:72">"Malformed AAC bitstream detected: "</literal>

                   <literal type="string" pos:start="177:20" pos:end="177:78">"use the audio bitstream filter 'aac_adtstoasc' to fix it "</literal>

                   <literal type="string" pos:start="179:20" pos:end="179:66">"('-bsf:a aac_adtstoasc' option with ffmpeg)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="181:13" pos:end="181:22">return <expr pos:start="181:20" pos:end="181:21"><operator pos:start="181:20" pos:end="181:20">-</operator><literal type="number" pos:start="181:21" pos:end="181:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:59"><expr pos:start="185:9" pos:end="185:58"><call pos:start="185:9" pos:end="185:58"><name pos:start="185:9" pos:end="185:14">av_log</name><argument_list pos:start="185:15" pos:end="185:58">(<argument pos:start="185:16" pos:end="185:16"><expr pos:start="185:16" pos:end="185:16"><name pos:start="185:16" pos:end="185:16">s</name></expr></argument>, <argument pos:start="185:19" pos:end="185:32"><expr pos:start="185:19" pos:end="185:32"><name pos:start="185:19" pos:end="185:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="185:35" pos:end="185:57"><expr pos:start="185:35" pos:end="185:57"><literal type="string" pos:start="185:35" pos:end="185:57">"aac bitstream error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="189:5" pos:end="291:5"><if pos:start="189:5" pos:end="225:5">if <condition pos:start="189:8" pos:end="189:122">(<expr pos:start="189:9" pos:end="189:121"><name pos:start="189:9" pos:end="189:21"><name pos:start="189:9" pos:end="189:11">enc</name><operator pos:start="189:12" pos:end="189:13">-&gt;</operator><name pos:start="189:14" pos:end="189:21">codec_id</name></name> <operator pos:start="189:23" pos:end="189:24">==</operator> <name pos:start="189:26" pos:end="189:41">AV_CODEC_ID_H264</name> <operator pos:start="189:43" pos:end="189:44">&amp;&amp;</operator> <name pos:start="189:46" pos:end="189:57"><name pos:start="189:46" pos:end="189:48">trk</name><operator pos:start="189:49" pos:end="189:50">-&gt;</operator><name pos:start="189:51" pos:end="189:57">vos_len</name></name> <operator pos:start="189:59" pos:end="189:59">&gt;</operator> <literal type="number" pos:start="189:61" pos:end="189:61">0</literal> <operator pos:start="189:63" pos:end="189:64">&amp;&amp;</operator> <operator pos:start="189:66" pos:end="189:66">*</operator><operator pos:start="189:67" pos:end="189:67">(</operator><name pos:start="189:68" pos:end="189:74">uint8_t</name> <operator pos:start="189:76" pos:end="189:76">*</operator><operator pos:start="189:77" pos:end="189:77">)</operator><name pos:start="189:78" pos:end="189:90"><name pos:start="189:78" pos:end="189:80">trk</name><operator pos:start="189:81" pos:end="189:82">-&gt;</operator><name pos:start="189:83" pos:end="189:90">vos_data</name></name> <operator pos:start="189:92" pos:end="189:93">!=</operator> <literal type="number" pos:start="189:95" pos:end="189:95">1</literal> <operator pos:start="189:97" pos:end="189:98">&amp;&amp;</operator> <operator pos:start="189:100" pos:end="189:100">!</operator><call pos:start="189:101" pos:end="189:121"><name pos:start="189:101" pos:end="189:111">TAG_IS_AVCI</name><argument_list pos:start="189:112" pos:end="189:121">(<argument pos:start="189:113" pos:end="189:120"><expr pos:start="189:113" pos:end="189:120"><name pos:start="189:113" pos:end="189:120"><name pos:start="189:113" pos:end="189:115">trk</name><operator pos:start="189:116" pos:end="189:117">-&gt;</operator><name pos:start="189:118" pos:end="189:120">tag</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="189:124" pos:end="225:5">{<block_content pos:start="195:9" pos:end="223:9">

        <comment type="block" pos:start="191:9" pos:end="191:47">/* from x264 or from bytestream h264 */</comment>

        <comment type="block" pos:start="193:9" pos:end="193:36">/* nal reformating needed */</comment>

        <if_stmt pos:start="195:9" pos:end="223:9"><if pos:start="195:9" pos:end="203:9">if <condition pos:start="195:12" pos:end="195:70">(<expr pos:start="195:13" pos:end="195:69"><name pos:start="195:13" pos:end="195:27"><name pos:start="195:13" pos:end="195:15">trk</name><operator pos:start="195:16" pos:end="195:17">-&gt;</operator><name pos:start="195:18" pos:end="195:27">hint_track</name></name> <operator pos:start="195:29" pos:end="195:30">&gt;=</operator> <literal type="number" pos:start="195:32" pos:end="195:32">0</literal> <operator pos:start="195:34" pos:end="195:35">&amp;&amp;</operator> <name pos:start="195:37" pos:end="195:51"><name pos:start="195:37" pos:end="195:39">trk</name><operator pos:start="195:40" pos:end="195:41">-&gt;</operator><name pos:start="195:42" pos:end="195:51">hint_track</name></name> <operator pos:start="195:53" pos:end="195:53">&lt;</operator> <name pos:start="195:55" pos:end="195:69"><name pos:start="195:55" pos:end="195:57">mov</name><operator pos:start="195:58" pos:end="195:59">-&gt;</operator><name pos:start="195:60" pos:end="195:69">nb_streams</name></name></expr>)</condition> <block pos:start="195:72" pos:end="203:9">{<block_content pos:start="197:13" pos:end="201:51">

            <expr_stmt pos:start="197:13" pos:end="199:46"><expr pos:start="197:13" pos:end="199:45"><call pos:start="197:13" pos:end="199:45"><name pos:start="197:13" pos:end="197:38">ff_avc_parse_nal_units_buf</name><argument_list pos:start="197:39" pos:end="199:45">(<argument pos:start="197:40" pos:end="197:48"><expr pos:start="197:40" pos:end="197:48"><name pos:start="197:40" pos:end="197:48"><name pos:start="197:40" pos:end="197:42">pkt</name><operator pos:start="197:43" pos:end="197:44">-&gt;</operator><name pos:start="197:45" pos:end="197:48">data</name></name></expr></argument>, <argument pos:start="197:51" pos:end="197:67"><expr pos:start="197:51" pos:end="197:67"><operator pos:start="197:51" pos:end="197:51">&amp;</operator><name pos:start="197:52" pos:end="197:67">reformatted_data</name></expr></argument>,

                                       <argument pos:start="199:40" pos:end="199:44"><expr pos:start="199:40" pos:end="199:44"><operator pos:start="199:40" pos:end="199:40">&amp;</operator><name pos:start="199:41" pos:end="199:44">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:51"><expr pos:start="201:13" pos:end="201:50"><call pos:start="201:13" pos:end="201:50"><name pos:start="201:13" pos:end="201:22">avio_write</name><argument_list pos:start="201:23" pos:end="201:50">(<argument pos:start="201:24" pos:end="201:25"><expr pos:start="201:24" pos:end="201:25"><name pos:start="201:24" pos:end="201:25">pb</name></expr></argument>, <argument pos:start="201:28" pos:end="201:43"><expr pos:start="201:28" pos:end="201:43"><name pos:start="201:28" pos:end="201:43">reformatted_data</name></expr></argument>, <argument pos:start="201:46" pos:end="201:49"><expr pos:start="201:46" pos:end="201:49"><name pos:start="201:46" pos:end="201:49">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="203:11" pos:end="223:9">else <block pos:start="203:16" pos:end="223:9">{<block_content pos:start="205:13" pos:end="221:13">

            <if_stmt pos:start="205:13" pos:end="221:13"><if pos:start="205:13" pos:end="217:13">if <condition pos:start="205:16" pos:end="205:63">(<expr pos:start="205:17" pos:end="205:62"><name pos:start="205:17" pos:end="205:38"><name pos:start="205:17" pos:end="205:19">mov</name><operator pos:start="205:20" pos:end="205:21">-&gt;</operator><name pos:start="205:22" pos:end="205:38">encryption_scheme</name></name> <operator pos:start="205:40" pos:end="205:41">==</operator> <name pos:start="205:43" pos:end="205:62">MOV_ENC_CENC_AES_CTR</name></expr>)</condition> <block pos:start="205:65" pos:end="217:13">{<block_content pos:start="207:17" pos:end="215:17">

                <expr_stmt pos:start="207:17" pos:end="207:88"><expr pos:start="207:17" pos:end="207:87"><name pos:start="207:17" pos:end="207:20">size</name> <operator pos:start="207:22" pos:end="207:22">=</operator> <call pos:start="207:24" pos:end="207:87"><name pos:start="207:24" pos:end="207:54">ff_mov_cenc_avc_parse_nal_units</name><argument_list pos:start="207:55" pos:end="207:87">(<argument pos:start="207:56" pos:end="207:65"><expr pos:start="207:56" pos:end="207:65"><operator pos:start="207:56" pos:end="207:56">&amp;</operator><name pos:start="207:57" pos:end="207:65"><name pos:start="207:57" pos:end="207:59">trk</name><operator pos:start="207:60" pos:end="207:61">-&gt;</operator><name pos:start="207:62" pos:end="207:65">cenc</name></name></expr></argument>, <argument pos:start="207:68" pos:end="207:69"><expr pos:start="207:68" pos:end="207:69"><name pos:start="207:68" pos:end="207:69">pb</name></expr></argument>, <argument pos:start="207:72" pos:end="207:80"><expr pos:start="207:72" pos:end="207:80"><name pos:start="207:72" pos:end="207:80"><name pos:start="207:72" pos:end="207:74">pkt</name><operator pos:start="207:75" pos:end="207:76">-&gt;</operator><name pos:start="207:77" pos:end="207:80">data</name></name></expr></argument>, <argument pos:start="207:83" pos:end="207:86"><expr pos:start="207:83" pos:end="207:86"><name pos:start="207:83" pos:end="207:86">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="209:17" pos:end="215:17"><if pos:start="209:17" pos:end="215:17">if <condition pos:start="209:20" pos:end="209:29">(<expr pos:start="209:21" pos:end="209:28"><name pos:start="209:21" pos:end="209:24">size</name> <operator pos:start="209:26" pos:end="209:26">&lt;</operator> <literal type="number" pos:start="209:28" pos:end="209:28">0</literal></expr>)</condition> <block pos:start="209:31" pos:end="215:17">{<block_content pos:start="211:21" pos:end="213:29">

                    <expr_stmt pos:start="211:21" pos:end="211:31"><expr pos:start="211:21" pos:end="211:30"><name pos:start="211:21" pos:end="211:23">ret</name> <operator pos:start="211:25" pos:end="211:25">=</operator> <name pos:start="211:27" pos:end="211:30">size</name></expr>;</expr_stmt>

                    <goto pos:start="213:21" pos:end="213:29">goto <name pos:start="213:26" pos:end="213:28">err</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="217:15" pos:end="221:13">else <block pos:start="217:20" pos:end="221:13">{<block_content pos:start="219:17" pos:end="219:72">

                <expr_stmt pos:start="219:17" pos:end="219:72"><expr pos:start="219:17" pos:end="219:71"><name pos:start="219:17" pos:end="219:20">size</name> <operator pos:start="219:22" pos:end="219:22">=</operator> <call pos:start="219:24" pos:end="219:71"><name pos:start="219:24" pos:end="219:45">ff_avc_parse_nal_units</name><argument_list pos:start="219:46" pos:end="219:71">(<argument pos:start="219:47" pos:end="219:48"><expr pos:start="219:47" pos:end="219:48"><name pos:start="219:47" pos:end="219:48">pb</name></expr></argument>, <argument pos:start="219:51" pos:end="219:59"><expr pos:start="219:51" pos:end="219:59"><name pos:start="219:51" pos:end="219:59"><name pos:start="219:51" pos:end="219:53">pkt</name><operator pos:start="219:54" pos:end="219:55">-&gt;</operator><name pos:start="219:56" pos:end="219:59">data</name></name></expr></argument>, <argument pos:start="219:62" pos:end="219:70"><expr pos:start="219:62" pos:end="219:70"><name pos:start="219:62" pos:end="219:70"><name pos:start="219:62" pos:end="219:64">pkt</name><operator pos:start="219:65" pos:end="219:66">-&gt;</operator><name pos:start="219:67" pos:end="219:70">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="225:7" pos:end="245:5">else if <condition pos:start="225:15" pos:end="227:76">(<expr pos:start="225:16" pos:end="227:75"><name pos:start="225:16" pos:end="225:28"><name pos:start="225:16" pos:end="225:18">enc</name><operator pos:start="225:19" pos:end="225:20">-&gt;</operator><name pos:start="225:21" pos:end="225:28">codec_id</name></name> <operator pos:start="225:30" pos:end="225:31">==</operator> <name pos:start="225:33" pos:end="225:48">AV_CODEC_ID_HEVC</name> <operator pos:start="225:50" pos:end="225:51">&amp;&amp;</operator> <name pos:start="225:53" pos:end="225:64"><name pos:start="225:53" pos:end="225:55">trk</name><operator pos:start="225:56" pos:end="225:57">-&gt;</operator><name pos:start="225:58" pos:end="225:64">vos_len</name></name> <operator pos:start="225:66" pos:end="225:66">&gt;</operator> <literal type="number" pos:start="225:68" pos:end="225:68">6</literal> <operator pos:start="225:70" pos:end="225:71">&amp;&amp;</operator>

               <operator pos:start="227:16" pos:end="227:16">(</operator><call pos:start="227:17" pos:end="227:38"><name pos:start="227:17" pos:end="227:23">AV_RB24</name><argument_list pos:start="227:24" pos:end="227:38">(<argument pos:start="227:25" pos:end="227:37"><expr pos:start="227:25" pos:end="227:37"><name pos:start="227:25" pos:end="227:37"><name pos:start="227:25" pos:end="227:27">trk</name><operator pos:start="227:28" pos:end="227:29">-&gt;</operator><name pos:start="227:30" pos:end="227:37">vos_data</name></name></expr></argument>)</argument_list></call> <operator pos:start="227:40" pos:end="227:41">==</operator> <literal type="number" pos:start="227:43" pos:end="227:43">1</literal> <operator pos:start="227:45" pos:end="227:46">||</operator> <call pos:start="227:48" pos:end="227:69"><name pos:start="227:48" pos:end="227:54">AV_RB32</name><argument_list pos:start="227:55" pos:end="227:69">(<argument pos:start="227:56" pos:end="227:68"><expr pos:start="227:56" pos:end="227:68"><name pos:start="227:56" pos:end="227:68"><name pos:start="227:56" pos:end="227:58">trk</name><operator pos:start="227:59" pos:end="227:60">-&gt;</operator><name pos:start="227:61" pos:end="227:68">vos_data</name></name></expr></argument>)</argument_list></call> <operator pos:start="227:71" pos:end="227:72">==</operator> <literal type="number" pos:start="227:74" pos:end="227:74">1</literal><operator pos:start="227:75" pos:end="227:75">)</operator></expr>)</condition> <block pos:start="227:78" pos:end="245:5">{<block_content pos:start="231:9" pos:end="244:0">

        <comment type="block" pos:start="229:9" pos:end="229:78">/* extradata is Annex B, assume the bitstream is too and convert it */</comment>

        <if_stmt pos:start="231:9" pos:end="244:0"><if pos:start="231:9" pos:end="237:9">if <condition pos:start="231:12" pos:end="231:70">(<expr pos:start="231:13" pos:end="231:69"><name pos:start="231:13" pos:end="231:27"><name pos:start="231:13" pos:end="231:15">trk</name><operator pos:start="231:16" pos:end="231:17">-&gt;</operator><name pos:start="231:18" pos:end="231:27">hint_track</name></name> <operator pos:start="231:29" pos:end="231:30">&gt;=</operator> <literal type="number" pos:start="231:32" pos:end="231:32">0</literal> <operator pos:start="231:34" pos:end="231:35">&amp;&amp;</operator> <name pos:start="231:37" pos:end="231:51"><name pos:start="231:37" pos:end="231:39">trk</name><operator pos:start="231:40" pos:end="231:41">-&gt;</operator><name pos:start="231:42" pos:end="231:51">hint_track</name></name> <operator pos:start="231:53" pos:end="231:53">&lt;</operator> <name pos:start="231:55" pos:end="231:69"><name pos:start="231:55" pos:end="231:57">mov</name><operator pos:start="231:58" pos:end="231:59">-&gt;</operator><name pos:start="231:60" pos:end="231:69">nb_streams</name></name></expr>)</condition> <block pos:start="231:72" pos:end="237:9">{<block_content pos:start="233:13" pos:end="235:51">

            <expr_stmt pos:start="233:13" pos:end="233:81"><expr pos:start="233:13" pos:end="233:80"><call pos:start="233:13" pos:end="233:80"><name pos:start="233:13" pos:end="233:34">ff_hevc_annexb2mp4_buf</name><argument_list pos:start="233:35" pos:end="233:80">(<argument pos:start="233:36" pos:end="233:44"><expr pos:start="233:36" pos:end="233:44"><name pos:start="233:36" pos:end="233:44"><name pos:start="233:36" pos:end="233:38">pkt</name><operator pos:start="233:39" pos:end="233:40">-&gt;</operator><name pos:start="233:41" pos:end="233:44">data</name></name></expr></argument>, <argument pos:start="233:47" pos:end="233:63"><expr pos:start="233:47" pos:end="233:63"><operator pos:start="233:47" pos:end="233:47">&amp;</operator><name pos:start="233:48" pos:end="233:63">reformatted_data</name></expr></argument>, <argument pos:start="233:66" pos:end="233:70"><expr pos:start="233:66" pos:end="233:70"><operator pos:start="233:66" pos:end="233:66">&amp;</operator><name pos:start="233:67" pos:end="233:70">size</name></expr></argument>, <argument pos:start="233:73" pos:end="233:73"><expr pos:start="233:73" pos:end="233:73"><literal type="number" pos:start="233:73" pos:end="233:73">0</literal></expr></argument>, <argument pos:start="233:76" pos:end="233:79"><expr pos:start="233:76" pos:end="233:79"><name pos:start="233:76" pos:end="233:79">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:51"><expr pos:start="235:13" pos:end="235:50"><call pos:start="235:13" pos:end="235:50"><name pos:start="235:13" pos:end="235:22">avio_write</name><argument_list pos:start="235:23" pos:end="235:50">(<argument pos:start="235:24" pos:end="235:25"><expr pos:start="235:24" pos:end="235:25"><name pos:start="235:24" pos:end="235:25">pb</name></expr></argument>, <argument pos:start="235:28" pos:end="235:43"><expr pos:start="235:28" pos:end="235:43"><name pos:start="235:28" pos:end="235:43">reformatted_data</name></expr></argument>, <argument pos:start="235:46" pos:end="235:49"><expr pos:start="235:46" pos:end="235:49"><name pos:start="235:46" pos:end="235:49">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="237:11" pos:end="244:0">else <block pos:start="237:16" pos:end="244:0">{<block_content pos:start="239:13" pos:end="239:73">

            <expr_stmt pos:start="239:13" pos:end="239:73"><expr pos:start="239:13" pos:end="239:72"><name pos:start="239:13" pos:end="239:16">size</name> <operator pos:start="239:18" pos:end="239:18">=</operator> <call pos:start="239:20" pos:end="239:72"><name pos:start="239:20" pos:end="239:37">ff_hevc_annexb2mp4</name><argument_list pos:start="239:38" pos:end="239:72">(<argument pos:start="239:39" pos:end="239:40"><expr pos:start="239:39" pos:end="239:40"><name pos:start="239:39" pos:end="239:40">pb</name></expr></argument>, <argument pos:start="239:43" pos:end="239:51"><expr pos:start="239:43" pos:end="239:51"><name pos:start="239:43" pos:end="239:51"><name pos:start="239:43" pos:end="239:45">pkt</name><operator pos:start="239:46" pos:end="239:47">-&gt;</operator><name pos:start="239:48" pos:end="239:51">data</name></name></expr></argument>, <argument pos:start="239:54" pos:end="239:62"><expr pos:start="239:54" pos:end="239:62"><name pos:start="239:54" pos:end="239:62"><name pos:start="239:54" pos:end="239:56">pkt</name><operator pos:start="239:57" pos:end="239:58">-&gt;</operator><name pos:start="239:59" pos:end="239:62">size</name></name></expr></argument>, <argument pos:start="239:65" pos:end="239:65"><expr pos:start="239:65" pos:end="239:65"><literal type="number" pos:start="239:65" pos:end="239:65">0</literal></expr></argument>, <argument pos:start="239:68" pos:end="239:71"><expr pos:start="239:68" pos:end="239:71"><name pos:start="239:68" pos:end="239:71">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

<cpp:if pos:start="243:1" pos:end="243:21">#<cpp:directive pos:start="243:2" pos:end="243:3">if</cpp:directive> <expr pos:start="243:5" pos:end="243:21"><name pos:start="243:5" pos:end="243:21">CONFIG_AC3_PARSER</name></expr></cpp:if>

    </block_content>}</block></if> <if type="elseif" pos:start="245:7" pos:end="261:5">else if <condition pos:start="245:15" pos:end="245:49">(<expr pos:start="245:16" pos:end="245:48"><name pos:start="245:16" pos:end="245:28"><name pos:start="245:16" pos:end="245:18">enc</name><operator pos:start="245:19" pos:end="245:20">-&gt;</operator><name pos:start="245:21" pos:end="245:28">codec_id</name></name> <operator pos:start="245:30" pos:end="245:31">==</operator> <name pos:start="245:33" pos:end="245:48">AV_CODEC_ID_EAC3</name></expr>)</condition> <block pos:start="245:51" pos:end="261:5">{<block_content pos:start="247:9" pos:end="260:0">

        <expr_stmt pos:start="247:9" pos:end="247:42"><expr pos:start="247:9" pos:end="247:41"><name pos:start="247:9" pos:end="247:12">size</name> <operator pos:start="247:14" pos:end="247:14">=</operator> <call pos:start="247:16" pos:end="247:41"><name pos:start="247:16" pos:end="247:26">handle_eac3</name><argument_list pos:start="247:27" pos:end="247:41">(<argument pos:start="247:28" pos:end="247:30"><expr pos:start="247:28" pos:end="247:30"><name pos:start="247:28" pos:end="247:30">mov</name></expr></argument>, <argument pos:start="247:33" pos:end="247:35"><expr pos:start="247:33" pos:end="247:35"><name pos:start="247:33" pos:end="247:35">pkt</name></expr></argument>, <argument pos:start="247:38" pos:end="247:40"><expr pos:start="247:38" pos:end="247:40"><name pos:start="247:38" pos:end="247:40">trk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="249:9" pos:end="255:21"><if pos:start="249:9" pos:end="251:24">if <condition pos:start="249:12" pos:end="249:21">(<expr pos:start="249:13" pos:end="249:20"><name pos:start="249:13" pos:end="249:16">size</name> <operator pos:start="249:18" pos:end="249:18">&lt;</operator> <literal type="number" pos:start="249:20" pos:end="249:20">0</literal></expr>)</condition><block type="pseudo" pos:start="251:13" pos:end="251:24"><block_content pos:start="251:13" pos:end="251:24">

            <return pos:start="251:13" pos:end="251:24">return <expr pos:start="251:20" pos:end="251:23"><name pos:start="251:20" pos:end="251:23">size</name></expr>;</return></block_content></block></if>

        <if type="elseif" pos:start="253:9" pos:end="255:21">else if <condition pos:start="253:17" pos:end="253:23">(<expr pos:start="253:18" pos:end="253:22"><operator pos:start="253:18" pos:end="253:18">!</operator><name pos:start="253:19" pos:end="253:22">size</name></expr>)</condition><block type="pseudo" pos:start="255:13" pos:end="255:21"><block_content pos:start="255:13" pos:end="255:21">

            <goto pos:start="255:13" pos:end="255:21">goto <name pos:start="255:18" pos:end="255:20">end</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="257:9" pos:end="260:0"><expr pos:start="257:9" pos:end="257:39"><call pos:start="257:9" pos:end="257:39"><name pos:start="257:9" pos:end="257:18">avio_write</name><argument_list pos:start="257:19" pos:end="257:39">(<argument pos:start="257:20" pos:end="257:21"><expr pos:start="257:20" pos:end="257:21"><name pos:start="257:20" pos:end="257:21">pb</name></expr></argument>, <argument pos:start="257:24" pos:end="257:32"><expr pos:start="257:24" pos:end="257:32"><name pos:start="257:24" pos:end="257:32"><name pos:start="257:24" pos:end="257:26">pkt</name><operator pos:start="257:27" pos:end="257:28">-&gt;</operator><name pos:start="257:29" pos:end="257:32">data</name></name></expr></argument>, <argument pos:start="257:35" pos:end="257:38"><expr pos:start="257:35" pos:end="257:38"><name pos:start="257:35" pos:end="257:38">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="259:1" pos:end="259:6">#<cpp:directive pos:start="259:2" pos:end="259:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if> <else pos:start="261:7" pos:end="291:5">else <block pos:start="261:12" pos:end="291:5">{<block_content pos:start="263:9" pos:end="289:9">

        <if_stmt pos:start="263:9" pos:end="289:9"><if pos:start="263:9" pos:end="285:9">if <condition pos:start="263:12" pos:end="263:59">(<expr pos:start="263:13" pos:end="263:58"><name pos:start="263:13" pos:end="263:34"><name pos:start="263:13" pos:end="263:15">mov</name><operator pos:start="263:16" pos:end="263:17">-&gt;</operator><name pos:start="263:18" pos:end="263:34">encryption_scheme</name></name> <operator pos:start="263:36" pos:end="263:37">==</operator> <name pos:start="263:39" pos:end="263:58">MOV_ENC_CENC_AES_CTR</name></expr>)</condition> <block pos:start="263:61" pos:end="285:9">{<block_content pos:start="265:13" pos:end="283:13">

            <if_stmt pos:start="265:13" pos:end="275:13"><if pos:start="265:13" pos:end="271:13">if <condition pos:start="265:16" pos:end="265:77">(<expr pos:start="265:17" pos:end="265:76"><name pos:start="265:17" pos:end="265:29"><name pos:start="265:17" pos:end="265:19">enc</name><operator pos:start="265:20" pos:end="265:21">-&gt;</operator><name pos:start="265:22" pos:end="265:29">codec_id</name></name> <operator pos:start="265:31" pos:end="265:32">==</operator> <name pos:start="265:34" pos:end="265:49">AV_CODEC_ID_H264</name> <operator pos:start="265:51" pos:end="265:52">&amp;&amp;</operator> <name pos:start="265:54" pos:end="265:72"><name pos:start="265:54" pos:end="265:56">enc</name><operator pos:start="265:57" pos:end="265:58">-&gt;</operator><name pos:start="265:59" pos:end="265:72">extradata_size</name></name> <operator pos:start="265:74" pos:end="265:74">&gt;</operator> <literal type="number" pos:start="265:76" pos:end="265:76">4</literal></expr>)</condition> <block pos:start="265:79" pos:end="271:13">{<block_content pos:start="267:17" pos:end="269:107">

                <decl_stmt pos:start="267:17" pos:end="267:68"><decl pos:start="267:17" pos:end="267:67"><type pos:start="267:17" pos:end="267:19"><name pos:start="267:17" pos:end="267:19">int</name></type> <name pos:start="267:21" pos:end="267:35">nal_size_length</name> <init pos:start="267:37" pos:end="267:67">= <expr pos:start="267:39" pos:end="267:67"><operator pos:start="267:39" pos:end="267:39">(</operator><name pos:start="267:40" pos:end="267:56"><name pos:start="267:40" pos:end="267:42">enc</name><operator pos:start="267:43" pos:end="267:44">-&gt;</operator><name pos:start="267:45" pos:end="267:53">extradata</name><index pos:start="267:54" pos:end="267:56">[<expr pos:start="267:55" pos:end="267:55"><literal type="number" pos:start="267:55" pos:end="267:55">4</literal></expr>]</index></name> <operator pos:start="267:58" pos:end="267:58">&amp;</operator> <literal type="number" pos:start="267:60" pos:end="267:62">0x3</literal><operator pos:start="267:63" pos:end="267:63">)</operator> <operator pos:start="267:65" pos:end="267:65">+</operator> <literal type="number" pos:start="267:67" pos:end="267:67">1</literal></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="269:17" pos:end="269:107"><expr pos:start="269:17" pos:end="269:106"><name pos:start="269:17" pos:end="269:19">ret</name> <operator pos:start="269:21" pos:end="269:21">=</operator> <call pos:start="269:23" pos:end="269:106"><name pos:start="269:23" pos:end="269:53">ff_mov_cenc_avc_write_nal_units</name><argument_list pos:start="269:54" pos:end="269:106">(<argument pos:start="269:55" pos:end="269:55"><expr pos:start="269:55" pos:end="269:55"><name pos:start="269:55" pos:end="269:55">s</name></expr></argument>, <argument pos:start="269:58" pos:end="269:67"><expr pos:start="269:58" pos:end="269:67"><operator pos:start="269:58" pos:end="269:58">&amp;</operator><name pos:start="269:59" pos:end="269:67"><name pos:start="269:59" pos:end="269:61">trk</name><operator pos:start="269:62" pos:end="269:63">-&gt;</operator><name pos:start="269:64" pos:end="269:67">cenc</name></name></expr></argument>, <argument pos:start="269:70" pos:end="269:84"><expr pos:start="269:70" pos:end="269:84"><name pos:start="269:70" pos:end="269:84">nal_size_length</name></expr></argument>, <argument pos:start="269:87" pos:end="269:88"><expr pos:start="269:87" pos:end="269:88"><name pos:start="269:87" pos:end="269:88">pb</name></expr></argument>, <argument pos:start="269:91" pos:end="269:99"><expr pos:start="269:91" pos:end="269:99"><name pos:start="269:91" pos:end="269:99"><name pos:start="269:91" pos:end="269:93">pkt</name><operator pos:start="269:94" pos:end="269:95">-&gt;</operator><name pos:start="269:96" pos:end="269:99">data</name></name></expr></argument>, <argument pos:start="269:102" pos:end="269:105"><expr pos:start="269:102" pos:end="269:105"><name pos:start="269:102" pos:end="269:105">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="271:15" pos:end="275:13">else <block pos:start="271:20" pos:end="275:13">{<block_content pos:start="273:17" pos:end="273:80">

                <expr_stmt pos:start="273:17" pos:end="273:80"><expr pos:start="273:17" pos:end="273:79"><name pos:start="273:17" pos:end="273:19">ret</name> <operator pos:start="273:21" pos:end="273:21">=</operator> <call pos:start="273:23" pos:end="273:79"><name pos:start="273:23" pos:end="273:46">ff_mov_cenc_write_packet</name><argument_list pos:start="273:47" pos:end="273:79">(<argument pos:start="273:48" pos:end="273:57"><expr pos:start="273:48" pos:end="273:57"><operator pos:start="273:48" pos:end="273:48">&amp;</operator><name pos:start="273:49" pos:end="273:57"><name pos:start="273:49" pos:end="273:51">trk</name><operator pos:start="273:52" pos:end="273:53">-&gt;</operator><name pos:start="273:54" pos:end="273:57">cenc</name></name></expr></argument>, <argument pos:start="273:60" pos:end="273:61"><expr pos:start="273:60" pos:end="273:61"><name pos:start="273:60" pos:end="273:61">pb</name></expr></argument>, <argument pos:start="273:64" pos:end="273:72"><expr pos:start="273:64" pos:end="273:72"><name pos:start="273:64" pos:end="273:72"><name pos:start="273:64" pos:end="273:66">pkt</name><operator pos:start="273:67" pos:end="273:68">-&gt;</operator><name pos:start="273:69" pos:end="273:72">data</name></name></expr></argument>, <argument pos:start="273:75" pos:end="273:78"><expr pos:start="273:75" pos:end="273:78"><name pos:start="273:75" pos:end="273:78">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="279:13" pos:end="283:13"><if pos:start="279:13" pos:end="283:13">if <condition pos:start="279:16" pos:end="279:20">(<expr pos:start="279:17" pos:end="279:19"><name pos:start="279:17" pos:end="279:19">ret</name></expr>)</condition> <block pos:start="279:22" pos:end="283:13">{<block_content pos:start="281:17" pos:end="281:25">

                <goto pos:start="281:17" pos:end="281:25">goto <name pos:start="281:22" pos:end="281:24">err</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="285:11" pos:end="289:9">else <block pos:start="285:16" pos:end="289:9">{<block_content pos:start="287:13" pos:end="287:44">

            <expr_stmt pos:start="287:13" pos:end="287:44"><expr pos:start="287:13" pos:end="287:43"><call pos:start="287:13" pos:end="287:43"><name pos:start="287:13" pos:end="287:22">avio_write</name><argument_list pos:start="287:23" pos:end="287:43">(<argument pos:start="287:24" pos:end="287:25"><expr pos:start="287:24" pos:end="287:25"><name pos:start="287:24" pos:end="287:25">pb</name></expr></argument>, <argument pos:start="287:28" pos:end="287:36"><expr pos:start="287:28" pos:end="287:36"><name pos:start="287:28" pos:end="287:36"><name pos:start="287:28" pos:end="287:30">pkt</name><operator pos:start="287:31" pos:end="287:32">-&gt;</operator><name pos:start="287:33" pos:end="287:36">data</name></name></expr></argument>, <argument pos:start="287:39" pos:end="287:42"><expr pos:start="287:39" pos:end="287:42"><name pos:start="287:39" pos:end="287:42">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="295:5" pos:end="315:5"><if pos:start="295:5" pos:end="315:5">if <condition pos:start="295:8" pos:end="297:60">(<expr pos:start="295:9" pos:end="297:59"><operator pos:start="295:9" pos:end="295:9">(</operator><name pos:start="295:10" pos:end="295:22"><name pos:start="295:10" pos:end="295:12">enc</name><operator pos:start="295:13" pos:end="295:14">-&gt;</operator><name pos:start="295:15" pos:end="295:22">codec_id</name></name> <operator pos:start="295:24" pos:end="295:25">==</operator> <name pos:start="295:27" pos:end="295:43">AV_CODEC_ID_DNXHD</name> <operator pos:start="295:45" pos:end="295:46">||</operator>

         <name pos:start="297:10" pos:end="297:22"><name pos:start="297:10" pos:end="297:12">enc</name><operator pos:start="297:13" pos:end="297:14">-&gt;</operator><name pos:start="297:15" pos:end="297:22">codec_id</name></name> <operator pos:start="297:24" pos:end="297:25">==</operator> <name pos:start="297:27" pos:end="297:41">AV_CODEC_ID_AC3</name><operator pos:start="297:42" pos:end="297:42">)</operator> <operator pos:start="297:44" pos:end="297:45">&amp;&amp;</operator> <operator pos:start="297:47" pos:end="297:47">!</operator><name pos:start="297:48" pos:end="297:59"><name pos:start="297:48" pos:end="297:50">trk</name><operator pos:start="297:51" pos:end="297:52">-&gt;</operator><name pos:start="297:53" pos:end="297:59">vos_len</name></name></expr>)</condition> <block pos:start="297:62" pos:end="315:5">{<block_content pos:start="301:9" pos:end="313:47">

        <comment type="block" pos:start="299:9" pos:end="299:47">/* copy frame to create needed atoms */</comment>

        <expr_stmt pos:start="301:9" pos:end="301:29"><expr pos:start="301:9" pos:end="301:28"><name pos:start="301:9" pos:end="301:20"><name pos:start="301:9" pos:end="301:11">trk</name><operator pos:start="301:12" pos:end="301:13">-&gt;</operator><name pos:start="301:14" pos:end="301:20">vos_len</name></name>  <operator pos:start="301:23" pos:end="301:23">=</operator> <name pos:start="301:25" pos:end="301:28">size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="303:9" pos:end="303:40"><expr pos:start="303:9" pos:end="303:39"><name pos:start="303:9" pos:end="303:21"><name pos:start="303:9" pos:end="303:11">trk</name><operator pos:start="303:12" pos:end="303:13">-&gt;</operator><name pos:start="303:14" pos:end="303:21">vos_data</name></name> <operator pos:start="303:23" pos:end="303:23">=</operator> <call pos:start="303:25" pos:end="303:39"><name pos:start="303:25" pos:end="303:33">av_malloc</name><argument_list pos:start="303:34" pos:end="303:39">(<argument pos:start="303:35" pos:end="303:38"><expr pos:start="303:35" pos:end="303:38"><name pos:start="303:35" pos:end="303:38">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="305:9" pos:end="311:9"><if pos:start="305:9" pos:end="311:9">if <condition pos:start="305:12" pos:end="305:27">(<expr pos:start="305:13" pos:end="305:26"><operator pos:start="305:13" pos:end="305:13">!</operator><name pos:start="305:14" pos:end="305:26"><name pos:start="305:14" pos:end="305:16">trk</name><operator pos:start="305:17" pos:end="305:18">-&gt;</operator><name pos:start="305:19" pos:end="305:26">vos_data</name></name></expr>)</condition> <block pos:start="305:29" pos:end="311:9">{<block_content pos:start="307:13" pos:end="309:21">

            <expr_stmt pos:start="307:13" pos:end="307:34"><expr pos:start="307:13" pos:end="307:33"><name pos:start="307:13" pos:end="307:15">ret</name> <operator pos:start="307:17" pos:end="307:17">=</operator> <call pos:start="307:19" pos:end="307:33"><name pos:start="307:19" pos:end="307:25">AVERROR</name><argument_list pos:start="307:26" pos:end="307:33">(<argument pos:start="307:27" pos:end="307:32"><expr pos:start="307:27" pos:end="307:32"><name pos:start="307:27" pos:end="307:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="309:13" pos:end="309:21">goto <name pos:start="309:18" pos:end="309:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="313:9" pos:end="313:47"><expr pos:start="313:9" pos:end="313:46"><call pos:start="313:9" pos:end="313:46"><name pos:start="313:9" pos:end="313:14">memcpy</name><argument_list pos:start="313:15" pos:end="313:46">(<argument pos:start="313:16" pos:end="313:28"><expr pos:start="313:16" pos:end="313:28"><name pos:start="313:16" pos:end="313:28"><name pos:start="313:16" pos:end="313:18">trk</name><operator pos:start="313:19" pos:end="313:20">-&gt;</operator><name pos:start="313:21" pos:end="313:28">vos_data</name></name></expr></argument>, <argument pos:start="313:31" pos:end="313:39"><expr pos:start="313:31" pos:end="313:39"><name pos:start="313:31" pos:end="313:39"><name pos:start="313:31" pos:end="313:33">pkt</name><operator pos:start="313:34" pos:end="313:35">-&gt;</operator><name pos:start="313:36" pos:end="313:39">data</name></name></expr></argument>, <argument pos:start="313:42" pos:end="313:45"><expr pos:start="313:42" pos:end="313:45"><name pos:start="313:42" pos:end="313:45">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="319:5" pos:end="335:5"><if pos:start="319:5" pos:end="335:5">if <condition pos:start="319:8" pos:end="319:44">(<expr pos:start="319:9" pos:end="319:43"><name pos:start="319:9" pos:end="319:18"><name pos:start="319:9" pos:end="319:11">trk</name><operator pos:start="319:12" pos:end="319:13">-&gt;</operator><name pos:start="319:14" pos:end="319:18">entry</name></name> <operator pos:start="319:20" pos:end="319:21">&gt;=</operator> <name pos:start="319:23" pos:end="319:43"><name pos:start="319:23" pos:end="319:25">trk</name><operator pos:start="319:26" pos:end="319:27">-&gt;</operator><name pos:start="319:28" pos:end="319:43">cluster_capacity</name></name></expr>)</condition> <block pos:start="319:46" pos:end="335:5">{<block_content pos:start="321:9" pos:end="333:45">

        <decl_stmt pos:start="321:9" pos:end="321:74"><decl pos:start="321:9" pos:end="321:73"><type pos:start="321:9" pos:end="321:16"><name pos:start="321:9" pos:end="321:16">unsigned</name></type> <name pos:start="321:18" pos:end="321:29">new_capacity</name> <init pos:start="321:31" pos:end="321:73">= <expr pos:start="321:33" pos:end="321:73"><literal type="number" pos:start="321:33" pos:end="321:33">2</literal> <operator pos:start="321:35" pos:end="321:35">*</operator> <operator pos:start="321:37" pos:end="321:37">(</operator><name pos:start="321:38" pos:end="321:47"><name pos:start="321:38" pos:end="321:40">trk</name><operator pos:start="321:41" pos:end="321:42">-&gt;</operator><name pos:start="321:43" pos:end="321:47">entry</name></name> <operator pos:start="321:49" pos:end="321:49">+</operator> <name pos:start="321:51" pos:end="321:72">MOV_INDEX_CLUSTER_SIZE</name><operator pos:start="321:73" pos:end="321:73">)</operator></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="323:9" pos:end="331:9"><if pos:start="323:9" pos:end="331:9">if <condition pos:start="323:12" pos:end="325:53">(<expr pos:start="323:13" pos:end="325:52"><call pos:start="323:13" pos:end="325:52"><name pos:start="323:13" pos:end="323:29">av_reallocp_array</name><argument_list pos:start="323:30" pos:end="325:52">(<argument pos:start="323:31" pos:end="323:43"><expr pos:start="323:31" pos:end="323:43"><operator pos:start="323:31" pos:end="323:31">&amp;</operator><name pos:start="323:32" pos:end="323:43"><name pos:start="323:32" pos:end="323:34">trk</name><operator pos:start="323:35" pos:end="323:36">-&gt;</operator><name pos:start="323:37" pos:end="323:43">cluster</name></name></expr></argument>, <argument pos:start="323:46" pos:end="323:57"><expr pos:start="323:46" pos:end="323:57"><name pos:start="323:46" pos:end="323:57">new_capacity</name></expr></argument>,

                              <argument pos:start="325:31" pos:end="325:51"><expr pos:start="325:31" pos:end="325:51"><sizeof pos:start="325:31" pos:end="325:51">sizeof<argument_list pos:start="325:37" pos:end="325:51">(<argument pos:start="325:38" pos:end="325:50"><expr pos:start="325:38" pos:end="325:50"><operator pos:start="325:38" pos:end="325:38">*</operator><name pos:start="325:39" pos:end="325:50"><name pos:start="325:39" pos:end="325:41">trk</name><operator pos:start="325:42" pos:end="325:43">-&gt;</operator><name pos:start="325:44" pos:end="325:50">cluster</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="325:55" pos:end="331:9">{<block_content pos:start="327:13" pos:end="329:21">

            <expr_stmt pos:start="327:13" pos:end="327:34"><expr pos:start="327:13" pos:end="327:33"><name pos:start="327:13" pos:end="327:15">ret</name> <operator pos:start="327:17" pos:end="327:17">=</operator> <call pos:start="327:19" pos:end="327:33"><name pos:start="327:19" pos:end="327:25">AVERROR</name><argument_list pos:start="327:26" pos:end="327:33">(<argument pos:start="327:27" pos:end="327:32"><expr pos:start="327:27" pos:end="327:32"><name pos:start="327:27" pos:end="327:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="329:13" pos:end="329:21">goto <name pos:start="329:18" pos:end="329:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="333:9" pos:end="333:45"><expr pos:start="333:9" pos:end="333:44"><name pos:start="333:9" pos:end="333:29"><name pos:start="333:9" pos:end="333:11">trk</name><operator pos:start="333:12" pos:end="333:13">-&gt;</operator><name pos:start="333:14" pos:end="333:29">cluster_capacity</name></name> <operator pos:start="333:31" pos:end="333:31">=</operator> <name pos:start="333:33" pos:end="333:44">new_capacity</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="339:5" pos:end="339:69"><expr pos:start="339:5" pos:end="339:68"><name pos:start="339:5" pos:end="339:28"><name pos:start="339:5" pos:end="339:7">trk</name><operator pos:start="339:8" pos:end="339:9">-&gt;</operator><name pos:start="339:10" pos:end="339:16">cluster</name><index pos:start="339:17" pos:end="339:28">[<expr pos:start="339:18" pos:end="339:27"><name pos:start="339:18" pos:end="339:27"><name pos:start="339:18" pos:end="339:20">trk</name><operator pos:start="339:21" pos:end="339:22">-&gt;</operator><name pos:start="339:23" pos:end="339:27">entry</name></name></expr>]</index></name><operator pos:start="339:29" pos:end="339:29">.</operator><name pos:start="339:30" pos:end="339:32">pos</name>              <operator pos:start="339:47" pos:end="339:47">=</operator> <call pos:start="339:49" pos:end="339:61"><name pos:start="339:49" pos:end="339:57">avio_tell</name><argument_list pos:start="339:58" pos:end="339:61">(<argument pos:start="339:59" pos:end="339:60"><expr pos:start="339:59" pos:end="339:60"><name pos:start="339:59" pos:end="339:60">pb</name></expr></argument>)</argument_list></call> <operator pos:start="339:63" pos:end="339:63">-</operator> <name pos:start="339:65" pos:end="339:68">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="341:5" pos:end="341:65"><expr pos:start="341:5" pos:end="341:64"><name pos:start="341:5" pos:end="341:28"><name pos:start="341:5" pos:end="341:7">trk</name><operator pos:start="341:8" pos:end="341:9">-&gt;</operator><name pos:start="341:10" pos:end="341:16">cluster</name><index pos:start="341:17" pos:end="341:28">[<expr pos:start="341:18" pos:end="341:27"><name pos:start="341:18" pos:end="341:27"><name pos:start="341:18" pos:end="341:20">trk</name><operator pos:start="341:21" pos:end="341:22">-&gt;</operator><name pos:start="341:23" pos:end="341:27">entry</name></name></expr>]</index></name><operator pos:start="341:29" pos:end="341:29">.</operator><name pos:start="341:30" pos:end="341:45">samples_in_chunk</name> <operator pos:start="341:47" pos:end="341:47">=</operator> <name pos:start="341:49" pos:end="341:64">samples_in_chunk</name></expr>;</expr_stmt>

    <expr_stmt pos:start="343:5" pos:end="343:50"><expr pos:start="343:5" pos:end="343:49"><name pos:start="343:5" pos:end="343:28"><name pos:start="343:5" pos:end="343:7">trk</name><operator pos:start="343:8" pos:end="343:9">-&gt;</operator><name pos:start="343:10" pos:end="343:16">cluster</name><index pos:start="343:17" pos:end="343:28">[<expr pos:start="343:18" pos:end="343:27"><name pos:start="343:18" pos:end="343:27"><name pos:start="343:18" pos:end="343:20">trk</name><operator pos:start="343:21" pos:end="343:22">-&gt;</operator><name pos:start="343:23" pos:end="343:27">entry</name></name></expr>]</index></name><operator pos:start="343:29" pos:end="343:29">.</operator><name pos:start="343:30" pos:end="343:37">chunkNum</name>         <operator pos:start="343:47" pos:end="343:47">=</operator> <literal type="number" pos:start="343:49" pos:end="343:49">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="345:5" pos:end="345:53"><expr pos:start="345:5" pos:end="345:52"><name pos:start="345:5" pos:end="345:28"><name pos:start="345:5" pos:end="345:7">trk</name><operator pos:start="345:8" pos:end="345:9">-&gt;</operator><name pos:start="345:10" pos:end="345:16">cluster</name><index pos:start="345:17" pos:end="345:28">[<expr pos:start="345:18" pos:end="345:27"><name pos:start="345:18" pos:end="345:27"><name pos:start="345:18" pos:end="345:20">trk</name><operator pos:start="345:21" pos:end="345:22">-&gt;</operator><name pos:start="345:23" pos:end="345:27">entry</name></name></expr>]</index></name><operator pos:start="345:29" pos:end="345:29">.</operator><name pos:start="345:30" pos:end="345:33">size</name>             <operator pos:start="345:47" pos:end="345:47">=</operator> <name pos:start="345:49" pos:end="345:52">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="347:5" pos:end="347:65"><expr pos:start="347:5" pos:end="347:64"><name pos:start="347:5" pos:end="347:28"><name pos:start="347:5" pos:end="347:7">trk</name><operator pos:start="347:8" pos:end="347:9">-&gt;</operator><name pos:start="347:10" pos:end="347:16">cluster</name><index pos:start="347:17" pos:end="347:28">[<expr pos:start="347:18" pos:end="347:27"><name pos:start="347:18" pos:end="347:27"><name pos:start="347:18" pos:end="347:20">trk</name><operator pos:start="347:21" pos:end="347:22">-&gt;</operator><name pos:start="347:23" pos:end="347:27">entry</name></name></expr>]</index></name><operator pos:start="347:29" pos:end="347:29">.</operator><name pos:start="347:30" pos:end="347:36">entries</name>          <operator pos:start="347:47" pos:end="347:47">=</operator> <name pos:start="347:49" pos:end="347:64">samples_in_chunk</name></expr>;</expr_stmt>

    <expr_stmt pos:start="349:5" pos:end="349:57"><expr pos:start="349:5" pos:end="349:56"><name pos:start="349:5" pos:end="349:28"><name pos:start="349:5" pos:end="349:7">trk</name><operator pos:start="349:8" pos:end="349:9">-&gt;</operator><name pos:start="349:10" pos:end="349:16">cluster</name><index pos:start="349:17" pos:end="349:28">[<expr pos:start="349:18" pos:end="349:27"><name pos:start="349:18" pos:end="349:27"><name pos:start="349:18" pos:end="349:20">trk</name><operator pos:start="349:21" pos:end="349:22">-&gt;</operator><name pos:start="349:23" pos:end="349:27">entry</name></name></expr>]</index></name><operator pos:start="349:29" pos:end="349:29">.</operator><name pos:start="349:30" pos:end="349:32">dts</name>              <operator pos:start="349:47" pos:end="349:47">=</operator> <name pos:start="349:49" pos:end="349:56"><name pos:start="349:49" pos:end="349:51">pkt</name><operator pos:start="349:52" pos:end="349:53">-&gt;</operator><name pos:start="349:54" pos:end="349:56">dts</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="351:5" pos:end="395:5"><if pos:start="351:5" pos:end="395:5">if <condition pos:start="351:8" pos:end="351:56">(<expr pos:start="351:9" pos:end="351:55"><operator pos:start="351:9" pos:end="351:9">!</operator><name pos:start="351:10" pos:end="351:19"><name pos:start="351:10" pos:end="351:12">trk</name><operator pos:start="351:13" pos:end="351:14">-&gt;</operator><name pos:start="351:15" pos:end="351:19">entry</name></name> <operator pos:start="351:21" pos:end="351:22">&amp;&amp;</operator> <name pos:start="351:24" pos:end="351:37"><name pos:start="351:24" pos:end="351:26">trk</name><operator pos:start="351:27" pos:end="351:28">-&gt;</operator><name pos:start="351:29" pos:end="351:37">start_dts</name></name> <operator pos:start="351:39" pos:end="351:40">!=</operator> <name pos:start="351:42" pos:end="351:55">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="351:58" pos:end="395:5">{<block_content pos:start="353:9" pos:end="393:9">

        <if_stmt pos:start="353:9" pos:end="393:9"><if pos:start="353:9" pos:end="379:9">if <condition pos:start="353:12" pos:end="353:31">(<expr pos:start="353:13" pos:end="353:30"><operator pos:start="353:13" pos:end="353:13">!</operator><name pos:start="353:14" pos:end="353:30"><name pos:start="353:14" pos:end="353:16">trk</name><operator pos:start="353:17" pos:end="353:18">-&gt;</operator><name pos:start="353:19" pos:end="353:30">frag_discont</name></name></expr>)</condition> <block pos:start="353:33" pos:end="379:9">{<block_content pos:start="363:13" pos:end="377:82">

            <comment type="block" pos:start="355:13" pos:end="361:82">/* First packet of a new fragment. We already wrote the duration

             * of the last packet of the previous fragment based on track_duration,

             * which might not exactly match our dts. Therefore adjust the dts

             * of this packet to be what the previous packets duration implies. */</comment>

            <expr_stmt pos:start="363:13" pos:end="363:80"><expr pos:start="363:13" pos:end="363:79"><name pos:start="363:13" pos:end="363:36"><name pos:start="363:13" pos:end="363:15">trk</name><operator pos:start="363:16" pos:end="363:17">-&gt;</operator><name pos:start="363:18" pos:end="363:24">cluster</name><index pos:start="363:25" pos:end="363:36">[<expr pos:start="363:26" pos:end="363:35"><name pos:start="363:26" pos:end="363:35"><name pos:start="363:26" pos:end="363:28">trk</name><operator pos:start="363:29" pos:end="363:30">-&gt;</operator><name pos:start="363:31" pos:end="363:35">entry</name></name></expr>]</index></name><operator pos:start="363:37" pos:end="363:37">.</operator><name pos:start="363:38" pos:end="363:40">dts</name> <operator pos:start="363:42" pos:end="363:42">=</operator> <name pos:start="363:44" pos:end="363:57"><name pos:start="363:44" pos:end="363:46">trk</name><operator pos:start="363:47" pos:end="363:48">-&gt;</operator><name pos:start="363:49" pos:end="363:57">start_dts</name></name> <operator pos:start="363:59" pos:end="363:59">+</operator> <name pos:start="363:61" pos:end="363:79"><name pos:start="363:61" pos:end="363:63">trk</name><operator pos:start="363:64" pos:end="363:65">-&gt;</operator><name pos:start="363:66" pos:end="363:79">track_duration</name></name></expr>;</expr_stmt>

            <comment type="block" pos:start="365:13" pos:end="371:47">/* We also may have written the pts and the corresponding duration

             * in sidx/tfrf/tfxd tags; make sure the sidx pts and duration match up with

             * the next fragment. This means the cts of the first sample must

             * be the same in all fragments. */</comment>

            <if_stmt pos:start="373:13" pos:end="377:82"><if pos:start="373:13" pos:end="377:82">if <condition pos:start="373:16" pos:end="375:38">(<expr pos:start="373:17" pos:end="375:37"><operator pos:start="373:17" pos:end="373:17">(</operator><name pos:start="373:18" pos:end="373:27"><name pos:start="373:18" pos:end="373:20">mov</name><operator pos:start="373:21" pos:end="373:22">-&gt;</operator><name pos:start="373:23" pos:end="373:27">flags</name></name> <operator pos:start="373:29" pos:end="373:29">&amp;</operator> <name pos:start="373:31" pos:end="373:46">FF_MOV_FLAG_DASH</name> <operator pos:start="373:48" pos:end="373:49">&amp;&amp;</operator> <operator pos:start="373:51" pos:end="373:51">!</operator><operator pos:start="373:52" pos:end="373:52">(</operator><name pos:start="373:53" pos:end="373:62"><name pos:start="373:53" pos:end="373:55">mov</name><operator pos:start="373:56" pos:end="373:57">-&gt;</operator><name pos:start="373:58" pos:end="373:62">flags</name></name> <operator pos:start="373:64" pos:end="373:64">&amp;</operator> <name pos:start="373:66" pos:end="373:88">FF_MOV_FLAG_GLOBAL_SIDX</name><operator pos:start="373:89" pos:end="373:89">)</operator><operator pos:start="373:90" pos:end="373:90">)</operator> <operator pos:start="373:92" pos:end="373:93">||</operator>

                <name pos:start="375:17" pos:end="375:25"><name pos:start="375:17" pos:end="375:19">mov</name><operator pos:start="375:20" pos:end="375:21">-&gt;</operator><name pos:start="375:22" pos:end="375:25">mode</name></name> <operator pos:start="375:27" pos:end="375:28">==</operator> <name pos:start="375:30" pos:end="375:37">MODE_ISM</name></expr>)</condition><block type="pseudo" pos:start="377:17" pos:end="377:82"><block_content pos:start="377:17" pos:end="377:82">

                <expr_stmt pos:start="377:17" pos:end="377:82"><expr pos:start="377:17" pos:end="377:81"><name pos:start="377:17" pos:end="377:24"><name pos:start="377:17" pos:end="377:19">pkt</name><operator pos:start="377:20" pos:end="377:21">-&gt;</operator><name pos:start="377:22" pos:end="377:24">pts</name></name> <operator pos:start="377:26" pos:end="377:26">=</operator> <name pos:start="377:28" pos:end="377:35"><name pos:start="377:28" pos:end="377:30">pkt</name><operator pos:start="377:31" pos:end="377:32">-&gt;</operator><name pos:start="377:33" pos:end="377:35">dts</name></name> <operator pos:start="377:37" pos:end="377:37">+</operator> <name pos:start="377:39" pos:end="377:50"><name pos:start="377:39" pos:end="377:41">trk</name><operator pos:start="377:42" pos:end="377:43">-&gt;</operator><name pos:start="377:44" pos:end="377:50">end_pts</name></name> <operator pos:start="377:52" pos:end="377:52">-</operator> <name pos:start="377:54" pos:end="377:77"><name pos:start="377:54" pos:end="377:56">trk</name><operator pos:start="377:57" pos:end="377:58">-&gt;</operator><name pos:start="377:59" pos:end="377:65">cluster</name><index pos:start="377:66" pos:end="377:77">[<expr pos:start="377:67" pos:end="377:76"><name pos:start="377:67" pos:end="377:76"><name pos:start="377:67" pos:end="377:69">trk</name><operator pos:start="377:70" pos:end="377:71">-&gt;</operator><name pos:start="377:72" pos:end="377:76">entry</name></name></expr>]</index></name><operator pos:start="377:78" pos:end="377:78">.</operator><name pos:start="377:79" pos:end="377:81">dts</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="379:11" pos:end="393:9">else <block pos:start="379:16" pos:end="393:9">{<block_content pos:start="387:13" pos:end="391:34">

            <comment type="block" pos:start="381:13" pos:end="385:44">/* New fragment, but discontinuous from previous fragments.

             * Pretend the duration sum of the earlier fragments is

             * pkt-&gt;dts - trk-&gt;start_dts. */</comment>

            <expr_stmt pos:start="387:13" pos:end="387:56"><expr pos:start="387:13" pos:end="387:55"><name pos:start="387:13" pos:end="387:27"><name pos:start="387:13" pos:end="387:15">trk</name><operator pos:start="387:16" pos:end="387:17">-&gt;</operator><name pos:start="387:18" pos:end="387:27">frag_start</name></name> <operator pos:start="387:29" pos:end="387:29">=</operator> <name pos:start="387:31" pos:end="387:38"><name pos:start="387:31" pos:end="387:33">pkt</name><operator pos:start="387:34" pos:end="387:35">-&gt;</operator><name pos:start="387:36" pos:end="387:38">dts</name></name> <operator pos:start="387:40" pos:end="387:40">-</operator> <name pos:start="387:42" pos:end="387:55"><name pos:start="387:42" pos:end="387:44">trk</name><operator pos:start="387:45" pos:end="387:46">-&gt;</operator><name pos:start="387:47" pos:end="387:55">start_dts</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="389:13" pos:end="389:42"><expr pos:start="389:13" pos:end="389:41"><name pos:start="389:13" pos:end="389:24"><name pos:start="389:13" pos:end="389:15">trk</name><operator pos:start="389:16" pos:end="389:17">-&gt;</operator><name pos:start="389:18" pos:end="389:24">end_pts</name></name> <operator pos:start="389:26" pos:end="389:26">=</operator> <name pos:start="389:28" pos:end="389:41">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="391:13" pos:end="391:34"><expr pos:start="391:13" pos:end="391:33"><name pos:start="391:13" pos:end="391:29"><name pos:start="391:13" pos:end="391:15">trk</name><operator pos:start="391:16" pos:end="391:17">-&gt;</operator><name pos:start="391:18" pos:end="391:29">frag_discont</name></name> <operator pos:start="391:31" pos:end="391:31">=</operator> <literal type="number" pos:start="391:33" pos:end="391:33">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="399:5" pos:end="415:5"><if pos:start="399:5" pos:end="415:5">if <condition pos:start="399:8" pos:end="401:61">(<expr pos:start="399:9" pos:end="401:60"><operator pos:start="399:9" pos:end="399:9">!</operator><name pos:start="399:10" pos:end="399:19"><name pos:start="399:10" pos:end="399:12">trk</name><operator pos:start="399:13" pos:end="399:14">-&gt;</operator><name pos:start="399:15" pos:end="399:19">entry</name></name> <operator pos:start="399:21" pos:end="399:22">&amp;&amp;</operator> <name pos:start="399:24" pos:end="399:37"><name pos:start="399:24" pos:end="399:26">trk</name><operator pos:start="399:27" pos:end="399:28">-&gt;</operator><name pos:start="399:29" pos:end="399:37">start_dts</name></name> <operator pos:start="399:39" pos:end="399:40">==</operator> <name pos:start="399:42" pos:end="399:55">AV_NOPTS_VALUE</name> <operator pos:start="399:57" pos:end="399:58">&amp;&amp;</operator> <operator pos:start="399:60" pos:end="399:60">!</operator><name pos:start="399:61" pos:end="399:77"><name pos:start="399:61" pos:end="399:63">mov</name><operator pos:start="399:64" pos:end="399:65">-&gt;</operator><name pos:start="399:66" pos:end="399:77">use_editlist</name></name> <operator pos:start="399:79" pos:end="399:80">&amp;&amp;</operator>

        <name pos:start="401:9" pos:end="401:28"><name pos:start="401:9" pos:end="401:9">s</name><operator pos:start="401:10" pos:end="401:11">-&gt;</operator><name pos:start="401:12" pos:end="401:28">avoid_negative_ts</name></name> <operator pos:start="401:30" pos:end="401:31">==</operator> <name pos:start="401:33" pos:end="401:60">AVFMT_AVOID_NEG_TS_MAKE_ZERO</name></expr>)</condition> <block pos:start="401:63" pos:end="415:5">{<block_content pos:start="413:9" pos:end="413:58">

        <comment type="block" pos:start="403:9" pos:end="411:35">/* Not using edit lists and shifting the first track to start from zero.

         * If the other streams start from a later timestamp, we won't be able

         * to signal the difference in starting time without an edit list.

         * Thus move the timestamp for this first sample to 0, increasing

         * its duration instead. */</comment>

        <expr_stmt pos:start="413:9" pos:end="413:58"><expr pos:start="413:9" pos:end="413:57"><name pos:start="413:9" pos:end="413:32"><name pos:start="413:9" pos:end="413:11">trk</name><operator pos:start="413:12" pos:end="413:13">-&gt;</operator><name pos:start="413:14" pos:end="413:20">cluster</name><index pos:start="413:21" pos:end="413:32">[<expr pos:start="413:22" pos:end="413:31"><name pos:start="413:22" pos:end="413:31"><name pos:start="413:22" pos:end="413:24">trk</name><operator pos:start="413:25" pos:end="413:26">-&gt;</operator><name pos:start="413:27" pos:end="413:31">entry</name></name></expr>]</index></name><operator pos:start="413:33" pos:end="413:33">.</operator><name pos:start="413:34" pos:end="413:36">dts</name> <operator pos:start="413:38" pos:end="413:38">=</operator> <name pos:start="413:40" pos:end="413:53"><name pos:start="413:40" pos:end="413:42">trk</name><operator pos:start="413:43" pos:end="413:44">-&gt;</operator><name pos:start="413:45" pos:end="413:53">start_dts</name></name> <operator pos:start="413:55" pos:end="413:55">=</operator> <literal type="number" pos:start="413:57" pos:end="413:57">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="417:5" pos:end="461:5"><if pos:start="417:5" pos:end="461:5">if <condition pos:start="417:8" pos:end="417:41">(<expr pos:start="417:9" pos:end="417:40"><name pos:start="417:9" pos:end="417:22"><name pos:start="417:9" pos:end="417:11">trk</name><operator pos:start="417:12" pos:end="417:13">-&gt;</operator><name pos:start="417:14" pos:end="417:22">start_dts</name></name> <operator pos:start="417:24" pos:end="417:25">==</operator> <name pos:start="417:27" pos:end="417:40">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="417:43" pos:end="461:5">{<block_content pos:start="419:9" pos:end="459:48">

        <expr_stmt pos:start="419:9" pos:end="419:34"><expr pos:start="419:9" pos:end="419:33"><name pos:start="419:9" pos:end="419:22"><name pos:start="419:9" pos:end="419:11">trk</name><operator pos:start="419:12" pos:end="419:13">-&gt;</operator><name pos:start="419:14" pos:end="419:22">start_dts</name></name> <operator pos:start="419:24" pos:end="419:24">=</operator> <name pos:start="419:26" pos:end="419:33"><name pos:start="419:26" pos:end="419:28">pkt</name><operator pos:start="419:29" pos:end="419:30">-&gt;</operator><name pos:start="419:31" pos:end="419:33">dts</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="421:9" pos:end="459:48"><if pos:start="421:9" pos:end="449:9">if <condition pos:start="421:12" pos:end="421:30">(<expr pos:start="421:13" pos:end="421:29"><name pos:start="421:13" pos:end="421:29"><name pos:start="421:13" pos:end="421:15">trk</name><operator pos:start="421:16" pos:end="421:17">-&gt;</operator><name pos:start="421:18" pos:end="421:29">frag_discont</name></name></expr>)</condition> <block pos:start="421:32" pos:end="449:9">{<block_content pos:start="423:13" pos:end="447:34">

            <if_stmt pos:start="423:13" pos:end="445:13"><if pos:start="423:13" pos:end="435:13">if <condition pos:start="423:16" pos:end="423:34">(<expr pos:start="423:17" pos:end="423:33"><name pos:start="423:17" pos:end="423:33"><name pos:start="423:17" pos:end="423:19">mov</name><operator pos:start="423:20" pos:end="423:21">-&gt;</operator><name pos:start="423:22" pos:end="423:33">use_editlist</name></name></expr>)</condition> <block pos:start="423:36" pos:end="435:13">{<block_content pos:start="431:17" pos:end="433:54">

                <comment type="block" pos:start="425:17" pos:end="429:68">/* Pretend the whole stream started at pts=0, with earlier fragments

                 * already written. If the stream started at pts=0, the duration sum

                 * of earlier fragments would have been pkt-&gt;pts. */</comment>

                <expr_stmt pos:start="431:17" pos:end="431:43"><expr pos:start="431:17" pos:end="431:42"><name pos:start="431:17" pos:end="431:31"><name pos:start="431:17" pos:end="431:19">trk</name><operator pos:start="431:20" pos:end="431:21">-&gt;</operator><name pos:start="431:22" pos:end="431:31">frag_start</name></name> <operator pos:start="431:33" pos:end="431:33">=</operator> <name pos:start="431:35" pos:end="431:42"><name pos:start="431:35" pos:end="431:37">pkt</name><operator pos:start="431:38" pos:end="431:39">-&gt;</operator><name pos:start="431:40" pos:end="431:42">pts</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="433:17" pos:end="433:54"><expr pos:start="433:17" pos:end="433:53"><name pos:start="433:17" pos:end="433:30"><name pos:start="433:17" pos:end="433:19">trk</name><operator pos:start="433:20" pos:end="433:21">-&gt;</operator><name pos:start="433:22" pos:end="433:30">start_dts</name></name>  <operator pos:start="433:33" pos:end="433:33">=</operator> <name pos:start="433:35" pos:end="433:42"><name pos:start="433:35" pos:end="433:37">pkt</name><operator pos:start="433:38" pos:end="433:39">-&gt;</operator><name pos:start="433:40" pos:end="433:42">dts</name></name> <operator pos:start="433:44" pos:end="433:44">-</operator> <name pos:start="433:46" pos:end="433:53"><name pos:start="433:46" pos:end="433:48">pkt</name><operator pos:start="433:49" pos:end="433:50">-&gt;</operator><name pos:start="433:51" pos:end="433:53">pts</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="435:15" pos:end="445:13">else <block pos:start="435:20" pos:end="445:13">{<block_content pos:start="441:17" pos:end="443:36">

                <comment type="block" pos:start="437:17" pos:end="439:78">/* Pretend the whole stream started at dts=0, with earlier fragments

                 * already written, with a duration summing up to pkt-&gt;dts. */</comment>

                <expr_stmt pos:start="441:17" pos:end="441:43"><expr pos:start="441:17" pos:end="441:42"><name pos:start="441:17" pos:end="441:31"><name pos:start="441:17" pos:end="441:19">trk</name><operator pos:start="441:20" pos:end="441:21">-&gt;</operator><name pos:start="441:22" pos:end="441:31">frag_start</name></name> <operator pos:start="441:33" pos:end="441:33">=</operator> <name pos:start="441:35" pos:end="441:42"><name pos:start="441:35" pos:end="441:37">pkt</name><operator pos:start="441:38" pos:end="441:39">-&gt;</operator><name pos:start="441:40" pos:end="441:42">dts</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="443:17" pos:end="443:36"><expr pos:start="443:17" pos:end="443:35"><name pos:start="443:17" pos:end="443:30"><name pos:start="443:17" pos:end="443:19">trk</name><operator pos:start="443:20" pos:end="443:21">-&gt;</operator><name pos:start="443:22" pos:end="443:30">start_dts</name></name>  <operator pos:start="443:33" pos:end="443:33">=</operator> <literal type="number" pos:start="443:35" pos:end="443:35">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="447:13" pos:end="447:34"><expr pos:start="447:13" pos:end="447:33"><name pos:start="447:13" pos:end="447:29"><name pos:start="447:13" pos:end="447:15">trk</name><operator pos:start="447:16" pos:end="447:17">-&gt;</operator><name pos:start="447:18" pos:end="447:29">frag_discont</name></name> <operator pos:start="447:31" pos:end="447:31">=</operator> <literal type="number" pos:start="447:33" pos:end="447:33">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="449:11" pos:end="459:48">else if <condition pos:start="449:19" pos:end="449:49">(<expr pos:start="449:20" pos:end="449:48"><name pos:start="449:20" pos:end="449:27"><name pos:start="449:20" pos:end="449:22">pkt</name><operator pos:start="449:23" pos:end="449:24">-&gt;</operator><name pos:start="449:25" pos:end="449:27">dts</name></name> <operator pos:start="449:29" pos:end="449:30">&amp;&amp;</operator> <name pos:start="449:32" pos:end="449:48"><name pos:start="449:32" pos:end="449:34">mov</name><operator pos:start="449:35" pos:end="449:36">-&gt;</operator><name pos:start="449:37" pos:end="449:48">moov_written</name></name></expr>)</condition><block type="pseudo" pos:start="451:13" pos:end="459:48"><block_content pos:start="451:13" pos:end="459:48">

            <expr_stmt pos:start="451:13" pos:end="459:48"><expr pos:start="451:13" pos:end="459:47"><call pos:start="451:13" pos:end="459:47"><name pos:start="451:13" pos:end="451:18">av_log</name><argument_list pos:start="451:19" pos:end="459:47">(<argument pos:start="451:20" pos:end="451:20"><expr pos:start="451:20" pos:end="451:20"><name pos:start="451:20" pos:end="451:20">s</name></expr></argument>, <argument pos:start="451:23" pos:end="451:36"><expr pos:start="451:23" pos:end="451:36"><name pos:start="451:23" pos:end="451:36">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="453:20" pos:end="457:33"><expr pos:start="453:20" pos:end="457:33"><literal type="string" pos:start="453:20" pos:end="453:57">"Track %d starts with a nonzero dts %"</literal><name pos:start="453:58" pos:end="453:63">PRId64</name><literal type="string" pos:start="453:64" pos:end="453:82">", while the moov "</literal>

                   <literal type="string" pos:start="455:20" pos:end="455:81">"already has been written. Set the delay_moov flag to handle "</literal>

                   <literal type="string" pos:start="457:20" pos:end="457:33">"this case.\n"</literal></expr></argument>,

                   <argument pos:start="459:20" pos:end="459:36"><expr pos:start="459:20" pos:end="459:36"><name pos:start="459:20" pos:end="459:36"><name pos:start="459:20" pos:end="459:22">pkt</name><operator pos:start="459:23" pos:end="459:24">-&gt;</operator><name pos:start="459:25" pos:end="459:36">stream_index</name></name></expr></argument>, <argument pos:start="459:39" pos:end="459:46"><expr pos:start="459:39" pos:end="459:46"><name pos:start="459:39" pos:end="459:46"><name pos:start="459:39" pos:end="459:41">pkt</name><operator pos:start="459:42" pos:end="459:43">-&gt;</operator><name pos:start="459:44" pos:end="459:46">dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="463:5" pos:end="463:68"><expr pos:start="463:5" pos:end="463:67"><name pos:start="463:5" pos:end="463:23"><name pos:start="463:5" pos:end="463:7">trk</name><operator pos:start="463:8" pos:end="463:9">-&gt;</operator><name pos:start="463:10" pos:end="463:23">track_duration</name></name> <operator pos:start="463:25" pos:end="463:25">=</operator> <name pos:start="463:27" pos:end="463:34"><name pos:start="463:27" pos:end="463:29">pkt</name><operator pos:start="463:30" pos:end="463:31">-&gt;</operator><name pos:start="463:32" pos:end="463:34">dts</name></name> <operator pos:start="463:36" pos:end="463:36">-</operator> <name pos:start="463:38" pos:end="463:51"><name pos:start="463:38" pos:end="463:40">trk</name><operator pos:start="463:41" pos:end="463:42">-&gt;</operator><name pos:start="463:43" pos:end="463:51">start_dts</name></name> <operator pos:start="463:53" pos:end="463:53">+</operator> <name pos:start="463:55" pos:end="463:67"><name pos:start="463:55" pos:end="463:57">pkt</name><operator pos:start="463:58" pos:end="463:59">-&gt;</operator><name pos:start="463:60" pos:end="463:67">duration</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="465:5" pos:end="465:41"><expr pos:start="465:5" pos:end="465:40"><name pos:start="465:5" pos:end="465:36"><name pos:start="465:5" pos:end="465:7">trk</name><operator pos:start="465:8" pos:end="465:9">-&gt;</operator><name pos:start="465:10" pos:end="465:36">last_sample_is_subtitle_end</name></name> <operator pos:start="465:38" pos:end="465:38">=</operator> <literal type="number" pos:start="465:40" pos:end="465:40">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="469:5" pos:end="475:5"><if pos:start="469:5" pos:end="475:5">if <condition pos:start="469:8" pos:end="469:35">(<expr pos:start="469:9" pos:end="469:34"><name pos:start="469:9" pos:end="469:16"><name pos:start="469:9" pos:end="469:11">pkt</name><operator pos:start="469:12" pos:end="469:13">-&gt;</operator><name pos:start="469:14" pos:end="469:16">pts</name></name> <operator pos:start="469:18" pos:end="469:19">==</operator> <name pos:start="469:21" pos:end="469:34">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="469:37" pos:end="475:5">{<block_content pos:start="471:9" pos:end="473:28">

        <expr_stmt pos:start="471:9" pos:end="471:56"><expr pos:start="471:9" pos:end="471:55"><call pos:start="471:9" pos:end="471:55"><name pos:start="471:9" pos:end="471:14">av_log</name><argument_list pos:start="471:15" pos:end="471:55">(<argument pos:start="471:16" pos:end="471:16"><expr pos:start="471:16" pos:end="471:16"><name pos:start="471:16" pos:end="471:16">s</name></expr></argument>, <argument pos:start="471:19" pos:end="471:32"><expr pos:start="471:19" pos:end="471:32"><name pos:start="471:19" pos:end="471:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="471:35" pos:end="471:54"><expr pos:start="471:35" pos:end="471:54"><literal type="string" pos:start="471:35" pos:end="471:54">"pts has no value\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="473:9" pos:end="473:28"><expr pos:start="473:9" pos:end="473:27"><name pos:start="473:9" pos:end="473:16"><name pos:start="473:9" pos:end="473:11">pkt</name><operator pos:start="473:12" pos:end="473:13">-&gt;</operator><name pos:start="473:14" pos:end="473:16">pts</name></name> <operator pos:start="473:18" pos:end="473:18">=</operator> <name pos:start="473:20" pos:end="473:27"><name pos:start="473:20" pos:end="473:22">pkt</name><operator pos:start="473:23" pos:end="473:24">-&gt;</operator><name pos:start="473:25" pos:end="473:27">dts</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="477:5" pos:end="479:37"><if pos:start="477:5" pos:end="479:37">if <condition pos:start="477:8" pos:end="477:29">(<expr pos:start="477:9" pos:end="477:28"><name pos:start="477:9" pos:end="477:16"><name pos:start="477:9" pos:end="477:11">pkt</name><operator pos:start="477:12" pos:end="477:13">-&gt;</operator><name pos:start="477:14" pos:end="477:16">dts</name></name> <operator pos:start="477:18" pos:end="477:19">!=</operator> <name pos:start="477:21" pos:end="477:28"><name pos:start="477:21" pos:end="477:23">pkt</name><operator pos:start="477:24" pos:end="477:25">-&gt;</operator><name pos:start="477:26" pos:end="477:28">pts</name></name></expr>)</condition><block type="pseudo" pos:start="479:9" pos:end="479:37"><block_content pos:start="479:9" pos:end="479:37">

        <expr_stmt pos:start="479:9" pos:end="479:37"><expr pos:start="479:9" pos:end="479:36"><name pos:start="479:9" pos:end="479:18"><name pos:start="479:9" pos:end="479:11">trk</name><operator pos:start="479:12" pos:end="479:13">-&gt;</operator><name pos:start="479:14" pos:end="479:18">flags</name></name> <operator pos:start="479:20" pos:end="479:21">|=</operator> <name pos:start="479:23" pos:end="479:36">MOV_TRACK_CTTS</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="481:5" pos:end="481:57"><expr pos:start="481:5" pos:end="481:56"><name pos:start="481:5" pos:end="481:28"><name pos:start="481:5" pos:end="481:7">trk</name><operator pos:start="481:8" pos:end="481:9">-&gt;</operator><name pos:start="481:10" pos:end="481:16">cluster</name><index pos:start="481:17" pos:end="481:28">[<expr pos:start="481:18" pos:end="481:27"><name pos:start="481:18" pos:end="481:27"><name pos:start="481:18" pos:end="481:20">trk</name><operator pos:start="481:21" pos:end="481:22">-&gt;</operator><name pos:start="481:23" pos:end="481:27">entry</name></name></expr>]</index></name><operator pos:start="481:29" pos:end="481:29">.</operator><name pos:start="481:30" pos:end="481:32">cts</name>   <operator pos:start="481:36" pos:end="481:36">=</operator> <name pos:start="481:38" pos:end="481:45"><name pos:start="481:38" pos:end="481:40">pkt</name><operator pos:start="481:41" pos:end="481:42">-&gt;</operator><name pos:start="481:43" pos:end="481:45">pts</name></name> <operator pos:start="481:47" pos:end="481:47">-</operator> <name pos:start="481:49" pos:end="481:56"><name pos:start="481:49" pos:end="481:51">pkt</name><operator pos:start="481:52" pos:end="481:53">-&gt;</operator><name pos:start="481:54" pos:end="481:56">dts</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="483:5" pos:end="483:39"><expr pos:start="483:5" pos:end="483:38"><name pos:start="483:5" pos:end="483:28"><name pos:start="483:5" pos:end="483:7">trk</name><operator pos:start="483:8" pos:end="483:9">-&gt;</operator><name pos:start="483:10" pos:end="483:16">cluster</name><index pos:start="483:17" pos:end="483:28">[<expr pos:start="483:18" pos:end="483:27"><name pos:start="483:18" pos:end="483:27"><name pos:start="483:18" pos:end="483:20">trk</name><operator pos:start="483:21" pos:end="483:22">-&gt;</operator><name pos:start="483:23" pos:end="483:27">entry</name></name></expr>]</index></name><operator pos:start="483:29" pos:end="483:29">.</operator><name pos:start="483:30" pos:end="483:34">flags</name> <operator pos:start="483:36" pos:end="483:36">=</operator> <literal type="number" pos:start="483:38" pos:end="483:38">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="485:5" pos:end="487:45"><if pos:start="485:5" pos:end="487:45">if <condition pos:start="485:8" pos:end="485:41">(<expr pos:start="485:9" pos:end="485:40"><name pos:start="485:9" pos:end="485:22"><name pos:start="485:9" pos:end="485:11">trk</name><operator pos:start="485:12" pos:end="485:13">-&gt;</operator><name pos:start="485:14" pos:end="485:22">start_cts</name></name> <operator pos:start="485:24" pos:end="485:25">==</operator> <name pos:start="485:27" pos:end="485:40">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="487:9" pos:end="487:45"><block_content pos:start="487:9" pos:end="487:45">

        <expr_stmt pos:start="487:9" pos:end="487:45"><expr pos:start="487:9" pos:end="487:44"><name pos:start="487:9" pos:end="487:22"><name pos:start="487:9" pos:end="487:11">trk</name><operator pos:start="487:12" pos:end="487:13">-&gt;</operator><name pos:start="487:14" pos:end="487:22">start_cts</name></name> <operator pos:start="487:24" pos:end="487:24">=</operator> <name pos:start="487:26" pos:end="487:33"><name pos:start="487:26" pos:end="487:28">pkt</name><operator pos:start="487:29" pos:end="487:30">-&gt;</operator><name pos:start="487:31" pos:end="487:33">pts</name></name> <operator pos:start="487:35" pos:end="487:35">-</operator> <name pos:start="487:37" pos:end="487:44"><name pos:start="487:37" pos:end="487:39">pkt</name><operator pos:start="487:40" pos:end="487:41">-&gt;</operator><name pos:start="487:42" pos:end="487:44">dts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="489:5" pos:end="501:58"><if pos:start="489:5" pos:end="493:68">if <condition pos:start="489:8" pos:end="489:39">(<expr pos:start="489:9" pos:end="489:38"><name pos:start="489:9" pos:end="489:20"><name pos:start="489:9" pos:end="489:11">trk</name><operator pos:start="489:12" pos:end="489:13">-&gt;</operator><name pos:start="489:14" pos:end="489:20">end_pts</name></name> <operator pos:start="489:22" pos:end="489:23">==</operator> <name pos:start="489:25" pos:end="489:38">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="491:9" pos:end="493:68"><block_content pos:start="491:9" pos:end="493:68">

        <expr_stmt pos:start="491:9" pos:end="493:68"><expr pos:start="491:9" pos:end="493:67"><name pos:start="491:9" pos:end="491:20"><name pos:start="491:9" pos:end="491:11">trk</name><operator pos:start="491:12" pos:end="491:13">-&gt;</operator><name pos:start="491:14" pos:end="491:20">end_pts</name></name> <operator pos:start="491:22" pos:end="491:22">=</operator> <name pos:start="491:24" pos:end="491:47"><name pos:start="491:24" pos:end="491:26">trk</name><operator pos:start="491:27" pos:end="491:28">-&gt;</operator><name pos:start="491:29" pos:end="491:35">cluster</name><index pos:start="491:36" pos:end="491:47">[<expr pos:start="491:37" pos:end="491:46"><name pos:start="491:37" pos:end="491:46"><name pos:start="491:37" pos:end="491:39">trk</name><operator pos:start="491:40" pos:end="491:41">-&gt;</operator><name pos:start="491:42" pos:end="491:46">entry</name></name></expr>]</index></name><operator pos:start="491:48" pos:end="491:48">.</operator><name pos:start="491:49" pos:end="491:51">dts</name> <operator pos:start="491:53" pos:end="491:53">+</operator>

                       <name pos:start="493:24" pos:end="493:47"><name pos:start="493:24" pos:end="493:26">trk</name><operator pos:start="493:27" pos:end="493:28">-&gt;</operator><name pos:start="493:29" pos:end="493:35">cluster</name><index pos:start="493:36" pos:end="493:47">[<expr pos:start="493:37" pos:end="493:46"><name pos:start="493:37" pos:end="493:46"><name pos:start="493:37" pos:end="493:39">trk</name><operator pos:start="493:40" pos:end="493:41">-&gt;</operator><name pos:start="493:42" pos:end="493:46">entry</name></name></expr>]</index></name><operator pos:start="493:48" pos:end="493:48">.</operator><name pos:start="493:49" pos:end="493:51">cts</name> <operator pos:start="493:53" pos:end="493:53">+</operator> <name pos:start="493:55" pos:end="493:67"><name pos:start="493:55" pos:end="493:57">pkt</name><operator pos:start="493:58" pos:end="493:59">-&gt;</operator><name pos:start="493:60" pos:end="493:67">duration</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="495:5" pos:end="501:58">else<block type="pseudo" pos:start="497:9" pos:end="501:58"><block_content pos:start="497:9" pos:end="501:58">

        <expr_stmt pos:start="497:9" pos:end="501:58"><expr pos:start="497:9" pos:end="501:57"><name pos:start="497:9" pos:end="497:20"><name pos:start="497:9" pos:end="497:11">trk</name><operator pos:start="497:12" pos:end="497:13">-&gt;</operator><name pos:start="497:14" pos:end="497:20">end_pts</name></name> <operator pos:start="497:22" pos:end="497:22">=</operator> <call pos:start="497:24" pos:end="501:57"><name pos:start="497:24" pos:end="497:28">FFMAX</name><argument_list pos:start="497:29" pos:end="501:57">(<argument pos:start="497:30" pos:end="497:41"><expr pos:start="497:30" pos:end="497:41"><name pos:start="497:30" pos:end="497:41"><name pos:start="497:30" pos:end="497:32">trk</name><operator pos:start="497:33" pos:end="497:34">-&gt;</operator><name pos:start="497:35" pos:end="497:41">end_pts</name></name></expr></argument>, <argument pos:start="497:44" pos:end="501:56"><expr pos:start="497:44" pos:end="501:56"><name pos:start="497:44" pos:end="497:67"><name pos:start="497:44" pos:end="497:46">trk</name><operator pos:start="497:47" pos:end="497:48">-&gt;</operator><name pos:start="497:49" pos:end="497:55">cluster</name><index pos:start="497:56" pos:end="497:67">[<expr pos:start="497:57" pos:end="497:66"><name pos:start="497:57" pos:end="497:66"><name pos:start="497:57" pos:end="497:59">trk</name><operator pos:start="497:60" pos:end="497:61">-&gt;</operator><name pos:start="497:62" pos:end="497:66">entry</name></name></expr>]</index></name><operator pos:start="497:68" pos:end="497:68">.</operator><name pos:start="497:69" pos:end="497:71">dts</name> <operator pos:start="497:73" pos:end="497:73">+</operator>

                                           <name pos:start="499:44" pos:end="499:67"><name pos:start="499:44" pos:end="499:46">trk</name><operator pos:start="499:47" pos:end="499:48">-&gt;</operator><name pos:start="499:49" pos:end="499:55">cluster</name><index pos:start="499:56" pos:end="499:67">[<expr pos:start="499:57" pos:end="499:66"><name pos:start="499:57" pos:end="499:66"><name pos:start="499:57" pos:end="499:59">trk</name><operator pos:start="499:60" pos:end="499:61">-&gt;</operator><name pos:start="499:62" pos:end="499:66">entry</name></name></expr>]</index></name><operator pos:start="499:68" pos:end="499:68">.</operator><name pos:start="499:69" pos:end="499:71">cts</name> <operator pos:start="499:73" pos:end="499:73">+</operator>

                                           <name pos:start="501:44" pos:end="501:56"><name pos:start="501:44" pos:end="501:46">pkt</name><operator pos:start="501:47" pos:end="501:48">-&gt;</operator><name pos:start="501:49" pos:end="501:56">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="505:5" pos:end="531:5"><if pos:start="505:5" pos:end="509:5">if <condition pos:start="505:8" pos:end="505:41">(<expr pos:start="505:9" pos:end="505:40"><name pos:start="505:9" pos:end="505:21"><name pos:start="505:9" pos:end="505:11">enc</name><operator pos:start="505:12" pos:end="505:13">-&gt;</operator><name pos:start="505:14" pos:end="505:21">codec_id</name></name> <operator pos:start="505:23" pos:end="505:24">==</operator> <name pos:start="505:26" pos:end="505:40">AV_CODEC_ID_VC1</name></expr>)</condition> <block pos:start="505:43" pos:end="509:5">{<block_content pos:start="507:9" pos:end="507:38">

        <expr_stmt pos:start="507:9" pos:end="507:38"><expr pos:start="507:9" pos:end="507:37"><call pos:start="507:9" pos:end="507:37"><name pos:start="507:9" pos:end="507:27">mov_parse_vc1_frame</name><argument_list pos:start="507:28" pos:end="507:37">(<argument pos:start="507:29" pos:end="507:31"><expr pos:start="507:29" pos:end="507:31"><name pos:start="507:29" pos:end="507:31">pkt</name></expr></argument>, <argument pos:start="507:34" pos:end="507:36"><expr pos:start="507:34" pos:end="507:36"><name pos:start="507:34" pos:end="507:36">trk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="509:7" pos:end="531:5">else if <condition pos:start="509:15" pos:end="509:44">(<expr pos:start="509:16" pos:end="509:43"><name pos:start="509:16" pos:end="509:25"><name pos:start="509:16" pos:end="509:18">pkt</name><operator pos:start="509:19" pos:end="509:20">-&gt;</operator><name pos:start="509:21" pos:end="509:25">flags</name></name> <operator pos:start="509:27" pos:end="509:27">&amp;</operator> <name pos:start="509:29" pos:end="509:43">AV_PKT_FLAG_KEY</name></expr>)</condition> <block pos:start="509:46" pos:end="531:5">{<block_content pos:start="511:9" pos:end="529:33">

        <if_stmt pos:start="511:9" pos:end="525:9"><if pos:start="511:9" pos:end="521:9">if <condition pos:start="511:12" pos:end="513:27">(<expr pos:start="511:13" pos:end="513:26"><name pos:start="511:13" pos:end="511:21"><name pos:start="511:13" pos:end="511:15">mov</name><operator pos:start="511:16" pos:end="511:17">-&gt;</operator><name pos:start="511:18" pos:end="511:21">mode</name></name> <operator pos:start="511:23" pos:end="511:24">==</operator> <name pos:start="511:26" pos:end="511:33">MODE_MOV</name> <operator pos:start="511:35" pos:end="511:36">&amp;&amp;</operator> <name pos:start="511:38" pos:end="511:50"><name pos:start="511:38" pos:end="511:40">enc</name><operator pos:start="511:41" pos:end="511:42">-&gt;</operator><name pos:start="511:43" pos:end="511:50">codec_id</name></name> <operator pos:start="511:52" pos:end="511:53">==</operator> <name pos:start="511:55" pos:end="511:76">AV_CODEC_ID_MPEG2VIDEO</name> <operator pos:start="511:78" pos:end="511:79">&amp;&amp;</operator>

            <name pos:start="513:13" pos:end="513:22"><name pos:start="513:13" pos:end="513:15">trk</name><operator pos:start="513:16" pos:end="513:17">-&gt;</operator><name pos:start="513:18" pos:end="513:22">entry</name></name> <operator pos:start="513:24" pos:end="513:24">&gt;</operator> <literal type="number" pos:start="513:26" pos:end="513:26">0</literal></expr>)</condition> <block pos:start="513:29" pos:end="521:9">{<block_content pos:start="515:13" pos:end="519:45"> <comment type="line" pos:start="513:31" pos:end="513:74">// force sync sample for the first key frame</comment>

            <expr_stmt pos:start="515:13" pos:end="515:72"><expr pos:start="515:13" pos:end="515:71"><call pos:start="515:13" pos:end="515:71"><name pos:start="515:13" pos:end="515:33">mov_parse_mpeg2_frame</name><argument_list pos:start="515:34" pos:end="515:71">(<argument pos:start="515:35" pos:end="515:37"><expr pos:start="515:35" pos:end="515:37"><name pos:start="515:35" pos:end="515:37">pkt</name></expr></argument>, <argument pos:start="515:40" pos:end="515:70"><expr pos:start="515:40" pos:end="515:70"><operator pos:start="515:40" pos:end="515:40">&amp;</operator><name pos:start="515:41" pos:end="515:64"><name pos:start="515:41" pos:end="515:43">trk</name><operator pos:start="515:44" pos:end="515:45">-&gt;</operator><name pos:start="515:46" pos:end="515:52">cluster</name><index pos:start="515:53" pos:end="515:64">[<expr pos:start="515:54" pos:end="515:63"><name pos:start="515:54" pos:end="515:63"><name pos:start="515:54" pos:end="515:56">trk</name><operator pos:start="515:57" pos:end="515:58">-&gt;</operator><name pos:start="515:59" pos:end="515:63">entry</name></name></expr>]</index></name><operator pos:start="515:65" pos:end="515:65">.</operator><name pos:start="515:66" pos:end="515:70">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="517:13" pos:end="519:45"><if pos:start="517:13" pos:end="519:45">if <condition pos:start="517:16" pos:end="517:73">(<expr pos:start="517:17" pos:end="517:72"><name pos:start="517:17" pos:end="517:40"><name pos:start="517:17" pos:end="517:19">trk</name><operator pos:start="517:20" pos:end="517:21">-&gt;</operator><name pos:start="517:22" pos:end="517:28">cluster</name><index pos:start="517:29" pos:end="517:40">[<expr pos:start="517:30" pos:end="517:39"><name pos:start="517:30" pos:end="517:39"><name pos:start="517:30" pos:end="517:32">trk</name><operator pos:start="517:33" pos:end="517:34">-&gt;</operator><name pos:start="517:35" pos:end="517:39">entry</name></name></expr>]</index></name><operator pos:start="517:41" pos:end="517:41">.</operator><name pos:start="517:42" pos:end="517:46">flags</name> <operator pos:start="517:48" pos:end="517:48">&amp;</operator> <name pos:start="517:50" pos:end="517:72">MOV_PARTIAL_SYNC_SAMPLE</name></expr>)</condition><block type="pseudo" pos:start="519:17" pos:end="519:45"><block_content pos:start="519:17" pos:end="519:45">

                <expr_stmt pos:start="519:17" pos:end="519:45"><expr pos:start="519:17" pos:end="519:44"><name pos:start="519:17" pos:end="519:26"><name pos:start="519:17" pos:end="519:19">trk</name><operator pos:start="519:20" pos:end="519:21">-&gt;</operator><name pos:start="519:22" pos:end="519:26">flags</name></name> <operator pos:start="519:28" pos:end="519:29">|=</operator> <name pos:start="519:31" pos:end="519:44">MOV_TRACK_STPS</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="521:11" pos:end="525:9">else <block pos:start="521:16" pos:end="525:9">{<block_content pos:start="523:13" pos:end="523:61">

            <expr_stmt pos:start="523:13" pos:end="523:61"><expr pos:start="523:13" pos:end="523:60"><name pos:start="523:13" pos:end="523:36"><name pos:start="523:13" pos:end="523:15">trk</name><operator pos:start="523:16" pos:end="523:17">-&gt;</operator><name pos:start="523:18" pos:end="523:24">cluster</name><index pos:start="523:25" pos:end="523:36">[<expr pos:start="523:26" pos:end="523:35"><name pos:start="523:26" pos:end="523:35"><name pos:start="523:26" pos:end="523:28">trk</name><operator pos:start="523:29" pos:end="523:30">-&gt;</operator><name pos:start="523:31" pos:end="523:35">entry</name></name></expr>]</index></name><operator pos:start="523:37" pos:end="523:37">.</operator><name pos:start="523:38" pos:end="523:42">flags</name> <operator pos:start="523:44" pos:end="523:44">=</operator> <name pos:start="523:46" pos:end="523:60">MOV_SYNC_SAMPLE</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="527:9" pos:end="529:33"><if pos:start="527:9" pos:end="529:33">if <condition pos:start="527:12" pos:end="527:61">(<expr pos:start="527:13" pos:end="527:60"><name pos:start="527:13" pos:end="527:36"><name pos:start="527:13" pos:end="527:15">trk</name><operator pos:start="527:16" pos:end="527:17">-&gt;</operator><name pos:start="527:18" pos:end="527:24">cluster</name><index pos:start="527:25" pos:end="527:36">[<expr pos:start="527:26" pos:end="527:35"><name pos:start="527:26" pos:end="527:35"><name pos:start="527:26" pos:end="527:28">trk</name><operator pos:start="527:29" pos:end="527:30">-&gt;</operator><name pos:start="527:31" pos:end="527:35">entry</name></name></expr>]</index></name><operator pos:start="527:37" pos:end="527:37">.</operator><name pos:start="527:38" pos:end="527:42">flags</name> <operator pos:start="527:44" pos:end="527:44">&amp;</operator> <name pos:start="527:46" pos:end="527:60">MOV_SYNC_SAMPLE</name></expr>)</condition><block type="pseudo" pos:start="529:13" pos:end="529:33"><block_content pos:start="529:13" pos:end="529:33">

            <expr_stmt pos:start="529:13" pos:end="529:33"><expr pos:start="529:13" pos:end="529:32"><name pos:start="529:13" pos:end="529:30"><name pos:start="529:13" pos:end="529:15">trk</name><operator pos:start="529:16" pos:end="529:17">-&gt;</operator><name pos:start="529:18" pos:end="529:30">has_keyframes</name></name><operator pos:start="529:31" pos:end="529:32">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="533:5" pos:end="533:17"><expr pos:start="533:5" pos:end="533:16"><name pos:start="533:5" pos:end="533:14"><name pos:start="533:5" pos:end="533:7">trk</name><operator pos:start="533:8" pos:end="533:9">-&gt;</operator><name pos:start="533:10" pos:end="533:14">entry</name></name><operator pos:start="533:15" pos:end="533:16">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="535:5" pos:end="535:42"><expr pos:start="535:5" pos:end="535:41"><name pos:start="535:5" pos:end="535:21"><name pos:start="535:5" pos:end="535:7">trk</name><operator pos:start="535:8" pos:end="535:9">-&gt;</operator><name pos:start="535:10" pos:end="535:21">sample_count</name></name> <operator pos:start="535:23" pos:end="535:24">+=</operator> <name pos:start="535:26" pos:end="535:41">samples_in_chunk</name></expr>;</expr_stmt>

    <expr_stmt pos:start="537:5" pos:end="537:30"><expr pos:start="537:5" pos:end="537:29"><name pos:start="537:5" pos:end="537:18"><name pos:start="537:5" pos:end="537:7">mov</name><operator pos:start="537:8" pos:end="537:9">-&gt;</operator><name pos:start="537:10" pos:end="537:18">mdat_size</name></name>    <operator pos:start="537:23" pos:end="537:24">+=</operator> <name pos:start="537:26" pos:end="537:29">size</name></expr>;</expr_stmt>



    <if_stmt pos:start="541:5" pos:end="545:57"><if pos:start="541:5" pos:end="545:57">if <condition pos:start="541:8" pos:end="541:66">(<expr pos:start="541:9" pos:end="541:65"><name pos:start="541:9" pos:end="541:23"><name pos:start="541:9" pos:end="541:11">trk</name><operator pos:start="541:12" pos:end="541:13">-&gt;</operator><name pos:start="541:14" pos:end="541:23">hint_track</name></name> <operator pos:start="541:25" pos:end="541:26">&gt;=</operator> <literal type="number" pos:start="541:28" pos:end="541:28">0</literal> <operator pos:start="541:30" pos:end="541:31">&amp;&amp;</operator> <name pos:start="541:33" pos:end="541:47"><name pos:start="541:33" pos:end="541:35">trk</name><operator pos:start="541:36" pos:end="541:37">-&gt;</operator><name pos:start="541:38" pos:end="541:47">hint_track</name></name> <operator pos:start="541:49" pos:end="541:49">&lt;</operator> <name pos:start="541:51" pos:end="541:65"><name pos:start="541:51" pos:end="541:53">mov</name><operator pos:start="541:54" pos:end="541:55">-&gt;</operator><name pos:start="541:56" pos:end="541:65">nb_streams</name></name></expr>)</condition><block type="pseudo" pos:start="543:9" pos:end="545:57"><block_content pos:start="543:9" pos:end="545:57">

        <expr_stmt pos:start="543:9" pos:end="545:57"><expr pos:start="543:9" pos:end="545:56"><call pos:start="543:9" pos:end="545:56"><name pos:start="543:9" pos:end="543:32">ff_mov_add_hinted_packet</name><argument_list pos:start="543:33" pos:end="545:56">(<argument pos:start="543:34" pos:end="543:34"><expr pos:start="543:34" pos:end="543:34"><name pos:start="543:34" pos:end="543:34">s</name></expr></argument>, <argument pos:start="543:37" pos:end="543:39"><expr pos:start="543:37" pos:end="543:39"><name pos:start="543:37" pos:end="543:39">pkt</name></expr></argument>, <argument pos:start="543:42" pos:end="543:56"><expr pos:start="543:42" pos:end="543:56"><name pos:start="543:42" pos:end="543:56"><name pos:start="543:42" pos:end="543:44">trk</name><operator pos:start="543:45" pos:end="543:46">-&gt;</operator><name pos:start="543:47" pos:end="543:56">hint_track</name></name></expr></argument>, <argument pos:start="543:59" pos:end="543:68"><expr pos:start="543:59" pos:end="543:68"><name pos:start="543:59" pos:end="543:68"><name pos:start="543:59" pos:end="543:61">trk</name><operator pos:start="543:62" pos:end="543:63">-&gt;</operator><name pos:start="543:64" pos:end="543:68">entry</name></name></expr></argument>,

                                 <argument pos:start="545:34" pos:end="545:49"><expr pos:start="545:34" pos:end="545:49"><name pos:start="545:34" pos:end="545:49">reformatted_data</name></expr></argument>, <argument pos:start="545:52" pos:end="545:55"><expr pos:start="545:52" pos:end="545:55"><name pos:start="545:52" pos:end="545:55">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



<label pos:start="549:1" pos:end="549:4"><name pos:start="549:1" pos:end="549:3">end</name>:</label>

<label pos:start="551:1" pos:end="551:4"><name pos:start="551:1" pos:end="551:3">err</name>:</label>



    <expr_stmt pos:start="555:5" pos:end="555:30"><expr pos:start="555:5" pos:end="555:29"><call pos:start="555:5" pos:end="555:29"><name pos:start="555:5" pos:end="555:11">av_free</name><argument_list pos:start="555:12" pos:end="555:29">(<argument pos:start="555:13" pos:end="555:28"><expr pos:start="555:13" pos:end="555:28"><name pos:start="555:13" pos:end="555:28">reformatted_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="557:5" pos:end="557:15">return <expr pos:start="557:12" pos:end="557:14"><name pos:start="557:12" pos:end="557:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
