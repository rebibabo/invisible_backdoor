<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10844.c" pos:tabs="8"><function pos:start="1:1" pos:end="2515:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">disas_arm_insn</name><parameter_list pos:start="1:27" pos:end="1:62">(<parameter pos:start="1:28" pos:end="1:44"><decl pos:start="1:28" pos:end="1:44"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:38">CPUARMState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type> <name pos:start="1:42" pos:end="1:44">env</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:61"><decl pos:start="1:47" pos:end="1:61"><type pos:start="1:47" pos:end="1:61"><name pos:start="1:47" pos:end="1:58">DisasContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:61">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="2515:1">{<block_content pos:start="5:5" pos:end="2513:5">

    <decl_stmt pos:start="5:5" pos:end="5:68"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:21">cond</name></decl>, <decl pos:start="5:24" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:24" pos:end="5:27">insn</name></decl>, <decl pos:start="5:30" pos:end="5:32"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:30" pos:end="5:32">val</name></decl>, <decl pos:start="5:35" pos:end="5:37"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:35" pos:end="5:37">op1</name></decl>, <decl pos:start="5:40" pos:end="5:40"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:40" pos:end="5:40">i</name></decl>, <decl pos:start="5:43" pos:end="5:47"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:43" pos:end="5:47">shift</name></decl>, <decl pos:start="5:50" pos:end="5:51"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:50" pos:end="5:51">rm</name></decl>, <decl pos:start="5:54" pos:end="5:55"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:54" pos:end="5:55">rs</name></decl>, <decl pos:start="5:58" pos:end="5:59"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:58" pos:end="5:59">rn</name></decl>, <decl pos:start="5:62" pos:end="5:63"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:62" pos:end="5:63">rd</name></decl>, <decl pos:start="5:66" pos:end="5:67"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:66" pos:end="5:67">sh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">TCGv</name></type> <name pos:start="7:10" pos:end="7:12">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">TCGv</name></type> <name pos:start="9:10" pos:end="9:13">tmp2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">TCGv</name></type> <name pos:start="11:10" pos:end="11:13">tmp3</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">TCGv</name></type> <name pos:start="13:10" pos:end="13:13">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">TCGv_i64</name></type> <name pos:start="15:14" pos:end="15:18">tmp64</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:51"><expr pos:start="19:5" pos:end="19:50"><name pos:start="19:5" pos:end="19:8">insn</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:50"><name pos:start="19:12" pos:end="19:23">arm_ldl_code</name><argument_list pos:start="19:24" pos:end="19:50">(<argument pos:start="19:25" pos:end="19:27"><expr pos:start="19:25" pos:end="19:27"><name pos:start="19:25" pos:end="19:27">env</name></expr></argument>, <argument pos:start="19:30" pos:end="19:34"><expr pos:start="19:30" pos:end="19:34"><name pos:start="19:30" pos:end="19:34"><name pos:start="19:30" pos:end="19:30">s</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:34">pc</name></name></expr></argument>, <argument pos:start="19:37" pos:end="19:49"><expr pos:start="19:37" pos:end="19:49"><name pos:start="19:37" pos:end="19:49"><name pos:start="19:37" pos:end="19:37">s</name><operator pos:start="19:38" pos:end="19:39">-&gt;</operator><name pos:start="19:40" pos:end="19:49">bswap_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:15"><expr pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:9"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:9">pc</name></name> <operator pos:start="21:11" pos:end="21:12">+=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">4</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:48">/* M variants do not implement ARM mode.  */</comment>

    <if_stmt pos:start="27:5" pos:end="29:24"><if pos:start="27:5" pos:end="29:24">if <condition pos:start="27:8" pos:end="27:18">(<expr pos:start="27:9" pos:end="27:17"><call pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:12">IS_M</name><argument_list pos:start="27:13" pos:end="27:17">(<argument pos:start="27:14" pos:end="27:16"><expr pos:start="27:14" pos:end="27:16"><name pos:start="27:14" pos:end="27:16">env</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:24"><block_content pos:start="29:9" pos:end="29:24">

        <goto pos:start="29:9" pos:end="29:24">goto <name pos:start="29:14" pos:end="29:23">illegal_op</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:22"><expr pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:8">cond</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <name pos:start="31:12" pos:end="31:15">insn</name> <operator pos:start="31:17" pos:end="31:18">&gt;&gt;</operator> <literal type="number" pos:start="31:20" pos:end="31:21">28</literal></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="375:5"><if pos:start="33:5" pos:end="375:5">if <condition pos:start="33:8" pos:end="33:20">(<expr pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:12">cond</name> <operator pos:start="33:14" pos:end="33:15">==</operator> <literal type="number" pos:start="33:17" pos:end="33:19">0xf</literal></expr>)</condition><block pos:start="33:21" pos:end="375:5">{<block_content pos:start="43:9" pos:end="373:24">

        <comment type="block" pos:start="35:9" pos:end="41:11">/* In ARMv3 and v4 the NV condition is UNPREDICTABLE; we

         * choose to UNDEF. In ARMv5 and above the space is used

         * for miscellaneous unconditional instructions.

         */</comment>

        <expr_stmt pos:start="43:9" pos:end="43:16"><expr pos:start="43:9" pos:end="43:15"><call pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:12">ARCH</name><argument_list pos:start="43:13" pos:end="43:15">(<argument pos:start="43:14" pos:end="43:14"><expr pos:start="43:14" pos:end="43:14"><literal type="number" pos:start="43:14" pos:end="43:14">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="47:9" pos:end="47:42">/* Unconditional instructions.  */</comment>

        <if_stmt pos:start="49:9" pos:end="64:9"><if pos:start="49:9" pos:end="64:9">if <condition pos:start="49:12" pos:end="49:36">(<expr pos:start="49:13" pos:end="49:35"><operator pos:start="49:13" pos:end="49:13">(</operator><operator pos:start="49:14" pos:end="49:14">(</operator><name pos:start="49:15" pos:end="49:18">insn</name> <operator pos:start="49:20" pos:end="49:21">&gt;&gt;</operator> <literal type="number" pos:start="49:23" pos:end="49:24">25</literal><operator pos:start="49:25" pos:end="49:25">)</operator> <operator pos:start="49:27" pos:end="49:27">&amp;</operator> <literal type="number" pos:start="49:29" pos:end="49:29">7</literal><operator pos:start="49:30" pos:end="49:30">)</operator> <operator pos:start="49:32" pos:end="49:33">==</operator> <literal type="number" pos:start="49:35" pos:end="49:35">1</literal></expr>)</condition> <block pos:start="49:38" pos:end="64:9">{<block_content pos:start="53:13" pos:end="61:32">

            <comment type="block" pos:start="51:13" pos:end="51:40">/* NEON Data processing.  */</comment>

            <if_stmt pos:start="53:13" pos:end="55:32"><if pos:start="53:13" pos:end="55:32">if <condition pos:start="53:16" pos:end="53:52">(<expr pos:start="53:17" pos:end="53:51"><operator pos:start="53:17" pos:end="53:17">!</operator><call pos:start="53:18" pos:end="53:51"><name pos:start="53:18" pos:end="53:28">arm_feature</name><argument_list pos:start="53:29" pos:end="53:51">(<argument pos:start="53:30" pos:end="53:32"><expr pos:start="53:30" pos:end="53:32"><name pos:start="53:30" pos:end="53:32">env</name></expr></argument>, <argument pos:start="53:35" pos:end="53:50"><expr pos:start="53:35" pos:end="53:50"><name pos:start="53:35" pos:end="53:50">ARM_FEATURE_NEON</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:32"><block_content pos:start="55:17" pos:end="55:32">

                <goto pos:start="55:17" pos:end="55:32">goto <name pos:start="55:22" pos:end="55:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>



            <if_stmt pos:start="59:13" pos:end="61:32"><if pos:start="59:13" pos:end="61:32">if <condition pos:start="59:16" pos:end="59:51">(<expr pos:start="59:17" pos:end="59:50"><call pos:start="59:17" pos:end="59:50"><name pos:start="59:17" pos:end="59:36">disas_neon_data_insn</name><argument_list pos:start="59:37" pos:end="59:50">(<argument pos:start="59:38" pos:end="59:40"><expr pos:start="59:38" pos:end="59:40"><name pos:start="59:38" pos:end="59:40">env</name></expr></argument>, <argument pos:start="59:43" pos:end="59:43"><expr pos:start="59:43" pos:end="59:43"><name pos:start="59:43" pos:end="59:43">s</name></expr></argument>, <argument pos:start="59:46" pos:end="59:49"><expr pos:start="59:46" pos:end="59:49"><name pos:start="59:46" pos:end="59:49">insn</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:32"><block_content pos:start="61:17" pos:end="61:32">

                <goto pos:start="61:17" pos:end="61:32">goto <name pos:start="61:22" pos:end="61:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>


        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="66:9" pos:end="81:9"><if pos:start="66:9" pos:end="81:9">if <condition pos:start="66:12" pos:end="66:46">(<expr pos:start="66:13" pos:end="66:45"><operator pos:start="66:13" pos:end="66:13">(</operator><name pos:start="66:14" pos:end="66:17">insn</name> <operator pos:start="66:19" pos:end="66:19">&amp;</operator> <literal type="number" pos:start="66:21" pos:end="66:30">0x0f100000</literal><operator pos:start="66:31" pos:end="66:31">)</operator> <operator pos:start="66:33" pos:end="66:34">==</operator> <literal type="number" pos:start="66:36" pos:end="66:45">0x04000000</literal></expr>)</condition> <block pos:start="66:48" pos:end="81:9">{<block_content pos:start="70:13" pos:end="78:32">

            <comment type="block" pos:start="68:13" pos:end="68:35">/* NEON load/store.  */</comment>

            <if_stmt pos:start="70:13" pos:end="72:32"><if pos:start="70:13" pos:end="72:32">if <condition pos:start="70:16" pos:end="70:52">(<expr pos:start="70:17" pos:end="70:51"><operator pos:start="70:17" pos:end="70:17">!</operator><call pos:start="70:18" pos:end="70:51"><name pos:start="70:18" pos:end="70:28">arm_feature</name><argument_list pos:start="70:29" pos:end="70:51">(<argument pos:start="70:30" pos:end="70:32"><expr pos:start="70:30" pos:end="70:32"><name pos:start="70:30" pos:end="70:32">env</name></expr></argument>, <argument pos:start="70:35" pos:end="70:50"><expr pos:start="70:35" pos:end="70:50"><name pos:start="70:35" pos:end="70:50">ARM_FEATURE_NEON</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="72:17" pos:end="72:32"><block_content pos:start="72:17" pos:end="72:32">

                <goto pos:start="72:17" pos:end="72:32">goto <name pos:start="72:22" pos:end="72:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>



            <if_stmt pos:start="76:13" pos:end="78:32"><if pos:start="76:13" pos:end="78:32">if <condition pos:start="76:16" pos:end="76:49">(<expr pos:start="76:17" pos:end="76:48"><call pos:start="76:17" pos:end="76:48"><name pos:start="76:17" pos:end="76:34">disas_neon_ls_insn</name><argument_list pos:start="76:35" pos:end="76:48">(<argument pos:start="76:36" pos:end="76:38"><expr pos:start="76:36" pos:end="76:38"><name pos:start="76:36" pos:end="76:38">env</name></expr></argument>, <argument pos:start="76:41" pos:end="76:41"><expr pos:start="76:41" pos:end="76:41"><name pos:start="76:41" pos:end="76:41">s</name></expr></argument>, <argument pos:start="76:44" pos:end="76:47"><expr pos:start="76:44" pos:end="76:47"><name pos:start="76:44" pos:end="76:47">insn</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="78:17" pos:end="78:32"><block_content pos:start="78:17" pos:end="78:32">

                <goto pos:start="78:17" pos:end="78:32">goto <name pos:start="78:22" pos:end="78:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>


        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="83:9" pos:end="104:9"><if pos:start="83:9" pos:end="104:9">if <condition pos:start="83:12" pos:end="85:48">(<expr pos:start="83:13" pos:end="85:47"><operator pos:start="83:13" pos:end="83:13">(</operator><operator pos:start="83:14" pos:end="83:14">(</operator><name pos:start="83:15" pos:end="83:18">insn</name> <operator pos:start="83:20" pos:end="83:20">&amp;</operator> <literal type="number" pos:start="83:22" pos:end="83:31">0x0f30f000</literal><operator pos:start="83:32" pos:end="83:32">)</operator> <operator pos:start="83:34" pos:end="83:35">==</operator> <literal type="number" pos:start="83:37" pos:end="83:46">0x0510f000</literal><operator pos:start="83:47" pos:end="83:47">)</operator> <operator pos:start="83:49" pos:end="83:50">||</operator>

            <operator pos:start="85:13" pos:end="85:13">(</operator><operator pos:start="85:14" pos:end="85:14">(</operator><name pos:start="85:15" pos:end="85:18">insn</name> <operator pos:start="85:20" pos:end="85:20">&amp;</operator> <literal type="number" pos:start="85:22" pos:end="85:31">0x0f30f010</literal><operator pos:start="85:32" pos:end="85:32">)</operator> <operator pos:start="85:34" pos:end="85:35">==</operator> <literal type="number" pos:start="85:37" pos:end="85:46">0x0710f000</literal><operator pos:start="85:47" pos:end="85:47">)</operator></expr>)</condition> <block pos:start="85:50" pos:end="104:9">{<block_content pos:start="87:13" pos:end="101:22">

            <if_stmt pos:start="87:13" pos:end="97:13"><if pos:start="87:13" pos:end="97:13">if <condition pos:start="87:16" pos:end="87:40">(<expr pos:start="87:17" pos:end="87:39"><operator pos:start="87:17" pos:end="87:17">(</operator><name pos:start="87:18" pos:end="87:21">insn</name> <operator pos:start="87:23" pos:end="87:23">&amp;</operator> <operator pos:start="87:25" pos:end="87:25">(</operator><literal type="number" pos:start="87:26" pos:end="87:26">1</literal> <operator pos:start="87:28" pos:end="87:29">&lt;&lt;</operator> <literal type="number" pos:start="87:31" pos:end="87:32">22</literal><operator pos:start="87:33" pos:end="87:33">)</operator><operator pos:start="87:34" pos:end="87:34">)</operator> <operator pos:start="87:36" pos:end="87:37">==</operator> <literal type="number" pos:start="87:39" pos:end="87:39">0</literal></expr>)</condition> <block pos:start="87:42" pos:end="97:13">{<block_content pos:start="91:17" pos:end="95:17">

                <comment type="block" pos:start="89:17" pos:end="89:32">/* PLDW; v7MP */</comment>

                <if_stmt pos:start="91:17" pos:end="95:17"><if pos:start="91:17" pos:end="95:17">if <condition pos:start="91:20" pos:end="91:56">(<expr pos:start="91:21" pos:end="91:55"><operator pos:start="91:21" pos:end="91:21">!</operator><call pos:start="91:22" pos:end="91:55"><name pos:start="91:22" pos:end="91:32">arm_feature</name><argument_list pos:start="91:33" pos:end="91:55">(<argument pos:start="91:34" pos:end="91:36"><expr pos:start="91:34" pos:end="91:36"><name pos:start="91:34" pos:end="91:36">env</name></expr></argument>, <argument pos:start="91:39" pos:end="91:54"><expr pos:start="91:39" pos:end="91:54"><name pos:start="91:39" pos:end="91:54">ARM_FEATURE_V7MP</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="91:58" pos:end="95:17">{<block_content pos:start="93:21" pos:end="93:36">

                    <goto pos:start="93:21" pos:end="93:36">goto <name pos:start="93:26" pos:end="93:35">illegal_op</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="99:13" pos:end="99:38">/* Otherwise PLD; v5TE+ */</comment>

            <expr_stmt pos:start="101:13" pos:end="101:22"><expr pos:start="101:13" pos:end="101:21"><call pos:start="101:13" pos:end="101:21"><name pos:start="101:13" pos:end="101:16">ARCH</name><argument_list pos:start="101:17" pos:end="101:21">(<argument pos:start="101:18" pos:end="101:20"><expr pos:start="101:18" pos:end="101:20"><literal type="number" pos:start="101:18" pos:end="101:20">5TE</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="106:9" pos:end="114:9"><if pos:start="106:9" pos:end="114:9">if <condition pos:start="106:12" pos:end="108:48">(<expr pos:start="106:13" pos:end="108:47"><operator pos:start="106:13" pos:end="106:13">(</operator><operator pos:start="106:14" pos:end="106:14">(</operator><name pos:start="106:15" pos:end="106:18">insn</name> <operator pos:start="106:20" pos:end="106:20">&amp;</operator> <literal type="number" pos:start="106:22" pos:end="106:31">0x0f70f000</literal><operator pos:start="106:32" pos:end="106:32">)</operator> <operator pos:start="106:34" pos:end="106:35">==</operator> <literal type="number" pos:start="106:37" pos:end="106:46">0x0450f000</literal><operator pos:start="106:47" pos:end="106:47">)</operator> <operator pos:start="106:49" pos:end="106:50">||</operator>

            <operator pos:start="108:13" pos:end="108:13">(</operator><operator pos:start="108:14" pos:end="108:14">(</operator><name pos:start="108:15" pos:end="108:18">insn</name> <operator pos:start="108:20" pos:end="108:20">&amp;</operator> <literal type="number" pos:start="108:22" pos:end="108:31">0x0f70f010</literal><operator pos:start="108:32" pos:end="108:32">)</operator> <operator pos:start="108:34" pos:end="108:35">==</operator> <literal type="number" pos:start="108:37" pos:end="108:46">0x0650f000</literal><operator pos:start="108:47" pos:end="108:47">)</operator></expr>)</condition> <block pos:start="108:50" pos:end="114:9">{<block_content pos:start="110:13" pos:end="112:19">

            <expr_stmt pos:start="110:13" pos:end="110:20"><expr pos:start="110:13" pos:end="110:19"><call pos:start="110:13" pos:end="110:19"><name pos:start="110:13" pos:end="110:16">ARCH</name><argument_list pos:start="110:17" pos:end="110:19">(<argument pos:start="110:18" pos:end="110:18"><expr pos:start="110:18" pos:end="110:18"><literal type="number" pos:start="110:18" pos:end="110:18">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="112:13" pos:end="112:19">return;</return> <comment type="block" pos:start="112:21" pos:end="112:33">/* PLI; V7 */</comment>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="116:9" pos:end="128:9"><if pos:start="116:9" pos:end="128:9">if <condition pos:start="116:12" pos:end="118:48">(<expr pos:start="116:13" pos:end="118:47"><operator pos:start="116:13" pos:end="116:13">(</operator><operator pos:start="116:14" pos:end="116:14">(</operator><name pos:start="116:15" pos:end="116:18">insn</name> <operator pos:start="116:20" pos:end="116:20">&amp;</operator> <literal type="number" pos:start="116:22" pos:end="116:31">0x0f700000</literal><operator pos:start="116:32" pos:end="116:32">)</operator> <operator pos:start="116:34" pos:end="116:35">==</operator> <literal type="number" pos:start="116:37" pos:end="116:46">0x04100000</literal><operator pos:start="116:47" pos:end="116:47">)</operator> <operator pos:start="116:49" pos:end="116:50">||</operator>

            <operator pos:start="118:13" pos:end="118:13">(</operator><operator pos:start="118:14" pos:end="118:14">(</operator><name pos:start="118:15" pos:end="118:18">insn</name> <operator pos:start="118:20" pos:end="118:20">&amp;</operator> <literal type="number" pos:start="118:22" pos:end="118:31">0x0f700010</literal><operator pos:start="118:32" pos:end="118:32">)</operator> <operator pos:start="118:34" pos:end="118:35">==</operator> <literal type="number" pos:start="118:37" pos:end="118:46">0x06100000</literal><operator pos:start="118:47" pos:end="118:47">)</operator></expr>)</condition> <block pos:start="118:50" pos:end="128:9">{<block_content pos:start="120:13" pos:end="126:19">

            <if_stmt pos:start="120:13" pos:end="124:13"><if pos:start="120:13" pos:end="124:13">if <condition pos:start="120:16" pos:end="120:52">(<expr pos:start="120:17" pos:end="120:51"><operator pos:start="120:17" pos:end="120:17">!</operator><call pos:start="120:18" pos:end="120:51"><name pos:start="120:18" pos:end="120:28">arm_feature</name><argument_list pos:start="120:29" pos:end="120:51">(<argument pos:start="120:30" pos:end="120:32"><expr pos:start="120:30" pos:end="120:32"><name pos:start="120:30" pos:end="120:32">env</name></expr></argument>, <argument pos:start="120:35" pos:end="120:50"><expr pos:start="120:35" pos:end="120:50"><name pos:start="120:35" pos:end="120:50">ARM_FEATURE_V7MP</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="120:54" pos:end="124:13">{<block_content pos:start="122:17" pos:end="122:32">

                <goto pos:start="122:17" pos:end="122:32">goto <name pos:start="122:22" pos:end="122:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <return pos:start="126:13" pos:end="126:19">return;</return> <comment type="block" pos:start="126:21" pos:end="126:65">/* v7MP: Unallocated memory hint: must NOP */</comment>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="132:9" pos:end="371:9"><if pos:start="132:9" pos:end="147:9">if <condition pos:start="132:12" pos:end="132:46">(<expr pos:start="132:13" pos:end="132:45"><operator pos:start="132:13" pos:end="132:13">(</operator><name pos:start="132:14" pos:end="132:17">insn</name> <operator pos:start="132:19" pos:end="132:19">&amp;</operator> <literal type="number" pos:start="132:21" pos:end="132:30">0x0ffffdff</literal><operator pos:start="132:31" pos:end="132:31">)</operator> <operator pos:start="132:33" pos:end="132:34">==</operator> <literal type="number" pos:start="132:36" pos:end="132:45">0x01010000</literal></expr>)</condition> <block pos:start="132:48" pos:end="147:9">{<block_content pos:start="134:13" pos:end="144:13">

            <expr_stmt pos:start="134:13" pos:end="134:20"><expr pos:start="134:13" pos:end="134:19"><call pos:start="134:13" pos:end="134:19"><name pos:start="134:13" pos:end="134:16">ARCH</name><argument_list pos:start="134:17" pos:end="134:19">(<argument pos:start="134:18" pos:end="134:18"><expr pos:start="134:18" pos:end="134:18"><literal type="number" pos:start="134:18" pos:end="134:18">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="136:13" pos:end="136:24">/* setend */</comment>

            <if_stmt pos:start="138:13" pos:end="144:13"><if pos:start="138:13" pos:end="144:13">if <condition pos:start="138:16" pos:end="138:51">(<expr pos:start="138:17" pos:end="138:50"><operator pos:start="138:17" pos:end="138:17">(</operator><operator pos:start="138:18" pos:end="138:18">(</operator><name pos:start="138:19" pos:end="138:22">insn</name> <operator pos:start="138:24" pos:end="138:25">&gt;&gt;</operator> <literal type="number" pos:start="138:27" pos:end="138:27">9</literal><operator pos:start="138:28" pos:end="138:28">)</operator> <operator pos:start="138:30" pos:end="138:30">&amp;</operator> <literal type="number" pos:start="138:32" pos:end="138:32">1</literal><operator pos:start="138:33" pos:end="138:33">)</operator> <operator pos:start="138:35" pos:end="138:36">!=</operator> <name pos:start="138:38" pos:end="138:50"><name pos:start="138:38" pos:end="138:38">s</name><operator pos:start="138:39" pos:end="138:40">-&gt;</operator><name pos:start="138:41" pos:end="138:50">bswap_code</name></name></expr>)</condition> <block pos:start="138:53" pos:end="144:13">{<block_content pos:start="142:17" pos:end="142:32">

                <comment type="block" pos:start="140:17" pos:end="140:67">/* Dynamic endianness switching not implemented. */</comment>

                <goto pos:start="142:17" pos:end="142:32">goto <name pos:start="142:22" pos:end="142:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>


        </block_content>}</block></if> <if type="elseif" pos:start="147:11" pos:end="175:9">else if <condition pos:start="147:19" pos:end="147:53">(<expr pos:start="147:20" pos:end="147:52"><operator pos:start="147:20" pos:end="147:20">(</operator><name pos:start="147:21" pos:end="147:24">insn</name> <operator pos:start="147:26" pos:end="147:26">&amp;</operator> <literal type="number" pos:start="147:28" pos:end="147:37">0x0fffff00</literal><operator pos:start="147:38" pos:end="147:38">)</operator> <operator pos:start="147:40" pos:end="147:41">==</operator> <literal type="number" pos:start="147:43" pos:end="147:52">0x057ff000</literal></expr>)</condition> <block pos:start="147:55" pos:end="175:9">{<block_content pos:start="149:13" pos:end="173:13">

            <switch pos:start="149:13" pos:end="173:13">switch <condition pos:start="149:20" pos:end="149:38">(<expr pos:start="149:21" pos:end="149:37"><operator pos:start="149:21" pos:end="149:21">(</operator><name pos:start="149:22" pos:end="149:25">insn</name> <operator pos:start="149:27" pos:end="149:28">&gt;&gt;</operator> <literal type="number" pos:start="149:30" pos:end="149:30">4</literal><operator pos:start="149:31" pos:end="149:31">)</operator> <operator pos:start="149:33" pos:end="149:33">&amp;</operator> <literal type="number" pos:start="149:35" pos:end="149:37">0xf</literal></expr>)</condition> <block pos:start="149:40" pos:end="173:13">{<block_content pos:start="151:13" pos:end="171:32">

            <case pos:start="151:13" pos:end="151:19">case <expr pos:start="151:18" pos:end="151:18"><literal type="number" pos:start="151:18" pos:end="151:18">1</literal></expr>:</case> <comment type="block" pos:start="151:21" pos:end="151:31">/* clrex */</comment>

                <expr_stmt pos:start="153:17" pos:end="153:25"><expr pos:start="153:17" pos:end="153:24"><call pos:start="153:17" pos:end="153:24"><name pos:start="153:17" pos:end="153:20">ARCH</name><argument_list pos:start="153:21" pos:end="153:24">(<argument pos:start="153:22" pos:end="153:23"><expr pos:start="153:22" pos:end="153:23"><literal type="number" pos:start="153:22" pos:end="153:23">6K</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="155:17" pos:end="155:29"><expr pos:start="155:17" pos:end="155:28"><call pos:start="155:17" pos:end="155:28"><name pos:start="155:17" pos:end="155:25">gen_clrex</name><argument_list pos:start="155:26" pos:end="155:28">(<argument pos:start="155:27" pos:end="155:27"><expr pos:start="155:27" pos:end="155:27"><name pos:start="155:27" pos:end="155:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


            <case pos:start="158:13" pos:end="158:19">case <expr pos:start="158:18" pos:end="158:18"><literal type="number" pos:start="158:18" pos:end="158:18">4</literal></expr>:</case> <comment type="block" pos:start="158:21" pos:end="158:29">/* dsb */</comment>

            <case pos:start="160:13" pos:end="160:19">case <expr pos:start="160:18" pos:end="160:18"><literal type="number" pos:start="160:18" pos:end="160:18">5</literal></expr>:</case> <comment type="block" pos:start="160:21" pos:end="160:29">/* dmb */</comment>

            <case pos:start="162:13" pos:end="162:19">case <expr pos:start="162:18" pos:end="162:18"><literal type="number" pos:start="162:18" pos:end="162:18">6</literal></expr>:</case> <comment type="block" pos:start="162:21" pos:end="162:29">/* isb */</comment>

                <expr_stmt pos:start="164:17" pos:end="164:24"><expr pos:start="164:17" pos:end="164:23"><call pos:start="164:17" pos:end="164:23"><name pos:start="164:17" pos:end="164:20">ARCH</name><argument_list pos:start="164:21" pos:end="164:23">(<argument pos:start="164:22" pos:end="164:22"><expr pos:start="164:22" pos:end="164:22"><literal type="number" pos:start="164:22" pos:end="164:22">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="166:17" pos:end="166:68">/* We don't emulate caches so these are a no-op.  */</comment>


            <default pos:start="169:13" pos:end="169:20">default:</default>

                <goto pos:start="171:17" pos:end="171:32">goto <name pos:start="171:22" pos:end="171:31">illegal_op</name>;</goto>

            </block_content>}</block></switch>

        </block_content>}</block></if> <if type="elseif" pos:start="175:11" pos:end="190:9">else if <condition pos:start="175:19" pos:end="175:53">(<expr pos:start="175:20" pos:end="175:52"><operator pos:start="175:20" pos:end="175:20">(</operator><name pos:start="175:21" pos:end="175:24">insn</name> <operator pos:start="175:26" pos:end="175:26">&amp;</operator> <literal type="number" pos:start="175:28" pos:end="175:37">0x0e5fffe0</literal><operator pos:start="175:38" pos:end="175:38">)</operator> <operator pos:start="175:40" pos:end="175:41">==</operator> <literal type="number" pos:start="175:43" pos:end="175:52">0x084d0500</literal></expr>)</condition> <block pos:start="175:55" pos:end="190:9">{<block_content pos:start="179:13" pos:end="187:74">

            <comment type="block" pos:start="177:13" pos:end="177:21">/* srs */</comment>

            <if_stmt pos:start="179:13" pos:end="183:13"><if pos:start="179:13" pos:end="183:13">if <condition pos:start="179:16" pos:end="179:27">(<expr pos:start="179:17" pos:end="179:26"><call pos:start="179:17" pos:end="179:26"><name pos:start="179:17" pos:end="179:23">IS_USER</name><argument_list pos:start="179:24" pos:end="179:26">(<argument pos:start="179:25" pos:end="179:25"><expr pos:start="179:25" pos:end="179:25"><name pos:start="179:25" pos:end="179:25">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="179:29" pos:end="183:13">{<block_content pos:start="181:17" pos:end="181:32">

                <goto pos:start="181:17" pos:end="181:32">goto <name pos:start="181:22" pos:end="181:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:20"><expr pos:start="185:13" pos:end="185:19"><call pos:start="185:13" pos:end="185:19"><name pos:start="185:13" pos:end="185:16">ARCH</name><argument_list pos:start="185:17" pos:end="185:19">(<argument pos:start="185:18" pos:end="185:18"><expr pos:start="185:18" pos:end="185:18"><literal type="number" pos:start="185:18" pos:end="185:18">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:74"><expr pos:start="187:13" pos:end="187:73"><call pos:start="187:13" pos:end="187:73"><name pos:start="187:13" pos:end="187:19">gen_srs</name><argument_list pos:start="187:20" pos:end="187:73">(<argument pos:start="187:21" pos:end="187:21"><expr pos:start="187:21" pos:end="187:21"><name pos:start="187:21" pos:end="187:21">s</name></expr></argument>, <argument pos:start="187:24" pos:end="187:36"><expr pos:start="187:24" pos:end="187:36"><operator pos:start="187:24" pos:end="187:24">(</operator><name pos:start="187:25" pos:end="187:28">insn</name> <operator pos:start="187:30" pos:end="187:30">&amp;</operator> <literal type="number" pos:start="187:32" pos:end="187:35">0x1f</literal><operator pos:start="187:36" pos:end="187:36">)</operator></expr></argument>, <argument pos:start="187:39" pos:end="187:54"><expr pos:start="187:39" pos:end="187:54"><operator pos:start="187:39" pos:end="187:39">(</operator><name pos:start="187:40" pos:end="187:43">insn</name> <operator pos:start="187:45" pos:end="187:46">&gt;&gt;</operator> <literal type="number" pos:start="187:48" pos:end="187:49">23</literal><operator pos:start="187:50" pos:end="187:50">)</operator> <operator pos:start="187:52" pos:end="187:52">&amp;</operator> <literal type="number" pos:start="187:54" pos:end="187:54">3</literal></expr></argument>, <argument pos:start="187:57" pos:end="187:72"><expr pos:start="187:57" pos:end="187:72"><name pos:start="187:57" pos:end="187:60">insn</name> <operator pos:start="187:62" pos:end="187:62">&amp;</operator> <operator pos:start="187:64" pos:end="187:64">(</operator><literal type="number" pos:start="187:65" pos:end="187:65">1</literal> <operator pos:start="187:67" pos:end="187:68">&lt;&lt;</operator> <literal type="number" pos:start="187:70" pos:end="187:71">21</literal><operator pos:start="187:72" pos:end="187:72">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        </block_content>}</block></if> <if type="elseif" pos:start="190:11" pos:end="267:9">else if <condition pos:start="190:19" pos:end="190:53">(<expr pos:start="190:20" pos:end="190:52"><operator pos:start="190:20" pos:end="190:20">(</operator><name pos:start="190:21" pos:end="190:24">insn</name> <operator pos:start="190:26" pos:end="190:26">&amp;</operator> <literal type="number" pos:start="190:28" pos:end="190:37">0x0e50ffe0</literal><operator pos:start="190:38" pos:end="190:38">)</operator> <operator pos:start="190:40" pos:end="190:41">==</operator> <literal type="number" pos:start="190:43" pos:end="190:52">0x08100a00</literal></expr>)</condition> <block pos:start="190:55" pos:end="267:9">{<block_content pos:start="194:13" pos:end="264:34">

            <comment type="block" pos:start="192:13" pos:end="192:21">/* rfe */</comment>

            <decl_stmt pos:start="194:13" pos:end="194:27"><decl pos:start="194:13" pos:end="194:26"><type pos:start="194:13" pos:end="194:19"><name pos:start="194:13" pos:end="194:19">int32_t</name></type> <name pos:start="194:21" pos:end="194:26">offset</name></decl>;</decl_stmt>

            <if_stmt pos:start="196:13" pos:end="198:32"><if pos:start="196:13" pos:end="198:32">if <condition pos:start="196:16" pos:end="196:27">(<expr pos:start="196:17" pos:end="196:26"><call pos:start="196:17" pos:end="196:26"><name pos:start="196:17" pos:end="196:23">IS_USER</name><argument_list pos:start="196:24" pos:end="196:26">(<argument pos:start="196:25" pos:end="196:25"><expr pos:start="196:25" pos:end="196:25"><name pos:start="196:25" pos:end="196:25">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="198:17" pos:end="198:32"><block_content pos:start="198:17" pos:end="198:32">

                <goto pos:start="198:17" pos:end="198:32">goto <name pos:start="198:22" pos:end="198:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="200:13" pos:end="200:20"><expr pos:start="200:13" pos:end="200:19"><call pos:start="200:13" pos:end="200:19"><name pos:start="200:13" pos:end="200:16">ARCH</name><argument_list pos:start="200:17" pos:end="200:19">(<argument pos:start="200:18" pos:end="200:18"><expr pos:start="200:18" pos:end="200:18"><literal type="number" pos:start="200:18" pos:end="200:18">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="202:13" pos:end="202:36"><expr pos:start="202:13" pos:end="202:35"><name pos:start="202:13" pos:end="202:14">rn</name> <operator pos:start="202:16" pos:end="202:16">=</operator> <operator pos:start="202:18" pos:end="202:18">(</operator><name pos:start="202:19" pos:end="202:22">insn</name> <operator pos:start="202:24" pos:end="202:25">&gt;&gt;</operator> <literal type="number" pos:start="202:27" pos:end="202:28">16</literal><operator pos:start="202:29" pos:end="202:29">)</operator> <operator pos:start="202:31" pos:end="202:31">&amp;</operator> <literal type="number" pos:start="202:33" pos:end="202:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="204:13" pos:end="204:35"><expr pos:start="204:13" pos:end="204:34"><name pos:start="204:13" pos:end="204:16">addr</name> <operator pos:start="204:18" pos:end="204:18">=</operator> <call pos:start="204:20" pos:end="204:34"><name pos:start="204:20" pos:end="204:27">load_reg</name><argument_list pos:start="204:28" pos:end="204:34">(<argument pos:start="204:29" pos:end="204:29"><expr pos:start="204:29" pos:end="204:29"><name pos:start="204:29" pos:end="204:29">s</name></expr></argument>, <argument pos:start="204:32" pos:end="204:33"><expr pos:start="204:32" pos:end="204:33"><name pos:start="204:32" pos:end="204:33">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="206:13" pos:end="206:33"><expr pos:start="206:13" pos:end="206:32"><name pos:start="206:13" pos:end="206:13">i</name> <operator pos:start="206:15" pos:end="206:15">=</operator> <operator pos:start="206:17" pos:end="206:17">(</operator><name pos:start="206:18" pos:end="206:21">insn</name> <operator pos:start="206:23" pos:end="206:24">&gt;&gt;</operator> <literal type="number" pos:start="206:26" pos:end="206:27">23</literal><operator pos:start="206:28" pos:end="206:28">)</operator> <operator pos:start="206:30" pos:end="206:30">&amp;</operator> <literal type="number" pos:start="206:32" pos:end="206:32">3</literal></expr>;</expr_stmt>

            <switch pos:start="208:13" pos:end="220:13">switch <condition pos:start="208:20" pos:end="208:22">(<expr pos:start="208:21" pos:end="208:21"><name pos:start="208:21" pos:end="208:21">i</name></expr>)</condition> <block pos:start="208:24" pos:end="220:13">{<block_content pos:start="210:13" pos:end="218:29">

            <case pos:start="210:13" pos:end="210:19">case <expr pos:start="210:18" pos:end="210:18"><literal type="number" pos:start="210:18" pos:end="210:18">0</literal></expr>:</case> <expr_stmt pos:start="210:21" pos:end="210:32"><expr pos:start="210:21" pos:end="210:31"><name pos:start="210:21" pos:end="210:26">offset</name> <operator pos:start="210:28" pos:end="210:28">=</operator> <operator pos:start="210:30" pos:end="210:30">-</operator><literal type="number" pos:start="210:31" pos:end="210:31">4</literal></expr>;</expr_stmt> <break pos:start="210:34" pos:end="210:39">break;</break> <comment type="block" pos:start="210:41" pos:end="210:48">/* DA */</comment>

            <case pos:start="212:13" pos:end="212:19">case <expr pos:start="212:18" pos:end="212:18"><literal type="number" pos:start="212:18" pos:end="212:18">1</literal></expr>:</case> <expr_stmt pos:start="212:21" pos:end="212:31"><expr pos:start="212:21" pos:end="212:30"><name pos:start="212:21" pos:end="212:26">offset</name> <operator pos:start="212:28" pos:end="212:28">=</operator> <literal type="number" pos:start="212:30" pos:end="212:30">0</literal></expr>;</expr_stmt> <break pos:start="212:33" pos:end="212:38">break;</break> <comment type="block" pos:start="212:40" pos:end="212:47">/* IA */</comment>

            <case pos:start="214:13" pos:end="214:19">case <expr pos:start="214:18" pos:end="214:18"><literal type="number" pos:start="214:18" pos:end="214:18">2</literal></expr>:</case> <expr_stmt pos:start="214:21" pos:end="214:32"><expr pos:start="214:21" pos:end="214:31"><name pos:start="214:21" pos:end="214:26">offset</name> <operator pos:start="214:28" pos:end="214:28">=</operator> <operator pos:start="214:30" pos:end="214:30">-</operator><literal type="number" pos:start="214:31" pos:end="214:31">8</literal></expr>;</expr_stmt> <break pos:start="214:34" pos:end="214:39">break;</break> <comment type="block" pos:start="214:41" pos:end="214:48">/* DB */</comment>

            <case pos:start="216:13" pos:end="216:19">case <expr pos:start="216:18" pos:end="216:18"><literal type="number" pos:start="216:18" pos:end="216:18">3</literal></expr>:</case> <expr_stmt pos:start="216:21" pos:end="216:31"><expr pos:start="216:21" pos:end="216:30"><name pos:start="216:21" pos:end="216:26">offset</name> <operator pos:start="216:28" pos:end="216:28">=</operator> <literal type="number" pos:start="216:30" pos:end="216:30">4</literal></expr>;</expr_stmt> <break pos:start="216:33" pos:end="216:38">break;</break> <comment type="block" pos:start="216:40" pos:end="216:47">/* IB */</comment>

            <default pos:start="218:13" pos:end="218:20">default:</default> <expr_stmt pos:start="218:22" pos:end="218:29"><expr pos:start="218:22" pos:end="218:28"><call pos:start="218:22" pos:end="218:28"><name pos:start="218:22" pos:end="218:26">abort</name><argument_list pos:start="218:27" pos:end="218:28">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>

            <if_stmt pos:start="222:13" pos:end="224:53"><if pos:start="222:13" pos:end="224:53">if <condition pos:start="222:16" pos:end="222:23">(<expr pos:start="222:17" pos:end="222:22"><name pos:start="222:17" pos:end="222:22">offset</name></expr>)</condition><block type="pseudo" pos:start="224:17" pos:end="224:53"><block_content pos:start="224:17" pos:end="224:53">

                <expr_stmt pos:start="224:17" pos:end="224:53"><expr pos:start="224:17" pos:end="224:52"><call pos:start="224:17" pos:end="224:52"><name pos:start="224:17" pos:end="224:32">tcg_gen_addi_i32</name><argument_list pos:start="224:33" pos:end="224:52">(<argument pos:start="224:34" pos:end="224:37"><expr pos:start="224:34" pos:end="224:37"><name pos:start="224:34" pos:end="224:37">addr</name></expr></argument>, <argument pos:start="224:40" pos:end="224:43"><expr pos:start="224:40" pos:end="224:43"><name pos:start="224:40" pos:end="224:43">addr</name></expr></argument>, <argument pos:start="224:46" pos:end="224:51"><expr pos:start="224:46" pos:end="224:51"><name pos:start="224:46" pos:end="224:51">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <comment type="block" pos:start="226:13" pos:end="226:55">/* Load PC into tmp and CPSR into tmp2.  */</comment>

            <expr_stmt pos:start="228:13" pos:end="228:36"><expr pos:start="228:13" pos:end="228:35"><name pos:start="228:13" pos:end="228:15">tmp</name> <operator pos:start="228:17" pos:end="228:17">=</operator> <call pos:start="228:19" pos:end="228:35"><name pos:start="228:19" pos:end="228:26">gen_ld32</name><argument_list pos:start="228:27" pos:end="228:35">(<argument pos:start="228:28" pos:end="228:31"><expr pos:start="228:28" pos:end="228:31"><name pos:start="228:28" pos:end="228:31">addr</name></expr></argument>, <argument pos:start="228:34" pos:end="228:34"><expr pos:start="228:34" pos:end="228:34"><literal type="number" pos:start="228:34" pos:end="228:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="230:13" pos:end="230:44"><expr pos:start="230:13" pos:end="230:43"><call pos:start="230:13" pos:end="230:43"><name pos:start="230:13" pos:end="230:28">tcg_gen_addi_i32</name><argument_list pos:start="230:29" pos:end="230:43">(<argument pos:start="230:30" pos:end="230:33"><expr pos:start="230:30" pos:end="230:33"><name pos:start="230:30" pos:end="230:33">addr</name></expr></argument>, <argument pos:start="230:36" pos:end="230:39"><expr pos:start="230:36" pos:end="230:39"><name pos:start="230:36" pos:end="230:39">addr</name></expr></argument>, <argument pos:start="230:42" pos:end="230:42"><expr pos:start="230:42" pos:end="230:42"><literal type="number" pos:start="230:42" pos:end="230:42">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="232:13" pos:end="232:37"><expr pos:start="232:13" pos:end="232:36"><name pos:start="232:13" pos:end="232:16">tmp2</name> <operator pos:start="232:18" pos:end="232:18">=</operator> <call pos:start="232:20" pos:end="232:36"><name pos:start="232:20" pos:end="232:27">gen_ld32</name><argument_list pos:start="232:28" pos:end="232:36">(<argument pos:start="232:29" pos:end="232:32"><expr pos:start="232:29" pos:end="232:32"><name pos:start="232:29" pos:end="232:32">addr</name></expr></argument>, <argument pos:start="232:35" pos:end="232:35"><expr pos:start="232:35" pos:end="232:35"><literal type="number" pos:start="232:35" pos:end="232:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="234:13" pos:end="262:13"><if pos:start="234:13" pos:end="258:13">if <condition pos:start="234:16" pos:end="234:33">(<expr pos:start="234:17" pos:end="234:32"><name pos:start="234:17" pos:end="234:20">insn</name> <operator pos:start="234:22" pos:end="234:22">&amp;</operator> <operator pos:start="234:24" pos:end="234:24">(</operator><literal type="number" pos:start="234:25" pos:end="234:25">1</literal> <operator pos:start="234:27" pos:end="234:28">&lt;&lt;</operator> <literal type="number" pos:start="234:30" pos:end="234:31">21</literal><operator pos:start="234:32" pos:end="234:32">)</operator></expr>)</condition> <block pos:start="234:35" pos:end="258:13">{<block_content pos:start="238:17" pos:end="256:39">

                <comment type="block" pos:start="236:17" pos:end="236:38">/* Base writeback.  */</comment>

                <switch pos:start="238:17" pos:end="250:17">switch <condition pos:start="238:24" pos:end="238:26">(<expr pos:start="238:25" pos:end="238:25"><name pos:start="238:25" pos:end="238:25">i</name></expr>)</condition> <block pos:start="238:28" pos:end="250:17">{<block_content pos:start="240:17" pos:end="248:33">

                <case pos:start="240:17" pos:end="240:23">case <expr pos:start="240:22" pos:end="240:22"><literal type="number" pos:start="240:22" pos:end="240:22">0</literal></expr>:</case> <expr_stmt pos:start="240:25" pos:end="240:36"><expr pos:start="240:25" pos:end="240:35"><name pos:start="240:25" pos:end="240:30">offset</name> <operator pos:start="240:32" pos:end="240:32">=</operator> <operator pos:start="240:34" pos:end="240:34">-</operator><literal type="number" pos:start="240:35" pos:end="240:35">8</literal></expr>;</expr_stmt> <break pos:start="240:38" pos:end="240:43">break;</break>

                <case pos:start="242:17" pos:end="242:23">case <expr pos:start="242:22" pos:end="242:22"><literal type="number" pos:start="242:22" pos:end="242:22">1</literal></expr>:</case> <expr_stmt pos:start="242:25" pos:end="242:35"><expr pos:start="242:25" pos:end="242:34"><name pos:start="242:25" pos:end="242:30">offset</name> <operator pos:start="242:32" pos:end="242:32">=</operator> <literal type="number" pos:start="242:34" pos:end="242:34">4</literal></expr>;</expr_stmt> <break pos:start="242:37" pos:end="242:42">break;</break>

                <case pos:start="244:17" pos:end="244:23">case <expr pos:start="244:22" pos:end="244:22"><literal type="number" pos:start="244:22" pos:end="244:22">2</literal></expr>:</case> <expr_stmt pos:start="244:25" pos:end="244:36"><expr pos:start="244:25" pos:end="244:35"><name pos:start="244:25" pos:end="244:30">offset</name> <operator pos:start="244:32" pos:end="244:32">=</operator> <operator pos:start="244:34" pos:end="244:34">-</operator><literal type="number" pos:start="244:35" pos:end="244:35">4</literal></expr>;</expr_stmt> <break pos:start="244:38" pos:end="244:43">break;</break>

                <case pos:start="246:17" pos:end="246:23">case <expr pos:start="246:22" pos:end="246:22"><literal type="number" pos:start="246:22" pos:end="246:22">3</literal></expr>:</case> <expr_stmt pos:start="246:25" pos:end="246:35"><expr pos:start="246:25" pos:end="246:34"><name pos:start="246:25" pos:end="246:30">offset</name> <operator pos:start="246:32" pos:end="246:32">=</operator> <literal type="number" pos:start="246:34" pos:end="246:34">0</literal></expr>;</expr_stmt> <break pos:start="246:37" pos:end="246:42">break;</break>

                <default pos:start="248:17" pos:end="248:24">default:</default> <expr_stmt pos:start="248:26" pos:end="248:33"><expr pos:start="248:26" pos:end="248:32"><call pos:start="248:26" pos:end="248:32"><name pos:start="248:26" pos:end="248:30">abort</name><argument_list pos:start="248:31" pos:end="248:32">()</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></switch>

                <if_stmt pos:start="252:17" pos:end="254:57"><if pos:start="252:17" pos:end="254:57">if <condition pos:start="252:20" pos:end="252:27">(<expr pos:start="252:21" pos:end="252:26"><name pos:start="252:21" pos:end="252:26">offset</name></expr>)</condition><block type="pseudo" pos:start="254:21" pos:end="254:57"><block_content pos:start="254:21" pos:end="254:57">

                    <expr_stmt pos:start="254:21" pos:end="254:57"><expr pos:start="254:21" pos:end="254:56"><call pos:start="254:21" pos:end="254:56"><name pos:start="254:21" pos:end="254:36">tcg_gen_addi_i32</name><argument_list pos:start="254:37" pos:end="254:56">(<argument pos:start="254:38" pos:end="254:41"><expr pos:start="254:38" pos:end="254:41"><name pos:start="254:38" pos:end="254:41">addr</name></expr></argument>, <argument pos:start="254:44" pos:end="254:47"><expr pos:start="254:44" pos:end="254:47"><name pos:start="254:44" pos:end="254:47">addr</name></expr></argument>, <argument pos:start="254:50" pos:end="254:55"><expr pos:start="254:50" pos:end="254:55"><name pos:start="254:50" pos:end="254:55">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="256:17" pos:end="256:39"><expr pos:start="256:17" pos:end="256:38"><call pos:start="256:17" pos:end="256:38"><name pos:start="256:17" pos:end="256:25">store_reg</name><argument_list pos:start="256:26" pos:end="256:38">(<argument pos:start="256:27" pos:end="256:27"><expr pos:start="256:27" pos:end="256:27"><name pos:start="256:27" pos:end="256:27">s</name></expr></argument>, <argument pos:start="256:30" pos:end="256:31"><expr pos:start="256:30" pos:end="256:31"><name pos:start="256:30" pos:end="256:31">rn</name></expr></argument>, <argument pos:start="256:34" pos:end="256:37"><expr pos:start="256:34" pos:end="256:37"><name pos:start="256:34" pos:end="256:37">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="258:15" pos:end="262:13">else <block pos:start="258:20" pos:end="262:13">{<block_content pos:start="260:17" pos:end="260:40">

                <expr_stmt pos:start="260:17" pos:end="260:40"><expr pos:start="260:17" pos:end="260:39"><call pos:start="260:17" pos:end="260:39"><name pos:start="260:17" pos:end="260:33">tcg_temp_free_i32</name><argument_list pos:start="260:34" pos:end="260:39">(<argument pos:start="260:35" pos:end="260:38"><expr pos:start="260:35" pos:end="260:38"><name pos:start="260:35" pos:end="260:38">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="264:13" pos:end="264:34"><expr pos:start="264:13" pos:end="264:33"><call pos:start="264:13" pos:end="264:33"><name pos:start="264:13" pos:end="264:19">gen_rfe</name><argument_list pos:start="264:20" pos:end="264:33">(<argument pos:start="264:21" pos:end="264:21"><expr pos:start="264:21" pos:end="264:21"><name pos:start="264:21" pos:end="264:21">s</name></expr></argument>, <argument pos:start="264:24" pos:end="264:26"><expr pos:start="264:24" pos:end="264:26"><name pos:start="264:24" pos:end="264:26">tmp</name></expr></argument>, <argument pos:start="264:29" pos:end="264:32"><expr pos:start="264:29" pos:end="264:32"><name pos:start="264:29" pos:end="264:32">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        </block_content>}</block></if> <if type="elseif" pos:start="267:11" pos:end="300:9">else if <condition pos:start="267:19" pos:end="267:53">(<expr pos:start="267:20" pos:end="267:52"><operator pos:start="267:20" pos:end="267:20">(</operator><name pos:start="267:21" pos:end="267:24">insn</name> <operator pos:start="267:26" pos:end="267:26">&amp;</operator> <literal type="number" pos:start="267:28" pos:end="267:37">0x0e000000</literal><operator pos:start="267:38" pos:end="267:38">)</operator> <operator pos:start="267:40" pos:end="267:41">==</operator> <literal type="number" pos:start="267:43" pos:end="267:52">0x0a000000</literal></expr>)</condition> <block pos:start="267:55" pos:end="300:9">{<block_content pos:start="271:13" pos:end="297:30">

            <comment type="block" pos:start="269:13" pos:end="269:64">/* branch link and change to thumb (blx &lt;offset&gt;) */</comment>

            <decl_stmt pos:start="271:13" pos:end="271:27"><decl pos:start="271:13" pos:end="271:26"><type pos:start="271:13" pos:end="271:19"><name pos:start="271:13" pos:end="271:19">int32_t</name></type> <name pos:start="271:21" pos:end="271:26">offset</name></decl>;</decl_stmt>



            <expr_stmt pos:start="275:13" pos:end="275:34"><expr pos:start="275:13" pos:end="275:33"><name pos:start="275:13" pos:end="275:15">val</name> <operator pos:start="275:17" pos:end="275:17">=</operator> <operator pos:start="275:19" pos:end="275:19">(</operator><name pos:start="275:20" pos:end="275:27">uint32_t</name><operator pos:start="275:28" pos:end="275:28">)</operator><name pos:start="275:29" pos:end="275:33"><name pos:start="275:29" pos:end="275:29">s</name><operator pos:start="275:30" pos:end="275:31">-&gt;</operator><name pos:start="275:32" pos:end="275:33">pc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="277:13" pos:end="277:37"><expr pos:start="277:13" pos:end="277:36"><name pos:start="277:13" pos:end="277:15">tmp</name> <operator pos:start="277:17" pos:end="277:17">=</operator> <call pos:start="277:19" pos:end="277:36"><name pos:start="277:19" pos:end="277:34">tcg_temp_new_i32</name><argument_list pos:start="277:35" pos:end="277:36">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="279:13" pos:end="279:39"><expr pos:start="279:13" pos:end="279:38"><call pos:start="279:13" pos:end="279:38"><name pos:start="279:13" pos:end="279:28">tcg_gen_movi_i32</name><argument_list pos:start="279:29" pos:end="279:38">(<argument pos:start="279:30" pos:end="279:32"><expr pos:start="279:30" pos:end="279:32"><name pos:start="279:30" pos:end="279:32">tmp</name></expr></argument>, <argument pos:start="279:35" pos:end="279:37"><expr pos:start="279:35" pos:end="279:37"><name pos:start="279:35" pos:end="279:37">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="281:13" pos:end="281:34"><expr pos:start="281:13" pos:end="281:33"><call pos:start="281:13" pos:end="281:33"><name pos:start="281:13" pos:end="281:21">store_reg</name><argument_list pos:start="281:22" pos:end="281:33">(<argument pos:start="281:23" pos:end="281:23"><expr pos:start="281:23" pos:end="281:23"><name pos:start="281:23" pos:end="281:23">s</name></expr></argument>, <argument pos:start="281:26" pos:end="281:27"><expr pos:start="281:26" pos:end="281:27"><literal type="number" pos:start="281:26" pos:end="281:27">14</literal></expr></argument>, <argument pos:start="281:30" pos:end="281:32"><expr pos:start="281:30" pos:end="281:32"><name pos:start="281:30" pos:end="281:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="283:13" pos:end="283:47">/* Sign-extend the 24-bit offset */</comment>

            <expr_stmt pos:start="285:13" pos:end="285:49"><expr pos:start="285:13" pos:end="285:48"><name pos:start="285:13" pos:end="285:18">offset</name> <operator pos:start="285:20" pos:end="285:20">=</operator> <operator pos:start="285:22" pos:end="285:22">(</operator><operator pos:start="285:23" pos:end="285:23">(</operator><operator pos:start="285:24" pos:end="285:24">(</operator><name pos:start="285:25" pos:end="285:31">int32_t</name><operator pos:start="285:32" pos:end="285:32">)</operator><name pos:start="285:33" pos:end="285:36">insn</name><operator pos:start="285:37" pos:end="285:37">)</operator> <operator pos:start="285:39" pos:end="285:40">&lt;&lt;</operator> <literal type="number" pos:start="285:42" pos:end="285:42">8</literal><operator pos:start="285:43" pos:end="285:43">)</operator> <operator pos:start="285:45" pos:end="285:46">&gt;&gt;</operator> <literal type="number" pos:start="285:48" pos:end="285:48">8</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="287:13" pos:end="287:54">/* offset * 4 + bit24 * 2 + (thumb bit) */</comment>

            <expr_stmt pos:start="289:13" pos:end="289:58"><expr pos:start="289:13" pos:end="289:57"><name pos:start="289:13" pos:end="289:15">val</name> <operator pos:start="289:17" pos:end="289:18">+=</operator> <operator pos:start="289:20" pos:end="289:20">(</operator><name pos:start="289:21" pos:end="289:26">offset</name> <operator pos:start="289:28" pos:end="289:29">&lt;&lt;</operator> <literal type="number" pos:start="289:31" pos:end="289:31">2</literal><operator pos:start="289:32" pos:end="289:32">)</operator> <operator pos:start="289:34" pos:end="289:34">|</operator> <operator pos:start="289:36" pos:end="289:36">(</operator><operator pos:start="289:37" pos:end="289:37">(</operator><name pos:start="289:38" pos:end="289:41">insn</name> <operator pos:start="289:43" pos:end="289:44">&gt;&gt;</operator> <literal type="number" pos:start="289:46" pos:end="289:47">23</literal><operator pos:start="289:48" pos:end="289:48">)</operator> <operator pos:start="289:50" pos:end="289:50">&amp;</operator> <literal type="number" pos:start="289:52" pos:end="289:52">2</literal><operator pos:start="289:53" pos:end="289:53">)</operator> <operator pos:start="289:55" pos:end="289:55">|</operator> <literal type="number" pos:start="289:57" pos:end="289:57">1</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="291:13" pos:end="291:33">/* pipeline offset */</comment>

            <expr_stmt pos:start="293:13" pos:end="293:21"><expr pos:start="293:13" pos:end="293:20"><name pos:start="293:13" pos:end="293:15">val</name> <operator pos:start="293:17" pos:end="293:18">+=</operator> <literal type="number" pos:start="293:20" pos:end="293:20">4</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="295:13" pos:end="295:77">/* protected by ARCH(5); above, near the start of uncond block */</comment>

            <expr_stmt pos:start="297:13" pos:end="297:30"><expr pos:start="297:13" pos:end="297:29"><call pos:start="297:13" pos:end="297:29"><name pos:start="297:13" pos:end="297:21">gen_bx_im</name><argument_list pos:start="297:22" pos:end="297:29">(<argument pos:start="297:23" pos:end="297:23"><expr pos:start="297:23" pos:end="297:23"><name pos:start="297:23" pos:end="297:23">s</name></expr></argument>, <argument pos:start="297:26" pos:end="297:28"><expr pos:start="297:26" pos:end="297:28"><name pos:start="297:26" pos:end="297:28">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        </block_content>}</block></if> <if type="elseif" pos:start="300:11" pos:end="313:9">else if <condition pos:start="300:19" pos:end="300:53">(<expr pos:start="300:20" pos:end="300:52"><operator pos:start="300:20" pos:end="300:20">(</operator><name pos:start="300:21" pos:end="300:24">insn</name> <operator pos:start="300:26" pos:end="300:26">&amp;</operator> <literal type="number" pos:start="300:28" pos:end="300:37">0x0e000f00</literal><operator pos:start="300:38" pos:end="300:38">)</operator> <operator pos:start="300:40" pos:end="300:41">==</operator> <literal type="number" pos:start="300:43" pos:end="300:52">0x0c000100</literal></expr>)</condition> <block pos:start="300:55" pos:end="313:9">{<block_content pos:start="302:13" pos:end="311:13">

            <if_stmt pos:start="302:13" pos:end="311:13"><if pos:start="302:13" pos:end="311:13">if <condition pos:start="302:16" pos:end="302:53">(<expr pos:start="302:17" pos:end="302:52"><call pos:start="302:17" pos:end="302:52"><name pos:start="302:17" pos:end="302:27">arm_feature</name><argument_list pos:start="302:28" pos:end="302:52">(<argument pos:start="302:29" pos:end="302:31"><expr pos:start="302:29" pos:end="302:31"><name pos:start="302:29" pos:end="302:31">env</name></expr></argument>, <argument pos:start="302:34" pos:end="302:51"><expr pos:start="302:34" pos:end="302:51"><name pos:start="302:34" pos:end="302:51">ARM_FEATURE_IWMMXT</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="302:55" pos:end="311:13">{<block_content pos:start="306:17" pos:end="308:57">

                <comment type="block" pos:start="304:17" pos:end="304:48">/* iWMMXt register transfer.  */</comment>

                <if_stmt pos:start="306:17" pos:end="308:57"><if pos:start="306:17" pos:end="308:57">if <condition pos:start="306:20" pos:end="306:50">(<expr pos:start="306:21" pos:end="306:49"><name pos:start="306:21" pos:end="306:38"><name pos:start="306:21" pos:end="306:23">env</name><operator pos:start="306:24" pos:end="306:25">-&gt;</operator><name pos:start="306:26" pos:end="306:29">cp15</name><operator pos:start="306:30" pos:end="306:30">.</operator><name pos:start="306:31" pos:end="306:38">c15_cpar</name></name> <operator pos:start="306:40" pos:end="306:40">&amp;</operator> <operator pos:start="306:42" pos:end="306:42">(</operator><literal type="number" pos:start="306:43" pos:end="306:43">1</literal> <operator pos:start="306:45" pos:end="306:46">&lt;&lt;</operator> <literal type="number" pos:start="306:48" pos:end="306:48">1</literal><operator pos:start="306:49" pos:end="306:49">)</operator></expr>)</condition><block type="pseudo" pos:start="308:21" pos:end="308:57"><block_content pos:start="308:21" pos:end="308:57">

                    <if_stmt pos:start="308:21" pos:end="308:57"><if pos:start="308:21" pos:end="308:57">if <condition pos:start="308:24" pos:end="308:57">(<expr pos:start="308:25" pos:end="308:56"><operator pos:start="308:25" pos:end="308:25">!</operator><call pos:start="308:26" pos:end="308:56"><name pos:start="308:26" pos:end="308:42">disas_iwmmxt_insn</name><argument_list pos:start="308:43" pos:end="308:56">(<argument pos:start="308:44" pos:end="308:46"><expr pos:start="308:44" pos:end="308:46"><name pos:start="308:44" pos:end="308:46">env</name></expr></argument>, <argument pos:start="308:49" pos:end="308:49"><expr pos:start="308:49" pos:end="308:49"><name pos:start="308:49" pos:end="308:49">s</name></expr></argument>, <argument pos:start="308:52" pos:end="308:55"><expr pos:start="308:52" pos:end="308:55"><name pos:start="308:52" pos:end="308:55">insn</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content/></block></if></if_stmt></block_content></block></if></if_stmt>


            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="313:11" pos:end="319:9">else if <condition pos:start="313:19" pos:end="313:53">(<expr pos:start="313:20" pos:end="313:52"><operator pos:start="313:20" pos:end="313:20">(</operator><name pos:start="313:21" pos:end="313:24">insn</name> <operator pos:start="313:26" pos:end="313:26">&amp;</operator> <literal type="number" pos:start="313:28" pos:end="313:37">0x0fe00000</literal><operator pos:start="313:38" pos:end="313:38">)</operator> <operator pos:start="313:40" pos:end="313:41">==</operator> <literal type="number" pos:start="313:43" pos:end="313:52">0x0c400000</literal></expr>)</condition> <block pos:start="313:55" pos:end="319:9">{<block_content pos:start="317:13" pos:end="317:22">

            <comment type="block" pos:start="315:13" pos:end="315:56">/* Coprocessor double register transfer.  */</comment>

            <expr_stmt pos:start="317:13" pos:end="317:22"><expr pos:start="317:13" pos:end="317:21"><call pos:start="317:13" pos:end="317:21"><name pos:start="317:13" pos:end="317:16">ARCH</name><argument_list pos:start="317:17" pos:end="317:21">(<argument pos:start="317:18" pos:end="317:20"><expr pos:start="317:18" pos:end="317:20"><literal type="number" pos:start="317:18" pos:end="317:20">5TE</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="319:11" pos:end="323:9">else if <condition pos:start="319:19" pos:end="319:53">(<expr pos:start="319:20" pos:end="319:52"><operator pos:start="319:20" pos:end="319:20">(</operator><name pos:start="319:21" pos:end="319:24">insn</name> <operator pos:start="319:26" pos:end="319:26">&amp;</operator> <literal type="number" pos:start="319:28" pos:end="319:37">0x0f000010</literal><operator pos:start="319:38" pos:end="319:38">)</operator> <operator pos:start="319:40" pos:end="319:41">==</operator> <literal type="number" pos:start="319:43" pos:end="319:52">0x0e000010</literal></expr>)</condition> <block pos:start="319:55" pos:end="323:9">{<block_content>

            <comment type="block" pos:start="321:13" pos:end="321:60">/* Additional coprocessor register transfer.  */</comment>

        </block_content>}</block></if> <if type="elseif" pos:start="323:11" pos:end="371:9">else if <condition pos:start="323:19" pos:end="323:53">(<expr pos:start="323:20" pos:end="323:52"><operator pos:start="323:20" pos:end="323:20">(</operator><name pos:start="323:21" pos:end="323:24">insn</name> <operator pos:start="323:26" pos:end="323:26">&amp;</operator> <literal type="number" pos:start="323:28" pos:end="323:37">0x0ff10020</literal><operator pos:start="323:38" pos:end="323:38">)</operator> <operator pos:start="323:40" pos:end="323:41">==</operator> <literal type="number" pos:start="323:43" pos:end="323:52">0x01000000</literal></expr>)</condition> <block pos:start="323:55" pos:end="371:9">{<block_content pos:start="325:13" pos:end="368:13">

            <decl_stmt pos:start="325:13" pos:end="325:26"><decl pos:start="325:13" pos:end="325:25"><type pos:start="325:13" pos:end="325:20"><name pos:start="325:13" pos:end="325:20">uint32_t</name></type> <name pos:start="325:22" pos:end="325:25">mask</name></decl>;</decl_stmt>

            <decl_stmt pos:start="327:13" pos:end="327:25"><decl pos:start="327:13" pos:end="327:24"><type pos:start="327:13" pos:end="327:20"><name pos:start="327:13" pos:end="327:20">uint32_t</name></type> <name pos:start="327:22" pos:end="327:24">val</name></decl>;</decl_stmt>

            <comment type="block" pos:start="329:13" pos:end="329:34">/* cps (privileged) */</comment>

            <if_stmt pos:start="331:13" pos:end="334:27"><if pos:start="331:13" pos:end="334:27">if <condition pos:start="331:16" pos:end="331:27">(<expr pos:start="331:17" pos:end="331:26"><call pos:start="331:17" pos:end="331:26"><name pos:start="331:17" pos:end="331:23">IS_USER</name><argument_list pos:start="331:24" pos:end="331:26">(<argument pos:start="331:25" pos:end="331:25"><expr pos:start="331:25" pos:end="331:25"><name pos:start="331:25" pos:end="331:25">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="334:13" pos:end="334:27"><block_content pos:start="334:13" pos:end="334:27">


            <expr_stmt pos:start="334:13" pos:end="334:27"><expr pos:start="334:13" pos:end="334:26"><name pos:start="334:13" pos:end="334:16">mask</name> <operator pos:start="334:18" pos:end="334:18">=</operator> <name pos:start="334:20" pos:end="334:22">val</name> <operator pos:start="334:24" pos:end="334:24">=</operator> <literal type="number" pos:start="334:26" pos:end="334:26">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="336:13" pos:end="354:13"><if pos:start="336:13" pos:end="354:13">if <condition pos:start="336:16" pos:end="336:33">(<expr pos:start="336:17" pos:end="336:32"><name pos:start="336:17" pos:end="336:20">insn</name> <operator pos:start="336:22" pos:end="336:22">&amp;</operator> <operator pos:start="336:24" pos:end="336:24">(</operator><literal type="number" pos:start="336:25" pos:end="336:25">1</literal> <operator pos:start="336:27" pos:end="336:28">&lt;&lt;</operator> <literal type="number" pos:start="336:30" pos:end="336:31">19</literal><operator pos:start="336:32" pos:end="336:32">)</operator></expr>)</condition> <block pos:start="336:35" pos:end="354:13">{<block_content pos:start="338:17" pos:end="352:32">

                <if_stmt pos:start="338:17" pos:end="340:35"><if pos:start="338:17" pos:end="340:35">if <condition pos:start="338:20" pos:end="338:36">(<expr pos:start="338:21" pos:end="338:35"><name pos:start="338:21" pos:end="338:24">insn</name> <operator pos:start="338:26" pos:end="338:26">&amp;</operator> <operator pos:start="338:28" pos:end="338:28">(</operator><literal type="number" pos:start="338:29" pos:end="338:29">1</literal> <operator pos:start="338:31" pos:end="338:32">&lt;&lt;</operator> <literal type="number" pos:start="338:34" pos:end="338:34">8</literal><operator pos:start="338:35" pos:end="338:35">)</operator></expr>)</condition><block type="pseudo" pos:start="340:21" pos:end="340:35"><block_content pos:start="340:21" pos:end="340:35">

                    <expr_stmt pos:start="340:21" pos:end="340:35"><expr pos:start="340:21" pos:end="340:34"><name pos:start="340:21" pos:end="340:24">mask</name> <operator pos:start="340:26" pos:end="340:27">|=</operator> <name pos:start="340:29" pos:end="340:34">CPSR_A</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="342:17" pos:end="344:35"><if pos:start="342:17" pos:end="344:35">if <condition pos:start="342:20" pos:end="342:36">(<expr pos:start="342:21" pos:end="342:35"><name pos:start="342:21" pos:end="342:24">insn</name> <operator pos:start="342:26" pos:end="342:26">&amp;</operator> <operator pos:start="342:28" pos:end="342:28">(</operator><literal type="number" pos:start="342:29" pos:end="342:29">1</literal> <operator pos:start="342:31" pos:end="342:32">&lt;&lt;</operator> <literal type="number" pos:start="342:34" pos:end="342:34">7</literal><operator pos:start="342:35" pos:end="342:35">)</operator></expr>)</condition><block type="pseudo" pos:start="344:21" pos:end="344:35"><block_content pos:start="344:21" pos:end="344:35">

                    <expr_stmt pos:start="344:21" pos:end="344:35"><expr pos:start="344:21" pos:end="344:34"><name pos:start="344:21" pos:end="344:24">mask</name> <operator pos:start="344:26" pos:end="344:27">|=</operator> <name pos:start="344:29" pos:end="344:34">CPSR_I</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="346:17" pos:end="348:35"><if pos:start="346:17" pos:end="348:35">if <condition pos:start="346:20" pos:end="346:36">(<expr pos:start="346:21" pos:end="346:35"><name pos:start="346:21" pos:end="346:24">insn</name> <operator pos:start="346:26" pos:end="346:26">&amp;</operator> <operator pos:start="346:28" pos:end="346:28">(</operator><literal type="number" pos:start="346:29" pos:end="346:29">1</literal> <operator pos:start="346:31" pos:end="346:32">&lt;&lt;</operator> <literal type="number" pos:start="346:34" pos:end="346:34">6</literal><operator pos:start="346:35" pos:end="346:35">)</operator></expr>)</condition><block type="pseudo" pos:start="348:21" pos:end="348:35"><block_content pos:start="348:21" pos:end="348:35">

                    <expr_stmt pos:start="348:21" pos:end="348:35"><expr pos:start="348:21" pos:end="348:34"><name pos:start="348:21" pos:end="348:24">mask</name> <operator pos:start="348:26" pos:end="348:27">|=</operator> <name pos:start="348:29" pos:end="348:34">CPSR_F</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="350:17" pos:end="352:32"><if pos:start="350:17" pos:end="352:32">if <condition pos:start="350:20" pos:end="350:37">(<expr pos:start="350:21" pos:end="350:36"><name pos:start="350:21" pos:end="350:24">insn</name> <operator pos:start="350:26" pos:end="350:26">&amp;</operator> <operator pos:start="350:28" pos:end="350:28">(</operator><literal type="number" pos:start="350:29" pos:end="350:29">1</literal> <operator pos:start="350:31" pos:end="350:32">&lt;&lt;</operator> <literal type="number" pos:start="350:34" pos:end="350:35">18</literal><operator pos:start="350:36" pos:end="350:36">)</operator></expr>)</condition><block type="pseudo" pos:start="352:21" pos:end="352:32"><block_content pos:start="352:21" pos:end="352:32">

                    <expr_stmt pos:start="352:21" pos:end="352:32"><expr pos:start="352:21" pos:end="352:31"><name pos:start="352:21" pos:end="352:23">val</name> <operator pos:start="352:25" pos:end="352:26">|=</operator> <name pos:start="352:28" pos:end="352:31">mask</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="356:13" pos:end="362:13"><if pos:start="356:13" pos:end="362:13">if <condition pos:start="356:16" pos:end="356:33">(<expr pos:start="356:17" pos:end="356:32"><name pos:start="356:17" pos:end="356:20">insn</name> <operator pos:start="356:22" pos:end="356:22">&amp;</operator> <operator pos:start="356:24" pos:end="356:24">(</operator><literal type="number" pos:start="356:25" pos:end="356:25">1</literal> <operator pos:start="356:27" pos:end="356:28">&lt;&lt;</operator> <literal type="number" pos:start="356:30" pos:end="356:31">17</literal><operator pos:start="356:32" pos:end="356:32">)</operator></expr>)</condition> <block pos:start="356:35" pos:end="362:13">{<block_content pos:start="358:17" pos:end="360:37">

                <expr_stmt pos:start="358:17" pos:end="358:31"><expr pos:start="358:17" pos:end="358:30"><name pos:start="358:17" pos:end="358:20">mask</name> <operator pos:start="358:22" pos:end="358:23">|=</operator> <name pos:start="358:25" pos:end="358:30">CPSR_M</name></expr>;</expr_stmt>

                <expr_stmt pos:start="360:17" pos:end="360:37"><expr pos:start="360:17" pos:end="360:36"><name pos:start="360:17" pos:end="360:19">val</name> <operator pos:start="360:21" pos:end="360:22">|=</operator> <operator pos:start="360:24" pos:end="360:24">(</operator><name pos:start="360:25" pos:end="360:28">insn</name> <operator pos:start="360:30" pos:end="360:30">&amp;</operator> <literal type="number" pos:start="360:32" pos:end="360:35">0x1f</literal><operator pos:start="360:36" pos:end="360:36">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="364:13" pos:end="368:13"><if pos:start="364:13" pos:end="368:13">if <condition pos:start="364:16" pos:end="364:21">(<expr pos:start="364:17" pos:end="364:20"><name pos:start="364:17" pos:end="364:20">mask</name></expr>)</condition> <block pos:start="364:23" pos:end="368:13">{<block_content pos:start="366:17" pos:end="366:48">

                <expr_stmt pos:start="366:17" pos:end="366:48"><expr pos:start="366:17" pos:end="366:47"><call pos:start="366:17" pos:end="366:47"><name pos:start="366:17" pos:end="366:30">gen_set_psr_im</name><argument_list pos:start="366:31" pos:end="366:47">(<argument pos:start="366:32" pos:end="366:32"><expr pos:start="366:32" pos:end="366:32"><name pos:start="366:32" pos:end="366:32">s</name></expr></argument>, <argument pos:start="366:35" pos:end="366:38"><expr pos:start="366:35" pos:end="366:38"><name pos:start="366:35" pos:end="366:38">mask</name></expr></argument>, <argument pos:start="366:41" pos:end="366:41"><expr pos:start="366:41" pos:end="366:41"><literal type="number" pos:start="366:41" pos:end="366:41">0</literal></expr></argument>, <argument pos:start="366:44" pos:end="366:46"><expr pos:start="366:44" pos:end="366:46"><name pos:start="366:44" pos:end="366:46">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>


        </block_content>}</block></if></if_stmt>

        <goto pos:start="373:9" pos:end="373:24">goto <name pos:start="373:14" pos:end="373:23">illegal_op</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="377:5" pos:end="389:5"><if pos:start="377:5" pos:end="389:5">if <condition pos:start="377:8" pos:end="377:20">(<expr pos:start="377:9" pos:end="377:19"><name pos:start="377:9" pos:end="377:12">cond</name> <operator pos:start="377:14" pos:end="377:15">!=</operator> <literal type="number" pos:start="377:17" pos:end="377:19">0xe</literal></expr>)</condition> <block pos:start="377:22" pos:end="389:5">{<block_content pos:start="383:9" pos:end="387:23">

        <comment type="block" pos:start="379:9" pos:end="381:30">/* if not always execute, we generate a conditional jump to

           next instruction */</comment>

        <expr_stmt pos:start="383:9" pos:end="383:39"><expr pos:start="383:9" pos:end="383:38"><name pos:start="383:9" pos:end="383:20"><name pos:start="383:9" pos:end="383:9">s</name><operator pos:start="383:10" pos:end="383:11">-&gt;</operator><name pos:start="383:12" pos:end="383:20">condlabel</name></name> <operator pos:start="383:22" pos:end="383:22">=</operator> <call pos:start="383:24" pos:end="383:38"><name pos:start="383:24" pos:end="383:36">gen_new_label</name><argument_list pos:start="383:37" pos:end="383:38">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="385:9" pos:end="385:44"><expr pos:start="385:9" pos:end="385:43"><call pos:start="385:9" pos:end="385:43"><name pos:start="385:9" pos:end="385:19">gen_test_cc</name><argument_list pos:start="385:20" pos:end="385:43">(<argument pos:start="385:21" pos:end="385:28"><expr pos:start="385:21" pos:end="385:28"><name pos:start="385:21" pos:end="385:24">cond</name> <operator pos:start="385:26" pos:end="385:26">^</operator> <literal type="number" pos:start="385:28" pos:end="385:28">1</literal></expr></argument>, <argument pos:start="385:31" pos:end="385:42"><expr pos:start="385:31" pos:end="385:42"><name pos:start="385:31" pos:end="385:42"><name pos:start="385:31" pos:end="385:31">s</name><operator pos:start="385:32" pos:end="385:33">-&gt;</operator><name pos:start="385:34" pos:end="385:42">condlabel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="387:9" pos:end="387:23"><expr pos:start="387:9" pos:end="387:22"><name pos:start="387:9" pos:end="387:18"><name pos:start="387:9" pos:end="387:9">s</name><operator pos:start="387:10" pos:end="387:11">-&gt;</operator><name pos:start="387:12" pos:end="387:18">condjmp</name></name> <operator pos:start="387:20" pos:end="387:20">=</operator> <literal type="number" pos:start="387:22" pos:end="387:22">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="391:5" pos:end="2513:5"><if pos:start="391:5" pos:end="455:5">if <condition pos:start="391:8" pos:end="391:42">(<expr pos:start="391:9" pos:end="391:41"><operator pos:start="391:9" pos:end="391:9">(</operator><name pos:start="391:10" pos:end="391:13">insn</name> <operator pos:start="391:15" pos:end="391:15">&amp;</operator> <literal type="number" pos:start="391:17" pos:end="391:26">0x0f900000</literal><operator pos:start="391:27" pos:end="391:27">)</operator> <operator pos:start="391:29" pos:end="391:30">==</operator> <literal type="number" pos:start="391:32" pos:end="391:41">0x03000000</literal></expr>)</condition> <block pos:start="391:44" pos:end="455:5">{<block_content pos:start="393:9" pos:end="453:9">

        <if_stmt pos:start="393:9" pos:end="453:9"><if pos:start="393:9" pos:end="423:9">if <condition pos:start="393:12" pos:end="393:36">(<expr pos:start="393:13" pos:end="393:35"><operator pos:start="393:13" pos:end="393:13">(</operator><name pos:start="393:14" pos:end="393:17">insn</name> <operator pos:start="393:19" pos:end="393:19">&amp;</operator> <operator pos:start="393:21" pos:end="393:21">(</operator><literal type="number" pos:start="393:22" pos:end="393:22">1</literal> <operator pos:start="393:24" pos:end="393:25">&lt;&lt;</operator> <literal type="number" pos:start="393:27" pos:end="393:28">21</literal><operator pos:start="393:29" pos:end="393:29">)</operator><operator pos:start="393:30" pos:end="393:30">)</operator> <operator pos:start="393:32" pos:end="393:33">==</operator> <literal type="number" pos:start="393:35" pos:end="393:35">0</literal></expr>)</condition> <block pos:start="393:38" pos:end="423:9">{<block_content pos:start="395:13" pos:end="421:34">

            <expr_stmt pos:start="395:13" pos:end="395:22"><expr pos:start="395:13" pos:end="395:21"><call pos:start="395:13" pos:end="395:21"><name pos:start="395:13" pos:end="395:16">ARCH</name><argument_list pos:start="395:17" pos:end="395:21">(<argument pos:start="395:18" pos:end="395:20"><expr pos:start="395:18" pos:end="395:20"><literal type="number" pos:start="395:18" pos:end="395:20">6T2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="397:13" pos:end="397:36"><expr pos:start="397:13" pos:end="397:35"><name pos:start="397:13" pos:end="397:14">rd</name> <operator pos:start="397:16" pos:end="397:16">=</operator> <operator pos:start="397:18" pos:end="397:18">(</operator><name pos:start="397:19" pos:end="397:22">insn</name> <operator pos:start="397:24" pos:end="397:25">&gt;&gt;</operator> <literal type="number" pos:start="397:27" pos:end="397:28">12</literal><operator pos:start="397:29" pos:end="397:29">)</operator> <operator pos:start="397:31" pos:end="397:31">&amp;</operator> <literal type="number" pos:start="397:33" pos:end="397:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="399:13" pos:end="399:58"><expr pos:start="399:13" pos:end="399:57"><name pos:start="399:13" pos:end="399:15">val</name> <operator pos:start="399:17" pos:end="399:17">=</operator> <operator pos:start="399:19" pos:end="399:19">(</operator><operator pos:start="399:20" pos:end="399:20">(</operator><name pos:start="399:21" pos:end="399:24">insn</name> <operator pos:start="399:26" pos:end="399:27">&gt;&gt;</operator> <literal type="number" pos:start="399:29" pos:end="399:29">4</literal><operator pos:start="399:30" pos:end="399:30">)</operator> <operator pos:start="399:32" pos:end="399:32">&amp;</operator> <literal type="number" pos:start="399:34" pos:end="399:39">0xf000</literal><operator pos:start="399:40" pos:end="399:40">)</operator> <operator pos:start="399:42" pos:end="399:42">|</operator> <operator pos:start="399:44" pos:end="399:44">(</operator><name pos:start="399:45" pos:end="399:48">insn</name> <operator pos:start="399:50" pos:end="399:50">&amp;</operator> <literal type="number" pos:start="399:52" pos:end="399:56">0xfff</literal><operator pos:start="399:57" pos:end="399:57">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="401:13" pos:end="419:13"><if pos:start="401:13" pos:end="409:13">if <condition pos:start="401:16" pos:end="401:40">(<expr pos:start="401:17" pos:end="401:39"><operator pos:start="401:17" pos:end="401:17">(</operator><name pos:start="401:18" pos:end="401:21">insn</name> <operator pos:start="401:23" pos:end="401:23">&amp;</operator> <operator pos:start="401:25" pos:end="401:25">(</operator><literal type="number" pos:start="401:26" pos:end="401:26">1</literal> <operator pos:start="401:28" pos:end="401:29">&lt;&lt;</operator> <literal type="number" pos:start="401:31" pos:end="401:32">22</literal><operator pos:start="401:33" pos:end="401:33">)</operator><operator pos:start="401:34" pos:end="401:34">)</operator> <operator pos:start="401:36" pos:end="401:37">==</operator> <literal type="number" pos:start="401:39" pos:end="401:39">0</literal></expr>)</condition> <block pos:start="401:42" pos:end="409:13">{<block_content pos:start="405:17" pos:end="407:43">

                <comment type="block" pos:start="403:17" pos:end="403:26">/* MOVW */</comment>

                <expr_stmt pos:start="405:17" pos:end="405:41"><expr pos:start="405:17" pos:end="405:40"><name pos:start="405:17" pos:end="405:19">tmp</name> <operator pos:start="405:21" pos:end="405:21">=</operator> <call pos:start="405:23" pos:end="405:40"><name pos:start="405:23" pos:end="405:38">tcg_temp_new_i32</name><argument_list pos:start="405:39" pos:end="405:40">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="407:17" pos:end="407:43"><expr pos:start="407:17" pos:end="407:42"><call pos:start="407:17" pos:end="407:42"><name pos:start="407:17" pos:end="407:32">tcg_gen_movi_i32</name><argument_list pos:start="407:33" pos:end="407:42">(<argument pos:start="407:34" pos:end="407:36"><expr pos:start="407:34" pos:end="407:36"><name pos:start="407:34" pos:end="407:36">tmp</name></expr></argument>, <argument pos:start="407:39" pos:end="407:41"><expr pos:start="407:39" pos:end="407:41"><name pos:start="407:39" pos:end="407:41">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="409:15" pos:end="419:13">else <block pos:start="409:20" pos:end="419:13">{<block_content pos:start="413:17" pos:end="417:53">

                <comment type="block" pos:start="411:17" pos:end="411:26">/* MOVT */</comment>

                <expr_stmt pos:start="413:17" pos:end="413:38"><expr pos:start="413:17" pos:end="413:37"><name pos:start="413:17" pos:end="413:19">tmp</name> <operator pos:start="413:21" pos:end="413:21">=</operator> <call pos:start="413:23" pos:end="413:37"><name pos:start="413:23" pos:end="413:30">load_reg</name><argument_list pos:start="413:31" pos:end="413:37">(<argument pos:start="413:32" pos:end="413:32"><expr pos:start="413:32" pos:end="413:32"><name pos:start="413:32" pos:end="413:32">s</name></expr></argument>, <argument pos:start="413:35" pos:end="413:36"><expr pos:start="413:35" pos:end="413:36"><name pos:start="413:35" pos:end="413:36">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="415:17" pos:end="415:45"><expr pos:start="415:17" pos:end="415:44"><call pos:start="415:17" pos:end="415:44"><name pos:start="415:17" pos:end="415:34">tcg_gen_ext16u_i32</name><argument_list pos:start="415:35" pos:end="415:44">(<argument pos:start="415:36" pos:end="415:38"><expr pos:start="415:36" pos:end="415:38"><name pos:start="415:36" pos:end="415:38">tmp</name></expr></argument>, <argument pos:start="415:41" pos:end="415:43"><expr pos:start="415:41" pos:end="415:43"><name pos:start="415:41" pos:end="415:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="417:17" pos:end="417:53"><expr pos:start="417:17" pos:end="417:52"><call pos:start="417:17" pos:end="417:52"><name pos:start="417:17" pos:end="417:31">tcg_gen_ori_i32</name><argument_list pos:start="417:32" pos:end="417:52">(<argument pos:start="417:33" pos:end="417:35"><expr pos:start="417:33" pos:end="417:35"><name pos:start="417:33" pos:end="417:35">tmp</name></expr></argument>, <argument pos:start="417:38" pos:end="417:40"><expr pos:start="417:38" pos:end="417:40"><name pos:start="417:38" pos:end="417:40">tmp</name></expr></argument>, <argument pos:start="417:43" pos:end="417:51"><expr pos:start="417:43" pos:end="417:51"><name pos:start="417:43" pos:end="417:45">val</name> <operator pos:start="417:47" pos:end="417:48">&lt;&lt;</operator> <literal type="number" pos:start="417:50" pos:end="417:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="421:13" pos:end="421:34"><expr pos:start="421:13" pos:end="421:33"><call pos:start="421:13" pos:end="421:33"><name pos:start="421:13" pos:end="421:21">store_reg</name><argument_list pos:start="421:22" pos:end="421:33">(<argument pos:start="421:23" pos:end="421:23"><expr pos:start="421:23" pos:end="421:23"><name pos:start="421:23" pos:end="421:23">s</name></expr></argument>, <argument pos:start="421:26" pos:end="421:27"><expr pos:start="421:26" pos:end="421:27"><name pos:start="421:26" pos:end="421:27">rd</name></expr></argument>, <argument pos:start="421:30" pos:end="421:32"><expr pos:start="421:30" pos:end="421:32"><name pos:start="421:30" pos:end="421:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="423:11" pos:end="453:9">else <block pos:start="423:16" pos:end="453:9">{<block_content pos:start="425:13" pos:end="451:13">

            <if_stmt pos:start="425:13" pos:end="427:32"><if pos:start="425:13" pos:end="427:32">if <condition pos:start="425:16" pos:end="425:44">(<expr pos:start="425:17" pos:end="425:43"><operator pos:start="425:17" pos:end="425:17">(</operator><operator pos:start="425:18" pos:end="425:18">(</operator><name pos:start="425:19" pos:end="425:22">insn</name> <operator pos:start="425:24" pos:end="425:25">&gt;&gt;</operator> <literal type="number" pos:start="425:27" pos:end="425:28">12</literal><operator pos:start="425:29" pos:end="425:29">)</operator> <operator pos:start="425:31" pos:end="425:31">&amp;</operator> <literal type="number" pos:start="425:33" pos:end="425:35">0xf</literal><operator pos:start="425:36" pos:end="425:36">)</operator> <operator pos:start="425:38" pos:end="425:39">!=</operator> <literal type="number" pos:start="425:41" pos:end="425:43">0xf</literal></expr>)</condition><block type="pseudo" pos:start="427:17" pos:end="427:32"><block_content pos:start="427:17" pos:end="427:32">

                <goto pos:start="427:17" pos:end="427:32">goto <name pos:start="427:22" pos:end="427:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="429:13" pos:end="451:13"><if pos:start="429:13" pos:end="433:13">if <condition pos:start="429:16" pos:end="429:42">(<expr pos:start="429:17" pos:end="429:41"><operator pos:start="429:17" pos:end="429:17">(</operator><operator pos:start="429:18" pos:end="429:18">(</operator><name pos:start="429:19" pos:end="429:22">insn</name> <operator pos:start="429:24" pos:end="429:25">&gt;&gt;</operator> <literal type="number" pos:start="429:27" pos:end="429:28">16</literal><operator pos:start="429:29" pos:end="429:29">)</operator> <operator pos:start="429:31" pos:end="429:31">&amp;</operator> <literal type="number" pos:start="429:33" pos:end="429:35">0xf</literal><operator pos:start="429:36" pos:end="429:36">)</operator> <operator pos:start="429:38" pos:end="429:39">==</operator> <literal type="number" pos:start="429:41" pos:end="429:41">0</literal></expr>)</condition> <block pos:start="429:44" pos:end="433:13">{<block_content pos:start="431:17" pos:end="431:45">

                <expr_stmt pos:start="431:17" pos:end="431:45"><expr pos:start="431:17" pos:end="431:44"><call pos:start="431:17" pos:end="431:44"><name pos:start="431:17" pos:end="431:28">gen_nop_hint</name><argument_list pos:start="431:29" pos:end="431:44">(<argument pos:start="431:30" pos:end="431:30"><expr pos:start="431:30" pos:end="431:30"><name pos:start="431:30" pos:end="431:30">s</name></expr></argument>, <argument pos:start="431:33" pos:end="431:43"><expr pos:start="431:33" pos:end="431:43"><name pos:start="431:33" pos:end="431:36">insn</name> <operator pos:start="431:38" pos:end="431:38">&amp;</operator> <literal type="number" pos:start="431:40" pos:end="431:43">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="433:15" pos:end="451:13">else <block pos:start="433:20" pos:end="451:13">{<block_content pos:start="437:17" pos:end="449:36">

                <comment type="block" pos:start="435:17" pos:end="435:38">/* CPSR = immediate */</comment>

                <expr_stmt pos:start="437:17" pos:end="437:34"><expr pos:start="437:17" pos:end="437:33"><name pos:start="437:17" pos:end="437:19">val</name> <operator pos:start="437:21" pos:end="437:21">=</operator> <name pos:start="437:23" pos:end="437:26">insn</name> <operator pos:start="437:28" pos:end="437:28">&amp;</operator> <literal type="number" pos:start="437:30" pos:end="437:33">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="439:17" pos:end="439:48"><expr pos:start="439:17" pos:end="439:47"><name pos:start="439:17" pos:end="439:21">shift</name> <operator pos:start="439:23" pos:end="439:23">=</operator> <operator pos:start="439:25" pos:end="439:25">(</operator><operator pos:start="439:26" pos:end="439:26">(</operator><name pos:start="439:27" pos:end="439:30">insn</name> <operator pos:start="439:32" pos:end="439:33">&gt;&gt;</operator> <literal type="number" pos:start="439:35" pos:end="439:35">8</literal><operator pos:start="439:36" pos:end="439:36">)</operator> <operator pos:start="439:38" pos:end="439:38">&amp;</operator> <literal type="number" pos:start="439:40" pos:end="439:42">0xf</literal><operator pos:start="439:43" pos:end="439:43">)</operator> <operator pos:start="439:45" pos:end="439:45">*</operator> <literal type="number" pos:start="439:47" pos:end="439:47">2</literal></expr>;</expr_stmt>

                <if_stmt pos:start="441:17" pos:end="443:65"><if pos:start="441:17" pos:end="443:65">if <condition pos:start="441:20" pos:end="441:26">(<expr pos:start="441:21" pos:end="441:25"><name pos:start="441:21" pos:end="441:25">shift</name></expr>)</condition><block type="pseudo" pos:start="443:21" pos:end="443:65"><block_content pos:start="443:21" pos:end="443:65">

                    <expr_stmt pos:start="443:21" pos:end="443:65"><expr pos:start="443:21" pos:end="443:64"><name pos:start="443:21" pos:end="443:23">val</name> <operator pos:start="443:25" pos:end="443:25">=</operator> <operator pos:start="443:27" pos:end="443:27">(</operator><name pos:start="443:28" pos:end="443:30">val</name> <operator pos:start="443:32" pos:end="443:33">&gt;&gt;</operator> <name pos:start="443:35" pos:end="443:39">shift</name><operator pos:start="443:40" pos:end="443:40">)</operator> <operator pos:start="443:42" pos:end="443:42">|</operator> <operator pos:start="443:44" pos:end="443:44">(</operator><name pos:start="443:45" pos:end="443:47">val</name> <operator pos:start="443:49" pos:end="443:50">&lt;&lt;</operator> <operator pos:start="443:52" pos:end="443:52">(</operator><literal type="number" pos:start="443:53" pos:end="443:56">32</literal> <operator pos:start="443:56" pos:end="443:56">-</operator> <name pos:start="443:58" pos:end="443:62">shift</name><operator pos:start="443:63" pos:end="443:63">)</operator><operator pos:start="443:64" pos:end="443:64">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="445:17" pos:end="445:46"><expr pos:start="445:17" pos:end="445:45"><name pos:start="445:17" pos:end="445:17">i</name> <operator pos:start="445:19" pos:end="445:19">=</operator> <operator pos:start="445:21" pos:end="445:21">(</operator><operator pos:start="445:22" pos:end="445:22">(</operator><name pos:start="445:23" pos:end="445:26">insn</name> <operator pos:start="445:28" pos:end="445:28">&amp;</operator> <operator pos:start="445:30" pos:end="445:30">(</operator><literal type="number" pos:start="445:31" pos:end="445:31">1</literal> <operator pos:start="445:33" pos:end="445:34">&lt;&lt;</operator> <literal type="number" pos:start="445:36" pos:end="445:37">22</literal><operator pos:start="445:38" pos:end="445:38">)</operator><operator pos:start="445:39" pos:end="445:39">)</operator> <operator pos:start="445:41" pos:end="445:42">!=</operator> <literal type="number" pos:start="445:44" pos:end="445:44">0</literal><operator pos:start="445:45" pos:end="445:45">)</operator></expr>;</expr_stmt>

                <if_stmt pos:start="447:17" pos:end="449:36"><if pos:start="447:17" pos:end="449:36">if <condition pos:start="447:20" pos:end="447:87">(<expr pos:start="447:21" pos:end="447:86"><call pos:start="447:21" pos:end="447:86"><name pos:start="447:21" pos:end="447:34">gen_set_psr_im</name><argument_list pos:start="447:35" pos:end="447:86">(<argument pos:start="447:36" pos:end="447:36"><expr pos:start="447:36" pos:end="447:36"><name pos:start="447:36" pos:end="447:36">s</name></expr></argument>, <argument pos:start="447:39" pos:end="447:77"><expr pos:start="447:39" pos:end="447:77"><call pos:start="447:39" pos:end="447:77"><name pos:start="447:39" pos:end="447:46">msr_mask</name><argument_list pos:start="447:47" pos:end="447:77">(<argument pos:start="447:48" pos:end="447:50"><expr pos:start="447:48" pos:end="447:50"><name pos:start="447:48" pos:end="447:50">env</name></expr></argument>, <argument pos:start="447:53" pos:end="447:53"><expr pos:start="447:53" pos:end="447:53"><name pos:start="447:53" pos:end="447:53">s</name></expr></argument>, <argument pos:start="447:56" pos:end="447:73"><expr pos:start="447:56" pos:end="447:73"><operator pos:start="447:56" pos:end="447:56">(</operator><name pos:start="447:57" pos:end="447:60">insn</name> <operator pos:start="447:62" pos:end="447:63">&gt;&gt;</operator> <literal type="number" pos:start="447:65" pos:end="447:66">16</literal><operator pos:start="447:67" pos:end="447:67">)</operator> <operator pos:start="447:69" pos:end="447:69">&amp;</operator> <literal type="number" pos:start="447:71" pos:end="447:73">0xf</literal></expr></argument>, <argument pos:start="447:76" pos:end="447:76"><expr pos:start="447:76" pos:end="447:76"><name pos:start="447:76" pos:end="447:76">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="447:80" pos:end="447:80"><expr pos:start="447:80" pos:end="447:80"><name pos:start="447:80" pos:end="447:80">i</name></expr></argument>, <argument pos:start="447:83" pos:end="447:85"><expr pos:start="447:83" pos:end="447:85"><name pos:start="447:83" pos:end="447:85">val</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="449:21" pos:end="449:36"><block_content pos:start="449:21" pos:end="449:36">

                    <goto pos:start="449:21" pos:end="449:36">goto <name pos:start="449:26" pos:end="449:35">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="455:7" pos:end="747:5">else if <condition pos:start="455:15" pos:end="457:52">(<expr pos:start="455:16" pos:end="457:51"><operator pos:start="455:16" pos:end="455:16">(</operator><name pos:start="455:17" pos:end="455:20">insn</name> <operator pos:start="455:22" pos:end="455:22">&amp;</operator> <literal type="number" pos:start="455:24" pos:end="455:33">0x0f900000</literal><operator pos:start="455:34" pos:end="455:34">)</operator> <operator pos:start="455:36" pos:end="455:37">==</operator> <literal type="number" pos:start="455:39" pos:end="455:48">0x01000000</literal>

               <operator pos:start="457:16" pos:end="457:17">&amp;&amp;</operator> <operator pos:start="457:19" pos:end="457:19">(</operator><name pos:start="457:20" pos:end="457:23">insn</name> <operator pos:start="457:25" pos:end="457:25">&amp;</operator> <literal type="number" pos:start="457:27" pos:end="457:36">0x00000090</literal><operator pos:start="457:37" pos:end="457:37">)</operator> <operator pos:start="457:39" pos:end="457:40">!=</operator> <literal type="number" pos:start="457:42" pos:end="457:51">0x00000090</literal></expr>)</condition> <block pos:start="457:54" pos:end="747:5">{<block_content pos:start="461:9" pos:end="745:9">

        <comment type="block" pos:start="459:9" pos:end="459:40">/* miscellaneous instructions */</comment>

        <expr_stmt pos:start="461:9" pos:end="461:31"><expr pos:start="461:9" pos:end="461:30"><name pos:start="461:9" pos:end="461:11">op1</name> <operator pos:start="461:13" pos:end="461:13">=</operator> <operator pos:start="461:15" pos:end="461:15">(</operator><name pos:start="461:16" pos:end="461:19">insn</name> <operator pos:start="461:21" pos:end="461:22">&gt;&gt;</operator> <literal type="number" pos:start="461:24" pos:end="461:25">21</literal><operator pos:start="461:26" pos:end="461:26">)</operator> <operator pos:start="461:28" pos:end="461:28">&amp;</operator> <literal type="number" pos:start="461:30" pos:end="461:30">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="463:9" pos:end="463:31"><expr pos:start="463:9" pos:end="463:30"><name pos:start="463:9" pos:end="463:10">sh</name> <operator pos:start="463:12" pos:end="463:12">=</operator> <operator pos:start="463:14" pos:end="463:14">(</operator><name pos:start="463:15" pos:end="463:18">insn</name> <operator pos:start="463:20" pos:end="463:21">&gt;&gt;</operator> <literal type="number" pos:start="463:23" pos:end="463:23">4</literal><operator pos:start="463:24" pos:end="463:24">)</operator> <operator pos:start="463:26" pos:end="463:26">&amp;</operator> <literal type="number" pos:start="463:28" pos:end="463:30">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="465:9" pos:end="465:24"><expr pos:start="465:9" pos:end="465:23"><name pos:start="465:9" pos:end="465:10">rm</name> <operator pos:start="465:12" pos:end="465:12">=</operator> <name pos:start="465:14" pos:end="465:17">insn</name> <operator pos:start="465:19" pos:end="465:19">&amp;</operator> <literal type="number" pos:start="465:21" pos:end="465:23">0xf</literal></expr>;</expr_stmt>

        <switch pos:start="467:9" pos:end="745:9">switch <condition pos:start="467:16" pos:end="467:19">(<expr pos:start="467:17" pos:end="467:18"><name pos:start="467:17" pos:end="467:18">sh</name></expr>)</condition> <block pos:start="467:21" pos:end="745:9">{<block_content pos:start="469:9" pos:end="743:28">

        <case pos:start="469:9" pos:end="469:17">case <expr pos:start="469:14" pos:end="469:16"><literal type="number" pos:start="469:14" pos:end="469:16">0x0</literal></expr>:</case> <comment type="block" pos:start="469:19" pos:end="469:52">/* move program status register */</comment>

            <if_stmt pos:start="471:13" pos:end="507:13"><if pos:start="471:13" pos:end="483:13">if <condition pos:start="471:16" pos:end="471:24">(<expr pos:start="471:17" pos:end="471:23"><name pos:start="471:17" pos:end="471:19">op1</name> <operator pos:start="471:21" pos:end="471:21">&amp;</operator> <literal type="number" pos:start="471:23" pos:end="471:23">1</literal></expr>)</condition> <block pos:start="471:26" pos:end="483:13">{<block_content pos:start="475:17" pos:end="481:36">

                <comment type="block" pos:start="473:17" pos:end="473:31">/* PSR = reg */</comment>

                <expr_stmt pos:start="475:17" pos:end="475:38"><expr pos:start="475:17" pos:end="475:37"><name pos:start="475:17" pos:end="475:19">tmp</name> <operator pos:start="475:21" pos:end="475:21">=</operator> <call pos:start="475:23" pos:end="475:37"><name pos:start="475:23" pos:end="475:30">load_reg</name><argument_list pos:start="475:31" pos:end="475:37">(<argument pos:start="475:32" pos:end="475:32"><expr pos:start="475:32" pos:end="475:32"><name pos:start="475:32" pos:end="475:32">s</name></expr></argument>, <argument pos:start="475:35" pos:end="475:36"><expr pos:start="475:35" pos:end="475:36"><name pos:start="475:35" pos:end="475:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="477:17" pos:end="477:37"><expr pos:start="477:17" pos:end="477:36"><name pos:start="477:17" pos:end="477:17">i</name> <operator pos:start="477:19" pos:end="477:19">=</operator> <operator pos:start="477:21" pos:end="477:21">(</operator><operator pos:start="477:22" pos:end="477:22">(</operator><name pos:start="477:23" pos:end="477:25">op1</name> <operator pos:start="477:27" pos:end="477:27">&amp;</operator> <literal type="number" pos:start="477:29" pos:end="477:29">2</literal><operator pos:start="477:30" pos:end="477:30">)</operator> <operator pos:start="477:32" pos:end="477:33">!=</operator> <literal type="number" pos:start="477:35" pos:end="477:35">0</literal><operator pos:start="477:36" pos:end="477:36">)</operator></expr>;</expr_stmt>

                <if_stmt pos:start="479:17" pos:end="481:36"><if pos:start="479:17" pos:end="481:36">if <condition pos:start="479:20" pos:end="479:84">(<expr pos:start="479:21" pos:end="479:83"><call pos:start="479:21" pos:end="479:83"><name pos:start="479:21" pos:end="479:31">gen_set_psr</name><argument_list pos:start="479:32" pos:end="479:83">(<argument pos:start="479:33" pos:end="479:33"><expr pos:start="479:33" pos:end="479:33"><name pos:start="479:33" pos:end="479:33">s</name></expr></argument>, <argument pos:start="479:36" pos:end="479:74"><expr pos:start="479:36" pos:end="479:74"><call pos:start="479:36" pos:end="479:74"><name pos:start="479:36" pos:end="479:43">msr_mask</name><argument_list pos:start="479:44" pos:end="479:74">(<argument pos:start="479:45" pos:end="479:47"><expr pos:start="479:45" pos:end="479:47"><name pos:start="479:45" pos:end="479:47">env</name></expr></argument>, <argument pos:start="479:50" pos:end="479:50"><expr pos:start="479:50" pos:end="479:50"><name pos:start="479:50" pos:end="479:50">s</name></expr></argument>, <argument pos:start="479:53" pos:end="479:70"><expr pos:start="479:53" pos:end="479:70"><operator pos:start="479:53" pos:end="479:53">(</operator><name pos:start="479:54" pos:end="479:57">insn</name> <operator pos:start="479:59" pos:end="479:60">&gt;&gt;</operator> <literal type="number" pos:start="479:62" pos:end="479:63">16</literal><operator pos:start="479:64" pos:end="479:64">)</operator> <operator pos:start="479:66" pos:end="479:66">&amp;</operator> <literal type="number" pos:start="479:68" pos:end="479:70">0xf</literal></expr></argument>, <argument pos:start="479:73" pos:end="479:73"><expr pos:start="479:73" pos:end="479:73"><name pos:start="479:73" pos:end="479:73">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="479:77" pos:end="479:77"><expr pos:start="479:77" pos:end="479:77"><name pos:start="479:77" pos:end="479:77">i</name></expr></argument>, <argument pos:start="479:80" pos:end="479:82"><expr pos:start="479:80" pos:end="479:82"><name pos:start="479:80" pos:end="479:82">tmp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="481:21" pos:end="481:36"><block_content pos:start="481:21" pos:end="481:36">

                    <goto pos:start="481:21" pos:end="481:36">goto <name pos:start="481:26" pos:end="481:35">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="483:15" pos:end="507:13">else <block pos:start="483:20" pos:end="507:13">{<block_content pos:start="487:17" pos:end="505:38">

                <comment type="block" pos:start="485:17" pos:end="485:31">/* reg = PSR */</comment>

                <expr_stmt pos:start="487:17" pos:end="487:40"><expr pos:start="487:17" pos:end="487:39"><name pos:start="487:17" pos:end="487:18">rd</name> <operator pos:start="487:20" pos:end="487:20">=</operator> <operator pos:start="487:22" pos:end="487:22">(</operator><name pos:start="487:23" pos:end="487:26">insn</name> <operator pos:start="487:28" pos:end="487:29">&gt;&gt;</operator> <literal type="number" pos:start="487:31" pos:end="487:32">12</literal><operator pos:start="487:33" pos:end="487:33">)</operator> <operator pos:start="487:35" pos:end="487:35">&amp;</operator> <literal type="number" pos:start="487:37" pos:end="487:39">0xf</literal></expr>;</expr_stmt>

                <if_stmt pos:start="489:17" pos:end="503:17"><if pos:start="489:17" pos:end="497:17">if <condition pos:start="489:20" pos:end="489:28">(<expr pos:start="489:21" pos:end="489:27"><name pos:start="489:21" pos:end="489:23">op1</name> <operator pos:start="489:25" pos:end="489:25">&amp;</operator> <literal type="number" pos:start="489:27" pos:end="489:27">2</literal></expr>)</condition> <block pos:start="489:30" pos:end="497:17">{<block_content pos:start="491:21" pos:end="495:47">

                    <if_stmt pos:start="491:21" pos:end="493:40"><if pos:start="491:21" pos:end="493:40">if <condition pos:start="491:24" pos:end="491:35">(<expr pos:start="491:25" pos:end="491:34"><call pos:start="491:25" pos:end="491:34"><name pos:start="491:25" pos:end="491:31">IS_USER</name><argument_list pos:start="491:32" pos:end="491:34">(<argument pos:start="491:33" pos:end="491:33"><expr pos:start="491:33" pos:end="491:33"><name pos:start="491:33" pos:end="491:33">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="493:25" pos:end="493:40"><block_content pos:start="493:25" pos:end="493:40">

                        <goto pos:start="493:25" pos:end="493:40">goto <name pos:start="493:30" pos:end="493:39">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="495:21" pos:end="495:47"><expr pos:start="495:21" pos:end="495:46"><name pos:start="495:21" pos:end="495:23">tmp</name> <operator pos:start="495:25" pos:end="495:25">=</operator> <call pos:start="495:27" pos:end="495:46"><name pos:start="495:27" pos:end="495:40">load_cpu_field</name><argument_list pos:start="495:41" pos:end="495:46">(<argument pos:start="495:42" pos:end="495:45"><expr pos:start="495:42" pos:end="495:45"><name pos:start="495:42" pos:end="495:45">spsr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="497:19" pos:end="503:17">else <block pos:start="497:24" pos:end="503:17">{<block_content pos:start="499:21" pos:end="501:55">

                    <expr_stmt pos:start="499:21" pos:end="499:45"><expr pos:start="499:21" pos:end="499:44"><name pos:start="499:21" pos:end="499:23">tmp</name> <operator pos:start="499:25" pos:end="499:25">=</operator> <call pos:start="499:27" pos:end="499:44"><name pos:start="499:27" pos:end="499:42">tcg_temp_new_i32</name><argument_list pos:start="499:43" pos:end="499:44">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="501:21" pos:end="501:55"><expr pos:start="501:21" pos:end="501:54"><call pos:start="501:21" pos:end="501:54"><name pos:start="501:21" pos:end="501:40">gen_helper_cpsr_read</name><argument_list pos:start="501:41" pos:end="501:54">(<argument pos:start="501:42" pos:end="501:44"><expr pos:start="501:42" pos:end="501:44"><name pos:start="501:42" pos:end="501:44">tmp</name></expr></argument>, <argument pos:start="501:47" pos:end="501:53"><expr pos:start="501:47" pos:end="501:53"><name pos:start="501:47" pos:end="501:53">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="505:17" pos:end="505:38"><expr pos:start="505:17" pos:end="505:37"><call pos:start="505:17" pos:end="505:37"><name pos:start="505:17" pos:end="505:25">store_reg</name><argument_list pos:start="505:26" pos:end="505:37">(<argument pos:start="505:27" pos:end="505:27"><expr pos:start="505:27" pos:end="505:27"><name pos:start="505:27" pos:end="505:27">s</name></expr></argument>, <argument pos:start="505:30" pos:end="505:31"><expr pos:start="505:30" pos:end="505:31"><name pos:start="505:30" pos:end="505:31">rd</name></expr></argument>, <argument pos:start="505:34" pos:end="505:36"><expr pos:start="505:34" pos:end="505:36"><name pos:start="505:34" pos:end="505:36">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="509:13" pos:end="509:18">break;</break>

        <case pos:start="511:9" pos:end="511:17">case <expr pos:start="511:14" pos:end="511:16"><literal type="number" pos:start="511:14" pos:end="511:16">0x1</literal></expr>:</case>

            <if_stmt pos:start="513:13" pos:end="541:13"><if pos:start="513:13" pos:end="523:13">if <condition pos:start="513:16" pos:end="513:25">(<expr pos:start="513:17" pos:end="513:24"><name pos:start="513:17" pos:end="513:19">op1</name> <operator pos:start="513:21" pos:end="513:22">==</operator> <literal type="number" pos:start="513:24" pos:end="513:24">1</literal></expr>)</condition> <block pos:start="513:27" pos:end="523:13">{<block_content pos:start="517:17" pos:end="521:31">

                <comment type="block" pos:start="515:17" pos:end="515:50">/* branch/exchange thumb (bx).  */</comment>

                <expr_stmt pos:start="517:17" pos:end="517:25"><expr pos:start="517:17" pos:end="517:24"><call pos:start="517:17" pos:end="517:24"><name pos:start="517:17" pos:end="517:20">ARCH</name><argument_list pos:start="517:21" pos:end="517:24">(<argument pos:start="517:22" pos:end="517:23"><expr pos:start="517:22" pos:end="517:23"><literal type="number" pos:start="517:22" pos:end="517:23">4T</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="519:17" pos:end="519:38"><expr pos:start="519:17" pos:end="519:37"><name pos:start="519:17" pos:end="519:19">tmp</name> <operator pos:start="519:21" pos:end="519:21">=</operator> <call pos:start="519:23" pos:end="519:37"><name pos:start="519:23" pos:end="519:30">load_reg</name><argument_list pos:start="519:31" pos:end="519:37">(<argument pos:start="519:32" pos:end="519:32"><expr pos:start="519:32" pos:end="519:32"><name pos:start="519:32" pos:end="519:32">s</name></expr></argument>, <argument pos:start="519:35" pos:end="519:36"><expr pos:start="519:35" pos:end="519:36"><name pos:start="519:35" pos:end="519:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="521:17" pos:end="521:31"><expr pos:start="521:17" pos:end="521:30"><call pos:start="521:17" pos:end="521:30"><name pos:start="521:17" pos:end="521:22">gen_bx</name><argument_list pos:start="521:23" pos:end="521:30">(<argument pos:start="521:24" pos:end="521:24"><expr pos:start="521:24" pos:end="521:24"><name pos:start="521:24" pos:end="521:24">s</name></expr></argument>, <argument pos:start="521:27" pos:end="521:29"><expr pos:start="521:27" pos:end="521:29"><name pos:start="521:27" pos:end="521:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="523:15" pos:end="537:13">else if <condition pos:start="523:23" pos:end="523:32">(<expr pos:start="523:24" pos:end="523:31"><name pos:start="523:24" pos:end="523:26">op1</name> <operator pos:start="523:28" pos:end="523:29">==</operator> <literal type="number" pos:start="523:31" pos:end="523:31">3</literal></expr>)</condition> <block pos:start="523:34" pos:end="537:13">{<block_content pos:start="527:17" pos:end="535:38">

                <comment type="block" pos:start="525:17" pos:end="525:25">/* clz */</comment>

                <expr_stmt pos:start="527:17" pos:end="527:24"><expr pos:start="527:17" pos:end="527:23"><call pos:start="527:17" pos:end="527:23"><name pos:start="527:17" pos:end="527:20">ARCH</name><argument_list pos:start="527:21" pos:end="527:23">(<argument pos:start="527:22" pos:end="527:22"><expr pos:start="527:22" pos:end="527:22"><literal type="number" pos:start="527:22" pos:end="527:22">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="529:17" pos:end="529:40"><expr pos:start="529:17" pos:end="529:39"><name pos:start="529:17" pos:end="529:18">rd</name> <operator pos:start="529:20" pos:end="529:20">=</operator> <operator pos:start="529:22" pos:end="529:22">(</operator><name pos:start="529:23" pos:end="529:26">insn</name> <operator pos:start="529:28" pos:end="529:29">&gt;&gt;</operator> <literal type="number" pos:start="529:31" pos:end="529:32">12</literal><operator pos:start="529:33" pos:end="529:33">)</operator> <operator pos:start="529:35" pos:end="529:35">&amp;</operator> <literal type="number" pos:start="529:37" pos:end="529:39">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="531:17" pos:end="531:38"><expr pos:start="531:17" pos:end="531:37"><name pos:start="531:17" pos:end="531:19">tmp</name> <operator pos:start="531:21" pos:end="531:21">=</operator> <call pos:start="531:23" pos:end="531:37"><name pos:start="531:23" pos:end="531:30">load_reg</name><argument_list pos:start="531:31" pos:end="531:37">(<argument pos:start="531:32" pos:end="531:32"><expr pos:start="531:32" pos:end="531:32"><name pos:start="531:32" pos:end="531:32">s</name></expr></argument>, <argument pos:start="531:35" pos:end="531:36"><expr pos:start="531:35" pos:end="531:36"><name pos:start="531:35" pos:end="531:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="533:17" pos:end="533:41"><expr pos:start="533:17" pos:end="533:40"><call pos:start="533:17" pos:end="533:40"><name pos:start="533:17" pos:end="533:30">gen_helper_clz</name><argument_list pos:start="533:31" pos:end="533:40">(<argument pos:start="533:32" pos:end="533:34"><expr pos:start="533:32" pos:end="533:34"><name pos:start="533:32" pos:end="533:34">tmp</name></expr></argument>, <argument pos:start="533:37" pos:end="533:39"><expr pos:start="533:37" pos:end="533:39"><name pos:start="533:37" pos:end="533:39">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="535:17" pos:end="535:38"><expr pos:start="535:17" pos:end="535:37"><call pos:start="535:17" pos:end="535:37"><name pos:start="535:17" pos:end="535:25">store_reg</name><argument_list pos:start="535:26" pos:end="535:37">(<argument pos:start="535:27" pos:end="535:27"><expr pos:start="535:27" pos:end="535:27"><name pos:start="535:27" pos:end="535:27">s</name></expr></argument>, <argument pos:start="535:30" pos:end="535:31"><expr pos:start="535:30" pos:end="535:31"><name pos:start="535:30" pos:end="535:31">rd</name></expr></argument>, <argument pos:start="535:34" pos:end="535:36"><expr pos:start="535:34" pos:end="535:36"><name pos:start="535:34" pos:end="535:36">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="537:15" pos:end="541:13">else <block pos:start="537:20" pos:end="541:13">{<block_content pos:start="539:17" pos:end="539:32">

                <goto pos:start="539:17" pos:end="539:32">goto <name pos:start="539:22" pos:end="539:31">illegal_op</name>;</goto>

            </block_content>}</block></else></if_stmt>

            <break pos:start="543:13" pos:end="543:18">break;</break>

        <case pos:start="545:9" pos:end="545:17">case <expr pos:start="545:14" pos:end="545:16"><literal type="number" pos:start="545:14" pos:end="545:16">0x2</literal></expr>:</case>

            <if_stmt pos:start="547:13" pos:end="561:13"><if pos:start="547:13" pos:end="557:13">if <condition pos:start="547:16" pos:end="547:25">(<expr pos:start="547:17" pos:end="547:24"><name pos:start="547:17" pos:end="547:19">op1</name> <operator pos:start="547:21" pos:end="547:22">==</operator> <literal type="number" pos:start="547:24" pos:end="547:24">1</literal></expr>)</condition> <block pos:start="547:27" pos:end="557:13">{<block_content pos:start="549:17" pos:end="555:31">

                <expr_stmt pos:start="549:17" pos:end="549:25"><expr pos:start="549:17" pos:end="549:24"><call pos:start="549:17" pos:end="549:24"><name pos:start="549:17" pos:end="549:20">ARCH</name><argument_list pos:start="549:21" pos:end="549:24">(<argument pos:start="549:22" pos:end="549:23"><expr pos:start="549:22" pos:end="549:23"><literal type="number" pos:start="549:22" pos:end="549:23">5J</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="549:27" pos:end="549:35">/* bxj */</comment>

                <comment type="block" pos:start="551:17" pos:end="551:63">/* Trivial implementation equivalent to bx.  */</comment>

                <expr_stmt pos:start="553:17" pos:end="553:38"><expr pos:start="553:17" pos:end="553:37"><name pos:start="553:17" pos:end="553:19">tmp</name> <operator pos:start="553:21" pos:end="553:21">=</operator> <call pos:start="553:23" pos:end="553:37"><name pos:start="553:23" pos:end="553:30">load_reg</name><argument_list pos:start="553:31" pos:end="553:37">(<argument pos:start="553:32" pos:end="553:32"><expr pos:start="553:32" pos:end="553:32"><name pos:start="553:32" pos:end="553:32">s</name></expr></argument>, <argument pos:start="553:35" pos:end="553:36"><expr pos:start="553:35" pos:end="553:36"><name pos:start="553:35" pos:end="553:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="555:17" pos:end="555:31"><expr pos:start="555:17" pos:end="555:30"><call pos:start="555:17" pos:end="555:30"><name pos:start="555:17" pos:end="555:22">gen_bx</name><argument_list pos:start="555:23" pos:end="555:30">(<argument pos:start="555:24" pos:end="555:24"><expr pos:start="555:24" pos:end="555:24"><name pos:start="555:24" pos:end="555:24">s</name></expr></argument>, <argument pos:start="555:27" pos:end="555:29"><expr pos:start="555:27" pos:end="555:29"><name pos:start="555:27" pos:end="555:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="557:15" pos:end="561:13">else <block pos:start="557:20" pos:end="561:13">{<block_content pos:start="559:17" pos:end="559:32">

                <goto pos:start="559:17" pos:end="559:32">goto <name pos:start="559:22" pos:end="559:31">illegal_op</name>;</goto>

            </block_content>}</block></else></if_stmt>

            <break pos:start="563:13" pos:end="563:18">break;</break>

        <case pos:start="565:9" pos:end="565:17">case <expr pos:start="565:14" pos:end="565:16"><literal type="number" pos:start="565:14" pos:end="565:16">0x3</literal></expr>:</case>

            <if_stmt pos:start="567:13" pos:end="569:30"><if pos:start="567:13" pos:end="569:30">if <condition pos:start="567:16" pos:end="567:25">(<expr pos:start="567:17" pos:end="567:24"><name pos:start="567:17" pos:end="567:19">op1</name> <operator pos:start="567:21" pos:end="567:22">!=</operator> <literal type="number" pos:start="567:24" pos:end="567:24">1</literal></expr>)</condition><block type="pseudo" pos:start="569:15" pos:end="569:30"><block_content pos:start="569:15" pos:end="569:30">

              <goto pos:start="569:15" pos:end="569:30">goto <name pos:start="569:20" pos:end="569:29">illegal_op</name>;</goto></block_content></block></if></if_stmt>



            <expr_stmt pos:start="573:13" pos:end="573:20"><expr pos:start="573:13" pos:end="573:19"><call pos:start="573:13" pos:end="573:19"><name pos:start="573:13" pos:end="573:16">ARCH</name><argument_list pos:start="573:17" pos:end="573:19">(<argument pos:start="573:18" pos:end="573:18"><expr pos:start="573:18" pos:end="573:18"><literal type="number" pos:start="573:18" pos:end="573:18">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="575:13" pos:end="575:50">/* branch link/exchange thumb (blx) */</comment>

            <expr_stmt pos:start="577:13" pos:end="577:34"><expr pos:start="577:13" pos:end="577:33"><name pos:start="577:13" pos:end="577:15">tmp</name> <operator pos:start="577:17" pos:end="577:17">=</operator> <call pos:start="577:19" pos:end="577:33"><name pos:start="577:19" pos:end="577:26">load_reg</name><argument_list pos:start="577:27" pos:end="577:33">(<argument pos:start="577:28" pos:end="577:28"><expr pos:start="577:28" pos:end="577:28"><name pos:start="577:28" pos:end="577:28">s</name></expr></argument>, <argument pos:start="577:31" pos:end="577:32"><expr pos:start="577:31" pos:end="577:32"><name pos:start="577:31" pos:end="577:32">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="579:13" pos:end="579:38"><expr pos:start="579:13" pos:end="579:37"><name pos:start="579:13" pos:end="579:16">tmp2</name> <operator pos:start="579:18" pos:end="579:18">=</operator> <call pos:start="579:20" pos:end="579:37"><name pos:start="579:20" pos:end="579:35">tcg_temp_new_i32</name><argument_list pos:start="579:36" pos:end="579:37">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="581:13" pos:end="581:42"><expr pos:start="581:13" pos:end="581:41"><call pos:start="581:13" pos:end="581:41"><name pos:start="581:13" pos:end="581:28">tcg_gen_movi_i32</name><argument_list pos:start="581:29" pos:end="581:41">(<argument pos:start="581:30" pos:end="581:33"><expr pos:start="581:30" pos:end="581:33"><name pos:start="581:30" pos:end="581:33">tmp2</name></expr></argument>, <argument pos:start="581:36" pos:end="581:40"><expr pos:start="581:36" pos:end="581:40"><name pos:start="581:36" pos:end="581:40"><name pos:start="581:36" pos:end="581:36">s</name><operator pos:start="581:37" pos:end="581:38">-&gt;</operator><name pos:start="581:39" pos:end="581:40">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="583:13" pos:end="583:35"><expr pos:start="583:13" pos:end="583:34"><call pos:start="583:13" pos:end="583:34"><name pos:start="583:13" pos:end="583:21">store_reg</name><argument_list pos:start="583:22" pos:end="583:34">(<argument pos:start="583:23" pos:end="583:23"><expr pos:start="583:23" pos:end="583:23"><name pos:start="583:23" pos:end="583:23">s</name></expr></argument>, <argument pos:start="583:26" pos:end="583:27"><expr pos:start="583:26" pos:end="583:27"><literal type="number" pos:start="583:26" pos:end="583:27">14</literal></expr></argument>, <argument pos:start="583:30" pos:end="583:33"><expr pos:start="583:30" pos:end="583:33"><name pos:start="583:30" pos:end="583:33">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="585:13" pos:end="585:27"><expr pos:start="585:13" pos:end="585:26"><call pos:start="585:13" pos:end="585:26"><name pos:start="585:13" pos:end="585:18">gen_bx</name><argument_list pos:start="585:19" pos:end="585:26">(<argument pos:start="585:20" pos:end="585:20"><expr pos:start="585:20" pos:end="585:20"><name pos:start="585:20" pos:end="585:20">s</name></expr></argument>, <argument pos:start="585:23" pos:end="585:25"><expr pos:start="585:23" pos:end="585:25"><name pos:start="585:23" pos:end="585:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="587:13" pos:end="587:18">break;</break>

        <case pos:start="589:9" pos:end="589:17">case <expr pos:start="589:14" pos:end="589:16"><literal type="number" pos:start="589:14" pos:end="589:16">0x5</literal></expr>:</case> <comment type="block" pos:start="589:19" pos:end="589:47">/* saturating add/subtract */</comment>

            <expr_stmt pos:start="591:13" pos:end="591:22"><expr pos:start="591:13" pos:end="591:21"><call pos:start="591:13" pos:end="591:21"><name pos:start="591:13" pos:end="591:16">ARCH</name><argument_list pos:start="591:17" pos:end="591:21">(<argument pos:start="591:18" pos:end="591:20"><expr pos:start="591:18" pos:end="591:20"><literal type="number" pos:start="591:18" pos:end="591:20">5TE</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="593:13" pos:end="593:36"><expr pos:start="593:13" pos:end="593:35"><name pos:start="593:13" pos:end="593:14">rd</name> <operator pos:start="593:16" pos:end="593:16">=</operator> <operator pos:start="593:18" pos:end="593:18">(</operator><name pos:start="593:19" pos:end="593:22">insn</name> <operator pos:start="593:24" pos:end="593:25">&gt;&gt;</operator> <literal type="number" pos:start="593:27" pos:end="593:28">12</literal><operator pos:start="593:29" pos:end="593:29">)</operator> <operator pos:start="593:31" pos:end="593:31">&amp;</operator> <literal type="number" pos:start="593:33" pos:end="593:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="595:13" pos:end="595:36"><expr pos:start="595:13" pos:end="595:35"><name pos:start="595:13" pos:end="595:14">rn</name> <operator pos:start="595:16" pos:end="595:16">=</operator> <operator pos:start="595:18" pos:end="595:18">(</operator><name pos:start="595:19" pos:end="595:22">insn</name> <operator pos:start="595:24" pos:end="595:25">&gt;&gt;</operator> <literal type="number" pos:start="595:27" pos:end="595:28">16</literal><operator pos:start="595:29" pos:end="595:29">)</operator> <operator pos:start="595:31" pos:end="595:31">&amp;</operator> <literal type="number" pos:start="595:33" pos:end="595:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="597:13" pos:end="597:34"><expr pos:start="597:13" pos:end="597:33"><name pos:start="597:13" pos:end="597:15">tmp</name> <operator pos:start="597:17" pos:end="597:17">=</operator> <call pos:start="597:19" pos:end="597:33"><name pos:start="597:19" pos:end="597:26">load_reg</name><argument_list pos:start="597:27" pos:end="597:33">(<argument pos:start="597:28" pos:end="597:28"><expr pos:start="597:28" pos:end="597:28"><name pos:start="597:28" pos:end="597:28">s</name></expr></argument>, <argument pos:start="597:31" pos:end="597:32"><expr pos:start="597:31" pos:end="597:32"><name pos:start="597:31" pos:end="597:32">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="599:13" pos:end="599:35"><expr pos:start="599:13" pos:end="599:34"><name pos:start="599:13" pos:end="599:16">tmp2</name> <operator pos:start="599:18" pos:end="599:18">=</operator> <call pos:start="599:20" pos:end="599:34"><name pos:start="599:20" pos:end="599:27">load_reg</name><argument_list pos:start="599:28" pos:end="599:34">(<argument pos:start="599:29" pos:end="599:29"><expr pos:start="599:29" pos:end="599:29"><name pos:start="599:29" pos:end="599:29">s</name></expr></argument>, <argument pos:start="599:32" pos:end="599:33"><expr pos:start="599:32" pos:end="599:33"><name pos:start="599:32" pos:end="599:33">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="601:13" pos:end="603:64"><if pos:start="601:13" pos:end="603:64">if <condition pos:start="601:16" pos:end="601:24">(<expr pos:start="601:17" pos:end="601:23"><name pos:start="601:17" pos:end="601:19">op1</name> <operator pos:start="601:21" pos:end="601:21">&amp;</operator> <literal type="number" pos:start="601:23" pos:end="601:23">2</literal></expr>)</condition><block type="pseudo" pos:start="603:17" pos:end="603:64"><block_content pos:start="603:17" pos:end="603:64">

                <expr_stmt pos:start="603:17" pos:end="603:64"><expr pos:start="603:17" pos:end="603:63"><call pos:start="603:17" pos:end="603:63"><name pos:start="603:17" pos:end="603:42">gen_helper_double_saturate</name><argument_list pos:start="603:43" pos:end="603:63">(<argument pos:start="603:44" pos:end="603:47"><expr pos:start="603:44" pos:end="603:47"><name pos:start="603:44" pos:end="603:47">tmp2</name></expr></argument>, <argument pos:start="603:50" pos:end="603:56"><expr pos:start="603:50" pos:end="603:56"><name pos:start="603:50" pos:end="603:56">cpu_env</name></expr></argument>, <argument pos:start="603:59" pos:end="603:62"><expr pos:start="603:59" pos:end="603:62"><name pos:start="603:59" pos:end="603:62">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="605:13" pos:end="611:65"><if pos:start="605:13" pos:end="607:65">if <condition pos:start="605:16" pos:end="605:24">(<expr pos:start="605:17" pos:end="605:23"><name pos:start="605:17" pos:end="605:19">op1</name> <operator pos:start="605:21" pos:end="605:21">&amp;</operator> <literal type="number" pos:start="605:23" pos:end="605:23">1</literal></expr>)</condition><block type="pseudo" pos:start="607:17" pos:end="607:65"><block_content pos:start="607:17" pos:end="607:65">

                <expr_stmt pos:start="607:17" pos:end="607:65"><expr pos:start="607:17" pos:end="607:64"><call pos:start="607:17" pos:end="607:64"><name pos:start="607:17" pos:end="607:39">gen_helper_sub_saturate</name><argument_list pos:start="607:40" pos:end="607:64">(<argument pos:start="607:41" pos:end="607:43"><expr pos:start="607:41" pos:end="607:43"><name pos:start="607:41" pos:end="607:43">tmp</name></expr></argument>, <argument pos:start="607:46" pos:end="607:52"><expr pos:start="607:46" pos:end="607:52"><name pos:start="607:46" pos:end="607:52">cpu_env</name></expr></argument>, <argument pos:start="607:55" pos:end="607:57"><expr pos:start="607:55" pos:end="607:57"><name pos:start="607:55" pos:end="607:57">tmp</name></expr></argument>, <argument pos:start="607:60" pos:end="607:63"><expr pos:start="607:60" pos:end="607:63"><name pos:start="607:60" pos:end="607:63">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="609:13" pos:end="611:65">else<block type="pseudo" pos:start="611:17" pos:end="611:65"><block_content pos:start="611:17" pos:end="611:65">

                <expr_stmt pos:start="611:17" pos:end="611:65"><expr pos:start="611:17" pos:end="611:64"><call pos:start="611:17" pos:end="611:64"><name pos:start="611:17" pos:end="611:39">gen_helper_add_saturate</name><argument_list pos:start="611:40" pos:end="611:64">(<argument pos:start="611:41" pos:end="611:43"><expr pos:start="611:41" pos:end="611:43"><name pos:start="611:41" pos:end="611:43">tmp</name></expr></argument>, <argument pos:start="611:46" pos:end="611:52"><expr pos:start="611:46" pos:end="611:52"><name pos:start="611:46" pos:end="611:52">cpu_env</name></expr></argument>, <argument pos:start="611:55" pos:end="611:57"><expr pos:start="611:55" pos:end="611:57"><name pos:start="611:55" pos:end="611:57">tmp</name></expr></argument>, <argument pos:start="611:60" pos:end="611:63"><expr pos:start="611:60" pos:end="611:63"><name pos:start="611:60" pos:end="611:63">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="613:13" pos:end="613:36"><expr pos:start="613:13" pos:end="613:35"><call pos:start="613:13" pos:end="613:35"><name pos:start="613:13" pos:end="613:29">tcg_temp_free_i32</name><argument_list pos:start="613:30" pos:end="613:35">(<argument pos:start="613:31" pos:end="613:34"><expr pos:start="613:31" pos:end="613:34"><name pos:start="613:31" pos:end="613:34">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="615:13" pos:end="615:34"><expr pos:start="615:13" pos:end="615:33"><call pos:start="615:13" pos:end="615:33"><name pos:start="615:13" pos:end="615:21">store_reg</name><argument_list pos:start="615:22" pos:end="615:33">(<argument pos:start="615:23" pos:end="615:23"><expr pos:start="615:23" pos:end="615:23"><name pos:start="615:23" pos:end="615:23">s</name></expr></argument>, <argument pos:start="615:26" pos:end="615:27"><expr pos:start="615:26" pos:end="615:27"><name pos:start="615:26" pos:end="615:27">rd</name></expr></argument>, <argument pos:start="615:30" pos:end="615:32"><expr pos:start="615:30" pos:end="615:32"><name pos:start="615:30" pos:end="615:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="617:13" pos:end="617:18">break;</break>

        <case pos:start="619:9" pos:end="619:15">case <expr pos:start="619:14" pos:end="619:14"><literal type="number" pos:start="619:14" pos:end="619:14">7</literal></expr>:</case>

            <comment type="block" pos:start="621:13" pos:end="625:27">/* SMC instruction (op1 == 3)

               and undefined instructions (op1 == 0 || op1 == 2)

               will trap */</comment>

            <if_stmt pos:start="627:13" pos:end="631:13"><if pos:start="627:13" pos:end="631:13">if <condition pos:start="627:16" pos:end="627:25">(<expr pos:start="627:17" pos:end="627:24"><name pos:start="627:17" pos:end="627:19">op1</name> <operator pos:start="627:21" pos:end="627:22">!=</operator> <literal type="number" pos:start="627:24" pos:end="627:24">1</literal></expr>)</condition> <block pos:start="627:27" pos:end="631:13">{<block_content pos:start="629:17" pos:end="629:32">

                <goto pos:start="629:17" pos:end="629:32">goto <name pos:start="629:22" pos:end="629:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="633:13" pos:end="633:22">/* bkpt */</comment>

            <expr_stmt pos:start="635:13" pos:end="635:20"><expr pos:start="635:13" pos:end="635:19"><call pos:start="635:13" pos:end="635:19"><name pos:start="635:13" pos:end="635:16">ARCH</name><argument_list pos:start="635:17" pos:end="635:19">(<argument pos:start="635:18" pos:end="635:18"><expr pos:start="635:18" pos:end="635:18"><literal type="number" pos:start="635:18" pos:end="635:18">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="637:13" pos:end="637:48"><expr pos:start="637:13" pos:end="637:47"><call pos:start="637:13" pos:end="637:47"><name pos:start="637:13" pos:end="637:30">gen_exception_insn</name><argument_list pos:start="637:31" pos:end="637:47">(<argument pos:start="637:32" pos:end="637:32"><expr pos:start="637:32" pos:end="637:32"><name pos:start="637:32" pos:end="637:32">s</name></expr></argument>, <argument pos:start="637:35" pos:end="637:35"><expr pos:start="637:35" pos:end="637:35"><literal type="number" pos:start="637:35" pos:end="637:35">4</literal></expr></argument>, <argument pos:start="637:38" pos:end="637:46"><expr pos:start="637:38" pos:end="637:46"><name pos:start="637:38" pos:end="637:46">EXCP_BKPT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="639:13" pos:end="639:18">break;</break>

        <case pos:start="641:9" pos:end="641:17">case <expr pos:start="641:14" pos:end="641:16"><literal type="number" pos:start="641:14" pos:end="641:16">0x8</literal></expr>:</case> <comment type="block" pos:start="641:19" pos:end="641:39">/* signed multiply */</comment>

        <case pos:start="643:9" pos:end="643:17">case <expr pos:start="643:14" pos:end="643:16"><literal type="number" pos:start="643:14" pos:end="643:16">0xa</literal></expr>:</case>

        <case pos:start="645:9" pos:end="645:17">case <expr pos:start="645:14" pos:end="645:16"><literal type="number" pos:start="645:14" pos:end="645:16">0xc</literal></expr>:</case>

        <case pos:start="647:9" pos:end="647:17">case <expr pos:start="647:14" pos:end="647:16"><literal type="number" pos:start="647:14" pos:end="647:16">0xe</literal></expr>:</case>

            <expr_stmt pos:start="649:13" pos:end="649:22"><expr pos:start="649:13" pos:end="649:21"><call pos:start="649:13" pos:end="649:21"><name pos:start="649:13" pos:end="649:16">ARCH</name><argument_list pos:start="649:17" pos:end="649:21">(<argument pos:start="649:18" pos:end="649:20"><expr pos:start="649:18" pos:end="649:20"><literal type="number" pos:start="649:18" pos:end="649:20">5TE</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="651:13" pos:end="651:35"><expr pos:start="651:13" pos:end="651:34"><name pos:start="651:13" pos:end="651:14">rs</name> <operator pos:start="651:16" pos:end="651:16">=</operator> <operator pos:start="651:18" pos:end="651:18">(</operator><name pos:start="651:19" pos:end="651:22">insn</name> <operator pos:start="651:24" pos:end="651:25">&gt;&gt;</operator> <literal type="number" pos:start="651:27" pos:end="651:27">8</literal><operator pos:start="651:28" pos:end="651:28">)</operator> <operator pos:start="651:30" pos:end="651:30">&amp;</operator> <literal type="number" pos:start="651:32" pos:end="651:34">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="653:13" pos:end="653:36"><expr pos:start="653:13" pos:end="653:35"><name pos:start="653:13" pos:end="653:14">rn</name> <operator pos:start="653:16" pos:end="653:16">=</operator> <operator pos:start="653:18" pos:end="653:18">(</operator><name pos:start="653:19" pos:end="653:22">insn</name> <operator pos:start="653:24" pos:end="653:25">&gt;&gt;</operator> <literal type="number" pos:start="653:27" pos:end="653:28">12</literal><operator pos:start="653:29" pos:end="653:29">)</operator> <operator pos:start="653:31" pos:end="653:31">&amp;</operator> <literal type="number" pos:start="653:33" pos:end="653:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="655:13" pos:end="655:36"><expr pos:start="655:13" pos:end="655:35"><name pos:start="655:13" pos:end="655:14">rd</name> <operator pos:start="655:16" pos:end="655:16">=</operator> <operator pos:start="655:18" pos:end="655:18">(</operator><name pos:start="655:19" pos:end="655:22">insn</name> <operator pos:start="655:24" pos:end="655:25">&gt;&gt;</operator> <literal type="number" pos:start="655:27" pos:end="655:28">16</literal><operator pos:start="655:29" pos:end="655:29">)</operator> <operator pos:start="655:31" pos:end="655:31">&amp;</operator> <literal type="number" pos:start="655:33" pos:end="655:35">0xf</literal></expr>;</expr_stmt>

            <if_stmt pos:start="657:13" pos:end="737:13"><if pos:start="657:13" pos:end="695:13">if <condition pos:start="657:16" pos:end="657:25">(<expr pos:start="657:17" pos:end="657:24"><name pos:start="657:17" pos:end="657:19">op1</name> <operator pos:start="657:21" pos:end="657:22">==</operator> <literal type="number" pos:start="657:24" pos:end="657:24">1</literal></expr>)</condition> <block pos:start="657:27" pos:end="695:13">{<block_content pos:start="661:17" pos:end="693:38">

                <comment type="block" pos:start="659:17" pos:end="659:37">/* (32 * 16) &gt;&gt; 16 */</comment>

                <expr_stmt pos:start="661:17" pos:end="661:38"><expr pos:start="661:17" pos:end="661:37"><name pos:start="661:17" pos:end="661:19">tmp</name> <operator pos:start="661:21" pos:end="661:21">=</operator> <call pos:start="661:23" pos:end="661:37"><name pos:start="661:23" pos:end="661:30">load_reg</name><argument_list pos:start="661:31" pos:end="661:37">(<argument pos:start="661:32" pos:end="661:32"><expr pos:start="661:32" pos:end="661:32"><name pos:start="661:32" pos:end="661:32">s</name></expr></argument>, <argument pos:start="661:35" pos:end="661:36"><expr pos:start="661:35" pos:end="661:36"><name pos:start="661:35" pos:end="661:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="663:17" pos:end="663:39"><expr pos:start="663:17" pos:end="663:38"><name pos:start="663:17" pos:end="663:20">tmp2</name> <operator pos:start="663:22" pos:end="663:22">=</operator> <call pos:start="663:24" pos:end="663:38"><name pos:start="663:24" pos:end="663:31">load_reg</name><argument_list pos:start="663:32" pos:end="663:38">(<argument pos:start="663:33" pos:end="663:33"><expr pos:start="663:33" pos:end="663:33"><name pos:start="663:33" pos:end="663:33">s</name></expr></argument>, <argument pos:start="663:36" pos:end="663:37"><expr pos:start="663:36" pos:end="663:37"><name pos:start="663:36" pos:end="663:37">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="665:17" pos:end="671:35"><if pos:start="665:17" pos:end="667:53">if <condition pos:start="665:20" pos:end="665:27">(<expr pos:start="665:21" pos:end="665:26"><name pos:start="665:21" pos:end="665:22">sh</name> <operator pos:start="665:24" pos:end="665:24">&amp;</operator> <literal type="number" pos:start="665:26" pos:end="665:26">4</literal></expr>)</condition><block type="pseudo" pos:start="667:21" pos:end="667:53"><block_content pos:start="667:21" pos:end="667:53">

                    <expr_stmt pos:start="667:21" pos:end="667:53"><expr pos:start="667:21" pos:end="667:52"><call pos:start="667:21" pos:end="667:52"><name pos:start="667:21" pos:end="667:36">tcg_gen_sari_i32</name><argument_list pos:start="667:37" pos:end="667:52">(<argument pos:start="667:38" pos:end="667:41"><expr pos:start="667:38" pos:end="667:41"><name pos:start="667:38" pos:end="667:41">tmp2</name></expr></argument>, <argument pos:start="667:44" pos:end="667:47"><expr pos:start="667:44" pos:end="667:47"><name pos:start="667:44" pos:end="667:47">tmp2</name></expr></argument>, <argument pos:start="667:50" pos:end="667:51"><expr pos:start="667:50" pos:end="667:51"><literal type="number" pos:start="667:50" pos:end="667:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="669:17" pos:end="671:35">else<block type="pseudo" pos:start="671:21" pos:end="671:35"><block_content pos:start="671:21" pos:end="671:35">

                    <expr_stmt pos:start="671:21" pos:end="671:35"><expr pos:start="671:21" pos:end="671:34"><call pos:start="671:21" pos:end="671:34"><name pos:start="671:21" pos:end="671:28">gen_sxth</name><argument_list pos:start="671:29" pos:end="671:34">(<argument pos:start="671:30" pos:end="671:33"><expr pos:start="671:30" pos:end="671:33"><name pos:start="671:30" pos:end="671:33">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="673:17" pos:end="673:52"><expr pos:start="673:17" pos:end="673:51"><name pos:start="673:17" pos:end="673:21">tmp64</name> <operator pos:start="673:23" pos:end="673:23">=</operator> <call pos:start="673:25" pos:end="673:51"><name pos:start="673:25" pos:end="673:40">gen_muls_i64_i32</name><argument_list pos:start="673:41" pos:end="673:51">(<argument pos:start="673:42" pos:end="673:44"><expr pos:start="673:42" pos:end="673:44"><name pos:start="673:42" pos:end="673:44">tmp</name></expr></argument>, <argument pos:start="673:47" pos:end="673:50"><expr pos:start="673:47" pos:end="673:50"><name pos:start="673:47" pos:end="673:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="675:17" pos:end="675:51"><expr pos:start="675:17" pos:end="675:50"><call pos:start="675:17" pos:end="675:50"><name pos:start="675:17" pos:end="675:32">tcg_gen_shri_i64</name><argument_list pos:start="675:33" pos:end="675:50">(<argument pos:start="675:34" pos:end="675:38"><expr pos:start="675:34" pos:end="675:38"><name pos:start="675:34" pos:end="675:38">tmp64</name></expr></argument>, <argument pos:start="675:41" pos:end="675:45"><expr pos:start="675:41" pos:end="675:45"><name pos:start="675:41" pos:end="675:45">tmp64</name></expr></argument>, <argument pos:start="675:48" pos:end="675:49"><expr pos:start="675:48" pos:end="675:49"><literal type="number" pos:start="675:48" pos:end="675:49">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="677:17" pos:end="677:41"><expr pos:start="677:17" pos:end="677:40"><name pos:start="677:17" pos:end="677:19">tmp</name> <operator pos:start="677:21" pos:end="677:21">=</operator> <call pos:start="677:23" pos:end="677:40"><name pos:start="677:23" pos:end="677:38">tcg_temp_new_i32</name><argument_list pos:start="677:39" pos:end="677:40">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="679:17" pos:end="679:50"><expr pos:start="679:17" pos:end="679:49"><call pos:start="679:17" pos:end="679:49"><name pos:start="679:17" pos:end="679:37">tcg_gen_trunc_i64_i32</name><argument_list pos:start="679:38" pos:end="679:49">(<argument pos:start="679:39" pos:end="679:41"><expr pos:start="679:39" pos:end="679:41"><name pos:start="679:39" pos:end="679:41">tmp</name></expr></argument>, <argument pos:start="679:44" pos:end="679:48"><expr pos:start="679:44" pos:end="679:48"><name pos:start="679:44" pos:end="679:48">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="681:17" pos:end="681:41"><expr pos:start="681:17" pos:end="681:40"><call pos:start="681:17" pos:end="681:40"><name pos:start="681:17" pos:end="681:33">tcg_temp_free_i64</name><argument_list pos:start="681:34" pos:end="681:40">(<argument pos:start="681:35" pos:end="681:39"><expr pos:start="681:35" pos:end="681:39"><name pos:start="681:35" pos:end="681:39">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="683:17" pos:end="691:17"><if pos:start="683:17" pos:end="691:17">if <condition pos:start="683:20" pos:end="683:34">(<expr pos:start="683:21" pos:end="683:33"><operator pos:start="683:21" pos:end="683:21">(</operator><name pos:start="683:22" pos:end="683:23">sh</name> <operator pos:start="683:25" pos:end="683:25">&amp;</operator> <literal type="number" pos:start="683:27" pos:end="683:27">2</literal><operator pos:start="683:28" pos:end="683:28">)</operator> <operator pos:start="683:30" pos:end="683:31">==</operator> <literal type="number" pos:start="683:33" pos:end="683:33">0</literal></expr>)</condition> <block pos:start="683:36" pos:end="691:17">{<block_content pos:start="685:21" pos:end="689:44">

                    <expr_stmt pos:start="685:21" pos:end="685:43"><expr pos:start="685:21" pos:end="685:42"><name pos:start="685:21" pos:end="685:24">tmp2</name> <operator pos:start="685:26" pos:end="685:26">=</operator> <call pos:start="685:28" pos:end="685:42"><name pos:start="685:28" pos:end="685:35">load_reg</name><argument_list pos:start="685:36" pos:end="685:42">(<argument pos:start="685:37" pos:end="685:37"><expr pos:start="685:37" pos:end="685:37"><name pos:start="685:37" pos:end="685:37">s</name></expr></argument>, <argument pos:start="685:40" pos:end="685:41"><expr pos:start="685:40" pos:end="685:41"><name pos:start="685:40" pos:end="685:41">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="687:21" pos:end="687:65"><expr pos:start="687:21" pos:end="687:64"><call pos:start="687:21" pos:end="687:64"><name pos:start="687:21" pos:end="687:39">gen_helper_add_setq</name><argument_list pos:start="687:40" pos:end="687:64">(<argument pos:start="687:41" pos:end="687:43"><expr pos:start="687:41" pos:end="687:43"><name pos:start="687:41" pos:end="687:43">tmp</name></expr></argument>, <argument pos:start="687:46" pos:end="687:52"><expr pos:start="687:46" pos:end="687:52"><name pos:start="687:46" pos:end="687:52">cpu_env</name></expr></argument>, <argument pos:start="687:55" pos:end="687:57"><expr pos:start="687:55" pos:end="687:57"><name pos:start="687:55" pos:end="687:57">tmp</name></expr></argument>, <argument pos:start="687:60" pos:end="687:63"><expr pos:start="687:60" pos:end="687:63"><name pos:start="687:60" pos:end="687:63">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="689:21" pos:end="689:44"><expr pos:start="689:21" pos:end="689:43"><call pos:start="689:21" pos:end="689:43"><name pos:start="689:21" pos:end="689:37">tcg_temp_free_i32</name><argument_list pos:start="689:38" pos:end="689:43">(<argument pos:start="689:39" pos:end="689:42"><expr pos:start="689:39" pos:end="689:42"><name pos:start="689:39" pos:end="689:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="693:17" pos:end="693:38"><expr pos:start="693:17" pos:end="693:37"><call pos:start="693:17" pos:end="693:37"><name pos:start="693:17" pos:end="693:25">store_reg</name><argument_list pos:start="693:26" pos:end="693:37">(<argument pos:start="693:27" pos:end="693:27"><expr pos:start="693:27" pos:end="693:27"><name pos:start="693:27" pos:end="693:27">s</name></expr></argument>, <argument pos:start="693:30" pos:end="693:31"><expr pos:start="693:30" pos:end="693:31"><name pos:start="693:30" pos:end="693:31">rd</name></expr></argument>, <argument pos:start="693:34" pos:end="693:36"><expr pos:start="693:34" pos:end="693:36"><name pos:start="693:34" pos:end="693:36">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="695:15" pos:end="737:13">else <block pos:start="695:20" pos:end="737:13">{<block_content pos:start="699:17" pos:end="735:17">

                <comment type="block" pos:start="697:17" pos:end="697:29">/* 16 * 16 */</comment>

                <expr_stmt pos:start="699:17" pos:end="699:38"><expr pos:start="699:17" pos:end="699:37"><name pos:start="699:17" pos:end="699:19">tmp</name> <operator pos:start="699:21" pos:end="699:21">=</operator> <call pos:start="699:23" pos:end="699:37"><name pos:start="699:23" pos:end="699:30">load_reg</name><argument_list pos:start="699:31" pos:end="699:37">(<argument pos:start="699:32" pos:end="699:32"><expr pos:start="699:32" pos:end="699:32"><name pos:start="699:32" pos:end="699:32">s</name></expr></argument>, <argument pos:start="699:35" pos:end="699:36"><expr pos:start="699:35" pos:end="699:36"><name pos:start="699:35" pos:end="699:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="701:17" pos:end="701:39"><expr pos:start="701:17" pos:end="701:38"><name pos:start="701:17" pos:end="701:20">tmp2</name> <operator pos:start="701:22" pos:end="701:22">=</operator> <call pos:start="701:24" pos:end="701:38"><name pos:start="701:24" pos:end="701:31">load_reg</name><argument_list pos:start="701:32" pos:end="701:38">(<argument pos:start="701:33" pos:end="701:33"><expr pos:start="701:33" pos:end="701:33"><name pos:start="701:33" pos:end="701:33">s</name></expr></argument>, <argument pos:start="701:36" pos:end="701:37"><expr pos:start="701:36" pos:end="701:37"><name pos:start="701:36" pos:end="701:37">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="703:17" pos:end="703:53"><expr pos:start="703:17" pos:end="703:52"><call pos:start="703:17" pos:end="703:52"><name pos:start="703:17" pos:end="703:25">gen_mulxy</name><argument_list pos:start="703:26" pos:end="703:52">(<argument pos:start="703:27" pos:end="703:29"><expr pos:start="703:27" pos:end="703:29"><name pos:start="703:27" pos:end="703:29">tmp</name></expr></argument>, <argument pos:start="703:32" pos:end="703:35"><expr pos:start="703:32" pos:end="703:35"><name pos:start="703:32" pos:end="703:35">tmp2</name></expr></argument>, <argument pos:start="703:38" pos:end="703:43"><expr pos:start="703:38" pos:end="703:43"><name pos:start="703:38" pos:end="703:39">sh</name> <operator pos:start="703:41" pos:end="703:41">&amp;</operator> <literal type="number" pos:start="703:43" pos:end="703:43">2</literal></expr></argument>, <argument pos:start="703:46" pos:end="703:51"><expr pos:start="703:46" pos:end="703:51"><name pos:start="703:46" pos:end="703:47">sh</name> <operator pos:start="703:49" pos:end="703:49">&amp;</operator> <literal type="number" pos:start="703:51" pos:end="703:51">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="705:17" pos:end="705:40"><expr pos:start="705:17" pos:end="705:39"><call pos:start="705:17" pos:end="705:39"><name pos:start="705:17" pos:end="705:33">tcg_temp_free_i32</name><argument_list pos:start="705:34" pos:end="705:39">(<argument pos:start="705:35" pos:end="705:38"><expr pos:start="705:35" pos:end="705:38"><name pos:start="705:35" pos:end="705:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="707:17" pos:end="735:17"><if pos:start="707:17" pos:end="721:17">if <condition pos:start="707:20" pos:end="707:29">(<expr pos:start="707:21" pos:end="707:28"><name pos:start="707:21" pos:end="707:23">op1</name> <operator pos:start="707:25" pos:end="707:26">==</operator> <literal type="number" pos:start="707:28" pos:end="707:28">2</literal></expr>)</condition> <block pos:start="707:31" pos:end="721:17">{<block_content pos:start="709:21" pos:end="719:45">

                    <expr_stmt pos:start="709:21" pos:end="709:47"><expr pos:start="709:21" pos:end="709:46"><name pos:start="709:21" pos:end="709:25">tmp64</name> <operator pos:start="709:27" pos:end="709:27">=</operator> <call pos:start="709:29" pos:end="709:46"><name pos:start="709:29" pos:end="709:44">tcg_temp_new_i64</name><argument_list pos:start="709:45" pos:end="709:46">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="711:21" pos:end="711:52"><expr pos:start="711:21" pos:end="711:51"><call pos:start="711:21" pos:end="711:51"><name pos:start="711:21" pos:end="711:39">tcg_gen_ext_i32_i64</name><argument_list pos:start="711:40" pos:end="711:51">(<argument pos:start="711:41" pos:end="711:45"><expr pos:start="711:41" pos:end="711:45"><name pos:start="711:41" pos:end="711:45">tmp64</name></expr></argument>, <argument pos:start="711:48" pos:end="711:50"><expr pos:start="711:48" pos:end="711:50"><name pos:start="711:48" pos:end="711:50">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="713:21" pos:end="713:43"><expr pos:start="713:21" pos:end="713:42"><call pos:start="713:21" pos:end="713:42"><name pos:start="713:21" pos:end="713:37">tcg_temp_free_i32</name><argument_list pos:start="713:38" pos:end="713:42">(<argument pos:start="713:39" pos:end="713:41"><expr pos:start="713:39" pos:end="713:41"><name pos:start="713:39" pos:end="713:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="715:21" pos:end="715:47"><expr pos:start="715:21" pos:end="715:46"><call pos:start="715:21" pos:end="715:46"><name pos:start="715:21" pos:end="715:28">gen_addq</name><argument_list pos:start="715:29" pos:end="715:46">(<argument pos:start="715:30" pos:end="715:30"><expr pos:start="715:30" pos:end="715:30"><name pos:start="715:30" pos:end="715:30">s</name></expr></argument>, <argument pos:start="715:33" pos:end="715:37"><expr pos:start="715:33" pos:end="715:37"><name pos:start="715:33" pos:end="715:37">tmp64</name></expr></argument>, <argument pos:start="715:40" pos:end="715:41"><expr pos:start="715:40" pos:end="715:41"><name pos:start="715:40" pos:end="715:41">rn</name></expr></argument>, <argument pos:start="715:44" pos:end="715:45"><expr pos:start="715:44" pos:end="715:45"><name pos:start="715:44" pos:end="715:45">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="717:21" pos:end="717:53"><expr pos:start="717:21" pos:end="717:52"><call pos:start="717:21" pos:end="717:52"><name pos:start="717:21" pos:end="717:34">gen_storeq_reg</name><argument_list pos:start="717:35" pos:end="717:52">(<argument pos:start="717:36" pos:end="717:36"><expr pos:start="717:36" pos:end="717:36"><name pos:start="717:36" pos:end="717:36">s</name></expr></argument>, <argument pos:start="717:39" pos:end="717:40"><expr pos:start="717:39" pos:end="717:40"><name pos:start="717:39" pos:end="717:40">rn</name></expr></argument>, <argument pos:start="717:43" pos:end="717:44"><expr pos:start="717:43" pos:end="717:44"><name pos:start="717:43" pos:end="717:44">rd</name></expr></argument>, <argument pos:start="717:47" pos:end="717:51"><expr pos:start="717:47" pos:end="717:51"><name pos:start="717:47" pos:end="717:51">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="719:21" pos:end="719:45"><expr pos:start="719:21" pos:end="719:44"><call pos:start="719:21" pos:end="719:44"><name pos:start="719:21" pos:end="719:37">tcg_temp_free_i64</name><argument_list pos:start="719:38" pos:end="719:44">(<argument pos:start="719:39" pos:end="719:43"><expr pos:start="719:39" pos:end="719:43"><name pos:start="719:39" pos:end="719:43">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="721:19" pos:end="735:17">else <block pos:start="721:24" pos:end="735:17">{<block_content pos:start="723:21" pos:end="733:42">

                    <if_stmt pos:start="723:21" pos:end="731:21"><if pos:start="723:21" pos:end="731:21">if <condition pos:start="723:24" pos:end="723:33">(<expr pos:start="723:25" pos:end="723:32"><name pos:start="723:25" pos:end="723:27">op1</name> <operator pos:start="723:29" pos:end="723:30">==</operator> <literal type="number" pos:start="723:32" pos:end="723:32">0</literal></expr>)</condition> <block pos:start="723:35" pos:end="731:21">{<block_content pos:start="725:25" pos:end="729:48">

                        <expr_stmt pos:start="725:25" pos:end="725:47"><expr pos:start="725:25" pos:end="725:46"><name pos:start="725:25" pos:end="725:28">tmp2</name> <operator pos:start="725:30" pos:end="725:30">=</operator> <call pos:start="725:32" pos:end="725:46"><name pos:start="725:32" pos:end="725:39">load_reg</name><argument_list pos:start="725:40" pos:end="725:46">(<argument pos:start="725:41" pos:end="725:41"><expr pos:start="725:41" pos:end="725:41"><name pos:start="725:41" pos:end="725:41">s</name></expr></argument>, <argument pos:start="725:44" pos:end="725:45"><expr pos:start="725:44" pos:end="725:45"><name pos:start="725:44" pos:end="725:45">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="727:25" pos:end="727:69"><expr pos:start="727:25" pos:end="727:68"><call pos:start="727:25" pos:end="727:68"><name pos:start="727:25" pos:end="727:43">gen_helper_add_setq</name><argument_list pos:start="727:44" pos:end="727:68">(<argument pos:start="727:45" pos:end="727:47"><expr pos:start="727:45" pos:end="727:47"><name pos:start="727:45" pos:end="727:47">tmp</name></expr></argument>, <argument pos:start="727:50" pos:end="727:56"><expr pos:start="727:50" pos:end="727:56"><name pos:start="727:50" pos:end="727:56">cpu_env</name></expr></argument>, <argument pos:start="727:59" pos:end="727:61"><expr pos:start="727:59" pos:end="727:61"><name pos:start="727:59" pos:end="727:61">tmp</name></expr></argument>, <argument pos:start="727:64" pos:end="727:67"><expr pos:start="727:64" pos:end="727:67"><name pos:start="727:64" pos:end="727:67">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="729:25" pos:end="729:48"><expr pos:start="729:25" pos:end="729:47"><call pos:start="729:25" pos:end="729:47"><name pos:start="729:25" pos:end="729:41">tcg_temp_free_i32</name><argument_list pos:start="729:42" pos:end="729:47">(<argument pos:start="729:43" pos:end="729:46"><expr pos:start="729:43" pos:end="729:46"><name pos:start="729:43" pos:end="729:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="733:21" pos:end="733:42"><expr pos:start="733:21" pos:end="733:41"><call pos:start="733:21" pos:end="733:41"><name pos:start="733:21" pos:end="733:29">store_reg</name><argument_list pos:start="733:30" pos:end="733:41">(<argument pos:start="733:31" pos:end="733:31"><expr pos:start="733:31" pos:end="733:31"><name pos:start="733:31" pos:end="733:31">s</name></expr></argument>, <argument pos:start="733:34" pos:end="733:35"><expr pos:start="733:34" pos:end="733:35"><name pos:start="733:34" pos:end="733:35">rd</name></expr></argument>, <argument pos:start="733:38" pos:end="733:40"><expr pos:start="733:38" pos:end="733:40"><name pos:start="733:38" pos:end="733:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="739:13" pos:end="739:18">break;</break>

        <default pos:start="741:9" pos:end="741:16">default:</default>

            <goto pos:start="743:13" pos:end="743:28">goto <name pos:start="743:18" pos:end="743:27">illegal_op</name>;</goto>

        </block_content>}</block></switch>

    </block_content>}</block></if> <if type="elseif" pos:start="747:7" pos:end="1109:5">else if <condition pos:start="747:15" pos:end="751:50">(<expr pos:start="747:16" pos:end="751:49"><operator pos:start="747:16" pos:end="747:16">(</operator><operator pos:start="747:17" pos:end="747:17">(</operator><name pos:start="747:18" pos:end="747:21">insn</name> <operator pos:start="747:23" pos:end="747:23">&amp;</operator> <literal type="number" pos:start="747:25" pos:end="747:34">0x0e000000</literal><operator pos:start="747:35" pos:end="747:35">)</operator> <operator pos:start="747:37" pos:end="747:38">==</operator> <literal type="number" pos:start="747:40" pos:end="747:40">0</literal> <operator pos:start="747:42" pos:end="747:43">&amp;&amp;</operator>

                <operator pos:start="749:17" pos:end="749:17">(</operator><name pos:start="749:18" pos:end="749:21">insn</name> <operator pos:start="749:23" pos:end="749:23">&amp;</operator> <literal type="number" pos:start="749:25" pos:end="749:34">0x00000090</literal><operator pos:start="749:35" pos:end="749:35">)</operator> <operator pos:start="749:37" pos:end="749:38">!=</operator> <literal type="number" pos:start="749:40" pos:end="749:43">0x90</literal><operator pos:start="749:44" pos:end="749:44">)</operator> <operator pos:start="749:46" pos:end="749:47">||</operator>

               <operator pos:start="751:16" pos:end="751:16">(</operator><operator pos:start="751:17" pos:end="751:17">(</operator><name pos:start="751:18" pos:end="751:21">insn</name> <operator pos:start="751:23" pos:end="751:23">&amp;</operator> <literal type="number" pos:start="751:25" pos:end="751:34">0x0e000000</literal><operator pos:start="751:35" pos:end="751:35">)</operator> <operator pos:start="751:37" pos:end="751:38">==</operator> <operator pos:start="751:40" pos:end="751:40">(</operator><literal type="number" pos:start="751:41" pos:end="751:41">1</literal> <operator pos:start="751:43" pos:end="751:44">&lt;&lt;</operator> <literal type="number" pos:start="751:46" pos:end="751:47">25</literal><operator pos:start="751:48" pos:end="751:48">)</operator><operator pos:start="751:49" pos:end="751:49">)</operator></expr>)</condition> <block pos:start="751:52" pos:end="1109:5">{<block_content pos:start="753:9" pos:end="1107:9">

        <decl_stmt pos:start="753:9" pos:end="753:38"><decl pos:start="753:9" pos:end="753:18"><type pos:start="753:9" pos:end="753:11"><name pos:start="753:9" pos:end="753:11">int</name></type> <name pos:start="753:13" pos:end="753:18">set_cc</name></decl>, <decl pos:start="753:21" pos:end="753:28"><type ref="prev" pos:start="753:9" pos:end="753:11"/><name pos:start="753:21" pos:end="753:28">logic_cc</name></decl>, <decl pos:start="753:31" pos:end="753:37"><type ref="prev" pos:start="753:9" pos:end="753:11"/><name pos:start="753:31" pos:end="753:37">shiftop</name></decl>;</decl_stmt>



        <expr_stmt pos:start="757:9" pos:end="757:33"><expr pos:start="757:9" pos:end="757:32"><name pos:start="757:9" pos:end="757:11">op1</name> <operator pos:start="757:13" pos:end="757:13">=</operator> <operator pos:start="757:15" pos:end="757:15">(</operator><name pos:start="757:16" pos:end="757:19">insn</name> <operator pos:start="757:21" pos:end="757:22">&gt;&gt;</operator> <literal type="number" pos:start="757:24" pos:end="757:25">21</literal><operator pos:start="757:26" pos:end="757:26">)</operator> <operator pos:start="757:28" pos:end="757:28">&amp;</operator> <literal type="number" pos:start="757:30" pos:end="757:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="759:9" pos:end="759:34"><expr pos:start="759:9" pos:end="759:33"><name pos:start="759:9" pos:end="759:14">set_cc</name> <operator pos:start="759:16" pos:end="759:16">=</operator> <operator pos:start="759:18" pos:end="759:18">(</operator><name pos:start="759:19" pos:end="759:22">insn</name> <operator pos:start="759:24" pos:end="759:25">&gt;&gt;</operator> <literal type="number" pos:start="759:27" pos:end="759:28">20</literal><operator pos:start="759:29" pos:end="759:29">)</operator> <operator pos:start="759:31" pos:end="759:31">&amp;</operator> <literal type="number" pos:start="759:33" pos:end="759:33">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="761:9" pos:end="761:48"><expr pos:start="761:9" pos:end="761:47"><name pos:start="761:9" pos:end="761:16">logic_cc</name> <operator pos:start="761:18" pos:end="761:18">=</operator> <name pos:start="761:20" pos:end="761:38"><name pos:start="761:20" pos:end="761:33">table_logic_cc</name><index pos:start="761:34" pos:end="761:38">[<expr pos:start="761:35" pos:end="761:37"><name pos:start="761:35" pos:end="761:37">op1</name></expr>]</index></name> <operator pos:start="761:40" pos:end="761:40">&amp;</operator> <name pos:start="761:42" pos:end="761:47">set_cc</name></expr>;</expr_stmt>



        <comment type="block" pos:start="765:9" pos:end="765:41">/* data processing instruction */</comment>

        <if_stmt pos:start="767:9" pos:end="817:9"><if pos:start="767:9" pos:end="791:9">if <condition pos:start="767:12" pos:end="767:29">(<expr pos:start="767:13" pos:end="767:28"><name pos:start="767:13" pos:end="767:16">insn</name> <operator pos:start="767:18" pos:end="767:18">&amp;</operator> <operator pos:start="767:20" pos:end="767:20">(</operator><literal type="number" pos:start="767:21" pos:end="767:21">1</literal> <operator pos:start="767:23" pos:end="767:24">&lt;&lt;</operator> <literal type="number" pos:start="767:26" pos:end="767:27">25</literal><operator pos:start="767:28" pos:end="767:28">)</operator></expr>)</condition> <block pos:start="767:31" pos:end="791:9">{<block_content pos:start="771:13" pos:end="789:13">

            <comment type="block" pos:start="769:13" pos:end="769:35">/* immediate operand */</comment>

            <expr_stmt pos:start="771:13" pos:end="771:30"><expr pos:start="771:13" pos:end="771:29"><name pos:start="771:13" pos:end="771:15">val</name> <operator pos:start="771:17" pos:end="771:17">=</operator> <name pos:start="771:19" pos:end="771:22">insn</name> <operator pos:start="771:24" pos:end="771:24">&amp;</operator> <literal type="number" pos:start="771:26" pos:end="771:29">0xff</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="773:13" pos:end="773:44"><expr pos:start="773:13" pos:end="773:43"><name pos:start="773:13" pos:end="773:17">shift</name> <operator pos:start="773:19" pos:end="773:19">=</operator> <operator pos:start="773:21" pos:end="773:21">(</operator><operator pos:start="773:22" pos:end="773:22">(</operator><name pos:start="773:23" pos:end="773:26">insn</name> <operator pos:start="773:28" pos:end="773:29">&gt;&gt;</operator> <literal type="number" pos:start="773:31" pos:end="773:31">8</literal><operator pos:start="773:32" pos:end="773:32">)</operator> <operator pos:start="773:34" pos:end="773:34">&amp;</operator> <literal type="number" pos:start="773:36" pos:end="773:38">0xf</literal><operator pos:start="773:39" pos:end="773:39">)</operator> <operator pos:start="773:41" pos:end="773:41">*</operator> <literal type="number" pos:start="773:43" pos:end="773:43">2</literal></expr>;</expr_stmt>

            <if_stmt pos:start="775:13" pos:end="779:13"><if pos:start="775:13" pos:end="779:13">if <condition pos:start="775:16" pos:end="775:22">(<expr pos:start="775:17" pos:end="775:21"><name pos:start="775:17" pos:end="775:21">shift</name></expr>)</condition> <block pos:start="775:24" pos:end="779:13">{<block_content pos:start="777:17" pos:end="777:61">

                <expr_stmt pos:start="777:17" pos:end="777:61"><expr pos:start="777:17" pos:end="777:60"><name pos:start="777:17" pos:end="777:19">val</name> <operator pos:start="777:21" pos:end="777:21">=</operator> <operator pos:start="777:23" pos:end="777:23">(</operator><name pos:start="777:24" pos:end="777:26">val</name> <operator pos:start="777:28" pos:end="777:29">&gt;&gt;</operator> <name pos:start="777:31" pos:end="777:35">shift</name><operator pos:start="777:36" pos:end="777:36">)</operator> <operator pos:start="777:38" pos:end="777:38">|</operator> <operator pos:start="777:40" pos:end="777:40">(</operator><name pos:start="777:41" pos:end="777:43">val</name> <operator pos:start="777:45" pos:end="777:46">&lt;&lt;</operator> <operator pos:start="777:48" pos:end="777:48">(</operator><literal type="number" pos:start="777:49" pos:end="777:52">32</literal> <operator pos:start="777:52" pos:end="777:52">-</operator> <name pos:start="777:54" pos:end="777:58">shift</name><operator pos:start="777:59" pos:end="777:59">)</operator><operator pos:start="777:60" pos:end="777:60">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="781:13" pos:end="781:38"><expr pos:start="781:13" pos:end="781:37"><name pos:start="781:13" pos:end="781:16">tmp2</name> <operator pos:start="781:18" pos:end="781:18">=</operator> <call pos:start="781:20" pos:end="781:37"><name pos:start="781:20" pos:end="781:35">tcg_temp_new_i32</name><argument_list pos:start="781:36" pos:end="781:37">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="783:13" pos:end="783:40"><expr pos:start="783:13" pos:end="783:39"><call pos:start="783:13" pos:end="783:39"><name pos:start="783:13" pos:end="783:28">tcg_gen_movi_i32</name><argument_list pos:start="783:29" pos:end="783:39">(<argument pos:start="783:30" pos:end="783:33"><expr pos:start="783:30" pos:end="783:33"><name pos:start="783:30" pos:end="783:33">tmp2</name></expr></argument>, <argument pos:start="783:36" pos:end="783:38"><expr pos:start="783:36" pos:end="783:38"><name pos:start="783:36" pos:end="783:38">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="785:13" pos:end="789:13"><if pos:start="785:13" pos:end="789:13">if <condition pos:start="785:16" pos:end="785:34">(<expr pos:start="785:17" pos:end="785:33"><name pos:start="785:17" pos:end="785:24">logic_cc</name> <operator pos:start="785:26" pos:end="785:27">&amp;&amp;</operator> <name pos:start="785:29" pos:end="785:33">shift</name></expr>)</condition> <block pos:start="785:36" pos:end="789:13">{<block_content pos:start="787:17" pos:end="787:39">

                <expr_stmt pos:start="787:17" pos:end="787:39"><expr pos:start="787:17" pos:end="787:38"><call pos:start="787:17" pos:end="787:38"><name pos:start="787:17" pos:end="787:32">gen_set_CF_bit31</name><argument_list pos:start="787:33" pos:end="787:38">(<argument pos:start="787:34" pos:end="787:37"><expr pos:start="787:34" pos:end="787:37"><name pos:start="787:34" pos:end="787:37">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="791:11" pos:end="817:9">else <block pos:start="791:16" pos:end="817:9">{<block_content pos:start="795:13" pos:end="815:13">

            <comment type="block" pos:start="793:13" pos:end="793:26">/* register */</comment>

            <expr_stmt pos:start="795:13" pos:end="795:30"><expr pos:start="795:13" pos:end="795:29"><name pos:start="795:13" pos:end="795:14">rm</name> <operator pos:start="795:16" pos:end="795:16">=</operator> <operator pos:start="795:18" pos:end="795:18">(</operator><name pos:start="795:19" pos:end="795:22">insn</name><operator pos:start="795:23" pos:end="795:23">)</operator> <operator pos:start="795:25" pos:end="795:25">&amp;</operator> <literal type="number" pos:start="795:27" pos:end="795:29">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="797:13" pos:end="797:35"><expr pos:start="797:13" pos:end="797:34"><name pos:start="797:13" pos:end="797:16">tmp2</name> <operator pos:start="797:18" pos:end="797:18">=</operator> <call pos:start="797:20" pos:end="797:34"><name pos:start="797:20" pos:end="797:27">load_reg</name><argument_list pos:start="797:28" pos:end="797:34">(<argument pos:start="797:29" pos:end="797:29"><expr pos:start="797:29" pos:end="797:29"><name pos:start="797:29" pos:end="797:29">s</name></expr></argument>, <argument pos:start="797:32" pos:end="797:33"><expr pos:start="797:32" pos:end="797:33"><name pos:start="797:32" pos:end="797:33">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="799:13" pos:end="799:38"><expr pos:start="799:13" pos:end="799:37"><name pos:start="799:13" pos:end="799:19">shiftop</name> <operator pos:start="799:21" pos:end="799:21">=</operator> <operator pos:start="799:23" pos:end="799:23">(</operator><name pos:start="799:24" pos:end="799:27">insn</name> <operator pos:start="799:29" pos:end="799:30">&gt;&gt;</operator> <literal type="number" pos:start="799:32" pos:end="799:32">5</literal><operator pos:start="799:33" pos:end="799:33">)</operator> <operator pos:start="799:35" pos:end="799:35">&amp;</operator> <literal type="number" pos:start="799:37" pos:end="799:37">3</literal></expr>;</expr_stmt>

            <if_stmt pos:start="801:13" pos:end="815:13"><if pos:start="801:13" pos:end="807:13">if <condition pos:start="801:16" pos:end="801:35">(<expr pos:start="801:17" pos:end="801:34"><operator pos:start="801:17" pos:end="801:17">!</operator><operator pos:start="801:18" pos:end="801:18">(</operator><name pos:start="801:19" pos:end="801:22">insn</name> <operator pos:start="801:24" pos:end="801:24">&amp;</operator> <operator pos:start="801:26" pos:end="801:26">(</operator><literal type="number" pos:start="801:27" pos:end="801:27">1</literal> <operator pos:start="801:29" pos:end="801:30">&lt;&lt;</operator> <literal type="number" pos:start="801:32" pos:end="801:32">4</literal><operator pos:start="801:33" pos:end="801:33">)</operator><operator pos:start="801:34" pos:end="801:34">)</operator></expr>)</condition> <block pos:start="801:37" pos:end="807:13">{<block_content pos:start="803:17" pos:end="805:65">

                <expr_stmt pos:start="803:17" pos:end="803:43"><expr pos:start="803:17" pos:end="803:42"><name pos:start="803:17" pos:end="803:21">shift</name> <operator pos:start="803:23" pos:end="803:23">=</operator> <operator pos:start="803:25" pos:end="803:25">(</operator><name pos:start="803:26" pos:end="803:29">insn</name> <operator pos:start="803:31" pos:end="803:32">&gt;&gt;</operator> <literal type="number" pos:start="803:34" pos:end="803:34">7</literal><operator pos:start="803:35" pos:end="803:35">)</operator> <operator pos:start="803:37" pos:end="803:37">&amp;</operator> <literal type="number" pos:start="803:39" pos:end="803:42">0x1f</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="805:17" pos:end="805:65"><expr pos:start="805:17" pos:end="805:64"><call pos:start="805:17" pos:end="805:64"><name pos:start="805:17" pos:end="805:32">gen_arm_shift_im</name><argument_list pos:start="805:33" pos:end="805:64">(<argument pos:start="805:34" pos:end="805:37"><expr pos:start="805:34" pos:end="805:37"><name pos:start="805:34" pos:end="805:37">tmp2</name></expr></argument>, <argument pos:start="805:40" pos:end="805:46"><expr pos:start="805:40" pos:end="805:46"><name pos:start="805:40" pos:end="805:46">shiftop</name></expr></argument>, <argument pos:start="805:49" pos:end="805:53"><expr pos:start="805:49" pos:end="805:53"><name pos:start="805:49" pos:end="805:53">shift</name></expr></argument>, <argument pos:start="805:56" pos:end="805:63"><expr pos:start="805:56" pos:end="805:63"><name pos:start="805:56" pos:end="805:63">logic_cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="807:15" pos:end="815:13">else <block pos:start="807:20" pos:end="815:13">{<block_content pos:start="809:17" pos:end="813:64">

                <expr_stmt pos:start="809:17" pos:end="809:39"><expr pos:start="809:17" pos:end="809:38"><name pos:start="809:17" pos:end="809:18">rs</name> <operator pos:start="809:20" pos:end="809:20">=</operator> <operator pos:start="809:22" pos:end="809:22">(</operator><name pos:start="809:23" pos:end="809:26">insn</name> <operator pos:start="809:28" pos:end="809:29">&gt;&gt;</operator> <literal type="number" pos:start="809:31" pos:end="809:31">8</literal><operator pos:start="809:32" pos:end="809:32">)</operator> <operator pos:start="809:34" pos:end="809:34">&amp;</operator> <literal type="number" pos:start="809:36" pos:end="809:38">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="811:17" pos:end="811:38"><expr pos:start="811:17" pos:end="811:37"><name pos:start="811:17" pos:end="811:19">tmp</name> <operator pos:start="811:21" pos:end="811:21">=</operator> <call pos:start="811:23" pos:end="811:37"><name pos:start="811:23" pos:end="811:30">load_reg</name><argument_list pos:start="811:31" pos:end="811:37">(<argument pos:start="811:32" pos:end="811:32"><expr pos:start="811:32" pos:end="811:32"><name pos:start="811:32" pos:end="811:32">s</name></expr></argument>, <argument pos:start="811:35" pos:end="811:36"><expr pos:start="811:35" pos:end="811:36"><name pos:start="811:35" pos:end="811:36">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="813:17" pos:end="813:64"><expr pos:start="813:17" pos:end="813:63"><call pos:start="813:17" pos:end="813:63"><name pos:start="813:17" pos:end="813:33">gen_arm_shift_reg</name><argument_list pos:start="813:34" pos:end="813:63">(<argument pos:start="813:35" pos:end="813:38"><expr pos:start="813:35" pos:end="813:38"><name pos:start="813:35" pos:end="813:38">tmp2</name></expr></argument>, <argument pos:start="813:41" pos:end="813:47"><expr pos:start="813:41" pos:end="813:47"><name pos:start="813:41" pos:end="813:47">shiftop</name></expr></argument>, <argument pos:start="813:50" pos:end="813:52"><expr pos:start="813:50" pos:end="813:52"><name pos:start="813:50" pos:end="813:52">tmp</name></expr></argument>, <argument pos:start="813:55" pos:end="813:62"><expr pos:start="813:55" pos:end="813:62"><name pos:start="813:55" pos:end="813:62">logic_cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="819:9" pos:end="829:9"><if pos:start="819:9" pos:end="825:9">if <condition pos:start="819:12" pos:end="819:39">(<expr pos:start="819:13" pos:end="819:38"><name pos:start="819:13" pos:end="819:15">op1</name> <operator pos:start="819:17" pos:end="819:18">!=</operator> <literal type="number" pos:start="819:20" pos:end="819:23">0x0f</literal> <operator pos:start="819:25" pos:end="819:26">&amp;&amp;</operator> <name pos:start="819:28" pos:end="819:30">op1</name> <operator pos:start="819:32" pos:end="819:33">!=</operator> <literal type="number" pos:start="819:35" pos:end="819:38">0x0d</literal></expr>)</condition> <block pos:start="819:41" pos:end="825:9">{<block_content pos:start="821:13" pos:end="823:34">

            <expr_stmt pos:start="821:13" pos:end="821:36"><expr pos:start="821:13" pos:end="821:35"><name pos:start="821:13" pos:end="821:14">rn</name> <operator pos:start="821:16" pos:end="821:16">=</operator> <operator pos:start="821:18" pos:end="821:18">(</operator><name pos:start="821:19" pos:end="821:22">insn</name> <operator pos:start="821:24" pos:end="821:25">&gt;&gt;</operator> <literal type="number" pos:start="821:27" pos:end="821:28">16</literal><operator pos:start="821:29" pos:end="821:29">)</operator> <operator pos:start="821:31" pos:end="821:31">&amp;</operator> <literal type="number" pos:start="821:33" pos:end="821:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="823:13" pos:end="823:34"><expr pos:start="823:13" pos:end="823:33"><name pos:start="823:13" pos:end="823:15">tmp</name> <operator pos:start="823:17" pos:end="823:17">=</operator> <call pos:start="823:19" pos:end="823:33"><name pos:start="823:19" pos:end="823:26">load_reg</name><argument_list pos:start="823:27" pos:end="823:33">(<argument pos:start="823:28" pos:end="823:28"><expr pos:start="823:28" pos:end="823:28"><name pos:start="823:28" pos:end="823:28">s</name></expr></argument>, <argument pos:start="823:31" pos:end="823:32"><expr pos:start="823:31" pos:end="823:32"><name pos:start="823:31" pos:end="823:32">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="825:11" pos:end="829:9">else <block pos:start="825:16" pos:end="829:9">{<block_content pos:start="827:13" pos:end="827:29">

            <expr_stmt pos:start="827:13" pos:end="827:29"><expr pos:start="827:13" pos:end="827:28"><call pos:start="827:13" pos:end="827:28"><name pos:start="827:13" pos:end="827:23">TCGV_UNUSED</name><argument_list pos:start="827:24" pos:end="827:28">(<argument pos:start="827:25" pos:end="827:27"><expr pos:start="827:25" pos:end="827:27"><name pos:start="827:25" pos:end="827:27">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="831:9" pos:end="831:32"><expr pos:start="831:9" pos:end="831:31"><name pos:start="831:9" pos:end="831:10">rd</name> <operator pos:start="831:12" pos:end="831:12">=</operator> <operator pos:start="831:14" pos:end="831:14">(</operator><name pos:start="831:15" pos:end="831:18">insn</name> <operator pos:start="831:20" pos:end="831:21">&gt;&gt;</operator> <literal type="number" pos:start="831:23" pos:end="831:24">12</literal><operator pos:start="831:25" pos:end="831:25">)</operator> <operator pos:start="831:27" pos:end="831:27">&amp;</operator> <literal type="number" pos:start="831:29" pos:end="831:31">0xf</literal></expr>;</expr_stmt>

        <switch pos:start="833:9" pos:end="1101:9">switch<condition pos:start="833:15" pos:end="833:19">(<expr pos:start="833:16" pos:end="833:18"><name pos:start="833:16" pos:end="833:18">op1</name></expr>)</condition> <block pos:start="833:21" pos:end="1101:9">{<block_content pos:start="835:9" pos:end="1099:18">

        <case pos:start="835:9" pos:end="835:18">case <expr pos:start="835:14" pos:end="835:17"><literal type="number" pos:start="835:14" pos:end="835:17">0x00</literal></expr>:</case>

            <expr_stmt pos:start="837:13" pos:end="837:44"><expr pos:start="837:13" pos:end="837:43"><call pos:start="837:13" pos:end="837:43"><name pos:start="837:13" pos:end="837:27">tcg_gen_and_i32</name><argument_list pos:start="837:28" pos:end="837:43">(<argument pos:start="837:29" pos:end="837:31"><expr pos:start="837:29" pos:end="837:31"><name pos:start="837:29" pos:end="837:31">tmp</name></expr></argument>, <argument pos:start="837:34" pos:end="837:36"><expr pos:start="837:34" pos:end="837:36"><name pos:start="837:34" pos:end="837:36">tmp</name></expr></argument>, <argument pos:start="837:39" pos:end="837:42"><expr pos:start="837:39" pos:end="837:42"><name pos:start="837:39" pos:end="837:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="839:13" pos:end="843:13"><if pos:start="839:13" pos:end="843:13">if <condition pos:start="839:16" pos:end="839:25">(<expr pos:start="839:17" pos:end="839:24"><name pos:start="839:17" pos:end="839:24">logic_cc</name></expr>)</condition> <block pos:start="839:27" pos:end="843:13">{<block_content pos:start="841:17" pos:end="841:34">

                <expr_stmt pos:start="841:17" pos:end="841:34"><expr pos:start="841:17" pos:end="841:33"><call pos:start="841:17" pos:end="841:33"><name pos:start="841:17" pos:end="841:28">gen_logic_CC</name><argument_list pos:start="841:29" pos:end="841:33">(<argument pos:start="841:30" pos:end="841:32"><expr pos:start="841:30" pos:end="841:32"><name pos:start="841:30" pos:end="841:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="845:13" pos:end="845:42"><expr pos:start="845:13" pos:end="845:41"><call pos:start="845:13" pos:end="845:41"><name pos:start="845:13" pos:end="845:24">store_reg_bx</name><argument_list pos:start="845:25" pos:end="845:41">(<argument pos:start="845:26" pos:end="845:28"><expr pos:start="845:26" pos:end="845:28"><name pos:start="845:26" pos:end="845:28">env</name></expr></argument>, <argument pos:start="845:31" pos:end="845:31"><expr pos:start="845:31" pos:end="845:31"><name pos:start="845:31" pos:end="845:31">s</name></expr></argument>, <argument pos:start="845:34" pos:end="845:35"><expr pos:start="845:34" pos:end="845:35"><name pos:start="845:34" pos:end="845:35">rd</name></expr></argument>, <argument pos:start="845:38" pos:end="845:40"><expr pos:start="845:38" pos:end="845:40"><name pos:start="845:38" pos:end="845:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="847:13" pos:end="847:18">break;</break>

        <case pos:start="849:9" pos:end="849:18">case <expr pos:start="849:14" pos:end="849:17"><literal type="number" pos:start="849:14" pos:end="849:17">0x01</literal></expr>:</case>

            <expr_stmt pos:start="851:13" pos:end="851:44"><expr pos:start="851:13" pos:end="851:43"><call pos:start="851:13" pos:end="851:43"><name pos:start="851:13" pos:end="851:27">tcg_gen_xor_i32</name><argument_list pos:start="851:28" pos:end="851:43">(<argument pos:start="851:29" pos:end="851:31"><expr pos:start="851:29" pos:end="851:31"><name pos:start="851:29" pos:end="851:31">tmp</name></expr></argument>, <argument pos:start="851:34" pos:end="851:36"><expr pos:start="851:34" pos:end="851:36"><name pos:start="851:34" pos:end="851:36">tmp</name></expr></argument>, <argument pos:start="851:39" pos:end="851:42"><expr pos:start="851:39" pos:end="851:42"><name pos:start="851:39" pos:end="851:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="853:13" pos:end="857:13"><if pos:start="853:13" pos:end="857:13">if <condition pos:start="853:16" pos:end="853:25">(<expr pos:start="853:17" pos:end="853:24"><name pos:start="853:17" pos:end="853:24">logic_cc</name></expr>)</condition> <block pos:start="853:27" pos:end="857:13">{<block_content pos:start="855:17" pos:end="855:34">

                <expr_stmt pos:start="855:17" pos:end="855:34"><expr pos:start="855:17" pos:end="855:33"><call pos:start="855:17" pos:end="855:33"><name pos:start="855:17" pos:end="855:28">gen_logic_CC</name><argument_list pos:start="855:29" pos:end="855:33">(<argument pos:start="855:30" pos:end="855:32"><expr pos:start="855:30" pos:end="855:32"><name pos:start="855:30" pos:end="855:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="859:13" pos:end="859:42"><expr pos:start="859:13" pos:end="859:41"><call pos:start="859:13" pos:end="859:41"><name pos:start="859:13" pos:end="859:24">store_reg_bx</name><argument_list pos:start="859:25" pos:end="859:41">(<argument pos:start="859:26" pos:end="859:28"><expr pos:start="859:26" pos:end="859:28"><name pos:start="859:26" pos:end="859:28">env</name></expr></argument>, <argument pos:start="859:31" pos:end="859:31"><expr pos:start="859:31" pos:end="859:31"><name pos:start="859:31" pos:end="859:31">s</name></expr></argument>, <argument pos:start="859:34" pos:end="859:35"><expr pos:start="859:34" pos:end="859:35"><name pos:start="859:34" pos:end="859:35">rd</name></expr></argument>, <argument pos:start="859:38" pos:end="859:40"><expr pos:start="859:38" pos:end="859:40"><name pos:start="859:38" pos:end="859:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="861:13" pos:end="861:18">break;</break>

        <case pos:start="863:9" pos:end="863:18">case <expr pos:start="863:14" pos:end="863:17"><literal type="number" pos:start="863:14" pos:end="863:17">0x02</literal></expr>:</case>

            <if_stmt pos:start="865:13" pos:end="893:13"><if pos:start="865:13" pos:end="879:13">if <condition pos:start="865:16" pos:end="865:35">(<expr pos:start="865:17" pos:end="865:34"><name pos:start="865:17" pos:end="865:22">set_cc</name> <operator pos:start="865:24" pos:end="865:25">&amp;&amp;</operator> <name pos:start="865:27" pos:end="865:28">rd</name> <operator pos:start="865:30" pos:end="865:31">==</operator> <literal type="number" pos:start="865:33" pos:end="865:34">15</literal></expr>)</condition> <block pos:start="865:37" pos:end="879:13">{<block_content pos:start="869:17" pos:end="877:45">

                <comment type="block" pos:start="867:17" pos:end="867:66">/* SUBS r15, ... is used for exception return.  */</comment>

                <if_stmt pos:start="869:17" pos:end="873:17"><if pos:start="869:17" pos:end="873:17">if <condition pos:start="869:20" pos:end="869:31">(<expr pos:start="869:21" pos:end="869:30"><call pos:start="869:21" pos:end="869:30"><name pos:start="869:21" pos:end="869:27">IS_USER</name><argument_list pos:start="869:28" pos:end="869:30">(<argument pos:start="869:29" pos:end="869:29"><expr pos:start="869:29" pos:end="869:29"><name pos:start="869:29" pos:end="869:29">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="869:33" pos:end="873:17">{<block_content pos:start="871:21" pos:end="871:36">

                    <goto pos:start="871:21" pos:end="871:36">goto <name pos:start="871:26" pos:end="871:35">illegal_op</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="875:17" pos:end="875:43"><expr pos:start="875:17" pos:end="875:42"><call pos:start="875:17" pos:end="875:42"><name pos:start="875:17" pos:end="875:26">gen_sub_CC</name><argument_list pos:start="875:27" pos:end="875:42">(<argument pos:start="875:28" pos:end="875:30"><expr pos:start="875:28" pos:end="875:30"><name pos:start="875:28" pos:end="875:30">tmp</name></expr></argument>, <argument pos:start="875:33" pos:end="875:35"><expr pos:start="875:33" pos:end="875:35"><name pos:start="875:33" pos:end="875:35">tmp</name></expr></argument>, <argument pos:start="875:38" pos:end="875:41"><expr pos:start="875:38" pos:end="875:41"><name pos:start="875:38" pos:end="875:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="877:17" pos:end="877:45"><expr pos:start="877:17" pos:end="877:44"><call pos:start="877:17" pos:end="877:44"><name pos:start="877:17" pos:end="877:36">gen_exception_return</name><argument_list pos:start="877:37" pos:end="877:44">(<argument pos:start="877:38" pos:end="877:38"><expr pos:start="877:38" pos:end="877:38"><name pos:start="877:38" pos:end="877:38">s</name></expr></argument>, <argument pos:start="877:41" pos:end="877:43"><expr pos:start="877:41" pos:end="877:43"><name pos:start="877:41" pos:end="877:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="879:15" pos:end="893:13">else <block pos:start="879:20" pos:end="893:13">{<block_content pos:start="881:17" pos:end="891:46">

                <if_stmt pos:start="881:17" pos:end="889:17"><if pos:start="881:17" pos:end="885:17">if <condition pos:start="881:20" pos:end="881:27">(<expr pos:start="881:21" pos:end="881:26"><name pos:start="881:21" pos:end="881:26">set_cc</name></expr>)</condition> <block pos:start="881:29" pos:end="885:17">{<block_content pos:start="883:21" pos:end="883:47">

                    <expr_stmt pos:start="883:21" pos:end="883:47"><expr pos:start="883:21" pos:end="883:46"><call pos:start="883:21" pos:end="883:46"><name pos:start="883:21" pos:end="883:30">gen_sub_CC</name><argument_list pos:start="883:31" pos:end="883:46">(<argument pos:start="883:32" pos:end="883:34"><expr pos:start="883:32" pos:end="883:34"><name pos:start="883:32" pos:end="883:34">tmp</name></expr></argument>, <argument pos:start="883:37" pos:end="883:39"><expr pos:start="883:37" pos:end="883:39"><name pos:start="883:37" pos:end="883:39">tmp</name></expr></argument>, <argument pos:start="883:42" pos:end="883:45"><expr pos:start="883:42" pos:end="883:45"><name pos:start="883:42" pos:end="883:45">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="885:19" pos:end="889:17">else <block pos:start="885:24" pos:end="889:17">{<block_content pos:start="887:21" pos:end="887:52">

                    <expr_stmt pos:start="887:21" pos:end="887:52"><expr pos:start="887:21" pos:end="887:51"><call pos:start="887:21" pos:end="887:51"><name pos:start="887:21" pos:end="887:35">tcg_gen_sub_i32</name><argument_list pos:start="887:36" pos:end="887:51">(<argument pos:start="887:37" pos:end="887:39"><expr pos:start="887:37" pos:end="887:39"><name pos:start="887:37" pos:end="887:39">tmp</name></expr></argument>, <argument pos:start="887:42" pos:end="887:44"><expr pos:start="887:42" pos:end="887:44"><name pos:start="887:42" pos:end="887:44">tmp</name></expr></argument>, <argument pos:start="887:47" pos:end="887:50"><expr pos:start="887:47" pos:end="887:50"><name pos:start="887:47" pos:end="887:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="891:17" pos:end="891:46"><expr pos:start="891:17" pos:end="891:45"><call pos:start="891:17" pos:end="891:45"><name pos:start="891:17" pos:end="891:28">store_reg_bx</name><argument_list pos:start="891:29" pos:end="891:45">(<argument pos:start="891:30" pos:end="891:32"><expr pos:start="891:30" pos:end="891:32"><name pos:start="891:30" pos:end="891:32">env</name></expr></argument>, <argument pos:start="891:35" pos:end="891:35"><expr pos:start="891:35" pos:end="891:35"><name pos:start="891:35" pos:end="891:35">s</name></expr></argument>, <argument pos:start="891:38" pos:end="891:39"><expr pos:start="891:38" pos:end="891:39"><name pos:start="891:38" pos:end="891:39">rd</name></expr></argument>, <argument pos:start="891:42" pos:end="891:44"><expr pos:start="891:42" pos:end="891:44"><name pos:start="891:42" pos:end="891:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="895:13" pos:end="895:18">break;</break>

        <case pos:start="897:9" pos:end="897:18">case <expr pos:start="897:14" pos:end="897:17"><literal type="number" pos:start="897:14" pos:end="897:17">0x03</literal></expr>:</case>

            <if_stmt pos:start="899:13" pos:end="907:13"><if pos:start="899:13" pos:end="903:13">if <condition pos:start="899:16" pos:end="899:23">(<expr pos:start="899:17" pos:end="899:22"><name pos:start="899:17" pos:end="899:22">set_cc</name></expr>)</condition> <block pos:start="899:25" pos:end="903:13">{<block_content pos:start="901:17" pos:end="901:43">

                <expr_stmt pos:start="901:17" pos:end="901:43"><expr pos:start="901:17" pos:end="901:42"><call pos:start="901:17" pos:end="901:42"><name pos:start="901:17" pos:end="901:26">gen_sub_CC</name><argument_list pos:start="901:27" pos:end="901:42">(<argument pos:start="901:28" pos:end="901:30"><expr pos:start="901:28" pos:end="901:30"><name pos:start="901:28" pos:end="901:30">tmp</name></expr></argument>, <argument pos:start="901:33" pos:end="901:36"><expr pos:start="901:33" pos:end="901:36"><name pos:start="901:33" pos:end="901:36">tmp2</name></expr></argument>, <argument pos:start="901:39" pos:end="901:41"><expr pos:start="901:39" pos:end="901:41"><name pos:start="901:39" pos:end="901:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="903:15" pos:end="907:13">else <block pos:start="903:20" pos:end="907:13">{<block_content pos:start="905:17" pos:end="905:48">

                <expr_stmt pos:start="905:17" pos:end="905:48"><expr pos:start="905:17" pos:end="905:47"><call pos:start="905:17" pos:end="905:47"><name pos:start="905:17" pos:end="905:31">tcg_gen_sub_i32</name><argument_list pos:start="905:32" pos:end="905:47">(<argument pos:start="905:33" pos:end="905:35"><expr pos:start="905:33" pos:end="905:35"><name pos:start="905:33" pos:end="905:35">tmp</name></expr></argument>, <argument pos:start="905:38" pos:end="905:41"><expr pos:start="905:38" pos:end="905:41"><name pos:start="905:38" pos:end="905:41">tmp2</name></expr></argument>, <argument pos:start="905:44" pos:end="905:46"><expr pos:start="905:44" pos:end="905:46"><name pos:start="905:44" pos:end="905:46">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="909:13" pos:end="909:42"><expr pos:start="909:13" pos:end="909:41"><call pos:start="909:13" pos:end="909:41"><name pos:start="909:13" pos:end="909:24">store_reg_bx</name><argument_list pos:start="909:25" pos:end="909:41">(<argument pos:start="909:26" pos:end="909:28"><expr pos:start="909:26" pos:end="909:28"><name pos:start="909:26" pos:end="909:28">env</name></expr></argument>, <argument pos:start="909:31" pos:end="909:31"><expr pos:start="909:31" pos:end="909:31"><name pos:start="909:31" pos:end="909:31">s</name></expr></argument>, <argument pos:start="909:34" pos:end="909:35"><expr pos:start="909:34" pos:end="909:35"><name pos:start="909:34" pos:end="909:35">rd</name></expr></argument>, <argument pos:start="909:38" pos:end="909:40"><expr pos:start="909:38" pos:end="909:40"><name pos:start="909:38" pos:end="909:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="911:13" pos:end="911:18">break;</break>

        <case pos:start="913:9" pos:end="913:18">case <expr pos:start="913:14" pos:end="913:17"><literal type="number" pos:start="913:14" pos:end="913:17">0x04</literal></expr>:</case>

            <if_stmt pos:start="915:13" pos:end="923:13"><if pos:start="915:13" pos:end="919:13">if <condition pos:start="915:16" pos:end="915:23">(<expr pos:start="915:17" pos:end="915:22"><name pos:start="915:17" pos:end="915:22">set_cc</name></expr>)</condition> <block pos:start="915:25" pos:end="919:13">{<block_content pos:start="917:17" pos:end="917:43">

                <expr_stmt pos:start="917:17" pos:end="917:43"><expr pos:start="917:17" pos:end="917:42"><call pos:start="917:17" pos:end="917:42"><name pos:start="917:17" pos:end="917:26">gen_add_CC</name><argument_list pos:start="917:27" pos:end="917:42">(<argument pos:start="917:28" pos:end="917:30"><expr pos:start="917:28" pos:end="917:30"><name pos:start="917:28" pos:end="917:30">tmp</name></expr></argument>, <argument pos:start="917:33" pos:end="917:35"><expr pos:start="917:33" pos:end="917:35"><name pos:start="917:33" pos:end="917:35">tmp</name></expr></argument>, <argument pos:start="917:38" pos:end="917:41"><expr pos:start="917:38" pos:end="917:41"><name pos:start="917:38" pos:end="917:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="919:15" pos:end="923:13">else <block pos:start="919:20" pos:end="923:13">{<block_content pos:start="921:17" pos:end="921:48">

                <expr_stmt pos:start="921:17" pos:end="921:48"><expr pos:start="921:17" pos:end="921:47"><call pos:start="921:17" pos:end="921:47"><name pos:start="921:17" pos:end="921:31">tcg_gen_add_i32</name><argument_list pos:start="921:32" pos:end="921:47">(<argument pos:start="921:33" pos:end="921:35"><expr pos:start="921:33" pos:end="921:35"><name pos:start="921:33" pos:end="921:35">tmp</name></expr></argument>, <argument pos:start="921:38" pos:end="921:40"><expr pos:start="921:38" pos:end="921:40"><name pos:start="921:38" pos:end="921:40">tmp</name></expr></argument>, <argument pos:start="921:43" pos:end="921:46"><expr pos:start="921:43" pos:end="921:46"><name pos:start="921:43" pos:end="921:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="925:13" pos:end="925:42"><expr pos:start="925:13" pos:end="925:41"><call pos:start="925:13" pos:end="925:41"><name pos:start="925:13" pos:end="925:24">store_reg_bx</name><argument_list pos:start="925:25" pos:end="925:41">(<argument pos:start="925:26" pos:end="925:28"><expr pos:start="925:26" pos:end="925:28"><name pos:start="925:26" pos:end="925:28">env</name></expr></argument>, <argument pos:start="925:31" pos:end="925:31"><expr pos:start="925:31" pos:end="925:31"><name pos:start="925:31" pos:end="925:31">s</name></expr></argument>, <argument pos:start="925:34" pos:end="925:35"><expr pos:start="925:34" pos:end="925:35"><name pos:start="925:34" pos:end="925:35">rd</name></expr></argument>, <argument pos:start="925:38" pos:end="925:40"><expr pos:start="925:38" pos:end="925:40"><name pos:start="925:38" pos:end="925:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="927:13" pos:end="927:18">break;</break>

        <case pos:start="929:9" pos:end="929:18">case <expr pos:start="929:14" pos:end="929:17"><literal type="number" pos:start="929:14" pos:end="929:17">0x05</literal></expr>:</case>

            <if_stmt pos:start="931:13" pos:end="939:13"><if pos:start="931:13" pos:end="935:13">if <condition pos:start="931:16" pos:end="931:23">(<expr pos:start="931:17" pos:end="931:22"><name pos:start="931:17" pos:end="931:22">set_cc</name></expr>)</condition> <block pos:start="931:25" pos:end="935:13">{<block_content pos:start="933:17" pos:end="933:43">

                <expr_stmt pos:start="933:17" pos:end="933:43"><expr pos:start="933:17" pos:end="933:42"><call pos:start="933:17" pos:end="933:42"><name pos:start="933:17" pos:end="933:26">gen_adc_CC</name><argument_list pos:start="933:27" pos:end="933:42">(<argument pos:start="933:28" pos:end="933:30"><expr pos:start="933:28" pos:end="933:30"><name pos:start="933:28" pos:end="933:30">tmp</name></expr></argument>, <argument pos:start="933:33" pos:end="933:35"><expr pos:start="933:33" pos:end="933:35"><name pos:start="933:33" pos:end="933:35">tmp</name></expr></argument>, <argument pos:start="933:38" pos:end="933:41"><expr pos:start="933:38" pos:end="933:41"><name pos:start="933:38" pos:end="933:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="935:15" pos:end="939:13">else <block pos:start="935:20" pos:end="939:13">{<block_content pos:start="937:17" pos:end="937:46">

                <expr_stmt pos:start="937:17" pos:end="937:46"><expr pos:start="937:17" pos:end="937:45"><call pos:start="937:17" pos:end="937:45"><name pos:start="937:17" pos:end="937:29">gen_add_carry</name><argument_list pos:start="937:30" pos:end="937:45">(<argument pos:start="937:31" pos:end="937:33"><expr pos:start="937:31" pos:end="937:33"><name pos:start="937:31" pos:end="937:33">tmp</name></expr></argument>, <argument pos:start="937:36" pos:end="937:38"><expr pos:start="937:36" pos:end="937:38"><name pos:start="937:36" pos:end="937:38">tmp</name></expr></argument>, <argument pos:start="937:41" pos:end="937:44"><expr pos:start="937:41" pos:end="937:44"><name pos:start="937:41" pos:end="937:44">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="941:13" pos:end="941:42"><expr pos:start="941:13" pos:end="941:41"><call pos:start="941:13" pos:end="941:41"><name pos:start="941:13" pos:end="941:24">store_reg_bx</name><argument_list pos:start="941:25" pos:end="941:41">(<argument pos:start="941:26" pos:end="941:28"><expr pos:start="941:26" pos:end="941:28"><name pos:start="941:26" pos:end="941:28">env</name></expr></argument>, <argument pos:start="941:31" pos:end="941:31"><expr pos:start="941:31" pos:end="941:31"><name pos:start="941:31" pos:end="941:31">s</name></expr></argument>, <argument pos:start="941:34" pos:end="941:35"><expr pos:start="941:34" pos:end="941:35"><name pos:start="941:34" pos:end="941:35">rd</name></expr></argument>, <argument pos:start="941:38" pos:end="941:40"><expr pos:start="941:38" pos:end="941:40"><name pos:start="941:38" pos:end="941:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="943:13" pos:end="943:18">break;</break>

        <case pos:start="945:9" pos:end="945:18">case <expr pos:start="945:14" pos:end="945:17"><literal type="number" pos:start="945:14" pos:end="945:17">0x06</literal></expr>:</case>

            <if_stmt pos:start="947:13" pos:end="955:13"><if pos:start="947:13" pos:end="951:13">if <condition pos:start="947:16" pos:end="947:23">(<expr pos:start="947:17" pos:end="947:22"><name pos:start="947:17" pos:end="947:22">set_cc</name></expr>)</condition> <block pos:start="947:25" pos:end="951:13">{<block_content pos:start="949:17" pos:end="949:43">

                <expr_stmt pos:start="949:17" pos:end="949:43"><expr pos:start="949:17" pos:end="949:42"><call pos:start="949:17" pos:end="949:42"><name pos:start="949:17" pos:end="949:26">gen_sbc_CC</name><argument_list pos:start="949:27" pos:end="949:42">(<argument pos:start="949:28" pos:end="949:30"><expr pos:start="949:28" pos:end="949:30"><name pos:start="949:28" pos:end="949:30">tmp</name></expr></argument>, <argument pos:start="949:33" pos:end="949:35"><expr pos:start="949:33" pos:end="949:35"><name pos:start="949:33" pos:end="949:35">tmp</name></expr></argument>, <argument pos:start="949:38" pos:end="949:41"><expr pos:start="949:38" pos:end="949:41"><name pos:start="949:38" pos:end="949:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="951:15" pos:end="955:13">else <block pos:start="951:20" pos:end="955:13">{<block_content pos:start="953:17" pos:end="953:46">

                <expr_stmt pos:start="953:17" pos:end="953:46"><expr pos:start="953:17" pos:end="953:45"><call pos:start="953:17" pos:end="953:45"><name pos:start="953:17" pos:end="953:29">gen_sub_carry</name><argument_list pos:start="953:30" pos:end="953:45">(<argument pos:start="953:31" pos:end="953:33"><expr pos:start="953:31" pos:end="953:33"><name pos:start="953:31" pos:end="953:33">tmp</name></expr></argument>, <argument pos:start="953:36" pos:end="953:38"><expr pos:start="953:36" pos:end="953:38"><name pos:start="953:36" pos:end="953:38">tmp</name></expr></argument>, <argument pos:start="953:41" pos:end="953:44"><expr pos:start="953:41" pos:end="953:44"><name pos:start="953:41" pos:end="953:44">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="957:13" pos:end="957:42"><expr pos:start="957:13" pos:end="957:41"><call pos:start="957:13" pos:end="957:41"><name pos:start="957:13" pos:end="957:24">store_reg_bx</name><argument_list pos:start="957:25" pos:end="957:41">(<argument pos:start="957:26" pos:end="957:28"><expr pos:start="957:26" pos:end="957:28"><name pos:start="957:26" pos:end="957:28">env</name></expr></argument>, <argument pos:start="957:31" pos:end="957:31"><expr pos:start="957:31" pos:end="957:31"><name pos:start="957:31" pos:end="957:31">s</name></expr></argument>, <argument pos:start="957:34" pos:end="957:35"><expr pos:start="957:34" pos:end="957:35"><name pos:start="957:34" pos:end="957:35">rd</name></expr></argument>, <argument pos:start="957:38" pos:end="957:40"><expr pos:start="957:38" pos:end="957:40"><name pos:start="957:38" pos:end="957:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="959:13" pos:end="959:18">break;</break>

        <case pos:start="961:9" pos:end="961:18">case <expr pos:start="961:14" pos:end="961:17"><literal type="number" pos:start="961:14" pos:end="961:17">0x07</literal></expr>:</case>

            <if_stmt pos:start="963:13" pos:end="971:13"><if pos:start="963:13" pos:end="967:13">if <condition pos:start="963:16" pos:end="963:23">(<expr pos:start="963:17" pos:end="963:22"><name pos:start="963:17" pos:end="963:22">set_cc</name></expr>)</condition> <block pos:start="963:25" pos:end="967:13">{<block_content pos:start="965:17" pos:end="965:43">

                <expr_stmt pos:start="965:17" pos:end="965:43"><expr pos:start="965:17" pos:end="965:42"><call pos:start="965:17" pos:end="965:42"><name pos:start="965:17" pos:end="965:26">gen_sbc_CC</name><argument_list pos:start="965:27" pos:end="965:42">(<argument pos:start="965:28" pos:end="965:30"><expr pos:start="965:28" pos:end="965:30"><name pos:start="965:28" pos:end="965:30">tmp</name></expr></argument>, <argument pos:start="965:33" pos:end="965:36"><expr pos:start="965:33" pos:end="965:36"><name pos:start="965:33" pos:end="965:36">tmp2</name></expr></argument>, <argument pos:start="965:39" pos:end="965:41"><expr pos:start="965:39" pos:end="965:41"><name pos:start="965:39" pos:end="965:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="967:15" pos:end="971:13">else <block pos:start="967:20" pos:end="971:13">{<block_content pos:start="969:17" pos:end="969:46">

                <expr_stmt pos:start="969:17" pos:end="969:46"><expr pos:start="969:17" pos:end="969:45"><call pos:start="969:17" pos:end="969:45"><name pos:start="969:17" pos:end="969:29">gen_sub_carry</name><argument_list pos:start="969:30" pos:end="969:45">(<argument pos:start="969:31" pos:end="969:33"><expr pos:start="969:31" pos:end="969:33"><name pos:start="969:31" pos:end="969:33">tmp</name></expr></argument>, <argument pos:start="969:36" pos:end="969:39"><expr pos:start="969:36" pos:end="969:39"><name pos:start="969:36" pos:end="969:39">tmp2</name></expr></argument>, <argument pos:start="969:42" pos:end="969:44"><expr pos:start="969:42" pos:end="969:44"><name pos:start="969:42" pos:end="969:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="973:13" pos:end="973:42"><expr pos:start="973:13" pos:end="973:41"><call pos:start="973:13" pos:end="973:41"><name pos:start="973:13" pos:end="973:24">store_reg_bx</name><argument_list pos:start="973:25" pos:end="973:41">(<argument pos:start="973:26" pos:end="973:28"><expr pos:start="973:26" pos:end="973:28"><name pos:start="973:26" pos:end="973:28">env</name></expr></argument>, <argument pos:start="973:31" pos:end="973:31"><expr pos:start="973:31" pos:end="973:31"><name pos:start="973:31" pos:end="973:31">s</name></expr></argument>, <argument pos:start="973:34" pos:end="973:35"><expr pos:start="973:34" pos:end="973:35"><name pos:start="973:34" pos:end="973:35">rd</name></expr></argument>, <argument pos:start="973:38" pos:end="973:40"><expr pos:start="973:38" pos:end="973:40"><name pos:start="973:38" pos:end="973:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="975:13" pos:end="975:18">break;</break>

        <case pos:start="977:9" pos:end="977:18">case <expr pos:start="977:14" pos:end="977:17"><literal type="number" pos:start="977:14" pos:end="977:17">0x08</literal></expr>:</case>

            <if_stmt pos:start="979:13" pos:end="985:13"><if pos:start="979:13" pos:end="985:13">if <condition pos:start="979:16" pos:end="979:23">(<expr pos:start="979:17" pos:end="979:22"><name pos:start="979:17" pos:end="979:22">set_cc</name></expr>)</condition> <block pos:start="979:25" pos:end="985:13">{<block_content pos:start="981:17" pos:end="983:34">

                <expr_stmt pos:start="981:17" pos:end="981:48"><expr pos:start="981:17" pos:end="981:47"><call pos:start="981:17" pos:end="981:47"><name pos:start="981:17" pos:end="981:31">tcg_gen_and_i32</name><argument_list pos:start="981:32" pos:end="981:47">(<argument pos:start="981:33" pos:end="981:35"><expr pos:start="981:33" pos:end="981:35"><name pos:start="981:33" pos:end="981:35">tmp</name></expr></argument>, <argument pos:start="981:38" pos:end="981:40"><expr pos:start="981:38" pos:end="981:40"><name pos:start="981:38" pos:end="981:40">tmp</name></expr></argument>, <argument pos:start="981:43" pos:end="981:46"><expr pos:start="981:43" pos:end="981:46"><name pos:start="981:43" pos:end="981:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="983:17" pos:end="983:34"><expr pos:start="983:17" pos:end="983:33"><call pos:start="983:17" pos:end="983:33"><name pos:start="983:17" pos:end="983:28">gen_logic_CC</name><argument_list pos:start="983:29" pos:end="983:33">(<argument pos:start="983:30" pos:end="983:32"><expr pos:start="983:30" pos:end="983:32"><name pos:start="983:30" pos:end="983:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="987:13" pos:end="987:35"><expr pos:start="987:13" pos:end="987:34"><call pos:start="987:13" pos:end="987:34"><name pos:start="987:13" pos:end="987:29">tcg_temp_free_i32</name><argument_list pos:start="987:30" pos:end="987:34">(<argument pos:start="987:31" pos:end="987:33"><expr pos:start="987:31" pos:end="987:33"><name pos:start="987:31" pos:end="987:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="989:13" pos:end="989:18">break;</break>

        <case pos:start="991:9" pos:end="991:18">case <expr pos:start="991:14" pos:end="991:17"><literal type="number" pos:start="991:14" pos:end="991:17">0x09</literal></expr>:</case>

            <if_stmt pos:start="993:13" pos:end="999:13"><if pos:start="993:13" pos:end="999:13">if <condition pos:start="993:16" pos:end="993:23">(<expr pos:start="993:17" pos:end="993:22"><name pos:start="993:17" pos:end="993:22">set_cc</name></expr>)</condition> <block pos:start="993:25" pos:end="999:13">{<block_content pos:start="995:17" pos:end="997:34">

                <expr_stmt pos:start="995:17" pos:end="995:48"><expr pos:start="995:17" pos:end="995:47"><call pos:start="995:17" pos:end="995:47"><name pos:start="995:17" pos:end="995:31">tcg_gen_xor_i32</name><argument_list pos:start="995:32" pos:end="995:47">(<argument pos:start="995:33" pos:end="995:35"><expr pos:start="995:33" pos:end="995:35"><name pos:start="995:33" pos:end="995:35">tmp</name></expr></argument>, <argument pos:start="995:38" pos:end="995:40"><expr pos:start="995:38" pos:end="995:40"><name pos:start="995:38" pos:end="995:40">tmp</name></expr></argument>, <argument pos:start="995:43" pos:end="995:46"><expr pos:start="995:43" pos:end="995:46"><name pos:start="995:43" pos:end="995:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="997:17" pos:end="997:34"><expr pos:start="997:17" pos:end="997:33"><call pos:start="997:17" pos:end="997:33"><name pos:start="997:17" pos:end="997:28">gen_logic_CC</name><argument_list pos:start="997:29" pos:end="997:33">(<argument pos:start="997:30" pos:end="997:32"><expr pos:start="997:30" pos:end="997:32"><name pos:start="997:30" pos:end="997:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1001:13" pos:end="1001:35"><expr pos:start="1001:13" pos:end="1001:34"><call pos:start="1001:13" pos:end="1001:34"><name pos:start="1001:13" pos:end="1001:29">tcg_temp_free_i32</name><argument_list pos:start="1001:30" pos:end="1001:34">(<argument pos:start="1001:31" pos:end="1001:33"><expr pos:start="1001:31" pos:end="1001:33"><name pos:start="1001:31" pos:end="1001:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1003:13" pos:end="1003:18">break;</break>

        <case pos:start="1005:9" pos:end="1005:18">case <expr pos:start="1005:14" pos:end="1005:17"><literal type="number" pos:start="1005:14" pos:end="1005:17">0x0a</literal></expr>:</case>

            <if_stmt pos:start="1007:13" pos:end="1011:13"><if pos:start="1007:13" pos:end="1011:13">if <condition pos:start="1007:16" pos:end="1007:23">(<expr pos:start="1007:17" pos:end="1007:22"><name pos:start="1007:17" pos:end="1007:22">set_cc</name></expr>)</condition> <block pos:start="1007:25" pos:end="1011:13">{<block_content pos:start="1009:17" pos:end="1009:43">

                <expr_stmt pos:start="1009:17" pos:end="1009:43"><expr pos:start="1009:17" pos:end="1009:42"><call pos:start="1009:17" pos:end="1009:42"><name pos:start="1009:17" pos:end="1009:26">gen_sub_CC</name><argument_list pos:start="1009:27" pos:end="1009:42">(<argument pos:start="1009:28" pos:end="1009:30"><expr pos:start="1009:28" pos:end="1009:30"><name pos:start="1009:28" pos:end="1009:30">tmp</name></expr></argument>, <argument pos:start="1009:33" pos:end="1009:35"><expr pos:start="1009:33" pos:end="1009:35"><name pos:start="1009:33" pos:end="1009:35">tmp</name></expr></argument>, <argument pos:start="1009:38" pos:end="1009:41"><expr pos:start="1009:38" pos:end="1009:41"><name pos:start="1009:38" pos:end="1009:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1013:13" pos:end="1013:35"><expr pos:start="1013:13" pos:end="1013:34"><call pos:start="1013:13" pos:end="1013:34"><name pos:start="1013:13" pos:end="1013:29">tcg_temp_free_i32</name><argument_list pos:start="1013:30" pos:end="1013:34">(<argument pos:start="1013:31" pos:end="1013:33"><expr pos:start="1013:31" pos:end="1013:33"><name pos:start="1013:31" pos:end="1013:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1015:13" pos:end="1015:18">break;</break>

        <case pos:start="1017:9" pos:end="1017:18">case <expr pos:start="1017:14" pos:end="1017:17"><literal type="number" pos:start="1017:14" pos:end="1017:17">0x0b</literal></expr>:</case>

            <if_stmt pos:start="1019:13" pos:end="1023:13"><if pos:start="1019:13" pos:end="1023:13">if <condition pos:start="1019:16" pos:end="1019:23">(<expr pos:start="1019:17" pos:end="1019:22"><name pos:start="1019:17" pos:end="1019:22">set_cc</name></expr>)</condition> <block pos:start="1019:25" pos:end="1023:13">{<block_content pos:start="1021:17" pos:end="1021:43">

                <expr_stmt pos:start="1021:17" pos:end="1021:43"><expr pos:start="1021:17" pos:end="1021:42"><call pos:start="1021:17" pos:end="1021:42"><name pos:start="1021:17" pos:end="1021:26">gen_add_CC</name><argument_list pos:start="1021:27" pos:end="1021:42">(<argument pos:start="1021:28" pos:end="1021:30"><expr pos:start="1021:28" pos:end="1021:30"><name pos:start="1021:28" pos:end="1021:30">tmp</name></expr></argument>, <argument pos:start="1021:33" pos:end="1021:35"><expr pos:start="1021:33" pos:end="1021:35"><name pos:start="1021:33" pos:end="1021:35">tmp</name></expr></argument>, <argument pos:start="1021:38" pos:end="1021:41"><expr pos:start="1021:38" pos:end="1021:41"><name pos:start="1021:38" pos:end="1021:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1025:13" pos:end="1025:35"><expr pos:start="1025:13" pos:end="1025:34"><call pos:start="1025:13" pos:end="1025:34"><name pos:start="1025:13" pos:end="1025:29">tcg_temp_free_i32</name><argument_list pos:start="1025:30" pos:end="1025:34">(<argument pos:start="1025:31" pos:end="1025:33"><expr pos:start="1025:31" pos:end="1025:33"><name pos:start="1025:31" pos:end="1025:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1027:13" pos:end="1027:18">break;</break>

        <case pos:start="1029:9" pos:end="1029:18">case <expr pos:start="1029:14" pos:end="1029:17"><literal type="number" pos:start="1029:14" pos:end="1029:17">0x0c</literal></expr>:</case>

            <expr_stmt pos:start="1031:13" pos:end="1031:43"><expr pos:start="1031:13" pos:end="1031:42"><call pos:start="1031:13" pos:end="1031:42"><name pos:start="1031:13" pos:end="1031:26">tcg_gen_or_i32</name><argument_list pos:start="1031:27" pos:end="1031:42">(<argument pos:start="1031:28" pos:end="1031:30"><expr pos:start="1031:28" pos:end="1031:30"><name pos:start="1031:28" pos:end="1031:30">tmp</name></expr></argument>, <argument pos:start="1031:33" pos:end="1031:35"><expr pos:start="1031:33" pos:end="1031:35"><name pos:start="1031:33" pos:end="1031:35">tmp</name></expr></argument>, <argument pos:start="1031:38" pos:end="1031:41"><expr pos:start="1031:38" pos:end="1031:41"><name pos:start="1031:38" pos:end="1031:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1033:13" pos:end="1037:13"><if pos:start="1033:13" pos:end="1037:13">if <condition pos:start="1033:16" pos:end="1033:25">(<expr pos:start="1033:17" pos:end="1033:24"><name pos:start="1033:17" pos:end="1033:24">logic_cc</name></expr>)</condition> <block pos:start="1033:27" pos:end="1037:13">{<block_content pos:start="1035:17" pos:end="1035:34">

                <expr_stmt pos:start="1035:17" pos:end="1035:34"><expr pos:start="1035:17" pos:end="1035:33"><call pos:start="1035:17" pos:end="1035:33"><name pos:start="1035:17" pos:end="1035:28">gen_logic_CC</name><argument_list pos:start="1035:29" pos:end="1035:33">(<argument pos:start="1035:30" pos:end="1035:32"><expr pos:start="1035:30" pos:end="1035:32"><name pos:start="1035:30" pos:end="1035:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1039:13" pos:end="1039:42"><expr pos:start="1039:13" pos:end="1039:41"><call pos:start="1039:13" pos:end="1039:41"><name pos:start="1039:13" pos:end="1039:24">store_reg_bx</name><argument_list pos:start="1039:25" pos:end="1039:41">(<argument pos:start="1039:26" pos:end="1039:28"><expr pos:start="1039:26" pos:end="1039:28"><name pos:start="1039:26" pos:end="1039:28">env</name></expr></argument>, <argument pos:start="1039:31" pos:end="1039:31"><expr pos:start="1039:31" pos:end="1039:31"><name pos:start="1039:31" pos:end="1039:31">s</name></expr></argument>, <argument pos:start="1039:34" pos:end="1039:35"><expr pos:start="1039:34" pos:end="1039:35"><name pos:start="1039:34" pos:end="1039:35">rd</name></expr></argument>, <argument pos:start="1039:38" pos:end="1039:40"><expr pos:start="1039:38" pos:end="1039:40"><name pos:start="1039:38" pos:end="1039:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1041:13" pos:end="1041:18">break;</break>

        <case pos:start="1043:9" pos:end="1043:18">case <expr pos:start="1043:14" pos:end="1043:17"><literal type="number" pos:start="1043:14" pos:end="1043:17">0x0d</literal></expr>:</case>

            <if_stmt pos:start="1045:13" pos:end="1067:13"><if pos:start="1045:13" pos:end="1057:13">if <condition pos:start="1045:16" pos:end="1045:37">(<expr pos:start="1045:17" pos:end="1045:36"><name pos:start="1045:17" pos:end="1045:24">logic_cc</name> <operator pos:start="1045:26" pos:end="1045:27">&amp;&amp;</operator> <name pos:start="1045:29" pos:end="1045:30">rd</name> <operator pos:start="1045:32" pos:end="1045:33">==</operator> <literal type="number" pos:start="1045:35" pos:end="1045:36">15</literal></expr>)</condition> <block pos:start="1045:39" pos:end="1057:13">{<block_content pos:start="1049:17" pos:end="1055:46">

                <comment type="block" pos:start="1047:17" pos:end="1047:66">/* MOVS r15, ... is used for exception return.  */</comment>

                <if_stmt pos:start="1049:17" pos:end="1053:17"><if pos:start="1049:17" pos:end="1053:17">if <condition pos:start="1049:20" pos:end="1049:31">(<expr pos:start="1049:21" pos:end="1049:30"><call pos:start="1049:21" pos:end="1049:30"><name pos:start="1049:21" pos:end="1049:27">IS_USER</name><argument_list pos:start="1049:28" pos:end="1049:30">(<argument pos:start="1049:29" pos:end="1049:29"><expr pos:start="1049:29" pos:end="1049:29"><name pos:start="1049:29" pos:end="1049:29">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1049:33" pos:end="1053:17">{<block_content pos:start="1051:21" pos:end="1051:36">

                    <goto pos:start="1051:21" pos:end="1051:36">goto <name pos:start="1051:26" pos:end="1051:35">illegal_op</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="1055:17" pos:end="1055:46"><expr pos:start="1055:17" pos:end="1055:45"><call pos:start="1055:17" pos:end="1055:45"><name pos:start="1055:17" pos:end="1055:36">gen_exception_return</name><argument_list pos:start="1055:37" pos:end="1055:45">(<argument pos:start="1055:38" pos:end="1055:38"><expr pos:start="1055:38" pos:end="1055:38"><name pos:start="1055:38" pos:end="1055:38">s</name></expr></argument>, <argument pos:start="1055:41" pos:end="1055:44"><expr pos:start="1055:41" pos:end="1055:44"><name pos:start="1055:41" pos:end="1055:44">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1057:15" pos:end="1067:13">else <block pos:start="1057:20" pos:end="1067:13">{<block_content pos:start="1059:17" pos:end="1065:47">

                <if_stmt pos:start="1059:17" pos:end="1063:17"><if pos:start="1059:17" pos:end="1063:17">if <condition pos:start="1059:20" pos:end="1059:29">(<expr pos:start="1059:21" pos:end="1059:28"><name pos:start="1059:21" pos:end="1059:28">logic_cc</name></expr>)</condition> <block pos:start="1059:31" pos:end="1063:17">{<block_content pos:start="1061:21" pos:end="1061:39">

                    <expr_stmt pos:start="1061:21" pos:end="1061:39"><expr pos:start="1061:21" pos:end="1061:38"><call pos:start="1061:21" pos:end="1061:38"><name pos:start="1061:21" pos:end="1061:32">gen_logic_CC</name><argument_list pos:start="1061:33" pos:end="1061:38">(<argument pos:start="1061:34" pos:end="1061:37"><expr pos:start="1061:34" pos:end="1061:37"><name pos:start="1061:34" pos:end="1061:37">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="1065:17" pos:end="1065:47"><expr pos:start="1065:17" pos:end="1065:46"><call pos:start="1065:17" pos:end="1065:46"><name pos:start="1065:17" pos:end="1065:28">store_reg_bx</name><argument_list pos:start="1065:29" pos:end="1065:46">(<argument pos:start="1065:30" pos:end="1065:32"><expr pos:start="1065:30" pos:end="1065:32"><name pos:start="1065:30" pos:end="1065:32">env</name></expr></argument>, <argument pos:start="1065:35" pos:end="1065:35"><expr pos:start="1065:35" pos:end="1065:35"><name pos:start="1065:35" pos:end="1065:35">s</name></expr></argument>, <argument pos:start="1065:38" pos:end="1065:39"><expr pos:start="1065:38" pos:end="1065:39"><name pos:start="1065:38" pos:end="1065:39">rd</name></expr></argument>, <argument pos:start="1065:42" pos:end="1065:45"><expr pos:start="1065:42" pos:end="1065:45"><name pos:start="1065:42" pos:end="1065:45">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1069:13" pos:end="1069:18">break;</break>

        <case pos:start="1071:9" pos:end="1071:18">case <expr pos:start="1071:14" pos:end="1071:17"><literal type="number" pos:start="1071:14" pos:end="1071:17">0x0e</literal></expr>:</case>

            <expr_stmt pos:start="1073:13" pos:end="1073:45"><expr pos:start="1073:13" pos:end="1073:44"><call pos:start="1073:13" pos:end="1073:44"><name pos:start="1073:13" pos:end="1073:28">tcg_gen_andc_i32</name><argument_list pos:start="1073:29" pos:end="1073:44">(<argument pos:start="1073:30" pos:end="1073:32"><expr pos:start="1073:30" pos:end="1073:32"><name pos:start="1073:30" pos:end="1073:32">tmp</name></expr></argument>, <argument pos:start="1073:35" pos:end="1073:37"><expr pos:start="1073:35" pos:end="1073:37"><name pos:start="1073:35" pos:end="1073:37">tmp</name></expr></argument>, <argument pos:start="1073:40" pos:end="1073:43"><expr pos:start="1073:40" pos:end="1073:43"><name pos:start="1073:40" pos:end="1073:43">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1075:13" pos:end="1079:13"><if pos:start="1075:13" pos:end="1079:13">if <condition pos:start="1075:16" pos:end="1075:25">(<expr pos:start="1075:17" pos:end="1075:24"><name pos:start="1075:17" pos:end="1075:24">logic_cc</name></expr>)</condition> <block pos:start="1075:27" pos:end="1079:13">{<block_content pos:start="1077:17" pos:end="1077:34">

                <expr_stmt pos:start="1077:17" pos:end="1077:34"><expr pos:start="1077:17" pos:end="1077:33"><call pos:start="1077:17" pos:end="1077:33"><name pos:start="1077:17" pos:end="1077:28">gen_logic_CC</name><argument_list pos:start="1077:29" pos:end="1077:33">(<argument pos:start="1077:30" pos:end="1077:32"><expr pos:start="1077:30" pos:end="1077:32"><name pos:start="1077:30" pos:end="1077:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1081:13" pos:end="1081:42"><expr pos:start="1081:13" pos:end="1081:41"><call pos:start="1081:13" pos:end="1081:41"><name pos:start="1081:13" pos:end="1081:24">store_reg_bx</name><argument_list pos:start="1081:25" pos:end="1081:41">(<argument pos:start="1081:26" pos:end="1081:28"><expr pos:start="1081:26" pos:end="1081:28"><name pos:start="1081:26" pos:end="1081:28">env</name></expr></argument>, <argument pos:start="1081:31" pos:end="1081:31"><expr pos:start="1081:31" pos:end="1081:31"><name pos:start="1081:31" pos:end="1081:31">s</name></expr></argument>, <argument pos:start="1081:34" pos:end="1081:35"><expr pos:start="1081:34" pos:end="1081:35"><name pos:start="1081:34" pos:end="1081:35">rd</name></expr></argument>, <argument pos:start="1081:38" pos:end="1081:40"><expr pos:start="1081:38" pos:end="1081:40"><name pos:start="1081:38" pos:end="1081:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1083:13" pos:end="1083:18">break;</break>

        <default pos:start="1085:9" pos:end="1085:16">default:</default>

        <case pos:start="1087:9" pos:end="1087:18">case <expr pos:start="1087:14" pos:end="1087:17"><literal type="number" pos:start="1087:14" pos:end="1087:17">0x0f</literal></expr>:</case>

            <expr_stmt pos:start="1089:13" pos:end="1089:40"><expr pos:start="1089:13" pos:end="1089:39"><call pos:start="1089:13" pos:end="1089:39"><name pos:start="1089:13" pos:end="1089:27">tcg_gen_not_i32</name><argument_list pos:start="1089:28" pos:end="1089:39">(<argument pos:start="1089:29" pos:end="1089:32"><expr pos:start="1089:29" pos:end="1089:32"><name pos:start="1089:29" pos:end="1089:32">tmp2</name></expr></argument>, <argument pos:start="1089:35" pos:end="1089:38"><expr pos:start="1089:35" pos:end="1089:38"><name pos:start="1089:35" pos:end="1089:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1091:13" pos:end="1095:13"><if pos:start="1091:13" pos:end="1095:13">if <condition pos:start="1091:16" pos:end="1091:25">(<expr pos:start="1091:17" pos:end="1091:24"><name pos:start="1091:17" pos:end="1091:24">logic_cc</name></expr>)</condition> <block pos:start="1091:27" pos:end="1095:13">{<block_content pos:start="1093:17" pos:end="1093:35">

                <expr_stmt pos:start="1093:17" pos:end="1093:35"><expr pos:start="1093:17" pos:end="1093:34"><call pos:start="1093:17" pos:end="1093:34"><name pos:start="1093:17" pos:end="1093:28">gen_logic_CC</name><argument_list pos:start="1093:29" pos:end="1093:34">(<argument pos:start="1093:30" pos:end="1093:33"><expr pos:start="1093:30" pos:end="1093:33"><name pos:start="1093:30" pos:end="1093:33">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1097:13" pos:end="1097:43"><expr pos:start="1097:13" pos:end="1097:42"><call pos:start="1097:13" pos:end="1097:42"><name pos:start="1097:13" pos:end="1097:24">store_reg_bx</name><argument_list pos:start="1097:25" pos:end="1097:42">(<argument pos:start="1097:26" pos:end="1097:28"><expr pos:start="1097:26" pos:end="1097:28"><name pos:start="1097:26" pos:end="1097:28">env</name></expr></argument>, <argument pos:start="1097:31" pos:end="1097:31"><expr pos:start="1097:31" pos:end="1097:31"><name pos:start="1097:31" pos:end="1097:31">s</name></expr></argument>, <argument pos:start="1097:34" pos:end="1097:35"><expr pos:start="1097:34" pos:end="1097:35"><name pos:start="1097:34" pos:end="1097:35">rd</name></expr></argument>, <argument pos:start="1097:38" pos:end="1097:41"><expr pos:start="1097:38" pos:end="1097:41"><name pos:start="1097:38" pos:end="1097:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1099:13" pos:end="1099:18">break;</break>

        </block_content>}</block></switch>

        <if_stmt pos:start="1103:9" pos:end="1107:9"><if pos:start="1103:9" pos:end="1107:9">if <condition pos:start="1103:12" pos:end="1103:39">(<expr pos:start="1103:13" pos:end="1103:38"><name pos:start="1103:13" pos:end="1103:15">op1</name> <operator pos:start="1103:17" pos:end="1103:18">!=</operator> <literal type="number" pos:start="1103:20" pos:end="1103:23">0x0f</literal> <operator pos:start="1103:25" pos:end="1103:26">&amp;&amp;</operator> <name pos:start="1103:28" pos:end="1103:30">op1</name> <operator pos:start="1103:32" pos:end="1103:33">!=</operator> <literal type="number" pos:start="1103:35" pos:end="1103:38">0x0d</literal></expr>)</condition> <block pos:start="1103:41" pos:end="1107:9">{<block_content pos:start="1105:13" pos:end="1105:36">

            <expr_stmt pos:start="1105:13" pos:end="1105:36"><expr pos:start="1105:13" pos:end="1105:35"><call pos:start="1105:13" pos:end="1105:35"><name pos:start="1105:13" pos:end="1105:29">tcg_temp_free_i32</name><argument_list pos:start="1105:30" pos:end="1105:35">(<argument pos:start="1105:31" pos:end="1105:34"><expr pos:start="1105:31" pos:end="1105:34"><name pos:start="1105:31" pos:end="1105:34">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="1109:7" pos:end="2513:5">else <block pos:start="1109:12" pos:end="2513:5">{<block_content pos:start="1113:9" pos:end="2511:9">

        <comment type="block" pos:start="1111:9" pos:end="1111:32">/* other instructions */</comment>

        <expr_stmt pos:start="1113:9" pos:end="1113:33"><expr pos:start="1113:9" pos:end="1113:32"><name pos:start="1113:9" pos:end="1113:11">op1</name> <operator pos:start="1113:13" pos:end="1113:13">=</operator> <operator pos:start="1113:15" pos:end="1113:15">(</operator><name pos:start="1113:16" pos:end="1113:19">insn</name> <operator pos:start="1113:21" pos:end="1113:22">&gt;&gt;</operator> <literal type="number" pos:start="1113:24" pos:end="1113:25">24</literal><operator pos:start="1113:26" pos:end="1113:26">)</operator> <operator pos:start="1113:28" pos:end="1113:28">&amp;</operator> <literal type="number" pos:start="1113:30" pos:end="1113:32">0xf</literal></expr>;</expr_stmt>

        <switch pos:start="1115:9" pos:end="2511:9">switch<condition pos:start="1115:15" pos:end="1115:19">(<expr pos:start="1115:16" pos:end="1115:18"><name pos:start="1115:16" pos:end="1115:18">op1</name></expr>)</condition> <block pos:start="1115:21" pos:end="2511:9">{<block_content pos:start="1117:9" pos:end="2509:18">

        <case pos:start="1117:9" pos:end="1117:17">case <expr pos:start="1117:14" pos:end="1117:16"><literal type="number" pos:start="1117:14" pos:end="1117:16">0x0</literal></expr>:</case>

        <case pos:start="1119:9" pos:end="1119:17">case <expr pos:start="1119:14" pos:end="1119:16"><literal type="number" pos:start="1119:14" pos:end="1119:16">0x1</literal></expr>:</case>

            <comment type="block" pos:start="1121:13" pos:end="1121:47">/* multiplies, extra load/stores */</comment>

            <expr_stmt pos:start="1123:13" pos:end="1123:33"><expr pos:start="1123:13" pos:end="1123:32"><name pos:start="1123:13" pos:end="1123:14">sh</name> <operator pos:start="1123:16" pos:end="1123:16">=</operator> <operator pos:start="1123:18" pos:end="1123:18">(</operator><name pos:start="1123:19" pos:end="1123:22">insn</name> <operator pos:start="1123:24" pos:end="1123:25">&gt;&gt;</operator> <literal type="number" pos:start="1123:27" pos:end="1123:27">5</literal><operator pos:start="1123:28" pos:end="1123:28">)</operator> <operator pos:start="1123:30" pos:end="1123:30">&amp;</operator> <literal type="number" pos:start="1123:32" pos:end="1123:32">3</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1125:13" pos:end="1537:13"><if pos:start="1125:13" pos:end="1397:13">if <condition pos:start="1125:16" pos:end="1125:24">(<expr pos:start="1125:17" pos:end="1125:23"><name pos:start="1125:17" pos:end="1125:18">sh</name> <operator pos:start="1125:20" pos:end="1125:21">==</operator> <literal type="number" pos:start="1125:23" pos:end="1125:23">0</literal></expr>)</condition> <block pos:start="1125:26" pos:end="1397:13">{<block_content pos:start="1127:17" pos:end="1395:17">

                <if_stmt pos:start="1127:17" pos:end="1395:17"><if pos:start="1127:17" pos:end="1259:17">if <condition pos:start="1127:20" pos:end="1127:31">(<expr pos:start="1127:21" pos:end="1127:30"><name pos:start="1127:21" pos:end="1127:23">op1</name> <operator pos:start="1127:25" pos:end="1127:26">==</operator> <literal type="number" pos:start="1127:28" pos:end="1127:30">0x0</literal></expr>)</condition> <block pos:start="1127:33" pos:end="1259:17">{<block_content pos:start="1129:21" pos:end="1257:21">

                    <expr_stmt pos:start="1129:21" pos:end="1129:44"><expr pos:start="1129:21" pos:end="1129:43"><name pos:start="1129:21" pos:end="1129:22">rd</name> <operator pos:start="1129:24" pos:end="1129:24">=</operator> <operator pos:start="1129:26" pos:end="1129:26">(</operator><name pos:start="1129:27" pos:end="1129:30">insn</name> <operator pos:start="1129:32" pos:end="1129:33">&gt;&gt;</operator> <literal type="number" pos:start="1129:35" pos:end="1129:36">16</literal><operator pos:start="1129:37" pos:end="1129:37">)</operator> <operator pos:start="1129:39" pos:end="1129:39">&amp;</operator> <literal type="number" pos:start="1129:41" pos:end="1129:43">0xf</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1131:21" pos:end="1131:44"><expr pos:start="1131:21" pos:end="1131:43"><name pos:start="1131:21" pos:end="1131:22">rn</name> <operator pos:start="1131:24" pos:end="1131:24">=</operator> <operator pos:start="1131:26" pos:end="1131:26">(</operator><name pos:start="1131:27" pos:end="1131:30">insn</name> <operator pos:start="1131:32" pos:end="1131:33">&gt;&gt;</operator> <literal type="number" pos:start="1131:35" pos:end="1131:36">12</literal><operator pos:start="1131:37" pos:end="1131:37">)</operator> <operator pos:start="1131:39" pos:end="1131:39">&amp;</operator> <literal type="number" pos:start="1131:41" pos:end="1131:43">0xf</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1133:21" pos:end="1133:43"><expr pos:start="1133:21" pos:end="1133:42"><name pos:start="1133:21" pos:end="1133:22">rs</name> <operator pos:start="1133:24" pos:end="1133:24">=</operator> <operator pos:start="1133:26" pos:end="1133:26">(</operator><name pos:start="1133:27" pos:end="1133:30">insn</name> <operator pos:start="1133:32" pos:end="1133:33">&gt;&gt;</operator> <literal type="number" pos:start="1133:35" pos:end="1133:35">8</literal><operator pos:start="1133:36" pos:end="1133:36">)</operator> <operator pos:start="1133:38" pos:end="1133:38">&amp;</operator> <literal type="number" pos:start="1133:40" pos:end="1133:42">0xf</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1135:21" pos:end="1135:38"><expr pos:start="1135:21" pos:end="1135:37"><name pos:start="1135:21" pos:end="1135:22">rm</name> <operator pos:start="1135:24" pos:end="1135:24">=</operator> <operator pos:start="1135:26" pos:end="1135:26">(</operator><name pos:start="1135:27" pos:end="1135:30">insn</name><operator pos:start="1135:31" pos:end="1135:31">)</operator> <operator pos:start="1135:33" pos:end="1135:33">&amp;</operator> <literal type="number" pos:start="1135:35" pos:end="1135:37">0xf</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1137:21" pos:end="1137:45"><expr pos:start="1137:21" pos:end="1137:44"><name pos:start="1137:21" pos:end="1137:23">op1</name> <operator pos:start="1137:25" pos:end="1137:25">=</operator> <operator pos:start="1137:27" pos:end="1137:27">(</operator><name pos:start="1137:28" pos:end="1137:31">insn</name> <operator pos:start="1137:33" pos:end="1137:34">&gt;&gt;</operator> <literal type="number" pos:start="1137:36" pos:end="1137:37">20</literal><operator pos:start="1137:38" pos:end="1137:38">)</operator> <operator pos:start="1137:40" pos:end="1137:40">&amp;</operator> <literal type="number" pos:start="1137:42" pos:end="1137:44">0xf</literal></expr>;</expr_stmt>

                    <switch pos:start="1139:21" pos:end="1257:21">switch <condition pos:start="1139:28" pos:end="1139:32">(<expr pos:start="1139:29" pos:end="1139:31"><name pos:start="1139:29" pos:end="1139:31">op1</name></expr>)</condition> <block pos:start="1139:34" pos:end="1257:21">{<block_content pos:start="1141:21" pos:end="1255:40">

                    <case pos:start="1141:21" pos:end="1141:27">case <expr pos:start="1141:26" pos:end="1141:26"><literal type="number" pos:start="1141:26" pos:end="1141:26">0</literal></expr>:</case> <case pos:start="1141:29" pos:end="1141:35">case <expr pos:start="1141:34" pos:end="1141:34"><literal type="number" pos:start="1141:34" pos:end="1141:34">1</literal></expr>:</case> <case pos:start="1141:37" pos:end="1141:43">case <expr pos:start="1141:42" pos:end="1141:42"><literal type="number" pos:start="1141:42" pos:end="1141:42">2</literal></expr>:</case> <case pos:start="1141:45" pos:end="1141:51">case <expr pos:start="1141:50" pos:end="1141:50"><literal type="number" pos:start="1141:50" pos:end="1141:50">3</literal></expr>:</case> <case pos:start="1141:53" pos:end="1141:59">case <expr pos:start="1141:58" pos:end="1141:58"><literal type="number" pos:start="1141:58" pos:end="1141:58">6</literal></expr>:</case>

                        <comment type="block" pos:start="1143:25" pos:end="1143:40">/* 32 bit mul */</comment>

                        <expr_stmt pos:start="1145:25" pos:end="1145:46"><expr pos:start="1145:25" pos:end="1145:45"><name pos:start="1145:25" pos:end="1145:27">tmp</name> <operator pos:start="1145:29" pos:end="1145:29">=</operator> <call pos:start="1145:31" pos:end="1145:45"><name pos:start="1145:31" pos:end="1145:38">load_reg</name><argument_list pos:start="1145:39" pos:end="1145:45">(<argument pos:start="1145:40" pos:end="1145:40"><expr pos:start="1145:40" pos:end="1145:40"><name pos:start="1145:40" pos:end="1145:40">s</name></expr></argument>, <argument pos:start="1145:43" pos:end="1145:44"><expr pos:start="1145:43" pos:end="1145:44"><name pos:start="1145:43" pos:end="1145:44">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1147:25" pos:end="1147:47"><expr pos:start="1147:25" pos:end="1147:46"><name pos:start="1147:25" pos:end="1147:28">tmp2</name> <operator pos:start="1147:30" pos:end="1147:30">=</operator> <call pos:start="1147:32" pos:end="1147:46"><name pos:start="1147:32" pos:end="1147:39">load_reg</name><argument_list pos:start="1147:40" pos:end="1147:46">(<argument pos:start="1147:41" pos:end="1147:41"><expr pos:start="1147:41" pos:end="1147:41"><name pos:start="1147:41" pos:end="1147:41">s</name></expr></argument>, <argument pos:start="1147:44" pos:end="1147:45"><expr pos:start="1147:44" pos:end="1147:45"><name pos:start="1147:44" pos:end="1147:45">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1149:25" pos:end="1149:56"><expr pos:start="1149:25" pos:end="1149:55"><call pos:start="1149:25" pos:end="1149:55"><name pos:start="1149:25" pos:end="1149:39">tcg_gen_mul_i32</name><argument_list pos:start="1149:40" pos:end="1149:55">(<argument pos:start="1149:41" pos:end="1149:43"><expr pos:start="1149:41" pos:end="1149:43"><name pos:start="1149:41" pos:end="1149:43">tmp</name></expr></argument>, <argument pos:start="1149:46" pos:end="1149:48"><expr pos:start="1149:46" pos:end="1149:48"><name pos:start="1149:46" pos:end="1149:48">tmp</name></expr></argument>, <argument pos:start="1149:51" pos:end="1149:54"><expr pos:start="1149:51" pos:end="1149:54"><name pos:start="1149:51" pos:end="1149:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1151:25" pos:end="1151:48"><expr pos:start="1151:25" pos:end="1151:47"><call pos:start="1151:25" pos:end="1151:47"><name pos:start="1151:25" pos:end="1151:41">tcg_temp_free_i32</name><argument_list pos:start="1151:42" pos:end="1151:47">(<argument pos:start="1151:43" pos:end="1151:46"><expr pos:start="1151:43" pos:end="1151:46"><name pos:start="1151:43" pos:end="1151:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1153:25" pos:end="1175:25"><if pos:start="1153:25" pos:end="1165:25">if <condition pos:start="1153:28" pos:end="1153:45">(<expr pos:start="1153:29" pos:end="1153:44"><name pos:start="1153:29" pos:end="1153:32">insn</name> <operator pos:start="1153:34" pos:end="1153:34">&amp;</operator> <operator pos:start="1153:36" pos:end="1153:36">(</operator><literal type="number" pos:start="1153:37" pos:end="1153:37">1</literal> <operator pos:start="1153:39" pos:end="1153:40">&lt;&lt;</operator> <literal type="number" pos:start="1153:42" pos:end="1153:43">22</literal><operator pos:start="1153:44" pos:end="1153:44">)</operator></expr>)</condition> <block pos:start="1153:47" pos:end="1165:25">{<block_content pos:start="1157:29" pos:end="1163:52">

                            <comment type="block" pos:start="1155:29" pos:end="1155:48">/* Subtract (mls) */</comment>

                            <expr_stmt pos:start="1157:29" pos:end="1157:38"><expr pos:start="1157:29" pos:end="1157:37"><call pos:start="1157:29" pos:end="1157:37"><name pos:start="1157:29" pos:end="1157:32">ARCH</name><argument_list pos:start="1157:33" pos:end="1157:37">(<argument pos:start="1157:34" pos:end="1157:36"><expr pos:start="1157:34" pos:end="1157:36"><literal type="number" pos:start="1157:34" pos:end="1157:36">6T2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1159:29" pos:end="1159:51"><expr pos:start="1159:29" pos:end="1159:50"><name pos:start="1159:29" pos:end="1159:32">tmp2</name> <operator pos:start="1159:34" pos:end="1159:34">=</operator> <call pos:start="1159:36" pos:end="1159:50"><name pos:start="1159:36" pos:end="1159:43">load_reg</name><argument_list pos:start="1159:44" pos:end="1159:50">(<argument pos:start="1159:45" pos:end="1159:45"><expr pos:start="1159:45" pos:end="1159:45"><name pos:start="1159:45" pos:end="1159:45">s</name></expr></argument>, <argument pos:start="1159:48" pos:end="1159:49"><expr pos:start="1159:48" pos:end="1159:49"><name pos:start="1159:48" pos:end="1159:49">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1161:29" pos:end="1161:60"><expr pos:start="1161:29" pos:end="1161:59"><call pos:start="1161:29" pos:end="1161:59"><name pos:start="1161:29" pos:end="1161:43">tcg_gen_sub_i32</name><argument_list pos:start="1161:44" pos:end="1161:59">(<argument pos:start="1161:45" pos:end="1161:47"><expr pos:start="1161:45" pos:end="1161:47"><name pos:start="1161:45" pos:end="1161:47">tmp</name></expr></argument>, <argument pos:start="1161:50" pos:end="1161:53"><expr pos:start="1161:50" pos:end="1161:53"><name pos:start="1161:50" pos:end="1161:53">tmp2</name></expr></argument>, <argument pos:start="1161:56" pos:end="1161:58"><expr pos:start="1161:56" pos:end="1161:58"><name pos:start="1161:56" pos:end="1161:58">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1163:29" pos:end="1163:52"><expr pos:start="1163:29" pos:end="1163:51"><call pos:start="1163:29" pos:end="1163:51"><name pos:start="1163:29" pos:end="1163:45">tcg_temp_free_i32</name><argument_list pos:start="1163:46" pos:end="1163:51">(<argument pos:start="1163:47" pos:end="1163:50"><expr pos:start="1163:47" pos:end="1163:50"><name pos:start="1163:47" pos:end="1163:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <if type="elseif" pos:start="1165:27" pos:end="1175:25">else if <condition pos:start="1165:35" pos:end="1165:52">(<expr pos:start="1165:36" pos:end="1165:51"><name pos:start="1165:36" pos:end="1165:39">insn</name> <operator pos:start="1165:41" pos:end="1165:41">&amp;</operator> <operator pos:start="1165:43" pos:end="1165:43">(</operator><literal type="number" pos:start="1165:44" pos:end="1165:44">1</literal> <operator pos:start="1165:46" pos:end="1165:47">&lt;&lt;</operator> <literal type="number" pos:start="1165:49" pos:end="1165:50">21</literal><operator pos:start="1165:51" pos:end="1165:51">)</operator></expr>)</condition> <block pos:start="1165:54" pos:end="1175:25">{<block_content pos:start="1169:29" pos:end="1173:52">

                            <comment type="block" pos:start="1167:29" pos:end="1167:37">/* Add */</comment>

                            <expr_stmt pos:start="1169:29" pos:end="1169:51"><expr pos:start="1169:29" pos:end="1169:50"><name pos:start="1169:29" pos:end="1169:32">tmp2</name> <operator pos:start="1169:34" pos:end="1169:34">=</operator> <call pos:start="1169:36" pos:end="1169:50"><name pos:start="1169:36" pos:end="1169:43">load_reg</name><argument_list pos:start="1169:44" pos:end="1169:50">(<argument pos:start="1169:45" pos:end="1169:45"><expr pos:start="1169:45" pos:end="1169:45"><name pos:start="1169:45" pos:end="1169:45">s</name></expr></argument>, <argument pos:start="1169:48" pos:end="1169:49"><expr pos:start="1169:48" pos:end="1169:49"><name pos:start="1169:48" pos:end="1169:49">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1171:29" pos:end="1171:60"><expr pos:start="1171:29" pos:end="1171:59"><call pos:start="1171:29" pos:end="1171:59"><name pos:start="1171:29" pos:end="1171:43">tcg_gen_add_i32</name><argument_list pos:start="1171:44" pos:end="1171:59">(<argument pos:start="1171:45" pos:end="1171:47"><expr pos:start="1171:45" pos:end="1171:47"><name pos:start="1171:45" pos:end="1171:47">tmp</name></expr></argument>, <argument pos:start="1171:50" pos:end="1171:52"><expr pos:start="1171:50" pos:end="1171:52"><name pos:start="1171:50" pos:end="1171:52">tmp</name></expr></argument>, <argument pos:start="1171:55" pos:end="1171:58"><expr pos:start="1171:55" pos:end="1171:58"><name pos:start="1171:55" pos:end="1171:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1173:29" pos:end="1173:52"><expr pos:start="1173:29" pos:end="1173:51"><call pos:start="1173:29" pos:end="1173:51"><name pos:start="1173:29" pos:end="1173:45">tcg_temp_free_i32</name><argument_list pos:start="1173:46" pos:end="1173:51">(<argument pos:start="1173:47" pos:end="1173:50"><expr pos:start="1173:47" pos:end="1173:50"><name pos:start="1173:47" pos:end="1173:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="1177:25" pos:end="1179:46"><if pos:start="1177:25" pos:end="1179:46">if <condition pos:start="1177:28" pos:end="1177:45">(<expr pos:start="1177:29" pos:end="1177:44"><name pos:start="1177:29" pos:end="1177:32">insn</name> <operator pos:start="1177:34" pos:end="1177:34">&amp;</operator> <operator pos:start="1177:36" pos:end="1177:36">(</operator><literal type="number" pos:start="1177:37" pos:end="1177:37">1</literal> <operator pos:start="1177:39" pos:end="1177:40">&lt;&lt;</operator> <literal type="number" pos:start="1177:42" pos:end="1177:43">20</literal><operator pos:start="1177:44" pos:end="1177:44">)</operator></expr>)</condition><block type="pseudo" pos:start="1179:29" pos:end="1179:46"><block_content pos:start="1179:29" pos:end="1179:46">

                            <expr_stmt pos:start="1179:29" pos:end="1179:46"><expr pos:start="1179:29" pos:end="1179:45"><call pos:start="1179:29" pos:end="1179:45"><name pos:start="1179:29" pos:end="1179:40">gen_logic_CC</name><argument_list pos:start="1179:41" pos:end="1179:45">(<argument pos:start="1179:42" pos:end="1179:44"><expr pos:start="1179:42" pos:end="1179:44"><name pos:start="1179:42" pos:end="1179:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="1181:25" pos:end="1181:46"><expr pos:start="1181:25" pos:end="1181:45"><call pos:start="1181:25" pos:end="1181:45"><name pos:start="1181:25" pos:end="1181:33">store_reg</name><argument_list pos:start="1181:34" pos:end="1181:45">(<argument pos:start="1181:35" pos:end="1181:35"><expr pos:start="1181:35" pos:end="1181:35"><name pos:start="1181:35" pos:end="1181:35">s</name></expr></argument>, <argument pos:start="1181:38" pos:end="1181:39"><expr pos:start="1181:38" pos:end="1181:39"><name pos:start="1181:38" pos:end="1181:39">rd</name></expr></argument>, <argument pos:start="1181:42" pos:end="1181:44"><expr pos:start="1181:42" pos:end="1181:44"><name pos:start="1181:42" pos:end="1181:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1183:25" pos:end="1183:30">break;</break>

                    <case pos:start="1185:21" pos:end="1185:27">case <expr pos:start="1185:26" pos:end="1185:26"><literal type="number" pos:start="1185:26" pos:end="1185:26">4</literal></expr>:</case>

                        <comment type="block" pos:start="1187:25" pos:end="1187:66">/* 64 bit mul double accumulate (UMAAL) */</comment>

                        <expr_stmt pos:start="1189:25" pos:end="1189:32"><expr pos:start="1189:25" pos:end="1189:31"><call pos:start="1189:25" pos:end="1189:31"><name pos:start="1189:25" pos:end="1189:28">ARCH</name><argument_list pos:start="1189:29" pos:end="1189:31">(<argument pos:start="1189:30" pos:end="1189:30"><expr pos:start="1189:30" pos:end="1189:30"><literal type="number" pos:start="1189:30" pos:end="1189:30">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1191:25" pos:end="1191:46"><expr pos:start="1191:25" pos:end="1191:45"><name pos:start="1191:25" pos:end="1191:27">tmp</name> <operator pos:start="1191:29" pos:end="1191:29">=</operator> <call pos:start="1191:31" pos:end="1191:45"><name pos:start="1191:31" pos:end="1191:38">load_reg</name><argument_list pos:start="1191:39" pos:end="1191:45">(<argument pos:start="1191:40" pos:end="1191:40"><expr pos:start="1191:40" pos:end="1191:40"><name pos:start="1191:40" pos:end="1191:40">s</name></expr></argument>, <argument pos:start="1191:43" pos:end="1191:44"><expr pos:start="1191:43" pos:end="1191:44"><name pos:start="1191:43" pos:end="1191:44">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1193:25" pos:end="1193:47"><expr pos:start="1193:25" pos:end="1193:46"><name pos:start="1193:25" pos:end="1193:28">tmp2</name> <operator pos:start="1193:30" pos:end="1193:30">=</operator> <call pos:start="1193:32" pos:end="1193:46"><name pos:start="1193:32" pos:end="1193:39">load_reg</name><argument_list pos:start="1193:40" pos:end="1193:46">(<argument pos:start="1193:41" pos:end="1193:41"><expr pos:start="1193:41" pos:end="1193:41"><name pos:start="1193:41" pos:end="1193:41">s</name></expr></argument>, <argument pos:start="1193:44" pos:end="1193:45"><expr pos:start="1193:44" pos:end="1193:45"><name pos:start="1193:44" pos:end="1193:45">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1195:25" pos:end="1195:60"><expr pos:start="1195:25" pos:end="1195:59"><name pos:start="1195:25" pos:end="1195:29">tmp64</name> <operator pos:start="1195:31" pos:end="1195:31">=</operator> <call pos:start="1195:33" pos:end="1195:59"><name pos:start="1195:33" pos:end="1195:48">gen_mulu_i64_i32</name><argument_list pos:start="1195:49" pos:end="1195:59">(<argument pos:start="1195:50" pos:end="1195:52"><expr pos:start="1195:50" pos:end="1195:52"><name pos:start="1195:50" pos:end="1195:52">tmp</name></expr></argument>, <argument pos:start="1195:55" pos:end="1195:58"><expr pos:start="1195:55" pos:end="1195:58"><name pos:start="1195:55" pos:end="1195:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1197:25" pos:end="1197:50"><expr pos:start="1197:25" pos:end="1197:49"><call pos:start="1197:25" pos:end="1197:49"><name pos:start="1197:25" pos:end="1197:35">gen_addq_lo</name><argument_list pos:start="1197:36" pos:end="1197:49">(<argument pos:start="1197:37" pos:end="1197:37"><expr pos:start="1197:37" pos:end="1197:37"><name pos:start="1197:37" pos:end="1197:37">s</name></expr></argument>, <argument pos:start="1197:40" pos:end="1197:44"><expr pos:start="1197:40" pos:end="1197:44"><name pos:start="1197:40" pos:end="1197:44">tmp64</name></expr></argument>, <argument pos:start="1197:47" pos:end="1197:48"><expr pos:start="1197:47" pos:end="1197:48"><name pos:start="1197:47" pos:end="1197:48">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1199:25" pos:end="1199:50"><expr pos:start="1199:25" pos:end="1199:49"><call pos:start="1199:25" pos:end="1199:49"><name pos:start="1199:25" pos:end="1199:35">gen_addq_lo</name><argument_list pos:start="1199:36" pos:end="1199:49">(<argument pos:start="1199:37" pos:end="1199:37"><expr pos:start="1199:37" pos:end="1199:37"><name pos:start="1199:37" pos:end="1199:37">s</name></expr></argument>, <argument pos:start="1199:40" pos:end="1199:44"><expr pos:start="1199:40" pos:end="1199:44"><name pos:start="1199:40" pos:end="1199:44">tmp64</name></expr></argument>, <argument pos:start="1199:47" pos:end="1199:48"><expr pos:start="1199:47" pos:end="1199:48"><name pos:start="1199:47" pos:end="1199:48">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1201:25" pos:end="1201:57"><expr pos:start="1201:25" pos:end="1201:56"><call pos:start="1201:25" pos:end="1201:56"><name pos:start="1201:25" pos:end="1201:38">gen_storeq_reg</name><argument_list pos:start="1201:39" pos:end="1201:56">(<argument pos:start="1201:40" pos:end="1201:40"><expr pos:start="1201:40" pos:end="1201:40"><name pos:start="1201:40" pos:end="1201:40">s</name></expr></argument>, <argument pos:start="1201:43" pos:end="1201:44"><expr pos:start="1201:43" pos:end="1201:44"><name pos:start="1201:43" pos:end="1201:44">rn</name></expr></argument>, <argument pos:start="1201:47" pos:end="1201:48"><expr pos:start="1201:47" pos:end="1201:48"><name pos:start="1201:47" pos:end="1201:48">rd</name></expr></argument>, <argument pos:start="1201:51" pos:end="1201:55"><expr pos:start="1201:51" pos:end="1201:55"><name pos:start="1201:51" pos:end="1201:55">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1203:25" pos:end="1203:49"><expr pos:start="1203:25" pos:end="1203:48"><call pos:start="1203:25" pos:end="1203:48"><name pos:start="1203:25" pos:end="1203:41">tcg_temp_free_i64</name><argument_list pos:start="1203:42" pos:end="1203:48">(<argument pos:start="1203:43" pos:end="1203:47"><expr pos:start="1203:43" pos:end="1203:47"><name pos:start="1203:43" pos:end="1203:47">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1205:25" pos:end="1205:30">break;</break>

                    <case pos:start="1207:21" pos:end="1207:27">case <expr pos:start="1207:26" pos:end="1207:26"><literal type="number" pos:start="1207:26" pos:end="1207:26">8</literal></expr>:</case> <case pos:start="1207:29" pos:end="1207:35">case <expr pos:start="1207:34" pos:end="1207:34"><literal type="number" pos:start="1207:34" pos:end="1207:34">9</literal></expr>:</case> <case pos:start="1207:37" pos:end="1207:44">case <expr pos:start="1207:42" pos:end="1207:43"><literal type="number" pos:start="1207:42" pos:end="1207:43">10</literal></expr>:</case> <case pos:start="1207:46" pos:end="1207:53">case <expr pos:start="1207:51" pos:end="1207:52"><literal type="number" pos:start="1207:51" pos:end="1207:52">11</literal></expr>:</case>

                    <case pos:start="1209:21" pos:end="1209:28">case <expr pos:start="1209:26" pos:end="1209:27"><literal type="number" pos:start="1209:26" pos:end="1209:27">12</literal></expr>:</case> <case pos:start="1209:30" pos:end="1209:37">case <expr pos:start="1209:35" pos:end="1209:36"><literal type="number" pos:start="1209:35" pos:end="1209:36">13</literal></expr>:</case> <case pos:start="1209:39" pos:end="1209:46">case <expr pos:start="1209:44" pos:end="1209:45"><literal type="number" pos:start="1209:44" pos:end="1209:45">14</literal></expr>:</case> <case pos:start="1209:48" pos:end="1209:55">case <expr pos:start="1209:53" pos:end="1209:54"><literal type="number" pos:start="1209:53" pos:end="1209:54">15</literal></expr>:</case>

                        <comment type="block" pos:start="1211:25" pos:end="1211:69">/* 64 bit mul: UMULL, UMLAL, SMULL, SMLAL. */</comment>

                        <expr_stmt pos:start="1213:25" pos:end="1213:46"><expr pos:start="1213:25" pos:end="1213:45"><name pos:start="1213:25" pos:end="1213:27">tmp</name> <operator pos:start="1213:29" pos:end="1213:29">=</operator> <call pos:start="1213:31" pos:end="1213:45"><name pos:start="1213:31" pos:end="1213:38">load_reg</name><argument_list pos:start="1213:39" pos:end="1213:45">(<argument pos:start="1213:40" pos:end="1213:40"><expr pos:start="1213:40" pos:end="1213:40"><name pos:start="1213:40" pos:end="1213:40">s</name></expr></argument>, <argument pos:start="1213:43" pos:end="1213:44"><expr pos:start="1213:43" pos:end="1213:44"><name pos:start="1213:43" pos:end="1213:44">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1215:25" pos:end="1215:47"><expr pos:start="1215:25" pos:end="1215:46"><name pos:start="1215:25" pos:end="1215:28">tmp2</name> <operator pos:start="1215:30" pos:end="1215:30">=</operator> <call pos:start="1215:32" pos:end="1215:46"><name pos:start="1215:32" pos:end="1215:39">load_reg</name><argument_list pos:start="1215:40" pos:end="1215:46">(<argument pos:start="1215:41" pos:end="1215:41"><expr pos:start="1215:41" pos:end="1215:41"><name pos:start="1215:41" pos:end="1215:41">s</name></expr></argument>, <argument pos:start="1215:44" pos:end="1215:45"><expr pos:start="1215:44" pos:end="1215:45"><name pos:start="1215:44" pos:end="1215:45">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1217:25" pos:end="1225:25"><if pos:start="1217:25" pos:end="1221:25">if <condition pos:start="1217:28" pos:end="1217:45">(<expr pos:start="1217:29" pos:end="1217:44"><name pos:start="1217:29" pos:end="1217:32">insn</name> <operator pos:start="1217:34" pos:end="1217:34">&amp;</operator> <operator pos:start="1217:36" pos:end="1217:36">(</operator><literal type="number" pos:start="1217:37" pos:end="1217:37">1</literal> <operator pos:start="1217:39" pos:end="1217:40">&lt;&lt;</operator> <literal type="number" pos:start="1217:42" pos:end="1217:43">22</literal><operator pos:start="1217:44" pos:end="1217:44">)</operator></expr>)</condition> <block pos:start="1217:47" pos:end="1221:25">{<block_content pos:start="1219:29" pos:end="1219:68">

                            <expr_stmt pos:start="1219:29" pos:end="1219:68"><expr pos:start="1219:29" pos:end="1219:67"><call pos:start="1219:29" pos:end="1219:67"><name pos:start="1219:29" pos:end="1219:45">tcg_gen_muls2_i32</name><argument_list pos:start="1219:46" pos:end="1219:67">(<argument pos:start="1219:47" pos:end="1219:49"><expr pos:start="1219:47" pos:end="1219:49"><name pos:start="1219:47" pos:end="1219:49">tmp</name></expr></argument>, <argument pos:start="1219:52" pos:end="1219:55"><expr pos:start="1219:52" pos:end="1219:55"><name pos:start="1219:52" pos:end="1219:55">tmp2</name></expr></argument>, <argument pos:start="1219:58" pos:end="1219:60"><expr pos:start="1219:58" pos:end="1219:60"><name pos:start="1219:58" pos:end="1219:60">tmp</name></expr></argument>, <argument pos:start="1219:63" pos:end="1219:66"><expr pos:start="1219:63" pos:end="1219:66"><name pos:start="1219:63" pos:end="1219:66">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1221:27" pos:end="1225:25">else <block pos:start="1221:32" pos:end="1225:25">{<block_content pos:start="1223:29" pos:end="1223:68">

                            <expr_stmt pos:start="1223:29" pos:end="1223:68"><expr pos:start="1223:29" pos:end="1223:67"><call pos:start="1223:29" pos:end="1223:67"><name pos:start="1223:29" pos:end="1223:45">tcg_gen_mulu2_i32</name><argument_list pos:start="1223:46" pos:end="1223:67">(<argument pos:start="1223:47" pos:end="1223:49"><expr pos:start="1223:47" pos:end="1223:49"><name pos:start="1223:47" pos:end="1223:49">tmp</name></expr></argument>, <argument pos:start="1223:52" pos:end="1223:55"><expr pos:start="1223:52" pos:end="1223:55"><name pos:start="1223:52" pos:end="1223:55">tmp2</name></expr></argument>, <argument pos:start="1223:58" pos:end="1223:60"><expr pos:start="1223:58" pos:end="1223:60"><name pos:start="1223:58" pos:end="1223:60">tmp</name></expr></argument>, <argument pos:start="1223:63" pos:end="1223:66"><expr pos:start="1223:63" pos:end="1223:66"><name pos:start="1223:63" pos:end="1223:66">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <if_stmt pos:start="1227:25" pos:end="1239:25"><if pos:start="1227:25" pos:end="1239:25">if <condition pos:start="1227:28" pos:end="1227:45">(<expr pos:start="1227:29" pos:end="1227:44"><name pos:start="1227:29" pos:end="1227:32">insn</name> <operator pos:start="1227:34" pos:end="1227:34">&amp;</operator> <operator pos:start="1227:36" pos:end="1227:36">(</operator><literal type="number" pos:start="1227:37" pos:end="1227:37">1</literal> <operator pos:start="1227:39" pos:end="1227:40">&lt;&lt;</operator> <literal type="number" pos:start="1227:42" pos:end="1227:43">21</literal><operator pos:start="1227:44" pos:end="1227:44">)</operator></expr>)</condition> <block pos:start="1227:47" pos:end="1239:25">{<block_content pos:start="1229:29" pos:end="1237:46"> <comment type="block" pos:start="1227:49" pos:end="1227:69">/* mult accumulate */</comment>

                            <decl_stmt pos:start="1229:29" pos:end="1229:54"><decl pos:start="1229:29" pos:end="1229:53"><type pos:start="1229:29" pos:end="1229:32"><name pos:start="1229:29" pos:end="1229:32">TCGv</name></type> <name pos:start="1229:34" pos:end="1229:35">al</name> <init pos:start="1229:37" pos:end="1229:53">= <expr pos:start="1229:39" pos:end="1229:53"><call pos:start="1229:39" pos:end="1229:53"><name pos:start="1229:39" pos:end="1229:46">load_reg</name><argument_list pos:start="1229:47" pos:end="1229:53">(<argument pos:start="1229:48" pos:end="1229:48"><expr pos:start="1229:48" pos:end="1229:48"><name pos:start="1229:48" pos:end="1229:48">s</name></expr></argument>, <argument pos:start="1229:51" pos:end="1229:52"><expr pos:start="1229:51" pos:end="1229:52"><name pos:start="1229:51" pos:end="1229:52">rn</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                            <decl_stmt pos:start="1231:29" pos:end="1231:54"><decl pos:start="1231:29" pos:end="1231:53"><type pos:start="1231:29" pos:end="1231:32"><name pos:start="1231:29" pos:end="1231:32">TCGv</name></type> <name pos:start="1231:34" pos:end="1231:35">ah</name> <init pos:start="1231:37" pos:end="1231:53">= <expr pos:start="1231:39" pos:end="1231:53"><call pos:start="1231:39" pos:end="1231:53"><name pos:start="1231:39" pos:end="1231:46">load_reg</name><argument_list pos:start="1231:47" pos:end="1231:53">(<argument pos:start="1231:48" pos:end="1231:48"><expr pos:start="1231:48" pos:end="1231:48"><name pos:start="1231:48" pos:end="1231:48">s</name></expr></argument>, <argument pos:start="1231:51" pos:end="1231:52"><expr pos:start="1231:51" pos:end="1231:52"><name pos:start="1231:51" pos:end="1231:52">rd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                            <expr_stmt pos:start="1233:29" pos:end="1233:75"><expr pos:start="1233:29" pos:end="1233:74"><call pos:start="1233:29" pos:end="1233:74"><name pos:start="1233:29" pos:end="1233:44">tcg_gen_add2_i32</name><argument_list pos:start="1233:45" pos:end="1233:74">(<argument pos:start="1233:46" pos:end="1233:48"><expr pos:start="1233:46" pos:end="1233:48"><name pos:start="1233:46" pos:end="1233:48">tmp</name></expr></argument>, <argument pos:start="1233:51" pos:end="1233:54"><expr pos:start="1233:51" pos:end="1233:54"><name pos:start="1233:51" pos:end="1233:54">tmp2</name></expr></argument>, <argument pos:start="1233:57" pos:end="1233:59"><expr pos:start="1233:57" pos:end="1233:59"><name pos:start="1233:57" pos:end="1233:59">tmp</name></expr></argument>, <argument pos:start="1233:62" pos:end="1233:65"><expr pos:start="1233:62" pos:end="1233:65"><name pos:start="1233:62" pos:end="1233:65">tmp2</name></expr></argument>, <argument pos:start="1233:68" pos:end="1233:69"><expr pos:start="1233:68" pos:end="1233:69"><name pos:start="1233:68" pos:end="1233:69">al</name></expr></argument>, <argument pos:start="1233:72" pos:end="1233:73"><expr pos:start="1233:72" pos:end="1233:73"><name pos:start="1233:72" pos:end="1233:73">ah</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1235:29" pos:end="1235:46"><expr pos:start="1235:29" pos:end="1235:45"><call pos:start="1235:29" pos:end="1235:45"><name pos:start="1235:29" pos:end="1235:41">tcg_temp_free</name><argument_list pos:start="1235:42" pos:end="1235:45">(<argument pos:start="1235:43" pos:end="1235:44"><expr pos:start="1235:43" pos:end="1235:44"><name pos:start="1235:43" pos:end="1235:44">al</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1237:29" pos:end="1237:46"><expr pos:start="1237:29" pos:end="1237:45"><call pos:start="1237:29" pos:end="1237:45"><name pos:start="1237:29" pos:end="1237:41">tcg_temp_free</name><argument_list pos:start="1237:42" pos:end="1237:45">(<argument pos:start="1237:43" pos:end="1237:44"><expr pos:start="1237:43" pos:end="1237:44"><name pos:start="1237:43" pos:end="1237:44">ah</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="1241:25" pos:end="1245:25"><if pos:start="1241:25" pos:end="1245:25">if <condition pos:start="1241:28" pos:end="1241:45">(<expr pos:start="1241:29" pos:end="1241:44"><name pos:start="1241:29" pos:end="1241:32">insn</name> <operator pos:start="1241:34" pos:end="1241:34">&amp;</operator> <operator pos:start="1241:36" pos:end="1241:36">(</operator><literal type="number" pos:start="1241:37" pos:end="1241:37">1</literal> <operator pos:start="1241:39" pos:end="1241:40">&lt;&lt;</operator> <literal type="number" pos:start="1241:42" pos:end="1241:43">20</literal><operator pos:start="1241:44" pos:end="1241:44">)</operator></expr>)</condition> <block pos:start="1241:47" pos:end="1245:25">{<block_content pos:start="1243:29" pos:end="1243:53">

                            <expr_stmt pos:start="1243:29" pos:end="1243:53"><expr pos:start="1243:29" pos:end="1243:52"><call pos:start="1243:29" pos:end="1243:52"><name pos:start="1243:29" pos:end="1243:41">gen_logicq_cc</name><argument_list pos:start="1243:42" pos:end="1243:52">(<argument pos:start="1243:43" pos:end="1243:45"><expr pos:start="1243:43" pos:end="1243:45"><name pos:start="1243:43" pos:end="1243:45">tmp</name></expr></argument>, <argument pos:start="1243:48" pos:end="1243:51"><expr pos:start="1243:48" pos:end="1243:51"><name pos:start="1243:48" pos:end="1243:51">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="1247:25" pos:end="1247:46"><expr pos:start="1247:25" pos:end="1247:45"><call pos:start="1247:25" pos:end="1247:45"><name pos:start="1247:25" pos:end="1247:33">store_reg</name><argument_list pos:start="1247:34" pos:end="1247:45">(<argument pos:start="1247:35" pos:end="1247:35"><expr pos:start="1247:35" pos:end="1247:35"><name pos:start="1247:35" pos:end="1247:35">s</name></expr></argument>, <argument pos:start="1247:38" pos:end="1247:39"><expr pos:start="1247:38" pos:end="1247:39"><name pos:start="1247:38" pos:end="1247:39">rn</name></expr></argument>, <argument pos:start="1247:42" pos:end="1247:44"><expr pos:start="1247:42" pos:end="1247:44"><name pos:start="1247:42" pos:end="1247:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1249:25" pos:end="1249:47"><expr pos:start="1249:25" pos:end="1249:46"><call pos:start="1249:25" pos:end="1249:46"><name pos:start="1249:25" pos:end="1249:33">store_reg</name><argument_list pos:start="1249:34" pos:end="1249:46">(<argument pos:start="1249:35" pos:end="1249:35"><expr pos:start="1249:35" pos:end="1249:35"><name pos:start="1249:35" pos:end="1249:35">s</name></expr></argument>, <argument pos:start="1249:38" pos:end="1249:39"><expr pos:start="1249:38" pos:end="1249:39"><name pos:start="1249:38" pos:end="1249:39">rd</name></expr></argument>, <argument pos:start="1249:42" pos:end="1249:45"><expr pos:start="1249:42" pos:end="1249:45"><name pos:start="1249:42" pos:end="1249:45">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1251:25" pos:end="1251:30">break;</break>

                    <default pos:start="1253:21" pos:end="1253:28">default:</default>

                        <goto pos:start="1255:25" pos:end="1255:40">goto <name pos:start="1255:30" pos:end="1255:39">illegal_op</name>;</goto>

                    </block_content>}</block></switch>

                </block_content>}</block></if> <else pos:start="1259:19" pos:end="1395:17">else <block pos:start="1259:24" pos:end="1395:17">{<block_content pos:start="1261:21" pos:end="1393:21">

                    <expr_stmt pos:start="1261:21" pos:end="1261:44"><expr pos:start="1261:21" pos:end="1261:43"><name pos:start="1261:21" pos:end="1261:22">rn</name> <operator pos:start="1261:24" pos:end="1261:24">=</operator> <operator pos:start="1261:26" pos:end="1261:26">(</operator><name pos:start="1261:27" pos:end="1261:30">insn</name> <operator pos:start="1261:32" pos:end="1261:33">&gt;&gt;</operator> <literal type="number" pos:start="1261:35" pos:end="1261:36">16</literal><operator pos:start="1261:37" pos:end="1261:37">)</operator> <operator pos:start="1261:39" pos:end="1261:39">&amp;</operator> <literal type="number" pos:start="1261:41" pos:end="1261:43">0xf</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1263:21" pos:end="1263:44"><expr pos:start="1263:21" pos:end="1263:43"><name pos:start="1263:21" pos:end="1263:22">rd</name> <operator pos:start="1263:24" pos:end="1263:24">=</operator> <operator pos:start="1263:26" pos:end="1263:26">(</operator><name pos:start="1263:27" pos:end="1263:30">insn</name> <operator pos:start="1263:32" pos:end="1263:33">&gt;&gt;</operator> <literal type="number" pos:start="1263:35" pos:end="1263:36">12</literal><operator pos:start="1263:37" pos:end="1263:37">)</operator> <operator pos:start="1263:39" pos:end="1263:39">&amp;</operator> <literal type="number" pos:start="1263:41" pos:end="1263:43">0xf</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="1265:21" pos:end="1393:21"><if pos:start="1265:21" pos:end="1357:21">if <condition pos:start="1265:24" pos:end="1265:41">(<expr pos:start="1265:25" pos:end="1265:40"><name pos:start="1265:25" pos:end="1265:28">insn</name> <operator pos:start="1265:30" pos:end="1265:30">&amp;</operator> <operator pos:start="1265:32" pos:end="1265:32">(</operator><literal type="number" pos:start="1265:33" pos:end="1265:33">1</literal> <operator pos:start="1265:35" pos:end="1265:36">&lt;&lt;</operator> <literal type="number" pos:start="1265:38" pos:end="1265:39">23</literal><operator pos:start="1265:40" pos:end="1265:40">)</operator></expr>)</condition> <block pos:start="1265:43" pos:end="1357:21">{<block_content pos:start="1269:25" pos:end="1355:44">

                        <comment type="block" pos:start="1267:25" pos:end="1267:50">/* load/store exclusive */</comment>

                        <expr_stmt pos:start="1269:25" pos:end="1269:49"><expr pos:start="1269:25" pos:end="1269:48"><name pos:start="1269:25" pos:end="1269:27">op1</name> <operator pos:start="1269:29" pos:end="1269:29">=</operator> <operator pos:start="1269:31" pos:end="1269:31">(</operator><name pos:start="1269:32" pos:end="1269:35">insn</name> <operator pos:start="1269:37" pos:end="1269:38">&gt;&gt;</operator> <literal type="number" pos:start="1269:40" pos:end="1269:41">21</literal><operator pos:start="1269:42" pos:end="1269:42">)</operator> <operator pos:start="1269:44" pos:end="1269:44">&amp;</operator> <literal type="number" pos:start="1269:46" pos:end="1269:48">0x3</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="1271:25" pos:end="1277:36"><if pos:start="1271:25" pos:end="1273:37">if <condition pos:start="1271:28" pos:end="1271:32">(<expr pos:start="1271:29" pos:end="1271:31"><name pos:start="1271:29" pos:end="1271:31">op1</name></expr>)</condition><block type="pseudo" pos:start="1273:29" pos:end="1273:37"><block_content pos:start="1273:29" pos:end="1273:37">

                            <expr_stmt pos:start="1273:29" pos:end="1273:37"><expr pos:start="1273:29" pos:end="1273:36"><call pos:start="1273:29" pos:end="1273:36"><name pos:start="1273:29" pos:end="1273:32">ARCH</name><argument_list pos:start="1273:33" pos:end="1273:36">(<argument pos:start="1273:34" pos:end="1273:35"><expr pos:start="1273:34" pos:end="1273:35"><literal type="number" pos:start="1273:34" pos:end="1273:35">6K</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="1275:25" pos:end="1277:36">else<block type="pseudo" pos:start="1277:29" pos:end="1277:36"><block_content pos:start="1277:29" pos:end="1277:36">

                            <expr_stmt pos:start="1277:29" pos:end="1277:36"><expr pos:start="1277:29" pos:end="1277:35"><call pos:start="1277:29" pos:end="1277:35"><name pos:start="1277:29" pos:end="1277:32">ARCH</name><argument_list pos:start="1277:33" pos:end="1277:35">(<argument pos:start="1277:34" pos:end="1277:34"><expr pos:start="1277:34" pos:end="1277:34"><literal type="number" pos:start="1277:34" pos:end="1277:34">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="1279:25" pos:end="1279:56"><expr pos:start="1279:25" pos:end="1279:55"><name pos:start="1279:25" pos:end="1279:28">addr</name> <operator pos:start="1279:30" pos:end="1279:30">=</operator> <call pos:start="1279:32" pos:end="1279:55"><name pos:start="1279:32" pos:end="1279:53">tcg_temp_local_new_i32</name><argument_list pos:start="1279:54" pos:end="1279:55">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1281:25" pos:end="1281:50"><expr pos:start="1281:25" pos:end="1281:49"><call pos:start="1281:25" pos:end="1281:49"><name pos:start="1281:25" pos:end="1281:36">load_reg_var</name><argument_list pos:start="1281:37" pos:end="1281:49">(<argument pos:start="1281:38" pos:end="1281:38"><expr pos:start="1281:38" pos:end="1281:38"><name pos:start="1281:38" pos:end="1281:38">s</name></expr></argument>, <argument pos:start="1281:41" pos:end="1281:44"><expr pos:start="1281:41" pos:end="1281:44"><name pos:start="1281:41" pos:end="1281:44">addr</name></expr></argument>, <argument pos:start="1281:47" pos:end="1281:48"><expr pos:start="1281:47" pos:end="1281:48"><name pos:start="1281:47" pos:end="1281:48">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1283:25" pos:end="1353:25"><if pos:start="1283:25" pos:end="1317:25">if <condition pos:start="1283:28" pos:end="1283:45">(<expr pos:start="1283:29" pos:end="1283:44"><name pos:start="1283:29" pos:end="1283:32">insn</name> <operator pos:start="1283:34" pos:end="1283:34">&amp;</operator> <operator pos:start="1283:36" pos:end="1283:36">(</operator><literal type="number" pos:start="1283:37" pos:end="1283:37">1</literal> <operator pos:start="1283:39" pos:end="1283:40">&lt;&lt;</operator> <literal type="number" pos:start="1283:42" pos:end="1283:43">20</literal><operator pos:start="1283:44" pos:end="1283:44">)</operator></expr>)</condition> <block pos:start="1283:47" pos:end="1317:25">{<block_content pos:start="1285:29" pos:end="1315:29">

                            <switch pos:start="1285:29" pos:end="1315:29">switch <condition pos:start="1285:36" pos:end="1285:40">(<expr pos:start="1285:37" pos:end="1285:39"><name pos:start="1285:37" pos:end="1285:39">op1</name></expr>)</condition> <block pos:start="1285:42" pos:end="1315:29">{<block_content pos:start="1287:29" pos:end="1313:40">

                            <case pos:start="1287:29" pos:end="1287:35">case <expr pos:start="1287:34" pos:end="1287:34"><literal type="number" pos:start="1287:34" pos:end="1287:34">0</literal></expr>:</case> <comment type="block" pos:start="1287:37" pos:end="1287:47">/* ldrex */</comment>

                                <expr_stmt pos:start="1289:33" pos:end="1289:71"><expr pos:start="1289:33" pos:end="1289:70"><call pos:start="1289:33" pos:end="1289:70"><name pos:start="1289:33" pos:end="1289:50">gen_load_exclusive</name><argument_list pos:start="1289:51" pos:end="1289:70">(<argument pos:start="1289:52" pos:end="1289:52"><expr pos:start="1289:52" pos:end="1289:52"><name pos:start="1289:52" pos:end="1289:52">s</name></expr></argument>, <argument pos:start="1289:55" pos:end="1289:56"><expr pos:start="1289:55" pos:end="1289:56"><name pos:start="1289:55" pos:end="1289:56">rd</name></expr></argument>, <argument pos:start="1289:59" pos:end="1289:60"><expr pos:start="1289:59" pos:end="1289:60"><literal type="number" pos:start="1289:59" pos:end="1289:60">15</literal></expr></argument>, <argument pos:start="1289:63" pos:end="1289:66"><expr pos:start="1289:63" pos:end="1289:66"><name pos:start="1289:63" pos:end="1289:66">addr</name></expr></argument>, <argument pos:start="1289:69" pos:end="1289:69"><expr pos:start="1289:69" pos:end="1289:69"><literal type="number" pos:start="1289:69" pos:end="1289:69">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1291:33" pos:end="1291:38">break;</break>

                            <case pos:start="1293:29" pos:end="1293:35">case <expr pos:start="1293:34" pos:end="1293:34"><literal type="number" pos:start="1293:34" pos:end="1293:34">1</literal></expr>:</case> <comment type="block" pos:start="1293:37" pos:end="1293:48">/* ldrexd */</comment>

                                <expr_stmt pos:start="1295:33" pos:end="1295:75"><expr pos:start="1295:33" pos:end="1295:74"><call pos:start="1295:33" pos:end="1295:74"><name pos:start="1295:33" pos:end="1295:50">gen_load_exclusive</name><argument_list pos:start="1295:51" pos:end="1295:74">(<argument pos:start="1295:52" pos:end="1295:52"><expr pos:start="1295:52" pos:end="1295:52"><name pos:start="1295:52" pos:end="1295:52">s</name></expr></argument>, <argument pos:start="1295:55" pos:end="1295:56"><expr pos:start="1295:55" pos:end="1295:56"><name pos:start="1295:55" pos:end="1295:56">rd</name></expr></argument>, <argument pos:start="1295:59" pos:end="1295:64"><expr pos:start="1295:59" pos:end="1295:64"><name pos:start="1295:59" pos:end="1295:60">rd</name> <operator pos:start="1295:62" pos:end="1295:62">+</operator> <literal type="number" pos:start="1295:64" pos:end="1295:64">1</literal></expr></argument>, <argument pos:start="1295:67" pos:end="1295:70"><expr pos:start="1295:67" pos:end="1295:70"><name pos:start="1295:67" pos:end="1295:70">addr</name></expr></argument>, <argument pos:start="1295:73" pos:end="1295:73"><expr pos:start="1295:73" pos:end="1295:73"><literal type="number" pos:start="1295:73" pos:end="1295:73">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1297:33" pos:end="1297:38">break;</break>

                            <case pos:start="1299:29" pos:end="1299:35">case <expr pos:start="1299:34" pos:end="1299:34"><literal type="number" pos:start="1299:34" pos:end="1299:34">2</literal></expr>:</case> <comment type="block" pos:start="1299:37" pos:end="1299:48">/* ldrexb */</comment>

                                <expr_stmt pos:start="1301:33" pos:end="1301:71"><expr pos:start="1301:33" pos:end="1301:70"><call pos:start="1301:33" pos:end="1301:70"><name pos:start="1301:33" pos:end="1301:50">gen_load_exclusive</name><argument_list pos:start="1301:51" pos:end="1301:70">(<argument pos:start="1301:52" pos:end="1301:52"><expr pos:start="1301:52" pos:end="1301:52"><name pos:start="1301:52" pos:end="1301:52">s</name></expr></argument>, <argument pos:start="1301:55" pos:end="1301:56"><expr pos:start="1301:55" pos:end="1301:56"><name pos:start="1301:55" pos:end="1301:56">rd</name></expr></argument>, <argument pos:start="1301:59" pos:end="1301:60"><expr pos:start="1301:59" pos:end="1301:60"><literal type="number" pos:start="1301:59" pos:end="1301:60">15</literal></expr></argument>, <argument pos:start="1301:63" pos:end="1301:66"><expr pos:start="1301:63" pos:end="1301:66"><name pos:start="1301:63" pos:end="1301:66">addr</name></expr></argument>, <argument pos:start="1301:69" pos:end="1301:69"><expr pos:start="1301:69" pos:end="1301:69"><literal type="number" pos:start="1301:69" pos:end="1301:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1303:33" pos:end="1303:38">break;</break>

                            <case pos:start="1305:29" pos:end="1305:35">case <expr pos:start="1305:34" pos:end="1305:34"><literal type="number" pos:start="1305:34" pos:end="1305:34">3</literal></expr>:</case> <comment type="block" pos:start="1305:37" pos:end="1305:48">/* ldrexh */</comment>

                                <expr_stmt pos:start="1307:33" pos:end="1307:71"><expr pos:start="1307:33" pos:end="1307:70"><call pos:start="1307:33" pos:end="1307:70"><name pos:start="1307:33" pos:end="1307:50">gen_load_exclusive</name><argument_list pos:start="1307:51" pos:end="1307:70">(<argument pos:start="1307:52" pos:end="1307:52"><expr pos:start="1307:52" pos:end="1307:52"><name pos:start="1307:52" pos:end="1307:52">s</name></expr></argument>, <argument pos:start="1307:55" pos:end="1307:56"><expr pos:start="1307:55" pos:end="1307:56"><name pos:start="1307:55" pos:end="1307:56">rd</name></expr></argument>, <argument pos:start="1307:59" pos:end="1307:60"><expr pos:start="1307:59" pos:end="1307:60"><literal type="number" pos:start="1307:59" pos:end="1307:60">15</literal></expr></argument>, <argument pos:start="1307:63" pos:end="1307:66"><expr pos:start="1307:63" pos:end="1307:66"><name pos:start="1307:63" pos:end="1307:66">addr</name></expr></argument>, <argument pos:start="1307:69" pos:end="1307:69"><expr pos:start="1307:69" pos:end="1307:69"><literal type="number" pos:start="1307:69" pos:end="1307:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1309:33" pos:end="1309:38">break;</break>

                            <default pos:start="1311:29" pos:end="1311:36">default:</default>

                                <expr_stmt pos:start="1313:33" pos:end="1313:40"><expr pos:start="1313:33" pos:end="1313:39"><call pos:start="1313:33" pos:end="1313:39"><name pos:start="1313:33" pos:end="1313:37">abort</name><argument_list pos:start="1313:38" pos:end="1313:39">()</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></switch>

                        </block_content>}</block></if> <else pos:start="1317:27" pos:end="1353:25">else <block pos:start="1317:32" pos:end="1353:25">{<block_content pos:start="1319:29" pos:end="1351:29">

                            <expr_stmt pos:start="1319:29" pos:end="1319:44"><expr pos:start="1319:29" pos:end="1319:43"><name pos:start="1319:29" pos:end="1319:30">rm</name> <operator pos:start="1319:32" pos:end="1319:32">=</operator> <name pos:start="1319:34" pos:end="1319:37">insn</name> <operator pos:start="1319:39" pos:end="1319:39">&amp;</operator> <literal type="number" pos:start="1319:41" pos:end="1319:43">0xf</literal></expr>;</expr_stmt>

                            <switch pos:start="1321:29" pos:end="1351:29">switch <condition pos:start="1321:36" pos:end="1321:40">(<expr pos:start="1321:37" pos:end="1321:39"><name pos:start="1321:37" pos:end="1321:39">op1</name></expr>)</condition> <block pos:start="1321:42" pos:end="1351:29">{<block_content pos:start="1323:29" pos:end="1349:40">

                            <case pos:start="1323:29" pos:end="1323:35">case <expr pos:start="1323:34" pos:end="1323:34"><literal type="number" pos:start="1323:34" pos:end="1323:34">0</literal></expr>:</case>  <comment type="block" pos:start="1323:38" pos:end="1323:49">/*  strex */</comment>

                                <expr_stmt pos:start="1325:33" pos:end="1325:76"><expr pos:start="1325:33" pos:end="1325:75"><call pos:start="1325:33" pos:end="1325:75"><name pos:start="1325:33" pos:end="1325:51">gen_store_exclusive</name><argument_list pos:start="1325:52" pos:end="1325:75">(<argument pos:start="1325:53" pos:end="1325:53"><expr pos:start="1325:53" pos:end="1325:53"><name pos:start="1325:53" pos:end="1325:53">s</name></expr></argument>, <argument pos:start="1325:56" pos:end="1325:57"><expr pos:start="1325:56" pos:end="1325:57"><name pos:start="1325:56" pos:end="1325:57">rd</name></expr></argument>, <argument pos:start="1325:60" pos:end="1325:61"><expr pos:start="1325:60" pos:end="1325:61"><name pos:start="1325:60" pos:end="1325:61">rm</name></expr></argument>, <argument pos:start="1325:64" pos:end="1325:65"><expr pos:start="1325:64" pos:end="1325:65"><literal type="number" pos:start="1325:64" pos:end="1325:65">15</literal></expr></argument>, <argument pos:start="1325:68" pos:end="1325:71"><expr pos:start="1325:68" pos:end="1325:71"><name pos:start="1325:68" pos:end="1325:71">addr</name></expr></argument>, <argument pos:start="1325:74" pos:end="1325:74"><expr pos:start="1325:74" pos:end="1325:74"><literal type="number" pos:start="1325:74" pos:end="1325:74">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1327:33" pos:end="1327:38">break;</break>

                            <case pos:start="1329:29" pos:end="1329:35">case <expr pos:start="1329:34" pos:end="1329:34"><literal type="number" pos:start="1329:34" pos:end="1329:34">1</literal></expr>:</case> <comment type="block" pos:start="1329:37" pos:end="1329:49">/*  strexd */</comment>

                                <expr_stmt pos:start="1331:33" pos:end="1331:80"><expr pos:start="1331:33" pos:end="1331:79"><call pos:start="1331:33" pos:end="1331:79"><name pos:start="1331:33" pos:end="1331:51">gen_store_exclusive</name><argument_list pos:start="1331:52" pos:end="1331:79">(<argument pos:start="1331:53" pos:end="1331:53"><expr pos:start="1331:53" pos:end="1331:53"><name pos:start="1331:53" pos:end="1331:53">s</name></expr></argument>, <argument pos:start="1331:56" pos:end="1331:57"><expr pos:start="1331:56" pos:end="1331:57"><name pos:start="1331:56" pos:end="1331:57">rd</name></expr></argument>, <argument pos:start="1331:60" pos:end="1331:61"><expr pos:start="1331:60" pos:end="1331:61"><name pos:start="1331:60" pos:end="1331:61">rm</name></expr></argument>, <argument pos:start="1331:64" pos:end="1331:69"><expr pos:start="1331:64" pos:end="1331:69"><name pos:start="1331:64" pos:end="1331:65">rm</name> <operator pos:start="1331:67" pos:end="1331:67">+</operator> <literal type="number" pos:start="1331:69" pos:end="1331:69">1</literal></expr></argument>, <argument pos:start="1331:72" pos:end="1331:75"><expr pos:start="1331:72" pos:end="1331:75"><name pos:start="1331:72" pos:end="1331:75">addr</name></expr></argument>, <argument pos:start="1331:78" pos:end="1331:78"><expr pos:start="1331:78" pos:end="1331:78"><literal type="number" pos:start="1331:78" pos:end="1331:78">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1333:33" pos:end="1333:38">break;</break>

                            <case pos:start="1335:29" pos:end="1335:35">case <expr pos:start="1335:34" pos:end="1335:34"><literal type="number" pos:start="1335:34" pos:end="1335:34">2</literal></expr>:</case> <comment type="block" pos:start="1335:37" pos:end="1335:49">/*  strexb */</comment>

                                <expr_stmt pos:start="1337:33" pos:end="1337:76"><expr pos:start="1337:33" pos:end="1337:75"><call pos:start="1337:33" pos:end="1337:75"><name pos:start="1337:33" pos:end="1337:51">gen_store_exclusive</name><argument_list pos:start="1337:52" pos:end="1337:75">(<argument pos:start="1337:53" pos:end="1337:53"><expr pos:start="1337:53" pos:end="1337:53"><name pos:start="1337:53" pos:end="1337:53">s</name></expr></argument>, <argument pos:start="1337:56" pos:end="1337:57"><expr pos:start="1337:56" pos:end="1337:57"><name pos:start="1337:56" pos:end="1337:57">rd</name></expr></argument>, <argument pos:start="1337:60" pos:end="1337:61"><expr pos:start="1337:60" pos:end="1337:61"><name pos:start="1337:60" pos:end="1337:61">rm</name></expr></argument>, <argument pos:start="1337:64" pos:end="1337:65"><expr pos:start="1337:64" pos:end="1337:65"><literal type="number" pos:start="1337:64" pos:end="1337:65">15</literal></expr></argument>, <argument pos:start="1337:68" pos:end="1337:71"><expr pos:start="1337:68" pos:end="1337:71"><name pos:start="1337:68" pos:end="1337:71">addr</name></expr></argument>, <argument pos:start="1337:74" pos:end="1337:74"><expr pos:start="1337:74" pos:end="1337:74"><literal type="number" pos:start="1337:74" pos:end="1337:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1339:33" pos:end="1339:38">break;</break>

                            <case pos:start="1341:29" pos:end="1341:35">case <expr pos:start="1341:34" pos:end="1341:34"><literal type="number" pos:start="1341:34" pos:end="1341:34">3</literal></expr>:</case> <comment type="block" pos:start="1341:37" pos:end="1341:48">/* strexh */</comment>

                                <expr_stmt pos:start="1343:33" pos:end="1343:76"><expr pos:start="1343:33" pos:end="1343:75"><call pos:start="1343:33" pos:end="1343:75"><name pos:start="1343:33" pos:end="1343:51">gen_store_exclusive</name><argument_list pos:start="1343:52" pos:end="1343:75">(<argument pos:start="1343:53" pos:end="1343:53"><expr pos:start="1343:53" pos:end="1343:53"><name pos:start="1343:53" pos:end="1343:53">s</name></expr></argument>, <argument pos:start="1343:56" pos:end="1343:57"><expr pos:start="1343:56" pos:end="1343:57"><name pos:start="1343:56" pos:end="1343:57">rd</name></expr></argument>, <argument pos:start="1343:60" pos:end="1343:61"><expr pos:start="1343:60" pos:end="1343:61"><name pos:start="1343:60" pos:end="1343:61">rm</name></expr></argument>, <argument pos:start="1343:64" pos:end="1343:65"><expr pos:start="1343:64" pos:end="1343:65"><literal type="number" pos:start="1343:64" pos:end="1343:65">15</literal></expr></argument>, <argument pos:start="1343:68" pos:end="1343:71"><expr pos:start="1343:68" pos:end="1343:71"><name pos:start="1343:68" pos:end="1343:71">addr</name></expr></argument>, <argument pos:start="1343:74" pos:end="1343:74"><expr pos:start="1343:74" pos:end="1343:74"><literal type="number" pos:start="1343:74" pos:end="1343:74">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1345:33" pos:end="1345:38">break;</break>

                            <default pos:start="1347:29" pos:end="1347:36">default:</default>

                                <expr_stmt pos:start="1349:33" pos:end="1349:40"><expr pos:start="1349:33" pos:end="1349:39"><call pos:start="1349:33" pos:end="1349:39"><name pos:start="1349:33" pos:end="1349:37">abort</name><argument_list pos:start="1349:38" pos:end="1349:39">()</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></switch>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1355:25" pos:end="1355:44"><expr pos:start="1355:25" pos:end="1355:43"><call pos:start="1355:25" pos:end="1355:43"><name pos:start="1355:25" pos:end="1355:37">tcg_temp_free</name><argument_list pos:start="1355:38" pos:end="1355:43">(<argument pos:start="1355:39" pos:end="1355:42"><expr pos:start="1355:39" pos:end="1355:42"><name pos:start="1355:39" pos:end="1355:42">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="1357:23" pos:end="1393:21">else <block pos:start="1357:28" pos:end="1393:21">{<block_content pos:start="1361:25" pos:end="1391:47">

                        <comment type="block" pos:start="1359:25" pos:end="1359:45">/* SWP instruction */</comment>

                        <expr_stmt pos:start="1361:25" pos:end="1361:42"><expr pos:start="1361:25" pos:end="1361:41"><name pos:start="1361:25" pos:end="1361:26">rm</name> <operator pos:start="1361:28" pos:end="1361:28">=</operator> <operator pos:start="1361:30" pos:end="1361:30">(</operator><name pos:start="1361:31" pos:end="1361:34">insn</name><operator pos:start="1361:35" pos:end="1361:35">)</operator> <operator pos:start="1361:37" pos:end="1361:37">&amp;</operator> <literal type="number" pos:start="1361:39" pos:end="1361:41">0xf</literal></expr>;</expr_stmt>



                        <comment type="block" pos:start="1365:25" pos:end="1369:52">/* ??? This is not really atomic.  However we know

                           we never have multiple CPUs running in parallel,

                           so it is good enough.  */</comment>

                        <expr_stmt pos:start="1371:25" pos:end="1371:47"><expr pos:start="1371:25" pos:end="1371:46"><name pos:start="1371:25" pos:end="1371:28">addr</name> <operator pos:start="1371:30" pos:end="1371:30">=</operator> <call pos:start="1371:32" pos:end="1371:46"><name pos:start="1371:32" pos:end="1371:39">load_reg</name><argument_list pos:start="1371:40" pos:end="1371:46">(<argument pos:start="1371:41" pos:end="1371:41"><expr pos:start="1371:41" pos:end="1371:41"><name pos:start="1371:41" pos:end="1371:41">s</name></expr></argument>, <argument pos:start="1371:44" pos:end="1371:45"><expr pos:start="1371:44" pos:end="1371:45"><name pos:start="1371:44" pos:end="1371:45">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1373:25" pos:end="1373:46"><expr pos:start="1373:25" pos:end="1373:45"><name pos:start="1373:25" pos:end="1373:27">tmp</name> <operator pos:start="1373:29" pos:end="1373:29">=</operator> <call pos:start="1373:31" pos:end="1373:45"><name pos:start="1373:31" pos:end="1373:38">load_reg</name><argument_list pos:start="1373:39" pos:end="1373:45">(<argument pos:start="1373:40" pos:end="1373:40"><expr pos:start="1373:40" pos:end="1373:40"><name pos:start="1373:40" pos:end="1373:40">s</name></expr></argument>, <argument pos:start="1373:43" pos:end="1373:44"><expr pos:start="1373:43" pos:end="1373:44"><name pos:start="1373:43" pos:end="1373:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1375:25" pos:end="1387:25"><if pos:start="1375:25" pos:end="1381:25">if <condition pos:start="1375:28" pos:end="1375:45">(<expr pos:start="1375:29" pos:end="1375:44"><name pos:start="1375:29" pos:end="1375:32">insn</name> <operator pos:start="1375:34" pos:end="1375:34">&amp;</operator> <operator pos:start="1375:36" pos:end="1375:36">(</operator><literal type="number" pos:start="1375:37" pos:end="1375:37">1</literal> <operator pos:start="1375:39" pos:end="1375:40">&lt;&lt;</operator> <literal type="number" pos:start="1375:42" pos:end="1375:43">22</literal><operator pos:start="1375:44" pos:end="1375:44">)</operator></expr>)</condition> <block pos:start="1375:47" pos:end="1381:25">{<block_content pos:start="1377:29" pos:end="1379:59">

                            <expr_stmt pos:start="1377:29" pos:end="1377:62"><expr pos:start="1377:29" pos:end="1377:61"><name pos:start="1377:29" pos:end="1377:32">tmp2</name> <operator pos:start="1377:34" pos:end="1377:34">=</operator> <call pos:start="1377:36" pos:end="1377:61"><name pos:start="1377:36" pos:end="1377:43">gen_ld8u</name><argument_list pos:start="1377:44" pos:end="1377:61">(<argument pos:start="1377:45" pos:end="1377:48"><expr pos:start="1377:45" pos:end="1377:48"><name pos:start="1377:45" pos:end="1377:48">addr</name></expr></argument>, <argument pos:start="1377:51" pos:end="1377:60"><expr pos:start="1377:51" pos:end="1377:60"><call pos:start="1377:51" pos:end="1377:60"><name pos:start="1377:51" pos:end="1377:57">IS_USER</name><argument_list pos:start="1377:58" pos:end="1377:60">(<argument pos:start="1377:59" pos:end="1377:59"><expr pos:start="1377:59" pos:end="1377:59"><name pos:start="1377:59" pos:end="1377:59">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1379:29" pos:end="1379:59"><expr pos:start="1379:29" pos:end="1379:58"><call pos:start="1379:29" pos:end="1379:58"><name pos:start="1379:29" pos:end="1379:35">gen_st8</name><argument_list pos:start="1379:36" pos:end="1379:58">(<argument pos:start="1379:37" pos:end="1379:39"><expr pos:start="1379:37" pos:end="1379:39"><name pos:start="1379:37" pos:end="1379:39">tmp</name></expr></argument>, <argument pos:start="1379:42" pos:end="1379:45"><expr pos:start="1379:42" pos:end="1379:45"><name pos:start="1379:42" pos:end="1379:45">addr</name></expr></argument>, <argument pos:start="1379:48" pos:end="1379:57"><expr pos:start="1379:48" pos:end="1379:57"><call pos:start="1379:48" pos:end="1379:57"><name pos:start="1379:48" pos:end="1379:54">IS_USER</name><argument_list pos:start="1379:55" pos:end="1379:57">(<argument pos:start="1379:56" pos:end="1379:56"><expr pos:start="1379:56" pos:end="1379:56"><name pos:start="1379:56" pos:end="1379:56">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1381:27" pos:end="1387:25">else <block pos:start="1381:32" pos:end="1387:25">{<block_content pos:start="1383:29" pos:end="1385:60">

                            <expr_stmt pos:start="1383:29" pos:end="1383:62"><expr pos:start="1383:29" pos:end="1383:61"><name pos:start="1383:29" pos:end="1383:32">tmp2</name> <operator pos:start="1383:34" pos:end="1383:34">=</operator> <call pos:start="1383:36" pos:end="1383:61"><name pos:start="1383:36" pos:end="1383:43">gen_ld32</name><argument_list pos:start="1383:44" pos:end="1383:61">(<argument pos:start="1383:45" pos:end="1383:48"><expr pos:start="1383:45" pos:end="1383:48"><name pos:start="1383:45" pos:end="1383:48">addr</name></expr></argument>, <argument pos:start="1383:51" pos:end="1383:60"><expr pos:start="1383:51" pos:end="1383:60"><call pos:start="1383:51" pos:end="1383:60"><name pos:start="1383:51" pos:end="1383:57">IS_USER</name><argument_list pos:start="1383:58" pos:end="1383:60">(<argument pos:start="1383:59" pos:end="1383:59"><expr pos:start="1383:59" pos:end="1383:59"><name pos:start="1383:59" pos:end="1383:59">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1385:29" pos:end="1385:60"><expr pos:start="1385:29" pos:end="1385:59"><call pos:start="1385:29" pos:end="1385:59"><name pos:start="1385:29" pos:end="1385:36">gen_st32</name><argument_list pos:start="1385:37" pos:end="1385:59">(<argument pos:start="1385:38" pos:end="1385:40"><expr pos:start="1385:38" pos:end="1385:40"><name pos:start="1385:38" pos:end="1385:40">tmp</name></expr></argument>, <argument pos:start="1385:43" pos:end="1385:46"><expr pos:start="1385:43" pos:end="1385:46"><name pos:start="1385:43" pos:end="1385:46">addr</name></expr></argument>, <argument pos:start="1385:49" pos:end="1385:58"><expr pos:start="1385:49" pos:end="1385:58"><call pos:start="1385:49" pos:end="1385:58"><name pos:start="1385:49" pos:end="1385:55">IS_USER</name><argument_list pos:start="1385:56" pos:end="1385:58">(<argument pos:start="1385:57" pos:end="1385:57"><expr pos:start="1385:57" pos:end="1385:57"><name pos:start="1385:57" pos:end="1385:57">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1389:25" pos:end="1389:48"><expr pos:start="1389:25" pos:end="1389:47"><call pos:start="1389:25" pos:end="1389:47"><name pos:start="1389:25" pos:end="1389:41">tcg_temp_free_i32</name><argument_list pos:start="1389:42" pos:end="1389:47">(<argument pos:start="1389:43" pos:end="1389:46"><expr pos:start="1389:43" pos:end="1389:46"><name pos:start="1389:43" pos:end="1389:46">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1391:25" pos:end="1391:47"><expr pos:start="1391:25" pos:end="1391:46"><call pos:start="1391:25" pos:end="1391:46"><name pos:start="1391:25" pos:end="1391:33">store_reg</name><argument_list pos:start="1391:34" pos:end="1391:46">(<argument pos:start="1391:35" pos:end="1391:35"><expr pos:start="1391:35" pos:end="1391:35"><name pos:start="1391:35" pos:end="1391:35">s</name></expr></argument>, <argument pos:start="1391:38" pos:end="1391:39"><expr pos:start="1391:38" pos:end="1391:39"><name pos:start="1391:38" pos:end="1391:39">rd</name></expr></argument>, <argument pos:start="1391:42" pos:end="1391:45"><expr pos:start="1391:42" pos:end="1391:45"><name pos:start="1391:42" pos:end="1391:45">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="1397:15" pos:end="1537:13">else <block pos:start="1397:20" pos:end="1537:13">{<block_content pos:start="1399:17" pos:end="1535:17">

                <decl_stmt pos:start="1399:17" pos:end="1399:35"><decl pos:start="1399:17" pos:end="1399:34"><type pos:start="1399:17" pos:end="1399:19"><name pos:start="1399:17" pos:end="1399:19">int</name></type> <name pos:start="1399:21" pos:end="1399:34">address_offset</name></decl>;</decl_stmt>

                <decl_stmt pos:start="1401:17" pos:end="1401:25"><decl pos:start="1401:17" pos:end="1401:24"><type pos:start="1401:17" pos:end="1401:19"><name pos:start="1401:17" pos:end="1401:19">int</name></type> <name pos:start="1401:21" pos:end="1401:24">load</name></decl>;</decl_stmt>

                <comment type="block" pos:start="1403:17" pos:end="1403:37">/* Misc load/store */</comment>

                <expr_stmt pos:start="1405:17" pos:end="1405:40"><expr pos:start="1405:17" pos:end="1405:39"><name pos:start="1405:17" pos:end="1405:18">rn</name> <operator pos:start="1405:20" pos:end="1405:20">=</operator> <operator pos:start="1405:22" pos:end="1405:22">(</operator><name pos:start="1405:23" pos:end="1405:26">insn</name> <operator pos:start="1405:28" pos:end="1405:29">&gt;&gt;</operator> <literal type="number" pos:start="1405:31" pos:end="1405:32">16</literal><operator pos:start="1405:33" pos:end="1405:33">)</operator> <operator pos:start="1405:35" pos:end="1405:35">&amp;</operator> <literal type="number" pos:start="1405:37" pos:end="1405:39">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1407:17" pos:end="1407:40"><expr pos:start="1407:17" pos:end="1407:39"><name pos:start="1407:17" pos:end="1407:18">rd</name> <operator pos:start="1407:20" pos:end="1407:20">=</operator> <operator pos:start="1407:22" pos:end="1407:22">(</operator><name pos:start="1407:23" pos:end="1407:26">insn</name> <operator pos:start="1407:28" pos:end="1407:29">&gt;&gt;</operator> <literal type="number" pos:start="1407:31" pos:end="1407:32">12</literal><operator pos:start="1407:33" pos:end="1407:33">)</operator> <operator pos:start="1407:35" pos:end="1407:35">&amp;</operator> <literal type="number" pos:start="1407:37" pos:end="1407:39">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1409:17" pos:end="1409:39"><expr pos:start="1409:17" pos:end="1409:38"><name pos:start="1409:17" pos:end="1409:20">addr</name> <operator pos:start="1409:22" pos:end="1409:22">=</operator> <call pos:start="1409:24" pos:end="1409:38"><name pos:start="1409:24" pos:end="1409:31">load_reg</name><argument_list pos:start="1409:32" pos:end="1409:38">(<argument pos:start="1409:33" pos:end="1409:33"><expr pos:start="1409:33" pos:end="1409:33"><name pos:start="1409:33" pos:end="1409:33">s</name></expr></argument>, <argument pos:start="1409:36" pos:end="1409:37"><expr pos:start="1409:36" pos:end="1409:37"><name pos:start="1409:36" pos:end="1409:37">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1411:17" pos:end="1413:59"><if pos:start="1411:17" pos:end="1413:59">if <condition pos:start="1411:20" pos:end="1411:37">(<expr pos:start="1411:21" pos:end="1411:36"><name pos:start="1411:21" pos:end="1411:24">insn</name> <operator pos:start="1411:26" pos:end="1411:26">&amp;</operator> <operator pos:start="1411:28" pos:end="1411:28">(</operator><literal type="number" pos:start="1411:29" pos:end="1411:29">1</literal> <operator pos:start="1411:31" pos:end="1411:32">&lt;&lt;</operator> <literal type="number" pos:start="1411:34" pos:end="1411:35">24</literal><operator pos:start="1411:36" pos:end="1411:36">)</operator></expr>)</condition><block type="pseudo" pos:start="1413:21" pos:end="1413:59"><block_content pos:start="1413:21" pos:end="1413:59">

                    <expr_stmt pos:start="1413:21" pos:end="1413:59"><expr pos:start="1413:21" pos:end="1413:58"><call pos:start="1413:21" pos:end="1413:58"><name pos:start="1413:21" pos:end="1413:40">gen_add_datah_offset</name><argument_list pos:start="1413:41" pos:end="1413:58">(<argument pos:start="1413:42" pos:end="1413:42"><expr pos:start="1413:42" pos:end="1413:42"><name pos:start="1413:42" pos:end="1413:42">s</name></expr></argument>, <argument pos:start="1413:45" pos:end="1413:48"><expr pos:start="1413:45" pos:end="1413:48"><name pos:start="1413:45" pos:end="1413:48">insn</name></expr></argument>, <argument pos:start="1413:51" pos:end="1413:51"><expr pos:start="1413:51" pos:end="1413:51"><literal type="number" pos:start="1413:51" pos:end="1413:51">0</literal></expr></argument>, <argument pos:start="1413:54" pos:end="1413:57"><expr pos:start="1413:54" pos:end="1413:57"><name pos:start="1413:54" pos:end="1413:57">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1415:17" pos:end="1415:35"><expr pos:start="1415:17" pos:end="1415:34"><name pos:start="1415:17" pos:end="1415:30">address_offset</name> <operator pos:start="1415:32" pos:end="1415:32">=</operator> <literal type="number" pos:start="1415:34" pos:end="1415:34">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="1417:17" pos:end="1499:17"><if pos:start="1417:17" pos:end="1447:17">if <condition pos:start="1417:20" pos:end="1417:37">(<expr pos:start="1417:21" pos:end="1417:36"><name pos:start="1417:21" pos:end="1417:24">insn</name> <operator pos:start="1417:26" pos:end="1417:26">&amp;</operator> <operator pos:start="1417:28" pos:end="1417:28">(</operator><literal type="number" pos:start="1417:29" pos:end="1417:29">1</literal> <operator pos:start="1417:31" pos:end="1417:32">&lt;&lt;</operator> <literal type="number" pos:start="1417:34" pos:end="1417:35">20</literal><operator pos:start="1417:36" pos:end="1417:36">)</operator></expr>)</condition> <block pos:start="1417:39" pos:end="1447:17">{<block_content pos:start="1421:21" pos:end="1445:29">

                    <comment type="block" pos:start="1419:21" pos:end="1419:30">/* load */</comment>

                    <switch pos:start="1421:21" pos:end="1443:21">switch<condition pos:start="1421:27" pos:end="1421:30">(<expr pos:start="1421:28" pos:end="1421:29"><name pos:start="1421:28" pos:end="1421:29">sh</name></expr>)</condition> <block pos:start="1421:32" pos:end="1443:21">{<block_content pos:start="1423:21" pos:end="1441:30">

                    <case pos:start="1423:21" pos:end="1423:27">case <expr pos:start="1423:26" pos:end="1423:26"><literal type="number" pos:start="1423:26" pos:end="1423:26">1</literal></expr>:</case>

                        <expr_stmt pos:start="1425:25" pos:end="1425:58"><expr pos:start="1425:25" pos:end="1425:57"><name pos:start="1425:25" pos:end="1425:27">tmp</name> <operator pos:start="1425:29" pos:end="1425:29">=</operator> <call pos:start="1425:31" pos:end="1425:57"><name pos:start="1425:31" pos:end="1425:39">gen_ld16u</name><argument_list pos:start="1425:40" pos:end="1425:57">(<argument pos:start="1425:41" pos:end="1425:44"><expr pos:start="1425:41" pos:end="1425:44"><name pos:start="1425:41" pos:end="1425:44">addr</name></expr></argument>, <argument pos:start="1425:47" pos:end="1425:56"><expr pos:start="1425:47" pos:end="1425:56"><call pos:start="1425:47" pos:end="1425:56"><name pos:start="1425:47" pos:end="1425:53">IS_USER</name><argument_list pos:start="1425:54" pos:end="1425:56">(<argument pos:start="1425:55" pos:end="1425:55"><expr pos:start="1425:55" pos:end="1425:55"><name pos:start="1425:55" pos:end="1425:55">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1427:25" pos:end="1427:30">break;</break>

                    <case pos:start="1429:21" pos:end="1429:27">case <expr pos:start="1429:26" pos:end="1429:26"><literal type="number" pos:start="1429:26" pos:end="1429:26">2</literal></expr>:</case>

                        <expr_stmt pos:start="1431:25" pos:end="1431:57"><expr pos:start="1431:25" pos:end="1431:56"><name pos:start="1431:25" pos:end="1431:27">tmp</name> <operator pos:start="1431:29" pos:end="1431:29">=</operator> <call pos:start="1431:31" pos:end="1431:56"><name pos:start="1431:31" pos:end="1431:38">gen_ld8s</name><argument_list pos:start="1431:39" pos:end="1431:56">(<argument pos:start="1431:40" pos:end="1431:43"><expr pos:start="1431:40" pos:end="1431:43"><name pos:start="1431:40" pos:end="1431:43">addr</name></expr></argument>, <argument pos:start="1431:46" pos:end="1431:55"><expr pos:start="1431:46" pos:end="1431:55"><call pos:start="1431:46" pos:end="1431:55"><name pos:start="1431:46" pos:end="1431:52">IS_USER</name><argument_list pos:start="1431:53" pos:end="1431:55">(<argument pos:start="1431:54" pos:end="1431:54"><expr pos:start="1431:54" pos:end="1431:54"><name pos:start="1431:54" pos:end="1431:54">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1433:25" pos:end="1433:30">break;</break>

                    <default pos:start="1435:21" pos:end="1435:28">default:</default>

                    <case pos:start="1437:21" pos:end="1437:27">case <expr pos:start="1437:26" pos:end="1437:26"><literal type="number" pos:start="1437:26" pos:end="1437:26">3</literal></expr>:</case>

                        <expr_stmt pos:start="1439:25" pos:end="1439:58"><expr pos:start="1439:25" pos:end="1439:57"><name pos:start="1439:25" pos:end="1439:27">tmp</name> <operator pos:start="1439:29" pos:end="1439:29">=</operator> <call pos:start="1439:31" pos:end="1439:57"><name pos:start="1439:31" pos:end="1439:39">gen_ld16s</name><argument_list pos:start="1439:40" pos:end="1439:57">(<argument pos:start="1439:41" pos:end="1439:44"><expr pos:start="1439:41" pos:end="1439:44"><name pos:start="1439:41" pos:end="1439:44">addr</name></expr></argument>, <argument pos:start="1439:47" pos:end="1439:56"><expr pos:start="1439:47" pos:end="1439:56"><call pos:start="1439:47" pos:end="1439:56"><name pos:start="1439:47" pos:end="1439:53">IS_USER</name><argument_list pos:start="1439:54" pos:end="1439:56">(<argument pos:start="1439:55" pos:end="1439:55"><expr pos:start="1439:55" pos:end="1439:55"><name pos:start="1439:55" pos:end="1439:55">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1441:25" pos:end="1441:30">break;</break>

                    </block_content>}</block></switch>

                    <expr_stmt pos:start="1445:21" pos:end="1445:29"><expr pos:start="1445:21" pos:end="1445:28"><name pos:start="1445:21" pos:end="1445:24">load</name> <operator pos:start="1445:26" pos:end="1445:26">=</operator> <literal type="number" pos:start="1445:28" pos:end="1445:28">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="1447:19" pos:end="1489:17">else if <condition pos:start="1447:27" pos:end="1447:34">(<expr pos:start="1447:28" pos:end="1447:33"><name pos:start="1447:28" pos:end="1447:29">sh</name> <operator pos:start="1447:31" pos:end="1447:31">&amp;</operator> <literal type="number" pos:start="1447:33" pos:end="1447:33">2</literal></expr>)</condition> <block pos:start="1447:36" pos:end="1489:17">{<block_content pos:start="1449:21" pos:end="1487:40">

                    <expr_stmt pos:start="1449:21" pos:end="1449:30"><expr pos:start="1449:21" pos:end="1449:29"><call pos:start="1449:21" pos:end="1449:29"><name pos:start="1449:21" pos:end="1449:24">ARCH</name><argument_list pos:start="1449:25" pos:end="1449:29">(<argument pos:start="1449:26" pos:end="1449:28"><expr pos:start="1449:26" pos:end="1449:28"><literal type="number" pos:start="1449:26" pos:end="1449:28">5TE</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="1451:21" pos:end="1451:36">/* doubleword */</comment>

                    <if_stmt pos:start="1453:21" pos:end="1485:21"><if pos:start="1453:21" pos:end="1469:21">if <condition pos:start="1453:24" pos:end="1453:31">(<expr pos:start="1453:25" pos:end="1453:30"><name pos:start="1453:25" pos:end="1453:26">sh</name> <operator pos:start="1453:28" pos:end="1453:28">&amp;</operator> <literal type="number" pos:start="1453:30" pos:end="1453:30">1</literal></expr>)</condition> <block pos:start="1453:33" pos:end="1469:21">{<block_content pos:start="1457:25" pos:end="1467:33">

                        <comment type="block" pos:start="1455:25" pos:end="1455:35">/* store */</comment>

                        <expr_stmt pos:start="1457:25" pos:end="1457:46"><expr pos:start="1457:25" pos:end="1457:45"><name pos:start="1457:25" pos:end="1457:27">tmp</name> <operator pos:start="1457:29" pos:end="1457:29">=</operator> <call pos:start="1457:31" pos:end="1457:45"><name pos:start="1457:31" pos:end="1457:38">load_reg</name><argument_list pos:start="1457:39" pos:end="1457:45">(<argument pos:start="1457:40" pos:end="1457:40"><expr pos:start="1457:40" pos:end="1457:40"><name pos:start="1457:40" pos:end="1457:40">s</name></expr></argument>, <argument pos:start="1457:43" pos:end="1457:44"><expr pos:start="1457:43" pos:end="1457:44"><name pos:start="1457:43" pos:end="1457:44">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1459:25" pos:end="1459:56"><expr pos:start="1459:25" pos:end="1459:55"><call pos:start="1459:25" pos:end="1459:55"><name pos:start="1459:25" pos:end="1459:32">gen_st32</name><argument_list pos:start="1459:33" pos:end="1459:55">(<argument pos:start="1459:34" pos:end="1459:36"><expr pos:start="1459:34" pos:end="1459:36"><name pos:start="1459:34" pos:end="1459:36">tmp</name></expr></argument>, <argument pos:start="1459:39" pos:end="1459:42"><expr pos:start="1459:39" pos:end="1459:42"><name pos:start="1459:39" pos:end="1459:42">addr</name></expr></argument>, <argument pos:start="1459:45" pos:end="1459:54"><expr pos:start="1459:45" pos:end="1459:54"><call pos:start="1459:45" pos:end="1459:54"><name pos:start="1459:45" pos:end="1459:51">IS_USER</name><argument_list pos:start="1459:52" pos:end="1459:54">(<argument pos:start="1459:53" pos:end="1459:53"><expr pos:start="1459:53" pos:end="1459:53"><name pos:start="1459:53" pos:end="1459:53">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1461:25" pos:end="1461:56"><expr pos:start="1461:25" pos:end="1461:55"><call pos:start="1461:25" pos:end="1461:55"><name pos:start="1461:25" pos:end="1461:40">tcg_gen_addi_i32</name><argument_list pos:start="1461:41" pos:end="1461:55">(<argument pos:start="1461:42" pos:end="1461:45"><expr pos:start="1461:42" pos:end="1461:45"><name pos:start="1461:42" pos:end="1461:45">addr</name></expr></argument>, <argument pos:start="1461:48" pos:end="1461:51"><expr pos:start="1461:48" pos:end="1461:51"><name pos:start="1461:48" pos:end="1461:51">addr</name></expr></argument>, <argument pos:start="1461:54" pos:end="1461:54"><expr pos:start="1461:54" pos:end="1461:54"><literal type="number" pos:start="1461:54" pos:end="1461:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1463:25" pos:end="1463:50"><expr pos:start="1463:25" pos:end="1463:49"><name pos:start="1463:25" pos:end="1463:27">tmp</name> <operator pos:start="1463:29" pos:end="1463:29">=</operator> <call pos:start="1463:31" pos:end="1463:49"><name pos:start="1463:31" pos:end="1463:38">load_reg</name><argument_list pos:start="1463:39" pos:end="1463:49">(<argument pos:start="1463:40" pos:end="1463:40"><expr pos:start="1463:40" pos:end="1463:40"><name pos:start="1463:40" pos:end="1463:40">s</name></expr></argument>, <argument pos:start="1463:43" pos:end="1463:48"><expr pos:start="1463:43" pos:end="1463:48"><name pos:start="1463:43" pos:end="1463:44">rd</name> <operator pos:start="1463:46" pos:end="1463:46">+</operator> <literal type="number" pos:start="1463:48" pos:end="1463:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1465:25" pos:end="1465:56"><expr pos:start="1465:25" pos:end="1465:55"><call pos:start="1465:25" pos:end="1465:55"><name pos:start="1465:25" pos:end="1465:32">gen_st32</name><argument_list pos:start="1465:33" pos:end="1465:55">(<argument pos:start="1465:34" pos:end="1465:36"><expr pos:start="1465:34" pos:end="1465:36"><name pos:start="1465:34" pos:end="1465:36">tmp</name></expr></argument>, <argument pos:start="1465:39" pos:end="1465:42"><expr pos:start="1465:39" pos:end="1465:42"><name pos:start="1465:39" pos:end="1465:42">addr</name></expr></argument>, <argument pos:start="1465:45" pos:end="1465:54"><expr pos:start="1465:45" pos:end="1465:54"><call pos:start="1465:45" pos:end="1465:54"><name pos:start="1465:45" pos:end="1465:51">IS_USER</name><argument_list pos:start="1465:52" pos:end="1465:54">(<argument pos:start="1465:53" pos:end="1465:53"><expr pos:start="1465:53" pos:end="1465:53"><name pos:start="1465:53" pos:end="1465:53">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1467:25" pos:end="1467:33"><expr pos:start="1467:25" pos:end="1467:32"><name pos:start="1467:25" pos:end="1467:28">load</name> <operator pos:start="1467:30" pos:end="1467:30">=</operator> <literal type="number" pos:start="1467:32" pos:end="1467:32">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="1469:23" pos:end="1485:21">else <block pos:start="1469:28" pos:end="1485:21">{<block_content pos:start="1473:25" pos:end="1483:33">

                        <comment type="block" pos:start="1471:25" pos:end="1471:34">/* load */</comment>

                        <expr_stmt pos:start="1473:25" pos:end="1473:57"><expr pos:start="1473:25" pos:end="1473:56"><name pos:start="1473:25" pos:end="1473:27">tmp</name> <operator pos:start="1473:29" pos:end="1473:29">=</operator> <call pos:start="1473:31" pos:end="1473:56"><name pos:start="1473:31" pos:end="1473:38">gen_ld32</name><argument_list pos:start="1473:39" pos:end="1473:56">(<argument pos:start="1473:40" pos:end="1473:43"><expr pos:start="1473:40" pos:end="1473:43"><name pos:start="1473:40" pos:end="1473:43">addr</name></expr></argument>, <argument pos:start="1473:46" pos:end="1473:55"><expr pos:start="1473:46" pos:end="1473:55"><call pos:start="1473:46" pos:end="1473:55"><name pos:start="1473:46" pos:end="1473:52">IS_USER</name><argument_list pos:start="1473:53" pos:end="1473:55">(<argument pos:start="1473:54" pos:end="1473:54"><expr pos:start="1473:54" pos:end="1473:54"><name pos:start="1473:54" pos:end="1473:54">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1475:25" pos:end="1475:46"><expr pos:start="1475:25" pos:end="1475:45"><call pos:start="1475:25" pos:end="1475:45"><name pos:start="1475:25" pos:end="1475:33">store_reg</name><argument_list pos:start="1475:34" pos:end="1475:45">(<argument pos:start="1475:35" pos:end="1475:35"><expr pos:start="1475:35" pos:end="1475:35"><name pos:start="1475:35" pos:end="1475:35">s</name></expr></argument>, <argument pos:start="1475:38" pos:end="1475:39"><expr pos:start="1475:38" pos:end="1475:39"><name pos:start="1475:38" pos:end="1475:39">rd</name></expr></argument>, <argument pos:start="1475:42" pos:end="1475:44"><expr pos:start="1475:42" pos:end="1475:44"><name pos:start="1475:42" pos:end="1475:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1477:25" pos:end="1477:56"><expr pos:start="1477:25" pos:end="1477:55"><call pos:start="1477:25" pos:end="1477:55"><name pos:start="1477:25" pos:end="1477:40">tcg_gen_addi_i32</name><argument_list pos:start="1477:41" pos:end="1477:55">(<argument pos:start="1477:42" pos:end="1477:45"><expr pos:start="1477:42" pos:end="1477:45"><name pos:start="1477:42" pos:end="1477:45">addr</name></expr></argument>, <argument pos:start="1477:48" pos:end="1477:51"><expr pos:start="1477:48" pos:end="1477:51"><name pos:start="1477:48" pos:end="1477:51">addr</name></expr></argument>, <argument pos:start="1477:54" pos:end="1477:54"><expr pos:start="1477:54" pos:end="1477:54"><literal type="number" pos:start="1477:54" pos:end="1477:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1479:25" pos:end="1479:57"><expr pos:start="1479:25" pos:end="1479:56"><name pos:start="1479:25" pos:end="1479:27">tmp</name> <operator pos:start="1479:29" pos:end="1479:29">=</operator> <call pos:start="1479:31" pos:end="1479:56"><name pos:start="1479:31" pos:end="1479:38">gen_ld32</name><argument_list pos:start="1479:39" pos:end="1479:56">(<argument pos:start="1479:40" pos:end="1479:43"><expr pos:start="1479:40" pos:end="1479:43"><name pos:start="1479:40" pos:end="1479:43">addr</name></expr></argument>, <argument pos:start="1479:46" pos:end="1479:55"><expr pos:start="1479:46" pos:end="1479:55"><call pos:start="1479:46" pos:end="1479:55"><name pos:start="1479:46" pos:end="1479:52">IS_USER</name><argument_list pos:start="1479:53" pos:end="1479:55">(<argument pos:start="1479:54" pos:end="1479:54"><expr pos:start="1479:54" pos:end="1479:54"><name pos:start="1479:54" pos:end="1479:54">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1481:25" pos:end="1481:29"><expr pos:start="1481:25" pos:end="1481:28"><name pos:start="1481:25" pos:end="1481:26">rd</name><operator pos:start="1481:27" pos:end="1481:28">++</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="1483:25" pos:end="1483:33"><expr pos:start="1483:25" pos:end="1483:32"><name pos:start="1483:25" pos:end="1483:28">load</name> <operator pos:start="1483:30" pos:end="1483:30">=</operator> <literal type="number" pos:start="1483:32" pos:end="1483:32">1</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="1487:21" pos:end="1487:40"><expr pos:start="1487:21" pos:end="1487:39"><name pos:start="1487:21" pos:end="1487:34">address_offset</name> <operator pos:start="1487:36" pos:end="1487:36">=</operator> <operator pos:start="1487:38" pos:end="1487:38">-</operator><literal type="number" pos:start="1487:39" pos:end="1487:39">4</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1489:19" pos:end="1499:17">else <block pos:start="1489:24" pos:end="1499:17">{<block_content pos:start="1493:21" pos:end="1497:29">

                    <comment type="block" pos:start="1491:21" pos:end="1491:31">/* store */</comment>

                    <expr_stmt pos:start="1493:21" pos:end="1493:42"><expr pos:start="1493:21" pos:end="1493:41"><name pos:start="1493:21" pos:end="1493:23">tmp</name> <operator pos:start="1493:25" pos:end="1493:25">=</operator> <call pos:start="1493:27" pos:end="1493:41"><name pos:start="1493:27" pos:end="1493:34">load_reg</name><argument_list pos:start="1493:35" pos:end="1493:41">(<argument pos:start="1493:36" pos:end="1493:36"><expr pos:start="1493:36" pos:end="1493:36"><name pos:start="1493:36" pos:end="1493:36">s</name></expr></argument>, <argument pos:start="1493:39" pos:end="1493:40"><expr pos:start="1493:39" pos:end="1493:40"><name pos:start="1493:39" pos:end="1493:40">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1495:21" pos:end="1495:52"><expr pos:start="1495:21" pos:end="1495:51"><call pos:start="1495:21" pos:end="1495:51"><name pos:start="1495:21" pos:end="1495:28">gen_st16</name><argument_list pos:start="1495:29" pos:end="1495:51">(<argument pos:start="1495:30" pos:end="1495:32"><expr pos:start="1495:30" pos:end="1495:32"><name pos:start="1495:30" pos:end="1495:32">tmp</name></expr></argument>, <argument pos:start="1495:35" pos:end="1495:38"><expr pos:start="1495:35" pos:end="1495:38"><name pos:start="1495:35" pos:end="1495:38">addr</name></expr></argument>, <argument pos:start="1495:41" pos:end="1495:50"><expr pos:start="1495:41" pos:end="1495:50"><call pos:start="1495:41" pos:end="1495:50"><name pos:start="1495:41" pos:end="1495:47">IS_USER</name><argument_list pos:start="1495:48" pos:end="1495:50">(<argument pos:start="1495:49" pos:end="1495:49"><expr pos:start="1495:49" pos:end="1495:49"><name pos:start="1495:49" pos:end="1495:49">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1497:21" pos:end="1497:29"><expr pos:start="1497:21" pos:end="1497:28"><name pos:start="1497:21" pos:end="1497:24">load</name> <operator pos:start="1497:26" pos:end="1497:26">=</operator> <literal type="number" pos:start="1497:28" pos:end="1497:28">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <comment type="block" pos:start="1501:17" pos:end="1507:63">/* Perform base writeback before the loaded value to

                   ensure correct behavior with overlapping index registers.

                   ldrd with base writeback is is undefined if the

                   destination and index registers overlap.  */</comment>

                <if_stmt pos:start="1509:17" pos:end="1527:17"><if pos:start="1509:17" pos:end="1515:17">if <condition pos:start="1509:20" pos:end="1509:40">(<expr pos:start="1509:21" pos:end="1509:39"><operator pos:start="1509:21" pos:end="1509:21">!</operator><operator pos:start="1509:22" pos:end="1509:22">(</operator><name pos:start="1509:23" pos:end="1509:26">insn</name> <operator pos:start="1509:28" pos:end="1509:28">&amp;</operator> <operator pos:start="1509:30" pos:end="1509:30">(</operator><literal type="number" pos:start="1509:31" pos:end="1509:31">1</literal> <operator pos:start="1509:33" pos:end="1509:34">&lt;&lt;</operator> <literal type="number" pos:start="1509:36" pos:end="1509:37">24</literal><operator pos:start="1509:38" pos:end="1509:38">)</operator><operator pos:start="1509:39" pos:end="1509:39">)</operator></expr>)</condition> <block pos:start="1509:42" pos:end="1515:17">{<block_content pos:start="1511:21" pos:end="1513:43">

                    <expr_stmt pos:start="1511:21" pos:end="1511:72"><expr pos:start="1511:21" pos:end="1511:71"><call pos:start="1511:21" pos:end="1511:71"><name pos:start="1511:21" pos:end="1511:40">gen_add_datah_offset</name><argument_list pos:start="1511:41" pos:end="1511:71">(<argument pos:start="1511:42" pos:end="1511:42"><expr pos:start="1511:42" pos:end="1511:42"><name pos:start="1511:42" pos:end="1511:42">s</name></expr></argument>, <argument pos:start="1511:45" pos:end="1511:48"><expr pos:start="1511:45" pos:end="1511:48"><name pos:start="1511:45" pos:end="1511:48">insn</name></expr></argument>, <argument pos:start="1511:51" pos:end="1511:64"><expr pos:start="1511:51" pos:end="1511:64"><name pos:start="1511:51" pos:end="1511:64">address_offset</name></expr></argument>, <argument pos:start="1511:67" pos:end="1511:70"><expr pos:start="1511:67" pos:end="1511:70"><name pos:start="1511:67" pos:end="1511:70">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1513:21" pos:end="1513:43"><expr pos:start="1513:21" pos:end="1513:42"><call pos:start="1513:21" pos:end="1513:42"><name pos:start="1513:21" pos:end="1513:29">store_reg</name><argument_list pos:start="1513:30" pos:end="1513:42">(<argument pos:start="1513:31" pos:end="1513:31"><expr pos:start="1513:31" pos:end="1513:31"><name pos:start="1513:31" pos:end="1513:31">s</name></expr></argument>, <argument pos:start="1513:34" pos:end="1513:35"><expr pos:start="1513:34" pos:end="1513:35"><name pos:start="1513:34" pos:end="1513:35">rn</name></expr></argument>, <argument pos:start="1513:38" pos:end="1513:41"><expr pos:start="1513:38" pos:end="1513:41"><name pos:start="1513:38" pos:end="1513:41">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="1515:19" pos:end="1523:17">else if <condition pos:start="1515:27" pos:end="1515:44">(<expr pos:start="1515:28" pos:end="1515:43"><name pos:start="1515:28" pos:end="1515:31">insn</name> <operator pos:start="1515:33" pos:end="1515:33">&amp;</operator> <operator pos:start="1515:35" pos:end="1515:35">(</operator><literal type="number" pos:start="1515:36" pos:end="1515:36">1</literal> <operator pos:start="1515:38" pos:end="1515:39">&lt;&lt;</operator> <literal type="number" pos:start="1515:41" pos:end="1515:42">21</literal><operator pos:start="1515:43" pos:end="1515:43">)</operator></expr>)</condition> <block pos:start="1515:46" pos:end="1523:17">{<block_content pos:start="1517:21" pos:end="1521:43">

                    <if_stmt pos:start="1517:21" pos:end="1519:69"><if pos:start="1517:21" pos:end="1519:69">if <condition pos:start="1517:24" pos:end="1517:39">(<expr pos:start="1517:25" pos:end="1517:38"><name pos:start="1517:25" pos:end="1517:38">address_offset</name></expr>)</condition><block type="pseudo" pos:start="1519:25" pos:end="1519:69"><block_content pos:start="1519:25" pos:end="1519:69">

                        <expr_stmt pos:start="1519:25" pos:end="1519:69"><expr pos:start="1519:25" pos:end="1519:68"><call pos:start="1519:25" pos:end="1519:68"><name pos:start="1519:25" pos:end="1519:40">tcg_gen_addi_i32</name><argument_list pos:start="1519:41" pos:end="1519:68">(<argument pos:start="1519:42" pos:end="1519:45"><expr pos:start="1519:42" pos:end="1519:45"><name pos:start="1519:42" pos:end="1519:45">addr</name></expr></argument>, <argument pos:start="1519:48" pos:end="1519:51"><expr pos:start="1519:48" pos:end="1519:51"><name pos:start="1519:48" pos:end="1519:51">addr</name></expr></argument>, <argument pos:start="1519:54" pos:end="1519:67"><expr pos:start="1519:54" pos:end="1519:67"><name pos:start="1519:54" pos:end="1519:67">address_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="1521:21" pos:end="1521:43"><expr pos:start="1521:21" pos:end="1521:42"><call pos:start="1521:21" pos:end="1521:42"><name pos:start="1521:21" pos:end="1521:29">store_reg</name><argument_list pos:start="1521:30" pos:end="1521:42">(<argument pos:start="1521:31" pos:end="1521:31"><expr pos:start="1521:31" pos:end="1521:31"><name pos:start="1521:31" pos:end="1521:31">s</name></expr></argument>, <argument pos:start="1521:34" pos:end="1521:35"><expr pos:start="1521:34" pos:end="1521:35"><name pos:start="1521:34" pos:end="1521:35">rn</name></expr></argument>, <argument pos:start="1521:38" pos:end="1521:41"><expr pos:start="1521:38" pos:end="1521:41"><name pos:start="1521:38" pos:end="1521:41">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1523:19" pos:end="1527:17">else <block pos:start="1523:24" pos:end="1527:17">{<block_content pos:start="1525:21" pos:end="1525:44">

                    <expr_stmt pos:start="1525:21" pos:end="1525:44"><expr pos:start="1525:21" pos:end="1525:43"><call pos:start="1525:21" pos:end="1525:43"><name pos:start="1525:21" pos:end="1525:37">tcg_temp_free_i32</name><argument_list pos:start="1525:38" pos:end="1525:43">(<argument pos:start="1525:39" pos:end="1525:42"><expr pos:start="1525:39" pos:end="1525:42"><name pos:start="1525:39" pos:end="1525:42">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="1529:17" pos:end="1535:17"><if pos:start="1529:17" pos:end="1535:17">if <condition pos:start="1529:20" pos:end="1529:25">(<expr pos:start="1529:21" pos:end="1529:24"><name pos:start="1529:21" pos:end="1529:24">load</name></expr>)</condition> <block pos:start="1529:27" pos:end="1535:17">{<block_content pos:start="1533:21" pos:end="1533:42">

                    <comment type="block" pos:start="1531:21" pos:end="1531:45">/* Complete the load.  */</comment>

                    <expr_stmt pos:start="1533:21" pos:end="1533:42"><expr pos:start="1533:21" pos:end="1533:41"><call pos:start="1533:21" pos:end="1533:41"><name pos:start="1533:21" pos:end="1533:29">store_reg</name><argument_list pos:start="1533:30" pos:end="1533:41">(<argument pos:start="1533:31" pos:end="1533:31"><expr pos:start="1533:31" pos:end="1533:31"><name pos:start="1533:31" pos:end="1533:31">s</name></expr></argument>, <argument pos:start="1533:34" pos:end="1533:35"><expr pos:start="1533:34" pos:end="1533:35"><name pos:start="1533:34" pos:end="1533:35">rd</name></expr></argument>, <argument pos:start="1533:38" pos:end="1533:40"><expr pos:start="1533:38" pos:end="1533:40"><name pos:start="1533:38" pos:end="1533:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1539:13" pos:end="1539:18">break;</break>

        <case pos:start="1541:9" pos:end="1541:17">case <expr pos:start="1541:14" pos:end="1541:16"><literal type="number" pos:start="1541:14" pos:end="1541:16">0x4</literal></expr>:</case>

        <case pos:start="1543:9" pos:end="1543:17">case <expr pos:start="1543:14" pos:end="1543:16"><literal type="number" pos:start="1543:14" pos:end="1543:16">0x5</literal></expr>:</case>

            <goto pos:start="1545:13" pos:end="1545:25">goto <name pos:start="1545:18" pos:end="1545:24">do_ldst</name>;</goto>

        <case pos:start="1547:9" pos:end="1547:17">case <expr pos:start="1547:14" pos:end="1547:16"><literal type="number" pos:start="1547:14" pos:end="1547:16">0x6</literal></expr>:</case>

        <case pos:start="1549:9" pos:end="1549:17">case <expr pos:start="1549:14" pos:end="1549:16"><literal type="number" pos:start="1549:14" pos:end="1549:16">0x7</literal></expr>:</case>

            <if_stmt pos:start="1551:13" pos:end="2115:13"><if pos:start="1551:13" pos:end="2115:13">if <condition pos:start="1551:16" pos:end="1551:32">(<expr pos:start="1551:17" pos:end="1551:31"><name pos:start="1551:17" pos:end="1551:20">insn</name> <operator pos:start="1551:22" pos:end="1551:22">&amp;</operator> <operator pos:start="1551:24" pos:end="1551:24">(</operator><literal type="number" pos:start="1551:25" pos:end="1551:25">1</literal> <operator pos:start="1551:27" pos:end="1551:28">&lt;&lt;</operator> <literal type="number" pos:start="1551:30" pos:end="1551:30">4</literal><operator pos:start="1551:31" pos:end="1551:31">)</operator></expr>)</condition> <block pos:start="1551:34" pos:end="2115:13">{<block_content pos:start="1553:17" pos:end="2113:22">

                <expr_stmt pos:start="1553:17" pos:end="1553:24"><expr pos:start="1553:17" pos:end="1553:23"><call pos:start="1553:17" pos:end="1553:23"><name pos:start="1553:17" pos:end="1553:20">ARCH</name><argument_list pos:start="1553:21" pos:end="1553:23">(<argument pos:start="1553:22" pos:end="1553:22"><expr pos:start="1553:22" pos:end="1553:22"><literal type="number" pos:start="1553:22" pos:end="1553:22">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="1555:17" pos:end="1555:48">/* Armv6 Media instructions.  */</comment>

                <expr_stmt pos:start="1557:17" pos:end="1557:32"><expr pos:start="1557:17" pos:end="1557:31"><name pos:start="1557:17" pos:end="1557:18">rm</name> <operator pos:start="1557:20" pos:end="1557:20">=</operator> <name pos:start="1557:22" pos:end="1557:25">insn</name> <operator pos:start="1557:27" pos:end="1557:27">&amp;</operator> <literal type="number" pos:start="1557:29" pos:end="1557:31">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1559:17" pos:end="1559:40"><expr pos:start="1559:17" pos:end="1559:39"><name pos:start="1559:17" pos:end="1559:18">rn</name> <operator pos:start="1559:20" pos:end="1559:20">=</operator> <operator pos:start="1559:22" pos:end="1559:22">(</operator><name pos:start="1559:23" pos:end="1559:26">insn</name> <operator pos:start="1559:28" pos:end="1559:29">&gt;&gt;</operator> <literal type="number" pos:start="1559:31" pos:end="1559:32">16</literal><operator pos:start="1559:33" pos:end="1559:33">)</operator> <operator pos:start="1559:35" pos:end="1559:35">&amp;</operator> <literal type="number" pos:start="1559:37" pos:end="1559:39">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1561:17" pos:end="1561:40"><expr pos:start="1561:17" pos:end="1561:39"><name pos:start="1561:17" pos:end="1561:18">rd</name> <operator pos:start="1561:20" pos:end="1561:20">=</operator> <operator pos:start="1561:22" pos:end="1561:22">(</operator><name pos:start="1561:23" pos:end="1561:26">insn</name> <operator pos:start="1561:28" pos:end="1561:29">&gt;&gt;</operator> <literal type="number" pos:start="1561:31" pos:end="1561:32">12</literal><operator pos:start="1561:33" pos:end="1561:33">)</operator> <operator pos:start="1561:35" pos:end="1561:35">&amp;</operator> <literal type="number" pos:start="1561:37" pos:end="1561:39">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1563:17" pos:end="1563:39"><expr pos:start="1563:17" pos:end="1563:38"><name pos:start="1563:17" pos:end="1563:18">rs</name> <operator pos:start="1563:20" pos:end="1563:20">=</operator> <operator pos:start="1563:22" pos:end="1563:22">(</operator><name pos:start="1563:23" pos:end="1563:26">insn</name> <operator pos:start="1563:28" pos:end="1563:29">&gt;&gt;</operator> <literal type="number" pos:start="1563:31" pos:end="1563:31">8</literal><operator pos:start="1563:32" pos:end="1563:32">)</operator> <operator pos:start="1563:34" pos:end="1563:34">&amp;</operator> <literal type="number" pos:start="1563:36" pos:end="1563:38">0xf</literal></expr>;</expr_stmt>

                <switch pos:start="1565:17" pos:end="2111:17">switch <condition pos:start="1565:24" pos:end="1565:41">(<expr pos:start="1565:25" pos:end="1565:40"><operator pos:start="1565:25" pos:end="1565:25">(</operator><name pos:start="1565:26" pos:end="1565:29">insn</name> <operator pos:start="1565:31" pos:end="1565:32">&gt;&gt;</operator> <literal type="number" pos:start="1565:34" pos:end="1565:35">23</literal><operator pos:start="1565:36" pos:end="1565:36">)</operator> <operator pos:start="1565:38" pos:end="1565:38">&amp;</operator> <literal type="number" pos:start="1565:40" pos:end="1565:40">3</literal></expr>)</condition> <block pos:start="1565:43" pos:end="2111:17">{<block_content pos:start="1567:17" pos:end="2109:26">

                <case pos:start="1567:17" pos:end="1567:23">case <expr pos:start="1567:22" pos:end="1567:22"><literal type="number" pos:start="1567:22" pos:end="1567:22">0</literal></expr>:</case> <comment type="block" pos:start="1567:25" pos:end="1567:53">/* Parallel add/subtract.  */</comment>

                    <expr_stmt pos:start="1569:21" pos:end="1569:43"><expr pos:start="1569:21" pos:end="1569:42"><name pos:start="1569:21" pos:end="1569:23">op1</name> <operator pos:start="1569:25" pos:end="1569:25">=</operator> <operator pos:start="1569:27" pos:end="1569:27">(</operator><name pos:start="1569:28" pos:end="1569:31">insn</name> <operator pos:start="1569:33" pos:end="1569:34">&gt;&gt;</operator> <literal type="number" pos:start="1569:36" pos:end="1569:37">20</literal><operator pos:start="1569:38" pos:end="1569:38">)</operator> <operator pos:start="1569:40" pos:end="1569:40">&amp;</operator> <literal type="number" pos:start="1569:42" pos:end="1569:42">7</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1571:21" pos:end="1571:42"><expr pos:start="1571:21" pos:end="1571:41"><name pos:start="1571:21" pos:end="1571:23">tmp</name> <operator pos:start="1571:25" pos:end="1571:25">=</operator> <call pos:start="1571:27" pos:end="1571:41"><name pos:start="1571:27" pos:end="1571:34">load_reg</name><argument_list pos:start="1571:35" pos:end="1571:41">(<argument pos:start="1571:36" pos:end="1571:36"><expr pos:start="1571:36" pos:end="1571:36"><name pos:start="1571:36" pos:end="1571:36">s</name></expr></argument>, <argument pos:start="1571:39" pos:end="1571:40"><expr pos:start="1571:39" pos:end="1571:40"><name pos:start="1571:39" pos:end="1571:40">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1573:21" pos:end="1573:43"><expr pos:start="1573:21" pos:end="1573:42"><name pos:start="1573:21" pos:end="1573:24">tmp2</name> <operator pos:start="1573:26" pos:end="1573:26">=</operator> <call pos:start="1573:28" pos:end="1573:42"><name pos:start="1573:28" pos:end="1573:35">load_reg</name><argument_list pos:start="1573:36" pos:end="1573:42">(<argument pos:start="1573:37" pos:end="1573:37"><expr pos:start="1573:37" pos:end="1573:37"><name pos:start="1573:37" pos:end="1573:37">s</name></expr></argument>, <argument pos:start="1573:40" pos:end="1573:41"><expr pos:start="1573:40" pos:end="1573:41"><name pos:start="1573:40" pos:end="1573:41">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1575:21" pos:end="1575:41"><expr pos:start="1575:21" pos:end="1575:40"><name pos:start="1575:21" pos:end="1575:22">sh</name> <operator pos:start="1575:24" pos:end="1575:24">=</operator> <operator pos:start="1575:26" pos:end="1575:26">(</operator><name pos:start="1575:27" pos:end="1575:30">insn</name> <operator pos:start="1575:32" pos:end="1575:33">&gt;&gt;</operator> <literal type="number" pos:start="1575:35" pos:end="1575:35">5</literal><operator pos:start="1575:36" pos:end="1575:36">)</operator> <operator pos:start="1575:38" pos:end="1575:38">&amp;</operator> <literal type="number" pos:start="1575:40" pos:end="1575:40">7</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="1577:21" pos:end="1579:40"><if pos:start="1577:21" pos:end="1579:40">if <condition pos:start="1577:24" pos:end="1577:61">(<expr pos:start="1577:25" pos:end="1577:60"><operator pos:start="1577:25" pos:end="1577:25">(</operator><name pos:start="1577:26" pos:end="1577:28">op1</name> <operator pos:start="1577:30" pos:end="1577:30">&amp;</operator> <literal type="number" pos:start="1577:32" pos:end="1577:32">3</literal><operator pos:start="1577:33" pos:end="1577:33">)</operator> <operator pos:start="1577:35" pos:end="1577:36">==</operator> <literal type="number" pos:start="1577:38" pos:end="1577:38">0</literal> <operator pos:start="1577:40" pos:end="1577:41">||</operator> <name pos:start="1577:43" pos:end="1577:44">sh</name> <operator pos:start="1577:46" pos:end="1577:47">==</operator> <literal type="number" pos:start="1577:49" pos:end="1577:49">5</literal> <operator pos:start="1577:51" pos:end="1577:52">||</operator> <name pos:start="1577:54" pos:end="1577:55">sh</name> <operator pos:start="1577:57" pos:end="1577:58">==</operator> <literal type="number" pos:start="1577:60" pos:end="1577:60">6</literal></expr>)</condition><block type="pseudo" pos:start="1579:25" pos:end="1579:40"><block_content pos:start="1579:25" pos:end="1579:40">

                        <goto pos:start="1579:25" pos:end="1579:40">goto <name pos:start="1579:30" pos:end="1579:39">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="1581:21" pos:end="1581:64"><expr pos:start="1581:21" pos:end="1581:63"><call pos:start="1581:21" pos:end="1581:63"><name pos:start="1581:21" pos:end="1581:43">gen_arm_parallel_addsub</name><argument_list pos:start="1581:44" pos:end="1581:63">(<argument pos:start="1581:45" pos:end="1581:47"><expr pos:start="1581:45" pos:end="1581:47"><name pos:start="1581:45" pos:end="1581:47">op1</name></expr></argument>, <argument pos:start="1581:50" pos:end="1581:51"><expr pos:start="1581:50" pos:end="1581:51"><name pos:start="1581:50" pos:end="1581:51">sh</name></expr></argument>, <argument pos:start="1581:54" pos:end="1581:56"><expr pos:start="1581:54" pos:end="1581:56"><name pos:start="1581:54" pos:end="1581:56">tmp</name></expr></argument>, <argument pos:start="1581:59" pos:end="1581:62"><expr pos:start="1581:59" pos:end="1581:62"><name pos:start="1581:59" pos:end="1581:62">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1583:21" pos:end="1583:44"><expr pos:start="1583:21" pos:end="1583:43"><call pos:start="1583:21" pos:end="1583:43"><name pos:start="1583:21" pos:end="1583:37">tcg_temp_free_i32</name><argument_list pos:start="1583:38" pos:end="1583:43">(<argument pos:start="1583:39" pos:end="1583:42"><expr pos:start="1583:39" pos:end="1583:42"><name pos:start="1583:39" pos:end="1583:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1585:21" pos:end="1585:42"><expr pos:start="1585:21" pos:end="1585:41"><call pos:start="1585:21" pos:end="1585:41"><name pos:start="1585:21" pos:end="1585:29">store_reg</name><argument_list pos:start="1585:30" pos:end="1585:41">(<argument pos:start="1585:31" pos:end="1585:31"><expr pos:start="1585:31" pos:end="1585:31"><name pos:start="1585:31" pos:end="1585:31">s</name></expr></argument>, <argument pos:start="1585:34" pos:end="1585:35"><expr pos:start="1585:34" pos:end="1585:35"><name pos:start="1585:34" pos:end="1585:35">rd</name></expr></argument>, <argument pos:start="1585:38" pos:end="1585:40"><expr pos:start="1585:38" pos:end="1585:40"><name pos:start="1585:38" pos:end="1585:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="1587:21" pos:end="1587:26">break;</break>

                <case pos:start="1589:17" pos:end="1589:23">case <expr pos:start="1589:22" pos:end="1589:22"><literal type="number" pos:start="1589:22" pos:end="1589:22">1</literal></expr>:</case>

                    <if_stmt pos:start="1591:21" pos:end="1807:21"><if pos:start="1591:21" pos:end="1635:21">if <condition pos:start="1591:24" pos:end="1591:49">(<expr pos:start="1591:25" pos:end="1591:48"><operator pos:start="1591:25" pos:end="1591:25">(</operator><name pos:start="1591:26" pos:end="1591:29">insn</name> <operator pos:start="1591:31" pos:end="1591:31">&amp;</operator> <literal type="number" pos:start="1591:33" pos:end="1591:42">0x00700020</literal><operator pos:start="1591:43" pos:end="1591:43">)</operator> <operator pos:start="1591:45" pos:end="1591:46">==</operator> <literal type="number" pos:start="1591:48" pos:end="1591:48">0</literal></expr>)</condition> <block pos:start="1591:51" pos:end="1635:21">{<block_content pos:start="1595:25" pos:end="1633:46">

                        <comment type="block" pos:start="1593:25" pos:end="1593:45">/* Halfword pack.  */</comment>

                        <expr_stmt pos:start="1595:25" pos:end="1595:46"><expr pos:start="1595:25" pos:end="1595:45"><name pos:start="1595:25" pos:end="1595:27">tmp</name> <operator pos:start="1595:29" pos:end="1595:29">=</operator> <call pos:start="1595:31" pos:end="1595:45"><name pos:start="1595:31" pos:end="1595:38">load_reg</name><argument_list pos:start="1595:39" pos:end="1595:45">(<argument pos:start="1595:40" pos:end="1595:40"><expr pos:start="1595:40" pos:end="1595:40"><name pos:start="1595:40" pos:end="1595:40">s</name></expr></argument>, <argument pos:start="1595:43" pos:end="1595:44"><expr pos:start="1595:43" pos:end="1595:44"><name pos:start="1595:43" pos:end="1595:44">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1597:25" pos:end="1597:47"><expr pos:start="1597:25" pos:end="1597:46"><name pos:start="1597:25" pos:end="1597:28">tmp2</name> <operator pos:start="1597:30" pos:end="1597:30">=</operator> <call pos:start="1597:32" pos:end="1597:46"><name pos:start="1597:32" pos:end="1597:39">load_reg</name><argument_list pos:start="1597:40" pos:end="1597:46">(<argument pos:start="1597:41" pos:end="1597:41"><expr pos:start="1597:41" pos:end="1597:41"><name pos:start="1597:41" pos:end="1597:41">s</name></expr></argument>, <argument pos:start="1597:44" pos:end="1597:45"><expr pos:start="1597:44" pos:end="1597:45"><name pos:start="1597:44" pos:end="1597:45">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1599:25" pos:end="1599:51"><expr pos:start="1599:25" pos:end="1599:50"><name pos:start="1599:25" pos:end="1599:29">shift</name> <operator pos:start="1599:31" pos:end="1599:31">=</operator> <operator pos:start="1599:33" pos:end="1599:33">(</operator><name pos:start="1599:34" pos:end="1599:37">insn</name> <operator pos:start="1599:39" pos:end="1599:40">&gt;&gt;</operator> <literal type="number" pos:start="1599:42" pos:end="1599:42">7</literal><operator pos:start="1599:43" pos:end="1599:43">)</operator> <operator pos:start="1599:45" pos:end="1599:45">&amp;</operator> <literal type="number" pos:start="1599:47" pos:end="1599:50">0x1f</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="1601:25" pos:end="1627:25"><if pos:start="1601:25" pos:end="1615:25">if <condition pos:start="1601:28" pos:end="1601:44">(<expr pos:start="1601:29" pos:end="1601:43"><name pos:start="1601:29" pos:end="1601:32">insn</name> <operator pos:start="1601:34" pos:end="1601:34">&amp;</operator> <operator pos:start="1601:36" pos:end="1601:36">(</operator><literal type="number" pos:start="1601:37" pos:end="1601:37">1</literal> <operator pos:start="1601:39" pos:end="1601:40">&lt;&lt;</operator> <literal type="number" pos:start="1601:42" pos:end="1601:42">6</literal><operator pos:start="1601:43" pos:end="1601:43">)</operator></expr>)</condition> <block pos:start="1601:46" pos:end="1615:25">{<block_content pos:start="1605:29" pos:end="1613:59">

                            <comment type="block" pos:start="1603:29" pos:end="1603:39">/* pkhtb */</comment>

                            <if_stmt pos:start="1605:29" pos:end="1607:43"><if pos:start="1605:29" pos:end="1607:43">if <condition pos:start="1605:32" pos:end="1605:43">(<expr pos:start="1605:33" pos:end="1605:42"><name pos:start="1605:33" pos:end="1605:37">shift</name> <operator pos:start="1605:39" pos:end="1605:40">==</operator> <literal type="number" pos:start="1605:42" pos:end="1605:42">0</literal></expr>)</condition><block type="pseudo" pos:start="1607:33" pos:end="1607:43"><block_content pos:start="1607:33" pos:end="1607:43">

                                <expr_stmt pos:start="1607:33" pos:end="1607:43"><expr pos:start="1607:33" pos:end="1607:42"><name pos:start="1607:33" pos:end="1607:37">shift</name> <operator pos:start="1607:39" pos:end="1607:39">=</operator> <literal type="number" pos:start="1607:41" pos:end="1607:42">31</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="1609:29" pos:end="1609:64"><expr pos:start="1609:29" pos:end="1609:63"><call pos:start="1609:29" pos:end="1609:63"><name pos:start="1609:29" pos:end="1609:44">tcg_gen_sari_i32</name><argument_list pos:start="1609:45" pos:end="1609:63">(<argument pos:start="1609:46" pos:end="1609:49"><expr pos:start="1609:46" pos:end="1609:49"><name pos:start="1609:46" pos:end="1609:49">tmp2</name></expr></argument>, <argument pos:start="1609:52" pos:end="1609:55"><expr pos:start="1609:52" pos:end="1609:55"><name pos:start="1609:52" pos:end="1609:55">tmp2</name></expr></argument>, <argument pos:start="1609:58" pos:end="1609:62"><expr pos:start="1609:58" pos:end="1609:62"><name pos:start="1609:58" pos:end="1609:62">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1611:29" pos:end="1611:67"><expr pos:start="1611:29" pos:end="1611:66"><call pos:start="1611:29" pos:end="1611:66"><name pos:start="1611:29" pos:end="1611:44">tcg_gen_andi_i32</name><argument_list pos:start="1611:45" pos:end="1611:66">(<argument pos:start="1611:46" pos:end="1611:48"><expr pos:start="1611:46" pos:end="1611:48"><name pos:start="1611:46" pos:end="1611:48">tmp</name></expr></argument>, <argument pos:start="1611:51" pos:end="1611:53"><expr pos:start="1611:51" pos:end="1611:53"><name pos:start="1611:51" pos:end="1611:53">tmp</name></expr></argument>, <argument pos:start="1611:56" pos:end="1611:65"><expr pos:start="1611:56" pos:end="1611:65"><literal type="number" pos:start="1611:56" pos:end="1611:65">0xffff0000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1613:29" pos:end="1613:59"><expr pos:start="1613:29" pos:end="1613:58"><call pos:start="1613:29" pos:end="1613:58"><name pos:start="1613:29" pos:end="1613:46">tcg_gen_ext16u_i32</name><argument_list pos:start="1613:47" pos:end="1613:58">(<argument pos:start="1613:48" pos:end="1613:51"><expr pos:start="1613:48" pos:end="1613:51"><name pos:start="1613:48" pos:end="1613:51">tmp2</name></expr></argument>, <argument pos:start="1613:54" pos:end="1613:57"><expr pos:start="1613:54" pos:end="1613:57"><name pos:start="1613:54" pos:end="1613:57">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1615:27" pos:end="1627:25">else <block pos:start="1615:32" pos:end="1627:25">{<block_content pos:start="1619:29" pos:end="1625:69">

                            <comment type="block" pos:start="1617:29" pos:end="1617:39">/* pkhbt */</comment>

                            <if_stmt pos:start="1619:29" pos:end="1621:68"><if pos:start="1619:29" pos:end="1621:68">if <condition pos:start="1619:32" pos:end="1619:38">(<expr pos:start="1619:33" pos:end="1619:37"><name pos:start="1619:33" pos:end="1619:37">shift</name></expr>)</condition><block type="pseudo" pos:start="1621:33" pos:end="1621:68"><block_content pos:start="1621:33" pos:end="1621:68">

                                <expr_stmt pos:start="1621:33" pos:end="1621:68"><expr pos:start="1621:33" pos:end="1621:67"><call pos:start="1621:33" pos:end="1621:67"><name pos:start="1621:33" pos:end="1621:48">tcg_gen_shli_i32</name><argument_list pos:start="1621:49" pos:end="1621:67">(<argument pos:start="1621:50" pos:end="1621:53"><expr pos:start="1621:50" pos:end="1621:53"><name pos:start="1621:50" pos:end="1621:53">tmp2</name></expr></argument>, <argument pos:start="1621:56" pos:end="1621:59"><expr pos:start="1621:56" pos:end="1621:59"><name pos:start="1621:56" pos:end="1621:59">tmp2</name></expr></argument>, <argument pos:start="1621:62" pos:end="1621:66"><expr pos:start="1621:62" pos:end="1621:66"><name pos:start="1621:62" pos:end="1621:66">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="1623:29" pos:end="1623:57"><expr pos:start="1623:29" pos:end="1623:56"><call pos:start="1623:29" pos:end="1623:56"><name pos:start="1623:29" pos:end="1623:46">tcg_gen_ext16u_i32</name><argument_list pos:start="1623:47" pos:end="1623:56">(<argument pos:start="1623:48" pos:end="1623:50"><expr pos:start="1623:48" pos:end="1623:50"><name pos:start="1623:48" pos:end="1623:50">tmp</name></expr></argument>, <argument pos:start="1623:53" pos:end="1623:55"><expr pos:start="1623:53" pos:end="1623:55"><name pos:start="1623:53" pos:end="1623:55">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1625:29" pos:end="1625:69"><expr pos:start="1625:29" pos:end="1625:68"><call pos:start="1625:29" pos:end="1625:68"><name pos:start="1625:29" pos:end="1625:44">tcg_gen_andi_i32</name><argument_list pos:start="1625:45" pos:end="1625:68">(<argument pos:start="1625:46" pos:end="1625:49"><expr pos:start="1625:46" pos:end="1625:49"><name pos:start="1625:46" pos:end="1625:49">tmp2</name></expr></argument>, <argument pos:start="1625:52" pos:end="1625:55"><expr pos:start="1625:52" pos:end="1625:55"><name pos:start="1625:52" pos:end="1625:55">tmp2</name></expr></argument>, <argument pos:start="1625:58" pos:end="1625:67"><expr pos:start="1625:58" pos:end="1625:67"><literal type="number" pos:start="1625:58" pos:end="1625:67">0xffff0000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1629:25" pos:end="1629:55"><expr pos:start="1629:25" pos:end="1629:54"><call pos:start="1629:25" pos:end="1629:54"><name pos:start="1629:25" pos:end="1629:38">tcg_gen_or_i32</name><argument_list pos:start="1629:39" pos:end="1629:54">(<argument pos:start="1629:40" pos:end="1629:42"><expr pos:start="1629:40" pos:end="1629:42"><name pos:start="1629:40" pos:end="1629:42">tmp</name></expr></argument>, <argument pos:start="1629:45" pos:end="1629:47"><expr pos:start="1629:45" pos:end="1629:47"><name pos:start="1629:45" pos:end="1629:47">tmp</name></expr></argument>, <argument pos:start="1629:50" pos:end="1629:53"><expr pos:start="1629:50" pos:end="1629:53"><name pos:start="1629:50" pos:end="1629:53">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1631:25" pos:end="1631:48"><expr pos:start="1631:25" pos:end="1631:47"><call pos:start="1631:25" pos:end="1631:47"><name pos:start="1631:25" pos:end="1631:41">tcg_temp_free_i32</name><argument_list pos:start="1631:42" pos:end="1631:47">(<argument pos:start="1631:43" pos:end="1631:46"><expr pos:start="1631:43" pos:end="1631:46"><name pos:start="1631:43" pos:end="1631:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1633:25" pos:end="1633:46"><expr pos:start="1633:25" pos:end="1633:45"><call pos:start="1633:25" pos:end="1633:45"><name pos:start="1633:25" pos:end="1633:33">store_reg</name><argument_list pos:start="1633:34" pos:end="1633:45">(<argument pos:start="1633:35" pos:end="1633:35"><expr pos:start="1633:35" pos:end="1633:35"><name pos:start="1633:35" pos:end="1633:35">s</name></expr></argument>, <argument pos:start="1633:38" pos:end="1633:39"><expr pos:start="1633:38" pos:end="1633:39"><name pos:start="1633:38" pos:end="1633:39">rd</name></expr></argument>, <argument pos:start="1633:42" pos:end="1633:44"><expr pos:start="1633:42" pos:end="1633:44"><name pos:start="1633:42" pos:end="1633:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="1635:23" pos:end="1673:21">else if <condition pos:start="1635:31" pos:end="1635:65">(<expr pos:start="1635:32" pos:end="1635:64"><operator pos:start="1635:32" pos:end="1635:32">(</operator><name pos:start="1635:33" pos:end="1635:36">insn</name> <operator pos:start="1635:38" pos:end="1635:38">&amp;</operator> <literal type="number" pos:start="1635:40" pos:end="1635:49">0x00200020</literal><operator pos:start="1635:50" pos:end="1635:50">)</operator> <operator pos:start="1635:52" pos:end="1635:53">==</operator> <literal type="number" pos:start="1635:55" pos:end="1635:64">0x00200000</literal></expr>)</condition> <block pos:start="1635:67" pos:end="1673:21">{<block_content pos:start="1639:25" pos:end="1671:46">

                        <comment type="block" pos:start="1637:25" pos:end="1637:37">/* [us]sat */</comment>

                        <expr_stmt pos:start="1639:25" pos:end="1639:46"><expr pos:start="1639:25" pos:end="1639:45"><name pos:start="1639:25" pos:end="1639:27">tmp</name> <operator pos:start="1639:29" pos:end="1639:29">=</operator> <call pos:start="1639:31" pos:end="1639:45"><name pos:start="1639:31" pos:end="1639:38">load_reg</name><argument_list pos:start="1639:39" pos:end="1639:45">(<argument pos:start="1639:40" pos:end="1639:40"><expr pos:start="1639:40" pos:end="1639:40"><name pos:start="1639:40" pos:end="1639:40">s</name></expr></argument>, <argument pos:start="1639:43" pos:end="1639:44"><expr pos:start="1639:43" pos:end="1639:44"><name pos:start="1639:43" pos:end="1639:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1641:25" pos:end="1641:51"><expr pos:start="1641:25" pos:end="1641:50"><name pos:start="1641:25" pos:end="1641:29">shift</name> <operator pos:start="1641:31" pos:end="1641:31">=</operator> <operator pos:start="1641:33" pos:end="1641:33">(</operator><name pos:start="1641:34" pos:end="1641:37">insn</name> <operator pos:start="1641:39" pos:end="1641:40">&gt;&gt;</operator> <literal type="number" pos:start="1641:42" pos:end="1641:42">7</literal><operator pos:start="1641:43" pos:end="1641:43">)</operator> <operator pos:start="1641:45" pos:end="1641:45">&amp;</operator> <literal type="number" pos:start="1641:47" pos:end="1641:50">0x1f</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="1643:25" pos:end="1655:25"><if pos:start="1643:25" pos:end="1651:25">if <condition pos:start="1643:28" pos:end="1643:44">(<expr pos:start="1643:29" pos:end="1643:43"><name pos:start="1643:29" pos:end="1643:32">insn</name> <operator pos:start="1643:34" pos:end="1643:34">&amp;</operator> <operator pos:start="1643:36" pos:end="1643:36">(</operator><literal type="number" pos:start="1643:37" pos:end="1643:37">1</literal> <operator pos:start="1643:39" pos:end="1643:40">&lt;&lt;</operator> <literal type="number" pos:start="1643:42" pos:end="1643:42">6</literal><operator pos:start="1643:43" pos:end="1643:43">)</operator></expr>)</condition> <block pos:start="1643:46" pos:end="1651:25">{<block_content pos:start="1645:29" pos:end="1649:62">

                            <if_stmt pos:start="1645:29" pos:end="1647:43"><if pos:start="1645:29" pos:end="1647:43">if <condition pos:start="1645:32" pos:end="1645:43">(<expr pos:start="1645:33" pos:end="1645:42"><name pos:start="1645:33" pos:end="1645:37">shift</name> <operator pos:start="1645:39" pos:end="1645:40">==</operator> <literal type="number" pos:start="1645:42" pos:end="1645:42">0</literal></expr>)</condition><block type="pseudo" pos:start="1647:33" pos:end="1647:43"><block_content pos:start="1647:33" pos:end="1647:43">

                                <expr_stmt pos:start="1647:33" pos:end="1647:43"><expr pos:start="1647:33" pos:end="1647:42"><name pos:start="1647:33" pos:end="1647:37">shift</name> <operator pos:start="1647:39" pos:end="1647:39">=</operator> <literal type="number" pos:start="1647:41" pos:end="1647:42">31</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="1649:29" pos:end="1649:62"><expr pos:start="1649:29" pos:end="1649:61"><call pos:start="1649:29" pos:end="1649:61"><name pos:start="1649:29" pos:end="1649:44">tcg_gen_sari_i32</name><argument_list pos:start="1649:45" pos:end="1649:61">(<argument pos:start="1649:46" pos:end="1649:48"><expr pos:start="1649:46" pos:end="1649:48"><name pos:start="1649:46" pos:end="1649:48">tmp</name></expr></argument>, <argument pos:start="1649:51" pos:end="1649:53"><expr pos:start="1649:51" pos:end="1649:53"><name pos:start="1649:51" pos:end="1649:53">tmp</name></expr></argument>, <argument pos:start="1649:56" pos:end="1649:60"><expr pos:start="1649:56" pos:end="1649:60"><name pos:start="1649:56" pos:end="1649:60">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1651:27" pos:end="1655:25">else <block pos:start="1651:32" pos:end="1655:25">{<block_content pos:start="1653:29" pos:end="1653:62">

                            <expr_stmt pos:start="1653:29" pos:end="1653:62"><expr pos:start="1653:29" pos:end="1653:61"><call pos:start="1653:29" pos:end="1653:61"><name pos:start="1653:29" pos:end="1653:44">tcg_gen_shli_i32</name><argument_list pos:start="1653:45" pos:end="1653:61">(<argument pos:start="1653:46" pos:end="1653:48"><expr pos:start="1653:46" pos:end="1653:48"><name pos:start="1653:46" pos:end="1653:48">tmp</name></expr></argument>, <argument pos:start="1653:51" pos:end="1653:53"><expr pos:start="1653:51" pos:end="1653:53"><name pos:start="1653:51" pos:end="1653:53">tmp</name></expr></argument>, <argument pos:start="1653:56" pos:end="1653:60"><expr pos:start="1653:56" pos:end="1653:60"><name pos:start="1653:56" pos:end="1653:60">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1657:25" pos:end="1657:49"><expr pos:start="1657:25" pos:end="1657:48"><name pos:start="1657:25" pos:end="1657:26">sh</name> <operator pos:start="1657:28" pos:end="1657:28">=</operator> <operator pos:start="1657:30" pos:end="1657:30">(</operator><name pos:start="1657:31" pos:end="1657:34">insn</name> <operator pos:start="1657:36" pos:end="1657:37">&gt;&gt;</operator> <literal type="number" pos:start="1657:39" pos:end="1657:40">16</literal><operator pos:start="1657:41" pos:end="1657:41">)</operator> <operator pos:start="1657:43" pos:end="1657:43">&amp;</operator> <literal type="number" pos:start="1657:45" pos:end="1657:48">0x1f</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="1659:25" pos:end="1659:49"><expr pos:start="1659:25" pos:end="1659:48"><name pos:start="1659:25" pos:end="1659:28">tmp2</name> <operator pos:start="1659:30" pos:end="1659:30">=</operator> <call pos:start="1659:32" pos:end="1659:48"><name pos:start="1659:32" pos:end="1659:44">tcg_const_i32</name><argument_list pos:start="1659:45" pos:end="1659:48">(<argument pos:start="1659:46" pos:end="1659:47"><expr pos:start="1659:46" pos:end="1659:47"><name pos:start="1659:46" pos:end="1659:47">sh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1661:25" pos:end="1667:67"><if pos:start="1661:25" pos:end="1663:67">if <condition pos:start="1661:28" pos:end="1661:45">(<expr pos:start="1661:29" pos:end="1661:44"><name pos:start="1661:29" pos:end="1661:32">insn</name> <operator pos:start="1661:34" pos:end="1661:34">&amp;</operator> <operator pos:start="1661:36" pos:end="1661:36">(</operator><literal type="number" pos:start="1661:37" pos:end="1661:37">1</literal> <operator pos:start="1661:39" pos:end="1661:40">&lt;&lt;</operator> <literal type="number" pos:start="1661:42" pos:end="1661:43">22</literal><operator pos:start="1661:44" pos:end="1661:44">)</operator></expr>)</condition><block type="pseudo" pos:start="1663:27" pos:end="1663:67"><block_content pos:start="1663:27" pos:end="1663:67">

                          <expr_stmt pos:start="1663:27" pos:end="1663:67"><expr pos:start="1663:27" pos:end="1663:66"><call pos:start="1663:27" pos:end="1663:66"><name pos:start="1663:27" pos:end="1663:41">gen_helper_usat</name><argument_list pos:start="1663:42" pos:end="1663:66">(<argument pos:start="1663:43" pos:end="1663:45"><expr pos:start="1663:43" pos:end="1663:45"><name pos:start="1663:43" pos:end="1663:45">tmp</name></expr></argument>, <argument pos:start="1663:48" pos:end="1663:54"><expr pos:start="1663:48" pos:end="1663:54"><name pos:start="1663:48" pos:end="1663:54">cpu_env</name></expr></argument>, <argument pos:start="1663:57" pos:end="1663:59"><expr pos:start="1663:57" pos:end="1663:59"><name pos:start="1663:57" pos:end="1663:59">tmp</name></expr></argument>, <argument pos:start="1663:62" pos:end="1663:65"><expr pos:start="1663:62" pos:end="1663:65"><name pos:start="1663:62" pos:end="1663:65">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="1665:25" pos:end="1667:67">else<block type="pseudo" pos:start="1667:27" pos:end="1667:67"><block_content pos:start="1667:27" pos:end="1667:67">

                          <expr_stmt pos:start="1667:27" pos:end="1667:67"><expr pos:start="1667:27" pos:end="1667:66"><call pos:start="1667:27" pos:end="1667:66"><name pos:start="1667:27" pos:end="1667:41">gen_helper_ssat</name><argument_list pos:start="1667:42" pos:end="1667:66">(<argument pos:start="1667:43" pos:end="1667:45"><expr pos:start="1667:43" pos:end="1667:45"><name pos:start="1667:43" pos:end="1667:45">tmp</name></expr></argument>, <argument pos:start="1667:48" pos:end="1667:54"><expr pos:start="1667:48" pos:end="1667:54"><name pos:start="1667:48" pos:end="1667:54">cpu_env</name></expr></argument>, <argument pos:start="1667:57" pos:end="1667:59"><expr pos:start="1667:57" pos:end="1667:59"><name pos:start="1667:57" pos:end="1667:59">tmp</name></expr></argument>, <argument pos:start="1667:62" pos:end="1667:65"><expr pos:start="1667:62" pos:end="1667:65"><name pos:start="1667:62" pos:end="1667:65">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="1669:25" pos:end="1669:48"><expr pos:start="1669:25" pos:end="1669:47"><call pos:start="1669:25" pos:end="1669:47"><name pos:start="1669:25" pos:end="1669:41">tcg_temp_free_i32</name><argument_list pos:start="1669:42" pos:end="1669:47">(<argument pos:start="1669:43" pos:end="1669:46"><expr pos:start="1669:43" pos:end="1669:46"><name pos:start="1669:43" pos:end="1669:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1671:25" pos:end="1671:46"><expr pos:start="1671:25" pos:end="1671:45"><call pos:start="1671:25" pos:end="1671:45"><name pos:start="1671:25" pos:end="1671:33">store_reg</name><argument_list pos:start="1671:34" pos:end="1671:45">(<argument pos:start="1671:35" pos:end="1671:35"><expr pos:start="1671:35" pos:end="1671:35"><name pos:start="1671:35" pos:end="1671:35">s</name></expr></argument>, <argument pos:start="1671:38" pos:end="1671:39"><expr pos:start="1671:38" pos:end="1671:39"><name pos:start="1671:38" pos:end="1671:39">rd</name></expr></argument>, <argument pos:start="1671:42" pos:end="1671:44"><expr pos:start="1671:42" pos:end="1671:44"><name pos:start="1671:42" pos:end="1671:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="1673:23" pos:end="1695:21">else if <condition pos:start="1673:31" pos:end="1673:65">(<expr pos:start="1673:32" pos:end="1673:64"><operator pos:start="1673:32" pos:end="1673:32">(</operator><name pos:start="1673:33" pos:end="1673:36">insn</name> <operator pos:start="1673:38" pos:end="1673:38">&amp;</operator> <literal type="number" pos:start="1673:40" pos:end="1673:49">0x00300fe0</literal><operator pos:start="1673:50" pos:end="1673:50">)</operator> <operator pos:start="1673:52" pos:end="1673:53">==</operator> <literal type="number" pos:start="1673:55" pos:end="1673:64">0x00200f20</literal></expr>)</condition> <block pos:start="1673:67" pos:end="1695:21">{<block_content pos:start="1677:25" pos:end="1693:46">

                        <comment type="block" pos:start="1675:25" pos:end="1675:39">/* [us]sat16 */</comment>

                        <expr_stmt pos:start="1677:25" pos:end="1677:46"><expr pos:start="1677:25" pos:end="1677:45"><name pos:start="1677:25" pos:end="1677:27">tmp</name> <operator pos:start="1677:29" pos:end="1677:29">=</operator> <call pos:start="1677:31" pos:end="1677:45"><name pos:start="1677:31" pos:end="1677:38">load_reg</name><argument_list pos:start="1677:39" pos:end="1677:45">(<argument pos:start="1677:40" pos:end="1677:40"><expr pos:start="1677:40" pos:end="1677:40"><name pos:start="1677:40" pos:end="1677:40">s</name></expr></argument>, <argument pos:start="1677:43" pos:end="1677:44"><expr pos:start="1677:43" pos:end="1677:44"><name pos:start="1677:43" pos:end="1677:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1679:25" pos:end="1679:49"><expr pos:start="1679:25" pos:end="1679:48"><name pos:start="1679:25" pos:end="1679:26">sh</name> <operator pos:start="1679:28" pos:end="1679:28">=</operator> <operator pos:start="1679:30" pos:end="1679:30">(</operator><name pos:start="1679:31" pos:end="1679:34">insn</name> <operator pos:start="1679:36" pos:end="1679:37">&gt;&gt;</operator> <literal type="number" pos:start="1679:39" pos:end="1679:40">16</literal><operator pos:start="1679:41" pos:end="1679:41">)</operator> <operator pos:start="1679:43" pos:end="1679:43">&amp;</operator> <literal type="number" pos:start="1679:45" pos:end="1679:48">0x1f</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="1681:25" pos:end="1681:49"><expr pos:start="1681:25" pos:end="1681:48"><name pos:start="1681:25" pos:end="1681:28">tmp2</name> <operator pos:start="1681:30" pos:end="1681:30">=</operator> <call pos:start="1681:32" pos:end="1681:48"><name pos:start="1681:32" pos:end="1681:44">tcg_const_i32</name><argument_list pos:start="1681:45" pos:end="1681:48">(<argument pos:start="1681:46" pos:end="1681:47"><expr pos:start="1681:46" pos:end="1681:47"><name pos:start="1681:46" pos:end="1681:47">sh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1683:25" pos:end="1689:69"><if pos:start="1683:25" pos:end="1685:69">if <condition pos:start="1683:28" pos:end="1683:45">(<expr pos:start="1683:29" pos:end="1683:44"><name pos:start="1683:29" pos:end="1683:32">insn</name> <operator pos:start="1683:34" pos:end="1683:34">&amp;</operator> <operator pos:start="1683:36" pos:end="1683:36">(</operator><literal type="number" pos:start="1683:37" pos:end="1683:37">1</literal> <operator pos:start="1683:39" pos:end="1683:40">&lt;&lt;</operator> <literal type="number" pos:start="1683:42" pos:end="1683:43">22</literal><operator pos:start="1683:44" pos:end="1683:44">)</operator></expr>)</condition><block type="pseudo" pos:start="1685:27" pos:end="1685:69"><block_content pos:start="1685:27" pos:end="1685:69">

                          <expr_stmt pos:start="1685:27" pos:end="1685:69"><expr pos:start="1685:27" pos:end="1685:68"><call pos:start="1685:27" pos:end="1685:68"><name pos:start="1685:27" pos:end="1685:43">gen_helper_usat16</name><argument_list pos:start="1685:44" pos:end="1685:68">(<argument pos:start="1685:45" pos:end="1685:47"><expr pos:start="1685:45" pos:end="1685:47"><name pos:start="1685:45" pos:end="1685:47">tmp</name></expr></argument>, <argument pos:start="1685:50" pos:end="1685:56"><expr pos:start="1685:50" pos:end="1685:56"><name pos:start="1685:50" pos:end="1685:56">cpu_env</name></expr></argument>, <argument pos:start="1685:59" pos:end="1685:61"><expr pos:start="1685:59" pos:end="1685:61"><name pos:start="1685:59" pos:end="1685:61">tmp</name></expr></argument>, <argument pos:start="1685:64" pos:end="1685:67"><expr pos:start="1685:64" pos:end="1685:67"><name pos:start="1685:64" pos:end="1685:67">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="1687:25" pos:end="1689:69">else<block type="pseudo" pos:start="1689:27" pos:end="1689:69"><block_content pos:start="1689:27" pos:end="1689:69">

                          <expr_stmt pos:start="1689:27" pos:end="1689:69"><expr pos:start="1689:27" pos:end="1689:68"><call pos:start="1689:27" pos:end="1689:68"><name pos:start="1689:27" pos:end="1689:43">gen_helper_ssat16</name><argument_list pos:start="1689:44" pos:end="1689:68">(<argument pos:start="1689:45" pos:end="1689:47"><expr pos:start="1689:45" pos:end="1689:47"><name pos:start="1689:45" pos:end="1689:47">tmp</name></expr></argument>, <argument pos:start="1689:50" pos:end="1689:56"><expr pos:start="1689:50" pos:end="1689:56"><name pos:start="1689:50" pos:end="1689:56">cpu_env</name></expr></argument>, <argument pos:start="1689:59" pos:end="1689:61"><expr pos:start="1689:59" pos:end="1689:61"><name pos:start="1689:59" pos:end="1689:61">tmp</name></expr></argument>, <argument pos:start="1689:64" pos:end="1689:67"><expr pos:start="1689:64" pos:end="1689:67"><name pos:start="1689:64" pos:end="1689:67">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="1691:25" pos:end="1691:48"><expr pos:start="1691:25" pos:end="1691:47"><call pos:start="1691:25" pos:end="1691:47"><name pos:start="1691:25" pos:end="1691:41">tcg_temp_free_i32</name><argument_list pos:start="1691:42" pos:end="1691:47">(<argument pos:start="1691:43" pos:end="1691:46"><expr pos:start="1691:43" pos:end="1691:46"><name pos:start="1691:43" pos:end="1691:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1693:25" pos:end="1693:46"><expr pos:start="1693:25" pos:end="1693:45"><call pos:start="1693:25" pos:end="1693:45"><name pos:start="1693:25" pos:end="1693:33">store_reg</name><argument_list pos:start="1693:34" pos:end="1693:45">(<argument pos:start="1693:35" pos:end="1693:35"><expr pos:start="1693:35" pos:end="1693:35"><name pos:start="1693:35" pos:end="1693:35">s</name></expr></argument>, <argument pos:start="1693:38" pos:end="1693:39"><expr pos:start="1693:38" pos:end="1693:39"><name pos:start="1693:38" pos:end="1693:39">rd</name></expr></argument>, <argument pos:start="1693:42" pos:end="1693:44"><expr pos:start="1693:42" pos:end="1693:44"><name pos:start="1693:42" pos:end="1693:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="1695:23" pos:end="1715:21">else if <condition pos:start="1695:31" pos:end="1695:65">(<expr pos:start="1695:32" pos:end="1695:64"><operator pos:start="1695:32" pos:end="1695:32">(</operator><name pos:start="1695:33" pos:end="1695:36">insn</name> <operator pos:start="1695:38" pos:end="1695:38">&amp;</operator> <literal type="number" pos:start="1695:40" pos:end="1695:49">0x00700fe0</literal><operator pos:start="1695:50" pos:end="1695:50">)</operator> <operator pos:start="1695:52" pos:end="1695:53">==</operator> <literal type="number" pos:start="1695:55" pos:end="1695:64">0x00000fa0</literal></expr>)</condition> <block pos:start="1695:67" pos:end="1715:21">{<block_content pos:start="1699:25" pos:end="1713:46">

                        <comment type="block" pos:start="1697:25" pos:end="1697:44">/* Select bytes.  */</comment>

                        <expr_stmt pos:start="1699:25" pos:end="1699:46"><expr pos:start="1699:25" pos:end="1699:45"><name pos:start="1699:25" pos:end="1699:27">tmp</name> <operator pos:start="1699:29" pos:end="1699:29">=</operator> <call pos:start="1699:31" pos:end="1699:45"><name pos:start="1699:31" pos:end="1699:38">load_reg</name><argument_list pos:start="1699:39" pos:end="1699:45">(<argument pos:start="1699:40" pos:end="1699:40"><expr pos:start="1699:40" pos:end="1699:40"><name pos:start="1699:40" pos:end="1699:40">s</name></expr></argument>, <argument pos:start="1699:43" pos:end="1699:44"><expr pos:start="1699:43" pos:end="1699:44"><name pos:start="1699:43" pos:end="1699:44">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1701:25" pos:end="1701:47"><expr pos:start="1701:25" pos:end="1701:46"><name pos:start="1701:25" pos:end="1701:28">tmp2</name> <operator pos:start="1701:30" pos:end="1701:30">=</operator> <call pos:start="1701:32" pos:end="1701:46"><name pos:start="1701:32" pos:end="1701:39">load_reg</name><argument_list pos:start="1701:40" pos:end="1701:46">(<argument pos:start="1701:41" pos:end="1701:41"><expr pos:start="1701:41" pos:end="1701:41"><name pos:start="1701:41" pos:end="1701:41">s</name></expr></argument>, <argument pos:start="1701:44" pos:end="1701:45"><expr pos:start="1701:44" pos:end="1701:45"><name pos:start="1701:44" pos:end="1701:45">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1703:25" pos:end="1703:50"><expr pos:start="1703:25" pos:end="1703:49"><name pos:start="1703:25" pos:end="1703:28">tmp3</name> <operator pos:start="1703:30" pos:end="1703:30">=</operator> <call pos:start="1703:32" pos:end="1703:49"><name pos:start="1703:32" pos:end="1703:47">tcg_temp_new_i32</name><argument_list pos:start="1703:48" pos:end="1703:49">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1705:25" pos:end="1705:81"><expr pos:start="1705:25" pos:end="1705:80"><call pos:start="1705:25" pos:end="1705:80"><name pos:start="1705:25" pos:end="1705:38">tcg_gen_ld_i32</name><argument_list pos:start="1705:39" pos:end="1705:80">(<argument pos:start="1705:40" pos:end="1705:43"><expr pos:start="1705:40" pos:end="1705:43"><name pos:start="1705:40" pos:end="1705:43">tmp3</name></expr></argument>, <argument pos:start="1705:46" pos:end="1705:52"><expr pos:start="1705:46" pos:end="1705:52"><name pos:start="1705:46" pos:end="1705:52">cpu_env</name></expr></argument>, <argument pos:start="1705:55" pos:end="1705:79"><expr pos:start="1705:55" pos:end="1705:79"><call pos:start="1705:55" pos:end="1705:79"><name pos:start="1705:55" pos:end="1705:62">offsetof</name><argument_list pos:start="1705:63" pos:end="1705:79">(<argument pos:start="1705:64" pos:end="1705:74"><expr pos:start="1705:64" pos:end="1705:74"><name pos:start="1705:64" pos:end="1705:74">CPUARMState</name></expr></argument>, <argument pos:start="1705:77" pos:end="1705:78"><expr pos:start="1705:77" pos:end="1705:78"><name pos:start="1705:77" pos:end="1705:78">GE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1707:25" pos:end="1707:67"><expr pos:start="1707:25" pos:end="1707:66"><call pos:start="1707:25" pos:end="1707:66"><name pos:start="1707:25" pos:end="1707:44">gen_helper_sel_flags</name><argument_list pos:start="1707:45" pos:end="1707:66">(<argument pos:start="1707:46" pos:end="1707:48"><expr pos:start="1707:46" pos:end="1707:48"><name pos:start="1707:46" pos:end="1707:48">tmp</name></expr></argument>, <argument pos:start="1707:51" pos:end="1707:54"><expr pos:start="1707:51" pos:end="1707:54"><name pos:start="1707:51" pos:end="1707:54">tmp3</name></expr></argument>, <argument pos:start="1707:57" pos:end="1707:59"><expr pos:start="1707:57" pos:end="1707:59"><name pos:start="1707:57" pos:end="1707:59">tmp</name></expr></argument>, <argument pos:start="1707:62" pos:end="1707:65"><expr pos:start="1707:62" pos:end="1707:65"><name pos:start="1707:62" pos:end="1707:65">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1709:25" pos:end="1709:48"><expr pos:start="1709:25" pos:end="1709:47"><call pos:start="1709:25" pos:end="1709:47"><name pos:start="1709:25" pos:end="1709:41">tcg_temp_free_i32</name><argument_list pos:start="1709:42" pos:end="1709:47">(<argument pos:start="1709:43" pos:end="1709:46"><expr pos:start="1709:43" pos:end="1709:46"><name pos:start="1709:43" pos:end="1709:46">tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1711:25" pos:end="1711:48"><expr pos:start="1711:25" pos:end="1711:47"><call pos:start="1711:25" pos:end="1711:47"><name pos:start="1711:25" pos:end="1711:41">tcg_temp_free_i32</name><argument_list pos:start="1711:42" pos:end="1711:47">(<argument pos:start="1711:43" pos:end="1711:46"><expr pos:start="1711:43" pos:end="1711:46"><name pos:start="1711:43" pos:end="1711:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1713:25" pos:end="1713:46"><expr pos:start="1713:25" pos:end="1713:45"><call pos:start="1713:25" pos:end="1713:45"><name pos:start="1713:25" pos:end="1713:33">store_reg</name><argument_list pos:start="1713:34" pos:end="1713:45">(<argument pos:start="1713:35" pos:end="1713:35"><expr pos:start="1713:35" pos:end="1713:35"><name pos:start="1713:35" pos:end="1713:35">s</name></expr></argument>, <argument pos:start="1713:38" pos:end="1713:39"><expr pos:start="1713:38" pos:end="1713:39"><name pos:start="1713:38" pos:end="1713:39">rd</name></expr></argument>, <argument pos:start="1713:42" pos:end="1713:44"><expr pos:start="1713:42" pos:end="1713:44"><name pos:start="1713:42" pos:end="1713:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="1715:23" pos:end="1769:21">else if <condition pos:start="1715:31" pos:end="1715:65">(<expr pos:start="1715:32" pos:end="1715:64"><operator pos:start="1715:32" pos:end="1715:32">(</operator><name pos:start="1715:33" pos:end="1715:36">insn</name> <operator pos:start="1715:38" pos:end="1715:38">&amp;</operator> <literal type="number" pos:start="1715:40" pos:end="1715:49">0x000003e0</literal><operator pos:start="1715:50" pos:end="1715:50">)</operator> <operator pos:start="1715:52" pos:end="1715:53">==</operator> <literal type="number" pos:start="1715:55" pos:end="1715:64">0x00000060</literal></expr>)</condition> <block pos:start="1715:67" pos:end="1769:21">{<block_content pos:start="1717:25" pos:end="1767:46">

                        <expr_stmt pos:start="1717:25" pos:end="1717:46"><expr pos:start="1717:25" pos:end="1717:45"><name pos:start="1717:25" pos:end="1717:27">tmp</name> <operator pos:start="1717:29" pos:end="1717:29">=</operator> <call pos:start="1717:31" pos:end="1717:45"><name pos:start="1717:31" pos:end="1717:38">load_reg</name><argument_list pos:start="1717:39" pos:end="1717:45">(<argument pos:start="1717:40" pos:end="1717:40"><expr pos:start="1717:40" pos:end="1717:40"><name pos:start="1717:40" pos:end="1717:40">s</name></expr></argument>, <argument pos:start="1717:43" pos:end="1717:44"><expr pos:start="1717:43" pos:end="1717:44"><name pos:start="1717:43" pos:end="1717:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1719:25" pos:end="1719:49"><expr pos:start="1719:25" pos:end="1719:48"><name pos:start="1719:25" pos:end="1719:29">shift</name> <operator pos:start="1719:31" pos:end="1719:31">=</operator> <operator pos:start="1719:33" pos:end="1719:33">(</operator><name pos:start="1719:34" pos:end="1719:37">insn</name> <operator pos:start="1719:39" pos:end="1719:40">&gt;&gt;</operator> <literal type="number" pos:start="1719:42" pos:end="1719:43">10</literal><operator pos:start="1719:44" pos:end="1719:44">)</operator> <operator pos:start="1719:46" pos:end="1719:46">&amp;</operator> <literal type="number" pos:start="1719:48" pos:end="1719:48">3</literal></expr>;</expr_stmt>

                        <comment type="block" pos:start="1721:25" pos:end="1723:61">/* ??? In many cases it's not necessary to do a

                           rotate, a shift is sufficient.  */</comment>

                        <if_stmt pos:start="1725:25" pos:end="1727:67"><if pos:start="1725:25" pos:end="1727:67">if <condition pos:start="1725:28" pos:end="1725:39">(<expr pos:start="1725:29" pos:end="1725:38"><name pos:start="1725:29" pos:end="1725:33">shift</name> <operator pos:start="1725:35" pos:end="1725:36">!=</operator> <literal type="number" pos:start="1725:38" pos:end="1725:38">0</literal></expr>)</condition><block type="pseudo" pos:start="1727:29" pos:end="1727:67"><block_content pos:start="1727:29" pos:end="1727:67">

                            <expr_stmt pos:start="1727:29" pos:end="1727:67"><expr pos:start="1727:29" pos:end="1727:66"><call pos:start="1727:29" pos:end="1727:66"><name pos:start="1727:29" pos:end="1727:45">tcg_gen_rotri_i32</name><argument_list pos:start="1727:46" pos:end="1727:66">(<argument pos:start="1727:47" pos:end="1727:49"><expr pos:start="1727:47" pos:end="1727:49"><name pos:start="1727:47" pos:end="1727:49">tmp</name></expr></argument>, <argument pos:start="1727:52" pos:end="1727:54"><expr pos:start="1727:52" pos:end="1727:54"><name pos:start="1727:52" pos:end="1727:54">tmp</name></expr></argument>, <argument pos:start="1727:57" pos:end="1727:65"><expr pos:start="1727:57" pos:end="1727:65"><name pos:start="1727:57" pos:end="1727:61">shift</name> <operator pos:start="1727:63" pos:end="1727:63">*</operator> <literal type="number" pos:start="1727:65" pos:end="1727:65">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="1729:25" pos:end="1729:47"><expr pos:start="1729:25" pos:end="1729:46"><name pos:start="1729:25" pos:end="1729:27">op1</name> <operator pos:start="1729:29" pos:end="1729:29">=</operator> <operator pos:start="1729:31" pos:end="1729:31">(</operator><name pos:start="1729:32" pos:end="1729:35">insn</name> <operator pos:start="1729:37" pos:end="1729:38">&gt;&gt;</operator> <literal type="number" pos:start="1729:40" pos:end="1729:41">20</literal><operator pos:start="1729:42" pos:end="1729:42">)</operator> <operator pos:start="1729:44" pos:end="1729:44">&amp;</operator> <literal type="number" pos:start="1729:46" pos:end="1729:46">7</literal></expr>;</expr_stmt>

                        <switch pos:start="1731:25" pos:end="1747:25">switch <condition pos:start="1731:32" pos:end="1731:36">(<expr pos:start="1731:33" pos:end="1731:35"><name pos:start="1731:33" pos:end="1731:35">op1</name></expr>)</condition> <block pos:start="1731:38" pos:end="1747:25">{<block_content pos:start="1733:25" pos:end="1745:49">

                        <case pos:start="1733:25" pos:end="1733:31">case <expr pos:start="1733:30" pos:end="1733:30"><literal type="number" pos:start="1733:30" pos:end="1733:30">0</literal></expr>:</case> <expr_stmt pos:start="1733:33" pos:end="1733:48"><expr pos:start="1733:33" pos:end="1733:47"><call pos:start="1733:33" pos:end="1733:47"><name pos:start="1733:33" pos:end="1733:42">gen_sxtb16</name><argument_list pos:start="1733:43" pos:end="1733:47">(<argument pos:start="1733:44" pos:end="1733:46"><expr pos:start="1733:44" pos:end="1733:46"><name pos:start="1733:44" pos:end="1733:46">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <break pos:start="1733:51" pos:end="1733:56">break;</break>

                        <case pos:start="1735:25" pos:end="1735:31">case <expr pos:start="1735:30" pos:end="1735:30"><literal type="number" pos:start="1735:30" pos:end="1735:30">2</literal></expr>:</case> <expr_stmt pos:start="1735:33" pos:end="1735:46"><expr pos:start="1735:33" pos:end="1735:45"><call pos:start="1735:33" pos:end="1735:45"><name pos:start="1735:33" pos:end="1735:40">gen_sxtb</name><argument_list pos:start="1735:41" pos:end="1735:45">(<argument pos:start="1735:42" pos:end="1735:44"><expr pos:start="1735:42" pos:end="1735:44"><name pos:start="1735:42" pos:end="1735:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <break pos:start="1735:51" pos:end="1735:56">break;</break>

                        <case pos:start="1737:25" pos:end="1737:31">case <expr pos:start="1737:30" pos:end="1737:30"><literal type="number" pos:start="1737:30" pos:end="1737:30">3</literal></expr>:</case> <expr_stmt pos:start="1737:33" pos:end="1737:46"><expr pos:start="1737:33" pos:end="1737:45"><call pos:start="1737:33" pos:end="1737:45"><name pos:start="1737:33" pos:end="1737:40">gen_sxth</name><argument_list pos:start="1737:41" pos:end="1737:45">(<argument pos:start="1737:42" pos:end="1737:44"><expr pos:start="1737:42" pos:end="1737:44"><name pos:start="1737:42" pos:end="1737:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <break pos:start="1737:51" pos:end="1737:56">break;</break>

                        <case pos:start="1739:25" pos:end="1739:31">case <expr pos:start="1739:30" pos:end="1739:30"><literal type="number" pos:start="1739:30" pos:end="1739:30">4</literal></expr>:</case> <expr_stmt pos:start="1739:33" pos:end="1739:48"><expr pos:start="1739:33" pos:end="1739:47"><call pos:start="1739:33" pos:end="1739:47"><name pos:start="1739:33" pos:end="1739:42">gen_uxtb16</name><argument_list pos:start="1739:43" pos:end="1739:47">(<argument pos:start="1739:44" pos:end="1739:46"><expr pos:start="1739:44" pos:end="1739:46"><name pos:start="1739:44" pos:end="1739:46">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <break pos:start="1739:51" pos:end="1739:56">break;</break>

                        <case pos:start="1741:25" pos:end="1741:31">case <expr pos:start="1741:30" pos:end="1741:30"><literal type="number" pos:start="1741:30" pos:end="1741:30">6</literal></expr>:</case> <expr_stmt pos:start="1741:33" pos:end="1741:46"><expr pos:start="1741:33" pos:end="1741:45"><call pos:start="1741:33" pos:end="1741:45"><name pos:start="1741:33" pos:end="1741:40">gen_uxtb</name><argument_list pos:start="1741:41" pos:end="1741:45">(<argument pos:start="1741:42" pos:end="1741:44"><expr pos:start="1741:42" pos:end="1741:44"><name pos:start="1741:42" pos:end="1741:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <break pos:start="1741:51" pos:end="1741:56">break;</break>

                        <case pos:start="1743:25" pos:end="1743:31">case <expr pos:start="1743:30" pos:end="1743:30"><literal type="number" pos:start="1743:30" pos:end="1743:30">7</literal></expr>:</case> <expr_stmt pos:start="1743:33" pos:end="1743:46"><expr pos:start="1743:33" pos:end="1743:45"><call pos:start="1743:33" pos:end="1743:45"><name pos:start="1743:33" pos:end="1743:40">gen_uxth</name><argument_list pos:start="1743:41" pos:end="1743:45">(<argument pos:start="1743:42" pos:end="1743:44"><expr pos:start="1743:42" pos:end="1743:44"><name pos:start="1743:42" pos:end="1743:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <break pos:start="1743:51" pos:end="1743:56">break;</break>

                        <default pos:start="1745:25" pos:end="1745:32">default:</default> <goto pos:start="1745:34" pos:end="1745:49">goto <name pos:start="1745:39" pos:end="1745:48">illegal_op</name>;</goto>

                        </block_content>}</block></switch>

                        <if_stmt pos:start="1749:25" pos:end="1765:25"><if pos:start="1749:25" pos:end="1765:25">if <condition pos:start="1749:28" pos:end="1749:37">(<expr pos:start="1749:29" pos:end="1749:36"><name pos:start="1749:29" pos:end="1749:30">rn</name> <operator pos:start="1749:32" pos:end="1749:33">!=</operator> <literal type="number" pos:start="1749:35" pos:end="1749:36">15</literal></expr>)</condition> <block pos:start="1749:39" pos:end="1765:25">{<block_content pos:start="1751:29" pos:end="1763:29">

                            <expr_stmt pos:start="1751:29" pos:end="1751:51"><expr pos:start="1751:29" pos:end="1751:50"><name pos:start="1751:29" pos:end="1751:32">tmp2</name> <operator pos:start="1751:34" pos:end="1751:34">=</operator> <call pos:start="1751:36" pos:end="1751:50"><name pos:start="1751:36" pos:end="1751:43">load_reg</name><argument_list pos:start="1751:44" pos:end="1751:50">(<argument pos:start="1751:45" pos:end="1751:45"><expr pos:start="1751:45" pos:end="1751:45"><name pos:start="1751:45" pos:end="1751:45">s</name></expr></argument>, <argument pos:start="1751:48" pos:end="1751:49"><expr pos:start="1751:48" pos:end="1751:49"><name pos:start="1751:48" pos:end="1751:49">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="1753:29" pos:end="1763:29"><if pos:start="1753:29" pos:end="1757:29">if <condition pos:start="1753:32" pos:end="1753:47">(<expr pos:start="1753:33" pos:end="1753:46"><operator pos:start="1753:33" pos:end="1753:33">(</operator><name pos:start="1753:34" pos:end="1753:36">op1</name> <operator pos:start="1753:38" pos:end="1753:38">&amp;</operator> <literal type="number" pos:start="1753:40" pos:end="1753:40">3</literal><operator pos:start="1753:41" pos:end="1753:41">)</operator> <operator pos:start="1753:43" pos:end="1753:44">==</operator> <literal type="number" pos:start="1753:46" pos:end="1753:46">0</literal></expr>)</condition> <block pos:start="1753:49" pos:end="1757:29">{<block_content pos:start="1755:33" pos:end="1755:53">

                                <expr_stmt pos:start="1755:33" pos:end="1755:53"><expr pos:start="1755:33" pos:end="1755:52"><call pos:start="1755:33" pos:end="1755:52"><name pos:start="1755:33" pos:end="1755:41">gen_add16</name><argument_list pos:start="1755:42" pos:end="1755:52">(<argument pos:start="1755:43" pos:end="1755:45"><expr pos:start="1755:43" pos:end="1755:45"><name pos:start="1755:43" pos:end="1755:45">tmp</name></expr></argument>, <argument pos:start="1755:48" pos:end="1755:51"><expr pos:start="1755:48" pos:end="1755:51"><name pos:start="1755:48" pos:end="1755:51">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="1757:31" pos:end="1763:29">else <block pos:start="1757:36" pos:end="1763:29">{<block_content pos:start="1759:33" pos:end="1761:56">

                                <expr_stmt pos:start="1759:33" pos:end="1759:64"><expr pos:start="1759:33" pos:end="1759:63"><call pos:start="1759:33" pos:end="1759:63"><name pos:start="1759:33" pos:end="1759:47">tcg_gen_add_i32</name><argument_list pos:start="1759:48" pos:end="1759:63">(<argument pos:start="1759:49" pos:end="1759:51"><expr pos:start="1759:49" pos:end="1759:51"><name pos:start="1759:49" pos:end="1759:51">tmp</name></expr></argument>, <argument pos:start="1759:54" pos:end="1759:56"><expr pos:start="1759:54" pos:end="1759:56"><name pos:start="1759:54" pos:end="1759:56">tmp</name></expr></argument>, <argument pos:start="1759:59" pos:end="1759:62"><expr pos:start="1759:59" pos:end="1759:62"><name pos:start="1759:59" pos:end="1759:62">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="1761:33" pos:end="1761:56"><expr pos:start="1761:33" pos:end="1761:55"><call pos:start="1761:33" pos:end="1761:55"><name pos:start="1761:33" pos:end="1761:49">tcg_temp_free_i32</name><argument_list pos:start="1761:50" pos:end="1761:55">(<argument pos:start="1761:51" pos:end="1761:54"><expr pos:start="1761:51" pos:end="1761:54"><name pos:start="1761:51" pos:end="1761:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="1767:25" pos:end="1767:46"><expr pos:start="1767:25" pos:end="1767:45"><call pos:start="1767:25" pos:end="1767:45"><name pos:start="1767:25" pos:end="1767:33">store_reg</name><argument_list pos:start="1767:34" pos:end="1767:45">(<argument pos:start="1767:35" pos:end="1767:35"><expr pos:start="1767:35" pos:end="1767:35"><name pos:start="1767:35" pos:end="1767:35">s</name></expr></argument>, <argument pos:start="1767:38" pos:end="1767:39"><expr pos:start="1767:38" pos:end="1767:39"><name pos:start="1767:38" pos:end="1767:39">rd</name></expr></argument>, <argument pos:start="1767:42" pos:end="1767:44"><expr pos:start="1767:42" pos:end="1767:44"><name pos:start="1767:42" pos:end="1767:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="1769:23" pos:end="1803:21">else if <condition pos:start="1769:31" pos:end="1769:65">(<expr pos:start="1769:32" pos:end="1769:64"><operator pos:start="1769:32" pos:end="1769:32">(</operator><name pos:start="1769:33" pos:end="1769:36">insn</name> <operator pos:start="1769:38" pos:end="1769:38">&amp;</operator> <literal type="number" pos:start="1769:40" pos:end="1769:49">0x003f0f60</literal><operator pos:start="1769:50" pos:end="1769:50">)</operator> <operator pos:start="1769:52" pos:end="1769:53">==</operator> <literal type="number" pos:start="1769:55" pos:end="1769:64">0x003f0f20</literal></expr>)</condition> <block pos:start="1769:67" pos:end="1803:21">{<block_content pos:start="1773:25" pos:end="1801:46">

                        <comment type="block" pos:start="1771:25" pos:end="1771:33">/* rev */</comment>

                        <expr_stmt pos:start="1773:25" pos:end="1773:46"><expr pos:start="1773:25" pos:end="1773:45"><name pos:start="1773:25" pos:end="1773:27">tmp</name> <operator pos:start="1773:29" pos:end="1773:29">=</operator> <call pos:start="1773:31" pos:end="1773:45"><name pos:start="1773:31" pos:end="1773:38">load_reg</name><argument_list pos:start="1773:39" pos:end="1773:45">(<argument pos:start="1773:40" pos:end="1773:40"><expr pos:start="1773:40" pos:end="1773:40"><name pos:start="1773:40" pos:end="1773:40">s</name></expr></argument>, <argument pos:start="1773:43" pos:end="1773:44"><expr pos:start="1773:43" pos:end="1773:44"><name pos:start="1773:43" pos:end="1773:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1775:25" pos:end="1799:25"><if pos:start="1775:25" pos:end="1789:25">if <condition pos:start="1775:28" pos:end="1775:45">(<expr pos:start="1775:29" pos:end="1775:44"><name pos:start="1775:29" pos:end="1775:32">insn</name> <operator pos:start="1775:34" pos:end="1775:34">&amp;</operator> <operator pos:start="1775:36" pos:end="1775:36">(</operator><literal type="number" pos:start="1775:37" pos:end="1775:37">1</literal> <operator pos:start="1775:39" pos:end="1775:40">&lt;&lt;</operator> <literal type="number" pos:start="1775:42" pos:end="1775:43">22</literal><operator pos:start="1775:44" pos:end="1775:44">)</operator></expr>)</condition> <block pos:start="1775:47" pos:end="1789:25">{<block_content pos:start="1777:29" pos:end="1787:29">

                            <if_stmt pos:start="1777:29" pos:end="1787:29"><if pos:start="1777:29" pos:end="1781:29">if <condition pos:start="1777:32" pos:end="1777:48">(<expr pos:start="1777:33" pos:end="1777:47"><name pos:start="1777:33" pos:end="1777:36">insn</name> <operator pos:start="1777:38" pos:end="1777:38">&amp;</operator> <operator pos:start="1777:40" pos:end="1777:40">(</operator><literal type="number" pos:start="1777:41" pos:end="1777:41">1</literal> <operator pos:start="1777:43" pos:end="1777:44">&lt;&lt;</operator> <literal type="number" pos:start="1777:46" pos:end="1777:46">7</literal><operator pos:start="1777:47" pos:end="1777:47">)</operator></expr>)</condition> <block pos:start="1777:50" pos:end="1781:29">{<block_content pos:start="1779:33" pos:end="1779:47">

                                <expr_stmt pos:start="1779:33" pos:end="1779:47"><expr pos:start="1779:33" pos:end="1779:46"><call pos:start="1779:33" pos:end="1779:46"><name pos:start="1779:33" pos:end="1779:41">gen_revsh</name><argument_list pos:start="1779:42" pos:end="1779:46">(<argument pos:start="1779:43" pos:end="1779:45"><expr pos:start="1779:43" pos:end="1779:45"><name pos:start="1779:43" pos:end="1779:45">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="1781:31" pos:end="1787:29">else <block pos:start="1781:36" pos:end="1787:29">{<block_content pos:start="1783:33" pos:end="1785:58">

                                <expr_stmt pos:start="1783:33" pos:end="1783:42"><expr pos:start="1783:33" pos:end="1783:41"><call pos:start="1783:33" pos:end="1783:41"><name pos:start="1783:33" pos:end="1783:36">ARCH</name><argument_list pos:start="1783:37" pos:end="1783:41">(<argument pos:start="1783:38" pos:end="1783:40"><expr pos:start="1783:38" pos:end="1783:40"><literal type="number" pos:start="1783:38" pos:end="1783:40">6T2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="1785:33" pos:end="1785:58"><expr pos:start="1785:33" pos:end="1785:57"><call pos:start="1785:33" pos:end="1785:57"><name pos:start="1785:33" pos:end="1785:47">gen_helper_rbit</name><argument_list pos:start="1785:48" pos:end="1785:57">(<argument pos:start="1785:49" pos:end="1785:51"><expr pos:start="1785:49" pos:end="1785:51"><name pos:start="1785:49" pos:end="1785:51">tmp</name></expr></argument>, <argument pos:start="1785:54" pos:end="1785:56"><expr pos:start="1785:54" pos:end="1785:56"><name pos:start="1785:54" pos:end="1785:56">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if> <else pos:start="1789:27" pos:end="1799:25">else <block pos:start="1789:32" pos:end="1799:25">{<block_content pos:start="1791:29" pos:end="1797:62">

                            <if_stmt pos:start="1791:29" pos:end="1797:62"><if pos:start="1791:29" pos:end="1793:47">if <condition pos:start="1791:32" pos:end="1791:48">(<expr pos:start="1791:33" pos:end="1791:47"><name pos:start="1791:33" pos:end="1791:36">insn</name> <operator pos:start="1791:38" pos:end="1791:38">&amp;</operator> <operator pos:start="1791:40" pos:end="1791:40">(</operator><literal type="number" pos:start="1791:41" pos:end="1791:41">1</literal> <operator pos:start="1791:43" pos:end="1791:44">&lt;&lt;</operator> <literal type="number" pos:start="1791:46" pos:end="1791:46">7</literal><operator pos:start="1791:47" pos:end="1791:47">)</operator></expr>)</condition><block type="pseudo" pos:start="1793:33" pos:end="1793:47"><block_content pos:start="1793:33" pos:end="1793:47">

                                <expr_stmt pos:start="1793:33" pos:end="1793:47"><expr pos:start="1793:33" pos:end="1793:46"><call pos:start="1793:33" pos:end="1793:46"><name pos:start="1793:33" pos:end="1793:41">gen_rev16</name><argument_list pos:start="1793:42" pos:end="1793:46">(<argument pos:start="1793:43" pos:end="1793:45"><expr pos:start="1793:43" pos:end="1793:45"><name pos:start="1793:43" pos:end="1793:45">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                            <else pos:start="1795:29" pos:end="1797:62">else<block type="pseudo" pos:start="1797:33" pos:end="1797:62"><block_content pos:start="1797:33" pos:end="1797:62">

                                <expr_stmt pos:start="1797:33" pos:end="1797:62"><expr pos:start="1797:33" pos:end="1797:61"><call pos:start="1797:33" pos:end="1797:61"><name pos:start="1797:33" pos:end="1797:51">tcg_gen_bswap32_i32</name><argument_list pos:start="1797:52" pos:end="1797:61">(<argument pos:start="1797:53" pos:end="1797:55"><expr pos:start="1797:53" pos:end="1797:55"><name pos:start="1797:53" pos:end="1797:55">tmp</name></expr></argument>, <argument pos:start="1797:58" pos:end="1797:60"><expr pos:start="1797:58" pos:end="1797:60"><name pos:start="1797:58" pos:end="1797:60">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1801:25" pos:end="1801:46"><expr pos:start="1801:25" pos:end="1801:45"><call pos:start="1801:25" pos:end="1801:45"><name pos:start="1801:25" pos:end="1801:33">store_reg</name><argument_list pos:start="1801:34" pos:end="1801:45">(<argument pos:start="1801:35" pos:end="1801:35"><expr pos:start="1801:35" pos:end="1801:35"><name pos:start="1801:35" pos:end="1801:35">s</name></expr></argument>, <argument pos:start="1801:38" pos:end="1801:39"><expr pos:start="1801:38" pos:end="1801:39"><name pos:start="1801:38" pos:end="1801:39">rd</name></expr></argument>, <argument pos:start="1801:42" pos:end="1801:44"><expr pos:start="1801:42" pos:end="1801:44"><name pos:start="1801:42" pos:end="1801:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="1803:23" pos:end="1807:21">else <block pos:start="1803:28" pos:end="1807:21">{<block_content pos:start="1805:25" pos:end="1805:40">

                        <goto pos:start="1805:25" pos:end="1805:40">goto <name pos:start="1805:30" pos:end="1805:39">illegal_op</name>;</goto>

                    </block_content>}</block></else></if_stmt>

                    <break pos:start="1809:21" pos:end="1809:26">break;</break>

                <case pos:start="1811:17" pos:end="1811:23">case <expr pos:start="1811:22" pos:end="1811:22"><literal type="number" pos:start="1811:22" pos:end="1811:22">2</literal></expr>:</case> <comment type="block" pos:start="1811:25" pos:end="1811:51">/* Multiplies (Type 3).  */</comment>

                    <switch pos:start="1813:21" pos:end="1995:21">switch <condition pos:start="1813:28" pos:end="1813:47">(<expr pos:start="1813:29" pos:end="1813:46"><operator pos:start="1813:29" pos:end="1813:29">(</operator><name pos:start="1813:30" pos:end="1813:33">insn</name> <operator pos:start="1813:35" pos:end="1813:36">&gt;&gt;</operator> <literal type="number" pos:start="1813:38" pos:end="1813:39">20</literal><operator pos:start="1813:40" pos:end="1813:40">)</operator> <operator pos:start="1813:42" pos:end="1813:42">&amp;</operator> <literal type="number" pos:start="1813:44" pos:end="1813:46">0x7</literal></expr>)</condition> <block pos:start="1813:49" pos:end="1995:21">{<block_content pos:start="1815:21" pos:end="1993:40">

                    <case pos:start="1815:21" pos:end="1815:27">case <expr pos:start="1815:26" pos:end="1815:26"><literal type="number" pos:start="1815:26" pos:end="1815:26">5</literal></expr>:</case>

                        <if_stmt pos:start="1817:25" pos:end="1823:25"><if pos:start="1817:25" pos:end="1823:25">if <condition pos:start="1817:28" pos:end="1817:60">(<expr pos:start="1817:29" pos:end="1817:59"><operator pos:start="1817:29" pos:end="1817:29">(</operator><operator pos:start="1817:30" pos:end="1817:30">(</operator><name pos:start="1817:31" pos:end="1817:34">insn</name> <operator pos:start="1817:36" pos:end="1817:37">&gt;&gt;</operator> <literal type="number" pos:start="1817:39" pos:end="1817:39">6</literal><operator pos:start="1817:40" pos:end="1817:40">)</operator> <operator pos:start="1817:42" pos:end="1817:42">^</operator> <operator pos:start="1817:44" pos:end="1817:44">(</operator><name pos:start="1817:45" pos:end="1817:48">insn</name> <operator pos:start="1817:50" pos:end="1817:51">&gt;&gt;</operator> <literal type="number" pos:start="1817:53" pos:end="1817:53">7</literal><operator pos:start="1817:54" pos:end="1817:54">)</operator><operator pos:start="1817:55" pos:end="1817:55">)</operator> <operator pos:start="1817:57" pos:end="1817:57">&amp;</operator> <literal type="number" pos:start="1817:59" pos:end="1817:59">1</literal></expr>)</condition> <block pos:start="1817:62" pos:end="1823:25">{<block_content pos:start="1821:29" pos:end="1821:44">

                            <comment type="block" pos:start="1819:29" pos:end="1819:60">/* op2 not 00x or 11x : UNDEF */</comment>

                            <goto pos:start="1821:29" pos:end="1821:44">goto <name pos:start="1821:34" pos:end="1821:43">illegal_op</name>;</goto>

                        </block_content>}</block></if></if_stmt>

                        <comment type="block" pos:start="1825:25" pos:end="1827:51">/* Signed multiply most significant [accumulate].

                           (SMMUL, SMMLA, SMMLS) */</comment>

                        <expr_stmt pos:start="1829:25" pos:end="1829:46"><expr pos:start="1829:25" pos:end="1829:45"><name pos:start="1829:25" pos:end="1829:27">tmp</name> <operator pos:start="1829:29" pos:end="1829:29">=</operator> <call pos:start="1829:31" pos:end="1829:45"><name pos:start="1829:31" pos:end="1829:38">load_reg</name><argument_list pos:start="1829:39" pos:end="1829:45">(<argument pos:start="1829:40" pos:end="1829:40"><expr pos:start="1829:40" pos:end="1829:40"><name pos:start="1829:40" pos:end="1829:40">s</name></expr></argument>, <argument pos:start="1829:43" pos:end="1829:44"><expr pos:start="1829:43" pos:end="1829:44"><name pos:start="1829:43" pos:end="1829:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1831:25" pos:end="1831:47"><expr pos:start="1831:25" pos:end="1831:46"><name pos:start="1831:25" pos:end="1831:28">tmp2</name> <operator pos:start="1831:30" pos:end="1831:30">=</operator> <call pos:start="1831:32" pos:end="1831:46"><name pos:start="1831:32" pos:end="1831:39">load_reg</name><argument_list pos:start="1831:40" pos:end="1831:46">(<argument pos:start="1831:41" pos:end="1831:41"><expr pos:start="1831:41" pos:end="1831:41"><name pos:start="1831:41" pos:end="1831:41">s</name></expr></argument>, <argument pos:start="1831:44" pos:end="1831:45"><expr pos:start="1831:44" pos:end="1831:45"><name pos:start="1831:44" pos:end="1831:45">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1833:25" pos:end="1833:60"><expr pos:start="1833:25" pos:end="1833:59"><name pos:start="1833:25" pos:end="1833:29">tmp64</name> <operator pos:start="1833:31" pos:end="1833:31">=</operator> <call pos:start="1833:33" pos:end="1833:59"><name pos:start="1833:33" pos:end="1833:48">gen_muls_i64_i32</name><argument_list pos:start="1833:49" pos:end="1833:59">(<argument pos:start="1833:50" pos:end="1833:52"><expr pos:start="1833:50" pos:end="1833:52"><name pos:start="1833:50" pos:end="1833:52">tmp</name></expr></argument>, <argument pos:start="1833:55" pos:end="1833:58"><expr pos:start="1833:55" pos:end="1833:58"><name pos:start="1833:55" pos:end="1833:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <if_stmt pos:start="1837:25" pos:end="1851:25"><if pos:start="1837:25" pos:end="1851:25">if <condition pos:start="1837:28" pos:end="1837:37">(<expr pos:start="1837:29" pos:end="1837:36"><name pos:start="1837:29" pos:end="1837:30">rd</name> <operator pos:start="1837:32" pos:end="1837:33">!=</operator> <literal type="number" pos:start="1837:35" pos:end="1837:36">15</literal></expr>)</condition> <block pos:start="1837:39" pos:end="1851:25">{<block_content pos:start="1839:29" pos:end="1849:29">

                            <expr_stmt pos:start="1839:29" pos:end="1839:50"><expr pos:start="1839:29" pos:end="1839:49"><name pos:start="1839:29" pos:end="1839:31">tmp</name> <operator pos:start="1839:33" pos:end="1839:33">=</operator> <call pos:start="1839:35" pos:end="1839:49"><name pos:start="1839:35" pos:end="1839:42">load_reg</name><argument_list pos:start="1839:43" pos:end="1839:49">(<argument pos:start="1839:44" pos:end="1839:44"><expr pos:start="1839:44" pos:end="1839:44"><name pos:start="1839:44" pos:end="1839:44">s</name></expr></argument>, <argument pos:start="1839:47" pos:end="1839:48"><expr pos:start="1839:47" pos:end="1839:48"><name pos:start="1839:47" pos:end="1839:48">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="1841:29" pos:end="1849:29"><if pos:start="1841:29" pos:end="1845:29">if <condition pos:start="1841:32" pos:end="1841:48">(<expr pos:start="1841:33" pos:end="1841:47"><name pos:start="1841:33" pos:end="1841:36">insn</name> <operator pos:start="1841:38" pos:end="1841:38">&amp;</operator> <operator pos:start="1841:40" pos:end="1841:40">(</operator><literal type="number" pos:start="1841:41" pos:end="1841:41">1</literal> <operator pos:start="1841:43" pos:end="1841:44">&lt;&lt;</operator> <literal type="number" pos:start="1841:46" pos:end="1841:46">6</literal><operator pos:start="1841:47" pos:end="1841:47">)</operator></expr>)</condition> <block pos:start="1841:50" pos:end="1845:29">{<block_content pos:start="1843:33" pos:end="1843:65">

                                <expr_stmt pos:start="1843:33" pos:end="1843:65"><expr pos:start="1843:33" pos:end="1843:64"><name pos:start="1843:33" pos:end="1843:37">tmp64</name> <operator pos:start="1843:39" pos:end="1843:39">=</operator> <call pos:start="1843:41" pos:end="1843:64"><name pos:start="1843:41" pos:end="1843:52">gen_subq_msw</name><argument_list pos:start="1843:53" pos:end="1843:64">(<argument pos:start="1843:54" pos:end="1843:58"><expr pos:start="1843:54" pos:end="1843:58"><name pos:start="1843:54" pos:end="1843:58">tmp64</name></expr></argument>, <argument pos:start="1843:61" pos:end="1843:63"><expr pos:start="1843:61" pos:end="1843:63"><name pos:start="1843:61" pos:end="1843:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="1845:31" pos:end="1849:29">else <block pos:start="1845:36" pos:end="1849:29">{<block_content pos:start="1847:33" pos:end="1847:65">

                                <expr_stmt pos:start="1847:33" pos:end="1847:65"><expr pos:start="1847:33" pos:end="1847:64"><name pos:start="1847:33" pos:end="1847:37">tmp64</name> <operator pos:start="1847:39" pos:end="1847:39">=</operator> <call pos:start="1847:41" pos:end="1847:64"><name pos:start="1847:41" pos:end="1847:52">gen_addq_msw</name><argument_list pos:start="1847:53" pos:end="1847:64">(<argument pos:start="1847:54" pos:end="1847:58"><expr pos:start="1847:54" pos:end="1847:58"><name pos:start="1847:54" pos:end="1847:58">tmp64</name></expr></argument>, <argument pos:start="1847:61" pos:end="1847:63"><expr pos:start="1847:61" pos:end="1847:63"><name pos:start="1847:61" pos:end="1847:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="1853:25" pos:end="1857:25"><if pos:start="1853:25" pos:end="1857:25">if <condition pos:start="1853:28" pos:end="1853:44">(<expr pos:start="1853:29" pos:end="1853:43"><name pos:start="1853:29" pos:end="1853:32">insn</name> <operator pos:start="1853:34" pos:end="1853:34">&amp;</operator> <operator pos:start="1853:36" pos:end="1853:36">(</operator><literal type="number" pos:start="1853:37" pos:end="1853:37">1</literal> <operator pos:start="1853:39" pos:end="1853:40">&lt;&lt;</operator> <literal type="number" pos:start="1853:42" pos:end="1853:42">5</literal><operator pos:start="1853:43" pos:end="1853:43">)</operator></expr>)</condition> <block pos:start="1853:46" pos:end="1857:25">{<block_content pos:start="1855:29" pos:end="1855:72">

                            <expr_stmt pos:start="1855:29" pos:end="1855:72"><expr pos:start="1855:29" pos:end="1855:71"><call pos:start="1855:29" pos:end="1855:71"><name pos:start="1855:29" pos:end="1855:44">tcg_gen_addi_i64</name><argument_list pos:start="1855:45" pos:end="1855:71">(<argument pos:start="1855:46" pos:end="1855:50"><expr pos:start="1855:46" pos:end="1855:50"><name pos:start="1855:46" pos:end="1855:50">tmp64</name></expr></argument>, <argument pos:start="1855:53" pos:end="1855:57"><expr pos:start="1855:53" pos:end="1855:57"><name pos:start="1855:53" pos:end="1855:57">tmp64</name></expr></argument>, <argument pos:start="1855:60" pos:end="1855:70"><expr pos:start="1855:60" pos:end="1855:70"><literal type="number" pos:start="1855:60" pos:end="1855:70">0x80000000u</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="1859:25" pos:end="1859:59"><expr pos:start="1859:25" pos:end="1859:58"><call pos:start="1859:25" pos:end="1859:58"><name pos:start="1859:25" pos:end="1859:40">tcg_gen_shri_i64</name><argument_list pos:start="1859:41" pos:end="1859:58">(<argument pos:start="1859:42" pos:end="1859:46"><expr pos:start="1859:42" pos:end="1859:46"><name pos:start="1859:42" pos:end="1859:46">tmp64</name></expr></argument>, <argument pos:start="1859:49" pos:end="1859:53"><expr pos:start="1859:49" pos:end="1859:53"><name pos:start="1859:49" pos:end="1859:53">tmp64</name></expr></argument>, <argument pos:start="1859:56" pos:end="1859:57"><expr pos:start="1859:56" pos:end="1859:57"><literal type="number" pos:start="1859:56" pos:end="1859:57">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1861:25" pos:end="1861:49"><expr pos:start="1861:25" pos:end="1861:48"><name pos:start="1861:25" pos:end="1861:27">tmp</name> <operator pos:start="1861:29" pos:end="1861:29">=</operator> <call pos:start="1861:31" pos:end="1861:48"><name pos:start="1861:31" pos:end="1861:46">tcg_temp_new_i32</name><argument_list pos:start="1861:47" pos:end="1861:48">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1863:25" pos:end="1863:58"><expr pos:start="1863:25" pos:end="1863:57"><call pos:start="1863:25" pos:end="1863:57"><name pos:start="1863:25" pos:end="1863:45">tcg_gen_trunc_i64_i32</name><argument_list pos:start="1863:46" pos:end="1863:57">(<argument pos:start="1863:47" pos:end="1863:49"><expr pos:start="1863:47" pos:end="1863:49"><name pos:start="1863:47" pos:end="1863:49">tmp</name></expr></argument>, <argument pos:start="1863:52" pos:end="1863:56"><expr pos:start="1863:52" pos:end="1863:56"><name pos:start="1863:52" pos:end="1863:56">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1865:25" pos:end="1865:49"><expr pos:start="1865:25" pos:end="1865:48"><call pos:start="1865:25" pos:end="1865:48"><name pos:start="1865:25" pos:end="1865:41">tcg_temp_free_i64</name><argument_list pos:start="1865:42" pos:end="1865:48">(<argument pos:start="1865:43" pos:end="1865:47"><expr pos:start="1865:43" pos:end="1865:47"><name pos:start="1865:43" pos:end="1865:47">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1867:25" pos:end="1867:46"><expr pos:start="1867:25" pos:end="1867:45"><call pos:start="1867:25" pos:end="1867:45"><name pos:start="1867:25" pos:end="1867:33">store_reg</name><argument_list pos:start="1867:34" pos:end="1867:45">(<argument pos:start="1867:35" pos:end="1867:35"><expr pos:start="1867:35" pos:end="1867:35"><name pos:start="1867:35" pos:end="1867:35">s</name></expr></argument>, <argument pos:start="1867:38" pos:end="1867:39"><expr pos:start="1867:38" pos:end="1867:39"><name pos:start="1867:38" pos:end="1867:39">rn</name></expr></argument>, <argument pos:start="1867:42" pos:end="1867:44"><expr pos:start="1867:42" pos:end="1867:44"><name pos:start="1867:42" pos:end="1867:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1869:25" pos:end="1869:30">break;</break>

                    <case pos:start="1871:21" pos:end="1871:27">case <expr pos:start="1871:26" pos:end="1871:26"><literal type="number" pos:start="1871:26" pos:end="1871:26">0</literal></expr>:</case>

                    <case pos:start="1873:21" pos:end="1873:27">case <expr pos:start="1873:26" pos:end="1873:26"><literal type="number" pos:start="1873:26" pos:end="1873:26">4</literal></expr>:</case>

                        <comment type="block" pos:start="1875:25" pos:end="1875:72">/* SMLAD, SMUAD, SMLSD, SMUSD, SMLALD, SMLSLD */</comment>

                        <if_stmt pos:start="1877:25" pos:end="1881:25"><if pos:start="1877:25" pos:end="1881:25">if <condition pos:start="1877:28" pos:end="1877:44">(<expr pos:start="1877:29" pos:end="1877:43"><name pos:start="1877:29" pos:end="1877:32">insn</name> <operator pos:start="1877:34" pos:end="1877:34">&amp;</operator> <operator pos:start="1877:36" pos:end="1877:36">(</operator><literal type="number" pos:start="1877:37" pos:end="1877:37">1</literal> <operator pos:start="1877:39" pos:end="1877:40">&lt;&lt;</operator> <literal type="number" pos:start="1877:42" pos:end="1877:42">7</literal><operator pos:start="1877:43" pos:end="1877:43">)</operator></expr>)</condition> <block pos:start="1877:46" pos:end="1881:25">{<block_content pos:start="1879:29" pos:end="1879:44">

                            <goto pos:start="1879:29" pos:end="1879:44">goto <name pos:start="1879:34" pos:end="1879:43">illegal_op</name>;</goto>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="1883:25" pos:end="1883:46"><expr pos:start="1883:25" pos:end="1883:45"><name pos:start="1883:25" pos:end="1883:27">tmp</name> <operator pos:start="1883:29" pos:end="1883:29">=</operator> <call pos:start="1883:31" pos:end="1883:45"><name pos:start="1883:31" pos:end="1883:38">load_reg</name><argument_list pos:start="1883:39" pos:end="1883:45">(<argument pos:start="1883:40" pos:end="1883:40"><expr pos:start="1883:40" pos:end="1883:40"><name pos:start="1883:40" pos:end="1883:40">s</name></expr></argument>, <argument pos:start="1883:43" pos:end="1883:44"><expr pos:start="1883:43" pos:end="1883:44"><name pos:start="1883:43" pos:end="1883:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1885:25" pos:end="1885:47"><expr pos:start="1885:25" pos:end="1885:46"><name pos:start="1885:25" pos:end="1885:28">tmp2</name> <operator pos:start="1885:30" pos:end="1885:30">=</operator> <call pos:start="1885:32" pos:end="1885:46"><name pos:start="1885:32" pos:end="1885:39">load_reg</name><argument_list pos:start="1885:40" pos:end="1885:46">(<argument pos:start="1885:41" pos:end="1885:41"><expr pos:start="1885:41" pos:end="1885:41"><name pos:start="1885:41" pos:end="1885:41">s</name></expr></argument>, <argument pos:start="1885:44" pos:end="1885:45"><expr pos:start="1885:44" pos:end="1885:45"><name pos:start="1885:44" pos:end="1885:45">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1887:25" pos:end="1889:48"><if pos:start="1887:25" pos:end="1889:48">if <condition pos:start="1887:28" pos:end="1887:44">(<expr pos:start="1887:29" pos:end="1887:43"><name pos:start="1887:29" pos:end="1887:32">insn</name> <operator pos:start="1887:34" pos:end="1887:34">&amp;</operator> <operator pos:start="1887:36" pos:end="1887:36">(</operator><literal type="number" pos:start="1887:37" pos:end="1887:37">1</literal> <operator pos:start="1887:39" pos:end="1887:40">&lt;&lt;</operator> <literal type="number" pos:start="1887:42" pos:end="1887:42">5</literal><operator pos:start="1887:43" pos:end="1887:43">)</operator></expr>)</condition><block type="pseudo" pos:start="1889:29" pos:end="1889:48"><block_content pos:start="1889:29" pos:end="1889:48">

                            <expr_stmt pos:start="1889:29" pos:end="1889:48"><expr pos:start="1889:29" pos:end="1889:47"><call pos:start="1889:29" pos:end="1889:47"><name pos:start="1889:29" pos:end="1889:41">gen_swap_half</name><argument_list pos:start="1889:42" pos:end="1889:47">(<argument pos:start="1889:43" pos:end="1889:46"><expr pos:start="1889:43" pos:end="1889:46"><name pos:start="1889:43" pos:end="1889:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="1891:25" pos:end="1891:49"><expr pos:start="1891:25" pos:end="1891:48"><call pos:start="1891:25" pos:end="1891:48"><name pos:start="1891:25" pos:end="1891:37">gen_smul_dual</name><argument_list pos:start="1891:38" pos:end="1891:48">(<argument pos:start="1891:39" pos:end="1891:41"><expr pos:start="1891:39" pos:end="1891:41"><name pos:start="1891:39" pos:end="1891:41">tmp</name></expr></argument>, <argument pos:start="1891:44" pos:end="1891:47"><expr pos:start="1891:44" pos:end="1891:47"><name pos:start="1891:44" pos:end="1891:47">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1893:25" pos:end="1911:25"><if pos:start="1893:25" pos:end="1899:25">if <condition pos:start="1893:28" pos:end="1893:44">(<expr pos:start="1893:29" pos:end="1893:43"><name pos:start="1893:29" pos:end="1893:32">insn</name> <operator pos:start="1893:34" pos:end="1893:34">&amp;</operator> <operator pos:start="1893:36" pos:end="1893:36">(</operator><literal type="number" pos:start="1893:37" pos:end="1893:37">1</literal> <operator pos:start="1893:39" pos:end="1893:40">&lt;&lt;</operator> <literal type="number" pos:start="1893:42" pos:end="1893:42">6</literal><operator pos:start="1893:43" pos:end="1893:43">)</operator></expr>)</condition> <block pos:start="1893:46" pos:end="1899:25">{<block_content pos:start="1897:29" pos:end="1897:60">

                            <comment type="block" pos:start="1895:29" pos:end="1895:67">/* This subtraction cannot overflow. */</comment>

                            <expr_stmt pos:start="1897:29" pos:end="1897:60"><expr pos:start="1897:29" pos:end="1897:59"><call pos:start="1897:29" pos:end="1897:59"><name pos:start="1897:29" pos:end="1897:43">tcg_gen_sub_i32</name><argument_list pos:start="1897:44" pos:end="1897:59">(<argument pos:start="1897:45" pos:end="1897:47"><expr pos:start="1897:45" pos:end="1897:47"><name pos:start="1897:45" pos:end="1897:47">tmp</name></expr></argument>, <argument pos:start="1897:50" pos:end="1897:52"><expr pos:start="1897:50" pos:end="1897:52"><name pos:start="1897:50" pos:end="1897:52">tmp</name></expr></argument>, <argument pos:start="1897:55" pos:end="1897:58"><expr pos:start="1897:55" pos:end="1897:58"><name pos:start="1897:55" pos:end="1897:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1899:27" pos:end="1911:25">else <block pos:start="1899:32" pos:end="1911:25">{<block_content pos:start="1909:29" pos:end="1909:73">

                            <comment type="block" pos:start="1901:29" pos:end="1907:31">/* This addition cannot overflow 32 bits;

                             * however it may overflow considered as a signed

                             * operation, in which case we must set the Q flag.

                             */</comment>

                            <expr_stmt pos:start="1909:29" pos:end="1909:73"><expr pos:start="1909:29" pos:end="1909:72"><call pos:start="1909:29" pos:end="1909:72"><name pos:start="1909:29" pos:end="1909:47">gen_helper_add_setq</name><argument_list pos:start="1909:48" pos:end="1909:72">(<argument pos:start="1909:49" pos:end="1909:51"><expr pos:start="1909:49" pos:end="1909:51"><name pos:start="1909:49" pos:end="1909:51">tmp</name></expr></argument>, <argument pos:start="1909:54" pos:end="1909:60"><expr pos:start="1909:54" pos:end="1909:60"><name pos:start="1909:54" pos:end="1909:60">cpu_env</name></expr></argument>, <argument pos:start="1909:63" pos:end="1909:65"><expr pos:start="1909:63" pos:end="1909:65"><name pos:start="1909:63" pos:end="1909:65">tmp</name></expr></argument>, <argument pos:start="1909:68" pos:end="1909:71"><expr pos:start="1909:68" pos:end="1909:71"><name pos:start="1909:68" pos:end="1909:71">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1913:25" pos:end="1913:48"><expr pos:start="1913:25" pos:end="1913:47"><call pos:start="1913:25" pos:end="1913:47"><name pos:start="1913:25" pos:end="1913:41">tcg_temp_free_i32</name><argument_list pos:start="1913:42" pos:end="1913:47">(<argument pos:start="1913:43" pos:end="1913:46"><expr pos:start="1913:43" pos:end="1913:46"><name pos:start="1913:43" pos:end="1913:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1915:25" pos:end="1949:25"><if pos:start="1915:25" pos:end="1931:25">if <condition pos:start="1915:28" pos:end="1915:45">(<expr pos:start="1915:29" pos:end="1915:44"><name pos:start="1915:29" pos:end="1915:32">insn</name> <operator pos:start="1915:34" pos:end="1915:34">&amp;</operator> <operator pos:start="1915:36" pos:end="1915:36">(</operator><literal type="number" pos:start="1915:37" pos:end="1915:37">1</literal> <operator pos:start="1915:39" pos:end="1915:40">&lt;&lt;</operator> <literal type="number" pos:start="1915:42" pos:end="1915:43">22</literal><operator pos:start="1915:44" pos:end="1915:44">)</operator></expr>)</condition> <block pos:start="1915:47" pos:end="1931:25">{<block_content pos:start="1919:29" pos:end="1929:53">

                            <comment type="block" pos:start="1917:29" pos:end="1917:48">/* smlald, smlsld */</comment>

                            <expr_stmt pos:start="1919:29" pos:end="1919:55"><expr pos:start="1919:29" pos:end="1919:54"><name pos:start="1919:29" pos:end="1919:33">tmp64</name> <operator pos:start="1919:35" pos:end="1919:35">=</operator> <call pos:start="1919:37" pos:end="1919:54"><name pos:start="1919:37" pos:end="1919:52">tcg_temp_new_i64</name><argument_list pos:start="1919:53" pos:end="1919:54">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1921:29" pos:end="1921:60"><expr pos:start="1921:29" pos:end="1921:59"><call pos:start="1921:29" pos:end="1921:59"><name pos:start="1921:29" pos:end="1921:47">tcg_gen_ext_i32_i64</name><argument_list pos:start="1921:48" pos:end="1921:59">(<argument pos:start="1921:49" pos:end="1921:53"><expr pos:start="1921:49" pos:end="1921:53"><name pos:start="1921:49" pos:end="1921:53">tmp64</name></expr></argument>, <argument pos:start="1921:56" pos:end="1921:58"><expr pos:start="1921:56" pos:end="1921:58"><name pos:start="1921:56" pos:end="1921:58">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1923:29" pos:end="1923:51"><expr pos:start="1923:29" pos:end="1923:50"><call pos:start="1923:29" pos:end="1923:50"><name pos:start="1923:29" pos:end="1923:45">tcg_temp_free_i32</name><argument_list pos:start="1923:46" pos:end="1923:50">(<argument pos:start="1923:47" pos:end="1923:49"><expr pos:start="1923:47" pos:end="1923:49"><name pos:start="1923:47" pos:end="1923:49">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1925:29" pos:end="1925:55"><expr pos:start="1925:29" pos:end="1925:54"><call pos:start="1925:29" pos:end="1925:54"><name pos:start="1925:29" pos:end="1925:36">gen_addq</name><argument_list pos:start="1925:37" pos:end="1925:54">(<argument pos:start="1925:38" pos:end="1925:38"><expr pos:start="1925:38" pos:end="1925:38"><name pos:start="1925:38" pos:end="1925:38">s</name></expr></argument>, <argument pos:start="1925:41" pos:end="1925:45"><expr pos:start="1925:41" pos:end="1925:45"><name pos:start="1925:41" pos:end="1925:45">tmp64</name></expr></argument>, <argument pos:start="1925:48" pos:end="1925:49"><expr pos:start="1925:48" pos:end="1925:49"><name pos:start="1925:48" pos:end="1925:49">rd</name></expr></argument>, <argument pos:start="1925:52" pos:end="1925:53"><expr pos:start="1925:52" pos:end="1925:53"><name pos:start="1925:52" pos:end="1925:53">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1927:29" pos:end="1927:61"><expr pos:start="1927:29" pos:end="1927:60"><call pos:start="1927:29" pos:end="1927:60"><name pos:start="1927:29" pos:end="1927:42">gen_storeq_reg</name><argument_list pos:start="1927:43" pos:end="1927:60">(<argument pos:start="1927:44" pos:end="1927:44"><expr pos:start="1927:44" pos:end="1927:44"><name pos:start="1927:44" pos:end="1927:44">s</name></expr></argument>, <argument pos:start="1927:47" pos:end="1927:48"><expr pos:start="1927:47" pos:end="1927:48"><name pos:start="1927:47" pos:end="1927:48">rd</name></expr></argument>, <argument pos:start="1927:51" pos:end="1927:52"><expr pos:start="1927:51" pos:end="1927:52"><name pos:start="1927:51" pos:end="1927:52">rn</name></expr></argument>, <argument pos:start="1927:55" pos:end="1927:59"><expr pos:start="1927:55" pos:end="1927:59"><name pos:start="1927:55" pos:end="1927:59">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1929:29" pos:end="1929:53"><expr pos:start="1929:29" pos:end="1929:52"><call pos:start="1929:29" pos:end="1929:52"><name pos:start="1929:29" pos:end="1929:45">tcg_temp_free_i64</name><argument_list pos:start="1929:46" pos:end="1929:52">(<argument pos:start="1929:47" pos:end="1929:51"><expr pos:start="1929:47" pos:end="1929:51"><name pos:start="1929:47" pos:end="1929:51">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1931:27" pos:end="1949:25">else <block pos:start="1931:32" pos:end="1949:25">{<block_content pos:start="1935:29" pos:end="1947:50">

                            <comment type="block" pos:start="1933:29" pos:end="1933:60">/* smuad, smusd, smlad, smlsd */</comment>

                            <if_stmt pos:start="1935:29" pos:end="1945:31"><if pos:start="1935:29" pos:end="1945:31">if <condition pos:start="1935:32" pos:end="1935:41">(<expr pos:start="1935:33" pos:end="1935:40"><name pos:start="1935:33" pos:end="1935:34">rd</name> <operator pos:start="1935:36" pos:end="1935:37">!=</operator> <literal type="number" pos:start="1935:39" pos:end="1935:40">15</literal></expr>)</condition>

                              <block pos:start="1937:31" pos:end="1945:31">{<block_content pos:start="1939:33" pos:end="1943:56">

                                <expr_stmt pos:start="1939:33" pos:end="1939:55"><expr pos:start="1939:33" pos:end="1939:54"><name pos:start="1939:33" pos:end="1939:36">tmp2</name> <operator pos:start="1939:38" pos:end="1939:38">=</operator> <call pos:start="1939:40" pos:end="1939:54"><name pos:start="1939:40" pos:end="1939:47">load_reg</name><argument_list pos:start="1939:48" pos:end="1939:54">(<argument pos:start="1939:49" pos:end="1939:49"><expr pos:start="1939:49" pos:end="1939:49"><name pos:start="1939:49" pos:end="1939:49">s</name></expr></argument>, <argument pos:start="1939:52" pos:end="1939:53"><expr pos:start="1939:52" pos:end="1939:53"><name pos:start="1939:52" pos:end="1939:53">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="1941:33" pos:end="1941:77"><expr pos:start="1941:33" pos:end="1941:76"><call pos:start="1941:33" pos:end="1941:76"><name pos:start="1941:33" pos:end="1941:51">gen_helper_add_setq</name><argument_list pos:start="1941:52" pos:end="1941:76">(<argument pos:start="1941:53" pos:end="1941:55"><expr pos:start="1941:53" pos:end="1941:55"><name pos:start="1941:53" pos:end="1941:55">tmp</name></expr></argument>, <argument pos:start="1941:58" pos:end="1941:64"><expr pos:start="1941:58" pos:end="1941:64"><name pos:start="1941:58" pos:end="1941:64">cpu_env</name></expr></argument>, <argument pos:start="1941:67" pos:end="1941:69"><expr pos:start="1941:67" pos:end="1941:69"><name pos:start="1941:67" pos:end="1941:69">tmp</name></expr></argument>, <argument pos:start="1941:72" pos:end="1941:75"><expr pos:start="1941:72" pos:end="1941:75"><name pos:start="1941:72" pos:end="1941:75">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="1943:33" pos:end="1943:56"><expr pos:start="1943:33" pos:end="1943:55"><call pos:start="1943:33" pos:end="1943:55"><name pos:start="1943:33" pos:end="1943:49">tcg_temp_free_i32</name><argument_list pos:start="1943:50" pos:end="1943:55">(<argument pos:start="1943:51" pos:end="1943:54"><expr pos:start="1943:51" pos:end="1943:54"><name pos:start="1943:51" pos:end="1943:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                              </block_content>}</block></if></if_stmt>

                            <expr_stmt pos:start="1947:29" pos:end="1947:50"><expr pos:start="1947:29" pos:end="1947:49"><call pos:start="1947:29" pos:end="1947:49"><name pos:start="1947:29" pos:end="1947:37">store_reg</name><argument_list pos:start="1947:38" pos:end="1947:49">(<argument pos:start="1947:39" pos:end="1947:39"><expr pos:start="1947:39" pos:end="1947:39"><name pos:start="1947:39" pos:end="1947:39">s</name></expr></argument>, <argument pos:start="1947:42" pos:end="1947:43"><expr pos:start="1947:42" pos:end="1947:43"><name pos:start="1947:42" pos:end="1947:43">rn</name></expr></argument>, <argument pos:start="1947:46" pos:end="1947:48"><expr pos:start="1947:46" pos:end="1947:48"><name pos:start="1947:46" pos:end="1947:48">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <break pos:start="1951:25" pos:end="1951:30">break;</break>

                    <case pos:start="1953:21" pos:end="1953:27">case <expr pos:start="1953:26" pos:end="1953:26"><literal type="number" pos:start="1953:26" pos:end="1953:26">1</literal></expr>:</case>

                    <case pos:start="1955:21" pos:end="1955:27">case <expr pos:start="1955:26" pos:end="1955:26"><literal type="number" pos:start="1955:26" pos:end="1955:26">3</literal></expr>:</case>

                        <comment type="block" pos:start="1957:25" pos:end="1957:40">/* SDIV, UDIV */</comment>

                        <if_stmt pos:start="1959:25" pos:end="1963:25"><if pos:start="1959:25" pos:end="1963:25">if <condition pos:start="1959:28" pos:end="1959:67">(<expr pos:start="1959:29" pos:end="1959:66"><operator pos:start="1959:29" pos:end="1959:29">!</operator><call pos:start="1959:30" pos:end="1959:66"><name pos:start="1959:30" pos:end="1959:40">arm_feature</name><argument_list pos:start="1959:41" pos:end="1959:66">(<argument pos:start="1959:42" pos:end="1959:44"><expr pos:start="1959:42" pos:end="1959:44"><name pos:start="1959:42" pos:end="1959:44">env</name></expr></argument>, <argument pos:start="1959:47" pos:end="1959:65"><expr pos:start="1959:47" pos:end="1959:65"><name pos:start="1959:47" pos:end="1959:65">ARM_FEATURE_ARM_DIV</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1959:69" pos:end="1963:25">{<block_content pos:start="1961:29" pos:end="1961:44">

                            <goto pos:start="1961:29" pos:end="1961:44">goto <name pos:start="1961:34" pos:end="1961:43">illegal_op</name>;</goto>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="1965:25" pos:end="1969:25"><if pos:start="1965:25" pos:end="1969:25">if <condition pos:start="1965:28" pos:end="1965:60">(<expr pos:start="1965:29" pos:end="1965:59"><operator pos:start="1965:29" pos:end="1965:29">(</operator><operator pos:start="1965:30" pos:end="1965:30">(</operator><name pos:start="1965:31" pos:end="1965:34">insn</name> <operator pos:start="1965:36" pos:end="1965:37">&gt;&gt;</operator> <literal type="number" pos:start="1965:39" pos:end="1965:39">5</literal><operator pos:start="1965:40" pos:end="1965:40">)</operator> <operator pos:start="1965:42" pos:end="1965:42">&amp;</operator> <literal type="number" pos:start="1965:44" pos:end="1965:44">7</literal><operator pos:start="1965:45" pos:end="1965:45">)</operator> <operator pos:start="1965:47" pos:end="1965:48">||</operator> <operator pos:start="1965:50" pos:end="1965:50">(</operator><name pos:start="1965:51" pos:end="1965:52">rd</name> <operator pos:start="1965:54" pos:end="1965:55">!=</operator> <literal type="number" pos:start="1965:57" pos:end="1965:58">15</literal><operator pos:start="1965:59" pos:end="1965:59">)</operator></expr>)</condition> <block pos:start="1965:62" pos:end="1969:25">{<block_content pos:start="1967:29" pos:end="1967:44">

                            <goto pos:start="1967:29" pos:end="1967:44">goto <name pos:start="1967:34" pos:end="1967:43">illegal_op</name>;</goto>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="1971:25" pos:end="1971:46"><expr pos:start="1971:25" pos:end="1971:45"><name pos:start="1971:25" pos:end="1971:27">tmp</name> <operator pos:start="1971:29" pos:end="1971:29">=</operator> <call pos:start="1971:31" pos:end="1971:45"><name pos:start="1971:31" pos:end="1971:38">load_reg</name><argument_list pos:start="1971:39" pos:end="1971:45">(<argument pos:start="1971:40" pos:end="1971:40"><expr pos:start="1971:40" pos:end="1971:40"><name pos:start="1971:40" pos:end="1971:40">s</name></expr></argument>, <argument pos:start="1971:43" pos:end="1971:44"><expr pos:start="1971:43" pos:end="1971:44"><name pos:start="1971:43" pos:end="1971:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1973:25" pos:end="1973:47"><expr pos:start="1973:25" pos:end="1973:46"><name pos:start="1973:25" pos:end="1973:28">tmp2</name> <operator pos:start="1973:30" pos:end="1973:30">=</operator> <call pos:start="1973:32" pos:end="1973:46"><name pos:start="1973:32" pos:end="1973:39">load_reg</name><argument_list pos:start="1973:40" pos:end="1973:46">(<argument pos:start="1973:41" pos:end="1973:41"><expr pos:start="1973:41" pos:end="1973:41"><name pos:start="1973:41" pos:end="1973:41">s</name></expr></argument>, <argument pos:start="1973:44" pos:end="1973:45"><expr pos:start="1973:44" pos:end="1973:45"><name pos:start="1973:44" pos:end="1973:45">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1975:25" pos:end="1983:25"><if pos:start="1975:25" pos:end="1979:25">if <condition pos:start="1975:28" pos:end="1975:45">(<expr pos:start="1975:29" pos:end="1975:44"><name pos:start="1975:29" pos:end="1975:32">insn</name> <operator pos:start="1975:34" pos:end="1975:34">&amp;</operator> <operator pos:start="1975:36" pos:end="1975:36">(</operator><literal type="number" pos:start="1975:37" pos:end="1975:37">1</literal> <operator pos:start="1975:39" pos:end="1975:40">&lt;&lt;</operator> <literal type="number" pos:start="1975:42" pos:end="1975:43">21</literal><operator pos:start="1975:44" pos:end="1975:44">)</operator></expr>)</condition> <block pos:start="1975:47" pos:end="1979:25">{<block_content pos:start="1977:29" pos:end="1977:60">

                            <expr_stmt pos:start="1977:29" pos:end="1977:60"><expr pos:start="1977:29" pos:end="1977:59"><call pos:start="1977:29" pos:end="1977:59"><name pos:start="1977:29" pos:end="1977:43">gen_helper_udiv</name><argument_list pos:start="1977:44" pos:end="1977:59">(<argument pos:start="1977:45" pos:end="1977:47"><expr pos:start="1977:45" pos:end="1977:47"><name pos:start="1977:45" pos:end="1977:47">tmp</name></expr></argument>, <argument pos:start="1977:50" pos:end="1977:52"><expr pos:start="1977:50" pos:end="1977:52"><name pos:start="1977:50" pos:end="1977:52">tmp</name></expr></argument>, <argument pos:start="1977:55" pos:end="1977:58"><expr pos:start="1977:55" pos:end="1977:58"><name pos:start="1977:55" pos:end="1977:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1979:27" pos:end="1983:25">else <block pos:start="1979:32" pos:end="1983:25">{<block_content pos:start="1981:29" pos:end="1981:60">

                            <expr_stmt pos:start="1981:29" pos:end="1981:60"><expr pos:start="1981:29" pos:end="1981:59"><call pos:start="1981:29" pos:end="1981:59"><name pos:start="1981:29" pos:end="1981:43">gen_helper_sdiv</name><argument_list pos:start="1981:44" pos:end="1981:59">(<argument pos:start="1981:45" pos:end="1981:47"><expr pos:start="1981:45" pos:end="1981:47"><name pos:start="1981:45" pos:end="1981:47">tmp</name></expr></argument>, <argument pos:start="1981:50" pos:end="1981:52"><expr pos:start="1981:50" pos:end="1981:52"><name pos:start="1981:50" pos:end="1981:52">tmp</name></expr></argument>, <argument pos:start="1981:55" pos:end="1981:58"><expr pos:start="1981:55" pos:end="1981:58"><name pos:start="1981:55" pos:end="1981:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1985:25" pos:end="1985:48"><expr pos:start="1985:25" pos:end="1985:47"><call pos:start="1985:25" pos:end="1985:47"><name pos:start="1985:25" pos:end="1985:41">tcg_temp_free_i32</name><argument_list pos:start="1985:42" pos:end="1985:47">(<argument pos:start="1985:43" pos:end="1985:46"><expr pos:start="1985:43" pos:end="1985:46"><name pos:start="1985:43" pos:end="1985:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1987:25" pos:end="1987:46"><expr pos:start="1987:25" pos:end="1987:45"><call pos:start="1987:25" pos:end="1987:45"><name pos:start="1987:25" pos:end="1987:33">store_reg</name><argument_list pos:start="1987:34" pos:end="1987:45">(<argument pos:start="1987:35" pos:end="1987:35"><expr pos:start="1987:35" pos:end="1987:35"><name pos:start="1987:35" pos:end="1987:35">s</name></expr></argument>, <argument pos:start="1987:38" pos:end="1987:39"><expr pos:start="1987:38" pos:end="1987:39"><name pos:start="1987:38" pos:end="1987:39">rn</name></expr></argument>, <argument pos:start="1987:42" pos:end="1987:44"><expr pos:start="1987:42" pos:end="1987:44"><name pos:start="1987:42" pos:end="1987:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1989:25" pos:end="1989:30">break;</break>

                    <default pos:start="1991:21" pos:end="1991:28">default:</default>

                        <goto pos:start="1993:25" pos:end="1993:40">goto <name pos:start="1993:30" pos:end="1993:39">illegal_op</name>;</goto>

                    </block_content>}</block></switch>

                    <break pos:start="1997:21" pos:end="1997:26">break;</break>

                <case pos:start="1999:17" pos:end="1999:23">case <expr pos:start="1999:22" pos:end="1999:22"><literal type="number" pos:start="1999:22" pos:end="1999:22">3</literal></expr>:</case>

                    <expr_stmt pos:start="2001:21" pos:end="2001:68"><expr pos:start="2001:21" pos:end="2001:67"><name pos:start="2001:21" pos:end="2001:23">op1</name> <operator pos:start="2001:25" pos:end="2001:25">=</operator> <operator pos:start="2001:27" pos:end="2001:27">(</operator><operator pos:start="2001:28" pos:end="2001:28">(</operator><name pos:start="2001:29" pos:end="2001:32">insn</name> <operator pos:start="2001:34" pos:end="2001:35">&gt;&gt;</operator> <literal type="number" pos:start="2001:37" pos:end="2001:38">17</literal><operator pos:start="2001:39" pos:end="2001:39">)</operator> <operator pos:start="2001:41" pos:end="2001:41">&amp;</operator> <literal type="number" pos:start="2001:43" pos:end="2001:46">0x38</literal><operator pos:start="2001:47" pos:end="2001:47">)</operator> <operator pos:start="2001:49" pos:end="2001:49">|</operator> <operator pos:start="2001:51" pos:end="2001:51">(</operator><operator pos:start="2001:52" pos:end="2001:52">(</operator><name pos:start="2001:53" pos:end="2001:56">insn</name> <operator pos:start="2001:58" pos:end="2001:59">&gt;&gt;</operator> <literal type="number" pos:start="2001:61" pos:end="2001:61">5</literal><operator pos:start="2001:62" pos:end="2001:62">)</operator> <operator pos:start="2001:64" pos:end="2001:64">&amp;</operator> <literal type="number" pos:start="2001:66" pos:end="2001:66">7</literal><operator pos:start="2001:67" pos:end="2001:67">)</operator></expr>;</expr_stmt>

                    <switch pos:start="2003:21" pos:end="2107:21">switch <condition pos:start="2003:28" pos:end="2003:32">(<expr pos:start="2003:29" pos:end="2003:31"><name pos:start="2003:29" pos:end="2003:31">op1</name></expr>)</condition> <block pos:start="2003:34" pos:end="2107:21">{<block_content pos:start="2005:21" pos:end="2105:40">

                    <case pos:start="2005:21" pos:end="2005:27">case <expr pos:start="2005:26" pos:end="2005:26"><literal type="number" pos:start="2005:26" pos:end="2005:26">0</literal></expr>:</case> <comment type="block" pos:start="2005:29" pos:end="2005:72">/* Unsigned sum of absolute differences.  */</comment>

                        <expr_stmt pos:start="2007:25" pos:end="2007:32"><expr pos:start="2007:25" pos:end="2007:31"><call pos:start="2007:25" pos:end="2007:31"><name pos:start="2007:25" pos:end="2007:28">ARCH</name><argument_list pos:start="2007:29" pos:end="2007:31">(<argument pos:start="2007:30" pos:end="2007:30"><expr pos:start="2007:30" pos:end="2007:30"><literal type="number" pos:start="2007:30" pos:end="2007:30">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2009:25" pos:end="2009:46"><expr pos:start="2009:25" pos:end="2009:45"><name pos:start="2009:25" pos:end="2009:27">tmp</name> <operator pos:start="2009:29" pos:end="2009:29">=</operator> <call pos:start="2009:31" pos:end="2009:45"><name pos:start="2009:31" pos:end="2009:38">load_reg</name><argument_list pos:start="2009:39" pos:end="2009:45">(<argument pos:start="2009:40" pos:end="2009:40"><expr pos:start="2009:40" pos:end="2009:40"><name pos:start="2009:40" pos:end="2009:40">s</name></expr></argument>, <argument pos:start="2009:43" pos:end="2009:44"><expr pos:start="2009:43" pos:end="2009:44"><name pos:start="2009:43" pos:end="2009:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2011:25" pos:end="2011:47"><expr pos:start="2011:25" pos:end="2011:46"><name pos:start="2011:25" pos:end="2011:28">tmp2</name> <operator pos:start="2011:30" pos:end="2011:30">=</operator> <call pos:start="2011:32" pos:end="2011:46"><name pos:start="2011:32" pos:end="2011:39">load_reg</name><argument_list pos:start="2011:40" pos:end="2011:46">(<argument pos:start="2011:41" pos:end="2011:41"><expr pos:start="2011:41" pos:end="2011:41"><name pos:start="2011:41" pos:end="2011:41">s</name></expr></argument>, <argument pos:start="2011:44" pos:end="2011:45"><expr pos:start="2011:44" pos:end="2011:45"><name pos:start="2011:44" pos:end="2011:45">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2013:25" pos:end="2013:57"><expr pos:start="2013:25" pos:end="2013:56"><call pos:start="2013:25" pos:end="2013:56"><name pos:start="2013:25" pos:end="2013:40">gen_helper_usad8</name><argument_list pos:start="2013:41" pos:end="2013:56">(<argument pos:start="2013:42" pos:end="2013:44"><expr pos:start="2013:42" pos:end="2013:44"><name pos:start="2013:42" pos:end="2013:44">tmp</name></expr></argument>, <argument pos:start="2013:47" pos:end="2013:49"><expr pos:start="2013:47" pos:end="2013:49"><name pos:start="2013:47" pos:end="2013:49">tmp</name></expr></argument>, <argument pos:start="2013:52" pos:end="2013:55"><expr pos:start="2013:52" pos:end="2013:55"><name pos:start="2013:52" pos:end="2013:55">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2015:25" pos:end="2015:48"><expr pos:start="2015:25" pos:end="2015:47"><call pos:start="2015:25" pos:end="2015:47"><name pos:start="2015:25" pos:end="2015:41">tcg_temp_free_i32</name><argument_list pos:start="2015:42" pos:end="2015:47">(<argument pos:start="2015:43" pos:end="2015:46"><expr pos:start="2015:43" pos:end="2015:46"><name pos:start="2015:43" pos:end="2015:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="2017:25" pos:end="2025:25"><if pos:start="2017:25" pos:end="2025:25">if <condition pos:start="2017:28" pos:end="2017:37">(<expr pos:start="2017:29" pos:end="2017:36"><name pos:start="2017:29" pos:end="2017:30">rd</name> <operator pos:start="2017:32" pos:end="2017:33">!=</operator> <literal type="number" pos:start="2017:35" pos:end="2017:36">15</literal></expr>)</condition> <block pos:start="2017:39" pos:end="2025:25">{<block_content pos:start="2019:29" pos:end="2023:52">

                            <expr_stmt pos:start="2019:29" pos:end="2019:51"><expr pos:start="2019:29" pos:end="2019:50"><name pos:start="2019:29" pos:end="2019:32">tmp2</name> <operator pos:start="2019:34" pos:end="2019:34">=</operator> <call pos:start="2019:36" pos:end="2019:50"><name pos:start="2019:36" pos:end="2019:43">load_reg</name><argument_list pos:start="2019:44" pos:end="2019:50">(<argument pos:start="2019:45" pos:end="2019:45"><expr pos:start="2019:45" pos:end="2019:45"><name pos:start="2019:45" pos:end="2019:45">s</name></expr></argument>, <argument pos:start="2019:48" pos:end="2019:49"><expr pos:start="2019:48" pos:end="2019:49"><name pos:start="2019:48" pos:end="2019:49">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2021:29" pos:end="2021:60"><expr pos:start="2021:29" pos:end="2021:59"><call pos:start="2021:29" pos:end="2021:59"><name pos:start="2021:29" pos:end="2021:43">tcg_gen_add_i32</name><argument_list pos:start="2021:44" pos:end="2021:59">(<argument pos:start="2021:45" pos:end="2021:47"><expr pos:start="2021:45" pos:end="2021:47"><name pos:start="2021:45" pos:end="2021:47">tmp</name></expr></argument>, <argument pos:start="2021:50" pos:end="2021:52"><expr pos:start="2021:50" pos:end="2021:52"><name pos:start="2021:50" pos:end="2021:52">tmp</name></expr></argument>, <argument pos:start="2021:55" pos:end="2021:58"><expr pos:start="2021:55" pos:end="2021:58"><name pos:start="2021:55" pos:end="2021:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2023:29" pos:end="2023:52"><expr pos:start="2023:29" pos:end="2023:51"><call pos:start="2023:29" pos:end="2023:51"><name pos:start="2023:29" pos:end="2023:45">tcg_temp_free_i32</name><argument_list pos:start="2023:46" pos:end="2023:51">(<argument pos:start="2023:47" pos:end="2023:50"><expr pos:start="2023:47" pos:end="2023:50"><name pos:start="2023:47" pos:end="2023:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="2027:25" pos:end="2027:46"><expr pos:start="2027:25" pos:end="2027:45"><call pos:start="2027:25" pos:end="2027:45"><name pos:start="2027:25" pos:end="2027:33">store_reg</name><argument_list pos:start="2027:34" pos:end="2027:45">(<argument pos:start="2027:35" pos:end="2027:35"><expr pos:start="2027:35" pos:end="2027:35"><name pos:start="2027:35" pos:end="2027:35">s</name></expr></argument>, <argument pos:start="2027:38" pos:end="2027:39"><expr pos:start="2027:38" pos:end="2027:39"><name pos:start="2027:38" pos:end="2027:39">rn</name></expr></argument>, <argument pos:start="2027:42" pos:end="2027:44"><expr pos:start="2027:42" pos:end="2027:44"><name pos:start="2027:42" pos:end="2027:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="2029:25" pos:end="2029:30">break;</break>

                    <case pos:start="2031:21" pos:end="2031:30">case <expr pos:start="2031:26" pos:end="2031:29"><literal type="number" pos:start="2031:26" pos:end="2031:29">0x20</literal></expr>:</case> <case pos:start="2031:32" pos:end="2031:41">case <expr pos:start="2031:37" pos:end="2031:40"><literal type="number" pos:start="2031:37" pos:end="2031:40">0x24</literal></expr>:</case> <case pos:start="2031:43" pos:end="2031:52">case <expr pos:start="2031:48" pos:end="2031:51"><literal type="number" pos:start="2031:48" pos:end="2031:51">0x28</literal></expr>:</case> <case pos:start="2031:54" pos:end="2031:63">case <expr pos:start="2031:59" pos:end="2031:62"><literal type="number" pos:start="2031:59" pos:end="2031:62">0x2c</literal></expr>:</case>

                        <comment type="block" pos:start="2033:25" pos:end="2033:53">/* Bitfield insert/clear.  */</comment>

                        <expr_stmt pos:start="2035:25" pos:end="2035:34"><expr pos:start="2035:25" pos:end="2035:33"><call pos:start="2035:25" pos:end="2035:33"><name pos:start="2035:25" pos:end="2035:28">ARCH</name><argument_list pos:start="2035:29" pos:end="2035:33">(<argument pos:start="2035:30" pos:end="2035:32"><expr pos:start="2035:30" pos:end="2035:32"><literal type="number" pos:start="2035:30" pos:end="2035:32">6T2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2037:25" pos:end="2037:51"><expr pos:start="2037:25" pos:end="2037:50"><name pos:start="2037:25" pos:end="2037:29">shift</name> <operator pos:start="2037:31" pos:end="2037:31">=</operator> <operator pos:start="2037:33" pos:end="2037:33">(</operator><name pos:start="2037:34" pos:end="2037:37">insn</name> <operator pos:start="2037:39" pos:end="2037:40">&gt;&gt;</operator> <literal type="number" pos:start="2037:42" pos:end="2037:42">7</literal><operator pos:start="2037:43" pos:end="2037:43">)</operator> <operator pos:start="2037:45" pos:end="2037:45">&amp;</operator> <literal type="number" pos:start="2037:47" pos:end="2037:50">0x1f</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="2039:25" pos:end="2039:48"><expr pos:start="2039:25" pos:end="2039:47"><name pos:start="2039:25" pos:end="2039:25">i</name> <operator pos:start="2039:27" pos:end="2039:27">=</operator> <operator pos:start="2039:29" pos:end="2039:29">(</operator><name pos:start="2039:30" pos:end="2039:33">insn</name> <operator pos:start="2039:35" pos:end="2039:36">&gt;&gt;</operator> <literal type="number" pos:start="2039:38" pos:end="2039:39">16</literal><operator pos:start="2039:40" pos:end="2039:40">)</operator> <operator pos:start="2039:42" pos:end="2039:42">&amp;</operator> <literal type="number" pos:start="2039:44" pos:end="2039:47">0x1f</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="2041:25" pos:end="2041:42"><expr pos:start="2041:25" pos:end="2041:41"><name pos:start="2041:25" pos:end="2041:25">i</name> <operator pos:start="2041:27" pos:end="2041:27">=</operator> <name pos:start="2041:29" pos:end="2041:29">i</name> <operator pos:start="2041:31" pos:end="2041:31">+</operator> <literal type="number" pos:start="2041:33" pos:end="2041:35">1</literal> <operator pos:start="2041:35" pos:end="2041:35">-</operator> <name pos:start="2041:37" pos:end="2041:41">shift</name></expr>;</expr_stmt>

                        <if_stmt pos:start="2043:25" pos:end="2053:25"><if pos:start="2043:25" pos:end="2049:25">if <condition pos:start="2043:28" pos:end="2043:37">(<expr pos:start="2043:29" pos:end="2043:36"><name pos:start="2043:29" pos:end="2043:30">rm</name> <operator pos:start="2043:32" pos:end="2043:33">==</operator> <literal type="number" pos:start="2043:35" pos:end="2043:36">15</literal></expr>)</condition> <block pos:start="2043:39" pos:end="2049:25">{<block_content pos:start="2045:29" pos:end="2047:53">

                            <expr_stmt pos:start="2045:29" pos:end="2045:53"><expr pos:start="2045:29" pos:end="2045:52"><name pos:start="2045:29" pos:end="2045:31">tmp</name> <operator pos:start="2045:33" pos:end="2045:33">=</operator> <call pos:start="2045:35" pos:end="2045:52"><name pos:start="2045:35" pos:end="2045:50">tcg_temp_new_i32</name><argument_list pos:start="2045:51" pos:end="2045:52">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2047:29" pos:end="2047:53"><expr pos:start="2047:29" pos:end="2047:52"><call pos:start="2047:29" pos:end="2047:52"><name pos:start="2047:29" pos:end="2047:44">tcg_gen_movi_i32</name><argument_list pos:start="2047:45" pos:end="2047:52">(<argument pos:start="2047:46" pos:end="2047:48"><expr pos:start="2047:46" pos:end="2047:48"><name pos:start="2047:46" pos:end="2047:48">tmp</name></expr></argument>, <argument pos:start="2047:51" pos:end="2047:51"><expr pos:start="2047:51" pos:end="2047:51"><literal type="number" pos:start="2047:51" pos:end="2047:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="2049:27" pos:end="2053:25">else <block pos:start="2049:32" pos:end="2053:25">{<block_content pos:start="2051:29" pos:end="2051:50">

                            <expr_stmt pos:start="2051:29" pos:end="2051:50"><expr pos:start="2051:29" pos:end="2051:49"><name pos:start="2051:29" pos:end="2051:31">tmp</name> <operator pos:start="2051:33" pos:end="2051:33">=</operator> <call pos:start="2051:35" pos:end="2051:49"><name pos:start="2051:35" pos:end="2051:42">load_reg</name><argument_list pos:start="2051:43" pos:end="2051:49">(<argument pos:start="2051:44" pos:end="2051:44"><expr pos:start="2051:44" pos:end="2051:44"><name pos:start="2051:44" pos:end="2051:44">s</name></expr></argument>, <argument pos:start="2051:47" pos:end="2051:48"><expr pos:start="2051:47" pos:end="2051:48"><name pos:start="2051:47" pos:end="2051:48">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <if_stmt pos:start="2055:25" pos:end="2063:25"><if pos:start="2055:25" pos:end="2063:25">if <condition pos:start="2055:28" pos:end="2055:36">(<expr pos:start="2055:29" pos:end="2055:35"><name pos:start="2055:29" pos:end="2055:29">i</name> <operator pos:start="2055:31" pos:end="2055:32">!=</operator> <literal type="number" pos:start="2055:34" pos:end="2055:35">32</literal></expr>)</condition> <block pos:start="2055:38" pos:end="2063:25">{<block_content pos:start="2057:29" pos:end="2061:52">

                            <expr_stmt pos:start="2057:29" pos:end="2057:51"><expr pos:start="2057:29" pos:end="2057:50"><name pos:start="2057:29" pos:end="2057:32">tmp2</name> <operator pos:start="2057:34" pos:end="2057:34">=</operator> <call pos:start="2057:36" pos:end="2057:50"><name pos:start="2057:36" pos:end="2057:43">load_reg</name><argument_list pos:start="2057:44" pos:end="2057:50">(<argument pos:start="2057:45" pos:end="2057:45"><expr pos:start="2057:45" pos:end="2057:45"><name pos:start="2057:45" pos:end="2057:45">s</name></expr></argument>, <argument pos:start="2057:48" pos:end="2057:49"><expr pos:start="2057:48" pos:end="2057:49"><name pos:start="2057:48" pos:end="2057:49">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2059:29" pos:end="2059:74"><expr pos:start="2059:29" pos:end="2059:73"><call pos:start="2059:29" pos:end="2059:73"><name pos:start="2059:29" pos:end="2059:47">tcg_gen_deposit_i32</name><argument_list pos:start="2059:48" pos:end="2059:73">(<argument pos:start="2059:49" pos:end="2059:51"><expr pos:start="2059:49" pos:end="2059:51"><name pos:start="2059:49" pos:end="2059:51">tmp</name></expr></argument>, <argument pos:start="2059:54" pos:end="2059:57"><expr pos:start="2059:54" pos:end="2059:57"><name pos:start="2059:54" pos:end="2059:57">tmp2</name></expr></argument>, <argument pos:start="2059:60" pos:end="2059:62"><expr pos:start="2059:60" pos:end="2059:62"><name pos:start="2059:60" pos:end="2059:62">tmp</name></expr></argument>, <argument pos:start="2059:65" pos:end="2059:69"><expr pos:start="2059:65" pos:end="2059:69"><name pos:start="2059:65" pos:end="2059:69">shift</name></expr></argument>, <argument pos:start="2059:72" pos:end="2059:72"><expr pos:start="2059:72" pos:end="2059:72"><name pos:start="2059:72" pos:end="2059:72">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2061:29" pos:end="2061:52"><expr pos:start="2061:29" pos:end="2061:51"><call pos:start="2061:29" pos:end="2061:51"><name pos:start="2061:29" pos:end="2061:45">tcg_temp_free_i32</name><argument_list pos:start="2061:46" pos:end="2061:51">(<argument pos:start="2061:47" pos:end="2061:50"><expr pos:start="2061:47" pos:end="2061:50"><name pos:start="2061:47" pos:end="2061:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="2065:25" pos:end="2065:46"><expr pos:start="2065:25" pos:end="2065:45"><call pos:start="2065:25" pos:end="2065:45"><name pos:start="2065:25" pos:end="2065:33">store_reg</name><argument_list pos:start="2065:34" pos:end="2065:45">(<argument pos:start="2065:35" pos:end="2065:35"><expr pos:start="2065:35" pos:end="2065:35"><name pos:start="2065:35" pos:end="2065:35">s</name></expr></argument>, <argument pos:start="2065:38" pos:end="2065:39"><expr pos:start="2065:38" pos:end="2065:39"><name pos:start="2065:38" pos:end="2065:39">rd</name></expr></argument>, <argument pos:start="2065:42" pos:end="2065:44"><expr pos:start="2065:42" pos:end="2065:44"><name pos:start="2065:42" pos:end="2065:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="2067:25" pos:end="2067:30">break;</break>

                    <case pos:start="2069:21" pos:end="2069:30">case <expr pos:start="2069:26" pos:end="2069:29"><literal type="number" pos:start="2069:26" pos:end="2069:29">0x12</literal></expr>:</case> <case pos:start="2069:32" pos:end="2069:41">case <expr pos:start="2069:37" pos:end="2069:40"><literal type="number" pos:start="2069:37" pos:end="2069:40">0x16</literal></expr>:</case> <case pos:start="2069:43" pos:end="2069:52">case <expr pos:start="2069:48" pos:end="2069:51"><literal type="number" pos:start="2069:48" pos:end="2069:51">0x1a</literal></expr>:</case> <case pos:start="2069:54" pos:end="2069:63">case <expr pos:start="2069:59" pos:end="2069:62"><literal type="number" pos:start="2069:59" pos:end="2069:62">0x1e</literal></expr>:</case> <comment type="block" pos:start="2069:65" pos:end="2069:74">/* sbfx */</comment>

                    <case pos:start="2071:21" pos:end="2071:30">case <expr pos:start="2071:26" pos:end="2071:29"><literal type="number" pos:start="2071:26" pos:end="2071:29">0x32</literal></expr>:</case> <case pos:start="2071:32" pos:end="2071:41">case <expr pos:start="2071:37" pos:end="2071:40"><literal type="number" pos:start="2071:37" pos:end="2071:40">0x36</literal></expr>:</case> <case pos:start="2071:43" pos:end="2071:52">case <expr pos:start="2071:48" pos:end="2071:51"><literal type="number" pos:start="2071:48" pos:end="2071:51">0x3a</literal></expr>:</case> <case pos:start="2071:54" pos:end="2071:63">case <expr pos:start="2071:59" pos:end="2071:62"><literal type="number" pos:start="2071:59" pos:end="2071:62">0x3e</literal></expr>:</case> <comment type="block" pos:start="2071:65" pos:end="2071:74">/* ubfx */</comment>

                        <expr_stmt pos:start="2073:25" pos:end="2073:34"><expr pos:start="2073:25" pos:end="2073:33"><call pos:start="2073:25" pos:end="2073:33"><name pos:start="2073:25" pos:end="2073:28">ARCH</name><argument_list pos:start="2073:29" pos:end="2073:33">(<argument pos:start="2073:30" pos:end="2073:32"><expr pos:start="2073:30" pos:end="2073:32"><literal type="number" pos:start="2073:30" pos:end="2073:32">6T2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2075:25" pos:end="2075:46"><expr pos:start="2075:25" pos:end="2075:45"><name pos:start="2075:25" pos:end="2075:27">tmp</name> <operator pos:start="2075:29" pos:end="2075:29">=</operator> <call pos:start="2075:31" pos:end="2075:45"><name pos:start="2075:31" pos:end="2075:38">load_reg</name><argument_list pos:start="2075:39" pos:end="2075:45">(<argument pos:start="2075:40" pos:end="2075:40"><expr pos:start="2075:40" pos:end="2075:40"><name pos:start="2075:40" pos:end="2075:40">s</name></expr></argument>, <argument pos:start="2075:43" pos:end="2075:44"><expr pos:start="2075:43" pos:end="2075:44"><name pos:start="2075:43" pos:end="2075:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2077:25" pos:end="2077:51"><expr pos:start="2077:25" pos:end="2077:50"><name pos:start="2077:25" pos:end="2077:29">shift</name> <operator pos:start="2077:31" pos:end="2077:31">=</operator> <operator pos:start="2077:33" pos:end="2077:33">(</operator><name pos:start="2077:34" pos:end="2077:37">insn</name> <operator pos:start="2077:39" pos:end="2077:40">&gt;&gt;</operator> <literal type="number" pos:start="2077:42" pos:end="2077:42">7</literal><operator pos:start="2077:43" pos:end="2077:43">)</operator> <operator pos:start="2077:45" pos:end="2077:45">&amp;</operator> <literal type="number" pos:start="2077:47" pos:end="2077:50">0x1f</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="2079:25" pos:end="2079:54"><expr pos:start="2079:25" pos:end="2079:53"><name pos:start="2079:25" pos:end="2079:25">i</name> <operator pos:start="2079:27" pos:end="2079:27">=</operator> <operator pos:start="2079:29" pos:end="2079:29">(</operator><operator pos:start="2079:30" pos:end="2079:30">(</operator><name pos:start="2079:31" pos:end="2079:34">insn</name> <operator pos:start="2079:36" pos:end="2079:37">&gt;&gt;</operator> <literal type="number" pos:start="2079:39" pos:end="2079:40">16</literal><operator pos:start="2079:41" pos:end="2079:41">)</operator> <operator pos:start="2079:43" pos:end="2079:43">&amp;</operator> <literal type="number" pos:start="2079:45" pos:end="2079:48">0x1f</literal><operator pos:start="2079:49" pos:end="2079:49">)</operator> <operator pos:start="2079:51" pos:end="2079:51">+</operator> <literal type="number" pos:start="2079:53" pos:end="2079:53">1</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="2081:25" pos:end="2083:44"><if pos:start="2081:25" pos:end="2083:44">if <condition pos:start="2081:28" pos:end="2081:43">(<expr pos:start="2081:29" pos:end="2081:42"><name pos:start="2081:29" pos:end="2081:33">shift</name> <operator pos:start="2081:35" pos:end="2081:35">+</operator> <name pos:start="2081:37" pos:end="2081:37">i</name> <operator pos:start="2081:39" pos:end="2081:39">&gt;</operator> <literal type="number" pos:start="2081:41" pos:end="2081:42">32</literal></expr>)</condition><block type="pseudo" pos:start="2083:29" pos:end="2083:44"><block_content pos:start="2083:29" pos:end="2083:44">

                            <goto pos:start="2083:29" pos:end="2083:44">goto <name pos:start="2083:34" pos:end="2083:43">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                        <if_stmt pos:start="2085:25" pos:end="2097:25"><if pos:start="2085:25" pos:end="2097:25">if <condition pos:start="2085:28" pos:end="2085:35">(<expr pos:start="2085:29" pos:end="2085:34"><name pos:start="2085:29" pos:end="2085:29">i</name> <operator pos:start="2085:31" pos:end="2085:31">&lt;</operator> <literal type="number" pos:start="2085:33" pos:end="2085:34">32</literal></expr>)</condition> <block pos:start="2085:37" pos:end="2097:25">{<block_content pos:start="2087:29" pos:end="2095:29">

                            <if_stmt pos:start="2087:29" pos:end="2095:29"><if pos:start="2087:29" pos:end="2091:29">if <condition pos:start="2087:32" pos:end="2087:43">(<expr pos:start="2087:33" pos:end="2087:42"><name pos:start="2087:33" pos:end="2087:35">op1</name> <operator pos:start="2087:37" pos:end="2087:37">&amp;</operator> <literal type="number" pos:start="2087:39" pos:end="2087:42">0x20</literal></expr>)</condition> <block pos:start="2087:45" pos:end="2091:29">{<block_content pos:start="2089:33" pos:end="2089:68">

                                <expr_stmt pos:start="2089:33" pos:end="2089:68"><expr pos:start="2089:33" pos:end="2089:67"><call pos:start="2089:33" pos:end="2089:67"><name pos:start="2089:33" pos:end="2089:40">gen_ubfx</name><argument_list pos:start="2089:41" pos:end="2089:67">(<argument pos:start="2089:42" pos:end="2089:44"><expr pos:start="2089:42" pos:end="2089:44"><name pos:start="2089:42" pos:end="2089:44">tmp</name></expr></argument>, <argument pos:start="2089:47" pos:end="2089:51"><expr pos:start="2089:47" pos:end="2089:51"><name pos:start="2089:47" pos:end="2089:51">shift</name></expr></argument>, <argument pos:start="2089:54" pos:end="2089:66"><expr pos:start="2089:54" pos:end="2089:66"><operator pos:start="2089:54" pos:end="2089:54">(</operator><literal type="number" pos:start="2089:55" pos:end="2089:56">1u</literal> <operator pos:start="2089:58" pos:end="2089:59">&lt;&lt;</operator> <name pos:start="2089:61" pos:end="2089:61">i</name><operator pos:start="2089:62" pos:end="2089:62">)</operator> <operator pos:start="2089:64" pos:end="2089:64">-</operator> <literal type="number" pos:start="2089:66" pos:end="2089:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="2091:31" pos:end="2095:29">else <block pos:start="2091:36" pos:end="2095:29">{<block_content pos:start="2093:33" pos:end="2093:56">

                                <expr_stmt pos:start="2093:33" pos:end="2093:56"><expr pos:start="2093:33" pos:end="2093:55"><call pos:start="2093:33" pos:end="2093:55"><name pos:start="2093:33" pos:end="2093:40">gen_sbfx</name><argument_list pos:start="2093:41" pos:end="2093:55">(<argument pos:start="2093:42" pos:end="2093:44"><expr pos:start="2093:42" pos:end="2093:44"><name pos:start="2093:42" pos:end="2093:44">tmp</name></expr></argument>, <argument pos:start="2093:47" pos:end="2093:51"><expr pos:start="2093:47" pos:end="2093:51"><name pos:start="2093:47" pos:end="2093:51">shift</name></expr></argument>, <argument pos:start="2093:54" pos:end="2093:54"><expr pos:start="2093:54" pos:end="2093:54"><name pos:start="2093:54" pos:end="2093:54">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="2099:25" pos:end="2099:46"><expr pos:start="2099:25" pos:end="2099:45"><call pos:start="2099:25" pos:end="2099:45"><name pos:start="2099:25" pos:end="2099:33">store_reg</name><argument_list pos:start="2099:34" pos:end="2099:45">(<argument pos:start="2099:35" pos:end="2099:35"><expr pos:start="2099:35" pos:end="2099:35"><name pos:start="2099:35" pos:end="2099:35">s</name></expr></argument>, <argument pos:start="2099:38" pos:end="2099:39"><expr pos:start="2099:38" pos:end="2099:39"><name pos:start="2099:38" pos:end="2099:39">rd</name></expr></argument>, <argument pos:start="2099:42" pos:end="2099:44"><expr pos:start="2099:42" pos:end="2099:44"><name pos:start="2099:42" pos:end="2099:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="2101:25" pos:end="2101:30">break;</break>

                    <default pos:start="2103:21" pos:end="2103:28">default:</default>

                        <goto pos:start="2105:25" pos:end="2105:40">goto <name pos:start="2105:30" pos:end="2105:39">illegal_op</name>;</goto>

                    </block_content>}</block></switch>

                    <break pos:start="2109:21" pos:end="2109:26">break;</break>

                </block_content>}</block></switch>

                <break pos:start="2113:17" pos:end="2113:22">break;</break>

            </block_content>}</block></if></if_stmt>

        <label pos:start="2117:9" pos:end="2117:16"><name pos:start="2117:9" pos:end="2117:15">do_ldst</name>:</label>

            <comment type="block" pos:start="2119:13" pos:end="2125:15">/* Check for undefined extension instructions

             * per the ARM Bible IE:

             * xxxx 0111 1111 xxxx  xxxx xxxx 1111 xxxx

             */</comment>

            <expr_stmt pos:start="2127:13" pos:end="2127:42"><expr pos:start="2127:13" pos:end="2127:41"><name pos:start="2127:13" pos:end="2127:14">sh</name> <operator pos:start="2127:16" pos:end="2127:16">=</operator> <operator pos:start="2127:18" pos:end="2127:18">(</operator><literal type="number" pos:start="2127:19" pos:end="2127:21">0xf</literal> <operator pos:start="2127:23" pos:end="2127:24">&lt;&lt;</operator> <literal type="number" pos:start="2127:26" pos:end="2127:27">20</literal><operator pos:start="2127:28" pos:end="2127:28">)</operator> <operator pos:start="2127:30" pos:end="2127:30">|</operator> <operator pos:start="2127:32" pos:end="2127:32">(</operator><literal type="number" pos:start="2127:33" pos:end="2127:35">0xf</literal> <operator pos:start="2127:37" pos:end="2127:38">&lt;&lt;</operator> <literal type="number" pos:start="2127:40" pos:end="2127:40">4</literal><operator pos:start="2127:41" pos:end="2127:41">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="2129:13" pos:end="2135:13"><if pos:start="2129:13" pos:end="2135:13">if <condition pos:start="2129:16" pos:end="2129:50">(<expr pos:start="2129:17" pos:end="2129:49"><name pos:start="2129:17" pos:end="2129:19">op1</name> <operator pos:start="2129:21" pos:end="2129:22">==</operator> <literal type="number" pos:start="2129:24" pos:end="2129:26">0x7</literal> <operator pos:start="2129:28" pos:end="2129:29">&amp;&amp;</operator> <operator pos:start="2129:31" pos:end="2129:31">(</operator><operator pos:start="2129:32" pos:end="2129:32">(</operator><name pos:start="2129:33" pos:end="2129:36">insn</name> <operator pos:start="2129:38" pos:end="2129:38">&amp;</operator> <name pos:start="2129:40" pos:end="2129:41">sh</name><operator pos:start="2129:42" pos:end="2129:42">)</operator> <operator pos:start="2129:44" pos:end="2129:45">==</operator> <name pos:start="2129:47" pos:end="2129:48">sh</name><operator pos:start="2129:49" pos:end="2129:49">)</operator></expr>)</condition>

            <block pos:start="2131:13" pos:end="2135:13">{<block_content pos:start="2133:17" pos:end="2133:32">

                <goto pos:start="2133:17" pos:end="2133:32">goto <name pos:start="2133:22" pos:end="2133:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="2137:13" pos:end="2137:38">/* load/store byte/word */</comment>

            <expr_stmt pos:start="2139:13" pos:end="2139:36"><expr pos:start="2139:13" pos:end="2139:35"><name pos:start="2139:13" pos:end="2139:14">rn</name> <operator pos:start="2139:16" pos:end="2139:16">=</operator> <operator pos:start="2139:18" pos:end="2139:18">(</operator><name pos:start="2139:19" pos:end="2139:22">insn</name> <operator pos:start="2139:24" pos:end="2139:25">&gt;&gt;</operator> <literal type="number" pos:start="2139:27" pos:end="2139:28">16</literal><operator pos:start="2139:29" pos:end="2139:29">)</operator> <operator pos:start="2139:31" pos:end="2139:31">&amp;</operator> <literal type="number" pos:start="2139:33" pos:end="2139:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="2141:13" pos:end="2141:36"><expr pos:start="2141:13" pos:end="2141:35"><name pos:start="2141:13" pos:end="2141:14">rd</name> <operator pos:start="2141:16" pos:end="2141:16">=</operator> <operator pos:start="2141:18" pos:end="2141:18">(</operator><name pos:start="2141:19" pos:end="2141:22">insn</name> <operator pos:start="2141:24" pos:end="2141:25">&gt;&gt;</operator> <literal type="number" pos:start="2141:27" pos:end="2141:28">12</literal><operator pos:start="2141:29" pos:end="2141:29">)</operator> <operator pos:start="2141:31" pos:end="2141:31">&amp;</operator> <literal type="number" pos:start="2141:33" pos:end="2141:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="2143:13" pos:end="2143:35"><expr pos:start="2143:13" pos:end="2143:34"><name pos:start="2143:13" pos:end="2143:16">tmp2</name> <operator pos:start="2143:18" pos:end="2143:18">=</operator> <call pos:start="2143:20" pos:end="2143:34"><name pos:start="2143:20" pos:end="2143:27">load_reg</name><argument_list pos:start="2143:28" pos:end="2143:34">(<argument pos:start="2143:29" pos:end="2143:29"><expr pos:start="2143:29" pos:end="2143:29"><name pos:start="2143:29" pos:end="2143:29">s</name></expr></argument>, <argument pos:start="2143:32" pos:end="2143:33"><expr pos:start="2143:32" pos:end="2143:33"><name pos:start="2143:32" pos:end="2143:33">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2145:13" pos:end="2145:66"><expr pos:start="2145:13" pos:end="2145:65"><name pos:start="2145:13" pos:end="2145:13">i</name> <operator pos:start="2145:15" pos:end="2145:15">=</operator> <operator pos:start="2145:17" pos:end="2145:17">(</operator><call pos:start="2145:18" pos:end="2145:27"><name pos:start="2145:18" pos:end="2145:24">IS_USER</name><argument_list pos:start="2145:25" pos:end="2145:27">(<argument pos:start="2145:26" pos:end="2145:26"><expr pos:start="2145:26" pos:end="2145:26"><name pos:start="2145:26" pos:end="2145:26">s</name></expr></argument>)</argument_list></call> <operator pos:start="2145:29" pos:end="2145:30">||</operator> <operator pos:start="2145:32" pos:end="2145:32">(</operator><name pos:start="2145:33" pos:end="2145:36">insn</name> <operator pos:start="2145:38" pos:end="2145:38">&amp;</operator> <literal type="number" pos:start="2145:40" pos:end="2145:49">0x01200000</literal><operator pos:start="2145:50" pos:end="2145:50">)</operator> <operator pos:start="2145:52" pos:end="2145:53">==</operator> <literal type="number" pos:start="2145:55" pos:end="2145:64">0x00200000</literal><operator pos:start="2145:65" pos:end="2145:65">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="2147:13" pos:end="2149:51"><if pos:start="2147:13" pos:end="2149:51">if <condition pos:start="2147:16" pos:end="2147:33">(<expr pos:start="2147:17" pos:end="2147:32"><name pos:start="2147:17" pos:end="2147:20">insn</name> <operator pos:start="2147:22" pos:end="2147:22">&amp;</operator> <operator pos:start="2147:24" pos:end="2147:24">(</operator><literal type="number" pos:start="2147:25" pos:end="2147:25">1</literal> <operator pos:start="2147:27" pos:end="2147:28">&lt;&lt;</operator> <literal type="number" pos:start="2147:30" pos:end="2147:31">24</literal><operator pos:start="2147:32" pos:end="2147:32">)</operator></expr>)</condition><block type="pseudo" pos:start="2149:17" pos:end="2149:51"><block_content pos:start="2149:17" pos:end="2149:51">

                <expr_stmt pos:start="2149:17" pos:end="2149:51"><expr pos:start="2149:17" pos:end="2149:50"><call pos:start="2149:17" pos:end="2149:50"><name pos:start="2149:17" pos:end="2149:35">gen_add_data_offset</name><argument_list pos:start="2149:36" pos:end="2149:50">(<argument pos:start="2149:37" pos:end="2149:37"><expr pos:start="2149:37" pos:end="2149:37"><name pos:start="2149:37" pos:end="2149:37">s</name></expr></argument>, <argument pos:start="2149:40" pos:end="2149:43"><expr pos:start="2149:40" pos:end="2149:43"><name pos:start="2149:40" pos:end="2149:43">insn</name></expr></argument>, <argument pos:start="2149:46" pos:end="2149:49"><expr pos:start="2149:46" pos:end="2149:49"><name pos:start="2149:46" pos:end="2149:49">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="2151:13" pos:end="2179:13"><if pos:start="2151:13" pos:end="2165:13">if <condition pos:start="2151:16" pos:end="2151:33">(<expr pos:start="2151:17" pos:end="2151:32"><name pos:start="2151:17" pos:end="2151:20">insn</name> <operator pos:start="2151:22" pos:end="2151:22">&amp;</operator> <operator pos:start="2151:24" pos:end="2151:24">(</operator><literal type="number" pos:start="2151:25" pos:end="2151:25">1</literal> <operator pos:start="2151:27" pos:end="2151:28">&lt;&lt;</operator> <literal type="number" pos:start="2151:30" pos:end="2151:31">20</literal><operator pos:start="2151:32" pos:end="2151:32">)</operator></expr>)</condition> <block pos:start="2151:35" pos:end="2165:13">{<block_content pos:start="2155:17" pos:end="2163:17">

                <comment type="block" pos:start="2153:17" pos:end="2153:26">/* load */</comment>

                <if_stmt pos:start="2155:17" pos:end="2163:17"><if pos:start="2155:17" pos:end="2159:17">if <condition pos:start="2155:20" pos:end="2155:37">(<expr pos:start="2155:21" pos:end="2155:36"><name pos:start="2155:21" pos:end="2155:24">insn</name> <operator pos:start="2155:26" pos:end="2155:26">&amp;</operator> <operator pos:start="2155:28" pos:end="2155:28">(</operator><literal type="number" pos:start="2155:29" pos:end="2155:29">1</literal> <operator pos:start="2155:31" pos:end="2155:32">&lt;&lt;</operator> <literal type="number" pos:start="2155:34" pos:end="2155:35">22</literal><operator pos:start="2155:36" pos:end="2155:36">)</operator></expr>)</condition> <block pos:start="2155:39" pos:end="2159:17">{<block_content pos:start="2157:21" pos:end="2157:44">

                    <expr_stmt pos:start="2157:21" pos:end="2157:44"><expr pos:start="2157:21" pos:end="2157:43"><name pos:start="2157:21" pos:end="2157:23">tmp</name> <operator pos:start="2157:25" pos:end="2157:25">=</operator> <call pos:start="2157:27" pos:end="2157:43"><name pos:start="2157:27" pos:end="2157:34">gen_ld8u</name><argument_list pos:start="2157:35" pos:end="2157:43">(<argument pos:start="2157:36" pos:end="2157:39"><expr pos:start="2157:36" pos:end="2157:39"><name pos:start="2157:36" pos:end="2157:39">tmp2</name></expr></argument>, <argument pos:start="2157:42" pos:end="2157:42"><expr pos:start="2157:42" pos:end="2157:42"><name pos:start="2157:42" pos:end="2157:42">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="2159:19" pos:end="2163:17">else <block pos:start="2159:24" pos:end="2163:17">{<block_content pos:start="2161:21" pos:end="2161:44">

                    <expr_stmt pos:start="2161:21" pos:end="2161:44"><expr pos:start="2161:21" pos:end="2161:43"><name pos:start="2161:21" pos:end="2161:23">tmp</name> <operator pos:start="2161:25" pos:end="2161:25">=</operator> <call pos:start="2161:27" pos:end="2161:43"><name pos:start="2161:27" pos:end="2161:34">gen_ld32</name><argument_list pos:start="2161:35" pos:end="2161:43">(<argument pos:start="2161:36" pos:end="2161:39"><expr pos:start="2161:36" pos:end="2161:39"><name pos:start="2161:36" pos:end="2161:39">tmp2</name></expr></argument>, <argument pos:start="2161:42" pos:end="2161:42"><expr pos:start="2161:42" pos:end="2161:42"><name pos:start="2161:42" pos:end="2161:42">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="2165:15" pos:end="2179:13">else <block pos:start="2165:20" pos:end="2179:13">{<block_content pos:start="2169:17" pos:end="2177:43">

                <comment type="block" pos:start="2167:17" pos:end="2167:27">/* store */</comment>

                <expr_stmt pos:start="2169:17" pos:end="2169:38"><expr pos:start="2169:17" pos:end="2169:37"><name pos:start="2169:17" pos:end="2169:19">tmp</name> <operator pos:start="2169:21" pos:end="2169:21">=</operator> <call pos:start="2169:23" pos:end="2169:37"><name pos:start="2169:23" pos:end="2169:30">load_reg</name><argument_list pos:start="2169:31" pos:end="2169:37">(<argument pos:start="2169:32" pos:end="2169:32"><expr pos:start="2169:32" pos:end="2169:32"><name pos:start="2169:32" pos:end="2169:32">s</name></expr></argument>, <argument pos:start="2169:35" pos:end="2169:36"><expr pos:start="2169:35" pos:end="2169:36"><name pos:start="2169:35" pos:end="2169:36">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="2171:17" pos:end="2177:43"><if pos:start="2171:17" pos:end="2173:42">if <condition pos:start="2171:20" pos:end="2171:37">(<expr pos:start="2171:21" pos:end="2171:36"><name pos:start="2171:21" pos:end="2171:24">insn</name> <operator pos:start="2171:26" pos:end="2171:26">&amp;</operator> <operator pos:start="2171:28" pos:end="2171:28">(</operator><literal type="number" pos:start="2171:29" pos:end="2171:29">1</literal> <operator pos:start="2171:31" pos:end="2171:32">&lt;&lt;</operator> <literal type="number" pos:start="2171:34" pos:end="2171:35">22</literal><operator pos:start="2171:36" pos:end="2171:36">)</operator></expr>)</condition><block type="pseudo" pos:start="2173:21" pos:end="2173:42"><block_content pos:start="2173:21" pos:end="2173:42">

                    <expr_stmt pos:start="2173:21" pos:end="2173:42"><expr pos:start="2173:21" pos:end="2173:41"><call pos:start="2173:21" pos:end="2173:41"><name pos:start="2173:21" pos:end="2173:27">gen_st8</name><argument_list pos:start="2173:28" pos:end="2173:41">(<argument pos:start="2173:29" pos:end="2173:31"><expr pos:start="2173:29" pos:end="2173:31"><name pos:start="2173:29" pos:end="2173:31">tmp</name></expr></argument>, <argument pos:start="2173:34" pos:end="2173:37"><expr pos:start="2173:34" pos:end="2173:37"><name pos:start="2173:34" pos:end="2173:37">tmp2</name></expr></argument>, <argument pos:start="2173:40" pos:end="2173:40"><expr pos:start="2173:40" pos:end="2173:40"><name pos:start="2173:40" pos:end="2173:40">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="2175:17" pos:end="2177:43">else<block type="pseudo" pos:start="2177:21" pos:end="2177:43"><block_content pos:start="2177:21" pos:end="2177:43">

                    <expr_stmt pos:start="2177:21" pos:end="2177:43"><expr pos:start="2177:21" pos:end="2177:42"><call pos:start="2177:21" pos:end="2177:42"><name pos:start="2177:21" pos:end="2177:28">gen_st32</name><argument_list pos:start="2177:29" pos:end="2177:42">(<argument pos:start="2177:30" pos:end="2177:32"><expr pos:start="2177:30" pos:end="2177:32"><name pos:start="2177:30" pos:end="2177:32">tmp</name></expr></argument>, <argument pos:start="2177:35" pos:end="2177:38"><expr pos:start="2177:35" pos:end="2177:38"><name pos:start="2177:35" pos:end="2177:38">tmp2</name></expr></argument>, <argument pos:start="2177:41" pos:end="2177:41"><expr pos:start="2177:41" pos:end="2177:41"><name pos:start="2177:41" pos:end="2177:41">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="2181:13" pos:end="2195:13"><if pos:start="2181:13" pos:end="2187:13">if <condition pos:start="2181:16" pos:end="2181:36">(<expr pos:start="2181:17" pos:end="2181:35"><operator pos:start="2181:17" pos:end="2181:17">!</operator><operator pos:start="2181:18" pos:end="2181:18">(</operator><name pos:start="2181:19" pos:end="2181:22">insn</name> <operator pos:start="2181:24" pos:end="2181:24">&amp;</operator> <operator pos:start="2181:26" pos:end="2181:26">(</operator><literal type="number" pos:start="2181:27" pos:end="2181:27">1</literal> <operator pos:start="2181:29" pos:end="2181:30">&lt;&lt;</operator> <literal type="number" pos:start="2181:32" pos:end="2181:33">24</literal><operator pos:start="2181:34" pos:end="2181:34">)</operator><operator pos:start="2181:35" pos:end="2181:35">)</operator></expr>)</condition> <block pos:start="2181:38" pos:end="2187:13">{<block_content pos:start="2183:17" pos:end="2185:39">

                <expr_stmt pos:start="2183:17" pos:end="2183:51"><expr pos:start="2183:17" pos:end="2183:50"><call pos:start="2183:17" pos:end="2183:50"><name pos:start="2183:17" pos:end="2183:35">gen_add_data_offset</name><argument_list pos:start="2183:36" pos:end="2183:50">(<argument pos:start="2183:37" pos:end="2183:37"><expr pos:start="2183:37" pos:end="2183:37"><name pos:start="2183:37" pos:end="2183:37">s</name></expr></argument>, <argument pos:start="2183:40" pos:end="2183:43"><expr pos:start="2183:40" pos:end="2183:43"><name pos:start="2183:40" pos:end="2183:43">insn</name></expr></argument>, <argument pos:start="2183:46" pos:end="2183:49"><expr pos:start="2183:46" pos:end="2183:49"><name pos:start="2183:46" pos:end="2183:49">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2185:17" pos:end="2185:39"><expr pos:start="2185:17" pos:end="2185:38"><call pos:start="2185:17" pos:end="2185:38"><name pos:start="2185:17" pos:end="2185:25">store_reg</name><argument_list pos:start="2185:26" pos:end="2185:38">(<argument pos:start="2185:27" pos:end="2185:27"><expr pos:start="2185:27" pos:end="2185:27"><name pos:start="2185:27" pos:end="2185:27">s</name></expr></argument>, <argument pos:start="2185:30" pos:end="2185:31"><expr pos:start="2185:30" pos:end="2185:31"><name pos:start="2185:30" pos:end="2185:31">rn</name></expr></argument>, <argument pos:start="2185:34" pos:end="2185:37"><expr pos:start="2185:34" pos:end="2185:37"><name pos:start="2185:34" pos:end="2185:37">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="2187:15" pos:end="2191:13">else if <condition pos:start="2187:23" pos:end="2187:40">(<expr pos:start="2187:24" pos:end="2187:39"><name pos:start="2187:24" pos:end="2187:27">insn</name> <operator pos:start="2187:29" pos:end="2187:29">&amp;</operator> <operator pos:start="2187:31" pos:end="2187:31">(</operator><literal type="number" pos:start="2187:32" pos:end="2187:32">1</literal> <operator pos:start="2187:34" pos:end="2187:35">&lt;&lt;</operator> <literal type="number" pos:start="2187:37" pos:end="2187:38">21</literal><operator pos:start="2187:39" pos:end="2187:39">)</operator></expr>)</condition> <block pos:start="2187:42" pos:end="2191:13">{<block_content pos:start="2189:17" pos:end="2189:39">

                <expr_stmt pos:start="2189:17" pos:end="2189:39"><expr pos:start="2189:17" pos:end="2189:38"><call pos:start="2189:17" pos:end="2189:38"><name pos:start="2189:17" pos:end="2189:25">store_reg</name><argument_list pos:start="2189:26" pos:end="2189:38">(<argument pos:start="2189:27" pos:end="2189:27"><expr pos:start="2189:27" pos:end="2189:27"><name pos:start="2189:27" pos:end="2189:27">s</name></expr></argument>, <argument pos:start="2189:30" pos:end="2189:31"><expr pos:start="2189:30" pos:end="2189:31"><name pos:start="2189:30" pos:end="2189:31">rn</name></expr></argument>, <argument pos:start="2189:34" pos:end="2189:37"><expr pos:start="2189:34" pos:end="2189:37"><name pos:start="2189:34" pos:end="2189:37">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="2191:15" pos:end="2195:13">else <block pos:start="2191:20" pos:end="2195:13">{<block_content pos:start="2193:17" pos:end="2193:40">

                <expr_stmt pos:start="2193:17" pos:end="2193:40"><expr pos:start="2193:17" pos:end="2193:39"><call pos:start="2193:17" pos:end="2193:39"><name pos:start="2193:17" pos:end="2193:33">tcg_temp_free_i32</name><argument_list pos:start="2193:34" pos:end="2193:39">(<argument pos:start="2193:35" pos:end="2193:38"><expr pos:start="2193:35" pos:end="2193:38"><name pos:start="2193:35" pos:end="2193:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="2197:13" pos:end="2203:13"><if pos:start="2197:13" pos:end="2203:13">if <condition pos:start="2197:16" pos:end="2197:33">(<expr pos:start="2197:17" pos:end="2197:32"><name pos:start="2197:17" pos:end="2197:20">insn</name> <operator pos:start="2197:22" pos:end="2197:22">&amp;</operator> <operator pos:start="2197:24" pos:end="2197:24">(</operator><literal type="number" pos:start="2197:25" pos:end="2197:25">1</literal> <operator pos:start="2197:27" pos:end="2197:28">&lt;&lt;</operator> <literal type="number" pos:start="2197:30" pos:end="2197:31">20</literal><operator pos:start="2197:32" pos:end="2197:32">)</operator></expr>)</condition> <block pos:start="2197:35" pos:end="2203:13">{<block_content pos:start="2201:17" pos:end="2201:53">

                <comment type="block" pos:start="2199:17" pos:end="2199:41">/* Complete the load.  */</comment>

                <expr_stmt pos:start="2201:17" pos:end="2201:53"><expr pos:start="2201:17" pos:end="2201:52"><call pos:start="2201:17" pos:end="2201:52"><name pos:start="2201:17" pos:end="2201:35">store_reg_from_load</name><argument_list pos:start="2201:36" pos:end="2201:52">(<argument pos:start="2201:37" pos:end="2201:39"><expr pos:start="2201:37" pos:end="2201:39"><name pos:start="2201:37" pos:end="2201:39">env</name></expr></argument>, <argument pos:start="2201:42" pos:end="2201:42"><expr pos:start="2201:42" pos:end="2201:42"><name pos:start="2201:42" pos:end="2201:42">s</name></expr></argument>, <argument pos:start="2201:45" pos:end="2201:46"><expr pos:start="2201:45" pos:end="2201:46"><name pos:start="2201:45" pos:end="2201:46">rd</name></expr></argument>, <argument pos:start="2201:49" pos:end="2201:51"><expr pos:start="2201:49" pos:end="2201:51"><name pos:start="2201:49" pos:end="2201:51">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="2205:13" pos:end="2205:18">break;</break>

        <case pos:start="2207:9" pos:end="2207:18">case <expr pos:start="2207:14" pos:end="2207:17"><literal type="number" pos:start="2207:14" pos:end="2207:17">0x08</literal></expr>:</case>

        <case pos:start="2209:9" pos:end="2209:18">case <expr pos:start="2209:14" pos:end="2209:17"><literal type="number" pos:start="2209:14" pos:end="2209:17">0x09</literal></expr>:</case>

            <block pos:start="2211:13" pos:end="2441:13">{<block_content pos:start="2213:17" pos:end="2439:17">

                <decl_stmt pos:start="2213:17" pos:end="2213:44"><decl pos:start="2213:17" pos:end="2213:21"><type pos:start="2213:17" pos:end="2213:19"><name pos:start="2213:17" pos:end="2213:19">int</name></type> <name pos:start="2213:21" pos:end="2213:21">j</name></decl>, <decl pos:start="2213:24" pos:end="2213:24"><type ref="prev" pos:start="2213:17" pos:end="2213:19"/><name pos:start="2213:24" pos:end="2213:24">n</name></decl>, <decl pos:start="2213:27" pos:end="2213:30"><type ref="prev" pos:start="2213:17" pos:end="2213:19"/><name pos:start="2213:27" pos:end="2213:30">user</name></decl>, <decl pos:start="2213:33" pos:end="2213:43"><type ref="prev" pos:start="2213:17" pos:end="2213:19"/><name pos:start="2213:33" pos:end="2213:43">loaded_base</name></decl>;</decl_stmt>

                <decl_stmt pos:start="2215:17" pos:end="2215:32"><decl pos:start="2215:17" pos:end="2215:31"><type pos:start="2215:17" pos:end="2215:20"><name pos:start="2215:17" pos:end="2215:20">TCGv</name></type> <name pos:start="2215:22" pos:end="2215:31">loaded_var</name></decl>;</decl_stmt>

                <comment type="block" pos:start="2217:17" pos:end="2217:47">/* load/store multiple words */</comment>

                <comment type="block" pos:start="2219:17" pos:end="2219:59">/* XXX: store correct base if write back */</comment>

                <expr_stmt pos:start="2221:17" pos:end="2221:25"><expr pos:start="2221:17" pos:end="2221:24"><name pos:start="2221:17" pos:end="2221:20">user</name> <operator pos:start="2221:22" pos:end="2221:22">=</operator> <literal type="number" pos:start="2221:24" pos:end="2221:24">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="2223:17" pos:end="2235:17"><if pos:start="2223:17" pos:end="2235:17">if <condition pos:start="2223:20" pos:end="2223:37">(<expr pos:start="2223:21" pos:end="2223:36"><name pos:start="2223:21" pos:end="2223:24">insn</name> <operator pos:start="2223:26" pos:end="2223:26">&amp;</operator> <operator pos:start="2223:28" pos:end="2223:28">(</operator><literal type="number" pos:start="2223:29" pos:end="2223:29">1</literal> <operator pos:start="2223:31" pos:end="2223:32">&lt;&lt;</operator> <literal type="number" pos:start="2223:34" pos:end="2223:35">22</literal><operator pos:start="2223:36" pos:end="2223:36">)</operator></expr>)</condition> <block pos:start="2223:39" pos:end="2235:17">{<block_content pos:start="2225:21" pos:end="2233:33">

                    <if_stmt pos:start="2225:21" pos:end="2227:40"><if pos:start="2225:21" pos:end="2227:40">if <condition pos:start="2225:24" pos:end="2225:35">(<expr pos:start="2225:25" pos:end="2225:34"><call pos:start="2225:25" pos:end="2225:34"><name pos:start="2225:25" pos:end="2225:31">IS_USER</name><argument_list pos:start="2225:32" pos:end="2225:34">(<argument pos:start="2225:33" pos:end="2225:33"><expr pos:start="2225:33" pos:end="2225:33"><name pos:start="2225:33" pos:end="2225:33">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2227:25" pos:end="2227:40"><block_content pos:start="2227:25" pos:end="2227:40">

                        <goto pos:start="2227:25" pos:end="2227:40">goto <name pos:start="2227:30" pos:end="2227:39">illegal_op</name>;</goto></block_content></block></if></if_stmt> <comment type="block" pos:start="2227:42" pos:end="2227:77">/* only usable in supervisor mode */</comment>



                    <if_stmt pos:start="2231:21" pos:end="2233:33"><if pos:start="2231:21" pos:end="2233:33">if <condition pos:start="2231:24" pos:end="2231:48">(<expr pos:start="2231:25" pos:end="2231:47"><operator pos:start="2231:25" pos:end="2231:25">(</operator><name pos:start="2231:26" pos:end="2231:29">insn</name> <operator pos:start="2231:31" pos:end="2231:31">&amp;</operator> <operator pos:start="2231:33" pos:end="2231:33">(</operator><literal type="number" pos:start="2231:34" pos:end="2231:34">1</literal> <operator pos:start="2231:36" pos:end="2231:37">&lt;&lt;</operator> <literal type="number" pos:start="2231:39" pos:end="2231:40">15</literal><operator pos:start="2231:41" pos:end="2231:41">)</operator><operator pos:start="2231:42" pos:end="2231:42">)</operator> <operator pos:start="2231:44" pos:end="2231:45">==</operator> <literal type="number" pos:start="2231:47" pos:end="2231:47">0</literal></expr>)</condition><block type="pseudo" pos:start="2233:25" pos:end="2233:33"><block_content pos:start="2233:25" pos:end="2233:33">

                        <expr_stmt pos:start="2233:25" pos:end="2233:33"><expr pos:start="2233:25" pos:end="2233:32"><name pos:start="2233:25" pos:end="2233:28">user</name> <operator pos:start="2233:30" pos:end="2233:30">=</operator> <literal type="number" pos:start="2233:32" pos:end="2233:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="2237:17" pos:end="2237:40"><expr pos:start="2237:17" pos:end="2237:39"><name pos:start="2237:17" pos:end="2237:18">rn</name> <operator pos:start="2237:20" pos:end="2237:20">=</operator> <operator pos:start="2237:22" pos:end="2237:22">(</operator><name pos:start="2237:23" pos:end="2237:26">insn</name> <operator pos:start="2237:28" pos:end="2237:29">&gt;&gt;</operator> <literal type="number" pos:start="2237:31" pos:end="2237:32">16</literal><operator pos:start="2237:33" pos:end="2237:33">)</operator> <operator pos:start="2237:35" pos:end="2237:35">&amp;</operator> <literal type="number" pos:start="2237:37" pos:end="2237:39">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="2239:17" pos:end="2239:39"><expr pos:start="2239:17" pos:end="2239:38"><name pos:start="2239:17" pos:end="2239:20">addr</name> <operator pos:start="2239:22" pos:end="2239:22">=</operator> <call pos:start="2239:24" pos:end="2239:38"><name pos:start="2239:24" pos:end="2239:31">load_reg</name><argument_list pos:start="2239:32" pos:end="2239:38">(<argument pos:start="2239:33" pos:end="2239:33"><expr pos:start="2239:33" pos:end="2239:33"><name pos:start="2239:33" pos:end="2239:33">s</name></expr></argument>, <argument pos:start="2239:36" pos:end="2239:37"><expr pos:start="2239:36" pos:end="2239:37"><name pos:start="2239:36" pos:end="2239:37">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <comment type="block" pos:start="2243:17" pos:end="2243:40">/* compute total size */</comment>

                <expr_stmt pos:start="2245:17" pos:end="2245:32"><expr pos:start="2245:17" pos:end="2245:31"><name pos:start="2245:17" pos:end="2245:27">loaded_base</name> <operator pos:start="2245:29" pos:end="2245:29">=</operator> <literal type="number" pos:start="2245:31" pos:end="2245:31">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="2247:17" pos:end="2247:40"><expr pos:start="2247:17" pos:end="2247:39"><call pos:start="2247:17" pos:end="2247:39"><name pos:start="2247:17" pos:end="2247:27">TCGV_UNUSED</name><argument_list pos:start="2247:28" pos:end="2247:39">(<argument pos:start="2247:29" pos:end="2247:38"><expr pos:start="2247:29" pos:end="2247:38"><name pos:start="2247:29" pos:end="2247:38">loaded_var</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2249:17" pos:end="2249:22"><expr pos:start="2249:17" pos:end="2249:21"><name pos:start="2249:17" pos:end="2249:17">n</name> <operator pos:start="2249:19" pos:end="2249:19">=</operator> <literal type="number" pos:start="2249:21" pos:end="2249:21">0</literal></expr>;</expr_stmt>

                <for pos:start="2251:17" pos:end="2257:17">for<control pos:start="2251:20" pos:end="2251:33">(<init pos:start="2251:21" pos:end="2251:24"><expr pos:start="2251:21" pos:end="2251:23"><name pos:start="2251:21" pos:end="2251:21">i</name><operator pos:start="2251:22" pos:end="2251:22">=</operator><literal type="number" pos:start="2251:23" pos:end="2251:23">0</literal></expr>;</init><condition pos:start="2251:25" pos:end="2251:29"><expr pos:start="2251:25" pos:end="2251:28"><name pos:start="2251:25" pos:end="2251:25">i</name><operator pos:start="2251:26" pos:end="2251:26">&lt;</operator><literal type="number" pos:start="2251:27" pos:end="2251:28">16</literal></expr>;</condition><incr pos:start="2251:30" pos:end="2251:32"><expr pos:start="2251:30" pos:end="2251:32"><name pos:start="2251:30" pos:end="2251:30">i</name><operator pos:start="2251:31" pos:end="2251:32">++</operator></expr></incr>)</control> <block pos:start="2251:35" pos:end="2257:17">{<block_content pos:start="2253:21" pos:end="2255:28">

                    <if_stmt pos:start="2253:21" pos:end="2255:28"><if pos:start="2253:21" pos:end="2255:28">if <condition pos:start="2253:24" pos:end="2253:40">(<expr pos:start="2253:25" pos:end="2253:39"><name pos:start="2253:25" pos:end="2253:28">insn</name> <operator pos:start="2253:30" pos:end="2253:30">&amp;</operator> <operator pos:start="2253:32" pos:end="2253:32">(</operator><literal type="number" pos:start="2253:33" pos:end="2253:33">1</literal> <operator pos:start="2253:35" pos:end="2253:36">&lt;&lt;</operator> <name pos:start="2253:38" pos:end="2253:38">i</name><operator pos:start="2253:39" pos:end="2253:39">)</operator></expr>)</condition><block type="pseudo" pos:start="2255:25" pos:end="2255:28"><block_content pos:start="2255:25" pos:end="2255:28">

                        <expr_stmt pos:start="2255:25" pos:end="2255:28"><expr pos:start="2255:25" pos:end="2255:27"><name pos:start="2255:25" pos:end="2255:25">n</name><operator pos:start="2255:26" pos:end="2255:27">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></for>

                <comment type="block" pos:start="2259:17" pos:end="2259:53">/* XXX: test invalid n == 0 case ? */</comment>

                <if_stmt pos:start="2261:17" pos:end="2293:17"><if pos:start="2261:17" pos:end="2275:17">if <condition pos:start="2261:20" pos:end="2261:37">(<expr pos:start="2261:21" pos:end="2261:36"><name pos:start="2261:21" pos:end="2261:24">insn</name> <operator pos:start="2261:26" pos:end="2261:26">&amp;</operator> <operator pos:start="2261:28" pos:end="2261:28">(</operator><literal type="number" pos:start="2261:29" pos:end="2261:29">1</literal> <operator pos:start="2261:31" pos:end="2261:32">&lt;&lt;</operator> <literal type="number" pos:start="2261:34" pos:end="2261:35">23</literal><operator pos:start="2261:36" pos:end="2261:36">)</operator></expr>)</condition> <block pos:start="2261:39" pos:end="2275:17">{<block_content pos:start="2263:21" pos:end="2273:21">

                    <if_stmt pos:start="2263:21" pos:end="2273:21"><if pos:start="2263:21" pos:end="2269:21">if <condition pos:start="2263:24" pos:end="2263:41">(<expr pos:start="2263:25" pos:end="2263:40"><name pos:start="2263:25" pos:end="2263:28">insn</name> <operator pos:start="2263:30" pos:end="2263:30">&amp;</operator> <operator pos:start="2263:32" pos:end="2263:32">(</operator><literal type="number" pos:start="2263:33" pos:end="2263:33">1</literal> <operator pos:start="2263:35" pos:end="2263:36">&lt;&lt;</operator> <literal type="number" pos:start="2263:38" pos:end="2263:39">24</literal><operator pos:start="2263:40" pos:end="2263:40">)</operator></expr>)</condition> <block pos:start="2263:43" pos:end="2269:21">{<block_content pos:start="2267:25" pos:end="2267:56">

                        <comment type="block" pos:start="2265:25" pos:end="2265:43">/* pre increment */</comment>

                        <expr_stmt pos:start="2267:25" pos:end="2267:56"><expr pos:start="2267:25" pos:end="2267:55"><call pos:start="2267:25" pos:end="2267:55"><name pos:start="2267:25" pos:end="2267:40">tcg_gen_addi_i32</name><argument_list pos:start="2267:41" pos:end="2267:55">(<argument pos:start="2267:42" pos:end="2267:45"><expr pos:start="2267:42" pos:end="2267:45"><name pos:start="2267:42" pos:end="2267:45">addr</name></expr></argument>, <argument pos:start="2267:48" pos:end="2267:51"><expr pos:start="2267:48" pos:end="2267:51"><name pos:start="2267:48" pos:end="2267:51">addr</name></expr></argument>, <argument pos:start="2267:54" pos:end="2267:54"><expr pos:start="2267:54" pos:end="2267:54"><literal type="number" pos:start="2267:54" pos:end="2267:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="2269:23" pos:end="2273:21">else <block pos:start="2269:28" pos:end="2273:21">{<block_content>

                        <comment type="block" pos:start="2271:25" pos:end="2271:44">/* post increment */</comment>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="2275:19" pos:end="2293:17">else <block pos:start="2275:24" pos:end="2293:17">{<block_content pos:start="2277:21" pos:end="2291:21">

                    <if_stmt pos:start="2277:21" pos:end="2291:21"><if pos:start="2277:21" pos:end="2283:21">if <condition pos:start="2277:24" pos:end="2277:41">(<expr pos:start="2277:25" pos:end="2277:40"><name pos:start="2277:25" pos:end="2277:28">insn</name> <operator pos:start="2277:30" pos:end="2277:30">&amp;</operator> <operator pos:start="2277:32" pos:end="2277:32">(</operator><literal type="number" pos:start="2277:33" pos:end="2277:33">1</literal> <operator pos:start="2277:35" pos:end="2277:36">&lt;&lt;</operator> <literal type="number" pos:start="2277:38" pos:end="2277:39">24</literal><operator pos:start="2277:40" pos:end="2277:40">)</operator></expr>)</condition> <block pos:start="2277:43" pos:end="2283:21">{<block_content pos:start="2281:25" pos:end="2281:63">

                        <comment type="block" pos:start="2279:25" pos:end="2279:43">/* pre decrement */</comment>

                        <expr_stmt pos:start="2281:25" pos:end="2281:63"><expr pos:start="2281:25" pos:end="2281:62"><call pos:start="2281:25" pos:end="2281:62"><name pos:start="2281:25" pos:end="2281:40">tcg_gen_addi_i32</name><argument_list pos:start="2281:41" pos:end="2281:62">(<argument pos:start="2281:42" pos:end="2281:45"><expr pos:start="2281:42" pos:end="2281:45"><name pos:start="2281:42" pos:end="2281:45">addr</name></expr></argument>, <argument pos:start="2281:48" pos:end="2281:51"><expr pos:start="2281:48" pos:end="2281:51"><name pos:start="2281:48" pos:end="2281:51">addr</name></expr></argument>, <argument pos:start="2281:54" pos:end="2281:61"><expr pos:start="2281:54" pos:end="2281:61"><operator pos:start="2281:54" pos:end="2281:54">-</operator><operator pos:start="2281:55" pos:end="2281:55">(</operator><name pos:start="2281:56" pos:end="2281:56">n</name> <operator pos:start="2281:58" pos:end="2281:58">*</operator> <literal type="number" pos:start="2281:60" pos:end="2281:60">4</literal><operator pos:start="2281:61" pos:end="2281:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="2283:23" pos:end="2291:21">else <block pos:start="2283:28" pos:end="2291:21">{<block_content pos:start="2287:25" pos:end="2289:69">

                        <comment type="block" pos:start="2285:25" pos:end="2285:44">/* post decrement */</comment>

                        <if_stmt pos:start="2287:25" pos:end="2289:69"><if pos:start="2287:25" pos:end="2289:69">if <condition pos:start="2287:28" pos:end="2287:35">(<expr pos:start="2287:29" pos:end="2287:34"><name pos:start="2287:29" pos:end="2287:29">n</name> <operator pos:start="2287:31" pos:end="2287:32">!=</operator> <literal type="number" pos:start="2287:34" pos:end="2287:34">1</literal></expr>)</condition><block type="pseudo" pos:start="2289:25" pos:end="2289:69"><block_content pos:start="2289:25" pos:end="2289:69">

                        <expr_stmt pos:start="2289:25" pos:end="2289:69"><expr pos:start="2289:25" pos:end="2289:68"><call pos:start="2289:25" pos:end="2289:68"><name pos:start="2289:25" pos:end="2289:40">tcg_gen_addi_i32</name><argument_list pos:start="2289:41" pos:end="2289:68">(<argument pos:start="2289:42" pos:end="2289:45"><expr pos:start="2289:42" pos:end="2289:45"><name pos:start="2289:42" pos:end="2289:45">addr</name></expr></argument>, <argument pos:start="2289:48" pos:end="2289:51"><expr pos:start="2289:48" pos:end="2289:51"><name pos:start="2289:48" pos:end="2289:51">addr</name></expr></argument>, <argument pos:start="2289:54" pos:end="2289:67"><expr pos:start="2289:54" pos:end="2289:67"><operator pos:start="2289:54" pos:end="2289:54">-</operator><operator pos:start="2289:55" pos:end="2289:55">(</operator><operator pos:start="2289:56" pos:end="2289:56">(</operator><name pos:start="2289:57" pos:end="2289:57">n</name> <operator pos:start="2289:59" pos:end="2289:59">-</operator> <literal type="number" pos:start="2289:61" pos:end="2289:61">1</literal><operator pos:start="2289:62" pos:end="2289:62">)</operator> <operator pos:start="2289:64" pos:end="2289:64">*</operator> <literal type="number" pos:start="2289:66" pos:end="2289:66">4</literal><operator pos:start="2289:67" pos:end="2289:67">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="2295:17" pos:end="2295:22"><expr pos:start="2295:17" pos:end="2295:21"><name pos:start="2295:17" pos:end="2295:17">j</name> <operator pos:start="2295:19" pos:end="2295:19">=</operator> <literal type="number" pos:start="2295:21" pos:end="2295:21">0</literal></expr>;</expr_stmt>

                <for pos:start="2297:17" pos:end="2373:17">for<control pos:start="2297:20" pos:end="2297:33">(<init pos:start="2297:21" pos:end="2297:24"><expr pos:start="2297:21" pos:end="2297:23"><name pos:start="2297:21" pos:end="2297:21">i</name><operator pos:start="2297:22" pos:end="2297:22">=</operator><literal type="number" pos:start="2297:23" pos:end="2297:23">0</literal></expr>;</init><condition pos:start="2297:25" pos:end="2297:29"><expr pos:start="2297:25" pos:end="2297:28"><name pos:start="2297:25" pos:end="2297:25">i</name><operator pos:start="2297:26" pos:end="2297:26">&lt;</operator><literal type="number" pos:start="2297:27" pos:end="2297:28">16</literal></expr>;</condition><incr pos:start="2297:30" pos:end="2297:32"><expr pos:start="2297:30" pos:end="2297:32"><name pos:start="2297:30" pos:end="2297:30">i</name><operator pos:start="2297:31" pos:end="2297:32">++</operator></expr></incr>)</control> <block pos:start="2297:35" pos:end="2373:17">{<block_content pos:start="2299:21" pos:end="2371:21">

                    <if_stmt pos:start="2299:21" pos:end="2371:21"><if pos:start="2299:21" pos:end="2371:21">if <condition pos:start="2299:24" pos:end="2299:40">(<expr pos:start="2299:25" pos:end="2299:39"><name pos:start="2299:25" pos:end="2299:28">insn</name> <operator pos:start="2299:30" pos:end="2299:30">&amp;</operator> <operator pos:start="2299:32" pos:end="2299:32">(</operator><literal type="number" pos:start="2299:33" pos:end="2299:33">1</literal> <operator pos:start="2299:35" pos:end="2299:36">&lt;&lt;</operator> <name pos:start="2299:38" pos:end="2299:38">i</name><operator pos:start="2299:39" pos:end="2299:39">)</operator></expr>)</condition> <block pos:start="2299:42" pos:end="2371:21">{<block_content pos:start="2301:25" pos:end="2369:60">

                        <if_stmt pos:start="2301:25" pos:end="2361:25"><if pos:start="2301:25" pos:end="2329:25">if <condition pos:start="2301:28" pos:end="2301:45">(<expr pos:start="2301:29" pos:end="2301:44"><name pos:start="2301:29" pos:end="2301:32">insn</name> <operator pos:start="2301:34" pos:end="2301:34">&amp;</operator> <operator pos:start="2301:36" pos:end="2301:36">(</operator><literal type="number" pos:start="2301:37" pos:end="2301:37">1</literal> <operator pos:start="2301:39" pos:end="2301:40">&lt;&lt;</operator> <literal type="number" pos:start="2301:42" pos:end="2301:43">20</literal><operator pos:start="2301:44" pos:end="2301:44">)</operator></expr>)</condition> <block pos:start="2301:47" pos:end="2329:25">{<block_content pos:start="2305:29" pos:end="2327:29">

                            <comment type="block" pos:start="2303:29" pos:end="2303:38">/* load */</comment>

                            <expr_stmt pos:start="2305:29" pos:end="2305:61"><expr pos:start="2305:29" pos:end="2305:60"><name pos:start="2305:29" pos:end="2305:31">tmp</name> <operator pos:start="2305:33" pos:end="2305:33">=</operator> <call pos:start="2305:35" pos:end="2305:60"><name pos:start="2305:35" pos:end="2305:42">gen_ld32</name><argument_list pos:start="2305:43" pos:end="2305:60">(<argument pos:start="2305:44" pos:end="2305:47"><expr pos:start="2305:44" pos:end="2305:47"><name pos:start="2305:44" pos:end="2305:47">addr</name></expr></argument>, <argument pos:start="2305:50" pos:end="2305:59"><expr pos:start="2305:50" pos:end="2305:59"><call pos:start="2305:50" pos:end="2305:59"><name pos:start="2305:50" pos:end="2305:56">IS_USER</name><argument_list pos:start="2305:57" pos:end="2305:59">(<argument pos:start="2305:58" pos:end="2305:58"><expr pos:start="2305:58" pos:end="2305:58"><name pos:start="2305:58" pos:end="2305:58">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="2307:29" pos:end="2327:29"><if pos:start="2307:29" pos:end="2317:29">if <condition pos:start="2307:32" pos:end="2307:37">(<expr pos:start="2307:33" pos:end="2307:36"><name pos:start="2307:33" pos:end="2307:36">user</name></expr>)</condition> <block pos:start="2307:39" pos:end="2317:29">{<block_content pos:start="2309:33" pos:end="2315:55">

                                <expr_stmt pos:start="2309:33" pos:end="2309:56"><expr pos:start="2309:33" pos:end="2309:55"><name pos:start="2309:33" pos:end="2309:36">tmp2</name> <operator pos:start="2309:38" pos:end="2309:38">=</operator> <call pos:start="2309:40" pos:end="2309:55"><name pos:start="2309:40" pos:end="2309:52">tcg_const_i32</name><argument_list pos:start="2309:53" pos:end="2309:55">(<argument pos:start="2309:54" pos:end="2309:54"><expr pos:start="2309:54" pos:end="2309:54"><name pos:start="2309:54" pos:end="2309:54">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2311:33" pos:end="2311:76"><expr pos:start="2311:33" pos:end="2311:75"><call pos:start="2311:33" pos:end="2311:75"><name pos:start="2311:33" pos:end="2311:55">gen_helper_set_user_reg</name><argument_list pos:start="2311:56" pos:end="2311:75">(<argument pos:start="2311:57" pos:end="2311:63"><expr pos:start="2311:57" pos:end="2311:63"><name pos:start="2311:57" pos:end="2311:63">cpu_env</name></expr></argument>, <argument pos:start="2311:66" pos:end="2311:69"><expr pos:start="2311:66" pos:end="2311:69"><name pos:start="2311:66" pos:end="2311:69">tmp2</name></expr></argument>, <argument pos:start="2311:72" pos:end="2311:74"><expr pos:start="2311:72" pos:end="2311:74"><name pos:start="2311:72" pos:end="2311:74">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2313:33" pos:end="2313:56"><expr pos:start="2313:33" pos:end="2313:55"><call pos:start="2313:33" pos:end="2313:55"><name pos:start="2313:33" pos:end="2313:49">tcg_temp_free_i32</name><argument_list pos:start="2313:50" pos:end="2313:55">(<argument pos:start="2313:51" pos:end="2313:54"><expr pos:start="2313:51" pos:end="2313:54"><name pos:start="2313:51" pos:end="2313:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2315:33" pos:end="2315:55"><expr pos:start="2315:33" pos:end="2315:54"><call pos:start="2315:33" pos:end="2315:54"><name pos:start="2315:33" pos:end="2315:49">tcg_temp_free_i32</name><argument_list pos:start="2315:50" pos:end="2315:54">(<argument pos:start="2315:51" pos:end="2315:53"><expr pos:start="2315:51" pos:end="2315:53"><name pos:start="2315:51" pos:end="2315:53">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <if type="elseif" pos:start="2317:31" pos:end="2323:29">else if <condition pos:start="2317:39" pos:end="2317:47">(<expr pos:start="2317:40" pos:end="2317:46"><name pos:start="2317:40" pos:end="2317:40">i</name> <operator pos:start="2317:42" pos:end="2317:43">==</operator> <name pos:start="2317:45" pos:end="2317:46">rn</name></expr>)</condition> <block pos:start="2317:49" pos:end="2323:29">{<block_content pos:start="2319:33" pos:end="2321:48">

                                <expr_stmt pos:start="2319:33" pos:end="2319:49"><expr pos:start="2319:33" pos:end="2319:48"><name pos:start="2319:33" pos:end="2319:42">loaded_var</name> <operator pos:start="2319:44" pos:end="2319:44">=</operator> <name pos:start="2319:46" pos:end="2319:48">tmp</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="2321:33" pos:end="2321:48"><expr pos:start="2321:33" pos:end="2321:47"><name pos:start="2321:33" pos:end="2321:43">loaded_base</name> <operator pos:start="2321:45" pos:end="2321:45">=</operator> <literal type="number" pos:start="2321:47" pos:end="2321:47">1</literal></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="2323:31" pos:end="2327:29">else <block pos:start="2323:36" pos:end="2327:29">{<block_content pos:start="2325:33" pos:end="2325:68">

                                <expr_stmt pos:start="2325:33" pos:end="2325:68"><expr pos:start="2325:33" pos:end="2325:67"><call pos:start="2325:33" pos:end="2325:67"><name pos:start="2325:33" pos:end="2325:51">store_reg_from_load</name><argument_list pos:start="2325:52" pos:end="2325:67">(<argument pos:start="2325:53" pos:end="2325:55"><expr pos:start="2325:53" pos:end="2325:55"><name pos:start="2325:53" pos:end="2325:55">env</name></expr></argument>, <argument pos:start="2325:58" pos:end="2325:58"><expr pos:start="2325:58" pos:end="2325:58"><name pos:start="2325:58" pos:end="2325:58">s</name></expr></argument>, <argument pos:start="2325:61" pos:end="2325:61"><expr pos:start="2325:61" pos:end="2325:61"><name pos:start="2325:61" pos:end="2325:61">i</name></expr></argument>, <argument pos:start="2325:64" pos:end="2325:66"><expr pos:start="2325:64" pos:end="2325:66"><name pos:start="2325:64" pos:end="2325:66">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if> <else pos:start="2329:27" pos:end="2361:25">else <block pos:start="2329:32" pos:end="2361:25">{<block_content pos:start="2333:29" pos:end="2359:60">

                            <comment type="block" pos:start="2331:29" pos:end="2331:39">/* store */</comment>

                            <if_stmt pos:start="2333:29" pos:end="2357:29"><if pos:start="2333:29" pos:end="2343:29">if <condition pos:start="2333:32" pos:end="2333:40">(<expr pos:start="2333:33" pos:end="2333:39"><name pos:start="2333:33" pos:end="2333:33">i</name> <operator pos:start="2333:35" pos:end="2333:36">==</operator> <literal type="number" pos:start="2333:38" pos:end="2333:39">15</literal></expr>)</condition> <block pos:start="2333:42" pos:end="2343:29">{<block_content pos:start="2337:33" pos:end="2341:59">

                                <comment type="block" pos:start="2335:33" pos:end="2335:64">/* special case: r15 = PC + 8 */</comment>

                                <expr_stmt pos:start="2337:33" pos:end="2337:54"><expr pos:start="2337:33" pos:end="2337:53"><name pos:start="2337:33" pos:end="2337:35">val</name> <operator pos:start="2337:37" pos:end="2337:37">=</operator> <operator pos:start="2337:39" pos:end="2337:39">(</operator><name pos:start="2337:40" pos:end="2337:43">long</name><operator pos:start="2337:44" pos:end="2337:44">)</operator><name pos:start="2337:45" pos:end="2337:49"><name pos:start="2337:45" pos:end="2337:45">s</name><operator pos:start="2337:46" pos:end="2337:47">-&gt;</operator><name pos:start="2337:48" pos:end="2337:49">pc</name></name> <operator pos:start="2337:51" pos:end="2337:51">+</operator> <literal type="number" pos:start="2337:53" pos:end="2337:53">4</literal></expr>;</expr_stmt>

                                <expr_stmt pos:start="2339:33" pos:end="2339:57"><expr pos:start="2339:33" pos:end="2339:56"><name pos:start="2339:33" pos:end="2339:35">tmp</name> <operator pos:start="2339:37" pos:end="2339:37">=</operator> <call pos:start="2339:39" pos:end="2339:56"><name pos:start="2339:39" pos:end="2339:54">tcg_temp_new_i32</name><argument_list pos:start="2339:55" pos:end="2339:56">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2341:33" pos:end="2341:59"><expr pos:start="2341:33" pos:end="2341:58"><call pos:start="2341:33" pos:end="2341:58"><name pos:start="2341:33" pos:end="2341:48">tcg_gen_movi_i32</name><argument_list pos:start="2341:49" pos:end="2341:58">(<argument pos:start="2341:50" pos:end="2341:52"><expr pos:start="2341:50" pos:end="2341:52"><name pos:start="2341:50" pos:end="2341:52">tmp</name></expr></argument>, <argument pos:start="2341:55" pos:end="2341:57"><expr pos:start="2341:55" pos:end="2341:57"><name pos:start="2341:55" pos:end="2341:57">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <if type="elseif" pos:start="2343:31" pos:end="2353:29">else if <condition pos:start="2343:39" pos:end="2343:44">(<expr pos:start="2343:40" pos:end="2343:43"><name pos:start="2343:40" pos:end="2343:43">user</name></expr>)</condition> <block pos:start="2343:46" pos:end="2353:29">{<block_content pos:start="2345:33" pos:end="2351:56">

                                <expr_stmt pos:start="2345:33" pos:end="2345:57"><expr pos:start="2345:33" pos:end="2345:56"><name pos:start="2345:33" pos:end="2345:35">tmp</name> <operator pos:start="2345:37" pos:end="2345:37">=</operator> <call pos:start="2345:39" pos:end="2345:56"><name pos:start="2345:39" pos:end="2345:54">tcg_temp_new_i32</name><argument_list pos:start="2345:55" pos:end="2345:56">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2347:33" pos:end="2347:56"><expr pos:start="2347:33" pos:end="2347:55"><name pos:start="2347:33" pos:end="2347:36">tmp2</name> <operator pos:start="2347:38" pos:end="2347:38">=</operator> <call pos:start="2347:40" pos:end="2347:55"><name pos:start="2347:40" pos:end="2347:52">tcg_const_i32</name><argument_list pos:start="2347:53" pos:end="2347:55">(<argument pos:start="2347:54" pos:end="2347:54"><expr pos:start="2347:54" pos:end="2347:54"><name pos:start="2347:54" pos:end="2347:54">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2349:33" pos:end="2349:76"><expr pos:start="2349:33" pos:end="2349:75"><call pos:start="2349:33" pos:end="2349:75"><name pos:start="2349:33" pos:end="2349:55">gen_helper_get_user_reg</name><argument_list pos:start="2349:56" pos:end="2349:75">(<argument pos:start="2349:57" pos:end="2349:59"><expr pos:start="2349:57" pos:end="2349:59"><name pos:start="2349:57" pos:end="2349:59">tmp</name></expr></argument>, <argument pos:start="2349:62" pos:end="2349:68"><expr pos:start="2349:62" pos:end="2349:68"><name pos:start="2349:62" pos:end="2349:68">cpu_env</name></expr></argument>, <argument pos:start="2349:71" pos:end="2349:74"><expr pos:start="2349:71" pos:end="2349:74"><name pos:start="2349:71" pos:end="2349:74">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2351:33" pos:end="2351:56"><expr pos:start="2351:33" pos:end="2351:55"><call pos:start="2351:33" pos:end="2351:55"><name pos:start="2351:33" pos:end="2351:49">tcg_temp_free_i32</name><argument_list pos:start="2351:50" pos:end="2351:55">(<argument pos:start="2351:51" pos:end="2351:54"><expr pos:start="2351:51" pos:end="2351:54"><name pos:start="2351:51" pos:end="2351:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="2353:31" pos:end="2357:29">else <block pos:start="2353:36" pos:end="2357:29">{<block_content pos:start="2355:33" pos:end="2355:53">

                                <expr_stmt pos:start="2355:33" pos:end="2355:53"><expr pos:start="2355:33" pos:end="2355:52"><name pos:start="2355:33" pos:end="2355:35">tmp</name> <operator pos:start="2355:37" pos:end="2355:37">=</operator> <call pos:start="2355:39" pos:end="2355:52"><name pos:start="2355:39" pos:end="2355:46">load_reg</name><argument_list pos:start="2355:47" pos:end="2355:52">(<argument pos:start="2355:48" pos:end="2355:48"><expr pos:start="2355:48" pos:end="2355:48"><name pos:start="2355:48" pos:end="2355:48">s</name></expr></argument>, <argument pos:start="2355:51" pos:end="2355:51"><expr pos:start="2355:51" pos:end="2355:51"><name pos:start="2355:51" pos:end="2355:51">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                            <expr_stmt pos:start="2359:29" pos:end="2359:60"><expr pos:start="2359:29" pos:end="2359:59"><call pos:start="2359:29" pos:end="2359:59"><name pos:start="2359:29" pos:end="2359:36">gen_st32</name><argument_list pos:start="2359:37" pos:end="2359:59">(<argument pos:start="2359:38" pos:end="2359:40"><expr pos:start="2359:38" pos:end="2359:40"><name pos:start="2359:38" pos:end="2359:40">tmp</name></expr></argument>, <argument pos:start="2359:43" pos:end="2359:46"><expr pos:start="2359:43" pos:end="2359:46"><name pos:start="2359:43" pos:end="2359:46">addr</name></expr></argument>, <argument pos:start="2359:49" pos:end="2359:58"><expr pos:start="2359:49" pos:end="2359:58"><call pos:start="2359:49" pos:end="2359:58"><name pos:start="2359:49" pos:end="2359:55">IS_USER</name><argument_list pos:start="2359:56" pos:end="2359:58">(<argument pos:start="2359:57" pos:end="2359:57"><expr pos:start="2359:57" pos:end="2359:57"><name pos:start="2359:57" pos:end="2359:57">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="2363:25" pos:end="2363:28"><expr pos:start="2363:25" pos:end="2363:27"><name pos:start="2363:25" pos:end="2363:25">j</name><operator pos:start="2363:26" pos:end="2363:27">++</operator></expr>;</expr_stmt>

                        <comment type="block" pos:start="2365:25" pos:end="2365:68">/* no need to add after the last transfer */</comment>

                        <if_stmt pos:start="2367:25" pos:end="2369:60"><if pos:start="2367:25" pos:end="2369:60">if <condition pos:start="2367:28" pos:end="2367:35">(<expr pos:start="2367:29" pos:end="2367:34"><name pos:start="2367:29" pos:end="2367:29">j</name> <operator pos:start="2367:31" pos:end="2367:32">!=</operator> <name pos:start="2367:34" pos:end="2367:34">n</name></expr>)</condition><block type="pseudo" pos:start="2369:29" pos:end="2369:60"><block_content pos:start="2369:29" pos:end="2369:60">

                            <expr_stmt pos:start="2369:29" pos:end="2369:60"><expr pos:start="2369:29" pos:end="2369:59"><call pos:start="2369:29" pos:end="2369:59"><name pos:start="2369:29" pos:end="2369:44">tcg_gen_addi_i32</name><argument_list pos:start="2369:45" pos:end="2369:59">(<argument pos:start="2369:46" pos:end="2369:49"><expr pos:start="2369:46" pos:end="2369:49"><name pos:start="2369:46" pos:end="2369:49">addr</name></expr></argument>, <argument pos:start="2369:52" pos:end="2369:55"><expr pos:start="2369:52" pos:end="2369:55"><name pos:start="2369:52" pos:end="2369:55">addr</name></expr></argument>, <argument pos:start="2369:58" pos:end="2369:58"><expr pos:start="2369:58" pos:end="2369:58"><literal type="number" pos:start="2369:58" pos:end="2369:58">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

                <if_stmt pos:start="2375:17" pos:end="2419:17"><if pos:start="2375:17" pos:end="2415:17">if <condition pos:start="2375:20" pos:end="2375:37">(<expr pos:start="2375:21" pos:end="2375:36"><name pos:start="2375:21" pos:end="2375:24">insn</name> <operator pos:start="2375:26" pos:end="2375:26">&amp;</operator> <operator pos:start="2375:28" pos:end="2375:28">(</operator><literal type="number" pos:start="2375:29" pos:end="2375:29">1</literal> <operator pos:start="2375:31" pos:end="2375:32">&lt;&lt;</operator> <literal type="number" pos:start="2375:34" pos:end="2375:35">21</literal><operator pos:start="2375:36" pos:end="2375:36">)</operator></expr>)</condition> <block pos:start="2375:39" pos:end="2415:17">{<block_content pos:start="2379:21" pos:end="2413:43">

                    <comment type="block" pos:start="2377:21" pos:end="2377:36">/* write back */</comment>

                    <if_stmt pos:start="2379:21" pos:end="2411:21"><if pos:start="2379:21" pos:end="2393:21">if <condition pos:start="2379:24" pos:end="2379:41">(<expr pos:start="2379:25" pos:end="2379:40"><name pos:start="2379:25" pos:end="2379:28">insn</name> <operator pos:start="2379:30" pos:end="2379:30">&amp;</operator> <operator pos:start="2379:32" pos:end="2379:32">(</operator><literal type="number" pos:start="2379:33" pos:end="2379:33">1</literal> <operator pos:start="2379:35" pos:end="2379:36">&lt;&lt;</operator> <literal type="number" pos:start="2379:38" pos:end="2379:39">23</literal><operator pos:start="2379:40" pos:end="2379:40">)</operator></expr>)</condition> <block pos:start="2379:43" pos:end="2393:21">{<block_content pos:start="2381:25" pos:end="2391:25">

                        <if_stmt pos:start="2381:25" pos:end="2391:25"><if pos:start="2381:25" pos:end="2385:25">if <condition pos:start="2381:28" pos:end="2381:45">(<expr pos:start="2381:29" pos:end="2381:44"><name pos:start="2381:29" pos:end="2381:32">insn</name> <operator pos:start="2381:34" pos:end="2381:34">&amp;</operator> <operator pos:start="2381:36" pos:end="2381:36">(</operator><literal type="number" pos:start="2381:37" pos:end="2381:37">1</literal> <operator pos:start="2381:39" pos:end="2381:40">&lt;&lt;</operator> <literal type="number" pos:start="2381:42" pos:end="2381:43">24</literal><operator pos:start="2381:44" pos:end="2381:44">)</operator></expr>)</condition> <block pos:start="2381:47" pos:end="2385:25">{<block_content>

                            <comment type="block" pos:start="2383:29" pos:end="2383:47">/* pre increment */</comment>

                        </block_content>}</block></if> <else pos:start="2385:27" pos:end="2391:25">else <block pos:start="2385:32" pos:end="2391:25">{<block_content pos:start="2389:29" pos:end="2389:60">

                            <comment type="block" pos:start="2387:29" pos:end="2387:48">/* post increment */</comment>

                            <expr_stmt pos:start="2389:29" pos:end="2389:60"><expr pos:start="2389:29" pos:end="2389:59"><call pos:start="2389:29" pos:end="2389:59"><name pos:start="2389:29" pos:end="2389:44">tcg_gen_addi_i32</name><argument_list pos:start="2389:45" pos:end="2389:59">(<argument pos:start="2389:46" pos:end="2389:49"><expr pos:start="2389:46" pos:end="2389:49"><name pos:start="2389:46" pos:end="2389:49">addr</name></expr></argument>, <argument pos:start="2389:52" pos:end="2389:55"><expr pos:start="2389:52" pos:end="2389:55"><name pos:start="2389:52" pos:end="2389:55">addr</name></expr></argument>, <argument pos:start="2389:58" pos:end="2389:58"><expr pos:start="2389:58" pos:end="2389:58"><literal type="number" pos:start="2389:58" pos:end="2389:58">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="2393:23" pos:end="2411:21">else <block pos:start="2393:28" pos:end="2411:21">{<block_content pos:start="2395:25" pos:end="2409:25">

                        <if_stmt pos:start="2395:25" pos:end="2409:25"><if pos:start="2395:25" pos:end="2403:25">if <condition pos:start="2395:28" pos:end="2395:45">(<expr pos:start="2395:29" pos:end="2395:44"><name pos:start="2395:29" pos:end="2395:32">insn</name> <operator pos:start="2395:34" pos:end="2395:34">&amp;</operator> <operator pos:start="2395:36" pos:end="2395:36">(</operator><literal type="number" pos:start="2395:37" pos:end="2395:37">1</literal> <operator pos:start="2395:39" pos:end="2395:40">&lt;&lt;</operator> <literal type="number" pos:start="2395:42" pos:end="2395:43">24</literal><operator pos:start="2395:44" pos:end="2395:44">)</operator></expr>)</condition> <block pos:start="2395:47" pos:end="2403:25">{<block_content pos:start="2399:29" pos:end="2401:77">

                            <comment type="block" pos:start="2397:29" pos:end="2397:47">/* pre decrement */</comment>

                            <if_stmt pos:start="2399:29" pos:end="2401:77"><if pos:start="2399:29" pos:end="2401:77">if <condition pos:start="2399:32" pos:end="2399:39">(<expr pos:start="2399:33" pos:end="2399:38"><name pos:start="2399:33" pos:end="2399:33">n</name> <operator pos:start="2399:35" pos:end="2399:36">!=</operator> <literal type="number" pos:start="2399:38" pos:end="2399:38">1</literal></expr>)</condition><block type="pseudo" pos:start="2401:33" pos:end="2401:77"><block_content pos:start="2401:33" pos:end="2401:77">

                                <expr_stmt pos:start="2401:33" pos:end="2401:77"><expr pos:start="2401:33" pos:end="2401:76"><call pos:start="2401:33" pos:end="2401:76"><name pos:start="2401:33" pos:end="2401:48">tcg_gen_addi_i32</name><argument_list pos:start="2401:49" pos:end="2401:76">(<argument pos:start="2401:50" pos:end="2401:53"><expr pos:start="2401:50" pos:end="2401:53"><name pos:start="2401:50" pos:end="2401:53">addr</name></expr></argument>, <argument pos:start="2401:56" pos:end="2401:59"><expr pos:start="2401:56" pos:end="2401:59"><name pos:start="2401:56" pos:end="2401:59">addr</name></expr></argument>, <argument pos:start="2401:62" pos:end="2401:75"><expr pos:start="2401:62" pos:end="2401:75"><operator pos:start="2401:62" pos:end="2401:62">-</operator><operator pos:start="2401:63" pos:end="2401:63">(</operator><operator pos:start="2401:64" pos:end="2401:64">(</operator><name pos:start="2401:65" pos:end="2401:65">n</name> <operator pos:start="2401:67" pos:end="2401:67">-</operator> <literal type="number" pos:start="2401:69" pos:end="2401:69">1</literal><operator pos:start="2401:70" pos:end="2401:70">)</operator> <operator pos:start="2401:72" pos:end="2401:72">*</operator> <literal type="number" pos:start="2401:74" pos:end="2401:74">4</literal><operator pos:start="2401:75" pos:end="2401:75">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        </block_content>}</block></if> <else pos:start="2403:27" pos:end="2409:25">else <block pos:start="2403:32" pos:end="2409:25">{<block_content pos:start="2407:29" pos:end="2407:67">

                            <comment type="block" pos:start="2405:29" pos:end="2405:48">/* post decrement */</comment>

                            <expr_stmt pos:start="2407:29" pos:end="2407:67"><expr pos:start="2407:29" pos:end="2407:66"><call pos:start="2407:29" pos:end="2407:66"><name pos:start="2407:29" pos:end="2407:44">tcg_gen_addi_i32</name><argument_list pos:start="2407:45" pos:end="2407:66">(<argument pos:start="2407:46" pos:end="2407:49"><expr pos:start="2407:46" pos:end="2407:49"><name pos:start="2407:46" pos:end="2407:49">addr</name></expr></argument>, <argument pos:start="2407:52" pos:end="2407:55"><expr pos:start="2407:52" pos:end="2407:55"><name pos:start="2407:52" pos:end="2407:55">addr</name></expr></argument>, <argument pos:start="2407:58" pos:end="2407:65"><expr pos:start="2407:58" pos:end="2407:65"><operator pos:start="2407:58" pos:end="2407:58">-</operator><operator pos:start="2407:59" pos:end="2407:59">(</operator><name pos:start="2407:60" pos:end="2407:60">n</name> <operator pos:start="2407:62" pos:end="2407:62">*</operator> <literal type="number" pos:start="2407:64" pos:end="2407:64">4</literal><operator pos:start="2407:65" pos:end="2407:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="2413:21" pos:end="2413:43"><expr pos:start="2413:21" pos:end="2413:42"><call pos:start="2413:21" pos:end="2413:42"><name pos:start="2413:21" pos:end="2413:29">store_reg</name><argument_list pos:start="2413:30" pos:end="2413:42">(<argument pos:start="2413:31" pos:end="2413:31"><expr pos:start="2413:31" pos:end="2413:31"><name pos:start="2413:31" pos:end="2413:31">s</name></expr></argument>, <argument pos:start="2413:34" pos:end="2413:35"><expr pos:start="2413:34" pos:end="2413:35"><name pos:start="2413:34" pos:end="2413:35">rn</name></expr></argument>, <argument pos:start="2413:38" pos:end="2413:41"><expr pos:start="2413:38" pos:end="2413:41"><name pos:start="2413:38" pos:end="2413:41">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="2415:19" pos:end="2419:17">else <block pos:start="2415:24" pos:end="2419:17">{<block_content pos:start="2417:21" pos:end="2417:44">

                    <expr_stmt pos:start="2417:21" pos:end="2417:44"><expr pos:start="2417:21" pos:end="2417:43"><call pos:start="2417:21" pos:end="2417:43"><name pos:start="2417:21" pos:end="2417:37">tcg_temp_free_i32</name><argument_list pos:start="2417:38" pos:end="2417:43">(<argument pos:start="2417:39" pos:end="2417:42"><expr pos:start="2417:39" pos:end="2417:42"><name pos:start="2417:39" pos:end="2417:42">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="2421:17" pos:end="2425:17"><if pos:start="2421:17" pos:end="2425:17">if <condition pos:start="2421:20" pos:end="2421:32">(<expr pos:start="2421:21" pos:end="2421:31"><name pos:start="2421:21" pos:end="2421:31">loaded_base</name></expr>)</condition> <block pos:start="2421:34" pos:end="2425:17">{<block_content pos:start="2423:21" pos:end="2423:49">

                    <expr_stmt pos:start="2423:21" pos:end="2423:49"><expr pos:start="2423:21" pos:end="2423:48"><call pos:start="2423:21" pos:end="2423:48"><name pos:start="2423:21" pos:end="2423:29">store_reg</name><argument_list pos:start="2423:30" pos:end="2423:48">(<argument pos:start="2423:31" pos:end="2423:31"><expr pos:start="2423:31" pos:end="2423:31"><name pos:start="2423:31" pos:end="2423:31">s</name></expr></argument>, <argument pos:start="2423:34" pos:end="2423:35"><expr pos:start="2423:34" pos:end="2423:35"><name pos:start="2423:34" pos:end="2423:35">rn</name></expr></argument>, <argument pos:start="2423:38" pos:end="2423:47"><expr pos:start="2423:38" pos:end="2423:47"><name pos:start="2423:38" pos:end="2423:47">loaded_var</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="2427:17" pos:end="2439:17"><if pos:start="2427:17" pos:end="2439:17">if <condition pos:start="2427:20" pos:end="2427:48">(<expr pos:start="2427:21" pos:end="2427:47"><operator pos:start="2427:21" pos:end="2427:21">(</operator><name pos:start="2427:22" pos:end="2427:25">insn</name> <operator pos:start="2427:27" pos:end="2427:27">&amp;</operator> <operator pos:start="2427:29" pos:end="2427:29">(</operator><literal type="number" pos:start="2427:30" pos:end="2427:30">1</literal> <operator pos:start="2427:32" pos:end="2427:33">&lt;&lt;</operator> <literal type="number" pos:start="2427:35" pos:end="2427:36">22</literal><operator pos:start="2427:37" pos:end="2427:37">)</operator><operator pos:start="2427:38" pos:end="2427:38">)</operator> <operator pos:start="2427:40" pos:end="2427:41">&amp;&amp;</operator> <operator pos:start="2427:43" pos:end="2427:43">!</operator><name pos:start="2427:44" pos:end="2427:47">user</name></expr>)</condition> <block pos:start="2427:50" pos:end="2439:17">{<block_content pos:start="2431:21" pos:end="2437:45">

                    <comment type="block" pos:start="2429:21" pos:end="2429:50">/* Restore CPSR from SPSR.  */</comment>

                    <expr_stmt pos:start="2431:21" pos:end="2431:47"><expr pos:start="2431:21" pos:end="2431:46"><name pos:start="2431:21" pos:end="2431:23">tmp</name> <operator pos:start="2431:25" pos:end="2431:25">=</operator> <call pos:start="2431:27" pos:end="2431:46"><name pos:start="2431:27" pos:end="2431:40">load_cpu_field</name><argument_list pos:start="2431:41" pos:end="2431:46">(<argument pos:start="2431:42" pos:end="2431:45"><expr pos:start="2431:42" pos:end="2431:45"><name pos:start="2431:42" pos:end="2431:45">spsr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2433:21" pos:end="2433:50"><expr pos:start="2433:21" pos:end="2433:49"><call pos:start="2433:21" pos:end="2433:49"><name pos:start="2433:21" pos:end="2433:32">gen_set_cpsr</name><argument_list pos:start="2433:33" pos:end="2433:49">(<argument pos:start="2433:34" pos:end="2433:36"><expr pos:start="2433:34" pos:end="2433:36"><name pos:start="2433:34" pos:end="2433:36">tmp</name></expr></argument>, <argument pos:start="2433:39" pos:end="2433:48"><expr pos:start="2433:39" pos:end="2433:48"><literal type="number" pos:start="2433:39" pos:end="2433:48">0xffffffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2435:21" pos:end="2435:43"><expr pos:start="2435:21" pos:end="2435:42"><call pos:start="2435:21" pos:end="2435:42"><name pos:start="2435:21" pos:end="2435:37">tcg_temp_free_i32</name><argument_list pos:start="2435:38" pos:end="2435:42">(<argument pos:start="2435:39" pos:end="2435:41"><expr pos:start="2435:39" pos:end="2435:41"><name pos:start="2435:39" pos:end="2435:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2437:21" pos:end="2437:45"><expr pos:start="2437:21" pos:end="2437:44"><name pos:start="2437:21" pos:end="2437:29"><name pos:start="2437:21" pos:end="2437:21">s</name><operator pos:start="2437:22" pos:end="2437:23">-&gt;</operator><name pos:start="2437:24" pos:end="2437:29">is_jmp</name></name> <operator pos:start="2437:31" pos:end="2437:31">=</operator> <name pos:start="2437:33" pos:end="2437:44">DISAS_UPDATE</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block>

            <break pos:start="2443:13" pos:end="2443:18">break;</break>

        <case pos:start="2445:9" pos:end="2445:17">case <expr pos:start="2445:14" pos:end="2445:16"><literal type="number" pos:start="2445:14" pos:end="2445:16">0xa</literal></expr>:</case>

        <case pos:start="2447:9" pos:end="2447:17">case <expr pos:start="2447:14" pos:end="2447:16"><literal type="number" pos:start="2447:14" pos:end="2447:16">0xb</literal></expr>:</case>

            <block pos:start="2449:13" pos:end="2475:13">{<block_content pos:start="2451:17" pos:end="2473:32">

                <decl_stmt pos:start="2451:17" pos:end="2451:31"><decl pos:start="2451:17" pos:end="2451:30"><type pos:start="2451:17" pos:end="2451:23"><name pos:start="2451:17" pos:end="2451:23">int32_t</name></type> <name pos:start="2451:25" pos:end="2451:30">offset</name></decl>;</decl_stmt>



                <comment type="block" pos:start="2455:17" pos:end="2455:39">/* branch (and link) */</comment>

                <expr_stmt pos:start="2457:17" pos:end="2457:37"><expr pos:start="2457:17" pos:end="2457:36"><name pos:start="2457:17" pos:end="2457:19">val</name> <operator pos:start="2457:21" pos:end="2457:21">=</operator> <operator pos:start="2457:23" pos:end="2457:23">(</operator><name pos:start="2457:24" pos:end="2457:30">int32_t</name><operator pos:start="2457:31" pos:end="2457:31">)</operator><name pos:start="2457:32" pos:end="2457:36"><name pos:start="2457:32" pos:end="2457:32">s</name><operator pos:start="2457:33" pos:end="2457:34">-&gt;</operator><name pos:start="2457:35" pos:end="2457:36">pc</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="2459:17" pos:end="2467:17"><if pos:start="2459:17" pos:end="2467:17">if <condition pos:start="2459:20" pos:end="2459:37">(<expr pos:start="2459:21" pos:end="2459:36"><name pos:start="2459:21" pos:end="2459:24">insn</name> <operator pos:start="2459:26" pos:end="2459:26">&amp;</operator> <operator pos:start="2459:28" pos:end="2459:28">(</operator><literal type="number" pos:start="2459:29" pos:end="2459:29">1</literal> <operator pos:start="2459:31" pos:end="2459:32">&lt;&lt;</operator> <literal type="number" pos:start="2459:34" pos:end="2459:35">24</literal><operator pos:start="2459:36" pos:end="2459:36">)</operator></expr>)</condition> <block pos:start="2459:39" pos:end="2467:17">{<block_content pos:start="2461:21" pos:end="2465:42">

                    <expr_stmt pos:start="2461:21" pos:end="2461:45"><expr pos:start="2461:21" pos:end="2461:44"><name pos:start="2461:21" pos:end="2461:23">tmp</name> <operator pos:start="2461:25" pos:end="2461:25">=</operator> <call pos:start="2461:27" pos:end="2461:44"><name pos:start="2461:27" pos:end="2461:42">tcg_temp_new_i32</name><argument_list pos:start="2461:43" pos:end="2461:44">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2463:21" pos:end="2463:47"><expr pos:start="2463:21" pos:end="2463:46"><call pos:start="2463:21" pos:end="2463:46"><name pos:start="2463:21" pos:end="2463:36">tcg_gen_movi_i32</name><argument_list pos:start="2463:37" pos:end="2463:46">(<argument pos:start="2463:38" pos:end="2463:40"><expr pos:start="2463:38" pos:end="2463:40"><name pos:start="2463:38" pos:end="2463:40">tmp</name></expr></argument>, <argument pos:start="2463:43" pos:end="2463:45"><expr pos:start="2463:43" pos:end="2463:45"><name pos:start="2463:43" pos:end="2463:45">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2465:21" pos:end="2465:42"><expr pos:start="2465:21" pos:end="2465:41"><call pos:start="2465:21" pos:end="2465:41"><name pos:start="2465:21" pos:end="2465:29">store_reg</name><argument_list pos:start="2465:30" pos:end="2465:41">(<argument pos:start="2465:31" pos:end="2465:31"><expr pos:start="2465:31" pos:end="2465:31"><name pos:start="2465:31" pos:end="2465:31">s</name></expr></argument>, <argument pos:start="2465:34" pos:end="2465:35"><expr pos:start="2465:34" pos:end="2465:35"><literal type="number" pos:start="2465:34" pos:end="2465:35">14</literal></expr></argument>, <argument pos:start="2465:38" pos:end="2465:40"><expr pos:start="2465:38" pos:end="2465:40"><name pos:start="2465:38" pos:end="2465:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="2469:17" pos:end="2469:53"><expr pos:start="2469:17" pos:end="2469:52"><name pos:start="2469:17" pos:end="2469:22">offset</name> <operator pos:start="2469:24" pos:end="2469:24">=</operator> <operator pos:start="2469:26" pos:end="2469:26">(</operator><operator pos:start="2469:27" pos:end="2469:27">(</operator><operator pos:start="2469:28" pos:end="2469:28">(</operator><name pos:start="2469:29" pos:end="2469:35">int32_t</name><operator pos:start="2469:36" pos:end="2469:36">)</operator><name pos:start="2469:37" pos:end="2469:40">insn</name> <operator pos:start="2469:42" pos:end="2469:43">&lt;&lt;</operator> <literal type="number" pos:start="2469:45" pos:end="2469:45">8</literal><operator pos:start="2469:46" pos:end="2469:46">)</operator> <operator pos:start="2469:48" pos:end="2469:49">&gt;&gt;</operator> <literal type="number" pos:start="2469:51" pos:end="2469:51">8</literal><operator pos:start="2469:52" pos:end="2469:52">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="2471:17" pos:end="2471:41"><expr pos:start="2471:17" pos:end="2471:40"><name pos:start="2471:17" pos:end="2471:19">val</name> <operator pos:start="2471:21" pos:end="2471:22">+=</operator> <operator pos:start="2471:24" pos:end="2471:24">(</operator><name pos:start="2471:25" pos:end="2471:30">offset</name> <operator pos:start="2471:32" pos:end="2471:33">&lt;&lt;</operator> <literal type="number" pos:start="2471:35" pos:end="2471:35">2</literal><operator pos:start="2471:36" pos:end="2471:36">)</operator> <operator pos:start="2471:38" pos:end="2471:38">+</operator> <literal type="number" pos:start="2471:40" pos:end="2471:40">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="2473:17" pos:end="2473:32"><expr pos:start="2473:17" pos:end="2473:31"><call pos:start="2473:17" pos:end="2473:31"><name pos:start="2473:17" pos:end="2473:23">gen_jmp</name><argument_list pos:start="2473:24" pos:end="2473:31">(<argument pos:start="2473:25" pos:end="2473:25"><expr pos:start="2473:25" pos:end="2473:25"><name pos:start="2473:25" pos:end="2473:25">s</name></expr></argument>, <argument pos:start="2473:28" pos:end="2473:30"><expr pos:start="2473:28" pos:end="2473:30"><name pos:start="2473:28" pos:end="2473:30">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="2477:13" pos:end="2477:18">break;</break>

        <case pos:start="2479:9" pos:end="2479:17">case <expr pos:start="2479:14" pos:end="2479:16"><literal type="number" pos:start="2479:14" pos:end="2479:16">0xc</literal></expr>:</case>

        <case pos:start="2481:9" pos:end="2481:17">case <expr pos:start="2481:14" pos:end="2481:16"><literal type="number" pos:start="2481:14" pos:end="2481:16">0xd</literal></expr>:</case>

        <case pos:start="2483:9" pos:end="2483:17">case <expr pos:start="2483:14" pos:end="2483:16"><literal type="number" pos:start="2483:14" pos:end="2483:16">0xe</literal></expr>:</case>

            <comment type="block" pos:start="2485:13" pos:end="2485:31">/* Coprocessor.  */</comment>

            <if_stmt pos:start="2487:13" pos:end="2489:32"><if pos:start="2487:13" pos:end="2489:32">if <condition pos:start="2487:16" pos:end="2487:48">(<expr pos:start="2487:17" pos:end="2487:47"><call pos:start="2487:17" pos:end="2487:47"><name pos:start="2487:17" pos:end="2487:33">disas_coproc_insn</name><argument_list pos:start="2487:34" pos:end="2487:47">(<argument pos:start="2487:35" pos:end="2487:37"><expr pos:start="2487:35" pos:end="2487:37"><name pos:start="2487:35" pos:end="2487:37">env</name></expr></argument>, <argument pos:start="2487:40" pos:end="2487:40"><expr pos:start="2487:40" pos:end="2487:40"><name pos:start="2487:40" pos:end="2487:40">s</name></expr></argument>, <argument pos:start="2487:43" pos:end="2487:46"><expr pos:start="2487:43" pos:end="2487:46"><name pos:start="2487:43" pos:end="2487:46">insn</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2489:17" pos:end="2489:32"><block_content pos:start="2489:17" pos:end="2489:32">

                <goto pos:start="2489:17" pos:end="2489:32">goto <name pos:start="2489:22" pos:end="2489:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <break pos:start="2491:13" pos:end="2491:18">break;</break>

        <case pos:start="2493:9" pos:end="2493:17">case <expr pos:start="2493:14" pos:end="2493:16"><literal type="number" pos:start="2493:14" pos:end="2493:16">0xf</literal></expr>:</case>

            <comment type="block" pos:start="2495:13" pos:end="2495:21">/* swi */</comment>

            <expr_stmt pos:start="2497:13" pos:end="2497:33"><expr pos:start="2497:13" pos:end="2497:32"><call pos:start="2497:13" pos:end="2497:32"><name pos:start="2497:13" pos:end="2497:25">gen_set_pc_im</name><argument_list pos:start="2497:26" pos:end="2497:32">(<argument pos:start="2497:27" pos:end="2497:31"><expr pos:start="2497:27" pos:end="2497:31"><name pos:start="2497:27" pos:end="2497:31"><name pos:start="2497:27" pos:end="2497:27">s</name><operator pos:start="2497:28" pos:end="2497:29">-&gt;</operator><name pos:start="2497:30" pos:end="2497:31">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2499:13" pos:end="2499:34"><expr pos:start="2499:13" pos:end="2499:33"><name pos:start="2499:13" pos:end="2499:21"><name pos:start="2499:13" pos:end="2499:13">s</name><operator pos:start="2499:14" pos:end="2499:15">-&gt;</operator><name pos:start="2499:16" pos:end="2499:21">is_jmp</name></name> <operator pos:start="2499:23" pos:end="2499:23">=</operator> <name pos:start="2499:25" pos:end="2499:33">DISAS_SWI</name></expr>;</expr_stmt>

            <break pos:start="2501:13" pos:end="2501:18">break;</break>

        <default pos:start="2503:9" pos:end="2503:16">default:</default>

        <label pos:start="2505:9" pos:end="2505:19"><name pos:start="2505:9" pos:end="2505:18">illegal_op</name>:</label>

            <expr_stmt pos:start="2507:13" pos:end="2507:48"><expr pos:start="2507:13" pos:end="2507:47"><call pos:start="2507:13" pos:end="2507:47"><name pos:start="2507:13" pos:end="2507:30">gen_exception_insn</name><argument_list pos:start="2507:31" pos:end="2507:47">(<argument pos:start="2507:32" pos:end="2507:32"><expr pos:start="2507:32" pos:end="2507:32"><name pos:start="2507:32" pos:end="2507:32">s</name></expr></argument>, <argument pos:start="2507:35" pos:end="2507:35"><expr pos:start="2507:35" pos:end="2507:35"><literal type="number" pos:start="2507:35" pos:end="2507:35">4</literal></expr></argument>, <argument pos:start="2507:38" pos:end="2507:46"><expr pos:start="2507:38" pos:end="2507:46"><name pos:start="2507:38" pos:end="2507:46">EXCP_UDEF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2509:13" pos:end="2509:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function></unit>
