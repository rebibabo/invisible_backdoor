<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3953.c" pos:tabs="8"><function pos:start="1:1" pos:end="285:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">x8_decode_intra_mb</name><parameter_list pos:start="1:30" pos:end="1:72">(<parameter pos:start="1:31" pos:end="1:53"><decl pos:start="1:31" pos:end="1:53"><type pos:start="1:31" pos:end="1:53"><name pos:start="1:31" pos:end="1:44">IntraX8Context</name><modifier pos:start="1:45" pos:end="1:45">*</modifier> <specifier pos:start="1:47" pos:end="1:51">const</specifier></type> <name pos:start="1:53" pos:end="1:53">w</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:71"><decl pos:start="1:56" pos:end="1:71"><type pos:start="1:56" pos:end="1:71"><specifier pos:start="1:56" pos:end="1:60">const</specifier> <name pos:start="1:62" pos:end="1:64">int</name></type> <name pos:start="1:66" pos:end="1:71">chroma</name></decl></parameter>)</parameter_list><block pos:start="1:73" pos:end="285:1">{<block_content pos:start="3:5" pos:end="283:13">

    <decl_stmt pos:start="3:5" pos:end="3:35"><decl pos:start="3:5" pos:end="3:34"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name><init pos:start="3:29" pos:end="3:34">= <expr pos:start="3:31" pos:end="3:34"><name pos:start="3:31" pos:end="3:34"><name pos:start="3:31" pos:end="3:31">w</name><operator pos:start="3:32" pos:end="3:33">-&gt;</operator><name pos:start="3:34" pos:end="3:34">s</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type> <name pos:start="7:15" pos:end="7:23">scantable</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">final</name></decl>,<decl pos:start="9:15" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:17">run</name></decl>,<decl pos:start="9:19" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:19" pos:end="9:23">level</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">ac_mode</name></decl>,<decl pos:start="11:17" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:17" pos:end="11:23">dc_mode</name></decl>,<decl pos:start="11:25" pos:end="11:31"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:25" pos:end="11:31">est_run</name></decl>,<decl pos:start="11:33" pos:end="11:40"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:33" pos:end="11:40">dc_level</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">pos</name></decl>,<decl pos:start="13:13" pos:end="13:13"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:13" pos:end="13:13">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:18">zeros_only</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:24">use_quant_matrix</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:13"><decl pos:start="19:5" pos:end="19:12"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:12">sign</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:25"><expr pos:start="23:5" pos:end="23:24"><call pos:start="23:5" pos:end="23:24"><name pos:start="23:5" pos:end="23:10">assert</name><argument_list pos:start="23:11" pos:end="23:24">(<argument pos:start="23:12" pos:end="23:23"><expr pos:start="23:12" pos:end="23:23"><name pos:start="23:12" pos:end="23:20"><name pos:start="23:12" pos:end="23:12">w</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:20">orient</name></name><operator pos:start="23:21" pos:end="23:21">&lt;</operator><literal type="number" pos:start="23:22" pos:end="23:23">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:36"><expr pos:start="25:5" pos:end="25:35"><call pos:start="25:5" pos:end="25:35"><name pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:10">dsp</name><operator pos:start="25:11" pos:end="25:11">.</operator><name pos:start="25:12" pos:end="25:22">clear_block</name></name><argument_list pos:start="25:23" pos:end="25:35">(<argument pos:start="25:24" pos:end="25:34"><expr pos:start="25:24" pos:end="25:34"><name pos:start="25:24" pos:end="25:34"><name pos:start="25:24" pos:end="25:24">s</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:31">block</name><index pos:start="25:32" pos:end="25:34">[<expr pos:start="25:33" pos:end="25:33"><literal type="number" pos:start="25:33" pos:end="25:33">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="33:5">if<condition pos:start="29:7" pos:end="29:14">(<expr pos:start="29:8" pos:end="29:13"><name pos:start="29:8" pos:end="29:13">chroma</name></expr>)</condition><block pos:start="29:15" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:18">

        <expr_stmt pos:start="31:9" pos:end="31:18"><expr pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:15">dc_mode</name><operator pos:start="31:16" pos:end="31:16">=</operator><literal type="number" pos:start="31:17" pos:end="31:17">2</literal></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="33:6" pos:end="37:5">else<block pos:start="33:10" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:29">

        <expr_stmt pos:start="35:9" pos:end="35:29"><expr pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:15">dc_mode</name><operator pos:start="35:16" pos:end="35:16">=</operator><operator pos:start="35:17" pos:end="35:17">!</operator><operator pos:start="35:18" pos:end="35:18">!</operator><name pos:start="35:19" pos:end="35:28"><name pos:start="35:19" pos:end="35:19">w</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:28">est_run</name></name></expr>;</expr_stmt><comment type="line" pos:start="35:30" pos:end="35:34">//0,1</comment>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="41:5" pos:end="41:63"><if pos:start="41:5" pos:end="41:63">if<condition pos:start="41:7" pos:end="41:52">(<expr pos:start="41:8" pos:end="41:51"><call pos:start="41:8" pos:end="41:51"><name pos:start="41:8" pos:end="41:20">x8_get_dc_rlf</name><argument_list pos:start="41:21" pos:end="41:51">(<argument pos:start="41:22" pos:end="41:22"><expr pos:start="41:22" pos:end="41:22"><name pos:start="41:22" pos:end="41:22">w</name></expr></argument>, <argument pos:start="41:25" pos:end="41:31"><expr pos:start="41:25" pos:end="41:31"><name pos:start="41:25" pos:end="41:31">dc_mode</name></expr></argument>, <argument pos:start="41:34" pos:end="41:42"><expr pos:start="41:34" pos:end="41:42"><operator pos:start="41:34" pos:end="41:34">&amp;</operator><name pos:start="41:35" pos:end="41:42">dc_level</name></expr></argument>, <argument pos:start="41:45" pos:end="41:50"><expr pos:start="41:45" pos:end="41:50"><operator pos:start="41:45" pos:end="41:45">&amp;</operator><name pos:start="41:46" pos:end="41:50">final</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="41:54" pos:end="41:63"><block_content pos:start="41:54" pos:end="41:63"> <return pos:start="41:54" pos:end="41:63">return <expr pos:start="41:61" pos:end="41:62"><operator pos:start="41:61" pos:end="41:61">-</operator><literal type="number" pos:start="41:62" pos:end="41:62">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:8"><expr pos:start="43:5" pos:end="43:7"><name pos:start="43:5" pos:end="43:5">n</name><operator pos:start="43:6" pos:end="43:6">=</operator><literal type="number" pos:start="43:7" pos:end="43:7">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:17"><expr pos:start="45:5" pos:end="45:16"><name pos:start="45:5" pos:end="45:14">zeros_only</name><operator pos:start="45:15" pos:end="45:15">=</operator><literal type="number" pos:start="45:16" pos:end="45:16">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="189:5"><if pos:start="47:5" pos:end="155:5">if<condition pos:start="47:7" pos:end="47:14">(<expr pos:start="47:8" pos:end="47:13"><operator pos:start="47:8" pos:end="47:8">!</operator><name pos:start="47:9" pos:end="47:13">final</name></expr>)</condition><block pos:start="47:15" pos:end="155:5">{<block_content pos:start="49:9" pos:end="153:35"><comment type="line" pos:start="47:16" pos:end="47:26">//decode ac</comment>

        <expr_stmt pos:start="49:9" pos:end="49:45"><expr pos:start="49:9" pos:end="49:44"><name pos:start="49:9" pos:end="49:24">use_quant_matrix</name><operator pos:start="49:25" pos:end="49:25">=</operator><name pos:start="49:26" pos:end="49:44"><name pos:start="49:26" pos:end="49:26">w</name><operator pos:start="49:27" pos:end="49:28">-&gt;</operator><name pos:start="49:29" pos:end="49:44">use_quant_matrix</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="89:9"><if pos:start="51:9" pos:end="57:9">if<condition pos:start="51:11" pos:end="51:18">(<expr pos:start="51:12" pos:end="51:17"><name pos:start="51:12" pos:end="51:17">chroma</name></expr>)</condition><block pos:start="51:19" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:25">

            <expr_stmt pos:start="53:13" pos:end="53:24"><expr pos:start="53:13" pos:end="53:23"><name pos:start="53:13" pos:end="53:19">ac_mode</name> <operator pos:start="53:21" pos:end="53:21">=</operator> <literal type="number" pos:start="53:23" pos:end="53:23">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:25"><expr pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:19">est_run</name> <operator pos:start="55:21" pos:end="55:21">=</operator> <literal type="number" pos:start="55:23" pos:end="55:24">64</literal></expr>;</expr_stmt><comment type="line" pos:start="55:26" pos:end="55:35">//not used</comment>

        </block_content>}</block></if><else pos:start="57:10" pos:end="89:9">else<block pos:start="57:14" pos:end="89:9">{<block_content pos:start="59:13" pos:end="87:13">

            <if_stmt pos:start="59:13" pos:end="63:13"><if pos:start="59:13" pos:end="63:13">if <condition pos:start="59:16" pos:end="59:34">(<expr pos:start="59:17" pos:end="59:33"><name pos:start="59:17" pos:end="59:29"><name pos:start="59:17" pos:end="59:17">w</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:29">raw_orient</name></name> <operator pos:start="59:31" pos:end="59:31">&lt;</operator> <literal type="number" pos:start="59:33" pos:end="59:33">3</literal></expr>)</condition><block pos:start="59:35" pos:end="63:13">{<block_content pos:start="61:17" pos:end="61:37">

                <expr_stmt pos:start="61:17" pos:end="61:37"><expr pos:start="61:17" pos:end="61:36"><name pos:start="61:17" pos:end="61:32">use_quant_matrix</name> <operator pos:start="61:34" pos:end="61:34">=</operator> <literal type="number" pos:start="61:36" pos:end="61:36">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="65:13" pos:end="87:13"><if pos:start="65:13" pos:end="71:13">if<condition pos:start="65:15" pos:end="65:33">(<expr pos:start="65:16" pos:end="65:32"><name pos:start="65:16" pos:end="65:28"><name pos:start="65:16" pos:end="65:16">w</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:28">raw_orient</name></name> <operator pos:start="65:30" pos:end="65:30">&gt;</operator> <literal type="number" pos:start="65:32" pos:end="65:32">4</literal></expr>)</condition><block pos:start="65:34" pos:end="71:13">{<block_content pos:start="67:17" pos:end="69:29">

                <expr_stmt pos:start="67:17" pos:end="67:28"><expr pos:start="67:17" pos:end="67:27"><name pos:start="67:17" pos:end="67:23">ac_mode</name> <operator pos:start="67:25" pos:end="67:25">=</operator> <literal type="number" pos:start="67:27" pos:end="67:27">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:29"><expr pos:start="69:17" pos:end="69:28"><name pos:start="69:17" pos:end="69:23">est_run</name> <operator pos:start="69:25" pos:end="69:25">=</operator> <literal type="number" pos:start="69:27" pos:end="69:28">64</literal></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="71:14" pos:end="87:13">else<block pos:start="71:18" pos:end="87:13">{<block_content pos:start="73:17" pos:end="85:17">

                <if_stmt pos:start="73:17" pos:end="85:17"><if pos:start="73:17" pos:end="79:17">if<condition pos:start="73:19" pos:end="73:34">(<expr pos:start="73:20" pos:end="73:33"><name pos:start="73:20" pos:end="73:29"><name pos:start="73:20" pos:end="73:20">w</name><operator pos:start="73:21" pos:end="73:22">-&gt;</operator><name pos:start="73:23" pos:end="73:29">est_run</name></name> <operator pos:start="73:31" pos:end="73:31">&gt;</operator> <literal type="number" pos:start="73:33" pos:end="73:33">1</literal></expr>)</condition><block pos:start="73:35" pos:end="79:17">{<block_content pos:start="75:21" pos:end="77:39">

                    <expr_stmt pos:start="75:21" pos:end="75:32"><expr pos:start="75:21" pos:end="75:31"><name pos:start="75:21" pos:end="75:27">ac_mode</name> <operator pos:start="75:29" pos:end="75:29">=</operator> <literal type="number" pos:start="75:31" pos:end="75:31">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="77:21" pos:end="77:39"><expr pos:start="77:21" pos:end="77:38"><name pos:start="77:21" pos:end="77:27">est_run</name><operator pos:start="77:28" pos:end="77:28">=</operator><name pos:start="77:29" pos:end="77:38"><name pos:start="77:29" pos:end="77:29">w</name><operator pos:start="77:30" pos:end="77:31">-&gt;</operator><name pos:start="77:32" pos:end="77:38">est_run</name></name></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="79:18" pos:end="85:17">else<block pos:start="79:22" pos:end="85:17">{<block_content pos:start="81:21" pos:end="83:33">

                    <expr_stmt pos:start="81:21" pos:end="81:32"><expr pos:start="81:21" pos:end="81:31"><name pos:start="81:21" pos:end="81:27">ac_mode</name> <operator pos:start="81:29" pos:end="81:29">=</operator> <literal type="number" pos:start="81:31" pos:end="81:31">3</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="83:21" pos:end="83:33"><expr pos:start="83:21" pos:end="83:32"><name pos:start="83:21" pos:end="83:27">est_run</name> <operator pos:start="83:29" pos:end="83:29">=</operator> <literal type="number" pos:start="83:31" pos:end="83:32">64</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:38"><expr pos:start="91:9" pos:end="91:37"><call pos:start="91:9" pos:end="91:37"><name pos:start="91:9" pos:end="91:26">x8_select_ac_table</name><argument_list pos:start="91:27" pos:end="91:37">(<argument pos:start="91:28" pos:end="91:28"><expr pos:start="91:28" pos:end="91:28"><name pos:start="91:28" pos:end="91:28">w</name></expr></argument>,<argument pos:start="91:30" pos:end="91:36"><expr pos:start="91:30" pos:end="91:36"><name pos:start="91:30" pos:end="91:36">ac_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="93:9" pos:end="95:65">/*scantable_selector[12]={0,2,0,1,1,1,0,2,2,0,1,2};&lt;-

        -&gt; 10'01' 00'10' 10'00' 01'01' 01'00' 10'00 =&gt;0x928548 */</comment>

        <expr_stmt pos:start="97:9" pos:end="97:75"><expr pos:start="97:9" pos:end="97:74"><name pos:start="97:9" pos:end="97:17">scantable</name> <operator pos:start="97:19" pos:end="97:19">=</operator> <name pos:start="97:21" pos:end="97:63"><name pos:start="97:21" pos:end="97:21">w</name><operator pos:start="97:22" pos:end="97:23">-&gt;</operator><name pos:start="97:24" pos:end="97:32">scantable</name><index pos:start="97:33" pos:end="97:63">[ <expr pos:start="97:35" pos:end="97:61"><operator pos:start="97:35" pos:end="97:35">(</operator><literal type="number" pos:start="97:36" pos:end="97:43">0x928548</literal><operator pos:start="97:44" pos:end="97:45">&gt;&gt;</operator><operator pos:start="97:46" pos:end="97:46">(</operator><literal type="number" pos:start="97:47" pos:end="97:47">2</literal><operator pos:start="97:48" pos:end="97:48">*</operator><name pos:start="97:49" pos:end="97:57"><name pos:start="97:49" pos:end="97:49">w</name><operator pos:start="97:50" pos:end="97:51">-&gt;</operator><name pos:start="97:52" pos:end="97:57">orient</name></name><operator pos:start="97:58" pos:end="97:58">)</operator><operator pos:start="97:59" pos:end="97:59">)</operator><operator pos:start="97:60" pos:end="97:60">&amp;</operator><literal type="number" pos:start="97:61" pos:end="97:61">3</literal></expr> ]</index></name><operator pos:start="97:64" pos:end="97:64">.</operator><name pos:start="97:65" pos:end="97:74">permutated</name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:14"><expr pos:start="99:9" pos:end="99:13"><name pos:start="99:9" pos:end="99:11">pos</name><operator pos:start="99:12" pos:end="99:12">=</operator><literal type="number" pos:start="99:13" pos:end="99:13">0</literal></expr>;</expr_stmt>

        <do pos:start="101:9" pos:end="149:23">do <block pos:start="101:12" pos:end="149:9">{<block_content pos:start="103:13" pos:end="147:48">

            <expr_stmt pos:start="103:13" pos:end="103:16"><expr pos:start="103:13" pos:end="103:15"><name pos:start="103:13" pos:end="103:13">n</name><operator pos:start="103:14" pos:end="103:15">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="105:13" pos:end="111:13"><if pos:start="105:13" pos:end="111:13">if<condition pos:start="105:15" pos:end="105:30">( <expr pos:start="105:17" pos:end="105:28"><name pos:start="105:17" pos:end="105:17">n</name> <operator pos:start="105:19" pos:end="105:20">&gt;=</operator> <name pos:start="105:22" pos:end="105:28">est_run</name></expr> )</condition><block pos:start="105:31" pos:end="111:13">{<block_content pos:start="107:17" pos:end="109:40">

                <expr_stmt pos:start="107:17" pos:end="107:26"><expr pos:start="107:17" pos:end="107:25"><name pos:start="107:17" pos:end="107:23">ac_mode</name><operator pos:start="107:24" pos:end="107:24">=</operator><literal type="number" pos:start="107:25" pos:end="107:25">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:40"><expr pos:start="109:17" pos:end="109:39"><call pos:start="109:17" pos:end="109:39"><name pos:start="109:17" pos:end="109:34">x8_select_ac_table</name><argument_list pos:start="109:35" pos:end="109:39">(<argument pos:start="109:36" pos:end="109:36"><expr pos:start="109:36" pos:end="109:36"><name pos:start="109:36" pos:end="109:36">w</name></expr></argument>,<argument pos:start="109:38" pos:end="109:38"><expr pos:start="109:38" pos:end="109:38"><literal type="number" pos:start="109:38" pos:end="109:38">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="115:13" pos:end="115:56"><expr pos:start="115:13" pos:end="115:55"><call pos:start="115:13" pos:end="115:55"><name pos:start="115:13" pos:end="115:25">x8_get_ac_rlf</name><argument_list pos:start="115:26" pos:end="115:55">(<argument pos:start="115:27" pos:end="115:27"><expr pos:start="115:27" pos:end="115:27"><name pos:start="115:27" pos:end="115:27">w</name></expr></argument>,<argument pos:start="115:29" pos:end="115:35"><expr pos:start="115:29" pos:end="115:35"><name pos:start="115:29" pos:end="115:35">ac_mode</name></expr></argument>,<argument pos:start="115:37" pos:end="115:40"><expr pos:start="115:37" pos:end="115:40"><operator pos:start="115:37" pos:end="115:37">&amp;</operator><name pos:start="115:38" pos:end="115:40">run</name></expr></argument>,<argument pos:start="115:42" pos:end="115:47"><expr pos:start="115:42" pos:end="115:47"><operator pos:start="115:42" pos:end="115:42">&amp;</operator><name pos:start="115:43" pos:end="115:47">level</name></expr></argument>,<argument pos:start="115:49" pos:end="115:54"><expr pos:start="115:49" pos:end="115:54"><operator pos:start="115:49" pos:end="115:49">&amp;</operator><name pos:start="115:50" pos:end="115:54">final</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="119:13" pos:end="119:23"><expr pos:start="119:13" pos:end="119:22"><name pos:start="119:13" pos:end="119:15">pos</name><operator pos:start="119:16" pos:end="119:17">+=</operator><name pos:start="119:18" pos:end="119:20">run</name><operator pos:start="119:21" pos:end="119:21">+</operator><literal type="number" pos:start="119:22" pos:end="119:22">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="121:13" pos:end="127:13"><if pos:start="121:13" pos:end="127:13">if<condition pos:start="121:15" pos:end="121:22">(<expr pos:start="121:16" pos:end="121:21"><name pos:start="121:16" pos:end="121:18">pos</name><operator pos:start="121:19" pos:end="121:19">&gt;</operator><literal type="number" pos:start="121:20" pos:end="121:21">63</literal></expr>)</condition><block pos:start="121:23" pos:end="127:13">{<block_content pos:start="125:17" pos:end="125:26">

                <comment type="line" pos:start="123:17" pos:end="123:62">//this also handles vlc error in x8_get_ac_rlf</comment>

                <return pos:start="125:17" pos:end="125:26">return <expr pos:start="125:24" pos:end="125:25"><operator pos:start="125:24" pos:end="125:24">-</operator><literal type="number" pos:start="125:25" pos:end="125:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:41"><expr pos:start="129:13" pos:end="129:40"><name pos:start="129:13" pos:end="129:17">level</name><operator pos:start="129:18" pos:end="129:18">=</operator> <operator pos:start="129:20" pos:end="129:20">(</operator><name pos:start="129:21" pos:end="129:25">level</name><operator pos:start="129:26" pos:end="129:26">+</operator><literal type="number" pos:start="129:27" pos:end="129:27">1</literal><operator pos:start="129:28" pos:end="129:28">)</operator> <operator pos:start="129:30" pos:end="129:30">*</operator> <name pos:start="129:32" pos:end="129:40"><name pos:start="129:32" pos:end="129:32">w</name><operator pos:start="129:33" pos:end="129:34">-&gt;</operator><name pos:start="129:35" pos:end="129:40">dquant</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:28"><expr pos:start="131:13" pos:end="131:27"><name pos:start="131:13" pos:end="131:17">level</name><operator pos:start="131:18" pos:end="131:19">+=</operator> <name pos:start="131:21" pos:end="131:27"><name pos:start="131:21" pos:end="131:21">w</name><operator pos:start="131:22" pos:end="131:23">-&gt;</operator><name pos:start="131:24" pos:end="131:27">qsum</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="135:13" pos:end="135:39"><expr pos:start="135:13" pos:end="135:38"><name pos:start="135:13" pos:end="135:16">sign</name> <operator pos:start="135:18" pos:end="135:18">=</operator> <operator pos:start="135:20" pos:end="135:20">-</operator> <call pos:start="135:22" pos:end="135:38"><name pos:start="135:22" pos:end="135:30">get_bits1</name><argument_list pos:start="135:31" pos:end="135:38">(<argument pos:start="135:32" pos:end="135:37"><expr pos:start="135:32" pos:end="135:37"><operator pos:start="135:32" pos:end="135:32">&amp;</operator><name pos:start="135:33" pos:end="135:37"><name pos:start="135:33" pos:end="135:33">s</name><operator pos:start="135:34" pos:end="135:35">-&gt;</operator><name pos:start="135:36" pos:end="135:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:42"><expr pos:start="137:13" pos:end="137:41"><name pos:start="137:13" pos:end="137:17">level</name> <operator pos:start="137:19" pos:end="137:19">=</operator> <operator pos:start="137:21" pos:end="137:21">(</operator><name pos:start="137:22" pos:end="137:26">level</name> <operator pos:start="137:28" pos:end="137:28">^</operator> <name pos:start="137:30" pos:end="137:33">sign</name><operator pos:start="137:34" pos:end="137:34">)</operator> <operator pos:start="137:36" pos:end="137:36">-</operator> <name pos:start="137:38" pos:end="137:41">sign</name></expr>;</expr_stmt>



            <if_stmt pos:start="141:13" pos:end="145:13"><if pos:start="141:13" pos:end="145:13">if<condition pos:start="141:15" pos:end="141:32">(<expr pos:start="141:16" pos:end="141:31"><name pos:start="141:16" pos:end="141:31">use_quant_matrix</name></expr>)</condition><block pos:start="141:33" pos:end="145:13">{<block_content pos:start="143:17" pos:end="143:52">

                <expr_stmt pos:start="143:17" pos:end="143:52"><expr pos:start="143:17" pos:end="143:51"><name pos:start="143:17" pos:end="143:21">level</name> <operator pos:start="143:23" pos:end="143:23">=</operator> <operator pos:start="143:25" pos:end="143:25">(</operator><name pos:start="143:26" pos:end="143:30">level</name><operator pos:start="143:31" pos:end="143:31">*</operator><name pos:start="143:32" pos:end="143:47"><name pos:start="143:32" pos:end="143:42">quant_table</name><index pos:start="143:43" pos:end="143:47">[<expr pos:start="143:44" pos:end="143:46"><name pos:start="143:44" pos:end="143:46">pos</name></expr>]</index></name><operator pos:start="143:48" pos:end="143:48">)</operator><operator pos:start="143:49" pos:end="143:50">&gt;&gt;</operator><literal type="number" pos:start="143:51" pos:end="143:51">8</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:48"><expr pos:start="147:13" pos:end="147:47"><name pos:start="147:13" pos:end="147:41"><name pos:start="147:13" pos:end="147:13">s</name><operator pos:start="147:14" pos:end="147:15">-&gt;</operator><name pos:start="147:16" pos:end="147:20">block</name><index pos:start="147:21" pos:end="147:23">[<expr pos:start="147:22" pos:end="147:22"><literal type="number" pos:start="147:22" pos:end="147:22">0</literal></expr>]</index><index pos:start="147:24" pos:end="147:41">[ <expr pos:start="147:26" pos:end="147:39"><name pos:start="147:26" pos:end="147:39"><name pos:start="147:26" pos:end="147:34">scantable</name><index pos:start="147:35" pos:end="147:39">[<expr pos:start="147:36" pos:end="147:38"><name pos:start="147:36" pos:end="147:38">pos</name></expr>]</index></name></expr> ]</index></name><operator pos:start="147:42" pos:end="147:42">=</operator><name pos:start="147:43" pos:end="147:47">level</name></expr>;</expr_stmt>

        </block_content>}</block>while<condition pos:start="149:15" pos:end="149:22">(<expr pos:start="149:16" pos:end="149:21"><operator pos:start="149:16" pos:end="149:16">!</operator><name pos:start="149:17" pos:end="149:21">final</name></expr>)</condition>;</do>



        <expr_stmt pos:start="153:9" pos:end="153:35"><expr pos:start="153:9" pos:end="153:34"><name pos:start="153:9" pos:end="153:30"><name pos:start="153:9" pos:end="153:9">s</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:27">block_last_index</name><index pos:start="153:28" pos:end="153:30">[<expr pos:start="153:29" pos:end="153:29"><literal type="number" pos:start="153:29" pos:end="153:29">0</literal></expr>]</index></name><operator pos:start="153:31" pos:end="153:31">=</operator><name pos:start="153:32" pos:end="153:34">pos</name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="155:6" pos:end="189:5">else<block pos:start="155:10" pos:end="189:5">{<block_content pos:start="157:9" pos:end="187:37"><comment type="line" pos:start="155:11" pos:end="155:19">//DC only</comment>

        <expr_stmt pos:start="157:9" pos:end="157:33"><expr pos:start="157:9" pos:end="157:32"><name pos:start="157:9" pos:end="157:30"><name pos:start="157:9" pos:end="157:9">s</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:27">block_last_index</name><index pos:start="157:28" pos:end="157:30">[<expr pos:start="157:29" pos:end="157:29"><literal type="number" pos:start="157:29" pos:end="157:29">0</literal></expr>]</index></name><operator pos:start="157:31" pos:end="157:31">=</operator><literal type="number" pos:start="157:32" pos:end="157:32">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="159:9" pos:end="185:9"><if pos:start="159:9" pos:end="185:9">if<condition pos:start="159:11" pos:end="159:54">(<expr pos:start="159:12" pos:end="159:53"><name pos:start="159:12" pos:end="159:21"><name pos:start="159:12" pos:end="159:12">w</name><operator pos:start="159:13" pos:end="159:14">-&gt;</operator><name pos:start="159:15" pos:end="159:21">flat_dc</name></name> <operator pos:start="159:23" pos:end="159:24">&amp;&amp;</operator> <operator pos:start="159:26" pos:end="159:26">(</operator><operator pos:start="159:27" pos:end="159:27">(</operator><name pos:start="159:28" pos:end="159:35">unsigned</name><operator pos:start="159:36" pos:end="159:36">)</operator><operator pos:start="159:37" pos:end="159:37">(</operator><name pos:start="159:38" pos:end="159:45">dc_level</name><operator pos:start="159:46" pos:end="159:46">+</operator><literal type="number" pos:start="159:47" pos:end="159:47">1</literal><operator pos:start="159:48" pos:end="159:48">)</operator><operator pos:start="159:49" pos:end="159:49">)</operator> <operator pos:start="159:51" pos:end="159:51">&lt;</operator> <literal type="number" pos:start="159:53" pos:end="159:53">3</literal></expr>)</condition><block pos:start="159:55" pos:end="185:9">{<block_content pos:start="161:13" pos:end="183:30"><comment type="line" pos:start="159:56" pos:end="159:63">//[-1;1]</comment>

            <decl_stmt pos:start="161:13" pos:end="163:70"><decl pos:start="161:13" pos:end="163:69"><type pos:start="161:13" pos:end="161:19"><name pos:start="161:13" pos:end="161:19">int32_t</name></type> <name pos:start="161:21" pos:end="161:32">divide_quant</name><init pos:start="161:33" pos:end="163:69">= <expr pos:start="161:35" pos:end="163:69"><ternary pos:start="161:35" pos:end="163:69"><condition pos:start="161:35" pos:end="161:43"><expr pos:start="161:35" pos:end="161:41"><operator pos:start="161:35" pos:end="161:35">!</operator><name pos:start="161:36" pos:end="161:41">chroma</name></expr> ?</condition><then pos:start="161:45" pos:end="161:67"> <expr pos:start="161:45" pos:end="161:67"><name pos:start="161:45" pos:end="161:67"><name pos:start="161:45" pos:end="161:45">w</name><operator pos:start="161:46" pos:end="161:47">-&gt;</operator><name pos:start="161:48" pos:end="161:67">divide_quant_dc_luma</name></name></expr></then><else pos:start="161:68" pos:end="163:69">:

                                            <expr pos:start="163:45" pos:end="163:69"><name pos:start="163:45" pos:end="163:69"><name pos:start="163:45" pos:end="163:45">w</name><operator pos:start="163:46" pos:end="163:47">-&gt;</operator><name pos:start="163:48" pos:end="163:69">divide_quant_dc_chroma</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="165:13" pos:end="167:63"><decl pos:start="165:13" pos:end="167:62"><type pos:start="165:13" pos:end="165:19"><name pos:start="165:13" pos:end="165:19">int32_t</name></type> <name pos:start="165:21" pos:end="165:28">dc_quant</name>    <init pos:start="165:33" pos:end="167:62">= <expr pos:start="165:35" pos:end="167:62"><ternary pos:start="165:35" pos:end="167:62"><condition pos:start="165:35" pos:end="165:43"><expr pos:start="165:35" pos:end="165:41"><operator pos:start="165:35" pos:end="165:35">!</operator><name pos:start="165:36" pos:end="165:41">chroma</name></expr> ?</condition><then pos:start="165:45" pos:end="165:52"> <expr pos:start="165:45" pos:end="165:52"><name pos:start="165:45" pos:end="165:52"><name pos:start="165:45" pos:end="165:45">w</name><operator pos:start="165:46" pos:end="165:47">-&gt;</operator><name pos:start="165:48" pos:end="165:52">quant</name></name></expr></then><else pos:start="165:53" pos:end="167:62">:

                                            <expr pos:start="167:45" pos:end="167:62"><name pos:start="167:45" pos:end="167:62"><name pos:start="167:45" pos:end="167:45">w</name><operator pos:start="167:46" pos:end="167:47">-&gt;</operator><name pos:start="167:48" pos:end="167:62">quant_dc_chroma</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>



            <comment type="line" pos:start="171:13" pos:end="171:101">//original intent dc_level+=predicted_dc/quant; but it got lost somewhere in the rounding</comment>

            <expr_stmt pos:start="173:13" pos:end="173:69"><expr pos:start="173:13" pos:end="173:68"><name pos:start="173:13" pos:end="173:20">dc_level</name><operator pos:start="173:21" pos:end="173:22">+=</operator> <operator pos:start="173:24" pos:end="173:24">(</operator><name pos:start="173:25" pos:end="173:39"><name pos:start="173:25" pos:end="173:25">w</name><operator pos:start="173:26" pos:end="173:27">-&gt;</operator><name pos:start="173:28" pos:end="173:39">predicted_dc</name></name><operator pos:start="173:40" pos:end="173:40">*</operator><name pos:start="173:41" pos:end="173:52">divide_quant</name> <operator pos:start="173:54" pos:end="173:54">+</operator> <operator pos:start="173:56" pos:end="173:56">(</operator><literal type="number" pos:start="173:57" pos:end="173:57">1</literal><operator pos:start="173:58" pos:end="173:59">&lt;&lt;</operator><literal type="number" pos:start="173:60" pos:end="173:61">12</literal><operator pos:start="173:62" pos:end="173:62">)</operator> <operator pos:start="173:64" pos:end="173:64">)</operator><operator pos:start="173:65" pos:end="173:66">&gt;&gt;</operator><literal type="number" pos:start="173:67" pos:end="173:68">13</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="177:13" pos:end="179:93"><expr pos:start="177:13" pos:end="179:92"><call pos:start="177:13" pos:end="179:92"><name pos:start="177:13" pos:end="177:33">dsp_x8_put_solidcolor</name><argument_list pos:start="177:34" pos:end="179:92">( <argument pos:start="177:36" pos:end="177:74"><expr pos:start="177:36" pos:end="177:74"><call pos:start="177:36" pos:end="177:74"><name pos:start="177:36" pos:end="177:48">av_clip_uint8</name><argument_list pos:start="177:49" pos:end="177:74">(<argument pos:start="177:50" pos:end="177:73"><expr pos:start="177:50" pos:end="177:73"><operator pos:start="177:50" pos:end="177:50">(</operator><name pos:start="177:51" pos:end="177:58">dc_level</name><operator pos:start="177:59" pos:end="177:59">*</operator><name pos:start="177:60" pos:end="177:67">dc_quant</name><operator pos:start="177:68" pos:end="177:68">+</operator><literal type="number" pos:start="177:69" pos:end="177:69">4</literal><operator pos:start="177:70" pos:end="177:70">)</operator><operator pos:start="177:71" pos:end="177:72">&gt;&gt;</operator><literal type="number" pos:start="177:73" pos:end="177:73">3</literal></expr></argument>)</argument_list></call></expr></argument>,

                                   <argument pos:start="179:36" pos:end="179:50"><expr pos:start="179:36" pos:end="179:50"><name pos:start="179:36" pos:end="179:50"><name pos:start="179:36" pos:end="179:36">s</name><operator pos:start="179:37" pos:end="179:38">-&gt;</operator><name pos:start="179:39" pos:end="179:42">dest</name><index pos:start="179:43" pos:end="179:50">[<expr pos:start="179:44" pos:end="179:49"><name pos:start="179:44" pos:end="179:49">chroma</name></expr>]</index></name></expr></argument>, <argument pos:start="179:53" pos:end="179:91"><expr pos:start="179:53" pos:end="179:91"><name pos:start="179:53" pos:end="179:91"><name pos:start="179:53" pos:end="179:53">s</name><operator pos:start="179:54" pos:end="179:55">-&gt;</operator><name pos:start="179:56" pos:end="179:70">current_picture</name><operator pos:start="179:71" pos:end="179:71">.</operator><name pos:start="179:72" pos:end="179:72">f</name><operator pos:start="179:73" pos:end="179:73">.</operator><name pos:start="179:74" pos:end="179:81">linesize</name><index pos:start="179:82" pos:end="179:91">[<expr pos:start="179:83" pos:end="179:90"><operator pos:start="179:83" pos:end="179:83">!</operator><operator pos:start="179:84" pos:end="179:84">!</operator><name pos:start="179:85" pos:end="179:90">chroma</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <goto pos:start="183:13" pos:end="183:30">goto <name pos:start="183:18" pos:end="183:29">block_placed</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:37"><expr pos:start="187:9" pos:end="187:36"><name pos:start="187:9" pos:end="187:18">zeros_only</name> <operator pos:start="187:20" pos:end="187:20">=</operator> <operator pos:start="187:22" pos:end="187:22">(</operator><name pos:start="187:23" pos:end="187:30">dc_level</name> <operator pos:start="187:32" pos:end="187:33">==</operator> <literal type="number" pos:start="187:35" pos:end="187:35">0</literal><operator pos:start="187:36" pos:end="187:36">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="191:5" pos:end="199:5"><if pos:start="191:5" pos:end="195:5">if<condition pos:start="191:7" pos:end="191:15">(<expr pos:start="191:8" pos:end="191:14"><operator pos:start="191:8" pos:end="191:8">!</operator><name pos:start="191:9" pos:end="191:14">chroma</name></expr>)</condition><block pos:start="191:16" pos:end="195:5">{<block_content pos:start="193:9" pos:end="193:43">

        <expr_stmt pos:start="193:9" pos:end="193:43"><expr pos:start="193:9" pos:end="193:42"><name pos:start="193:9" pos:end="193:22"><name pos:start="193:9" pos:end="193:9">s</name><operator pos:start="193:10" pos:end="193:11">-&gt;</operator><name pos:start="193:12" pos:end="193:16">block</name><index pos:start="193:17" pos:end="193:19">[<expr pos:start="193:18" pos:end="193:18"><literal type="number" pos:start="193:18" pos:end="193:18">0</literal></expr>]</index><index pos:start="193:20" pos:end="193:22">[<expr pos:start="193:21" pos:end="193:21"><literal type="number" pos:start="193:21" pos:end="193:21">0</literal></expr>]</index></name> <operator pos:start="193:24" pos:end="193:24">=</operator> <name pos:start="193:26" pos:end="193:33">dc_level</name><operator pos:start="193:34" pos:end="193:34">*</operator><name pos:start="193:35" pos:end="193:42"><name pos:start="193:35" pos:end="193:35">w</name><operator pos:start="193:36" pos:end="193:37">-&gt;</operator><name pos:start="193:38" pos:end="193:42">quant</name></name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="195:6" pos:end="199:5">else<block pos:start="195:10" pos:end="199:5">{<block_content pos:start="197:9" pos:end="197:53">

        <expr_stmt pos:start="197:9" pos:end="197:53"><expr pos:start="197:9" pos:end="197:52"><name pos:start="197:9" pos:end="197:22"><name pos:start="197:9" pos:end="197:9">s</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:16">block</name><index pos:start="197:17" pos:end="197:19">[<expr pos:start="197:18" pos:end="197:18"><literal type="number" pos:start="197:18" pos:end="197:18">0</literal></expr>]</index><index pos:start="197:20" pos:end="197:22">[<expr pos:start="197:21" pos:end="197:21"><literal type="number" pos:start="197:21" pos:end="197:21">0</literal></expr>]</index></name> <operator pos:start="197:24" pos:end="197:24">=</operator> <name pos:start="197:26" pos:end="197:33">dc_level</name><operator pos:start="197:34" pos:end="197:34">*</operator><name pos:start="197:35" pos:end="197:52"><name pos:start="197:35" pos:end="197:35">w</name><operator pos:start="197:36" pos:end="197:37">-&gt;</operator><name pos:start="197:38" pos:end="197:52">quant_dc_chroma</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="line" pos:start="203:5" pos:end="203:77">//there is !zero_only check in the original, but dc_level check is enough</comment>

    <if_stmt pos:start="205:5" pos:end="221:5"><if pos:start="205:5" pos:end="221:5">if<condition pos:start="205:7" pos:end="205:62">( <expr pos:start="205:9" pos:end="205:60"><operator pos:start="205:9" pos:end="205:9">(</operator><name pos:start="205:10" pos:end="205:17">unsigned</name> <name pos:start="205:19" pos:end="205:21">int</name><operator pos:start="205:22" pos:end="205:22">)</operator><operator pos:start="205:23" pos:end="205:23">(</operator><name pos:start="205:24" pos:end="205:31">dc_level</name><operator pos:start="205:32" pos:end="205:32">+</operator><literal type="number" pos:start="205:33" pos:end="205:33">1</literal><operator pos:start="205:34" pos:end="205:34">)</operator> <operator pos:start="205:36" pos:end="205:37">&gt;=</operator> <literal type="number" pos:start="205:39" pos:end="205:39">3</literal> <operator pos:start="205:41" pos:end="205:42">&amp;&amp;</operator> <operator pos:start="205:44" pos:end="205:44">(</operator><name pos:start="205:45" pos:end="205:52"><name pos:start="205:45" pos:end="205:45">w</name><operator pos:start="205:46" pos:end="205:47">-&gt;</operator><name pos:start="205:48" pos:end="205:52">edges</name></name><operator pos:start="205:53" pos:end="205:53">&amp;</operator><literal type="number" pos:start="205:54" pos:end="205:54">3</literal><operator pos:start="205:55" pos:end="205:55">)</operator> <operator pos:start="205:57" pos:end="205:58">!=</operator> <literal type="number" pos:start="205:60" pos:end="205:60">3</literal></expr> )</condition><block pos:start="205:63" pos:end="221:5">{<block_content pos:start="207:9" pos:end="219:9">

        <decl_stmt pos:start="207:9" pos:end="207:22"><decl pos:start="207:9" pos:end="207:21"><type pos:start="207:9" pos:end="207:11"><name pos:start="207:9" pos:end="207:11">int</name></type> <name pos:start="207:13" pos:end="207:21">direction</name></decl>;</decl_stmt>

        <comment type="block" pos:start="209:9" pos:end="211:65">/*ac_comp_direction[orient] = { 0, 3, 3, 1, 1, 0, 0, 0, 2, 2, 2, 1 };&lt;-

        -&gt; 01'10' 10'10' 00'00' 00'01' 01'11' 11'00 =&gt;0x6A017C */</comment>

        <expr_stmt pos:start="213:9" pos:end="213:47"><expr pos:start="213:9" pos:end="213:46"><name pos:start="213:9" pos:end="213:17">direction</name><operator pos:start="213:18" pos:end="213:18">=</operator> <operator pos:start="213:20" pos:end="213:20">(</operator><literal type="number" pos:start="213:21" pos:end="213:28">0x6A017C</literal><operator pos:start="213:29" pos:end="213:30">&gt;&gt;</operator><operator pos:start="213:31" pos:end="213:31">(</operator><name pos:start="213:32" pos:end="213:40"><name pos:start="213:32" pos:end="213:32">w</name><operator pos:start="213:33" pos:end="213:34">-&gt;</operator><name pos:start="213:35" pos:end="213:40">orient</name></name><operator pos:start="213:41" pos:end="213:41">*</operator><literal type="number" pos:start="213:42" pos:end="213:42">2</literal><operator pos:start="213:43" pos:end="213:43">)</operator><operator pos:start="213:44" pos:end="213:44">)</operator><operator pos:start="213:45" pos:end="213:45">&amp;</operator><literal type="number" pos:start="213:46" pos:end="213:46">3</literal></expr>;</expr_stmt>

        <if_stmt pos:start="215:9" pos:end="219:9"><if pos:start="215:9" pos:end="219:9">if <condition pos:start="215:12" pos:end="215:27">(<expr pos:start="215:13" pos:end="215:26"><name pos:start="215:13" pos:end="215:21">direction</name> <operator pos:start="215:23" pos:end="215:24">!=</operator> <literal type="number" pos:start="215:26" pos:end="215:26">3</literal></expr>)</condition><block pos:start="215:28" pos:end="219:9">{<block_content pos:start="217:13" pos:end="217:61">

            <expr_stmt pos:start="217:13" pos:end="217:61"><expr pos:start="217:13" pos:end="217:60"><call pos:start="217:13" pos:end="217:60"><name pos:start="217:13" pos:end="217:30">x8_ac_compensation</name><argument_list pos:start="217:31" pos:end="217:60">(<argument pos:start="217:32" pos:end="217:32"><expr pos:start="217:32" pos:end="217:32"><name pos:start="217:32" pos:end="217:32">w</name></expr></argument>, <argument pos:start="217:35" pos:end="217:43"><expr pos:start="217:35" pos:end="217:43"><name pos:start="217:35" pos:end="217:43">direction</name></expr></argument>, <argument pos:start="217:46" pos:end="217:59"><expr pos:start="217:46" pos:end="217:59"><name pos:start="217:46" pos:end="217:59"><name pos:start="217:46" pos:end="217:46">s</name><operator pos:start="217:47" pos:end="217:48">-&gt;</operator><name pos:start="217:49" pos:end="217:53">block</name><index pos:start="217:54" pos:end="217:56">[<expr pos:start="217:55" pos:end="217:55"><literal type="number" pos:start="217:55" pos:end="217:55">0</literal></expr>]</index><index pos:start="217:57" pos:end="217:59">[<expr pos:start="217:58" pos:end="217:58"><literal type="number" pos:start="217:58" pos:end="217:58">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt><comment type="line" pos:start="217:62" pos:end="217:82">//modify block_last[]</comment>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="225:5" pos:end="237:5"><if pos:start="225:5" pos:end="229:5">if<condition pos:start="225:7" pos:end="225:18">(<expr pos:start="225:8" pos:end="225:17"><name pos:start="225:8" pos:end="225:17"><name pos:start="225:8" pos:end="225:8">w</name><operator pos:start="225:9" pos:end="225:10">-&gt;</operator><name pos:start="225:11" pos:end="225:17">flat_dc</name></name></expr>)</condition><block pos:start="225:19" pos:end="229:5">{<block_content pos:start="227:9" pos:end="227:105">

        <expr_stmt pos:start="227:9" pos:end="227:105"><expr pos:start="227:9" pos:end="227:104"><call pos:start="227:9" pos:end="227:104"><name pos:start="227:9" pos:end="227:29">dsp_x8_put_solidcolor</name><argument_list pos:start="227:30" pos:end="227:104">(<argument pos:start="227:31" pos:end="227:45"><expr pos:start="227:31" pos:end="227:45"><name pos:start="227:31" pos:end="227:45"><name pos:start="227:31" pos:end="227:31">w</name><operator pos:start="227:32" pos:end="227:33">-&gt;</operator><name pos:start="227:34" pos:end="227:45">predicted_dc</name></name></expr></argument>, <argument pos:start="227:48" pos:end="227:62"><expr pos:start="227:48" pos:end="227:62"><name pos:start="227:48" pos:end="227:62"><name pos:start="227:48" pos:end="227:48">s</name><operator pos:start="227:49" pos:end="227:50">-&gt;</operator><name pos:start="227:51" pos:end="227:54">dest</name><index pos:start="227:55" pos:end="227:62">[<expr pos:start="227:56" pos:end="227:61"><name pos:start="227:56" pos:end="227:61">chroma</name></expr>]</index></name></expr></argument>, <argument pos:start="227:65" pos:end="227:103"><expr pos:start="227:65" pos:end="227:103"><name pos:start="227:65" pos:end="227:103"><name pos:start="227:65" pos:end="227:65">s</name><operator pos:start="227:66" pos:end="227:67">-&gt;</operator><name pos:start="227:68" pos:end="227:82">current_picture</name><operator pos:start="227:83" pos:end="227:83">.</operator><name pos:start="227:84" pos:end="227:84">f</name><operator pos:start="227:85" pos:end="227:85">.</operator><name pos:start="227:86" pos:end="227:93">linesize</name><index pos:start="227:94" pos:end="227:103">[<expr pos:start="227:95" pos:end="227:102"><operator pos:start="227:95" pos:end="227:95">!</operator><operator pos:start="227:96" pos:end="227:96">!</operator><name pos:start="227:97" pos:end="227:102">chroma</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="229:6" pos:end="237:5">else<block pos:start="229:10" pos:end="237:5">{<block_content pos:start="231:9" pos:end="235:86">

        <expr_stmt pos:start="231:9" pos:end="235:86"><expr pos:start="231:9" pos:end="235:85"><name pos:start="231:9" pos:end="231:46"><name pos:start="231:9" pos:end="231:9">w</name><operator pos:start="231:10" pos:end="231:11">-&gt;</operator><name pos:start="231:12" pos:end="231:14">dsp</name><operator pos:start="231:15" pos:end="231:15">.</operator><name pos:start="231:16" pos:end="231:35">spatial_compensation</name><index pos:start="231:36" pos:end="231:46">[<expr pos:start="231:37" pos:end="231:45"><name pos:start="231:37" pos:end="231:45"><name pos:start="231:37" pos:end="231:37">w</name><operator pos:start="231:38" pos:end="231:39">-&gt;</operator><name pos:start="231:40" pos:end="231:45">orient</name></name></expr>]</index></name><operator pos:start="231:47" pos:end="231:47">(</operator> <name pos:start="231:49" pos:end="231:66"><name pos:start="231:49" pos:end="231:49">s</name><operator pos:start="231:50" pos:end="231:51">-&gt;</operator><name pos:start="231:52" pos:end="231:66">edge_emu_buffer</name></name><operator pos:start="231:67" pos:end="231:67">,</operator>

                                            <name pos:start="233:45" pos:end="233:59"><name pos:start="233:45" pos:end="233:45">s</name><operator pos:start="233:46" pos:end="233:47">-&gt;</operator><name pos:start="233:48" pos:end="233:51">dest</name><index pos:start="233:52" pos:end="233:59">[<expr pos:start="233:53" pos:end="233:58"><name pos:start="233:53" pos:end="233:58">chroma</name></expr>]</index></name><operator pos:start="233:60" pos:end="233:60">,</operator>

                                            <name pos:start="235:45" pos:end="235:83"><name pos:start="235:45" pos:end="235:45">s</name><operator pos:start="235:46" pos:end="235:47">-&gt;</operator><name pos:start="235:48" pos:end="235:62">current_picture</name><operator pos:start="235:63" pos:end="235:63">.</operator><name pos:start="235:64" pos:end="235:64">f</name><operator pos:start="235:65" pos:end="235:65">.</operator><name pos:start="235:66" pos:end="235:73">linesize</name><index pos:start="235:74" pos:end="235:83">[<expr pos:start="235:75" pos:end="235:82"><operator pos:start="235:75" pos:end="235:75">!</operator><operator pos:start="235:76" pos:end="235:76">!</operator><name pos:start="235:77" pos:end="235:82">chroma</name></expr>]</index></name> <operator pos:start="235:85" pos:end="235:85">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="239:5" pos:end="245:40"><if pos:start="239:5" pos:end="245:40">if<condition pos:start="239:7" pos:end="239:19">(<expr pos:start="239:8" pos:end="239:18"><operator pos:start="239:8" pos:end="239:8">!</operator><name pos:start="239:9" pos:end="239:18">zeros_only</name></expr>)</condition><block type="pseudo" pos:start="241:9" pos:end="245:40"><block_content pos:start="241:9" pos:end="245:40">

        <expr_stmt pos:start="241:9" pos:end="245:40"><expr pos:start="241:9" pos:end="245:39"><call pos:start="241:9" pos:end="245:39"><name pos:start="241:9" pos:end="241:23"><name pos:start="241:9" pos:end="241:9">s</name><operator pos:start="241:10" pos:end="241:11">-&gt;</operator><name pos:start="241:12" pos:end="241:14">dsp</name><operator pos:start="241:15" pos:end="241:15">.</operator><name pos:start="241:16" pos:end="241:23">idct_add</name></name> <argument_list pos:start="241:25" pos:end="245:39">( <argument pos:start="241:27" pos:end="241:41"><expr pos:start="241:27" pos:end="241:41"><name pos:start="241:27" pos:end="241:41"><name pos:start="241:27" pos:end="241:27">s</name><operator pos:start="241:28" pos:end="241:29">-&gt;</operator><name pos:start="241:30" pos:end="241:33">dest</name><index pos:start="241:34" pos:end="241:41">[<expr pos:start="241:35" pos:end="241:40"><name pos:start="241:35" pos:end="241:40">chroma</name></expr>]</index></name></expr></argument>,

                          <argument pos:start="243:27" pos:end="243:65"><expr pos:start="243:27" pos:end="243:65"><name pos:start="243:27" pos:end="243:65"><name pos:start="243:27" pos:end="243:27">s</name><operator pos:start="243:28" pos:end="243:29">-&gt;</operator><name pos:start="243:30" pos:end="243:44">current_picture</name><operator pos:start="243:45" pos:end="243:45">.</operator><name pos:start="243:46" pos:end="243:46">f</name><operator pos:start="243:47" pos:end="243:47">.</operator><name pos:start="243:48" pos:end="243:55">linesize</name><index pos:start="243:56" pos:end="243:65">[<expr pos:start="243:57" pos:end="243:64"><operator pos:start="243:57" pos:end="243:57">!</operator><operator pos:start="243:58" pos:end="243:58">!</operator><name pos:start="243:59" pos:end="243:64">chroma</name></expr>]</index></name></expr></argument>,

                          <argument pos:start="245:27" pos:end="245:37"><expr pos:start="245:27" pos:end="245:37"><name pos:start="245:27" pos:end="245:37"><name pos:start="245:27" pos:end="245:27">s</name><operator pos:start="245:28" pos:end="245:29">-&gt;</operator><name pos:start="245:30" pos:end="245:34">block</name><index pos:start="245:35" pos:end="245:37">[<expr pos:start="245:36" pos:end="245:36"><literal type="number" pos:start="245:36" pos:end="245:36">0</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



<label pos:start="249:1" pos:end="249:13"><name pos:start="249:1" pos:end="249:12">block_placed</name>:</label>



    <if_stmt pos:start="253:5" pos:end="257:5"><if pos:start="253:5" pos:end="257:5">if<condition pos:start="253:7" pos:end="253:15">(<expr pos:start="253:8" pos:end="253:14"><operator pos:start="253:8" pos:end="253:8">!</operator><name pos:start="253:9" pos:end="253:14">chroma</name></expr>)</condition><block pos:start="253:16" pos:end="257:5">{<block_content pos:start="255:9" pos:end="255:45">

        <expr_stmt pos:start="255:9" pos:end="255:45"><expr pos:start="255:9" pos:end="255:44"><call pos:start="255:9" pos:end="255:44"><name pos:start="255:9" pos:end="255:29">x8_update_predictions</name><argument_list pos:start="255:30" pos:end="255:44">(<argument pos:start="255:31" pos:end="255:31"><expr pos:start="255:31" pos:end="255:31"><name pos:start="255:31" pos:end="255:31">w</name></expr></argument>,<argument pos:start="255:33" pos:end="255:41"><expr pos:start="255:33" pos:end="255:41"><name pos:start="255:33" pos:end="255:41"><name pos:start="255:33" pos:end="255:33">w</name><operator pos:start="255:34" pos:end="255:35">-&gt;</operator><name pos:start="255:36" pos:end="255:41">orient</name></name></expr></argument>,<argument pos:start="255:43" pos:end="255:43"><expr pos:start="255:43" pos:end="255:43"><name pos:start="255:43" pos:end="255:43">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="261:5" pos:end="281:5"><if pos:start="261:5" pos:end="281:5">if<condition pos:start="261:7" pos:end="261:22">(<expr pos:start="261:8" pos:end="261:21"><name pos:start="261:8" pos:end="261:21"><name pos:start="261:8" pos:end="261:8">s</name><operator pos:start="261:9" pos:end="261:10">-&gt;</operator><name pos:start="261:11" pos:end="261:21">loop_filter</name></name></expr>)</condition><block pos:start="261:23" pos:end="281:5">{<block_content pos:start="263:9" pos:end="279:9">

        <decl_stmt pos:start="263:9" pos:end="263:39"><decl pos:start="263:9" pos:end="263:38"><type pos:start="263:9" pos:end="263:16"><name pos:start="263:9" pos:end="263:15">uint8_t</name><modifier pos:start="263:16" pos:end="263:16">*</modifier></type> <name pos:start="263:18" pos:end="263:20">ptr</name> <init pos:start="263:22" pos:end="263:38">= <expr pos:start="263:24" pos:end="263:38"><name pos:start="263:24" pos:end="263:38"><name pos:start="263:24" pos:end="263:24">s</name><operator pos:start="263:25" pos:end="263:26">-&gt;</operator><name pos:start="263:27" pos:end="263:30">dest</name><index pos:start="263:31" pos:end="263:38">[<expr pos:start="263:32" pos:end="263:37"><name pos:start="263:32" pos:end="263:37">chroma</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="265:9" pos:end="265:63"><decl pos:start="265:9" pos:end="265:62"><type pos:start="265:9" pos:end="265:11"><name pos:start="265:9" pos:end="265:11">int</name></type> <name pos:start="265:13" pos:end="265:20">linesize</name> <init pos:start="265:22" pos:end="265:62">= <expr pos:start="265:24" pos:end="265:62"><name pos:start="265:24" pos:end="265:62"><name pos:start="265:24" pos:end="265:24">s</name><operator pos:start="265:25" pos:end="265:26">-&gt;</operator><name pos:start="265:27" pos:end="265:41">current_picture</name><operator pos:start="265:42" pos:end="265:42">.</operator><name pos:start="265:43" pos:end="265:43">f</name><operator pos:start="265:44" pos:end="265:44">.</operator><name pos:start="265:45" pos:end="265:52">linesize</name><index pos:start="265:53" pos:end="265:62">[<expr pos:start="265:54" pos:end="265:61"><operator pos:start="265:54" pos:end="265:54">!</operator><operator pos:start="265:55" pos:end="265:55">!</operator><name pos:start="265:56" pos:end="265:61">chroma</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="269:9" pos:end="273:9"><if pos:start="269:9" pos:end="273:9">if<condition pos:start="269:11" pos:end="269:67">(<expr pos:start="269:12" pos:end="269:66"><operator pos:start="269:12" pos:end="269:12">!</operator><operator pos:start="269:13" pos:end="269:13">(</operator> <operator pos:start="269:15" pos:end="269:15">(</operator><name pos:start="269:16" pos:end="269:23"><name pos:start="269:16" pos:end="269:16">w</name><operator pos:start="269:17" pos:end="269:18">-&gt;</operator><name pos:start="269:19" pos:end="269:23">edges</name></name><operator pos:start="269:24" pos:end="269:24">&amp;</operator><literal type="number" pos:start="269:25" pos:end="269:25">2</literal><operator pos:start="269:26" pos:end="269:26">)</operator> <operator pos:start="269:28" pos:end="269:29">||</operator> <operator pos:start="269:31" pos:end="269:31">(</operator> <name pos:start="269:33" pos:end="269:42">zeros_only</name> <operator pos:start="269:44" pos:end="269:45">&amp;&amp;</operator> <operator pos:start="269:47" pos:end="269:47">(</operator><name pos:start="269:48" pos:end="269:56"><name pos:start="269:48" pos:end="269:48">w</name><operator pos:start="269:49" pos:end="269:50">-&gt;</operator><name pos:start="269:51" pos:end="269:56">orient</name></name><operator pos:start="269:57" pos:end="269:57">|</operator><literal type="number" pos:start="269:58" pos:end="269:58">4</literal><operator pos:start="269:59" pos:end="269:59">)</operator><operator pos:start="269:60" pos:end="269:61">==</operator><literal type="number" pos:start="269:62" pos:end="269:62">4</literal> <operator pos:start="269:64" pos:end="269:64">)</operator> <operator pos:start="269:66" pos:end="269:66">)</operator></expr>)</condition><block pos:start="269:68" pos:end="273:9">{<block_content pos:start="271:13" pos:end="271:58">

            <expr_stmt pos:start="271:13" pos:end="271:58"><expr pos:start="271:13" pos:end="271:57"><call pos:start="271:13" pos:end="271:57"><name pos:start="271:13" pos:end="271:32"><name pos:start="271:13" pos:end="271:13">w</name><operator pos:start="271:14" pos:end="271:15">-&gt;</operator><name pos:start="271:16" pos:end="271:18">dsp</name><operator pos:start="271:19" pos:end="271:19">.</operator><name pos:start="271:20" pos:end="271:32">h_loop_filter</name></name><argument_list pos:start="271:33" pos:end="271:57">(<argument pos:start="271:34" pos:end="271:36"><expr pos:start="271:34" pos:end="271:36"><name pos:start="271:34" pos:end="271:36">ptr</name></expr></argument>, <argument pos:start="271:39" pos:end="271:46"><expr pos:start="271:39" pos:end="271:46"><name pos:start="271:39" pos:end="271:46">linesize</name></expr></argument>, <argument pos:start="271:49" pos:end="271:56"><expr pos:start="271:49" pos:end="271:56"><name pos:start="271:49" pos:end="271:56"><name pos:start="271:49" pos:end="271:49">w</name><operator pos:start="271:50" pos:end="271:51">-&gt;</operator><name pos:start="271:52" pos:end="271:56">quant</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="275:9" pos:end="279:9"><if pos:start="275:9" pos:end="279:9">if<condition pos:start="275:11" pos:end="275:67">(<expr pos:start="275:12" pos:end="275:66"><operator pos:start="275:12" pos:end="275:12">!</operator><operator pos:start="275:13" pos:end="275:13">(</operator> <operator pos:start="275:15" pos:end="275:15">(</operator><name pos:start="275:16" pos:end="275:23"><name pos:start="275:16" pos:end="275:16">w</name><operator pos:start="275:17" pos:end="275:18">-&gt;</operator><name pos:start="275:19" pos:end="275:23">edges</name></name><operator pos:start="275:24" pos:end="275:24">&amp;</operator><literal type="number" pos:start="275:25" pos:end="275:25">1</literal><operator pos:start="275:26" pos:end="275:26">)</operator> <operator pos:start="275:28" pos:end="275:29">||</operator> <operator pos:start="275:31" pos:end="275:31">(</operator> <name pos:start="275:33" pos:end="275:42">zeros_only</name> <operator pos:start="275:44" pos:end="275:45">&amp;&amp;</operator> <operator pos:start="275:47" pos:end="275:47">(</operator><name pos:start="275:48" pos:end="275:56"><name pos:start="275:48" pos:end="275:48">w</name><operator pos:start="275:49" pos:end="275:50">-&gt;</operator><name pos:start="275:51" pos:end="275:56">orient</name></name><operator pos:start="275:57" pos:end="275:57">|</operator><literal type="number" pos:start="275:58" pos:end="275:58">8</literal><operator pos:start="275:59" pos:end="275:59">)</operator><operator pos:start="275:60" pos:end="275:61">==</operator><literal type="number" pos:start="275:62" pos:end="275:62">8</literal> <operator pos:start="275:64" pos:end="275:64">)</operator> <operator pos:start="275:66" pos:end="275:66">)</operator></expr>)</condition><block pos:start="275:68" pos:end="279:9">{<block_content pos:start="277:13" pos:end="277:58">

            <expr_stmt pos:start="277:13" pos:end="277:58"><expr pos:start="277:13" pos:end="277:57"><call pos:start="277:13" pos:end="277:57"><name pos:start="277:13" pos:end="277:32"><name pos:start="277:13" pos:end="277:13">w</name><operator pos:start="277:14" pos:end="277:15">-&gt;</operator><name pos:start="277:16" pos:end="277:18">dsp</name><operator pos:start="277:19" pos:end="277:19">.</operator><name pos:start="277:20" pos:end="277:32">v_loop_filter</name></name><argument_list pos:start="277:33" pos:end="277:57">(<argument pos:start="277:34" pos:end="277:36"><expr pos:start="277:34" pos:end="277:36"><name pos:start="277:34" pos:end="277:36">ptr</name></expr></argument>, <argument pos:start="277:39" pos:end="277:46"><expr pos:start="277:39" pos:end="277:46"><name pos:start="277:39" pos:end="277:46">linesize</name></expr></argument>, <argument pos:start="277:49" pos:end="277:56"><expr pos:start="277:49" pos:end="277:56"><name pos:start="277:49" pos:end="277:56"><name pos:start="277:49" pos:end="277:49">w</name><operator pos:start="277:50" pos:end="277:51">-&gt;</operator><name pos:start="277:52" pos:end="277:56">quant</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="283:5" pos:end="283:13">return <expr pos:start="283:12" pos:end="283:12"><literal type="number" pos:start="283:12" pos:end="283:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
