<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9480.c" pos:tabs="8"><function pos:start="1:1" pos:end="227:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">dca_parse_params</name><parameter_list pos:start="1:28" pos:end="5:41">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:43">DCAParseContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">pc1</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:68"><decl pos:start="1:51" pos:end="1:68"><type pos:start="1:51" pos:end="1:68"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:63">uint8_t</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">buf</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:40"><decl pos:start="3:29" pos:end="3:40"><type pos:start="3:29" pos:end="3:40"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:40">buf_size</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:55"><decl pos:start="3:43" pos:end="3:55"><type pos:start="3:43" pos:end="3:55"><name pos:start="3:43" pos:end="3:45">int</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:55">duration</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:73"><decl pos:start="3:58" pos:end="3:73"><type pos:start="3:58" pos:end="3:73"><name pos:start="3:58" pos:end="3:60">int</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:73">sample_rate</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:40"><decl pos:start="5:29" pos:end="5:40"><type pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:31">int</name> <modifier pos:start="5:33" pos:end="5:33">*</modifier></type><name pos:start="5:34" pos:end="5:40">profile</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="227:1">{<block_content pos:start="9:5" pos:end="225:13">

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:46"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">DCAExssAsset</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:23">asset</name> <init pos:start="9:25" pos:end="9:46">= <expr pos:start="9:27" pos:end="9:46"><operator pos:start="9:27" pos:end="9:27">&amp;</operator><name pos:start="9:28" pos:end="9:46"><name pos:start="9:28" pos:end="9:30">pc1</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">exss</name><operator pos:start="9:37" pos:end="9:37">.</operator><name pos:start="9:38" pos:end="9:43">assets</name><index pos:start="9:44" pos:end="9:46">[<expr pos:start="9:45" pos:end="9:45"><literal type="number" pos:start="9:45" pos:end="9:45">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:17">GetBitContext</name></type> <name pos:start="11:19" pos:end="11:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:22">DCACoreFrameHeader</name></type> <name pos:start="13:24" pos:end="13:24">h</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:83"><decl pos:start="15:5" pos:end="15:82"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:74"><name pos:start="15:13" pos:end="15:15">hdr</name><index pos:start="15:16" pos:end="15:74">[<expr pos:start="15:17" pos:end="15:73"><name pos:start="15:17" pos:end="15:42">DCA_CORE_FRAME_HEADER_SIZE</name> <operator pos:start="15:44" pos:end="15:44">+</operator> <name pos:start="15:46" pos:end="15:73">AV_INPUT_BUFFER_PADDING_SIZE</name></expr>]</index></name> <init pos:start="15:76" pos:end="15:82">= <expr pos:start="15:78" pos:end="15:82"><block pos:start="15:78" pos:end="15:82">{ <expr pos:start="15:80" pos:end="15:80"><literal type="number" pos:start="15:80" pos:end="15:80">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>, <decl pos:start="17:14" pos:end="17:23"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:14" pos:end="17:23">frame_size</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="23:35"><if pos:start="21:5" pos:end="23:35">if <condition pos:start="21:8" pos:end="21:46">(<expr pos:start="21:9" pos:end="21:45"><name pos:start="21:9" pos:end="21:16">buf_size</name> <operator pos:start="21:18" pos:end="21:18">&lt;</operator> <name pos:start="21:20" pos:end="21:45">DCA_CORE_FRAME_HEADER_SIZE</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:35"><block_content pos:start="23:9" pos:end="23:35">

        <return pos:start="23:9" pos:end="23:35">return <expr pos:start="23:16" pos:end="23:34"><name pos:start="23:16" pos:end="23:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="137:5"><if pos:start="27:5" pos:end="137:5">if <condition pos:start="27:8" pos:end="27:47">(<expr pos:start="27:9" pos:end="27:46"><call pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:15">AV_RB32</name><argument_list pos:start="27:16" pos:end="27:20">(<argument pos:start="27:17" pos:end="27:19"><expr pos:start="27:17" pos:end="27:19"><name pos:start="27:17" pos:end="27:19">buf</name></expr></argument>)</argument_list></call> <operator pos:start="27:22" pos:end="27:23">==</operator> <name pos:start="27:25" pos:end="27:46">DCA_SYNCWORD_SUBSTREAM</name></expr>)</condition> <block pos:start="27:49" pos:end="137:5">{<block_content pos:start="29:9" pos:end="135:35">

        <if_stmt pos:start="29:9" pos:end="31:23"><if pos:start="29:9" pos:end="31:23">if <condition pos:start="29:12" pos:end="29:69">(<expr pos:start="29:13" pos:end="29:68"><operator pos:start="29:13" pos:end="29:13">(</operator><name pos:start="29:14" pos:end="29:16">ret</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <call pos:start="29:20" pos:end="29:63"><name pos:start="29:20" pos:end="29:36">ff_dca_exss_parse</name><argument_list pos:start="29:37" pos:end="29:63">(<argument pos:start="29:38" pos:end="29:47"><expr pos:start="29:38" pos:end="29:47"><operator pos:start="29:38" pos:end="29:38">&amp;</operator><name pos:start="29:39" pos:end="29:47"><name pos:start="29:39" pos:end="29:41">pc1</name><operator pos:start="29:42" pos:end="29:43">-&gt;</operator><name pos:start="29:44" pos:end="29:47">exss</name></name></expr></argument>, <argument pos:start="29:50" pos:end="29:52"><expr pos:start="29:50" pos:end="29:52"><name pos:start="29:50" pos:end="29:52">buf</name></expr></argument>, <argument pos:start="29:55" pos:end="29:62"><expr pos:start="29:55" pos:end="29:62"><name pos:start="29:55" pos:end="29:62">buf_size</name></expr></argument>)</argument_list></call><operator pos:start="29:64" pos:end="29:64">)</operator> <operator pos:start="29:66" pos:end="29:66">&lt;</operator> <literal type="number" pos:start="29:68" pos:end="29:68">0</literal></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:23"><block_content pos:start="31:13" pos:end="31:23">

            <return pos:start="31:13" pos:end="31:23">return <expr pos:start="31:20" pos:end="31:22"><name pos:start="31:20" pos:end="31:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="35:9" pos:end="81:9"><if pos:start="35:9" pos:end="81:9">if <condition pos:start="35:12" pos:end="35:49">(<expr pos:start="35:13" pos:end="35:48"><name pos:start="35:13" pos:end="35:33"><name pos:start="35:13" pos:end="35:17">asset</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:33">extension_mask</name></name> <operator pos:start="35:35" pos:end="35:35">&amp;</operator> <name pos:start="35:37" pos:end="35:48">DCA_EXSS_LBR</name></expr>)</condition> <block pos:start="35:51" pos:end="81:9">{<block_content pos:start="37:13" pos:end="79:21">

            <if_stmt pos:start="37:13" pos:end="39:27"><if pos:start="37:13" pos:end="39:27">if <condition pos:start="37:16" pos:end="37:90">(<expr pos:start="37:17" pos:end="37:89"><operator pos:start="37:17" pos:end="37:17">(</operator><name pos:start="37:18" pos:end="37:20">ret</name> <operator pos:start="37:22" pos:end="37:22">=</operator> <call pos:start="37:24" pos:end="37:84"><name pos:start="37:24" pos:end="37:37">init_get_bits8</name><argument_list pos:start="37:38" pos:end="37:84">(<argument pos:start="37:39" pos:end="37:41"><expr pos:start="37:39" pos:end="37:41"><operator pos:start="37:39" pos:end="37:39">&amp;</operator><name pos:start="37:40" pos:end="37:41">gb</name></expr></argument>, <argument pos:start="37:44" pos:end="37:66"><expr pos:start="37:44" pos:end="37:66"><name pos:start="37:44" pos:end="37:46">buf</name> <operator pos:start="37:48" pos:end="37:48">+</operator> <name pos:start="37:50" pos:end="37:66"><name pos:start="37:50" pos:end="37:54">asset</name><operator pos:start="37:55" pos:end="37:56">-&gt;</operator><name pos:start="37:57" pos:end="37:66">lbr_offset</name></name></expr></argument>, <argument pos:start="37:69" pos:end="37:83"><expr pos:start="37:69" pos:end="37:83"><name pos:start="37:69" pos:end="37:83"><name pos:start="37:69" pos:end="37:73">asset</name><operator pos:start="37:74" pos:end="37:75">-&gt;</operator><name pos:start="37:76" pos:end="37:83">lbr_size</name></name></expr></argument>)</argument_list></call><operator pos:start="37:85" pos:end="37:85">)</operator> <operator pos:start="37:87" pos:end="37:87">&lt;</operator> <literal type="number" pos:start="37:89" pos:end="37:89">0</literal></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:27"><block_content pos:start="39:17" pos:end="39:27">

                <return pos:start="39:17" pos:end="39:27">return <expr pos:start="39:24" pos:end="39:26"><name pos:start="39:24" pos:end="39:26">ret</name></expr>;</return></block_content></block></if></if_stmt>



            <if_stmt pos:start="43:13" pos:end="45:43"><if pos:start="43:13" pos:end="45:43">if <condition pos:start="43:16" pos:end="43:59">(<expr pos:start="43:17" pos:end="43:58"><call pos:start="43:17" pos:end="43:38"><name pos:start="43:17" pos:end="43:29">get_bits_long</name><argument_list pos:start="43:30" pos:end="43:38">(<argument pos:start="43:31" pos:end="43:33"><expr pos:start="43:31" pos:end="43:33"><operator pos:start="43:31" pos:end="43:31">&amp;</operator><name pos:start="43:32" pos:end="43:33">gb</name></expr></argument>, <argument pos:start="43:36" pos:end="43:37"><expr pos:start="43:36" pos:end="43:37"><literal type="number" pos:start="43:36" pos:end="43:37">32</literal></expr></argument>)</argument_list></call> <operator pos:start="43:40" pos:end="43:41">!=</operator> <name pos:start="43:43" pos:end="43:58">DCA_SYNCWORD_LBR</name></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:43"><block_content pos:start="45:17" pos:end="45:43">

                <return pos:start="45:17" pos:end="45:43">return <expr pos:start="45:24" pos:end="45:42"><name pos:start="45:24" pos:end="45:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



            <switch pos:start="49:13" pos:end="63:13">switch <condition pos:start="49:20" pos:end="49:37">(<expr pos:start="49:21" pos:end="49:36"><call pos:start="49:21" pos:end="49:36"><name pos:start="49:21" pos:end="49:28">get_bits</name><argument_list pos:start="49:29" pos:end="49:36">(<argument pos:start="49:30" pos:end="49:32"><expr pos:start="49:30" pos:end="49:32"><operator pos:start="49:30" pos:end="49:30">&amp;</operator><name pos:start="49:31" pos:end="49:32">gb</name></expr></argument>, <argument pos:start="49:35" pos:end="49:35"><expr pos:start="49:35" pos:end="49:35"><literal type="number" pos:start="49:35" pos:end="49:35">8</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:39" pos:end="63:13">{<block_content pos:start="51:13" pos:end="61:43">

            <case pos:start="51:13" pos:end="51:45">case <expr pos:start="51:18" pos:end="51:44"><name pos:start="51:18" pos:end="51:44">DCA_LBR_HEADER_DECODER_INIT</name></expr>:</case>

                <expr_stmt pos:start="53:17" pos:end="53:48"><expr pos:start="53:17" pos:end="53:47"><name pos:start="53:17" pos:end="53:28"><name pos:start="53:17" pos:end="53:19">pc1</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:28">sr_code</name></name> <operator pos:start="53:30" pos:end="53:30">=</operator> <call pos:start="53:32" pos:end="53:47"><name pos:start="53:32" pos:end="53:39">get_bits</name><argument_list pos:start="53:40" pos:end="53:47">(<argument pos:start="53:41" pos:end="53:43"><expr pos:start="53:41" pos:end="53:43"><operator pos:start="53:41" pos:end="53:41">&amp;</operator><name pos:start="53:42" pos:end="53:43">gb</name></expr></argument>, <argument pos:start="53:46" pos:end="53:46"><expr pos:start="53:46" pos:end="53:46"><literal type="number" pos:start="53:46" pos:end="53:46">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <case pos:start="55:13" pos:end="55:42">case <expr pos:start="55:18" pos:end="55:41"><name pos:start="55:18" pos:end="55:41">DCA_LBR_HEADER_SYNC_ONLY</name></expr>:</case>

                <break pos:start="57:17" pos:end="57:22">break;</break>

            <default pos:start="59:13" pos:end="59:20">default:</default>

                <return pos:start="61:17" pos:end="61:43">return <expr pos:start="61:24" pos:end="61:42"><name pos:start="61:24" pos:end="61:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></switch>



            <if_stmt pos:start="67:13" pos:end="69:43"><if pos:start="67:13" pos:end="69:43">if <condition pos:start="67:16" pos:end="67:70">(<expr pos:start="67:17" pos:end="67:69"><name pos:start="67:17" pos:end="67:28"><name pos:start="67:17" pos:end="67:19">pc1</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:28">sr_code</name></name> <operator pos:start="67:30" pos:end="67:31">&gt;=</operator> <call pos:start="67:33" pos:end="67:69"><name pos:start="67:33" pos:end="67:46">FF_ARRAY_ELEMS</name><argument_list pos:start="67:47" pos:end="67:69">(<argument pos:start="67:48" pos:end="67:68"><expr pos:start="67:48" pos:end="67:68"><name pos:start="67:48" pos:end="67:68">ff_dca_sampling_freqs</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:43"><block_content pos:start="69:17" pos:end="69:43">

                <return pos:start="69:17" pos:end="69:43">return <expr pos:start="69:24" pos:end="69:42"><name pos:start="69:24" pos:end="69:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="73:13" pos:end="73:63"><expr pos:start="73:13" pos:end="73:62"><operator pos:start="73:13" pos:end="73:13">*</operator><name pos:start="73:14" pos:end="73:24">sample_rate</name> <operator pos:start="73:26" pos:end="73:26">=</operator> <name pos:start="73:28" pos:end="73:62"><name pos:start="73:28" pos:end="73:48">ff_dca_sampling_freqs</name><index pos:start="73:49" pos:end="73:62">[<expr pos:start="73:50" pos:end="73:61"><name pos:start="73:50" pos:end="73:61"><name pos:start="73:50" pos:end="73:52">pc1</name><operator pos:start="73:53" pos:end="73:54">-&gt;</operator><name pos:start="73:55" pos:end="73:61">sr_code</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:65"><expr pos:start="75:13" pos:end="75:64"><operator pos:start="75:13" pos:end="75:13">*</operator><name pos:start="75:14" pos:end="75:21">duration</name> <operator pos:start="75:23" pos:end="75:23">=</operator> <literal type="number" pos:start="75:25" pos:end="75:28">1024</literal> <operator pos:start="75:30" pos:end="75:31">&lt;&lt;</operator> <name pos:start="75:33" pos:end="75:64"><name pos:start="75:33" pos:end="75:50">ff_dca_freq_ranges</name><index pos:start="75:51" pos:end="75:64">[<expr pos:start="75:52" pos:end="75:63"><name pos:start="75:52" pos:end="75:63"><name pos:start="75:52" pos:end="75:54">pc1</name><operator pos:start="75:55" pos:end="75:56">-&gt;</operator><name pos:start="75:57" pos:end="75:63">sr_code</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:46"><expr pos:start="77:13" pos:end="77:45"><operator pos:start="77:13" pos:end="77:13">*</operator><name pos:start="77:14" pos:end="77:20">profile</name> <operator pos:start="77:22" pos:end="77:22">=</operator> <name pos:start="77:24" pos:end="77:45">FF_PROFILE_DTS_EXPRESS</name></expr>;</expr_stmt>

            <return pos:start="79:13" pos:end="79:21">return <expr pos:start="79:20" pos:end="79:20"><literal type="number" pos:start="79:20" pos:end="79:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="85:9" pos:end="131:9"><if pos:start="85:9" pos:end="131:9">if <condition pos:start="85:12" pos:end="85:49">(<expr pos:start="85:13" pos:end="85:48"><name pos:start="85:13" pos:end="85:33"><name pos:start="85:13" pos:end="85:17">asset</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:33">extension_mask</name></name> <operator pos:start="85:35" pos:end="85:35">&amp;</operator> <name pos:start="85:37" pos:end="85:48">DCA_EXSS_XLL</name></expr>)</condition> <block pos:start="85:51" pos:end="131:9">{<block_content pos:start="87:13" pos:end="129:21">

            <decl_stmt pos:start="87:13" pos:end="87:30"><decl pos:start="87:13" pos:end="87:29"><type pos:start="87:13" pos:end="87:15"><name pos:start="87:13" pos:end="87:15">int</name></type> <name pos:start="87:17" pos:end="87:29">nsamples_log2</name></decl>;</decl_stmt>



            <if_stmt pos:start="91:13" pos:end="93:27"><if pos:start="91:13" pos:end="93:27">if <condition pos:start="91:16" pos:end="91:90">(<expr pos:start="91:17" pos:end="91:89"><operator pos:start="91:17" pos:end="91:17">(</operator><name pos:start="91:18" pos:end="91:20">ret</name> <operator pos:start="91:22" pos:end="91:22">=</operator> <call pos:start="91:24" pos:end="91:84"><name pos:start="91:24" pos:end="91:37">init_get_bits8</name><argument_list pos:start="91:38" pos:end="91:84">(<argument pos:start="91:39" pos:end="91:41"><expr pos:start="91:39" pos:end="91:41"><operator pos:start="91:39" pos:end="91:39">&amp;</operator><name pos:start="91:40" pos:end="91:41">gb</name></expr></argument>, <argument pos:start="91:44" pos:end="91:66"><expr pos:start="91:44" pos:end="91:66"><name pos:start="91:44" pos:end="91:46">buf</name> <operator pos:start="91:48" pos:end="91:48">+</operator> <name pos:start="91:50" pos:end="91:66"><name pos:start="91:50" pos:end="91:54">asset</name><operator pos:start="91:55" pos:end="91:56">-&gt;</operator><name pos:start="91:57" pos:end="91:66">xll_offset</name></name></expr></argument>, <argument pos:start="91:69" pos:end="91:83"><expr pos:start="91:69" pos:end="91:83"><name pos:start="91:69" pos:end="91:83"><name pos:start="91:69" pos:end="91:73">asset</name><operator pos:start="91:74" pos:end="91:75">-&gt;</operator><name pos:start="91:76" pos:end="91:83">xll_size</name></name></expr></argument>)</argument_list></call><operator pos:start="91:85" pos:end="91:85">)</operator> <operator pos:start="91:87" pos:end="91:87">&lt;</operator> <literal type="number" pos:start="91:89" pos:end="91:89">0</literal></expr>)</condition><block type="pseudo" pos:start="93:17" pos:end="93:27"><block_content pos:start="93:17" pos:end="93:27">

                <return pos:start="93:17" pos:end="93:27">return <expr pos:start="93:24" pos:end="93:26"><name pos:start="93:24" pos:end="93:26">ret</name></expr>;</return></block_content></block></if></if_stmt>



            <if_stmt pos:start="97:13" pos:end="99:43"><if pos:start="97:13" pos:end="99:43">if <condition pos:start="97:16" pos:end="97:59">(<expr pos:start="97:17" pos:end="97:58"><call pos:start="97:17" pos:end="97:38"><name pos:start="97:17" pos:end="97:29">get_bits_long</name><argument_list pos:start="97:30" pos:end="97:38">(<argument pos:start="97:31" pos:end="97:33"><expr pos:start="97:31" pos:end="97:33"><operator pos:start="97:31" pos:end="97:31">&amp;</operator><name pos:start="97:32" pos:end="97:33">gb</name></expr></argument>, <argument pos:start="97:36" pos:end="97:37"><expr pos:start="97:36" pos:end="97:37"><literal type="number" pos:start="97:36" pos:end="97:37">32</literal></expr></argument>)</argument_list></call> <operator pos:start="97:40" pos:end="97:41">!=</operator> <name pos:start="97:43" pos:end="97:58">DCA_SYNCWORD_XLL</name></expr>)</condition><block type="pseudo" pos:start="99:17" pos:end="99:43"><block_content pos:start="99:17" pos:end="99:43">

                <return pos:start="99:17" pos:end="99:43">return <expr pos:start="99:24" pos:end="99:42"><name pos:start="99:24" pos:end="99:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



            <if_stmt pos:start="103:13" pos:end="105:43"><if pos:start="103:13" pos:end="105:43">if <condition pos:start="103:16" pos:end="103:33">(<expr pos:start="103:17" pos:end="103:32"><call pos:start="103:17" pos:end="103:32"><name pos:start="103:17" pos:end="103:24">get_bits</name><argument_list pos:start="103:25" pos:end="103:32">(<argument pos:start="103:26" pos:end="103:28"><expr pos:start="103:26" pos:end="103:28"><operator pos:start="103:26" pos:end="103:26">&amp;</operator><name pos:start="103:27" pos:end="103:28">gb</name></expr></argument>, <argument pos:start="103:31" pos:end="103:31"><expr pos:start="103:31" pos:end="103:31"><literal type="number" pos:start="103:31" pos:end="103:31">4</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="105:17" pos:end="105:43"><block_content pos:start="105:17" pos:end="105:43">

                <return pos:start="105:17" pos:end="105:43">return <expr pos:start="105:24" pos:end="105:42"><name pos:start="105:24" pos:end="105:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="109:13" pos:end="109:30"><expr pos:start="109:13" pos:end="109:29"><call pos:start="109:13" pos:end="109:29"><name pos:start="109:13" pos:end="109:21">skip_bits</name><argument_list pos:start="109:22" pos:end="109:29">(<argument pos:start="109:23" pos:end="109:25"><expr pos:start="109:23" pos:end="109:25"><operator pos:start="109:23" pos:end="109:23">&amp;</operator><name pos:start="109:24" pos:end="109:25">gb</name></expr></argument>, <argument pos:start="109:28" pos:end="109:28"><expr pos:start="109:28" pos:end="109:28"><literal type="number" pos:start="109:28" pos:end="109:28">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:54"><expr pos:start="111:13" pos:end="111:53"><call pos:start="111:13" pos:end="111:53"><name pos:start="111:13" pos:end="111:26">skip_bits_long</name><argument_list pos:start="111:27" pos:end="111:53">(<argument pos:start="111:28" pos:end="111:30"><expr pos:start="111:28" pos:end="111:30"><operator pos:start="111:28" pos:end="111:28">&amp;</operator><name pos:start="111:29" pos:end="111:30">gb</name></expr></argument>, <argument pos:start="111:33" pos:end="111:52"><expr pos:start="111:33" pos:end="111:52"><call pos:start="111:33" pos:end="111:48"><name pos:start="111:33" pos:end="111:40">get_bits</name><argument_list pos:start="111:41" pos:end="111:48">(<argument pos:start="111:42" pos:end="111:44"><expr pos:start="111:42" pos:end="111:44"><operator pos:start="111:42" pos:end="111:42">&amp;</operator><name pos:start="111:43" pos:end="111:44">gb</name></expr></argument>, <argument pos:start="111:47" pos:end="111:47"><expr pos:start="111:47" pos:end="111:47"><literal type="number" pos:start="111:47" pos:end="111:47">5</literal></expr></argument>)</argument_list></call> <operator pos:start="111:50" pos:end="111:50">+</operator> <literal type="number" pos:start="111:52" pos:end="111:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:30"><expr pos:start="113:13" pos:end="113:29"><call pos:start="113:13" pos:end="113:29"><name pos:start="113:13" pos:end="113:21">skip_bits</name><argument_list pos:start="113:22" pos:end="113:29">(<argument pos:start="113:23" pos:end="113:25"><expr pos:start="113:23" pos:end="113:25"><operator pos:start="113:23" pos:end="113:23">&amp;</operator><name pos:start="113:24" pos:end="113:25">gb</name></expr></argument>, <argument pos:start="113:28" pos:end="113:28"><expr pos:start="113:28" pos:end="113:28"><literal type="number" pos:start="113:28" pos:end="113:28">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:64"><expr pos:start="115:13" pos:end="115:63"><name pos:start="115:13" pos:end="115:25">nsamples_log2</name> <operator pos:start="115:27" pos:end="115:27">=</operator> <call pos:start="115:29" pos:end="115:44"><name pos:start="115:29" pos:end="115:36">get_bits</name><argument_list pos:start="115:37" pos:end="115:44">(<argument pos:start="115:38" pos:end="115:40"><expr pos:start="115:38" pos:end="115:40"><operator pos:start="115:38" pos:end="115:38">&amp;</operator><name pos:start="115:39" pos:end="115:40">gb</name></expr></argument>, <argument pos:start="115:43" pos:end="115:43"><expr pos:start="115:43" pos:end="115:43"><literal type="number" pos:start="115:43" pos:end="115:43">4</literal></expr></argument>)</argument_list></call> <operator pos:start="115:46" pos:end="115:46">+</operator> <call pos:start="115:48" pos:end="115:63"><name pos:start="115:48" pos:end="115:55">get_bits</name><argument_list pos:start="115:56" pos:end="115:63">(<argument pos:start="115:57" pos:end="115:59"><expr pos:start="115:57" pos:end="115:59"><operator pos:start="115:57" pos:end="115:57">&amp;</operator><name pos:start="115:58" pos:end="115:59">gb</name></expr></argument>, <argument pos:start="115:62" pos:end="115:62"><expr pos:start="115:62" pos:end="115:62"><literal type="number" pos:start="115:62" pos:end="115:62">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="117:13" pos:end="119:43"><if pos:start="117:13" pos:end="119:43">if <condition pos:start="117:16" pos:end="117:35">(<expr pos:start="117:17" pos:end="117:34"><name pos:start="117:17" pos:end="117:29">nsamples_log2</name> <operator pos:start="117:31" pos:end="117:31">&gt;</operator> <literal type="number" pos:start="117:33" pos:end="117:34">24</literal></expr>)</condition><block type="pseudo" pos:start="119:17" pos:end="119:43"><block_content pos:start="119:17" pos:end="119:43">

                <return pos:start="119:17" pos:end="119:43">return <expr pos:start="119:24" pos:end="119:42"><name pos:start="119:24" pos:end="119:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="123:13" pos:end="123:50"><expr pos:start="123:13" pos:end="123:49"><operator pos:start="123:13" pos:end="123:13">*</operator><name pos:start="123:14" pos:end="123:24">sample_rate</name> <operator pos:start="123:26" pos:end="123:26">=</operator> <name pos:start="123:28" pos:end="123:49"><name pos:start="123:28" pos:end="123:32">asset</name><operator pos:start="123:33" pos:end="123:34">-&gt;</operator><name pos:start="123:35" pos:end="123:49">max_sample_rate</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:70"><expr pos:start="125:13" pos:end="125:69"><operator pos:start="125:13" pos:end="125:13">*</operator><name pos:start="125:14" pos:end="125:21">duration</name> <operator pos:start="125:23" pos:end="125:23">=</operator> <operator pos:start="125:25" pos:end="125:25">(</operator><literal type="number" pos:start="125:26" pos:end="125:28">1</literal> <operator pos:start="125:28" pos:end="125:28">+</operator> <operator pos:start="125:30" pos:end="125:30">(</operator><operator pos:start="125:31" pos:end="125:31">*</operator><name pos:start="125:32" pos:end="125:42">sample_rate</name> <operator pos:start="125:44" pos:end="125:44">&gt;</operator> <literal type="number" pos:start="125:46" pos:end="125:50">96000</literal><operator pos:start="125:51" pos:end="125:51">)</operator><operator pos:start="125:52" pos:end="125:52">)</operator> <operator pos:start="125:54" pos:end="125:55">&lt;&lt;</operator> <name pos:start="125:57" pos:end="125:69">nsamples_log2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:44"><expr pos:start="127:13" pos:end="127:43"><operator pos:start="127:13" pos:end="127:13">*</operator><name pos:start="127:14" pos:end="127:20">profile</name> <operator pos:start="127:22" pos:end="127:22">=</operator> <name pos:start="127:24" pos:end="127:43">FF_PROFILE_DTS_HD_MA</name></expr>;</expr_stmt>

            <return pos:start="129:13" pos:end="129:21">return <expr pos:start="129:20" pos:end="129:20"><literal type="number" pos:start="129:20" pos:end="129:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <return pos:start="135:9" pos:end="135:35">return <expr pos:start="135:16" pos:end="135:34"><name pos:start="135:16" pos:end="135:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="141:5" pos:end="145:19"><if pos:start="141:5" pos:end="145:19">if <condition pos:start="141:8" pos:end="143:82">(<expr pos:start="141:9" pos:end="143:81"><operator pos:start="141:9" pos:end="141:9">(</operator><name pos:start="141:10" pos:end="141:12">ret</name> <operator pos:start="141:14" pos:end="141:14">=</operator> <call pos:start="141:16" pos:end="143:76"><name pos:start="141:16" pos:end="141:43">avpriv_dca_convert_bitstream</name><argument_list pos:start="141:44" pos:end="143:76">(<argument pos:start="141:45" pos:end="141:47"><expr pos:start="141:45" pos:end="141:47"><name pos:start="141:45" pos:end="141:47">buf</name></expr></argument>, <argument pos:start="141:50" pos:end="141:75"><expr pos:start="141:50" pos:end="141:75"><name pos:start="141:50" pos:end="141:75">DCA_CORE_FRAME_HEADER_SIZE</name></expr></argument>,

                                            <argument pos:start="143:45" pos:end="143:47"><expr pos:start="143:45" pos:end="143:47"><name pos:start="143:45" pos:end="143:47">hdr</name></expr></argument>, <argument pos:start="143:50" pos:end="143:75"><expr pos:start="143:50" pos:end="143:75"><name pos:start="143:50" pos:end="143:75">DCA_CORE_FRAME_HEADER_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="143:77" pos:end="143:77">)</operator> <operator pos:start="143:79" pos:end="143:79">&lt;</operator> <literal type="number" pos:start="143:81" pos:end="143:81">0</literal></expr>)</condition><block type="pseudo" pos:start="145:9" pos:end="145:19"><block_content pos:start="145:9" pos:end="145:19">

        <return pos:start="145:9" pos:end="145:19">return <expr pos:start="145:16" pos:end="145:18"><name pos:start="145:16" pos:end="145:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="147:5" pos:end="149:19"><if pos:start="147:5" pos:end="149:19">if <condition pos:start="147:8" pos:end="147:50">(<expr pos:start="147:9" pos:end="147:49"><operator pos:start="147:9" pos:end="147:9">(</operator><name pos:start="147:10" pos:end="147:12">ret</name> <operator pos:start="147:14" pos:end="147:14">=</operator> <call pos:start="147:16" pos:end="147:44"><name pos:start="147:16" pos:end="147:29">init_get_bits8</name><argument_list pos:start="147:30" pos:end="147:44">(<argument pos:start="147:31" pos:end="147:33"><expr pos:start="147:31" pos:end="147:33"><operator pos:start="147:31" pos:end="147:31">&amp;</operator><name pos:start="147:32" pos:end="147:33">gb</name></expr></argument>, <argument pos:start="147:36" pos:end="147:38"><expr pos:start="147:36" pos:end="147:38"><name pos:start="147:36" pos:end="147:38">hdr</name></expr></argument>, <argument pos:start="147:41" pos:end="147:43"><expr pos:start="147:41" pos:end="147:43"><name pos:start="147:41" pos:end="147:43">ret</name></expr></argument>)</argument_list></call><operator pos:start="147:45" pos:end="147:45">)</operator> <operator pos:start="147:47" pos:end="147:47">&lt;</operator> <literal type="number" pos:start="147:49" pos:end="147:49">0</literal></expr>)</condition><block type="pseudo" pos:start="149:9" pos:end="149:19"><block_content pos:start="149:9" pos:end="149:19">

        <return pos:start="149:9" pos:end="149:19">return <expr pos:start="149:16" pos:end="149:18"><name pos:start="149:16" pos:end="149:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="151:5" pos:end="153:35"><if pos:start="151:5" pos:end="153:35">if <condition pos:start="151:8" pos:end="151:56">(<expr pos:start="151:9" pos:end="151:55"><call pos:start="151:9" pos:end="151:51"><name pos:start="151:9" pos:end="151:42">avpriv_dca_parse_core_frame_header</name><argument_list pos:start="151:43" pos:end="151:51">(<argument pos:start="151:44" pos:end="151:46"><expr pos:start="151:44" pos:end="151:46"><operator pos:start="151:44" pos:end="151:44">&amp;</operator><name pos:start="151:45" pos:end="151:46">gb</name></expr></argument>, <argument pos:start="151:49" pos:end="151:50"><expr pos:start="151:49" pos:end="151:50"><operator pos:start="151:49" pos:end="151:49">&amp;</operator><name pos:start="151:50" pos:end="151:50">h</name></expr></argument>)</argument_list></call> <operator pos:start="151:53" pos:end="151:53">&lt;</operator> <literal type="number" pos:start="151:55" pos:end="151:55">0</literal></expr>)</condition><block type="pseudo" pos:start="153:9" pos:end="153:35"><block_content pos:start="153:9" pos:end="153:35">

        <return pos:start="153:9" pos:end="153:35">return <expr pos:start="153:16" pos:end="153:34"><name pos:start="153:16" pos:end="153:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="157:5" pos:end="157:52"><expr pos:start="157:5" pos:end="157:51"><operator pos:start="157:5" pos:end="157:5">*</operator><name pos:start="157:6" pos:end="157:13">duration</name> <operator pos:start="157:15" pos:end="157:15">=</operator> <name pos:start="157:17" pos:end="157:28"><name pos:start="157:17" pos:end="157:17">h</name><operator pos:start="157:18" pos:end="157:18">.</operator><name pos:start="157:19" pos:end="157:28">npcmblocks</name></name> <operator pos:start="157:30" pos:end="157:30">*</operator> <name pos:start="157:32" pos:end="157:51">DCA_PCMBLOCK_SAMPLES</name></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:54"><expr pos:start="159:5" pos:end="159:53"><operator pos:start="159:5" pos:end="159:5">*</operator><name pos:start="159:6" pos:end="159:16">sample_rate</name> <operator pos:start="159:18" pos:end="159:18">=</operator> <name pos:start="159:20" pos:end="159:53"><name pos:start="159:20" pos:end="159:42">avpriv_dca_sample_rates</name><index pos:start="159:43" pos:end="159:53">[<expr pos:start="159:44" pos:end="159:52"><name pos:start="159:44" pos:end="159:52"><name pos:start="159:44" pos:end="159:44">h</name><operator pos:start="159:45" pos:end="159:45">.</operator><name pos:start="159:46" pos:end="159:52">sr_code</name></name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="161:5" pos:end="163:17"><if pos:start="161:5" pos:end="163:17">if <condition pos:start="161:8" pos:end="161:39">(<expr pos:start="161:9" pos:end="161:38"><operator pos:start="161:9" pos:end="161:9">*</operator><name pos:start="161:10" pos:end="161:16">profile</name> <operator pos:start="161:18" pos:end="161:19">!=</operator> <name pos:start="161:21" pos:end="161:38">FF_PROFILE_UNKNOWN</name></expr>)</condition><block type="pseudo" pos:start="163:9" pos:end="163:17"><block_content pos:start="163:9" pos:end="163:17">

        <return pos:start="163:9" pos:end="163:17">return <expr pos:start="163:16" pos:end="163:16"><literal type="number" pos:start="163:16" pos:end="163:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="167:5" pos:end="167:30"><expr pos:start="167:5" pos:end="167:29"><operator pos:start="167:5" pos:end="167:5">*</operator><name pos:start="167:6" pos:end="167:12">profile</name> <operator pos:start="167:14" pos:end="167:14">=</operator> <name pos:start="167:16" pos:end="167:29">FF_PROFILE_DTS</name></expr>;</expr_stmt>

    <if_stmt pos:start="169:5" pos:end="189:5"><if pos:start="169:5" pos:end="189:5">if <condition pos:start="169:8" pos:end="169:28">(<expr pos:start="169:9" pos:end="169:27"><name pos:start="169:9" pos:end="169:27"><name pos:start="169:9" pos:end="169:9">h</name><operator pos:start="169:10" pos:end="169:10">.</operator><name pos:start="169:11" pos:end="169:27">ext_audio_present</name></name></expr>)</condition> <block pos:start="169:30" pos:end="189:5">{<block_content pos:start="171:9" pos:end="187:9">

        <switch pos:start="171:9" pos:end="187:9">switch <condition pos:start="171:16" pos:end="171:33">(<expr pos:start="171:17" pos:end="171:32"><name pos:start="171:17" pos:end="171:32"><name pos:start="171:17" pos:end="171:17">h</name><operator pos:start="171:18" pos:end="171:18">.</operator><name pos:start="171:19" pos:end="171:32">ext_audio_type</name></name></expr>)</condition> <block pos:start="171:35" pos:end="187:9">{<block_content pos:start="173:9" pos:end="185:18">

        <case pos:start="173:9" pos:end="173:31">case <expr pos:start="173:14" pos:end="173:30"><name pos:start="173:14" pos:end="173:30">DCA_EXT_AUDIO_XCH</name></expr>:</case>

        <case pos:start="175:9" pos:end="175:32">case <expr pos:start="175:14" pos:end="175:31"><name pos:start="175:14" pos:end="175:31">DCA_EXT_AUDIO_XXCH</name></expr>:</case>

            <expr_stmt pos:start="177:13" pos:end="177:41"><expr pos:start="177:13" pos:end="177:40"><operator pos:start="177:13" pos:end="177:13">*</operator><name pos:start="177:14" pos:end="177:20">profile</name> <operator pos:start="177:22" pos:end="177:22">=</operator> <name pos:start="177:24" pos:end="177:40">FF_PROFILE_DTS_ES</name></expr>;</expr_stmt>

            <break pos:start="179:13" pos:end="179:18">break;</break>

        <case pos:start="181:9" pos:end="181:31">case <expr pos:start="181:14" pos:end="181:30"><name pos:start="181:14" pos:end="181:30">DCA_EXT_AUDIO_X96</name></expr>:</case>

            <expr_stmt pos:start="183:13" pos:end="183:44"><expr pos:start="183:13" pos:end="183:43"><operator pos:start="183:13" pos:end="183:13">*</operator><name pos:start="183:14" pos:end="183:20">profile</name> <operator pos:start="183:22" pos:end="183:22">=</operator> <name pos:start="183:24" pos:end="183:43">FF_PROFILE_DTS_96_24</name></expr>;</expr_stmt>

            <break pos:start="185:13" pos:end="185:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="193:5" pos:end="193:42"><expr pos:start="193:5" pos:end="193:41"><name pos:start="193:5" pos:end="193:14">frame_size</name> <operator pos:start="193:16" pos:end="193:16">=</operator> <call pos:start="193:18" pos:end="193:41"><name pos:start="193:18" pos:end="193:24">FFALIGN</name><argument_list pos:start="193:25" pos:end="193:41">(<argument pos:start="193:26" pos:end="193:37"><expr pos:start="193:26" pos:end="193:37"><name pos:start="193:26" pos:end="193:37"><name pos:start="193:26" pos:end="193:26">h</name><operator pos:start="193:27" pos:end="193:27">.</operator><name pos:start="193:28" pos:end="193:37">frame_size</name></name></expr></argument>, <argument pos:start="193:40" pos:end="193:40"><expr pos:start="193:40" pos:end="193:40"><literal type="number" pos:start="193:40" pos:end="193:40">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="195:5" pos:end="197:17"><if pos:start="195:5" pos:end="197:17">if <condition pos:start="195:8" pos:end="195:34">(<expr pos:start="195:9" pos:end="195:33"><name pos:start="195:9" pos:end="195:16">buf_size</name> <operator pos:start="195:18" pos:end="195:18">-</operator> <literal type="number" pos:start="195:20" pos:end="195:20">4</literal> <operator pos:start="195:22" pos:end="195:22">&lt;</operator> <name pos:start="195:24" pos:end="195:33">frame_size</name></expr>)</condition><block type="pseudo" pos:start="197:9" pos:end="197:17"><block_content pos:start="197:9" pos:end="197:17">

        <return pos:start="197:9" pos:end="197:17">return <expr pos:start="197:16" pos:end="197:16"><literal type="number" pos:start="197:16" pos:end="197:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="201:5" pos:end="201:27"><expr pos:start="201:5" pos:end="201:26"><name pos:start="201:5" pos:end="201:7">buf</name>      <operator pos:start="201:14" pos:end="201:15">+=</operator> <name pos:start="201:17" pos:end="201:26">frame_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:27"><expr pos:start="203:5" pos:end="203:26"><name pos:start="203:5" pos:end="203:12">buf_size</name> <operator pos:start="203:14" pos:end="203:15">-=</operator> <name pos:start="203:17" pos:end="203:26">frame_size</name></expr>;</expr_stmt>

    <if_stmt pos:start="205:5" pos:end="207:17"><if pos:start="205:5" pos:end="207:17">if <condition pos:start="205:8" pos:end="205:47">(<expr pos:start="205:9" pos:end="205:46"><call pos:start="205:9" pos:end="205:20"><name pos:start="205:9" pos:end="205:15">AV_RB32</name><argument_list pos:start="205:16" pos:end="205:20">(<argument pos:start="205:17" pos:end="205:19"><expr pos:start="205:17" pos:end="205:19"><name pos:start="205:17" pos:end="205:19">buf</name></expr></argument>)</argument_list></call> <operator pos:start="205:22" pos:end="205:23">!=</operator> <name pos:start="205:25" pos:end="205:46">DCA_SYNCWORD_SUBSTREAM</name></expr>)</condition><block type="pseudo" pos:start="207:9" pos:end="207:17"><block_content pos:start="207:9" pos:end="207:17">

        <return pos:start="207:9" pos:end="207:17">return <expr pos:start="207:16" pos:end="207:16"><literal type="number" pos:start="207:16" pos:end="207:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="209:5" pos:end="211:17"><if pos:start="209:5" pos:end="211:17">if <condition pos:start="209:8" pos:end="209:57">(<expr pos:start="209:9" pos:end="209:56"><call pos:start="209:9" pos:end="209:52"><name pos:start="209:9" pos:end="209:25">ff_dca_exss_parse</name><argument_list pos:start="209:26" pos:end="209:52">(<argument pos:start="209:27" pos:end="209:36"><expr pos:start="209:27" pos:end="209:36"><operator pos:start="209:27" pos:end="209:27">&amp;</operator><name pos:start="209:28" pos:end="209:36"><name pos:start="209:28" pos:end="209:30">pc1</name><operator pos:start="209:31" pos:end="209:32">-&gt;</operator><name pos:start="209:33" pos:end="209:36">exss</name></name></expr></argument>, <argument pos:start="209:39" pos:end="209:41"><expr pos:start="209:39" pos:end="209:41"><name pos:start="209:39" pos:end="209:41">buf</name></expr></argument>, <argument pos:start="209:44" pos:end="209:51"><expr pos:start="209:44" pos:end="209:51"><name pos:start="209:44" pos:end="209:51">buf_size</name></expr></argument>)</argument_list></call> <operator pos:start="209:54" pos:end="209:54">&lt;</operator> <literal type="number" pos:start="209:56" pos:end="209:56">0</literal></expr>)</condition><block type="pseudo" pos:start="211:9" pos:end="211:17"><block_content pos:start="211:9" pos:end="211:17">

        <return pos:start="211:9" pos:end="211:17">return <expr pos:start="211:16" pos:end="211:16"><literal type="number" pos:start="211:16" pos:end="211:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="215:5" pos:end="221:41"><if pos:start="215:5" pos:end="217:40">if <condition pos:start="215:8" pos:end="215:45">(<expr pos:start="215:9" pos:end="215:44"><name pos:start="215:9" pos:end="215:29"><name pos:start="215:9" pos:end="215:13">asset</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:29">extension_mask</name></name> <operator pos:start="215:31" pos:end="215:31">&amp;</operator> <name pos:start="215:33" pos:end="215:44">DCA_EXSS_XLL</name></expr>)</condition><block type="pseudo" pos:start="217:9" pos:end="217:40"><block_content pos:start="217:9" pos:end="217:40">

        <expr_stmt pos:start="217:9" pos:end="217:40"><expr pos:start="217:9" pos:end="217:39"><operator pos:start="217:9" pos:end="217:9">*</operator><name pos:start="217:10" pos:end="217:16">profile</name> <operator pos:start="217:18" pos:end="217:18">=</operator> <name pos:start="217:20" pos:end="217:39">FF_PROFILE_DTS_HD_MA</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="219:5" pos:end="221:41">else if <condition pos:start="219:13" pos:end="219:83">(<expr pos:start="219:14" pos:end="219:82"><name pos:start="219:14" pos:end="219:34"><name pos:start="219:14" pos:end="219:18">asset</name><operator pos:start="219:19" pos:end="219:20">-&gt;</operator><name pos:start="219:21" pos:end="219:34">extension_mask</name></name> <operator pos:start="219:36" pos:end="219:36">&amp;</operator> <operator pos:start="219:38" pos:end="219:38">(</operator><name pos:start="219:39" pos:end="219:50">DCA_EXSS_XBR</name> <operator pos:start="219:52" pos:end="219:52">|</operator> <name pos:start="219:54" pos:end="219:66">DCA_EXSS_XXCH</name> <operator pos:start="219:68" pos:end="219:68">|</operator> <name pos:start="219:70" pos:end="219:81">DCA_EXSS_X96</name><operator pos:start="219:82" pos:end="219:82">)</operator></expr>)</condition><block type="pseudo" pos:start="221:9" pos:end="221:41"><block_content pos:start="221:9" pos:end="221:41">

        <expr_stmt pos:start="221:9" pos:end="221:41"><expr pos:start="221:9" pos:end="221:40"><operator pos:start="221:9" pos:end="221:9">*</operator><name pos:start="221:10" pos:end="221:16">profile</name> <operator pos:start="221:18" pos:end="221:18">=</operator> <name pos:start="221:20" pos:end="221:40">FF_PROFILE_DTS_HD_HRA</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="225:5" pos:end="225:13">return <expr pos:start="225:12" pos:end="225:12"><literal type="number" pos:start="225:12" pos:end="225:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
