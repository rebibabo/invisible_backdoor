<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14383.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:37">coeff_unpack_golomb</name><parameter_list pos:start="1:38" pos:end="1:82">(<parameter pos:start="1:39" pos:end="1:55"><decl pos:start="1:39" pos:end="1:55"><type pos:start="1:39" pos:end="1:55"><name pos:start="1:39" pos:end="1:51">GetBitContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">gb</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:68"><decl pos:start="1:58" pos:end="1:68"><type pos:start="1:58" pos:end="1:68"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:68">qfactor</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:81"><decl pos:start="1:71" pos:end="1:81"><type pos:start="1:71" pos:end="1:81"><name pos:start="1:71" pos:end="1:73">int</name></type> <name pos:start="1:75" pos:end="1:81">qoffset</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:17">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">sign</name></decl>, <decl pos:start="5:15" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:19">coeff</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">buf</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:24"><expr pos:start="11:5" pos:end="11:23"><call pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:15">OPEN_READER</name><argument_list pos:start="11:16" pos:end="11:23">(<argument pos:start="11:17" pos:end="11:18"><expr pos:start="11:17" pos:end="11:18"><name pos:start="11:17" pos:end="11:18">re</name></expr></argument>, <argument pos:start="11:21" pos:end="11:22"><expr pos:start="11:21" pos:end="11:22"><name pos:start="11:21" pos:end="11:22">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><call pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:16">UPDATE_CACHE</name><argument_list pos:start="13:17" pos:end="13:24">(<argument pos:start="13:18" pos:end="13:19"><expr pos:start="13:18" pos:end="13:19"><name pos:start="13:18" pos:end="13:19">re</name></expr></argument>, <argument pos:start="13:22" pos:end="13:23"><expr pos:start="13:22" pos:end="13:23"><name pos:start="13:22" pos:end="13:23">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:28"><expr pos:start="15:5" pos:end="15:27"><name pos:start="15:5" pos:end="15:7">buf</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:27"><name pos:start="15:11" pos:end="15:19">GET_CACHE</name><argument_list pos:start="15:20" pos:end="15:27">(<argument pos:start="15:21" pos:end="15:22"><expr pos:start="15:21" pos:end="15:22"><name pos:start="15:21" pos:end="15:22">re</name></expr></argument>, <argument pos:start="15:25" pos:end="15:26"><expr pos:start="15:25" pos:end="15:26"><name pos:start="15:25" pos:end="15:26">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="67:5"><if pos:start="19:5" pos:end="29:5">if <condition pos:start="19:8" pos:end="19:25">(<expr pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:11">buf</name> <operator pos:start="19:13" pos:end="19:13">&amp;</operator> <literal type="number" pos:start="19:15" pos:end="19:24">0xAA800000</literal></expr>)</condition> <block pos:start="19:27" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:55">

        <expr_stmt pos:start="21:9" pos:end="21:23"><expr pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:11">buf</name> <operator pos:start="21:13" pos:end="21:15">&gt;&gt;=</operator> <literal type="number" pos:start="21:17" pos:end="21:20">32</literal> <operator pos:start="21:20" pos:end="21:20">-</operator> <literal type="number" pos:start="21:22" pos:end="21:22">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:62"><expr pos:start="23:9" pos:end="23:61"><call pos:start="23:9" pos:end="23:61"><name pos:start="23:9" pos:end="23:17">SKIP_BITS</name><argument_list pos:start="23:18" pos:end="23:61">(<argument pos:start="23:19" pos:end="23:20"><expr pos:start="23:19" pos:end="23:20"><name pos:start="23:19" pos:end="23:20">re</name></expr></argument>, <argument pos:start="23:23" pos:end="23:24"><expr pos:start="23:23" pos:end="23:24"><name pos:start="23:23" pos:end="23:24">gb</name></expr></argument>, <argument pos:start="23:27" pos:end="23:60"><expr pos:start="23:27" pos:end="23:60"><name pos:start="23:27" pos:end="23:60"><name pos:start="23:27" pos:end="23:55">ff_interleaved_golomb_vlc_len</name><index pos:start="23:56" pos:end="23:60">[<expr pos:start="23:57" pos:end="23:59"><name pos:start="23:57" pos:end="23:59">buf</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:55"><expr pos:start="27:9" pos:end="27:54"><name pos:start="27:9" pos:end="27:13">coeff</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:54"><name pos:start="27:17" pos:end="27:49">ff_interleaved_ue_golomb_vlc_code</name><index pos:start="27:50" pos:end="27:54">[<expr pos:start="27:51" pos:end="27:53"><name pos:start="27:51" pos:end="27:53">buf</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="67:5">else <block pos:start="29:12" pos:end="67:5">{<block_content pos:start="31:9" pos:end="65:24">

        <decl_stmt pos:start="31:9" pos:end="31:25"><decl pos:start="31:9" pos:end="31:24"><type pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:16">unsigned</name></type> <name pos:start="31:18" pos:end="31:20">ret</name> <init pos:start="31:22" pos:end="31:24">= <expr pos:start="31:24" pos:end="31:24"><literal type="number" pos:start="31:24" pos:end="31:24">1</literal></expr></init></decl>;</decl_stmt>



        <do pos:start="35:9" pos:end="61:59">do <block pos:start="35:12" pos:end="61:9">{<block_content pos:start="37:13" pos:end="59:36">

            <expr_stmt pos:start="37:13" pos:end="37:27"><expr pos:start="37:13" pos:end="37:26"><name pos:start="37:13" pos:end="37:15">buf</name> <operator pos:start="37:17" pos:end="37:19">&gt;&gt;=</operator> <literal type="number" pos:start="37:21" pos:end="37:24">32</literal> <operator pos:start="37:24" pos:end="37:24">-</operator> <literal type="number" pos:start="37:26" pos:end="37:26">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="41:73"><expr pos:start="39:13" pos:end="41:72"><call pos:start="39:13" pos:end="41:72"><name pos:start="39:13" pos:end="39:21">SKIP_BITS</name><argument_list pos:start="39:22" pos:end="41:72">(<argument pos:start="39:23" pos:end="39:24"><expr pos:start="39:23" pos:end="39:24"><name pos:start="39:23" pos:end="39:24">re</name></expr></argument>, <argument pos:start="39:27" pos:end="39:28"><expr pos:start="39:27" pos:end="39:28"><name pos:start="39:27" pos:end="39:28">gb</name></expr></argument>,

                           <argument pos:start="41:28" pos:end="41:71"><expr pos:start="41:28" pos:end="41:71"><call pos:start="41:28" pos:end="41:71"><name pos:start="41:28" pos:end="41:32">FFMIN</name><argument_list pos:start="41:33" pos:end="41:71">(<argument pos:start="41:34" pos:end="41:67"><expr pos:start="41:34" pos:end="41:67"><name pos:start="41:34" pos:end="41:67"><name pos:start="41:34" pos:end="41:62">ff_interleaved_golomb_vlc_len</name><index pos:start="41:63" pos:end="41:67">[<expr pos:start="41:64" pos:end="41:66"><name pos:start="41:64" pos:end="41:66">buf</name></expr>]</index></name></expr></argument>, <argument pos:start="41:70" pos:end="41:70"><expr pos:start="41:70" pos:end="41:70"><literal type="number" pos:start="41:70" pos:end="41:70">8</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="45:13" pos:end="53:13"><if pos:start="45:13" pos:end="53:13">if <condition pos:start="45:16" pos:end="45:56">(<expr pos:start="45:17" pos:end="45:55"><name pos:start="45:17" pos:end="45:50"><name pos:start="45:17" pos:end="45:45">ff_interleaved_golomb_vlc_len</name><index pos:start="45:46" pos:end="45:50">[<expr pos:start="45:47" pos:end="45:49"><name pos:start="45:47" pos:end="45:49">buf</name></expr>]</index></name> <operator pos:start="45:52" pos:end="45:53">!=</operator> <literal type="number" pos:start="45:55" pos:end="45:55">9</literal></expr>)</condition> <block pos:start="45:58" pos:end="53:13">{<block_content pos:start="47:17" pos:end="51:22">

                <expr_stmt pos:start="47:17" pos:end="47:70"><expr pos:start="47:17" pos:end="47:69"><name pos:start="47:17" pos:end="47:19">ret</name> <operator pos:start="47:21" pos:end="47:23">&lt;&lt;=</operator> <operator pos:start="47:25" pos:end="47:25">(</operator><name pos:start="47:26" pos:end="47:59"><name pos:start="47:26" pos:end="47:54">ff_interleaved_golomb_vlc_len</name><index pos:start="47:55" pos:end="47:59">[<expr pos:start="47:56" pos:end="47:58"><name pos:start="47:56" pos:end="47:58">buf</name></expr>]</index></name> <operator pos:start="47:61" pos:end="47:61">-</operator> <literal type="number" pos:start="47:63" pos:end="47:63">1</literal><operator pos:start="47:64" pos:end="47:64">)</operator> <operator pos:start="47:66" pos:end="47:67">&gt;&gt;</operator> <literal type="number" pos:start="47:69" pos:end="47:69">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:66"><expr pos:start="49:17" pos:end="49:65"><name pos:start="49:17" pos:end="49:19">ret</name>  <operator pos:start="49:22" pos:end="49:23">|=</operator> <name pos:start="49:25" pos:end="49:65"><name pos:start="49:25" pos:end="49:60">ff_interleaved_dirac_golomb_vlc_code</name><index pos:start="49:61" pos:end="49:65">[<expr pos:start="49:62" pos:end="49:64"><name pos:start="49:62" pos:end="49:64">buf</name></expr>]</index></name></expr>;</expr_stmt>

                <break pos:start="51:17" pos:end="51:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:73"><expr pos:start="55:13" pos:end="55:72"><name pos:start="55:13" pos:end="55:15">ret</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <operator pos:start="55:19" pos:end="55:19">(</operator><name pos:start="55:20" pos:end="55:22">ret</name> <operator pos:start="55:24" pos:end="55:25">&lt;&lt;</operator> <literal type="number" pos:start="55:27" pos:end="55:27">4</literal><operator pos:start="55:28" pos:end="55:28">)</operator> <operator pos:start="55:30" pos:end="55:30">|</operator> <name pos:start="55:32" pos:end="55:72"><name pos:start="55:32" pos:end="55:67">ff_interleaved_dirac_golomb_vlc_code</name><index pos:start="55:68" pos:end="55:72">[<expr pos:start="55:69" pos:end="55:71"><name pos:start="55:69" pos:end="55:71">buf</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:33"><expr pos:start="57:13" pos:end="57:32"><call pos:start="57:13" pos:end="57:32"><name pos:start="57:13" pos:end="57:24">UPDATE_CACHE</name><argument_list pos:start="57:25" pos:end="57:32">(<argument pos:start="57:26" pos:end="57:27"><expr pos:start="57:26" pos:end="57:27"><name pos:start="57:26" pos:end="57:27">re</name></expr></argument>, <argument pos:start="57:30" pos:end="57:31"><expr pos:start="57:30" pos:end="57:31"><name pos:start="57:30" pos:end="57:31">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:36"><expr pos:start="59:13" pos:end="59:35"><name pos:start="59:13" pos:end="59:15">buf</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <call pos:start="59:19" pos:end="59:35"><name pos:start="59:19" pos:end="59:27">GET_CACHE</name><argument_list pos:start="59:28" pos:end="59:35">(<argument pos:start="59:29" pos:end="59:30"><expr pos:start="59:29" pos:end="59:30"><name pos:start="59:29" pos:end="59:30">re</name></expr></argument>, <argument pos:start="59:33" pos:end="59:34"><expr pos:start="59:33" pos:end="59:34"><name pos:start="59:33" pos:end="59:34">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block> while <condition pos:start="61:17" pos:end="61:58">(<expr pos:start="61:18" pos:end="61:57"><name pos:start="61:18" pos:end="61:20">ret</name><operator pos:start="61:21" pos:end="61:21">&lt;</operator><literal type="number" pos:start="61:22" pos:end="61:31">0x8000000U</literal> <operator pos:start="61:33" pos:end="61:34">&amp;&amp;</operator> <call pos:start="61:36" pos:end="61:57"><name pos:start="61:36" pos:end="61:49">BITS_AVAILABLE</name><argument_list pos:start="61:50" pos:end="61:57">(<argument pos:start="61:51" pos:end="61:52"><expr pos:start="61:51" pos:end="61:52"><name pos:start="61:51" pos:end="61:52">re</name></expr></argument>, <argument pos:start="61:55" pos:end="61:56"><expr pos:start="61:55" pos:end="61:56"><name pos:start="61:55" pos:end="61:56">gb</name></expr></argument>)</argument_list></call></expr>)</condition>;</do>



        <expr_stmt pos:start="65:9" pos:end="65:24"><expr pos:start="65:9" pos:end="65:23"><name pos:start="65:9" pos:end="65:13">coeff</name> <operator pos:start="65:15" pos:end="65:15">=</operator> <name pos:start="65:17" pos:end="65:19">ret</name> <operator pos:start="65:21" pos:end="65:21">-</operator> <literal type="number" pos:start="65:23" pos:end="65:23">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="69:5" pos:end="79:5"><if pos:start="69:5" pos:end="79:5">if <condition pos:start="69:8" pos:end="69:14">(<expr pos:start="69:9" pos:end="69:13"><name pos:start="69:9" pos:end="69:13">coeff</name></expr>)</condition> <block pos:start="69:16" pos:end="79:5">{<block_content pos:start="71:9" pos:end="77:38">

        <expr_stmt pos:start="71:9" pos:end="71:53"><expr pos:start="71:9" pos:end="71:52"><name pos:start="71:9" pos:end="71:13">coeff</name> <operator pos:start="71:15" pos:end="71:15">=</operator> <operator pos:start="71:17" pos:end="71:17">(</operator><name pos:start="71:18" pos:end="71:22">coeff</name> <operator pos:start="71:24" pos:end="71:24">*</operator> <name pos:start="71:26" pos:end="71:32">qfactor</name> <operator pos:start="71:34" pos:end="71:34">+</operator> <name pos:start="71:36" pos:end="71:42">qoffset</name> <operator pos:start="71:44" pos:end="71:44">+</operator> <literal type="number" pos:start="71:46" pos:end="71:46">2</literal><operator pos:start="71:47" pos:end="71:47">)</operator> <operator pos:start="71:49" pos:end="71:50">&gt;&gt;</operator> <literal type="number" pos:start="71:52" pos:end="71:52">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:38"><expr pos:start="73:9" pos:end="73:37"><name pos:start="73:9" pos:end="73:12">sign</name>  <operator pos:start="73:15" pos:end="73:15">=</operator> <call pos:start="73:17" pos:end="73:37"><name pos:start="73:17" pos:end="73:26">SHOW_SBITS</name><argument_list pos:start="73:27" pos:end="73:37">(<argument pos:start="73:28" pos:end="73:29"><expr pos:start="73:28" pos:end="73:29"><name pos:start="73:28" pos:end="73:29">re</name></expr></argument>, <argument pos:start="73:32" pos:end="73:33"><expr pos:start="73:32" pos:end="73:33"><name pos:start="73:32" pos:end="73:33">gb</name></expr></argument>, <argument pos:start="73:36" pos:end="73:36"><expr pos:start="73:36" pos:end="73:36"><literal type="number" pos:start="73:36" pos:end="73:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:34"><expr pos:start="75:9" pos:end="75:33"><call pos:start="75:9" pos:end="75:33"><name pos:start="75:9" pos:end="75:22">LAST_SKIP_BITS</name><argument_list pos:start="75:23" pos:end="75:33">(<argument pos:start="75:24" pos:end="75:25"><expr pos:start="75:24" pos:end="75:25"><name pos:start="75:24" pos:end="75:25">re</name></expr></argument>, <argument pos:start="75:28" pos:end="75:29"><expr pos:start="75:28" pos:end="75:29"><name pos:start="75:28" pos:end="75:29">gb</name></expr></argument>, <argument pos:start="75:32" pos:end="75:32"><expr pos:start="75:32" pos:end="75:32"><literal type="number" pos:start="75:32" pos:end="75:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:38"><expr pos:start="77:9" pos:end="77:37"><name pos:start="77:9" pos:end="77:13">coeff</name> <operator pos:start="77:15" pos:end="77:15">=</operator> <operator pos:start="77:17" pos:end="77:17">(</operator><name pos:start="77:18" pos:end="77:22">coeff</name> <operator pos:start="77:24" pos:end="77:24">^</operator> <name pos:start="77:26" pos:end="77:29">sign</name><operator pos:start="77:30" pos:end="77:30">)</operator> <operator pos:start="77:32" pos:end="77:32">-</operator> <name pos:start="77:34" pos:end="77:37">sign</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:25"><expr pos:start="81:5" pos:end="81:24"><call pos:start="81:5" pos:end="81:24"><name pos:start="81:5" pos:end="81:16">CLOSE_READER</name><argument_list pos:start="81:17" pos:end="81:24">(<argument pos:start="81:18" pos:end="81:19"><expr pos:start="81:18" pos:end="81:19"><name pos:start="81:18" pos:end="81:19">re</name></expr></argument>, <argument pos:start="81:22" pos:end="81:23"><expr pos:start="81:22" pos:end="81:23"><name pos:start="81:22" pos:end="81:23">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="83:5" pos:end="83:17">return <expr pos:start="83:12" pos:end="83:16"><name pos:start="83:12" pos:end="83:16">coeff</name></expr>;</return>

</block_content>}</block></function>
</unit>
