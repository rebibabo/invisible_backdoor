<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15110.c" pos:tabs="8"><function pos:start="1:1" pos:end="122:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">lrc_read_header</name><parameter_list pos:start="1:27" pos:end="1:46">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="122:1">{<block_content pos:start="5:5" pos:end="120:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">LRCContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">lrc</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">AVBPrint</name></type> <name pos:start="7:14" pos:end="7:17">line</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:38"><expr pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:6">st</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <call pos:start="13:10" pos:end="13:37"><name pos:start="13:10" pos:end="13:28">avformat_new_stream</name><argument_list pos:start="13:29" pos:end="13:37">(<argument pos:start="13:30" pos:end="13:30"><expr pos:start="13:30" pos:end="13:30"><name pos:start="13:30" pos:end="13:30">s</name></expr></argument>, <argument pos:start="13:33" pos:end="13:36"><expr pos:start="13:33" pos:end="13:36"><name pos:start="13:33" pos:end="13:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if<condition pos:start="15:7" pos:end="15:11">(<expr pos:start="15:8" pos:end="15:10"><operator pos:start="15:8" pos:end="15:8">!</operator><name pos:start="15:9" pos:end="15:10">st</name></expr>)</condition> <block pos:start="15:13" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:31">

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:41"><expr pos:start="21:5" pos:end="21:40"><call pos:start="21:5" pos:end="21:40"><name pos:start="21:5" pos:end="21:23">avpriv_set_pts_info</name><argument_list pos:start="21:24" pos:end="21:40">(<argument pos:start="21:25" pos:end="21:26"><expr pos:start="21:25" pos:end="21:26"><name pos:start="21:25" pos:end="21:26">st</name></expr></argument>, <argument pos:start="21:29" pos:end="21:30"><expr pos:start="21:29" pos:end="21:30"><literal type="number" pos:start="21:29" pos:end="21:30">64</literal></expr></argument>, <argument pos:start="21:33" pos:end="21:33"><expr pos:start="21:33" pos:end="21:33"><literal type="number" pos:start="21:33" pos:end="21:33">1</literal></expr></argument>, <argument pos:start="21:36" pos:end="21:39"><expr pos:start="21:36" pos:end="21:39"><literal type="number" pos:start="21:36" pos:end="21:39">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:23"><expr pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:7">lrc</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:18">ts_offset</name></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <literal type="number" pos:start="23:22" pos:end="23:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:53"><expr pos:start="25:5" pos:end="25:52"><name pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:6">st</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:16">codecpar</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:28">codec_type</name></name> <operator pos:start="25:30" pos:end="25:30">=</operator> <name pos:start="25:32" pos:end="25:52">AVMEDIA_TYPE_SUBTITLE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:48"><expr pos:start="27:5" pos:end="27:47"><name pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:6">st</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:16">codecpar</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:26">codec_id</name></name>   <operator pos:start="27:30" pos:end="27:30">=</operator> <name pos:start="27:32" pos:end="27:47">AV_CODEC_ID_TEXT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:55"><expr pos:start="29:5" pos:end="29:54"><call pos:start="29:5" pos:end="29:54"><name pos:start="29:5" pos:end="29:18">av_bprint_init</name><argument_list pos:start="29:19" pos:end="29:54">(<argument pos:start="29:20" pos:end="29:24"><expr pos:start="29:20" pos:end="29:24"><operator pos:start="29:20" pos:end="29:20">&amp;</operator><name pos:start="29:21" pos:end="29:24">line</name></expr></argument>, <argument pos:start="29:27" pos:end="29:27"><expr pos:start="29:27" pos:end="29:27"><literal type="number" pos:start="29:27" pos:end="29:27">0</literal></expr></argument>, <argument pos:start="29:30" pos:end="29:53"><expr pos:start="29:30" pos:end="29:53"><name pos:start="29:30" pos:end="29:53">AV_BPRINT_SIZE_UNLIMITED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="33:5" pos:end="113:5">while<condition pos:start="33:10" pos:end="33:28">(<expr pos:start="33:11" pos:end="33:27"><operator pos:start="33:11" pos:end="33:11">!</operator><call pos:start="33:12" pos:end="33:27"><name pos:start="33:12" pos:end="33:20">avio_feof</name><argument_list pos:start="33:21" pos:end="33:27">(<argument pos:start="33:22" pos:end="33:26"><expr pos:start="33:22" pos:end="33:26"><name pos:start="33:22" pos:end="33:26"><name pos:start="33:22" pos:end="33:22">s</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:26">pb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:30" pos:end="113:5">{<block_content pos:start="35:9" pos:end="111:9">

        <decl_stmt pos:start="35:9" pos:end="35:46"><decl pos:start="35:9" pos:end="35:45"><type pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:15">int64_t</name></type> <name pos:start="35:17" pos:end="35:19">pos</name> <init pos:start="35:21" pos:end="35:45">= <expr pos:start="35:23" pos:end="35:45"><call pos:start="35:23" pos:end="35:45"><name pos:start="35:23" pos:end="35:31">read_line</name><argument_list pos:start="35:32" pos:end="35:45">(<argument pos:start="35:33" pos:end="35:37"><expr pos:start="35:33" pos:end="35:37"><operator pos:start="35:33" pos:end="35:33">&amp;</operator><name pos:start="35:34" pos:end="35:37">line</name></expr></argument>, <argument pos:start="35:40" pos:end="35:44"><expr pos:start="35:40" pos:end="35:44"><name pos:start="35:40" pos:end="35:44"><name pos:start="35:40" pos:end="35:40">s</name><operator pos:start="35:41" pos:end="35:42">-&gt;</operator><name pos:start="35:43" pos:end="35:44">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:54"><decl pos:start="37:9" pos:end="37:53"><type pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:15">int64_t</name></type> <name pos:start="37:17" pos:end="37:29">header_offset</name> <init pos:start="37:31" pos:end="37:53">= <expr pos:start="37:33" pos:end="37:53"><call pos:start="37:33" pos:end="37:53"><name pos:start="37:33" pos:end="37:43">find_header</name><argument_list pos:start="37:44" pos:end="37:53">(<argument pos:start="37:45" pos:end="37:52"><expr pos:start="37:45" pos:end="37:52"><name pos:start="37:45" pos:end="37:52"><name pos:start="37:45" pos:end="37:48">line</name><operator pos:start="37:49" pos:end="37:49">.</operator><name pos:start="37:50" pos:end="37:52">str</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="39:9" pos:end="111:9"><if pos:start="39:9" pos:end="73:9">if<condition pos:start="39:11" pos:end="39:30">(<expr pos:start="39:12" pos:end="39:29"><name pos:start="39:12" pos:end="39:24">header_offset</name> <operator pos:start="39:26" pos:end="39:27">&gt;=</operator> <literal type="number" pos:start="39:29" pos:end="39:29">0</literal></expr>)</condition> <block pos:start="39:32" pos:end="73:9">{<block_content pos:start="41:13" pos:end="69:13">

            <decl_stmt pos:start="41:13" pos:end="41:55"><decl pos:start="41:13" pos:end="41:54"><type pos:start="41:13" pos:end="41:18"><name pos:start="41:13" pos:end="41:16">char</name> <modifier pos:start="41:18" pos:end="41:18">*</modifier></type><name pos:start="41:19" pos:end="41:30">comma_offset</name> <init pos:start="41:32" pos:end="41:54">= <expr pos:start="41:34" pos:end="41:54"><call pos:start="41:34" pos:end="41:54"><name pos:start="41:34" pos:end="41:39">strchr</name><argument_list pos:start="41:40" pos:end="41:54">(<argument pos:start="41:41" pos:end="41:48"><expr pos:start="41:41" pos:end="41:48"><name pos:start="41:41" pos:end="41:48"><name pos:start="41:41" pos:end="41:44">line</name><operator pos:start="41:45" pos:end="41:45">.</operator><name pos:start="41:46" pos:end="41:48">str</name></name></expr></argument>, <argument pos:start="41:51" pos:end="41:53"><expr pos:start="41:51" pos:end="41:53"><literal type="char" pos:start="41:51" pos:end="41:53">':'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="43:13" pos:end="69:13"><if pos:start="43:13" pos:end="69:13">if<condition pos:start="43:15" pos:end="43:28">(<expr pos:start="43:16" pos:end="43:27"><name pos:start="43:16" pos:end="43:27">comma_offset</name></expr>)</condition> <block pos:start="43:30" pos:end="69:13">{<block_content pos:start="45:17" pos:end="67:44">

                <decl_stmt pos:start="45:17" pos:end="45:67"><decl pos:start="45:17" pos:end="45:66"><type pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:20">char</name> <modifier pos:start="45:22" pos:end="45:22">*</modifier></type><name pos:start="45:23" pos:end="45:42">right_bracket_offset</name> <init pos:start="45:44" pos:end="45:66">= <expr pos:start="45:46" pos:end="45:66"><call pos:start="45:46" pos:end="45:66"><name pos:start="45:46" pos:end="45:51">strchr</name><argument_list pos:start="45:52" pos:end="45:66">(<argument pos:start="45:53" pos:end="45:60"><expr pos:start="45:53" pos:end="45:60"><name pos:start="45:53" pos:end="45:60"><name pos:start="45:53" pos:end="45:56">line</name><operator pos:start="45:57" pos:end="45:57">.</operator><name pos:start="45:58" pos:end="45:60">str</name></name></expr></argument>, <argument pos:start="45:63" pos:end="45:65"><expr pos:start="45:63" pos:end="45:65"><literal type="char" pos:start="45:63" pos:end="45:65">']'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="47:17" pos:end="51:17"><if pos:start="47:17" pos:end="51:17">if<condition pos:start="47:19" pos:end="47:41">(<expr pos:start="47:20" pos:end="47:40"><operator pos:start="47:20" pos:end="47:20">!</operator><name pos:start="47:21" pos:end="47:40">right_bracket_offset</name></expr>)</condition> <block pos:start="47:43" pos:end="51:17">{<block_content pos:start="49:21" pos:end="49:29">

                    <continue pos:start="49:21" pos:end="49:29">continue;</continue>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="55:17" pos:end="55:61"><expr pos:start="55:17" pos:end="55:60"><operator pos:start="55:17" pos:end="55:17">*</operator><name pos:start="55:18" pos:end="55:37">right_bracket_offset</name> <operator pos:start="55:39" pos:end="55:39">=</operator> <operator pos:start="55:41" pos:end="55:41">*</operator><name pos:start="55:42" pos:end="55:53">comma_offset</name> <operator pos:start="55:55" pos:end="55:55">=</operator> <literal type="char" pos:start="55:57" pos:end="55:60">'\0'</literal></expr>;</expr_stmt>

                <if_stmt pos:start="57:17" pos:end="63:17"><if pos:start="57:17" pos:end="63:17">if<condition pos:start="57:19" pos:end="59:77">(<expr pos:start="57:20" pos:end="59:76"><call pos:start="57:20" pos:end="57:49"><name pos:start="57:20" pos:end="57:25">strcmp</name><argument_list pos:start="57:26" pos:end="57:49">(<argument pos:start="57:27" pos:end="57:38"><expr pos:start="57:27" pos:end="57:38"><name pos:start="57:27" pos:end="57:34"><name pos:start="57:27" pos:end="57:30">line</name><operator pos:start="57:31" pos:end="57:31">.</operator><name pos:start="57:32" pos:end="57:34">str</name></name> <operator pos:start="57:36" pos:end="57:36">+</operator> <literal type="number" pos:start="57:38" pos:end="57:38">1</literal></expr></argument>, <argument pos:start="57:41" pos:end="57:48"><expr pos:start="57:41" pos:end="57:48"><literal type="string" pos:start="57:41" pos:end="57:48">"offset"</literal></expr></argument>)</argument_list></call> <operator pos:start="57:51" pos:end="57:52">||</operator>

                   <call pos:start="59:20" pos:end="59:71"><name pos:start="59:20" pos:end="59:25">sscanf</name><argument_list pos:start="59:26" pos:end="59:71">(<argument pos:start="59:27" pos:end="59:42"><expr pos:start="59:27" pos:end="59:42"><name pos:start="59:27" pos:end="59:38">comma_offset</name> <operator pos:start="59:40" pos:end="59:40">+</operator> <literal type="number" pos:start="59:42" pos:end="59:42">1</literal></expr></argument>, <argument pos:start="59:45" pos:end="59:53"><expr pos:start="59:45" pos:end="59:53"><literal type="string" pos:start="59:45" pos:end="59:47">"%"</literal><name pos:start="59:48" pos:end="59:53">SCNd64</name></expr></argument>, <argument pos:start="59:56" pos:end="59:70"><expr pos:start="59:56" pos:end="59:70"><operator pos:start="59:56" pos:end="59:56">&amp;</operator><name pos:start="59:57" pos:end="59:70"><name pos:start="59:57" pos:end="59:59">lrc</name><operator pos:start="59:60" pos:end="59:61">-&gt;</operator><name pos:start="59:62" pos:end="59:70">ts_offset</name></name></expr></argument>)</argument_list></call> <operator pos:start="59:73" pos:end="59:74">!=</operator> <literal type="number" pos:start="59:76" pos:end="59:76">1</literal></expr>)</condition> <block pos:start="59:79" pos:end="63:17">{<block_content pos:start="61:21" pos:end="61:81">

                    <expr_stmt pos:start="61:21" pos:end="61:81"><expr pos:start="61:21" pos:end="61:80"><call pos:start="61:21" pos:end="61:80"><name pos:start="61:21" pos:end="61:31">av_dict_set</name><argument_list pos:start="61:32" pos:end="61:80">(<argument pos:start="61:33" pos:end="61:44"><expr pos:start="61:33" pos:end="61:44"><operator pos:start="61:33" pos:end="61:33">&amp;</operator><name pos:start="61:34" pos:end="61:44"><name pos:start="61:34" pos:end="61:34">s</name><operator pos:start="61:35" pos:end="61:36">-&gt;</operator><name pos:start="61:37" pos:end="61:44">metadata</name></name></expr></argument>, <argument pos:start="61:47" pos:end="61:58"><expr pos:start="61:47" pos:end="61:58"><name pos:start="61:47" pos:end="61:54"><name pos:start="61:47" pos:end="61:50">line</name><operator pos:start="61:51" pos:end="61:51">.</operator><name pos:start="61:52" pos:end="61:54">str</name></name> <operator pos:start="61:56" pos:end="61:56">+</operator> <literal type="number" pos:start="61:58" pos:end="61:58">1</literal></expr></argument>, <argument pos:start="61:61" pos:end="61:76"><expr pos:start="61:61" pos:end="61:76"><name pos:start="61:61" pos:end="61:72">comma_offset</name> <operator pos:start="61:74" pos:end="61:74">+</operator> <literal type="number" pos:start="61:76" pos:end="61:76">1</literal></expr></argument>, <argument pos:start="61:79" pos:end="61:79"><expr pos:start="61:79" pos:end="61:79"><literal type="number" pos:start="61:79" pos:end="61:79">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:36"><expr pos:start="65:17" pos:end="65:35"><operator pos:start="65:17" pos:end="65:17">*</operator><name pos:start="65:18" pos:end="65:29">comma_offset</name> <operator pos:start="65:31" pos:end="65:31">=</operator> <literal type="char" pos:start="65:33" pos:end="65:35">':'</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="67:17" pos:end="67:44"><expr pos:start="67:17" pos:end="67:43"><operator pos:start="67:17" pos:end="67:17">*</operator><name pos:start="67:18" pos:end="67:37">right_bracket_offset</name> <operator pos:start="67:39" pos:end="67:39">=</operator> <literal type="char" pos:start="67:41" pos:end="67:43">']'</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



        </block_content>}</block></if> <else pos:start="73:11" pos:end="111:9">else <block pos:start="73:16" pos:end="111:9">{<block_content pos:start="75:13" pos:end="109:13">

            <decl_stmt pos:start="75:13" pos:end="75:26"><decl pos:start="75:13" pos:end="75:25"><type pos:start="75:13" pos:end="75:22"><name pos:start="75:13" pos:end="75:20">AVPacket</name> <modifier pos:start="75:22" pos:end="75:22">*</modifier></type><name pos:start="75:23" pos:end="75:25">sub</name></decl>;</decl_stmt>

            <decl_stmt pos:start="77:13" pos:end="77:46"><decl pos:start="77:13" pos:end="77:45"><type pos:start="77:13" pos:end="77:19"><name pos:start="77:13" pos:end="77:19">int64_t</name></type> <name pos:start="77:21" pos:end="77:28">ts_start</name> <init pos:start="77:30" pos:end="77:45">= <expr pos:start="77:32" pos:end="77:45"><name pos:start="77:32" pos:end="77:45">AV_NOPTS_VALUE</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="79:13" pos:end="79:37"><decl pos:start="79:13" pos:end="79:36"><type pos:start="79:13" pos:end="79:19"><name pos:start="79:13" pos:end="79:19">int64_t</name></type> <name pos:start="79:21" pos:end="79:32">ts_stroffset</name> <init pos:start="79:34" pos:end="79:36">= <expr pos:start="79:36" pos:end="79:36"><literal type="number" pos:start="79:36" pos:end="79:36">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="81:13" pos:end="81:42"><decl pos:start="81:13" pos:end="81:41"><type pos:start="81:13" pos:end="81:19"><name pos:start="81:13" pos:end="81:19">int64_t</name></type> <name pos:start="81:21" pos:end="81:37">ts_stroffset_incr</name> <init pos:start="81:39" pos:end="81:41">= <expr pos:start="81:41" pos:end="81:41"><literal type="number" pos:start="81:41" pos:end="81:41">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="83:13" pos:end="83:54"><decl pos:start="83:13" pos:end="83:53"><type pos:start="83:13" pos:end="83:19"><name pos:start="83:13" pos:end="83:19">int64_t</name></type> <name pos:start="83:21" pos:end="83:32">ts_strlength</name> <init pos:start="83:34" pos:end="83:53">= <expr pos:start="83:36" pos:end="83:53"><call pos:start="83:36" pos:end="83:53"><name pos:start="83:36" pos:end="83:43">count_ts</name><argument_list pos:start="83:44" pos:end="83:53">(<argument pos:start="83:45" pos:end="83:52"><expr pos:start="83:45" pos:end="83:52"><name pos:start="83:45" pos:end="83:52"><name pos:start="83:45" pos:end="83:48">line</name><operator pos:start="83:49" pos:end="83:49">.</operator><name pos:start="83:50" pos:end="83:52">str</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <while pos:start="87:13" pos:end="109:13">while<condition pos:start="87:18" pos:end="89:64">(<expr pos:start="87:19" pos:end="89:63"><operator pos:start="87:19" pos:end="87:19">(</operator><name pos:start="87:20" pos:end="87:36">ts_stroffset_incr</name> <operator pos:start="87:38" pos:end="87:38">=</operator> <call pos:start="87:40" pos:end="89:57"><name pos:start="87:40" pos:end="87:46">read_ts</name><argument_list pos:start="87:47" pos:end="89:57">(<argument pos:start="87:48" pos:end="87:70"><expr pos:start="87:48" pos:end="87:70"><name pos:start="87:48" pos:end="87:55"><name pos:start="87:48" pos:end="87:51">line</name><operator pos:start="87:52" pos:end="87:52">.</operator><name pos:start="87:53" pos:end="87:55">str</name></name> <operator pos:start="87:57" pos:end="87:57">+</operator> <name pos:start="87:59" pos:end="87:70">ts_stroffset</name></expr></argument>,

                                               <argument pos:start="89:48" pos:end="89:56"><expr pos:start="89:48" pos:end="89:56"><operator pos:start="89:48" pos:end="89:48">&amp;</operator><name pos:start="89:49" pos:end="89:56">ts_start</name></expr></argument>)</argument_list></call><operator pos:start="89:58" pos:end="89:58">)</operator> <operator pos:start="89:60" pos:end="89:61">!=</operator> <literal type="number" pos:start="89:63" pos:end="89:63">0</literal></expr>)</condition> <block pos:start="89:66" pos:end="109:13">{<block_content pos:start="91:17" pos:end="107:35">

                <expr_stmt pos:start="91:17" pos:end="91:50"><expr pos:start="91:17" pos:end="91:49"><name pos:start="91:17" pos:end="91:28">ts_stroffset</name> <operator pos:start="91:30" pos:end="91:31">+=</operator> <name pos:start="91:33" pos:end="91:49">ts_stroffset_incr</name></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="95:76"><expr pos:start="93:17" pos:end="95:75"><name pos:start="93:17" pos:end="93:19">sub</name> <operator pos:start="93:21" pos:end="93:21">=</operator> <call pos:start="93:23" pos:end="95:75"><name pos:start="93:23" pos:end="93:47">ff_subtitles_queue_insert</name><argument_list pos:start="93:48" pos:end="95:75">(<argument pos:start="93:49" pos:end="93:55"><expr pos:start="93:49" pos:end="93:55"><operator pos:start="93:49" pos:end="93:49">&amp;</operator><name pos:start="93:50" pos:end="93:55"><name pos:start="93:50" pos:end="93:52">lrc</name><operator pos:start="93:53" pos:end="93:54">-&gt;</operator><name pos:start="93:55" pos:end="93:55">q</name></name></expr></argument>, <argument pos:start="93:58" pos:end="93:80"><expr pos:start="93:58" pos:end="93:80"><name pos:start="93:58" pos:end="93:65"><name pos:start="93:58" pos:end="93:61">line</name><operator pos:start="93:62" pos:end="93:62">.</operator><name pos:start="93:63" pos:end="93:65">str</name></name> <operator pos:start="93:67" pos:end="93:67">+</operator> <name pos:start="93:69" pos:end="93:80">ts_strlength</name></expr></argument>,

                                                <argument pos:start="95:49" pos:end="95:71"><expr pos:start="95:49" pos:end="95:71"><name pos:start="95:49" pos:end="95:56"><name pos:start="95:49" pos:end="95:52">line</name><operator pos:start="95:53" pos:end="95:53">.</operator><name pos:start="95:54" pos:end="95:56">len</name></name> <operator pos:start="95:58" pos:end="95:58">-</operator> <name pos:start="95:60" pos:end="95:71">ts_strlength</name></expr></argument>, <argument pos:start="95:74" pos:end="95:74"><expr pos:start="95:74" pos:end="95:74"><literal type="number" pos:start="95:74" pos:end="95:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="97:17" pos:end="101:17"><if pos:start="97:17" pos:end="101:17">if<condition pos:start="97:19" pos:end="97:24">(<expr pos:start="97:20" pos:end="97:23"><operator pos:start="97:20" pos:end="97:20">!</operator><name pos:start="97:21" pos:end="97:23">sub</name></expr>)</condition> <block pos:start="97:26" pos:end="101:17">{<block_content pos:start="99:21" pos:end="99:43">

                    <return pos:start="99:21" pos:end="99:43">return <expr pos:start="99:28" pos:end="99:42"><call pos:start="99:28" pos:end="99:42"><name pos:start="99:28" pos:end="99:34">AVERROR</name><argument_list pos:start="99:35" pos:end="99:42">(<argument pos:start="99:36" pos:end="99:41"><expr pos:start="99:36" pos:end="99:41"><name pos:start="99:36" pos:end="99:41">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:31"><expr pos:start="103:17" pos:end="103:30"><name pos:start="103:17" pos:end="103:24"><name pos:start="103:17" pos:end="103:19">sub</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:24">pos</name></name> <operator pos:start="103:26" pos:end="103:26">=</operator> <name pos:start="103:28" pos:end="103:30">pos</name></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:53"><expr pos:start="105:17" pos:end="105:52"><name pos:start="105:17" pos:end="105:24"><name pos:start="105:17" pos:end="105:19">sub</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:24">pts</name></name> <operator pos:start="105:26" pos:end="105:26">=</operator> <name pos:start="105:28" pos:end="105:35">ts_start</name> <operator pos:start="105:37" pos:end="105:37">-</operator> <name pos:start="105:39" pos:end="105:52"><name pos:start="105:39" pos:end="105:41">lrc</name><operator pos:start="105:42" pos:end="105:43">-&gt;</operator><name pos:start="105:44" pos:end="105:52">ts_offset</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:35"><expr pos:start="107:17" pos:end="107:34"><name pos:start="107:17" pos:end="107:29"><name pos:start="107:17" pos:end="107:19">sub</name><operator pos:start="107:20" pos:end="107:21">-&gt;</operator><name pos:start="107:22" pos:end="107:29">duration</name></name> <operator pos:start="107:31" pos:end="107:31">=</operator> <operator pos:start="107:33" pos:end="107:33">-</operator><literal type="number" pos:start="107:34" pos:end="107:34">1</literal></expr>;</expr_stmt>

            </block_content>}</block></while>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="115:5" pos:end="115:44"><expr pos:start="115:5" pos:end="115:43"><call pos:start="115:5" pos:end="115:43"><name pos:start="115:5" pos:end="115:31">ff_subtitles_queue_finalize</name><argument_list pos:start="115:32" pos:end="115:43">(<argument pos:start="115:33" pos:end="115:33"><expr pos:start="115:33" pos:end="115:33"><name pos:start="115:33" pos:end="115:33">s</name></expr></argument>, <argument pos:start="115:36" pos:end="115:42"><expr pos:start="115:36" pos:end="115:42"><operator pos:start="115:36" pos:end="115:36">&amp;</operator><name pos:start="115:37" pos:end="115:42"><name pos:start="115:37" pos:end="115:39">lrc</name><operator pos:start="115:40" pos:end="115:41">-&gt;</operator><name pos:start="115:42" pos:end="115:42">q</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:56"><expr pos:start="117:5" pos:end="117:55"><call pos:start="117:5" pos:end="117:55"><name pos:start="117:5" pos:end="117:24">ff_metadata_conv_ctx</name><argument_list pos:start="117:25" pos:end="117:55">(<argument pos:start="117:26" pos:end="117:26"><expr pos:start="117:26" pos:end="117:26"><name pos:start="117:26" pos:end="117:26">s</name></expr></argument>, <argument pos:start="117:29" pos:end="117:32"><expr pos:start="117:29" pos:end="117:32"><name pos:start="117:29" pos:end="117:32">NULL</name></expr></argument>, <argument pos:start="117:35" pos:end="117:54"><expr pos:start="117:35" pos:end="117:54"><name pos:start="117:35" pos:end="117:54">ff_lrc_metadata_conv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <return pos:start="120:5" pos:end="120:13">return <expr pos:start="120:12" pos:end="120:12"><literal type="number" pos:start="120:12" pos:end="120:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
