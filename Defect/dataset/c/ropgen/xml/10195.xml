<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10195.c" pos:tabs="8"><function pos:start="1:1" pos:end="181:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:41">mptsas_process_scsi_io_request</name><parameter_list pos:start="1:42" pos:end="5:54">(<parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:56"><name pos:start="1:43" pos:end="1:53">MPTSASState</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">s</name></decl></parameter>,

                                          <parameter pos:start="3:43" pos:end="3:70"><decl pos:start="3:43" pos:end="3:70"><type pos:start="3:43" pos:end="3:70"><name pos:start="3:43" pos:end="3:61">MPIMsgSCSIIORequest</name> <modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:70">scsi_io</name></decl></parameter>,

                                          <parameter pos:start="5:43" pos:end="5:53"><decl pos:start="5:43" pos:end="5:53"><type pos:start="5:43" pos:end="5:53"><name pos:start="5:43" pos:end="5:48">hwaddr</name></type> <name pos:start="5:50" pos:end="5:53">addr</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="181:1">{<block_content pos:start="9:5" pos:end="179:13">

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">MPTSASRequest</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">req</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:21">MPIMsgSCSIIOReply</name></type> <name pos:start="11:23" pos:end="11:27">reply</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:14">SCSIDevice</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:20">sdev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">status</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:43"><expr pos:start="19:5" pos:end="19:42"><call pos:start="19:5" pos:end="19:42"><name pos:start="19:5" pos:end="19:33">mptsas_fix_scsi_io_endianness</name><argument_list pos:start="19:34" pos:end="19:42">(<argument pos:start="19:35" pos:end="19:41"><expr pos:start="19:35" pos:end="19:41"><name pos:start="19:35" pos:end="19:41">scsi_io</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="25:79"><expr pos:start="23:5" pos:end="25:78"><call pos:start="23:5" pos:end="25:78"><name pos:start="23:5" pos:end="23:40">trace_mptsas_process_scsi_io_request</name><argument_list pos:start="23:41" pos:end="25:78">(<argument pos:start="23:42" pos:end="23:42"><expr pos:start="23:42" pos:end="23:42"><name pos:start="23:42" pos:end="23:42">s</name></expr></argument>, <argument pos:start="23:45" pos:end="23:56"><expr pos:start="23:45" pos:end="23:56"><name pos:start="23:45" pos:end="23:56"><name pos:start="23:45" pos:end="23:51">scsi_io</name><operator pos:start="23:52" pos:end="23:53">-&gt;</operator><name pos:start="23:54" pos:end="23:56">Bus</name></name></expr></argument>, <argument pos:start="23:59" pos:end="23:75"><expr pos:start="23:59" pos:end="23:75"><name pos:start="23:59" pos:end="23:75"><name pos:start="23:59" pos:end="23:65">scsi_io</name><operator pos:start="23:66" pos:end="23:67">-&gt;</operator><name pos:start="23:68" pos:end="23:75">TargetID</name></name></expr></argument>,

                                         <argument pos:start="25:42" pos:end="25:56"><expr pos:start="25:42" pos:end="25:56"><name pos:start="25:42" pos:end="25:56"><name pos:start="25:42" pos:end="25:48">scsi_io</name><operator pos:start="25:49" pos:end="25:50">-&gt;</operator><name pos:start="25:51" pos:end="25:53">LUN</name><index pos:start="25:54" pos:end="25:56">[<expr pos:start="25:55" pos:end="25:55"><literal type="number" pos:start="25:55" pos:end="25:55">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="25:59" pos:end="25:77"><expr pos:start="25:59" pos:end="25:77"><name pos:start="25:59" pos:end="25:77"><name pos:start="25:59" pos:end="25:65">scsi_io</name><operator pos:start="25:66" pos:end="25:67">-&gt;</operator><name pos:start="25:68" pos:end="25:77">DataLength</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="31:58"><expr pos:start="29:5" pos:end="31:57"><name pos:start="29:5" pos:end="29:10">status</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <call pos:start="29:14" pos:end="31:57"><name pos:start="29:14" pos:end="29:36">mptsas_scsi_device_find</name><argument_list pos:start="29:37" pos:end="31:57">(<argument pos:start="29:38" pos:end="29:38"><expr pos:start="29:38" pos:end="29:38"><name pos:start="29:38" pos:end="29:38">s</name></expr></argument>, <argument pos:start="29:41" pos:end="29:52"><expr pos:start="29:41" pos:end="29:52"><name pos:start="29:41" pos:end="29:52"><name pos:start="29:41" pos:end="29:47">scsi_io</name><operator pos:start="29:48" pos:end="29:49">-&gt;</operator><name pos:start="29:50" pos:end="29:52">Bus</name></name></expr></argument>, <argument pos:start="29:55" pos:end="29:71"><expr pos:start="29:55" pos:end="29:71"><name pos:start="29:55" pos:end="29:71"><name pos:start="29:55" pos:end="29:61">scsi_io</name><operator pos:start="29:62" pos:end="29:63">-&gt;</operator><name pos:start="29:64" pos:end="29:71">TargetID</name></name></expr></argument>,

                                     <argument pos:start="31:38" pos:end="31:49"><expr pos:start="31:38" pos:end="31:49"><name pos:start="31:38" pos:end="31:49"><name pos:start="31:38" pos:end="31:44">scsi_io</name><operator pos:start="31:45" pos:end="31:46">-&gt;</operator><name pos:start="31:47" pos:end="31:49">LUN</name></name></expr></argument>, <argument pos:start="31:52" pos:end="31:56"><expr pos:start="31:52" pos:end="31:56"><operator pos:start="31:52" pos:end="31:52">&amp;</operator><name pos:start="31:53" pos:end="31:56">sdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:15">(<expr pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:14">status</name></expr>)</condition> <block pos:start="33:17" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:17">

        <goto pos:start="35:9" pos:end="35:17">goto <name pos:start="35:14" pos:end="35:16">bad</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:7">req</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="41:33"><name pos:start="41:11" pos:end="41:15">g_new</name><argument_list pos:start="41:16" pos:end="41:33">(<argument pos:start="41:17" pos:end="41:29"><expr pos:start="41:17" pos:end="41:29"><name pos:start="41:17" pos:end="41:29">MPTSASRequest</name></expr></argument>, <argument pos:start="41:32" pos:end="41:32"><expr pos:start="41:32" pos:end="41:32"><literal type="number" pos:start="41:32" pos:end="41:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:47"><expr pos:start="43:5" pos:end="43:46"><call pos:start="43:5" pos:end="43:46"><name pos:start="43:5" pos:end="43:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="43:23" pos:end="43:46">(<argument pos:start="43:24" pos:end="43:34"><expr pos:start="43:24" pos:end="43:34"><operator pos:start="43:24" pos:end="43:24">&amp;</operator><name pos:start="43:25" pos:end="43:34"><name pos:start="43:25" pos:end="43:25">s</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:34">pending</name></name></expr></argument>, <argument pos:start="43:37" pos:end="43:39"><expr pos:start="43:37" pos:end="43:39"><name pos:start="43:37" pos:end="43:39">req</name></expr></argument>, <argument pos:start="43:42" pos:end="43:45"><expr pos:start="43:42" pos:end="43:45"><name pos:start="43:42" pos:end="43:45">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:28"><expr pos:start="45:5" pos:end="45:27"><name pos:start="45:5" pos:end="45:16"><name pos:start="45:5" pos:end="45:7">req</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:16">scsi_io</name></name> <operator pos:start="45:18" pos:end="45:18">=</operator> <operator pos:start="45:20" pos:end="45:20">*</operator><name pos:start="45:21" pos:end="45:27">scsi_io</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:17"><expr pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:12"><name pos:start="47:5" pos:end="47:7">req</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:12">dev</name></name> <operator pos:start="47:14" pos:end="47:14">=</operator> <name pos:start="47:16" pos:end="47:16">s</name></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:44"><expr pos:start="51:5" pos:end="51:43"><name pos:start="51:5" pos:end="51:10">status</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <call pos:start="51:14" pos:end="51:43"><name pos:start="51:14" pos:end="51:29">mptsas_build_sgl</name><argument_list pos:start="51:30" pos:end="51:43">(<argument pos:start="51:31" pos:end="51:31"><expr pos:start="51:31" pos:end="51:31"><name pos:start="51:31" pos:end="51:31">s</name></expr></argument>, <argument pos:start="51:34" pos:end="51:36"><expr pos:start="51:34" pos:end="51:36"><name pos:start="51:34" pos:end="51:36">req</name></expr></argument>, <argument pos:start="51:39" pos:end="51:42"><expr pos:start="51:39" pos:end="51:42"><name pos:start="51:39" pos:end="51:42">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="57:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:15">(<expr pos:start="53:9" pos:end="53:14"><name pos:start="53:9" pos:end="53:14">status</name></expr>)</condition> <block pos:start="53:17" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:22">

        <goto pos:start="55:9" pos:end="55:22">goto <name pos:start="55:14" pos:end="55:21">free_bad</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="71:5"><if pos:start="61:5" pos:end="71:5">if <condition pos:start="61:8" pos:end="61:44">(<expr pos:start="61:9" pos:end="61:43"><name pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:11">req</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:16">qsg</name><operator pos:start="61:17" pos:end="61:17">.</operator><name pos:start="61:18" pos:end="61:21">size</name></name> <operator pos:start="61:23" pos:end="61:23">&lt;</operator> <name pos:start="61:25" pos:end="61:43"><name pos:start="61:25" pos:end="61:31">scsi_io</name><operator pos:start="61:32" pos:end="61:33">-&gt;</operator><name pos:start="61:34" pos:end="61:43">DataLength</name></name></expr>)</condition> <block pos:start="61:46" pos:end="71:5">{<block_content pos:start="63:9" pos:end="69:22">

        <expr_stmt pos:start="63:9" pos:end="65:49"><expr pos:start="63:9" pos:end="65:48"><call pos:start="63:9" pos:end="65:48"><name pos:start="63:9" pos:end="63:33">trace_mptsas_sgl_overflow</name><argument_list pos:start="63:34" pos:end="65:48">(<argument pos:start="63:35" pos:end="63:35"><expr pos:start="63:35" pos:end="63:35"><name pos:start="63:35" pos:end="63:35">s</name></expr></argument>, <argument pos:start="63:38" pos:end="63:56"><expr pos:start="63:38" pos:end="63:56"><name pos:start="63:38" pos:end="63:56"><name pos:start="63:38" pos:end="63:44">scsi_io</name><operator pos:start="63:45" pos:end="63:46">-&gt;</operator><name pos:start="63:47" pos:end="63:56">MsgContext</name></name></expr></argument>, <argument pos:start="63:59" pos:end="63:77"><expr pos:start="63:59" pos:end="63:77"><name pos:start="63:59" pos:end="63:77"><name pos:start="63:59" pos:end="63:65">scsi_io</name><operator pos:start="63:66" pos:end="63:67">-&gt;</operator><name pos:start="63:68" pos:end="63:77">DataLength</name></name></expr></argument>,

                                  <argument pos:start="65:35" pos:end="65:47"><expr pos:start="65:35" pos:end="65:47"><name pos:start="65:35" pos:end="65:47"><name pos:start="65:35" pos:end="65:37">req</name><operator pos:start="65:38" pos:end="65:39">-&gt;</operator><name pos:start="65:40" pos:end="65:42">qsg</name><operator pos:start="65:43" pos:end="65:43">.</operator><name pos:start="65:44" pos:end="65:47">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:43"><expr pos:start="67:9" pos:end="67:42"><name pos:start="67:9" pos:end="67:14">status</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <name pos:start="67:18" pos:end="67:42">MPI_IOCSTATUS_INVALID_SGL</name></expr>;</expr_stmt>

        <goto pos:start="69:9" pos:end="69:22">goto <name pos:start="69:14" pos:end="69:21">free_bad</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="77:64"><expr pos:start="75:5" pos:end="77:63"><name pos:start="75:5" pos:end="75:13"><name pos:start="75:5" pos:end="75:7">req</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:13">sreq</name></name> <operator pos:start="75:15" pos:end="75:15">=</operator> <call pos:start="75:17" pos:end="77:63"><name pos:start="75:17" pos:end="75:28">scsi_req_new</name><argument_list pos:start="75:29" pos:end="77:63">(<argument pos:start="75:30" pos:end="75:33"><expr pos:start="75:30" pos:end="75:33"><name pos:start="75:30" pos:end="75:33">sdev</name></expr></argument>, <argument pos:start="75:36" pos:end="75:54"><expr pos:start="75:36" pos:end="75:54"><name pos:start="75:36" pos:end="75:54"><name pos:start="75:36" pos:end="75:42">scsi_io</name><operator pos:start="75:43" pos:end="75:44">-&gt;</operator><name pos:start="75:45" pos:end="75:54">MsgContext</name></name></expr></argument>,

                            <argument pos:start="77:29" pos:end="77:43"><expr pos:start="77:29" pos:end="77:43"><name pos:start="77:29" pos:end="77:43"><name pos:start="77:29" pos:end="77:35">scsi_io</name><operator pos:start="77:36" pos:end="77:37">-&gt;</operator><name pos:start="77:38" pos:end="77:40">LUN</name><index pos:start="77:41" pos:end="77:43">[<expr pos:start="77:42" pos:end="77:42"><literal type="number" pos:start="77:42" pos:end="77:42">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="77:46" pos:end="77:57"><expr pos:start="77:46" pos:end="77:57"><name pos:start="77:46" pos:end="77:57"><name pos:start="77:46" pos:end="77:52">scsi_io</name><operator pos:start="77:53" pos:end="77:54">-&gt;</operator><name pos:start="77:55" pos:end="77:57">CDB</name></name></expr></argument>, <argument pos:start="77:60" pos:end="77:62"><expr pos:start="77:60" pos:end="77:62"><name pos:start="77:60" pos:end="77:62">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="81:5" pos:end="85:5"><if pos:start="81:5" pos:end="85:5">if <condition pos:start="81:8" pos:end="81:50">(<expr pos:start="81:9" pos:end="81:49"><name pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:11">req</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:17">sreq</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:22">cmd</name><operator pos:start="81:23" pos:end="81:23">.</operator><name pos:start="81:24" pos:end="81:27">xfer</name></name> <operator pos:start="81:29" pos:end="81:29">&gt;</operator> <name pos:start="81:31" pos:end="81:49"><name pos:start="81:31" pos:end="81:37">scsi_io</name><operator pos:start="81:38" pos:end="81:39">-&gt;</operator><name pos:start="81:40" pos:end="81:49">DataLength</name></name></expr>)</condition> <block pos:start="81:52" pos:end="85:5">{<block_content pos:start="83:9" pos:end="83:21">

        <goto pos:start="83:9" pos:end="83:21">goto <name pos:start="83:14" pos:end="83:20">overrun</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <switch pos:start="87:5" pos:end="123:5">switch <condition pos:start="87:12" pos:end="87:69">(<expr pos:start="87:13" pos:end="87:68"><name pos:start="87:13" pos:end="87:28"><name pos:start="87:13" pos:end="87:19">scsi_io</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:28">Control</name></name> <operator pos:start="87:30" pos:end="87:30">&amp;</operator> <name pos:start="87:32" pos:end="87:68">MPI_SCSIIO_CONTROL_DATADIRECTION_MASK</name></expr>)</condition> <block pos:start="87:71" pos:end="123:5">{<block_content pos:start="89:5" pos:end="121:14">

    <case pos:start="89:5" pos:end="89:43">case <expr pos:start="89:10" pos:end="89:42"><name pos:start="89:10" pos:end="89:42">MPI_SCSIIO_CONTROL_NODATATRANSFER</name></expr>:</case>

        <if_stmt pos:start="91:9" pos:end="95:9"><if pos:start="91:9" pos:end="95:9">if <condition pos:start="91:12" pos:end="91:50">(<expr pos:start="91:13" pos:end="91:49"><name pos:start="91:13" pos:end="91:31"><name pos:start="91:13" pos:end="91:15">req</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:21">sreq</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:26">cmd</name><operator pos:start="91:27" pos:end="91:27">.</operator><name pos:start="91:28" pos:end="91:31">mode</name></name> <operator pos:start="91:33" pos:end="91:34">!=</operator> <name pos:start="91:36" pos:end="91:49">SCSI_XFER_NONE</name></expr>)</condition> <block pos:start="91:52" pos:end="95:9">{<block_content pos:start="93:13" pos:end="93:25">

            <goto pos:start="93:13" pos:end="93:25">goto <name pos:start="93:18" pos:end="93:24">overrun</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>



    <case pos:start="101:5" pos:end="101:34">case <expr pos:start="101:10" pos:end="101:33"><name pos:start="101:10" pos:end="101:33">MPI_SCSIIO_CONTROL_WRITE</name></expr>:</case>

        <if_stmt pos:start="103:9" pos:end="107:9"><if pos:start="103:9" pos:end="107:9">if <condition pos:start="103:12" pos:end="103:52">(<expr pos:start="103:13" pos:end="103:51"><name pos:start="103:13" pos:end="103:31"><name pos:start="103:13" pos:end="103:15">req</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:21">sreq</name><operator pos:start="103:22" pos:end="103:23">-&gt;</operator><name pos:start="103:24" pos:end="103:26">cmd</name><operator pos:start="103:27" pos:end="103:27">.</operator><name pos:start="103:28" pos:end="103:31">mode</name></name> <operator pos:start="103:33" pos:end="103:34">!=</operator> <name pos:start="103:36" pos:end="103:51">SCSI_XFER_TO_DEV</name></expr>)</condition> <block pos:start="103:54" pos:end="107:9">{<block_content pos:start="105:13" pos:end="105:25">

            <goto pos:start="105:13" pos:end="105:25">goto <name pos:start="105:18" pos:end="105:24">overrun</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <break pos:start="109:9" pos:end="109:14">break;</break>



    <case pos:start="113:5" pos:end="113:33">case <expr pos:start="113:10" pos:end="113:32"><name pos:start="113:10" pos:end="113:32">MPI_SCSIIO_CONTROL_READ</name></expr>:</case>

        <if_stmt pos:start="115:9" pos:end="119:9"><if pos:start="115:9" pos:end="119:9">if <condition pos:start="115:12" pos:end="115:54">(<expr pos:start="115:13" pos:end="115:53"><name pos:start="115:13" pos:end="115:31"><name pos:start="115:13" pos:end="115:15">req</name><operator pos:start="115:16" pos:end="115:17">-&gt;</operator><name pos:start="115:18" pos:end="115:21">sreq</name><operator pos:start="115:22" pos:end="115:23">-&gt;</operator><name pos:start="115:24" pos:end="115:26">cmd</name><operator pos:start="115:27" pos:end="115:27">.</operator><name pos:start="115:28" pos:end="115:31">mode</name></name> <operator pos:start="115:33" pos:end="115:34">!=</operator> <name pos:start="115:36" pos:end="115:53">SCSI_XFER_FROM_DEV</name></expr>)</condition> <block pos:start="115:56" pos:end="119:9">{<block_content pos:start="117:13" pos:end="117:25">

            <goto pos:start="117:13" pos:end="117:25">goto <name pos:start="117:18" pos:end="117:24">overrun</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <break pos:start="121:9" pos:end="121:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="127:5" pos:end="131:5"><if pos:start="127:5" pos:end="131:5">if <condition pos:start="127:8" pos:end="127:36">(<expr pos:start="127:9" pos:end="127:35"><call pos:start="127:9" pos:end="127:35"><name pos:start="127:9" pos:end="127:24">scsi_req_enqueue</name><argument_list pos:start="127:25" pos:end="127:35">(<argument pos:start="127:26" pos:end="127:34"><expr pos:start="127:26" pos:end="127:34"><name pos:start="127:26" pos:end="127:34"><name pos:start="127:26" pos:end="127:28">req</name><operator pos:start="127:29" pos:end="127:30">-&gt;</operator><name pos:start="127:31" pos:end="127:34">sreq</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="127:38" pos:end="131:5">{<block_content pos:start="129:9" pos:end="129:37">

        <expr_stmt pos:start="129:9" pos:end="129:37"><expr pos:start="129:9" pos:end="129:36"><call pos:start="129:9" pos:end="129:36"><name pos:start="129:9" pos:end="129:25">scsi_req_continue</name><argument_list pos:start="129:26" pos:end="129:36">(<argument pos:start="129:27" pos:end="129:35"><expr pos:start="129:27" pos:end="129:35"><name pos:start="129:27" pos:end="129:35"><name pos:start="129:27" pos:end="129:29">req</name><operator pos:start="129:30" pos:end="129:31">-&gt;</operator><name pos:start="129:32" pos:end="129:35">sreq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="133:5" pos:end="133:13">return <expr pos:start="133:12" pos:end="133:12"><literal type="number" pos:start="133:12" pos:end="133:12">0</literal></expr>;</return>



<label pos:start="137:1" pos:end="137:8"><name pos:start="137:1" pos:end="137:7">overrun</name>:</label>

    <expr_stmt pos:start="139:5" pos:end="141:52"><expr pos:start="139:5" pos:end="141:51"><call pos:start="139:5" pos:end="141:51"><name pos:start="139:5" pos:end="139:30">trace_mptsas_scsi_overflow</name><argument_list pos:start="139:31" pos:end="141:51">(<argument pos:start="139:32" pos:end="139:32"><expr pos:start="139:32" pos:end="139:32"><name pos:start="139:32" pos:end="139:32">s</name></expr></argument>, <argument pos:start="139:35" pos:end="139:53"><expr pos:start="139:35" pos:end="139:53"><name pos:start="139:35" pos:end="139:53"><name pos:start="139:35" pos:end="139:41">scsi_io</name><operator pos:start="139:42" pos:end="139:43">-&gt;</operator><name pos:start="139:44" pos:end="139:53">MsgContext</name></name></expr></argument>, <argument pos:start="139:56" pos:end="139:74"><expr pos:start="139:56" pos:end="139:74"><name pos:start="139:56" pos:end="139:74"><name pos:start="139:56" pos:end="139:58">req</name><operator pos:start="139:59" pos:end="139:60">-&gt;</operator><name pos:start="139:61" pos:end="139:64">sreq</name><operator pos:start="139:65" pos:end="139:66">-&gt;</operator><name pos:start="139:67" pos:end="139:69">cmd</name><operator pos:start="139:70" pos:end="139:70">.</operator><name pos:start="139:71" pos:end="139:74">xfer</name></name></expr></argument>,

                               <argument pos:start="141:32" pos:end="141:50"><expr pos:start="141:32" pos:end="141:50"><name pos:start="141:32" pos:end="141:50"><name pos:start="141:32" pos:end="141:38">scsi_io</name><operator pos:start="141:39" pos:end="141:40">-&gt;</operator><name pos:start="141:41" pos:end="141:50">DataLength</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:45"><expr pos:start="143:5" pos:end="143:44"><name pos:start="143:5" pos:end="143:10">status</name> <operator pos:start="143:12" pos:end="143:12">=</operator> <name pos:start="143:14" pos:end="143:44">MPI_IOCSTATUS_SCSI_DATA_OVERRUN</name></expr>;</expr_stmt>

<label pos:start="145:1" pos:end="145:9"><name pos:start="145:1" pos:end="145:8">free_bad</name>:</label>

    <expr_stmt pos:start="147:5" pos:end="147:29"><expr pos:start="147:5" pos:end="147:28"><call pos:start="147:5" pos:end="147:28"><name pos:start="147:5" pos:end="147:23">mptsas_free_request</name><argument_list pos:start="147:24" pos:end="147:28">(<argument pos:start="147:25" pos:end="147:27"><expr pos:start="147:25" pos:end="147:27"><name pos:start="147:25" pos:end="147:27">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="149:1" pos:end="149:4"><name pos:start="149:1" pos:end="149:3">bad</name>:</label>

    <expr_stmt pos:start="151:5" pos:end="151:37"><expr pos:start="151:5" pos:end="151:36"><call pos:start="151:5" pos:end="151:36"><name pos:start="151:5" pos:end="151:10">memset</name><argument_list pos:start="151:11" pos:end="151:36">(<argument pos:start="151:12" pos:end="151:17"><expr pos:start="151:12" pos:end="151:17"><operator pos:start="151:12" pos:end="151:12">&amp;</operator><name pos:start="151:13" pos:end="151:17">reply</name></expr></argument>, <argument pos:start="151:20" pos:end="151:20"><expr pos:start="151:20" pos:end="151:20"><literal type="number" pos:start="151:20" pos:end="151:20">0</literal></expr></argument>, <argument pos:start="151:23" pos:end="151:35"><expr pos:start="151:23" pos:end="151:35"><sizeof pos:start="151:23" pos:end="151:35">sizeof<argument_list pos:start="151:29" pos:end="151:35">(<argument pos:start="151:30" pos:end="151:34"><expr pos:start="151:30" pos:end="151:34"><name pos:start="151:30" pos:end="151:34">reply</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:48"><expr pos:start="153:5" pos:end="153:47"><name pos:start="153:5" pos:end="153:18"><name pos:start="153:5" pos:end="153:9">reply</name><operator pos:start="153:10" pos:end="153:10">.</operator><name pos:start="153:11" pos:end="153:18">TargetID</name></name>          <operator pos:start="153:29" pos:end="153:29">=</operator> <name pos:start="153:31" pos:end="153:47"><name pos:start="153:31" pos:end="153:37">scsi_io</name><operator pos:start="153:38" pos:end="153:39">-&gt;</operator><name pos:start="153:40" pos:end="153:47">TargetID</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:43"><expr pos:start="155:5" pos:end="155:42"><name pos:start="155:5" pos:end="155:13"><name pos:start="155:5" pos:end="155:9">reply</name><operator pos:start="155:10" pos:end="155:10">.</operator><name pos:start="155:11" pos:end="155:13">Bus</name></name>               <operator pos:start="155:29" pos:end="155:29">=</operator> <name pos:start="155:31" pos:end="155:42"><name pos:start="155:31" pos:end="155:37">scsi_io</name><operator pos:start="155:38" pos:end="155:39">-&gt;</operator><name pos:start="155:40" pos:end="155:42">Bus</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:48"><expr pos:start="157:5" pos:end="157:47"><name pos:start="157:5" pos:end="157:19"><name pos:start="157:5" pos:end="157:9">reply</name><operator pos:start="157:10" pos:end="157:10">.</operator><name pos:start="157:11" pos:end="157:19">MsgLength</name></name>         <operator pos:start="157:29" pos:end="157:29">=</operator> <sizeof pos:start="157:31" pos:end="157:43">sizeof<argument_list pos:start="157:37" pos:end="157:43">(<argument pos:start="157:38" pos:end="157:42"><expr pos:start="157:38" pos:end="157:42"><name pos:start="157:38" pos:end="157:42">reply</name></expr></argument>)</argument_list></sizeof> <operator pos:start="157:45" pos:end="157:45">/</operator> <literal type="number" pos:start="157:47" pos:end="157:47">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:48"><expr pos:start="159:5" pos:end="159:47"><name pos:start="159:5" pos:end="159:18"><name pos:start="159:5" pos:end="159:9">reply</name><operator pos:start="159:10" pos:end="159:10">.</operator><name pos:start="159:11" pos:end="159:18">Function</name></name>          <operator pos:start="159:29" pos:end="159:29">=</operator> <name pos:start="159:31" pos:end="159:47"><name pos:start="159:31" pos:end="159:37">scsi_io</name><operator pos:start="159:38" pos:end="159:39">-&gt;</operator><name pos:start="159:40" pos:end="159:47">Function</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:49"><expr pos:start="161:5" pos:end="161:48"><name pos:start="161:5" pos:end="161:19"><name pos:start="161:5" pos:end="161:9">reply</name><operator pos:start="161:10" pos:end="161:10">.</operator><name pos:start="161:11" pos:end="161:19">CDBLength</name></name>         <operator pos:start="161:29" pos:end="161:29">=</operator> <name pos:start="161:31" pos:end="161:48"><name pos:start="161:31" pos:end="161:37">scsi_io</name><operator pos:start="161:38" pos:end="161:39">-&gt;</operator><name pos:start="161:40" pos:end="161:48">CDBLength</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:57"><expr pos:start="163:5" pos:end="163:56"><name pos:start="163:5" pos:end="163:27"><name pos:start="163:5" pos:end="163:9">reply</name><operator pos:start="163:10" pos:end="163:10">.</operator><name pos:start="163:11" pos:end="163:27">SenseBufferLength</name></name> <operator pos:start="163:29" pos:end="163:29">=</operator> <name pos:start="163:31" pos:end="163:56"><name pos:start="163:31" pos:end="163:37">scsi_io</name><operator pos:start="163:38" pos:end="163:39">-&gt;</operator><name pos:start="163:40" pos:end="163:56">SenseBufferLength</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:50"><expr pos:start="165:5" pos:end="165:49"><name pos:start="165:5" pos:end="165:20"><name pos:start="165:5" pos:end="165:9">reply</name><operator pos:start="165:10" pos:end="165:10">.</operator><name pos:start="165:11" pos:end="165:20">MsgContext</name></name>        <operator pos:start="165:29" pos:end="165:29">=</operator> <name pos:start="165:31" pos:end="165:49"><name pos:start="165:31" pos:end="165:37">scsi_io</name><operator pos:start="165:38" pos:end="165:39">-&gt;</operator><name pos:start="165:40" pos:end="165:49">MsgContext</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:60"><expr pos:start="167:5" pos:end="167:59"><name pos:start="167:5" pos:end="167:19"><name pos:start="167:5" pos:end="167:9">reply</name><operator pos:start="167:10" pos:end="167:10">.</operator><name pos:start="167:11" pos:end="167:19">SCSIState</name></name>         <operator pos:start="167:29" pos:end="167:29">=</operator> <name pos:start="167:31" pos:end="167:59">MPI_SCSI_STATE_NO_SCSI_STATUS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:37"><expr pos:start="169:5" pos:end="169:36"><name pos:start="169:5" pos:end="169:19"><name pos:start="169:5" pos:end="169:9">reply</name><operator pos:start="169:10" pos:end="169:10">.</operator><name pos:start="169:11" pos:end="169:19">IOCStatus</name></name>         <operator pos:start="169:29" pos:end="169:29">=</operator> <name pos:start="169:31" pos:end="169:36">status</name></expr>;</expr_stmt>



    <expr_stmt pos:start="173:5" pos:end="173:48"><expr pos:start="173:5" pos:end="173:47"><call pos:start="173:5" pos:end="173:47"><name pos:start="173:5" pos:end="173:39">mptsas_fix_scsi_io_reply_endianness</name><argument_list pos:start="173:40" pos:end="173:47">(<argument pos:start="173:41" pos:end="173:46"><expr pos:start="173:41" pos:end="173:46"><operator pos:start="173:41" pos:end="173:41">&amp;</operator><name pos:start="173:42" pos:end="173:46">reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:47"><expr pos:start="175:5" pos:end="175:46"><call pos:start="175:5" pos:end="175:46"><name pos:start="175:5" pos:end="175:16">mptsas_reply</name><argument_list pos:start="175:17" pos:end="175:46">(<argument pos:start="175:18" pos:end="175:18"><expr pos:start="175:18" pos:end="175:18"><name pos:start="175:18" pos:end="175:18">s</name></expr></argument>, <argument pos:start="175:21" pos:end="175:45"><expr pos:start="175:21" pos:end="175:45"><operator pos:start="175:21" pos:end="175:21">(</operator><name pos:start="175:22" pos:end="175:36">MPIDefaultReply</name> <operator pos:start="175:38" pos:end="175:38">*</operator><operator pos:start="175:39" pos:end="175:39">)</operator><operator pos:start="175:40" pos:end="175:40">&amp;</operator><name pos:start="175:41" pos:end="175:45">reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="179:5" pos:end="179:13">return <expr pos:start="179:12" pos:end="179:12"><literal type="number" pos:start="179:12" pos:end="179:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
