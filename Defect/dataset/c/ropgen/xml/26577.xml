<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26577.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">bdrv_co_maybe_schedule_bh</name><parameter_list pos:start="1:38" pos:end="1:63">(<parameter pos:start="1:39" pos:end="1:62"><decl pos:start="1:39" pos:end="1:62"><type pos:start="1:39" pos:end="1:59"><name pos:start="1:39" pos:end="1:57">BlockAIOCBCoroutine</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">acb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="5:5" pos:end="17:5">

    <expr_stmt pos:start="5:5" pos:end="5:25"><expr pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:7">acb</name><operator pos:start="5:8" pos:end="5:9">-&gt;</operator><name pos:start="5:10" pos:end="5:16">need_bh</name></name> <operator pos:start="5:18" pos:end="5:18">=</operator> <name pos:start="5:20" pos:end="5:24">false</name></expr>;</expr_stmt>

    <if_stmt pos:start="7:5" pos:end="17:5"><if pos:start="7:5" pos:end="17:5">if <condition pos:start="7:8" pos:end="7:39">(<expr pos:start="7:9" pos:end="7:38"><name pos:start="7:9" pos:end="7:22"><name pos:start="7:9" pos:end="7:11">acb</name><operator pos:start="7:12" pos:end="7:13">-&gt;</operator><name pos:start="7:14" pos:end="7:16">req</name><operator pos:start="7:17" pos:end="7:17">.</operator><name pos:start="7:18" pos:end="7:22">error</name></name> <operator pos:start="7:24" pos:end="7:25">!=</operator> <operator pos:start="7:27" pos:end="7:27">-</operator><name pos:start="7:28" pos:end="7:38">EINPROGRESS</name></expr>)</condition> <block pos:start="7:41" pos:end="17:5">{<block_content pos:start="9:9" pos:end="15:34">

        <decl_stmt pos:start="9:9" pos:end="9:46"><decl pos:start="9:9" pos:end="9:45"><type pos:start="9:9" pos:end="9:26"><name pos:start="9:9" pos:end="9:24">BlockDriverState</name> <modifier pos:start="9:26" pos:end="9:26">*</modifier></type><name pos:start="9:27" pos:end="9:28">bs</name> <init pos:start="9:30" pos:end="9:45">= <expr pos:start="9:32" pos:end="9:45"><name pos:start="9:32" pos:end="9:45"><name pos:start="9:32" pos:end="9:34">acb</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:42">common</name><operator pos:start="9:43" pos:end="9:43">.</operator><name pos:start="9:44" pos:end="9:45">bs</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="13:9" pos:end="13:75"><expr pos:start="13:9" pos:end="13:74"><name pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:11">acb</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:15">bh</name></name> <operator pos:start="13:17" pos:end="13:17">=</operator> <call pos:start="13:19" pos:end="13:74"><name pos:start="13:19" pos:end="13:28">aio_bh_new</name><argument_list pos:start="13:29" pos:end="13:74">(<argument pos:start="13:30" pos:end="13:53"><expr pos:start="13:30" pos:end="13:53"><call pos:start="13:30" pos:end="13:53"><name pos:start="13:30" pos:end="13:49">bdrv_get_aio_context</name><argument_list pos:start="13:50" pos:end="13:53">(<argument pos:start="13:51" pos:end="13:52"><expr pos:start="13:51" pos:end="13:52"><name pos:start="13:51" pos:end="13:52">bs</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="13:56" pos:end="13:68"><expr pos:start="13:56" pos:end="13:68"><name pos:start="13:56" pos:end="13:68">bdrv_co_em_bh</name></expr></argument>, <argument pos:start="13:71" pos:end="13:73"><expr pos:start="13:71" pos:end="13:73"><name pos:start="13:71" pos:end="13:73">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:34"><expr pos:start="15:9" pos:end="15:33"><call pos:start="15:9" pos:end="15:33"><name pos:start="15:9" pos:end="15:24">qemu_bh_schedule</name><argument_list pos:start="15:25" pos:end="15:33">(<argument pos:start="15:26" pos:end="15:32"><expr pos:start="15:26" pos:end="15:32"><name pos:start="15:26" pos:end="15:32"><name pos:start="15:26" pos:end="15:28">acb</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:32">bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
