<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12366.c" pos:tabs="8"><function pos:start="1:1" pos:end="269:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:8">QemuOpts</name> <modifier pos:start="1:10" pos:end="1:10">*</modifier></type><name pos:start="1:11" pos:end="1:31">qemu_chr_parse_compat</name><parameter_list pos:start="1:32" pos:end="1:72">(<parameter pos:start="1:33" pos:end="1:49"><decl pos:start="1:33" pos:end="1:49"><type pos:start="1:33" pos:end="1:49"><specifier pos:start="1:33" pos:end="1:37">const</specifier> <name pos:start="1:39" pos:end="1:42">char</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">label</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:71"><decl pos:start="1:52" pos:end="1:71"><type pos:start="1:52" pos:end="1:71"><specifier pos:start="1:52" pos:end="1:56">const</specifier> <name pos:start="1:58" pos:end="1:61">char</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:71">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="269:1">{<block_content pos:start="5:5" pos:end="267:16">

    <decl_stmt pos:start="5:5" pos:end="5:49"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:17"><name pos:start="5:10" pos:end="5:13">host</name><index pos:start="5:14" pos:end="5:17">[<expr pos:start="5:15" pos:end="5:16"><literal type="number" pos:start="5:15" pos:end="5:16">65</literal></expr>]</index></name></decl>, <decl pos:start="5:20" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:8"/><name pos:start="5:20" pos:end="5:27"><name pos:start="5:20" pos:end="5:23">port</name><index pos:start="5:24" pos:end="5:27">[<expr pos:start="5:25" pos:end="5:26"><literal type="number" pos:start="5:25" pos:end="5:26">33</literal></expr>]</index></name></decl>, <decl pos:start="5:30" pos:end="5:37"><type ref="prev" pos:start="5:5" pos:end="5:8"/><name pos:start="5:30" pos:end="5:37"><name pos:start="5:30" pos:end="5:34">width</name><index pos:start="5:35" pos:end="5:37">[<expr pos:start="5:36" pos:end="5:36"><literal type="number" pos:start="5:36" pos:end="5:36">8</literal></expr>]</index></name></decl>, <decl pos:start="5:40" pos:end="5:48"><type ref="prev" pos:start="5:5" pos:end="5:8"/><name pos:start="5:40" pos:end="5:48"><name pos:start="5:40" pos:end="5:45">height</name><index pos:start="5:46" pos:end="5:48">[<expr pos:start="5:47" pos:end="5:47"><literal type="number" pos:start="5:47" pos:end="5:47">8</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:17">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">QemuOpts</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">Error</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:20">local_err</name> <init pos:start="13:22" pos:end="13:27">= <expr pos:start="13:24" pos:end="13:27"><name pos:start="13:24" pos:end="13:27">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:77"><expr pos:start="17:5" pos:end="17:76"><name pos:start="17:5" pos:end="17:8">opts</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:76"><name pos:start="17:12" pos:end="17:27">qemu_opts_create</name><argument_list pos:start="17:28" pos:end="17:76">(<argument pos:start="17:29" pos:end="17:53"><expr pos:start="17:29" pos:end="17:53"><call pos:start="17:29" pos:end="17:53"><name pos:start="17:29" pos:end="17:42">qemu_find_opts</name><argument_list pos:start="17:43" pos:end="17:53">(<argument pos:start="17:44" pos:end="17:52"><expr pos:start="17:44" pos:end="17:52"><literal type="string" pos:start="17:44" pos:end="17:52">"chardev"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="17:56" pos:end="17:60"><expr pos:start="17:56" pos:end="17:60"><name pos:start="17:56" pos:end="17:60">label</name></expr></argument>, <argument pos:start="17:63" pos:end="17:63"><expr pos:start="17:63" pos:end="17:63"><literal type="number" pos:start="17:63" pos:end="17:63">1</literal></expr></argument>, <argument pos:start="17:66" pos:end="17:75"><expr pos:start="17:66" pos:end="17:75"><operator pos:start="17:66" pos:end="17:66">&amp;</operator><name pos:start="17:67" pos:end="17:75">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:18">(<expr pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:17">local_err</name></expr>)</condition> <block pos:start="19:20" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:20">

        <expr_stmt pos:start="21:9" pos:end="21:36"><expr pos:start="21:9" pos:end="21:35"><call pos:start="21:9" pos:end="21:35"><name pos:start="21:9" pos:end="21:24">error_report_err</name><argument_list pos:start="21:25" pos:end="21:35">(<argument pos:start="21:26" pos:end="21:34"><expr pos:start="21:26" pos:end="21:34"><name pos:start="21:26" pos:end="21:34">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:20">return <expr pos:start="23:16" pos:end="23:19"><name pos:start="23:16" pos:end="23:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="51:5"><if pos:start="29:5" pos:end="51:5">if <condition pos:start="29:8" pos:end="29:39">(<expr pos:start="29:9" pos:end="29:38"><call pos:start="29:9" pos:end="29:38"><name pos:start="29:9" pos:end="29:16">strstart</name><argument_list pos:start="29:17" pos:end="29:38">(<argument pos:start="29:18" pos:end="29:25"><expr pos:start="29:18" pos:end="29:25"><name pos:start="29:18" pos:end="29:25">filename</name></expr></argument>, <argument pos:start="29:28" pos:end="29:33"><expr pos:start="29:28" pos:end="29:33"><literal type="string" pos:start="29:28" pos:end="29:33">"mon:"</literal></expr></argument>, <argument pos:start="29:36" pos:end="29:37"><expr pos:start="29:36" pos:end="29:37"><operator pos:start="29:36" pos:end="29:36">&amp;</operator><name pos:start="29:37" pos:end="29:37">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:41" pos:end="51:5">{<block_content pos:start="31:9" pos:end="49:9">

        <expr_stmt pos:start="31:9" pos:end="31:21"><expr pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:16">filename</name> <operator pos:start="31:18" pos:end="31:18">=</operator> <name pos:start="31:20" pos:end="31:20">p</name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:54"><expr pos:start="33:9" pos:end="33:53"><call pos:start="33:9" pos:end="33:53"><name pos:start="33:9" pos:end="33:20">qemu_opt_set</name><argument_list pos:start="33:21" pos:end="33:53">(<argument pos:start="33:22" pos:end="33:25"><expr pos:start="33:22" pos:end="33:25"><name pos:start="33:22" pos:end="33:25">opts</name></expr></argument>, <argument pos:start="33:28" pos:end="33:32"><expr pos:start="33:28" pos:end="33:32"><literal type="string" pos:start="33:28" pos:end="33:32">"mux"</literal></expr></argument>, <argument pos:start="33:35" pos:end="33:38"><expr pos:start="33:35" pos:end="33:38"><literal type="string" pos:start="33:35" pos:end="33:38">"on"</literal></expr></argument>, <argument pos:start="33:41" pos:end="33:52"><expr pos:start="33:41" pos:end="33:52"><operator pos:start="33:41" pos:end="33:41">&amp;</operator><name pos:start="33:42" pos:end="33:52">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="49:9"><if pos:start="35:9" pos:end="49:9">if <condition pos:start="35:12" pos:end="35:43">(<expr pos:start="35:13" pos:end="35:42"><call pos:start="35:13" pos:end="35:37"><name pos:start="35:13" pos:end="35:18">strcmp</name><argument_list pos:start="35:19" pos:end="35:37">(<argument pos:start="35:20" pos:end="35:27"><expr pos:start="35:20" pos:end="35:27"><name pos:start="35:20" pos:end="35:27">filename</name></expr></argument>, <argument pos:start="35:30" pos:end="35:36"><expr pos:start="35:30" pos:end="35:36"><literal type="string" pos:start="35:30" pos:end="35:36">"stdio"</literal></expr></argument>)</argument_list></call> <operator pos:start="35:39" pos:end="35:40">==</operator> <literal type="number" pos:start="35:42" pos:end="35:42">0</literal></expr>)</condition> <block pos:start="35:45" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:62">

            <comment type="block" pos:start="37:13" pos:end="45:64">/* Monitor is muxed to stdio: do not exit on Ctrl+C by default

             * but pass it to the guest.  Handle this only for compat syntax,

             * for -chardev syntax we have special option for this.

             * This is what -nographic did, redirecting+muxing serial+monitor

             * to stdio causing Ctrl+C to be passed to guest. */</comment>

            <expr_stmt pos:start="47:13" pos:end="47:62"><expr pos:start="47:13" pos:end="47:61"><call pos:start="47:13" pos:end="47:61"><name pos:start="47:13" pos:end="47:24">qemu_opt_set</name><argument_list pos:start="47:25" pos:end="47:61">(<argument pos:start="47:26" pos:end="47:29"><expr pos:start="47:26" pos:end="47:29"><name pos:start="47:26" pos:end="47:29">opts</name></expr></argument>, <argument pos:start="47:32" pos:end="47:39"><expr pos:start="47:32" pos:end="47:39"><literal type="string" pos:start="47:32" pos:end="47:39">"signal"</literal></expr></argument>, <argument pos:start="47:42" pos:end="47:46"><expr pos:start="47:42" pos:end="47:46"><literal type="string" pos:start="47:42" pos:end="47:46">"off"</literal></expr></argument>, <argument pos:start="47:49" pos:end="47:60"><expr pos:start="47:49" pos:end="47:60"><operator pos:start="47:49" pos:end="47:49">&amp;</operator><name pos:start="47:50" pos:end="47:60">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="71:5"><if pos:start="55:5" pos:end="71:5">if <condition pos:start="55:8" pos:end="65:41">(<expr pos:start="55:9" pos:end="65:40"><call pos:start="55:9" pos:end="55:32"><name pos:start="55:9" pos:end="55:14">strcmp</name><argument_list pos:start="55:15" pos:end="55:32">(<argument pos:start="55:16" pos:end="55:23"><expr pos:start="55:16" pos:end="55:23"><name pos:start="55:16" pos:end="55:23">filename</name></expr></argument>, <argument pos:start="55:26" pos:end="55:31"><expr pos:start="55:26" pos:end="55:31"><literal type="string" pos:start="55:26" pos:end="55:31">"null"</literal></expr></argument>)</argument_list></call>    <operator pos:start="55:37" pos:end="55:38">==</operator> <literal type="number" pos:start="55:40" pos:end="55:40">0</literal> <operator pos:start="55:42" pos:end="55:43">||</operator>

        <call pos:start="57:9" pos:end="57:31"><name pos:start="57:9" pos:end="57:14">strcmp</name><argument_list pos:start="57:15" pos:end="57:31">(<argument pos:start="57:16" pos:end="57:23"><expr pos:start="57:16" pos:end="57:23"><name pos:start="57:16" pos:end="57:23">filename</name></expr></argument>, <argument pos:start="57:26" pos:end="57:30"><expr pos:start="57:26" pos:end="57:30"><literal type="string" pos:start="57:26" pos:end="57:30">"pty"</literal></expr></argument>)</argument_list></call>     <operator pos:start="57:37" pos:end="57:38">==</operator> <literal type="number" pos:start="57:40" pos:end="57:40">0</literal> <operator pos:start="57:42" pos:end="57:43">||</operator>

        <call pos:start="59:9" pos:end="59:35"><name pos:start="59:9" pos:end="59:14">strcmp</name><argument_list pos:start="59:15" pos:end="59:35">(<argument pos:start="59:16" pos:end="59:23"><expr pos:start="59:16" pos:end="59:23"><name pos:start="59:16" pos:end="59:23">filename</name></expr></argument>, <argument pos:start="59:26" pos:end="59:34"><expr pos:start="59:26" pos:end="59:34"><literal type="string" pos:start="59:26" pos:end="59:34">"msmouse"</literal></expr></argument>)</argument_list></call> <operator pos:start="59:37" pos:end="59:38">==</operator> <literal type="number" pos:start="59:40" pos:end="59:40">0</literal> <operator pos:start="59:42" pos:end="59:43">||</operator>

        <call pos:start="61:9" pos:end="61:35"><name pos:start="61:9" pos:end="61:14">strcmp</name><argument_list pos:start="61:15" pos:end="61:35">(<argument pos:start="61:16" pos:end="61:23"><expr pos:start="61:16" pos:end="61:23"><name pos:start="61:16" pos:end="61:23">filename</name></expr></argument>, <argument pos:start="61:26" pos:end="61:34"><expr pos:start="61:26" pos:end="61:34"><literal type="string" pos:start="61:26" pos:end="61:34">"braille"</literal></expr></argument>)</argument_list></call> <operator pos:start="61:37" pos:end="61:38">==</operator> <literal type="number" pos:start="61:40" pos:end="61:40">0</literal> <operator pos:start="61:42" pos:end="61:43">||</operator>

        <call pos:start="63:9" pos:end="63:35"><name pos:start="63:9" pos:end="63:14">strcmp</name><argument_list pos:start="63:15" pos:end="63:35">(<argument pos:start="63:16" pos:end="63:23"><expr pos:start="63:16" pos:end="63:23"><name pos:start="63:16" pos:end="63:23">filename</name></expr></argument>, <argument pos:start="63:26" pos:end="63:34"><expr pos:start="63:26" pos:end="63:34"><literal type="string" pos:start="63:26" pos:end="63:34">"testdev"</literal></expr></argument>)</argument_list></call> <operator pos:start="63:37" pos:end="63:38">==</operator> <literal type="number" pos:start="63:40" pos:end="63:40">0</literal> <operator pos:start="63:42" pos:end="63:43">||</operator>

        <call pos:start="65:9" pos:end="65:33"><name pos:start="65:9" pos:end="65:14">strcmp</name><argument_list pos:start="65:15" pos:end="65:33">(<argument pos:start="65:16" pos:end="65:23"><expr pos:start="65:16" pos:end="65:23"><name pos:start="65:16" pos:end="65:23">filename</name></expr></argument>, <argument pos:start="65:26" pos:end="65:32"><expr pos:start="65:26" pos:end="65:32"><literal type="string" pos:start="65:26" pos:end="65:32">"stdio"</literal></expr></argument>)</argument_list></call>   <operator pos:start="65:37" pos:end="65:38">==</operator> <literal type="number" pos:start="65:40" pos:end="65:40">0</literal></expr>)</condition> <block pos:start="65:43" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:20">

        <expr_stmt pos:start="67:9" pos:end="67:62"><expr pos:start="67:9" pos:end="67:61"><call pos:start="67:9" pos:end="67:61"><name pos:start="67:9" pos:end="67:20">qemu_opt_set</name><argument_list pos:start="67:21" pos:end="67:61">(<argument pos:start="67:22" pos:end="67:25"><expr pos:start="67:22" pos:end="67:25"><name pos:start="67:22" pos:end="67:25">opts</name></expr></argument>, <argument pos:start="67:28" pos:end="67:36"><expr pos:start="67:28" pos:end="67:36"><literal type="string" pos:start="67:28" pos:end="67:36">"backend"</literal></expr></argument>, <argument pos:start="67:39" pos:end="67:46"><expr pos:start="67:39" pos:end="67:46"><name pos:start="67:39" pos:end="67:46">filename</name></expr></argument>, <argument pos:start="67:49" pos:end="67:60"><expr pos:start="67:49" pos:end="67:60"><operator pos:start="67:49" pos:end="67:49">&amp;</operator><name pos:start="67:50" pos:end="67:60">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:20">return <expr pos:start="69:16" pos:end="69:19"><name pos:start="69:16" pos:end="69:19">opts</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="73:5" pos:end="105:5"><if pos:start="73:5" pos:end="105:5">if <condition pos:start="73:8" pos:end="73:37">(<expr pos:start="73:9" pos:end="73:36"><call pos:start="73:9" pos:end="73:36"><name pos:start="73:9" pos:end="73:16">strstart</name><argument_list pos:start="73:17" pos:end="73:36">(<argument pos:start="73:18" pos:end="73:25"><expr pos:start="73:18" pos:end="73:25"><name pos:start="73:18" pos:end="73:25">filename</name></expr></argument>, <argument pos:start="73:28" pos:end="73:31"><expr pos:start="73:28" pos:end="73:31"><literal type="string" pos:start="73:28" pos:end="73:31">"vc"</literal></expr></argument>, <argument pos:start="73:34" pos:end="73:35"><expr pos:start="73:34" pos:end="73:35"><operator pos:start="73:34" pos:end="73:34">&amp;</operator><name pos:start="73:35" pos:end="73:35">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:39" pos:end="105:5">{<block_content pos:start="75:9" pos:end="103:20">

        <expr_stmt pos:start="75:9" pos:end="75:58"><expr pos:start="75:9" pos:end="75:57"><call pos:start="75:9" pos:end="75:57"><name pos:start="75:9" pos:end="75:20">qemu_opt_set</name><argument_list pos:start="75:21" pos:end="75:57">(<argument pos:start="75:22" pos:end="75:25"><expr pos:start="75:22" pos:end="75:25"><name pos:start="75:22" pos:end="75:25">opts</name></expr></argument>, <argument pos:start="75:28" pos:end="75:36"><expr pos:start="75:28" pos:end="75:36"><literal type="string" pos:start="75:28" pos:end="75:36">"backend"</literal></expr></argument>, <argument pos:start="75:39" pos:end="75:42"><expr pos:start="75:39" pos:end="75:42"><literal type="string" pos:start="75:39" pos:end="75:42">"vc"</literal></expr></argument>, <argument pos:start="75:45" pos:end="75:56"><expr pos:start="75:45" pos:end="75:56"><operator pos:start="75:45" pos:end="75:45">&amp;</operator><name pos:start="75:46" pos:end="75:56">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="101:9"><if pos:start="77:9" pos:end="101:9">if <condition pos:start="77:12" pos:end="77:22">(<expr pos:start="77:13" pos:end="77:21"><operator pos:start="77:13" pos:end="77:13">*</operator><name pos:start="77:14" pos:end="77:14">p</name> <operator pos:start="77:16" pos:end="77:17">==</operator> <literal type="char" pos:start="77:19" pos:end="77:21">':'</literal></expr>)</condition> <block pos:start="77:24" pos:end="101:9">{<block_content pos:start="79:13" pos:end="99:13">

            <if_stmt pos:start="79:13" pos:end="99:13"><if pos:start="79:13" pos:end="87:13">if <condition pos:start="79:16" pos:end="79:67">(<expr pos:start="79:17" pos:end="79:66"><call pos:start="79:17" pos:end="79:61"><name pos:start="79:17" pos:end="79:22">sscanf</name><argument_list pos:start="79:23" pos:end="79:61">(<argument pos:start="79:24" pos:end="79:26"><expr pos:start="79:24" pos:end="79:26"><name pos:start="79:24" pos:end="79:24">p</name><operator pos:start="79:25" pos:end="79:25">+</operator><literal type="number" pos:start="79:26" pos:end="79:26">1</literal></expr></argument>, <argument pos:start="79:29" pos:end="79:45"><expr pos:start="79:29" pos:end="79:45"><literal type="string" pos:start="79:29" pos:end="79:45">"%7[0-9]x%7[0-9]"</literal></expr></argument>, <argument pos:start="79:48" pos:end="79:52"><expr pos:start="79:48" pos:end="79:52"><name pos:start="79:48" pos:end="79:52">width</name></expr></argument>, <argument pos:start="79:55" pos:end="79:60"><expr pos:start="79:55" pos:end="79:60"><name pos:start="79:55" pos:end="79:60">height</name></expr></argument>)</argument_list></call> <operator pos:start="79:63" pos:end="79:64">==</operator> <literal type="number" pos:start="79:66" pos:end="79:66">2</literal></expr>)</condition> <block pos:start="79:69" pos:end="87:13">{<block_content pos:start="83:17" pos:end="85:67">

                <comment type="block" pos:start="81:17" pos:end="81:28">/* pixels */</comment>

                <expr_stmt pos:start="83:17" pos:end="83:65"><expr pos:start="83:17" pos:end="83:64"><call pos:start="83:17" pos:end="83:64"><name pos:start="83:17" pos:end="83:28">qemu_opt_set</name><argument_list pos:start="83:29" pos:end="83:64">(<argument pos:start="83:30" pos:end="83:33"><expr pos:start="83:30" pos:end="83:33"><name pos:start="83:30" pos:end="83:33">opts</name></expr></argument>, <argument pos:start="83:36" pos:end="83:42"><expr pos:start="83:36" pos:end="83:42"><literal type="string" pos:start="83:36" pos:end="83:42">"width"</literal></expr></argument>, <argument pos:start="83:45" pos:end="83:49"><expr pos:start="83:45" pos:end="83:49"><name pos:start="83:45" pos:end="83:49">width</name></expr></argument>, <argument pos:start="83:52" pos:end="83:63"><expr pos:start="83:52" pos:end="83:63"><operator pos:start="83:52" pos:end="83:52">&amp;</operator><name pos:start="83:53" pos:end="83:63">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:67"><expr pos:start="85:17" pos:end="85:66"><call pos:start="85:17" pos:end="85:66"><name pos:start="85:17" pos:end="85:28">qemu_opt_set</name><argument_list pos:start="85:29" pos:end="85:66">(<argument pos:start="85:30" pos:end="85:33"><expr pos:start="85:30" pos:end="85:33"><name pos:start="85:30" pos:end="85:33">opts</name></expr></argument>, <argument pos:start="85:36" pos:end="85:43"><expr pos:start="85:36" pos:end="85:43"><literal type="string" pos:start="85:36" pos:end="85:43">"height"</literal></expr></argument>, <argument pos:start="85:46" pos:end="85:51"><expr pos:start="85:46" pos:end="85:51"><name pos:start="85:46" pos:end="85:51">height</name></expr></argument>, <argument pos:start="85:54" pos:end="85:65"><expr pos:start="85:54" pos:end="85:65"><operator pos:start="85:54" pos:end="85:54">&amp;</operator><name pos:start="85:55" pos:end="85:65">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="87:15" pos:end="95:13">else if <condition pos:start="87:23" pos:end="87:76">(<expr pos:start="87:24" pos:end="87:75"><call pos:start="87:24" pos:end="87:70"><name pos:start="87:24" pos:end="87:29">sscanf</name><argument_list pos:start="87:30" pos:end="87:70">(<argument pos:start="87:31" pos:end="87:33"><expr pos:start="87:31" pos:end="87:33"><name pos:start="87:31" pos:end="87:31">p</name><operator pos:start="87:32" pos:end="87:32">+</operator><literal type="number" pos:start="87:33" pos:end="87:33">1</literal></expr></argument>, <argument pos:start="87:36" pos:end="87:54"><expr pos:start="87:36" pos:end="87:54"><literal type="string" pos:start="87:36" pos:end="87:54">"%7[0-9]Cx%7[0-9]C"</literal></expr></argument>, <argument pos:start="87:57" pos:end="87:61"><expr pos:start="87:57" pos:end="87:61"><name pos:start="87:57" pos:end="87:61">width</name></expr></argument>, <argument pos:start="87:64" pos:end="87:69"><expr pos:start="87:64" pos:end="87:69"><name pos:start="87:64" pos:end="87:69">height</name></expr></argument>)</argument_list></call> <operator pos:start="87:72" pos:end="87:73">==</operator> <literal type="number" pos:start="87:75" pos:end="87:75">2</literal></expr>)</condition> <block pos:start="87:78" pos:end="95:13">{<block_content pos:start="91:17" pos:end="93:65">

                <comment type="block" pos:start="89:17" pos:end="89:27">/* chars */</comment>

                <expr_stmt pos:start="91:17" pos:end="91:64"><expr pos:start="91:17" pos:end="91:63"><call pos:start="91:17" pos:end="91:63"><name pos:start="91:17" pos:end="91:28">qemu_opt_set</name><argument_list pos:start="91:29" pos:end="91:63">(<argument pos:start="91:30" pos:end="91:33"><expr pos:start="91:30" pos:end="91:33"><name pos:start="91:30" pos:end="91:33">opts</name></expr></argument>, <argument pos:start="91:36" pos:end="91:41"><expr pos:start="91:36" pos:end="91:41"><literal type="string" pos:start="91:36" pos:end="91:41">"cols"</literal></expr></argument>, <argument pos:start="91:44" pos:end="91:48"><expr pos:start="91:44" pos:end="91:48"><name pos:start="91:44" pos:end="91:48">width</name></expr></argument>, <argument pos:start="91:51" pos:end="91:62"><expr pos:start="91:51" pos:end="91:62"><operator pos:start="91:51" pos:end="91:51">&amp;</operator><name pos:start="91:52" pos:end="91:62">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:65"><expr pos:start="93:17" pos:end="93:64"><call pos:start="93:17" pos:end="93:64"><name pos:start="93:17" pos:end="93:28">qemu_opt_set</name><argument_list pos:start="93:29" pos:end="93:64">(<argument pos:start="93:30" pos:end="93:33"><expr pos:start="93:30" pos:end="93:33"><name pos:start="93:30" pos:end="93:33">opts</name></expr></argument>, <argument pos:start="93:36" pos:end="93:41"><expr pos:start="93:36" pos:end="93:41"><literal type="string" pos:start="93:36" pos:end="93:41">"rows"</literal></expr></argument>, <argument pos:start="93:44" pos:end="93:49"><expr pos:start="93:44" pos:end="93:49"><name pos:start="93:44" pos:end="93:49">height</name></expr></argument>, <argument pos:start="93:52" pos:end="93:63"><expr pos:start="93:52" pos:end="93:63"><operator pos:start="93:52" pos:end="93:52">&amp;</operator><name pos:start="93:53" pos:end="93:63">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="95:15" pos:end="99:13">else <block pos:start="95:20" pos:end="99:13">{<block_content pos:start="97:17" pos:end="97:26">

                <goto pos:start="97:17" pos:end="97:26">goto <name pos:start="97:22" pos:end="97:25">fail</name>;</goto>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="103:9" pos:end="103:20">return <expr pos:start="103:16" pos:end="103:19"><name pos:start="103:16" pos:end="103:19">opts</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="107:5" pos:end="113:5"><if pos:start="107:5" pos:end="113:5">if <condition pos:start="107:8" pos:end="107:38">(<expr pos:start="107:9" pos:end="107:37"><call pos:start="107:9" pos:end="107:32"><name pos:start="107:9" pos:end="107:14">strcmp</name><argument_list pos:start="107:15" pos:end="107:32">(<argument pos:start="107:16" pos:end="107:23"><expr pos:start="107:16" pos:end="107:23"><name pos:start="107:16" pos:end="107:23">filename</name></expr></argument>, <argument pos:start="107:26" pos:end="107:31"><expr pos:start="107:26" pos:end="107:31"><literal type="string" pos:start="107:26" pos:end="107:31">"con:"</literal></expr></argument>)</argument_list></call> <operator pos:start="107:34" pos:end="107:35">==</operator> <literal type="number" pos:start="107:37" pos:end="107:37">0</literal></expr>)</condition> <block pos:start="107:40" pos:end="113:5">{<block_content pos:start="109:9" pos:end="111:20">

        <expr_stmt pos:start="109:9" pos:end="109:63"><expr pos:start="109:9" pos:end="109:62"><call pos:start="109:9" pos:end="109:62"><name pos:start="109:9" pos:end="109:20">qemu_opt_set</name><argument_list pos:start="109:21" pos:end="109:62">(<argument pos:start="109:22" pos:end="109:25"><expr pos:start="109:22" pos:end="109:25"><name pos:start="109:22" pos:end="109:25">opts</name></expr></argument>, <argument pos:start="109:28" pos:end="109:36"><expr pos:start="109:28" pos:end="109:36"><literal type="string" pos:start="109:28" pos:end="109:36">"backend"</literal></expr></argument>, <argument pos:start="109:39" pos:end="109:47"><expr pos:start="109:39" pos:end="109:47"><literal type="string" pos:start="109:39" pos:end="109:47">"console"</literal></expr></argument>, <argument pos:start="109:50" pos:end="109:61"><expr pos:start="109:50" pos:end="109:61"><operator pos:start="109:50" pos:end="109:50">&amp;</operator><name pos:start="109:51" pos:end="109:61">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="111:9" pos:end="111:20">return <expr pos:start="111:16" pos:end="111:19"><name pos:start="111:16" pos:end="111:19">opts</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="115:5" pos:end="123:5"><if pos:start="115:5" pos:end="123:5">if <condition pos:start="115:8" pos:end="115:40">(<expr pos:start="115:9" pos:end="115:39"><call pos:start="115:9" pos:end="115:39"><name pos:start="115:9" pos:end="115:16">strstart</name><argument_list pos:start="115:17" pos:end="115:39">(<argument pos:start="115:18" pos:end="115:25"><expr pos:start="115:18" pos:end="115:25"><name pos:start="115:18" pos:end="115:25">filename</name></expr></argument>, <argument pos:start="115:28" pos:end="115:32"><expr pos:start="115:28" pos:end="115:32"><literal type="string" pos:start="115:28" pos:end="115:32">"COM"</literal></expr></argument>, <argument pos:start="115:35" pos:end="115:38"><expr pos:start="115:35" pos:end="115:38"><name pos:start="115:35" pos:end="115:38">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="115:42" pos:end="123:5">{<block_content pos:start="117:9" pos:end="121:20">

        <expr_stmt pos:start="117:9" pos:end="117:62"><expr pos:start="117:9" pos:end="117:61"><call pos:start="117:9" pos:end="117:61"><name pos:start="117:9" pos:end="117:20">qemu_opt_set</name><argument_list pos:start="117:21" pos:end="117:61">(<argument pos:start="117:22" pos:end="117:25"><expr pos:start="117:22" pos:end="117:25"><name pos:start="117:22" pos:end="117:25">opts</name></expr></argument>, <argument pos:start="117:28" pos:end="117:36"><expr pos:start="117:28" pos:end="117:36"><literal type="string" pos:start="117:28" pos:end="117:36">"backend"</literal></expr></argument>, <argument pos:start="117:39" pos:end="117:46"><expr pos:start="117:39" pos:end="117:46"><literal type="string" pos:start="117:39" pos:end="117:46">"serial"</literal></expr></argument>, <argument pos:start="117:49" pos:end="117:60"><expr pos:start="117:49" pos:end="117:60"><operator pos:start="117:49" pos:end="117:49">&amp;</operator><name pos:start="117:50" pos:end="117:60">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:59"><expr pos:start="119:9" pos:end="119:58"><call pos:start="119:9" pos:end="119:58"><name pos:start="119:9" pos:end="119:20">qemu_opt_set</name><argument_list pos:start="119:21" pos:end="119:58">(<argument pos:start="119:22" pos:end="119:25"><expr pos:start="119:22" pos:end="119:25"><name pos:start="119:22" pos:end="119:25">opts</name></expr></argument>, <argument pos:start="119:28" pos:end="119:33"><expr pos:start="119:28" pos:end="119:33"><literal type="string" pos:start="119:28" pos:end="119:33">"path"</literal></expr></argument>, <argument pos:start="119:36" pos:end="119:43"><expr pos:start="119:36" pos:end="119:43"><name pos:start="119:36" pos:end="119:43">filename</name></expr></argument>, <argument pos:start="119:46" pos:end="119:57"><expr pos:start="119:46" pos:end="119:57"><operator pos:start="119:46" pos:end="119:46">&amp;</operator><name pos:start="119:47" pos:end="119:57">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="121:9" pos:end="121:20">return <expr pos:start="121:16" pos:end="121:19"><name pos:start="121:16" pos:end="121:19">opts</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="125:5" pos:end="133:5"><if pos:start="125:5" pos:end="133:5">if <condition pos:start="125:8" pos:end="125:40">(<expr pos:start="125:9" pos:end="125:39"><call pos:start="125:9" pos:end="125:39"><name pos:start="125:9" pos:end="125:16">strstart</name><argument_list pos:start="125:17" pos:end="125:39">(<argument pos:start="125:18" pos:end="125:25"><expr pos:start="125:18" pos:end="125:25"><name pos:start="125:18" pos:end="125:25">filename</name></expr></argument>, <argument pos:start="125:28" pos:end="125:34"><expr pos:start="125:28" pos:end="125:34"><literal type="string" pos:start="125:28" pos:end="125:34">"file:"</literal></expr></argument>, <argument pos:start="125:37" pos:end="125:38"><expr pos:start="125:37" pos:end="125:38"><operator pos:start="125:37" pos:end="125:37">&amp;</operator><name pos:start="125:38" pos:end="125:38">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="125:42" pos:end="133:5">{<block_content pos:start="127:9" pos:end="131:20">

        <expr_stmt pos:start="127:9" pos:end="127:60"><expr pos:start="127:9" pos:end="127:59"><call pos:start="127:9" pos:end="127:59"><name pos:start="127:9" pos:end="127:20">qemu_opt_set</name><argument_list pos:start="127:21" pos:end="127:59">(<argument pos:start="127:22" pos:end="127:25"><expr pos:start="127:22" pos:end="127:25"><name pos:start="127:22" pos:end="127:25">opts</name></expr></argument>, <argument pos:start="127:28" pos:end="127:36"><expr pos:start="127:28" pos:end="127:36"><literal type="string" pos:start="127:28" pos:end="127:36">"backend"</literal></expr></argument>, <argument pos:start="127:39" pos:end="127:44"><expr pos:start="127:39" pos:end="127:44"><literal type="string" pos:start="127:39" pos:end="127:44">"file"</literal></expr></argument>, <argument pos:start="127:47" pos:end="127:58"><expr pos:start="127:47" pos:end="127:58"><operator pos:start="127:47" pos:end="127:47">&amp;</operator><name pos:start="127:48" pos:end="127:58">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:52"><expr pos:start="129:9" pos:end="129:51"><call pos:start="129:9" pos:end="129:51"><name pos:start="129:9" pos:end="129:20">qemu_opt_set</name><argument_list pos:start="129:21" pos:end="129:51">(<argument pos:start="129:22" pos:end="129:25"><expr pos:start="129:22" pos:end="129:25"><name pos:start="129:22" pos:end="129:25">opts</name></expr></argument>, <argument pos:start="129:28" pos:end="129:33"><expr pos:start="129:28" pos:end="129:33"><literal type="string" pos:start="129:28" pos:end="129:33">"path"</literal></expr></argument>, <argument pos:start="129:36" pos:end="129:36"><expr pos:start="129:36" pos:end="129:36"><name pos:start="129:36" pos:end="129:36">p</name></expr></argument>, <argument pos:start="129:39" pos:end="129:50"><expr pos:start="129:39" pos:end="129:50"><operator pos:start="129:39" pos:end="129:39">&amp;</operator><name pos:start="129:40" pos:end="129:50">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="131:9" pos:end="131:20">return <expr pos:start="131:16" pos:end="131:19"><name pos:start="131:16" pos:end="131:19">opts</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="135:5" pos:end="143:5"><if pos:start="135:5" pos:end="143:5">if <condition pos:start="135:8" pos:end="135:40">(<expr pos:start="135:9" pos:end="135:39"><call pos:start="135:9" pos:end="135:39"><name pos:start="135:9" pos:end="135:16">strstart</name><argument_list pos:start="135:17" pos:end="135:39">(<argument pos:start="135:18" pos:end="135:25"><expr pos:start="135:18" pos:end="135:25"><name pos:start="135:18" pos:end="135:25">filename</name></expr></argument>, <argument pos:start="135:28" pos:end="135:34"><expr pos:start="135:28" pos:end="135:34"><literal type="string" pos:start="135:28" pos:end="135:34">"pipe:"</literal></expr></argument>, <argument pos:start="135:37" pos:end="135:38"><expr pos:start="135:37" pos:end="135:38"><operator pos:start="135:37" pos:end="135:37">&amp;</operator><name pos:start="135:38" pos:end="135:38">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="135:42" pos:end="143:5">{<block_content pos:start="137:9" pos:end="141:20">

        <expr_stmt pos:start="137:9" pos:end="137:60"><expr pos:start="137:9" pos:end="137:59"><call pos:start="137:9" pos:end="137:59"><name pos:start="137:9" pos:end="137:20">qemu_opt_set</name><argument_list pos:start="137:21" pos:end="137:59">(<argument pos:start="137:22" pos:end="137:25"><expr pos:start="137:22" pos:end="137:25"><name pos:start="137:22" pos:end="137:25">opts</name></expr></argument>, <argument pos:start="137:28" pos:end="137:36"><expr pos:start="137:28" pos:end="137:36"><literal type="string" pos:start="137:28" pos:end="137:36">"backend"</literal></expr></argument>, <argument pos:start="137:39" pos:end="137:44"><expr pos:start="137:39" pos:end="137:44"><literal type="string" pos:start="137:39" pos:end="137:44">"pipe"</literal></expr></argument>, <argument pos:start="137:47" pos:end="137:58"><expr pos:start="137:47" pos:end="137:58"><operator pos:start="137:47" pos:end="137:47">&amp;</operator><name pos:start="137:48" pos:end="137:58">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:52"><expr pos:start="139:9" pos:end="139:51"><call pos:start="139:9" pos:end="139:51"><name pos:start="139:9" pos:end="139:20">qemu_opt_set</name><argument_list pos:start="139:21" pos:end="139:51">(<argument pos:start="139:22" pos:end="139:25"><expr pos:start="139:22" pos:end="139:25"><name pos:start="139:22" pos:end="139:25">opts</name></expr></argument>, <argument pos:start="139:28" pos:end="139:33"><expr pos:start="139:28" pos:end="139:33"><literal type="string" pos:start="139:28" pos:end="139:33">"path"</literal></expr></argument>, <argument pos:start="139:36" pos:end="139:36"><expr pos:start="139:36" pos:end="139:36"><name pos:start="139:36" pos:end="139:36">p</name></expr></argument>, <argument pos:start="139:39" pos:end="139:50"><expr pos:start="139:39" pos:end="139:50"><operator pos:start="139:39" pos:end="139:39">&amp;</operator><name pos:start="139:40" pos:end="139:50">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="141:9" pos:end="141:20">return <expr pos:start="141:16" pos:end="141:19"><name pos:start="141:16" pos:end="141:19">opts</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="145:5" pos:end="179:5"><if pos:start="145:5" pos:end="179:5">if <condition pos:start="145:8" pos:end="147:42">(<expr pos:start="145:9" pos:end="147:41"><call pos:start="145:9" pos:end="145:38"><name pos:start="145:9" pos:end="145:16">strstart</name><argument_list pos:start="145:17" pos:end="145:38">(<argument pos:start="145:18" pos:end="145:25"><expr pos:start="145:18" pos:end="145:25"><name pos:start="145:18" pos:end="145:25">filename</name></expr></argument>, <argument pos:start="145:28" pos:end="145:33"><expr pos:start="145:28" pos:end="145:33"><literal type="string" pos:start="145:28" pos:end="145:33">"tcp:"</literal></expr></argument>, <argument pos:start="145:36" pos:end="145:37"><expr pos:start="145:36" pos:end="145:37"><operator pos:start="145:36" pos:end="145:36">&amp;</operator><name pos:start="145:37" pos:end="145:37">p</name></expr></argument>)</argument_list></call> <operator pos:start="145:40" pos:end="145:41">||</operator>

        <call pos:start="147:9" pos:end="147:41"><name pos:start="147:9" pos:end="147:16">strstart</name><argument_list pos:start="147:17" pos:end="147:41">(<argument pos:start="147:18" pos:end="147:25"><expr pos:start="147:18" pos:end="147:25"><name pos:start="147:18" pos:end="147:25">filename</name></expr></argument>, <argument pos:start="147:28" pos:end="147:36"><expr pos:start="147:28" pos:end="147:36"><literal type="string" pos:start="147:28" pos:end="147:36">"telnet:"</literal></expr></argument>, <argument pos:start="147:39" pos:end="147:40"><expr pos:start="147:39" pos:end="147:40"><operator pos:start="147:39" pos:end="147:39">&amp;</operator><name pos:start="147:40" pos:end="147:40">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="147:44" pos:end="179:5">{<block_content pos:start="149:9" pos:end="177:20">

        <if_stmt pos:start="149:9" pos:end="157:9"><if pos:start="149:9" pos:end="157:9">if <condition pos:start="149:12" pos:end="149:65">(<expr pos:start="149:13" pos:end="149:64"><call pos:start="149:13" pos:end="149:60"><name pos:start="149:13" pos:end="149:18">sscanf</name><argument_list pos:start="149:19" pos:end="149:60">(<argument pos:start="149:20" pos:end="149:20"><expr pos:start="149:20" pos:end="149:20"><name pos:start="149:20" pos:end="149:20">p</name></expr></argument>, <argument pos:start="149:23" pos:end="149:41"><expr pos:start="149:23" pos:end="149:41"><literal type="string" pos:start="149:23" pos:end="149:41">"%64[^:]:%32[^,]%n"</literal></expr></argument>, <argument pos:start="149:44" pos:end="149:47"><expr pos:start="149:44" pos:end="149:47"><name pos:start="149:44" pos:end="149:47">host</name></expr></argument>, <argument pos:start="149:50" pos:end="149:53"><expr pos:start="149:50" pos:end="149:53"><name pos:start="149:50" pos:end="149:53">port</name></expr></argument>, <argument pos:start="149:56" pos:end="149:59"><expr pos:start="149:56" pos:end="149:59"><operator pos:start="149:56" pos:end="149:56">&amp;</operator><name pos:start="149:57" pos:end="149:59">pos</name></expr></argument>)</argument_list></call> <operator pos:start="149:62" pos:end="149:62">&lt;</operator> <literal type="number" pos:start="149:64" pos:end="149:64">2</literal></expr>)</condition> <block pos:start="149:67" pos:end="157:9">{<block_content pos:start="151:13" pos:end="155:26">

            <expr_stmt pos:start="151:13" pos:end="151:24"><expr pos:start="151:13" pos:end="151:23"><name pos:start="151:13" pos:end="151:19"><name pos:start="151:13" pos:end="151:16">host</name><index pos:start="151:17" pos:end="151:19">[<expr pos:start="151:18" pos:end="151:18"><literal type="number" pos:start="151:18" pos:end="151:18">0</literal></expr>]</index></name> <operator pos:start="151:21" pos:end="151:21">=</operator> <literal type="number" pos:start="151:23" pos:end="151:23">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="153:13" pos:end="155:26"><if pos:start="153:13" pos:end="155:26">if <condition pos:start="153:16" pos:end="153:56">(<expr pos:start="153:17" pos:end="153:55"><call pos:start="153:17" pos:end="153:51"><name pos:start="153:17" pos:end="153:22">sscanf</name><argument_list pos:start="153:23" pos:end="153:51">(<argument pos:start="153:24" pos:end="153:24"><expr pos:start="153:24" pos:end="153:24"><name pos:start="153:24" pos:end="153:24">p</name></expr></argument>, <argument pos:start="153:27" pos:end="153:38"><expr pos:start="153:27" pos:end="153:38"><literal type="string" pos:start="153:27" pos:end="153:38">":%32[^,]%n"</literal></expr></argument>, <argument pos:start="153:41" pos:end="153:44"><expr pos:start="153:41" pos:end="153:44"><name pos:start="153:41" pos:end="153:44">port</name></expr></argument>, <argument pos:start="153:47" pos:end="153:50"><expr pos:start="153:47" pos:end="153:50"><operator pos:start="153:47" pos:end="153:47">&amp;</operator><name pos:start="153:48" pos:end="153:50">pos</name></expr></argument>)</argument_list></call> <operator pos:start="153:53" pos:end="153:53">&lt;</operator> <literal type="number" pos:start="153:55" pos:end="153:55">1</literal></expr>)</condition><block type="pseudo" pos:start="155:17" pos:end="155:26"><block_content pos:start="155:17" pos:end="155:26">

                <goto pos:start="155:17" pos:end="155:26">goto <name pos:start="155:22" pos:end="155:25">fail</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:62"><expr pos:start="159:9" pos:end="159:61"><call pos:start="159:9" pos:end="159:61"><name pos:start="159:9" pos:end="159:20">qemu_opt_set</name><argument_list pos:start="159:21" pos:end="159:61">(<argument pos:start="159:22" pos:end="159:25"><expr pos:start="159:22" pos:end="159:25"><name pos:start="159:22" pos:end="159:25">opts</name></expr></argument>, <argument pos:start="159:28" pos:end="159:36"><expr pos:start="159:28" pos:end="159:36"><literal type="string" pos:start="159:28" pos:end="159:36">"backend"</literal></expr></argument>, <argument pos:start="159:39" pos:end="159:46"><expr pos:start="159:39" pos:end="159:46"><literal type="string" pos:start="159:39" pos:end="159:46">"socket"</literal></expr></argument>, <argument pos:start="159:49" pos:end="159:60"><expr pos:start="159:49" pos:end="159:60"><operator pos:start="159:49" pos:end="159:49">&amp;</operator><name pos:start="159:50" pos:end="159:60">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:55"><expr pos:start="161:9" pos:end="161:54"><call pos:start="161:9" pos:end="161:54"><name pos:start="161:9" pos:end="161:20">qemu_opt_set</name><argument_list pos:start="161:21" pos:end="161:54">(<argument pos:start="161:22" pos:end="161:25"><expr pos:start="161:22" pos:end="161:25"><name pos:start="161:22" pos:end="161:25">opts</name></expr></argument>, <argument pos:start="161:28" pos:end="161:33"><expr pos:start="161:28" pos:end="161:33"><literal type="string" pos:start="161:28" pos:end="161:33">"host"</literal></expr></argument>, <argument pos:start="161:36" pos:end="161:39"><expr pos:start="161:36" pos:end="161:39"><name pos:start="161:36" pos:end="161:39">host</name></expr></argument>, <argument pos:start="161:42" pos:end="161:53"><expr pos:start="161:42" pos:end="161:53"><operator pos:start="161:42" pos:end="161:42">&amp;</operator><name pos:start="161:43" pos:end="161:53">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:55"><expr pos:start="163:9" pos:end="163:54"><call pos:start="163:9" pos:end="163:54"><name pos:start="163:9" pos:end="163:20">qemu_opt_set</name><argument_list pos:start="163:21" pos:end="163:54">(<argument pos:start="163:22" pos:end="163:25"><expr pos:start="163:22" pos:end="163:25"><name pos:start="163:22" pos:end="163:25">opts</name></expr></argument>, <argument pos:start="163:28" pos:end="163:33"><expr pos:start="163:28" pos:end="163:33"><literal type="string" pos:start="163:28" pos:end="163:33">"port"</literal></expr></argument>, <argument pos:start="163:36" pos:end="163:39"><expr pos:start="163:36" pos:end="163:39"><name pos:start="163:36" pos:end="163:39">port</name></expr></argument>, <argument pos:start="163:42" pos:end="163:53"><expr pos:start="163:42" pos:end="163:53"><operator pos:start="163:42" pos:end="163:42">&amp;</operator><name pos:start="163:43" pos:end="163:53">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="165:9" pos:end="171:9"><if pos:start="165:9" pos:end="171:9">if <condition pos:start="165:12" pos:end="165:26">(<expr pos:start="165:13" pos:end="165:25"><name pos:start="165:13" pos:end="165:18"><name pos:start="165:13" pos:end="165:13">p</name><index pos:start="165:14" pos:end="165:18">[<expr pos:start="165:15" pos:end="165:17"><name pos:start="165:15" pos:end="165:17">pos</name></expr>]</index></name> <operator pos:start="165:20" pos:end="165:21">==</operator> <literal type="char" pos:start="165:23" pos:end="165:25">','</literal></expr>)</condition> <block pos:start="165:28" pos:end="171:9">{<block_content pos:start="167:13" pos:end="169:26">

            <if_stmt pos:start="167:13" pos:end="169:26"><if pos:start="167:13" pos:end="169:26">if <condition pos:start="167:16" pos:end="167:61">(<expr pos:start="167:17" pos:end="167:60"><call pos:start="167:17" pos:end="167:55"><name pos:start="167:17" pos:end="167:34">qemu_opts_do_parse</name><argument_list pos:start="167:35" pos:end="167:55">(<argument pos:start="167:36" pos:end="167:39"><expr pos:start="167:36" pos:end="167:39"><name pos:start="167:36" pos:end="167:39">opts</name></expr></argument>, <argument pos:start="167:42" pos:end="167:48"><expr pos:start="167:42" pos:end="167:48"><name pos:start="167:42" pos:end="167:42">p</name><operator pos:start="167:43" pos:end="167:43">+</operator><name pos:start="167:44" pos:end="167:46">pos</name><operator pos:start="167:47" pos:end="167:47">+</operator><literal type="number" pos:start="167:48" pos:end="167:48">1</literal></expr></argument>, <argument pos:start="167:51" pos:end="167:54"><expr pos:start="167:51" pos:end="167:54"><name pos:start="167:51" pos:end="167:54">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="167:57" pos:end="167:58">!=</operator> <literal type="number" pos:start="167:60" pos:end="167:60">0</literal></expr>)</condition><block type="pseudo" pos:start="169:17" pos:end="169:26"><block_content pos:start="169:17" pos:end="169:26">

                <goto pos:start="169:17" pos:end="169:26">goto <name pos:start="169:22" pos:end="169:25">fail</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="173:9" pos:end="175:61"><if pos:start="173:9" pos:end="175:61">if <condition pos:start="173:12" pos:end="173:46">(<expr pos:start="173:13" pos:end="173:45"><call pos:start="173:13" pos:end="173:45"><name pos:start="173:13" pos:end="173:20">strstart</name><argument_list pos:start="173:21" pos:end="173:45">(<argument pos:start="173:22" pos:end="173:29"><expr pos:start="173:22" pos:end="173:29"><name pos:start="173:22" pos:end="173:29">filename</name></expr></argument>, <argument pos:start="173:32" pos:end="173:40"><expr pos:start="173:32" pos:end="173:40"><literal type="string" pos:start="173:32" pos:end="173:40">"telnet:"</literal></expr></argument>, <argument pos:start="173:43" pos:end="173:44"><expr pos:start="173:43" pos:end="173:44"><operator pos:start="173:43" pos:end="173:43">&amp;</operator><name pos:start="173:44" pos:end="173:44">p</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="175:13" pos:end="175:61"><block_content pos:start="175:13" pos:end="175:61">

            <expr_stmt pos:start="175:13" pos:end="175:61"><expr pos:start="175:13" pos:end="175:60"><call pos:start="175:13" pos:end="175:60"><name pos:start="175:13" pos:end="175:24">qemu_opt_set</name><argument_list pos:start="175:25" pos:end="175:60">(<argument pos:start="175:26" pos:end="175:29"><expr pos:start="175:26" pos:end="175:29"><name pos:start="175:26" pos:end="175:29">opts</name></expr></argument>, <argument pos:start="175:32" pos:end="175:39"><expr pos:start="175:32" pos:end="175:39"><literal type="string" pos:start="175:32" pos:end="175:39">"telnet"</literal></expr></argument>, <argument pos:start="175:42" pos:end="175:45"><expr pos:start="175:42" pos:end="175:45"><literal type="string" pos:start="175:42" pos:end="175:45">"on"</literal></expr></argument>, <argument pos:start="175:48" pos:end="175:59"><expr pos:start="175:48" pos:end="175:59"><operator pos:start="175:48" pos:end="175:48">&amp;</operator><name pos:start="175:49" pos:end="175:59">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="177:9" pos:end="177:20">return <expr pos:start="177:16" pos:end="177:19"><name pos:start="177:16" pos:end="177:19">opts</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="181:5" pos:end="225:5"><if pos:start="181:5" pos:end="225:5">if <condition pos:start="181:8" pos:end="181:39">(<expr pos:start="181:9" pos:end="181:38"><call pos:start="181:9" pos:end="181:38"><name pos:start="181:9" pos:end="181:16">strstart</name><argument_list pos:start="181:17" pos:end="181:38">(<argument pos:start="181:18" pos:end="181:25"><expr pos:start="181:18" pos:end="181:25"><name pos:start="181:18" pos:end="181:25">filename</name></expr></argument>, <argument pos:start="181:28" pos:end="181:33"><expr pos:start="181:28" pos:end="181:33"><literal type="string" pos:start="181:28" pos:end="181:33">"udp:"</literal></expr></argument>, <argument pos:start="181:36" pos:end="181:37"><expr pos:start="181:36" pos:end="181:37"><operator pos:start="181:36" pos:end="181:36">&amp;</operator><name pos:start="181:37" pos:end="181:37">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="181:41" pos:end="225:5">{<block_content pos:start="183:9" pos:end="223:20">

        <expr_stmt pos:start="183:9" pos:end="183:59"><expr pos:start="183:9" pos:end="183:58"><call pos:start="183:9" pos:end="183:58"><name pos:start="183:9" pos:end="183:20">qemu_opt_set</name><argument_list pos:start="183:21" pos:end="183:58">(<argument pos:start="183:22" pos:end="183:25"><expr pos:start="183:22" pos:end="183:25"><name pos:start="183:22" pos:end="183:25">opts</name></expr></argument>, <argument pos:start="183:28" pos:end="183:36"><expr pos:start="183:28" pos:end="183:36"><literal type="string" pos:start="183:28" pos:end="183:36">"backend"</literal></expr></argument>, <argument pos:start="183:39" pos:end="183:43"><expr pos:start="183:39" pos:end="183:43"><literal type="string" pos:start="183:39" pos:end="183:43">"udp"</literal></expr></argument>, <argument pos:start="183:46" pos:end="183:57"><expr pos:start="183:46" pos:end="183:57"><operator pos:start="183:46" pos:end="183:46">&amp;</operator><name pos:start="183:47" pos:end="183:57">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="185:9" pos:end="195:9"><if pos:start="185:9" pos:end="195:9">if <condition pos:start="185:12" pos:end="185:66">(<expr pos:start="185:13" pos:end="185:65"><call pos:start="185:13" pos:end="185:61"><name pos:start="185:13" pos:end="185:18">sscanf</name><argument_list pos:start="185:19" pos:end="185:61">(<argument pos:start="185:20" pos:end="185:20"><expr pos:start="185:20" pos:end="185:20"><name pos:start="185:20" pos:end="185:20">p</name></expr></argument>, <argument pos:start="185:23" pos:end="185:42"><expr pos:start="185:23" pos:end="185:42"><literal type="string" pos:start="185:23" pos:end="185:42">"%64[^:]:%32[^@,]%n"</literal></expr></argument>, <argument pos:start="185:45" pos:end="185:48"><expr pos:start="185:45" pos:end="185:48"><name pos:start="185:45" pos:end="185:48">host</name></expr></argument>, <argument pos:start="185:51" pos:end="185:54"><expr pos:start="185:51" pos:end="185:54"><name pos:start="185:51" pos:end="185:54">port</name></expr></argument>, <argument pos:start="185:57" pos:end="185:60"><expr pos:start="185:57" pos:end="185:60"><operator pos:start="185:57" pos:end="185:57">&amp;</operator><name pos:start="185:58" pos:end="185:60">pos</name></expr></argument>)</argument_list></call> <operator pos:start="185:63" pos:end="185:63">&lt;</operator> <literal type="number" pos:start="185:65" pos:end="185:65">2</literal></expr>)</condition> <block pos:start="185:68" pos:end="195:9">{<block_content pos:start="187:13" pos:end="193:13">

            <expr_stmt pos:start="187:13" pos:end="187:24"><expr pos:start="187:13" pos:end="187:23"><name pos:start="187:13" pos:end="187:19"><name pos:start="187:13" pos:end="187:16">host</name><index pos:start="187:17" pos:end="187:19">[<expr pos:start="187:18" pos:end="187:18"><literal type="number" pos:start="187:18" pos:end="187:18">0</literal></expr>]</index></name> <operator pos:start="187:21" pos:end="187:21">=</operator> <literal type="number" pos:start="187:23" pos:end="187:23">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="189:13" pos:end="193:13"><if pos:start="189:13" pos:end="193:13">if <condition pos:start="189:16" pos:end="189:57">(<expr pos:start="189:17" pos:end="189:56"><call pos:start="189:17" pos:end="189:52"><name pos:start="189:17" pos:end="189:22">sscanf</name><argument_list pos:start="189:23" pos:end="189:52">(<argument pos:start="189:24" pos:end="189:24"><expr pos:start="189:24" pos:end="189:24"><name pos:start="189:24" pos:end="189:24">p</name></expr></argument>, <argument pos:start="189:27" pos:end="189:39"><expr pos:start="189:27" pos:end="189:39"><literal type="string" pos:start="189:27" pos:end="189:39">":%32[^@,]%n"</literal></expr></argument>, <argument pos:start="189:42" pos:end="189:45"><expr pos:start="189:42" pos:end="189:45"><name pos:start="189:42" pos:end="189:45">port</name></expr></argument>, <argument pos:start="189:48" pos:end="189:51"><expr pos:start="189:48" pos:end="189:51"><operator pos:start="189:48" pos:end="189:48">&amp;</operator><name pos:start="189:49" pos:end="189:51">pos</name></expr></argument>)</argument_list></call> <operator pos:start="189:54" pos:end="189:54">&lt;</operator> <literal type="number" pos:start="189:56" pos:end="189:56">1</literal></expr>)</condition> <block pos:start="189:59" pos:end="193:13">{<block_content pos:start="191:17" pos:end="191:26">

                <goto pos:start="191:17" pos:end="191:26">goto <name pos:start="191:22" pos:end="191:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:55"><expr pos:start="197:9" pos:end="197:54"><call pos:start="197:9" pos:end="197:54"><name pos:start="197:9" pos:end="197:20">qemu_opt_set</name><argument_list pos:start="197:21" pos:end="197:54">(<argument pos:start="197:22" pos:end="197:25"><expr pos:start="197:22" pos:end="197:25"><name pos:start="197:22" pos:end="197:25">opts</name></expr></argument>, <argument pos:start="197:28" pos:end="197:33"><expr pos:start="197:28" pos:end="197:33"><literal type="string" pos:start="197:28" pos:end="197:33">"host"</literal></expr></argument>, <argument pos:start="197:36" pos:end="197:39"><expr pos:start="197:36" pos:end="197:39"><name pos:start="197:36" pos:end="197:39">host</name></expr></argument>, <argument pos:start="197:42" pos:end="197:53"><expr pos:start="197:42" pos:end="197:53"><operator pos:start="197:42" pos:end="197:42">&amp;</operator><name pos:start="197:43" pos:end="197:53">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:55"><expr pos:start="199:9" pos:end="199:54"><call pos:start="199:9" pos:end="199:54"><name pos:start="199:9" pos:end="199:20">qemu_opt_set</name><argument_list pos:start="199:21" pos:end="199:54">(<argument pos:start="199:22" pos:end="199:25"><expr pos:start="199:22" pos:end="199:25"><name pos:start="199:22" pos:end="199:25">opts</name></expr></argument>, <argument pos:start="199:28" pos:end="199:33"><expr pos:start="199:28" pos:end="199:33"><literal type="string" pos:start="199:28" pos:end="199:33">"port"</literal></expr></argument>, <argument pos:start="199:36" pos:end="199:39"><expr pos:start="199:36" pos:end="199:39"><name pos:start="199:36" pos:end="199:39">port</name></expr></argument>, <argument pos:start="199:42" pos:end="199:53"><expr pos:start="199:42" pos:end="199:53"><operator pos:start="199:42" pos:end="199:42">&amp;</operator><name pos:start="199:43" pos:end="199:53">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="201:9" pos:end="221:9"><if pos:start="201:9" pos:end="221:9">if <condition pos:start="201:12" pos:end="201:26">(<expr pos:start="201:13" pos:end="201:25"><name pos:start="201:13" pos:end="201:18"><name pos:start="201:13" pos:end="201:13">p</name><index pos:start="201:14" pos:end="201:18">[<expr pos:start="201:15" pos:end="201:17"><name pos:start="201:15" pos:end="201:17">pos</name></expr>]</index></name> <operator pos:start="201:20" pos:end="201:21">==</operator> <literal type="char" pos:start="201:23" pos:end="201:25">'@'</literal></expr>)</condition> <block pos:start="201:28" pos:end="221:9">{<block_content pos:start="203:13" pos:end="219:64">

            <expr_stmt pos:start="203:13" pos:end="203:25"><expr pos:start="203:13" pos:end="203:24"><name pos:start="203:13" pos:end="203:13">p</name> <operator pos:start="203:15" pos:end="203:16">+=</operator> <name pos:start="203:18" pos:end="203:20">pos</name> <operator pos:start="203:22" pos:end="203:22">+</operator> <literal type="number" pos:start="203:24" pos:end="203:24">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="205:13" pos:end="215:13"><if pos:start="205:13" pos:end="215:13">if <condition pos:start="205:16" pos:end="205:69">(<expr pos:start="205:17" pos:end="205:68"><call pos:start="205:17" pos:end="205:64"><name pos:start="205:17" pos:end="205:22">sscanf</name><argument_list pos:start="205:23" pos:end="205:64">(<argument pos:start="205:24" pos:end="205:24"><expr pos:start="205:24" pos:end="205:24"><name pos:start="205:24" pos:end="205:24">p</name></expr></argument>, <argument pos:start="205:27" pos:end="205:45"><expr pos:start="205:27" pos:end="205:45"><literal type="string" pos:start="205:27" pos:end="205:45">"%64[^:]:%32[^,]%n"</literal></expr></argument>, <argument pos:start="205:48" pos:end="205:51"><expr pos:start="205:48" pos:end="205:51"><name pos:start="205:48" pos:end="205:51">host</name></expr></argument>, <argument pos:start="205:54" pos:end="205:57"><expr pos:start="205:54" pos:end="205:57"><name pos:start="205:54" pos:end="205:57">port</name></expr></argument>, <argument pos:start="205:60" pos:end="205:63"><expr pos:start="205:60" pos:end="205:63"><operator pos:start="205:60" pos:end="205:60">&amp;</operator><name pos:start="205:61" pos:end="205:63">pos</name></expr></argument>)</argument_list></call> <operator pos:start="205:66" pos:end="205:66">&lt;</operator> <literal type="number" pos:start="205:68" pos:end="205:68">2</literal></expr>)</condition> <block pos:start="205:71" pos:end="215:13">{<block_content pos:start="207:17" pos:end="213:17">

                <expr_stmt pos:start="207:17" pos:end="207:28"><expr pos:start="207:17" pos:end="207:27"><name pos:start="207:17" pos:end="207:23"><name pos:start="207:17" pos:end="207:20">host</name><index pos:start="207:21" pos:end="207:23">[<expr pos:start="207:22" pos:end="207:22"><literal type="number" pos:start="207:22" pos:end="207:22">0</literal></expr>]</index></name> <operator pos:start="207:25" pos:end="207:25">=</operator> <literal type="number" pos:start="207:27" pos:end="207:27">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="209:17" pos:end="213:17"><if pos:start="209:17" pos:end="213:17">if <condition pos:start="209:20" pos:end="209:60">(<expr pos:start="209:21" pos:end="209:59"><call pos:start="209:21" pos:end="209:55"><name pos:start="209:21" pos:end="209:26">sscanf</name><argument_list pos:start="209:27" pos:end="209:55">(<argument pos:start="209:28" pos:end="209:28"><expr pos:start="209:28" pos:end="209:28"><name pos:start="209:28" pos:end="209:28">p</name></expr></argument>, <argument pos:start="209:31" pos:end="209:42"><expr pos:start="209:31" pos:end="209:42"><literal type="string" pos:start="209:31" pos:end="209:42">":%32[^,]%n"</literal></expr></argument>, <argument pos:start="209:45" pos:end="209:48"><expr pos:start="209:45" pos:end="209:48"><name pos:start="209:45" pos:end="209:48">port</name></expr></argument>, <argument pos:start="209:51" pos:end="209:54"><expr pos:start="209:51" pos:end="209:54"><operator pos:start="209:51" pos:end="209:51">&amp;</operator><name pos:start="209:52" pos:end="209:54">pos</name></expr></argument>)</argument_list></call> <operator pos:start="209:57" pos:end="209:57">&lt;</operator> <literal type="number" pos:start="209:59" pos:end="209:59">1</literal></expr>)</condition> <block pos:start="209:62" pos:end="213:17">{<block_content pos:start="211:21" pos:end="211:30">

                    <goto pos:start="211:21" pos:end="211:30">goto <name pos:start="211:26" pos:end="211:29">fail</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:64"><expr pos:start="217:13" pos:end="217:63"><call pos:start="217:13" pos:end="217:63"><name pos:start="217:13" pos:end="217:24">qemu_opt_set</name><argument_list pos:start="217:25" pos:end="217:63">(<argument pos:start="217:26" pos:end="217:29"><expr pos:start="217:26" pos:end="217:29"><name pos:start="217:26" pos:end="217:29">opts</name></expr></argument>, <argument pos:start="217:32" pos:end="217:42"><expr pos:start="217:32" pos:end="217:42"><literal type="string" pos:start="217:32" pos:end="217:42">"localaddr"</literal></expr></argument>, <argument pos:start="217:45" pos:end="217:48"><expr pos:start="217:45" pos:end="217:48"><name pos:start="217:45" pos:end="217:48">host</name></expr></argument>, <argument pos:start="217:51" pos:end="217:62"><expr pos:start="217:51" pos:end="217:62"><operator pos:start="217:51" pos:end="217:51">&amp;</operator><name pos:start="217:52" pos:end="217:62">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:64"><expr pos:start="219:13" pos:end="219:63"><call pos:start="219:13" pos:end="219:63"><name pos:start="219:13" pos:end="219:24">qemu_opt_set</name><argument_list pos:start="219:25" pos:end="219:63">(<argument pos:start="219:26" pos:end="219:29"><expr pos:start="219:26" pos:end="219:29"><name pos:start="219:26" pos:end="219:29">opts</name></expr></argument>, <argument pos:start="219:32" pos:end="219:42"><expr pos:start="219:32" pos:end="219:42"><literal type="string" pos:start="219:32" pos:end="219:42">"localport"</literal></expr></argument>, <argument pos:start="219:45" pos:end="219:48"><expr pos:start="219:45" pos:end="219:48"><name pos:start="219:45" pos:end="219:48">port</name></expr></argument>, <argument pos:start="219:51" pos:end="219:62"><expr pos:start="219:51" pos:end="219:62"><operator pos:start="219:51" pos:end="219:51">&amp;</operator><name pos:start="219:52" pos:end="219:62">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="223:9" pos:end="223:20">return <expr pos:start="223:16" pos:end="223:19"><name pos:start="223:16" pos:end="223:19">opts</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="227:5" pos:end="237:5"><if pos:start="227:5" pos:end="237:5">if <condition pos:start="227:8" pos:end="227:40">(<expr pos:start="227:9" pos:end="227:39"><call pos:start="227:9" pos:end="227:39"><name pos:start="227:9" pos:end="227:16">strstart</name><argument_list pos:start="227:17" pos:end="227:39">(<argument pos:start="227:18" pos:end="227:25"><expr pos:start="227:18" pos:end="227:25"><name pos:start="227:18" pos:end="227:25">filename</name></expr></argument>, <argument pos:start="227:28" pos:end="227:34"><expr pos:start="227:28" pos:end="227:34"><literal type="string" pos:start="227:28" pos:end="227:34">"unix:"</literal></expr></argument>, <argument pos:start="227:37" pos:end="227:38"><expr pos:start="227:37" pos:end="227:38"><operator pos:start="227:37" pos:end="227:37">&amp;</operator><name pos:start="227:38" pos:end="227:38">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="227:42" pos:end="237:5">{<block_content pos:start="229:9" pos:end="235:20">

        <expr_stmt pos:start="229:9" pos:end="229:62"><expr pos:start="229:9" pos:end="229:61"><call pos:start="229:9" pos:end="229:61"><name pos:start="229:9" pos:end="229:20">qemu_opt_set</name><argument_list pos:start="229:21" pos:end="229:61">(<argument pos:start="229:22" pos:end="229:25"><expr pos:start="229:22" pos:end="229:25"><name pos:start="229:22" pos:end="229:25">opts</name></expr></argument>, <argument pos:start="229:28" pos:end="229:36"><expr pos:start="229:28" pos:end="229:36"><literal type="string" pos:start="229:28" pos:end="229:36">"backend"</literal></expr></argument>, <argument pos:start="229:39" pos:end="229:46"><expr pos:start="229:39" pos:end="229:46"><literal type="string" pos:start="229:39" pos:end="229:46">"socket"</literal></expr></argument>, <argument pos:start="229:49" pos:end="229:60"><expr pos:start="229:49" pos:end="229:60"><operator pos:start="229:49" pos:end="229:49">&amp;</operator><name pos:start="229:50" pos:end="229:60">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="231:9" pos:end="233:22"><if pos:start="231:9" pos:end="233:22">if <condition pos:start="231:12" pos:end="231:53">(<expr pos:start="231:13" pos:end="231:52"><call pos:start="231:13" pos:end="231:47"><name pos:start="231:13" pos:end="231:30">qemu_opts_do_parse</name><argument_list pos:start="231:31" pos:end="231:47">(<argument pos:start="231:32" pos:end="231:35"><expr pos:start="231:32" pos:end="231:35"><name pos:start="231:32" pos:end="231:35">opts</name></expr></argument>, <argument pos:start="231:38" pos:end="231:38"><expr pos:start="231:38" pos:end="231:38"><name pos:start="231:38" pos:end="231:38">p</name></expr></argument>, <argument pos:start="231:41" pos:end="231:46"><expr pos:start="231:41" pos:end="231:46"><literal type="string" pos:start="231:41" pos:end="231:46">"path"</literal></expr></argument>)</argument_list></call> <operator pos:start="231:49" pos:end="231:50">!=</operator> <literal type="number" pos:start="231:52" pos:end="231:52">0</literal></expr>)</condition><block type="pseudo" pos:start="233:13" pos:end="233:22"><block_content pos:start="233:13" pos:end="233:22">

            <goto pos:start="233:13" pos:end="233:22">goto <name pos:start="233:18" pos:end="233:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <return pos:start="235:9" pos:end="235:20">return <expr pos:start="235:16" pos:end="235:19"><name pos:start="235:16" pos:end="235:19">opts</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="239:5" pos:end="249:5"><if pos:start="239:5" pos:end="249:5">if <condition pos:start="239:8" pos:end="241:45">(<expr pos:start="239:9" pos:end="241:44"><call pos:start="239:9" pos:end="239:48"><name pos:start="239:9" pos:end="239:16">strstart</name><argument_list pos:start="239:17" pos:end="239:48">(<argument pos:start="239:18" pos:end="239:25"><expr pos:start="239:18" pos:end="239:25"><name pos:start="239:18" pos:end="239:25">filename</name></expr></argument>, <argument pos:start="239:28" pos:end="239:41"><expr pos:start="239:28" pos:end="239:41"><literal type="string" pos:start="239:28" pos:end="239:41">"/dev/parport"</literal></expr></argument>, <argument pos:start="239:44" pos:end="239:47"><expr pos:start="239:44" pos:end="239:47"><name pos:start="239:44" pos:end="239:47">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="239:50" pos:end="239:51">||</operator>

        <call pos:start="241:9" pos:end="241:44"><name pos:start="241:9" pos:end="241:16">strstart</name><argument_list pos:start="241:17" pos:end="241:44">(<argument pos:start="241:18" pos:end="241:25"><expr pos:start="241:18" pos:end="241:25"><name pos:start="241:18" pos:end="241:25">filename</name></expr></argument>, <argument pos:start="241:28" pos:end="241:37"><expr pos:start="241:28" pos:end="241:37"><literal type="string" pos:start="241:28" pos:end="241:37">"/dev/ppi"</literal></expr></argument>, <argument pos:start="241:40" pos:end="241:43"><expr pos:start="241:40" pos:end="241:43"><name pos:start="241:40" pos:end="241:43">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="241:47" pos:end="249:5">{<block_content pos:start="243:9" pos:end="247:20">

        <expr_stmt pos:start="243:9" pos:end="243:63"><expr pos:start="243:9" pos:end="243:62"><call pos:start="243:9" pos:end="243:62"><name pos:start="243:9" pos:end="243:20">qemu_opt_set</name><argument_list pos:start="243:21" pos:end="243:62">(<argument pos:start="243:22" pos:end="243:25"><expr pos:start="243:22" pos:end="243:25"><name pos:start="243:22" pos:end="243:25">opts</name></expr></argument>, <argument pos:start="243:28" pos:end="243:36"><expr pos:start="243:28" pos:end="243:36"><literal type="string" pos:start="243:28" pos:end="243:36">"backend"</literal></expr></argument>, <argument pos:start="243:39" pos:end="243:47"><expr pos:start="243:39" pos:end="243:47"><literal type="string" pos:start="243:39" pos:end="243:47">"parport"</literal></expr></argument>, <argument pos:start="243:50" pos:end="243:61"><expr pos:start="243:50" pos:end="243:61"><operator pos:start="243:50" pos:end="243:50">&amp;</operator><name pos:start="243:51" pos:end="243:61">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:59"><expr pos:start="245:9" pos:end="245:58"><call pos:start="245:9" pos:end="245:58"><name pos:start="245:9" pos:end="245:20">qemu_opt_set</name><argument_list pos:start="245:21" pos:end="245:58">(<argument pos:start="245:22" pos:end="245:25"><expr pos:start="245:22" pos:end="245:25"><name pos:start="245:22" pos:end="245:25">opts</name></expr></argument>, <argument pos:start="245:28" pos:end="245:33"><expr pos:start="245:28" pos:end="245:33"><literal type="string" pos:start="245:28" pos:end="245:33">"path"</literal></expr></argument>, <argument pos:start="245:36" pos:end="245:43"><expr pos:start="245:36" pos:end="245:43"><name pos:start="245:36" pos:end="245:43">filename</name></expr></argument>, <argument pos:start="245:46" pos:end="245:57"><expr pos:start="245:46" pos:end="245:57"><operator pos:start="245:46" pos:end="245:46">&amp;</operator><name pos:start="245:47" pos:end="245:57">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="247:9" pos:end="247:20">return <expr pos:start="247:16" pos:end="247:19"><name pos:start="247:16" pos:end="247:19">opts</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="251:5" pos:end="259:5"><if pos:start="251:5" pos:end="259:5">if <condition pos:start="251:8" pos:end="251:42">(<expr pos:start="251:9" pos:end="251:41"><call pos:start="251:9" pos:end="251:41"><name pos:start="251:9" pos:end="251:16">strstart</name><argument_list pos:start="251:17" pos:end="251:41">(<argument pos:start="251:18" pos:end="251:25"><expr pos:start="251:18" pos:end="251:25"><name pos:start="251:18" pos:end="251:25">filename</name></expr></argument>, <argument pos:start="251:28" pos:end="251:34"><expr pos:start="251:28" pos:end="251:34"><literal type="string" pos:start="251:28" pos:end="251:34">"/dev/"</literal></expr></argument>, <argument pos:start="251:37" pos:end="251:40"><expr pos:start="251:37" pos:end="251:40"><name pos:start="251:37" pos:end="251:40">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="251:44" pos:end="259:5">{<block_content pos:start="253:9" pos:end="257:20">

        <expr_stmt pos:start="253:9" pos:end="253:59"><expr pos:start="253:9" pos:end="253:58"><call pos:start="253:9" pos:end="253:58"><name pos:start="253:9" pos:end="253:20">qemu_opt_set</name><argument_list pos:start="253:21" pos:end="253:58">(<argument pos:start="253:22" pos:end="253:25"><expr pos:start="253:22" pos:end="253:25"><name pos:start="253:22" pos:end="253:25">opts</name></expr></argument>, <argument pos:start="253:28" pos:end="253:36"><expr pos:start="253:28" pos:end="253:36"><literal type="string" pos:start="253:28" pos:end="253:36">"backend"</literal></expr></argument>, <argument pos:start="253:39" pos:end="253:43"><expr pos:start="253:39" pos:end="253:43"><literal type="string" pos:start="253:39" pos:end="253:43">"tty"</literal></expr></argument>, <argument pos:start="253:46" pos:end="253:57"><expr pos:start="253:46" pos:end="253:57"><operator pos:start="253:46" pos:end="253:46">&amp;</operator><name pos:start="253:47" pos:end="253:57">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="255:9" pos:end="255:59"><expr pos:start="255:9" pos:end="255:58"><call pos:start="255:9" pos:end="255:58"><name pos:start="255:9" pos:end="255:20">qemu_opt_set</name><argument_list pos:start="255:21" pos:end="255:58">(<argument pos:start="255:22" pos:end="255:25"><expr pos:start="255:22" pos:end="255:25"><name pos:start="255:22" pos:end="255:25">opts</name></expr></argument>, <argument pos:start="255:28" pos:end="255:33"><expr pos:start="255:28" pos:end="255:33"><literal type="string" pos:start="255:28" pos:end="255:33">"path"</literal></expr></argument>, <argument pos:start="255:36" pos:end="255:43"><expr pos:start="255:36" pos:end="255:43"><name pos:start="255:36" pos:end="255:43">filename</name></expr></argument>, <argument pos:start="255:46" pos:end="255:57"><expr pos:start="255:46" pos:end="255:57"><operator pos:start="255:46" pos:end="255:46">&amp;</operator><name pos:start="255:47" pos:end="255:57">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="257:9" pos:end="257:20">return <expr pos:start="257:16" pos:end="257:19"><name pos:start="257:16" pos:end="257:19">opts</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



<label pos:start="263:1" pos:end="263:5"><name pos:start="263:1" pos:end="263:4">fail</name>:</label>

    <expr_stmt pos:start="265:5" pos:end="265:24"><expr pos:start="265:5" pos:end="265:23"><call pos:start="265:5" pos:end="265:23"><name pos:start="265:5" pos:end="265:17">qemu_opts_del</name><argument_list pos:start="265:18" pos:end="265:23">(<argument pos:start="265:19" pos:end="265:22"><expr pos:start="265:19" pos:end="265:22"><name pos:start="265:19" pos:end="265:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="267:5" pos:end="267:16">return <expr pos:start="267:12" pos:end="267:15"><name pos:start="267:12" pos:end="267:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
