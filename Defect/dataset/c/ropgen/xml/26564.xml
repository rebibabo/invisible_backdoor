<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26564.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">char</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:28">read_splashfile</name><parameter_list pos:start="1:29" pos:end="3:45">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:33">char</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:43">filename</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:63"><decl pos:start="1:46" pos:end="1:63"><type pos:start="1:46" pos:end="1:63"><name pos:start="1:46" pos:end="1:51">size_t</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:63">file_sizep</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:44"><decl pos:start="3:30" pos:end="3:44"><type pos:start="3:30" pos:end="3:44"><name pos:start="3:30" pos:end="3:32">int</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:44">file_typep</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="101:1">{<block_content pos:start="7:5" pos:end="99:16">

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">GError</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:15">err</name> <init pos:start="7:17" pos:end="7:22">= <expr pos:start="7:19" pos:end="7:22"><name pos:start="7:19" pos:end="7:22">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">gboolean</name></type> <name pos:start="9:14" pos:end="9:16">res</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">gchar</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:18">content</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">file_type</name> <init pos:start="13:19" pos:end="13:22">= <expr pos:start="13:21" pos:end="13:22"><operator pos:start="13:21" pos:end="13:21">-</operator><literal type="number" pos:start="13:22" pos:end="13:22">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:25">filehead</name> <init pos:start="15:27" pos:end="15:29">= <expr pos:start="15:29" pos:end="15:29"><literal type="number" pos:start="15:29" pos:end="15:29">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:15">bmp_bpp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:68"><expr pos:start="21:5" pos:end="21:67"><name pos:start="21:5" pos:end="21:7">res</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:67"><name pos:start="21:11" pos:end="21:29">g_file_get_contents</name><argument_list pos:start="21:30" pos:end="21:67">(<argument pos:start="21:31" pos:end="21:38"><expr pos:start="21:31" pos:end="21:38"><name pos:start="21:31" pos:end="21:38">filename</name></expr></argument>, <argument pos:start="21:41" pos:end="21:48"><expr pos:start="21:41" pos:end="21:48"><operator pos:start="21:41" pos:end="21:41">&amp;</operator><name pos:start="21:42" pos:end="21:48">content</name></expr></argument>, <argument pos:start="21:51" pos:end="21:60"><expr pos:start="21:51" pos:end="21:60"><name pos:start="21:51" pos:end="21:60">file_sizep</name></expr></argument>, <argument pos:start="21:63" pos:end="21:66"><expr pos:start="21:63" pos:end="21:66"><operator pos:start="21:63" pos:end="21:63">&amp;</operator><name pos:start="21:64" pos:end="21:66">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:21">(<expr pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:11">res</name> <operator pos:start="23:13" pos:end="23:14">==</operator> <name pos:start="23:16" pos:end="23:20">FALSE</name></expr>)</condition> <block pos:start="23:23" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:20">

        <expr_stmt pos:start="25:9" pos:end="25:66"><expr pos:start="25:9" pos:end="25:65"><call pos:start="25:9" pos:end="25:65"><name pos:start="25:9" pos:end="25:20">error_report</name><argument_list pos:start="25:21" pos:end="25:65">(<argument pos:start="25:22" pos:end="25:54"><expr pos:start="25:22" pos:end="25:54"><literal type="string" pos:start="25:22" pos:end="25:54">"failed to read splash file '%s'"</literal></expr></argument>, <argument pos:start="25:57" pos:end="25:64"><expr pos:start="25:57" pos:end="25:64"><name pos:start="25:57" pos:end="25:64">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:26"><expr pos:start="27:9" pos:end="27:25"><call pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:20">g_error_free</name><argument_list pos:start="27:21" pos:end="27:25">(<argument pos:start="27:22" pos:end="27:24"><expr pos:start="27:22" pos:end="27:24"><name pos:start="27:22" pos:end="27:24">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:20">return <expr pos:start="29:16" pos:end="29:19"><name pos:start="29:16" pos:end="29:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:25">/* check file size */</comment>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:25">(<expr pos:start="37:9" pos:end="37:24"><operator pos:start="37:9" pos:end="37:9">*</operator><name pos:start="37:10" pos:end="37:19">file_sizep</name> <operator pos:start="37:21" pos:end="37:21">&lt;</operator> <literal type="number" pos:start="37:23" pos:end="37:24">30</literal></expr>)</condition> <block pos:start="37:27" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:19">

        <goto pos:start="39:9" pos:end="39:19">goto <name pos:start="39:14" pos:end="39:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:24">/* check magic ID */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:66"><expr pos:start="47:5" pos:end="47:65"><name pos:start="47:5" pos:end="47:12">filehead</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <operator pos:start="47:16" pos:end="47:16">(</operator><operator pos:start="47:17" pos:end="47:17">(</operator><name pos:start="47:18" pos:end="47:27"><name pos:start="47:18" pos:end="47:24">content</name><index pos:start="47:25" pos:end="47:27">[<expr pos:start="47:26" pos:end="47:26"><literal type="number" pos:start="47:26" pos:end="47:26">0</literal></expr>]</index></name> <operator pos:start="47:29" pos:end="47:29">&amp;</operator> <literal type="number" pos:start="47:31" pos:end="47:34">0xff</literal><operator pos:start="47:35" pos:end="47:35">)</operator> <operator pos:start="47:37" pos:end="47:37">+</operator> <operator pos:start="47:39" pos:end="47:39">(</operator><name pos:start="47:40" pos:end="47:49"><name pos:start="47:40" pos:end="47:46">content</name><index pos:start="47:47" pos:end="47:49">[<expr pos:start="47:48" pos:end="47:48"><literal type="number" pos:start="47:48" pos:end="47:48">1</literal></expr>]</index></name> <operator pos:start="47:51" pos:end="47:52">&lt;&lt;</operator> <literal type="number" pos:start="47:54" pos:end="47:54">8</literal><operator pos:start="47:55" pos:end="47:55">)</operator><operator pos:start="47:56" pos:end="47:56">)</operator> <operator pos:start="47:58" pos:end="47:58">&amp;</operator> <literal type="number" pos:start="47:60" pos:end="47:65">0xffff</literal></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="61:5"><if pos:start="49:5" pos:end="53:5">if <condition pos:start="49:8" pos:end="49:27">(<expr pos:start="49:9" pos:end="49:26"><name pos:start="49:9" pos:end="49:16">filehead</name> <operator pos:start="49:18" pos:end="49:19">==</operator> <literal type="number" pos:start="49:21" pos:end="49:26">0xd8ff</literal></expr>)</condition> <block pos:start="49:29" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:29">

        <expr_stmt pos:start="51:9" pos:end="51:29"><expr pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:17">file_type</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <name pos:start="51:21" pos:end="51:28">JPG_FILE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="53:7" pos:end="57:5">else if <condition pos:start="53:15" pos:end="53:34">(<expr pos:start="53:16" pos:end="53:33"><name pos:start="53:16" pos:end="53:23">filehead</name> <operator pos:start="53:25" pos:end="53:26">==</operator> <literal type="number" pos:start="53:28" pos:end="53:33">0x4d42</literal></expr>)</condition> <block pos:start="53:36" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:29">

        <expr_stmt pos:start="55:9" pos:end="55:29"><expr pos:start="55:9" pos:end="55:28"><name pos:start="55:9" pos:end="55:17">file_type</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:28">BMP_FILE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="61:5">else <block pos:start="57:12" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:19">

        <goto pos:start="59:9" pos:end="59:19">goto <name pos:start="59:14" pos:end="59:18">error</name>;</goto>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="65:5" pos:end="65:23">/* check BMP bpp */</comment>

    <if_stmt pos:start="67:5" pos:end="77:5"><if pos:start="67:5" pos:end="77:5">if <condition pos:start="67:8" pos:end="67:30">(<expr pos:start="67:9" pos:end="67:29"><name pos:start="67:9" pos:end="67:17">file_type</name> <operator pos:start="67:19" pos:end="67:20">==</operator> <name pos:start="67:22" pos:end="67:29">BMP_FILE</name></expr>)</condition> <block pos:start="67:32" pos:end="77:5">{<block_content pos:start="69:9" pos:end="75:9">

        <expr_stmt pos:start="69:9" pos:end="69:62"><expr pos:start="69:9" pos:end="69:61"><name pos:start="69:9" pos:end="69:15">bmp_bpp</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <operator pos:start="69:19" pos:end="69:19">(</operator><name pos:start="69:20" pos:end="69:30"><name pos:start="69:20" pos:end="69:26">content</name><index pos:start="69:27" pos:end="69:30">[<expr pos:start="69:28" pos:end="69:29"><literal type="number" pos:start="69:28" pos:end="69:29">28</literal></expr>]</index></name> <operator pos:start="69:32" pos:end="69:32">+</operator> <operator pos:start="69:34" pos:end="69:34">(</operator><name pos:start="69:35" pos:end="69:45"><name pos:start="69:35" pos:end="69:41">content</name><index pos:start="69:42" pos:end="69:45">[<expr pos:start="69:43" pos:end="69:44"><literal type="number" pos:start="69:43" pos:end="69:44">29</literal></expr>]</index></name> <operator pos:start="69:47" pos:end="69:48">&lt;&lt;</operator> <literal type="number" pos:start="69:50" pos:end="69:50">8</literal><operator pos:start="69:51" pos:end="69:51">)</operator><operator pos:start="69:52" pos:end="69:52">)</operator> <operator pos:start="69:54" pos:end="69:54">&amp;</operator> <literal type="number" pos:start="69:56" pos:end="69:61">0xffff</literal></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="75:9"><if pos:start="71:9" pos:end="75:9">if <condition pos:start="71:12" pos:end="71:26">(<expr pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:19">bmp_bpp</name> <operator pos:start="71:21" pos:end="71:22">!=</operator> <literal type="number" pos:start="71:24" pos:end="71:25">24</literal></expr>)</condition> <block pos:start="71:28" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:23">

            <goto pos:start="73:13" pos:end="73:23">goto <name pos:start="73:18" pos:end="73:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="81:5" pos:end="81:23">/* return values */</comment>

    <expr_stmt pos:start="83:5" pos:end="83:28"><expr pos:start="83:5" pos:end="83:27"><operator pos:start="83:5" pos:end="83:5">*</operator><name pos:start="83:6" pos:end="83:15">file_typep</name> <operator pos:start="83:17" pos:end="83:17">=</operator> <name pos:start="83:19" pos:end="83:27">file_type</name></expr>;</expr_stmt>



    <return pos:start="87:5" pos:end="87:19">return <expr pos:start="87:12" pos:end="87:18"><name pos:start="87:12" pos:end="87:18">content</name></expr>;</return>



<label pos:start="91:1" pos:end="91:6"><name pos:start="91:1" pos:end="91:5">error</name>:</label>

    <expr_stmt pos:start="93:5" pos:end="95:44"><expr pos:start="93:5" pos:end="95:43"><call pos:start="93:5" pos:end="95:43"><name pos:start="93:5" pos:end="93:16">error_report</name><argument_list pos:start="93:17" pos:end="95:43">(<argument pos:start="93:18" pos:end="95:32"><expr pos:start="93:18" pos:end="95:32"><literal type="string" pos:start="93:18" pos:end="93:72">"splash file '%s' format not recognized; must be JPEG "</literal>

                 <literal type="string" pos:start="95:18" pos:end="95:32">"or 24 bit BMP"</literal></expr></argument>, <argument pos:start="95:35" pos:end="95:42"><expr pos:start="95:35" pos:end="95:42"><name pos:start="95:35" pos:end="95:42">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:20"><expr pos:start="97:5" pos:end="97:19"><call pos:start="97:5" pos:end="97:19"><name pos:start="97:5" pos:end="97:10">g_free</name><argument_list pos:start="97:11" pos:end="97:19">(<argument pos:start="97:12" pos:end="97:18"><expr pos:start="97:12" pos:end="97:18"><name pos:start="97:12" pos:end="97:18">content</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="99:5" pos:end="99:16">return <expr pos:start="99:12" pos:end="99:15"><name pos:start="99:12" pos:end="99:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
