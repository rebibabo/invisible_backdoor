<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10988.c" pos:tabs="8"><function pos:start="1:1" pos:end="207:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:27">pflash_read</name> <parameter_list pos:start="1:29" pos:end="3:47">(<parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:37">pflash_t</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">pfl</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:69"><decl pos:start="1:45" pos:end="1:69"><type pos:start="1:45" pos:end="1:69"><name pos:start="1:45" pos:end="1:62">target_phys_addr_t</name></type> <name pos:start="1:64" pos:end="1:69">offset</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:38"><decl pos:start="3:30" pos:end="3:38"><type pos:start="3:30" pos:end="3:38"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:38">width</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:46"><decl pos:start="3:41" pos:end="3:46"><type pos:start="3:41" pos:end="3:46"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:46">be</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="207:1">{<block_content pos:start="7:5" pos:end="205:15">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22">target_phys_addr_t</name></type> <name pos:start="7:24" pos:end="7:27">boff</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:14">p</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:65"><expr pos:start="15:5" pos:end="15:64"><call pos:start="15:5" pos:end="15:64"><name pos:start="15:5" pos:end="15:11">DPRINTF</name><argument_list pos:start="15:12" pos:end="15:64">(<argument pos:start="15:13" pos:end="15:45"><expr pos:start="15:13" pos:end="15:45"><literal type="string" pos:start="15:13" pos:end="15:25">"%s: offset "</literal> <name pos:start="15:27" pos:end="15:40">TARGET_FMT_plx</name> <literal type="string" pos:start="15:42" pos:end="15:45">"\n"</literal></expr></argument>, <argument pos:start="15:48" pos:end="15:55"><expr pos:start="15:48" pos:end="15:55"><name pos:start="15:48" pos:end="15:55">__func__</name></expr></argument>, <argument pos:start="15:58" pos:end="15:63"><expr pos:start="15:58" pos:end="15:63"><name pos:start="15:58" pos:end="15:63">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:13"><expr pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:7">ret</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <operator pos:start="17:11" pos:end="17:11">-</operator><literal type="number" pos:start="17:12" pos:end="17:12">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:22">(<expr pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:11">pfl</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:21">rom_mode</name></name></expr>)</condition> <block pos:start="19:24" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:43">

        <comment type="block" pos:start="21:9" pos:end="21:40">/* Lazy reset of to ROMD mode */</comment>

        <if_stmt pos:start="23:9" pos:end="25:43"><if pos:start="23:9" pos:end="25:43">if <condition pos:start="23:12" pos:end="23:29">(<expr pos:start="23:13" pos:end="23:28"><name pos:start="23:13" pos:end="23:23"><name pos:start="23:13" pos:end="23:15">pfl</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:23">wcycle</name></name> <operator pos:start="23:25" pos:end="23:26">==</operator> <literal type="number" pos:start="23:28" pos:end="23:28">0</literal></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:43"><block_content pos:start="25:13" pos:end="25:43">

            <expr_stmt pos:start="25:13" pos:end="25:43"><expr pos:start="25:13" pos:end="25:42"><call pos:start="25:13" pos:end="25:42"><name pos:start="25:13" pos:end="25:34">pflash_register_memory</name><argument_list pos:start="25:35" pos:end="25:42">(<argument pos:start="25:36" pos:end="25:38"><expr pos:start="25:36" pos:end="25:38"><name pos:start="25:36" pos:end="25:38">pfl</name></expr></argument>, <argument pos:start="25:41" pos:end="25:41"><expr pos:start="25:41" pos:end="25:41"><literal type="number" pos:start="25:41" pos:end="25:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:32"><expr pos:start="29:5" pos:end="29:31"><name pos:start="29:5" pos:end="29:10">offset</name> <operator pos:start="29:12" pos:end="29:13">&amp;=</operator> <name pos:start="29:15" pos:end="29:27"><name pos:start="29:15" pos:end="29:17">pfl</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:27">chip_len</name></name> <operator pos:start="29:29" pos:end="29:29">-</operator> <literal type="number" pos:start="29:31" pos:end="29:31">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:25"><expr pos:start="31:5" pos:end="31:24"><name pos:start="31:5" pos:end="31:8">boff</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <name pos:start="31:12" pos:end="31:17">offset</name> <operator pos:start="31:19" pos:end="31:19">&amp;</operator> <literal type="number" pos:start="31:21" pos:end="31:24">0xFF</literal></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:25"><if pos:start="33:5" pos:end="35:25">if <condition pos:start="33:8" pos:end="33:24">(<expr pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:11">pfl</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:18">width</name></name> <operator pos:start="33:20" pos:end="33:21">==</operator> <literal type="number" pos:start="33:23" pos:end="33:23">2</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:25"><block_content pos:start="35:9" pos:end="35:25">

        <expr_stmt pos:start="35:9" pos:end="35:25"><expr pos:start="35:9" pos:end="35:24"><name pos:start="35:9" pos:end="35:12">boff</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <name pos:start="35:16" pos:end="35:19">boff</name> <operator pos:start="35:21" pos:end="35:22">&gt;&gt;</operator> <literal type="number" pos:start="35:24" pos:end="35:24">1</literal></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="37:5" pos:end="39:25">else if <condition pos:start="37:13" pos:end="37:29">(<expr pos:start="37:14" pos:end="37:28"><name pos:start="37:14" pos:end="37:23"><name pos:start="37:14" pos:end="37:16">pfl</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:23">width</name></name> <operator pos:start="37:25" pos:end="37:26">==</operator> <literal type="number" pos:start="37:28" pos:end="37:28">4</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:25"><block_content pos:start="39:9" pos:end="39:25">

        <expr_stmt pos:start="39:9" pos:end="39:25"><expr pos:start="39:9" pos:end="39:24"><name pos:start="39:9" pos:end="39:12">boff</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <name pos:start="39:16" pos:end="39:19">boff</name> <operator pos:start="39:21" pos:end="39:22">&gt;&gt;</operator> <literal type="number" pos:start="39:24" pos:end="39:24">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <switch pos:start="41:5" pos:end="201:5">switch <condition pos:start="41:12" pos:end="41:21">(<expr pos:start="41:13" pos:end="41:20"><name pos:start="41:13" pos:end="41:20"><name pos:start="41:13" pos:end="41:15">pfl</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:20">cmd</name></name></expr>)</condition> <block pos:start="41:23" pos:end="201:5">{<block_content pos:start="43:5" pos:end="199:14">

    <default pos:start="43:5" pos:end="43:12">default:</default>

        <comment type="block" pos:start="45:9" pos:end="45:72">/* This should never happen : reset state &amp; treat it as a read*/</comment>

        <expr_stmt pos:start="47:9" pos:end="47:71"><expr pos:start="47:9" pos:end="47:70"><call pos:start="47:9" pos:end="47:70"><name pos:start="47:9" pos:end="47:15">DPRINTF</name><argument_list pos:start="47:16" pos:end="47:70">(<argument pos:start="47:17" pos:end="47:49"><expr pos:start="47:17" pos:end="47:49"><literal type="string" pos:start="47:17" pos:end="47:49">"%s: unknown command state: %x\n"</literal></expr></argument>, <argument pos:start="47:52" pos:end="47:59"><expr pos:start="47:52" pos:end="47:59"><name pos:start="47:52" pos:end="47:59">__func__</name></expr></argument>, <argument pos:start="47:62" pos:end="47:69"><expr pos:start="47:62" pos:end="47:69"><name pos:start="47:62" pos:end="47:69"><name pos:start="47:62" pos:end="47:64">pfl</name><operator pos:start="47:65" pos:end="47:66">-&gt;</operator><name pos:start="47:67" pos:end="47:69">cmd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:24"><expr pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:11">pfl</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:19">wcycle</name></name> <operator pos:start="49:21" pos:end="49:21">=</operator> <literal type="number" pos:start="49:23" pos:end="49:23">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:21"><expr pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:11">pfl</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:16">cmd</name></name> <operator pos:start="51:18" pos:end="51:18">=</operator> <literal type="number" pos:start="51:20" pos:end="51:20">0</literal></expr>;</expr_stmt>

    <case pos:start="53:5" pos:end="53:14">case <expr pos:start="53:10" pos:end="53:13"><literal type="number" pos:start="53:10" pos:end="53:13">0x80</literal></expr>:</case>

        <comment type="block" pos:start="55:9" pos:end="55:62">/* We accept reads during second unlock sequence... */</comment>

    <case pos:start="57:5" pos:end="57:14">case <expr pos:start="57:10" pos:end="57:13"><literal type="number" pos:start="57:10" pos:end="57:13">0x00</literal></expr>:</case>

    <label pos:start="59:5" pos:end="59:15"><name pos:start="59:5" pos:end="59:14">flash_read</name>:</label>

        <comment type="block" pos:start="61:9" pos:end="61:29">/* Flash area read */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:25"><expr pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:9">p</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <name pos:start="63:13" pos:end="63:24"><name pos:start="63:13" pos:end="63:15">pfl</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:24">storage</name></name></expr>;</expr_stmt>

        <switch pos:start="65:9" pos:end="123:9">switch <condition pos:start="65:16" pos:end="65:22">(<expr pos:start="65:17" pos:end="65:21"><name pos:start="65:17" pos:end="65:21">width</name></expr>)</condition> <block pos:start="65:24" pos:end="123:9">{<block_content pos:start="67:9" pos:end="121:18">

        <case pos:start="67:9" pos:end="67:15">case <expr pos:start="67:14" pos:end="67:14"><literal type="number" pos:start="67:14" pos:end="67:14">1</literal></expr>:</case>

            <expr_stmt pos:start="69:13" pos:end="69:28"><expr pos:start="69:13" pos:end="69:27"><name pos:start="69:13" pos:end="69:15">ret</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <name pos:start="69:19" pos:end="69:27"><name pos:start="69:19" pos:end="69:19">p</name><index pos:start="69:20" pos:end="69:27">[<expr pos:start="69:21" pos:end="69:26"><name pos:start="69:21" pos:end="69:26">offset</name></expr>]</index></name></expr>;</expr_stmt>

<comment type="line" pos:start="71:1" pos:end="71:76">//            DPRINTF("%s: data offset %08x %02x\n", __func__, offset, ret);</comment>

            <break pos:start="73:13" pos:end="73:18">break;</break>

        <case pos:start="75:9" pos:end="75:15">case <expr pos:start="75:14" pos:end="75:14"><literal type="number" pos:start="75:14" pos:end="75:14">2</literal></expr>:</case>

            <if_stmt pos:start="77:13" pos:end="89:13"><if pos:start="77:13" pos:end="83:13">if <condition pos:start="77:16" pos:end="77:19">(<expr pos:start="77:17" pos:end="77:18"><name pos:start="77:17" pos:end="77:18">be</name></expr>)</condition> <block pos:start="77:21" pos:end="83:13">{<block_content pos:start="79:17" pos:end="81:37">

                <expr_stmt pos:start="79:17" pos:end="79:37"><expr pos:start="79:17" pos:end="79:36"><name pos:start="79:17" pos:end="79:19">ret</name> <operator pos:start="79:21" pos:end="79:21">=</operator> <name pos:start="79:23" pos:end="79:31"><name pos:start="79:23" pos:end="79:23">p</name><index pos:start="79:24" pos:end="79:31">[<expr pos:start="79:25" pos:end="79:30"><name pos:start="79:25" pos:end="79:30">offset</name></expr>]</index></name> <operator pos:start="79:33" pos:end="79:34">&lt;&lt;</operator> <literal type="number" pos:start="79:36" pos:end="79:36">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:37"><expr pos:start="81:17" pos:end="81:36"><name pos:start="81:17" pos:end="81:19">ret</name> <operator pos:start="81:21" pos:end="81:22">|=</operator> <name pos:start="81:24" pos:end="81:36"><name pos:start="81:24" pos:end="81:24">p</name><index pos:start="81:25" pos:end="81:36">[<expr pos:start="81:26" pos:end="81:35"><name pos:start="81:26" pos:end="81:31">offset</name> <operator pos:start="81:33" pos:end="81:33">+</operator> <literal type="number" pos:start="81:35" pos:end="81:35">1</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="83:15" pos:end="89:13">else <block pos:start="83:20" pos:end="89:13">{<block_content pos:start="85:17" pos:end="87:42">

                <expr_stmt pos:start="85:17" pos:end="85:32"><expr pos:start="85:17" pos:end="85:31"><name pos:start="85:17" pos:end="85:19">ret</name> <operator pos:start="85:21" pos:end="85:21">=</operator> <name pos:start="85:23" pos:end="85:31"><name pos:start="85:23" pos:end="85:23">p</name><index pos:start="85:24" pos:end="85:31">[<expr pos:start="85:25" pos:end="85:30"><name pos:start="85:25" pos:end="85:30">offset</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:42"><expr pos:start="87:17" pos:end="87:41"><name pos:start="87:17" pos:end="87:19">ret</name> <operator pos:start="87:21" pos:end="87:22">|=</operator> <name pos:start="87:24" pos:end="87:36"><name pos:start="87:24" pos:end="87:24">p</name><index pos:start="87:25" pos:end="87:36">[<expr pos:start="87:26" pos:end="87:35"><name pos:start="87:26" pos:end="87:31">offset</name> <operator pos:start="87:33" pos:end="87:33">+</operator> <literal type="number" pos:start="87:35" pos:end="87:35">1</literal></expr>]</index></name> <operator pos:start="87:38" pos:end="87:39">&lt;&lt;</operator> <literal type="number" pos:start="87:41" pos:end="87:41">8</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

<comment type="line" pos:start="91:1" pos:end="91:76">//            DPRINTF("%s: data offset %08x %04x\n", __func__, offset, ret);</comment>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        <case pos:start="95:9" pos:end="95:15">case <expr pos:start="95:14" pos:end="95:14"><literal type="number" pos:start="95:14" pos:end="95:14">4</literal></expr>:</case>

            <if_stmt pos:start="97:13" pos:end="117:13"><if pos:start="97:13" pos:end="107:13">if <condition pos:start="97:16" pos:end="97:19">(<expr pos:start="97:17" pos:end="97:18"><name pos:start="97:17" pos:end="97:18">be</name></expr>)</condition> <block pos:start="97:21" pos:end="107:13">{<block_content pos:start="99:17" pos:end="105:37">

                <expr_stmt pos:start="99:17" pos:end="99:38"><expr pos:start="99:17" pos:end="99:37"><name pos:start="99:17" pos:end="99:19">ret</name> <operator pos:start="99:21" pos:end="99:21">=</operator> <name pos:start="99:23" pos:end="99:31"><name pos:start="99:23" pos:end="99:23">p</name><index pos:start="99:24" pos:end="99:31">[<expr pos:start="99:25" pos:end="99:30"><name pos:start="99:25" pos:end="99:30">offset</name></expr>]</index></name> <operator pos:start="99:33" pos:end="99:34">&lt;&lt;</operator> <literal type="number" pos:start="99:36" pos:end="99:37">24</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:43"><expr pos:start="101:17" pos:end="101:42"><name pos:start="101:17" pos:end="101:19">ret</name> <operator pos:start="101:21" pos:end="101:22">|=</operator> <name pos:start="101:24" pos:end="101:36"><name pos:start="101:24" pos:end="101:24">p</name><index pos:start="101:25" pos:end="101:36">[<expr pos:start="101:26" pos:end="101:35"><name pos:start="101:26" pos:end="101:31">offset</name> <operator pos:start="101:33" pos:end="101:33">+</operator> <literal type="number" pos:start="101:35" pos:end="101:35">1</literal></expr>]</index></name> <operator pos:start="101:38" pos:end="101:39">&lt;&lt;</operator> <literal type="number" pos:start="101:41" pos:end="101:42">16</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:42"><expr pos:start="103:17" pos:end="103:41"><name pos:start="103:17" pos:end="103:19">ret</name> <operator pos:start="103:21" pos:end="103:22">|=</operator> <name pos:start="103:24" pos:end="103:36"><name pos:start="103:24" pos:end="103:24">p</name><index pos:start="103:25" pos:end="103:36">[<expr pos:start="103:26" pos:end="103:35"><name pos:start="103:26" pos:end="103:31">offset</name> <operator pos:start="103:33" pos:end="103:33">+</operator> <literal type="number" pos:start="103:35" pos:end="103:35">2</literal></expr>]</index></name> <operator pos:start="103:38" pos:end="103:39">&lt;&lt;</operator> <literal type="number" pos:start="103:41" pos:end="103:41">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:37"><expr pos:start="105:17" pos:end="105:36"><name pos:start="105:17" pos:end="105:19">ret</name> <operator pos:start="105:21" pos:end="105:22">|=</operator> <name pos:start="105:24" pos:end="105:36"><name pos:start="105:24" pos:end="105:24">p</name><index pos:start="105:25" pos:end="105:36">[<expr pos:start="105:26" pos:end="105:35"><name pos:start="105:26" pos:end="105:31">offset</name> <operator pos:start="105:33" pos:end="105:33">+</operator> <literal type="number" pos:start="105:35" pos:end="105:35">3</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="107:15" pos:end="117:13">else <block pos:start="107:20" pos:end="117:13">{<block_content pos:start="109:17" pos:end="115:43">

                <expr_stmt pos:start="109:17" pos:end="109:32"><expr pos:start="109:17" pos:end="109:31"><name pos:start="109:17" pos:end="109:19">ret</name> <operator pos:start="109:21" pos:end="109:21">=</operator> <name pos:start="109:23" pos:end="109:31"><name pos:start="109:23" pos:end="109:23">p</name><index pos:start="109:24" pos:end="109:31">[<expr pos:start="109:25" pos:end="109:30"><name pos:start="109:25" pos:end="109:30">offset</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:42"><expr pos:start="111:17" pos:end="111:41"><name pos:start="111:17" pos:end="111:19">ret</name> <operator pos:start="111:21" pos:end="111:22">|=</operator> <name pos:start="111:24" pos:end="111:36"><name pos:start="111:24" pos:end="111:24">p</name><index pos:start="111:25" pos:end="111:36">[<expr pos:start="111:26" pos:end="111:35"><name pos:start="111:26" pos:end="111:31">offset</name> <operator pos:start="111:33" pos:end="111:33">+</operator> <literal type="number" pos:start="111:35" pos:end="111:35">1</literal></expr>]</index></name> <operator pos:start="111:38" pos:end="111:39">&lt;&lt;</operator> <literal type="number" pos:start="111:41" pos:end="111:41">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:43"><expr pos:start="113:17" pos:end="113:42"><name pos:start="113:17" pos:end="113:19">ret</name> <operator pos:start="113:21" pos:end="113:22">|=</operator> <name pos:start="113:24" pos:end="113:36"><name pos:start="113:24" pos:end="113:24">p</name><index pos:start="113:25" pos:end="113:36">[<expr pos:start="113:26" pos:end="113:35"><name pos:start="113:26" pos:end="113:31">offset</name> <operator pos:start="113:33" pos:end="113:33">+</operator> <literal type="number" pos:start="113:35" pos:end="113:35">2</literal></expr>]</index></name> <operator pos:start="113:38" pos:end="113:39">&lt;&lt;</operator> <literal type="number" pos:start="113:41" pos:end="113:42">16</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:43"><expr pos:start="115:17" pos:end="115:42"><name pos:start="115:17" pos:end="115:19">ret</name> <operator pos:start="115:21" pos:end="115:22">|=</operator> <name pos:start="115:24" pos:end="115:36"><name pos:start="115:24" pos:end="115:24">p</name><index pos:start="115:25" pos:end="115:36">[<expr pos:start="115:26" pos:end="115:35"><name pos:start="115:26" pos:end="115:31">offset</name> <operator pos:start="115:33" pos:end="115:33">+</operator> <literal type="number" pos:start="115:35" pos:end="115:35">3</literal></expr>]</index></name> <operator pos:start="115:38" pos:end="115:39">&lt;&lt;</operator> <literal type="number" pos:start="115:41" pos:end="115:42">24</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

<comment type="line" pos:start="119:1" pos:end="119:76">//            DPRINTF("%s: data offset %08x %08x\n", __func__, offset, ret);</comment>

            <break pos:start="121:13" pos:end="121:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="125:9" pos:end="125:14">break;</break>

    <case pos:start="127:5" pos:end="127:14">case <expr pos:start="127:10" pos:end="127:13"><literal type="number" pos:start="127:10" pos:end="127:13">0x90</literal></expr>:</case>

        <comment type="block" pos:start="129:9" pos:end="129:27">/* flash ID read */</comment>

        <switch pos:start="131:9" pos:end="163:9">switch <condition pos:start="131:16" pos:end="131:21">(<expr pos:start="131:17" pos:end="131:20"><name pos:start="131:17" pos:end="131:20">boff</name></expr>)</condition> <block pos:start="131:23" pos:end="163:9">{<block_content pos:start="133:9" pos:end="161:28">

        <case pos:start="133:9" pos:end="133:18">case <expr pos:start="133:14" pos:end="133:17"><literal type="number" pos:start="133:14" pos:end="133:17">0x00</literal></expr>:</case>

        <case pos:start="135:9" pos:end="135:18">case <expr pos:start="135:14" pos:end="135:17"><literal type="number" pos:start="135:14" pos:end="135:17">0x01</literal></expr>:</case>

            <expr_stmt pos:start="137:13" pos:end="137:42"><expr pos:start="137:13" pos:end="137:41"><name pos:start="137:13" pos:end="137:15">ret</name> <operator pos:start="137:17" pos:end="137:17">=</operator> <name pos:start="137:19" pos:end="137:41"><name pos:start="137:19" pos:end="137:21">pfl</name><operator pos:start="137:22" pos:end="137:23">-&gt;</operator><name pos:start="137:24" pos:end="137:28">ident</name><index pos:start="137:29" pos:end="137:41">[<expr pos:start="137:30" pos:end="137:40"><name pos:start="137:30" pos:end="137:33">boff</name> <operator pos:start="137:35" pos:end="137:35">&amp;</operator> <literal type="number" pos:start="137:37" pos:end="137:40">0x01</literal></expr>]</index></name></expr>;</expr_stmt>

            <break pos:start="139:13" pos:end="139:18">break;</break>

        <case pos:start="141:9" pos:end="141:18">case <expr pos:start="141:14" pos:end="141:17"><literal type="number" pos:start="141:14" pos:end="141:17">0x02</literal></expr>:</case>

            <expr_stmt pos:start="143:13" pos:end="143:23"><expr pos:start="143:13" pos:end="143:22"><name pos:start="143:13" pos:end="143:15">ret</name> <operator pos:start="143:17" pos:end="143:17">=</operator> <literal type="number" pos:start="143:19" pos:end="143:22">0x00</literal></expr>;</expr_stmt> <comment type="block" pos:start="143:25" pos:end="143:65">/* Pretend all sectors are unprotected */</comment>

            <break pos:start="145:13" pos:end="145:18">break;</break>

        <case pos:start="147:9" pos:end="147:18">case <expr pos:start="147:14" pos:end="147:17"><literal type="number" pos:start="147:14" pos:end="147:17">0x0E</literal></expr>:</case>

        <case pos:start="149:9" pos:end="149:18">case <expr pos:start="149:14" pos:end="149:17"><literal type="number" pos:start="149:14" pos:end="149:17">0x0F</literal></expr>:</case>

            <if_stmt pos:start="151:13" pos:end="153:32"><if pos:start="151:13" pos:end="153:32">if <condition pos:start="151:16" pos:end="151:61">(<expr pos:start="151:17" pos:end="151:60"><name pos:start="151:17" pos:end="151:45"><name pos:start="151:17" pos:end="151:19">pfl</name><operator pos:start="151:20" pos:end="151:21">-&gt;</operator><name pos:start="151:22" pos:end="151:26">ident</name><index pos:start="151:27" pos:end="151:45">[<expr pos:start="151:28" pos:end="151:44"><literal type="number" pos:start="151:28" pos:end="151:28">2</literal> <operator pos:start="151:30" pos:end="151:30">+</operator> <operator pos:start="151:32" pos:end="151:32">(</operator><name pos:start="151:33" pos:end="151:36">boff</name> <operator pos:start="151:38" pos:end="151:38">&amp;</operator> <literal type="number" pos:start="151:40" pos:end="151:43">0x01</literal><operator pos:start="151:44" pos:end="151:44">)</operator></expr>]</index></name> <operator pos:start="151:47" pos:end="151:48">==</operator> <operator pos:start="151:50" pos:end="151:50">(</operator><name pos:start="151:51" pos:end="151:57">uint8_t</name><operator pos:start="151:58" pos:end="151:58">)</operator><operator pos:start="151:59" pos:end="151:59">-</operator><literal type="number" pos:start="151:60" pos:end="151:60">1</literal></expr>)</condition><block type="pseudo" pos:start="153:17" pos:end="153:32"><block_content pos:start="153:17" pos:end="153:32">

                <goto pos:start="153:17" pos:end="153:32">goto <name pos:start="153:22" pos:end="153:31">flash_read</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:48"><expr pos:start="155:13" pos:end="155:47"><name pos:start="155:13" pos:end="155:15">ret</name> <operator pos:start="155:17" pos:end="155:17">=</operator> <name pos:start="155:19" pos:end="155:47"><name pos:start="155:19" pos:end="155:21">pfl</name><operator pos:start="155:22" pos:end="155:23">-&gt;</operator><name pos:start="155:24" pos:end="155:28">ident</name><index pos:start="155:29" pos:end="155:47">[<expr pos:start="155:30" pos:end="155:46"><literal type="number" pos:start="155:30" pos:end="155:32">2</literal> <operator pos:start="155:32" pos:end="155:32">+</operator> <operator pos:start="155:34" pos:end="155:34">(</operator><name pos:start="155:35" pos:end="155:38">boff</name> <operator pos:start="155:40" pos:end="155:40">&amp;</operator> <literal type="number" pos:start="155:42" pos:end="155:45">0x01</literal><operator pos:start="155:46" pos:end="155:46">)</operator></expr>]</index></name></expr>;</expr_stmt>

            <break pos:start="157:13" pos:end="157:18">break;</break>

        <default pos:start="159:9" pos:end="159:16">default:</default>

            <goto pos:start="161:13" pos:end="161:28">goto <name pos:start="161:18" pos:end="161:27">flash_read</name>;</goto>

        </block_content>}</block></switch>

        <expr_stmt pos:start="165:9" pos:end="165:71"><expr pos:start="165:9" pos:end="165:70"><call pos:start="165:9" pos:end="165:70"><name pos:start="165:9" pos:end="165:15">DPRINTF</name><argument_list pos:start="165:16" pos:end="165:70">(<argument pos:start="165:17" pos:end="165:48"><expr pos:start="165:17" pos:end="165:48"><literal type="string" pos:start="165:17" pos:end="165:25">"%s: ID "</literal> <name pos:start="165:27" pos:end="165:40">TARGET_FMT_pld</name> <literal type="string" pos:start="165:42" pos:end="165:48">" %x\n"</literal></expr></argument>, <argument pos:start="165:51" pos:end="165:58"><expr pos:start="165:51" pos:end="165:58"><name pos:start="165:51" pos:end="165:58">__func__</name></expr></argument>, <argument pos:start="165:61" pos:end="165:64"><expr pos:start="165:61" pos:end="165:64"><name pos:start="165:61" pos:end="165:64">boff</name></expr></argument>, <argument pos:start="165:67" pos:end="165:69"><expr pos:start="165:67" pos:end="165:69"><name pos:start="165:67" pos:end="165:69">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="167:9" pos:end="167:14">break;</break>

    <case pos:start="169:5" pos:end="169:14">case <expr pos:start="169:10" pos:end="169:13"><literal type="number" pos:start="169:10" pos:end="169:13">0xA0</literal></expr>:</case>

    <case pos:start="171:5" pos:end="171:14">case <expr pos:start="171:10" pos:end="171:13"><literal type="number" pos:start="171:10" pos:end="171:13">0x10</literal></expr>:</case>

    <case pos:start="173:5" pos:end="173:14">case <expr pos:start="173:10" pos:end="173:13"><literal type="number" pos:start="173:10" pos:end="173:13">0x30</literal></expr>:</case>

        <comment type="block" pos:start="175:9" pos:end="175:34">/* Status register read */</comment>

        <expr_stmt pos:start="177:9" pos:end="177:26"><expr pos:start="177:9" pos:end="177:25"><name pos:start="177:9" pos:end="177:11">ret</name> <operator pos:start="177:13" pos:end="177:13">=</operator> <name pos:start="177:15" pos:end="177:25"><name pos:start="177:15" pos:end="177:17">pfl</name><operator pos:start="177:18" pos:end="177:19">-&gt;</operator><name pos:start="177:20" pos:end="177:25">status</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:50"><expr pos:start="179:9" pos:end="179:49"><call pos:start="179:9" pos:end="179:49"><name pos:start="179:9" pos:end="179:15">DPRINTF</name><argument_list pos:start="179:16" pos:end="179:49">(<argument pos:start="179:17" pos:end="179:33"><expr pos:start="179:17" pos:end="179:33"><literal type="string" pos:start="179:17" pos:end="179:33">"%s: status %x\n"</literal></expr></argument>, <argument pos:start="179:36" pos:end="179:43"><expr pos:start="179:36" pos:end="179:43"><name pos:start="179:36" pos:end="179:43">__func__</name></expr></argument>, <argument pos:start="179:46" pos:end="179:48"><expr pos:start="179:46" pos:end="179:48"><name pos:start="179:46" pos:end="179:48">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="181:9" pos:end="181:26">/* Toggle bit 6 */</comment>

        <expr_stmt pos:start="183:9" pos:end="183:28"><expr pos:start="183:9" pos:end="183:27"><name pos:start="183:9" pos:end="183:19"><name pos:start="183:9" pos:end="183:11">pfl</name><operator pos:start="183:12" pos:end="183:13">-&gt;</operator><name pos:start="183:14" pos:end="183:19">status</name></name> <operator pos:start="183:21" pos:end="183:22">^=</operator> <literal type="number" pos:start="183:24" pos:end="183:27">0x40</literal></expr>;</expr_stmt>

        <break pos:start="185:9" pos:end="185:14">break;</break>

    <case pos:start="187:5" pos:end="187:14">case <expr pos:start="187:10" pos:end="187:13"><literal type="number" pos:start="187:10" pos:end="187:13">0x98</literal></expr>:</case>

        <comment type="block" pos:start="189:9" pos:end="189:28">/* CFI query mode */</comment>

        <if_stmt pos:start="191:9" pos:end="197:39"><if pos:start="191:9" pos:end="193:20">if <condition pos:start="191:12" pos:end="191:32">(<expr pos:start="191:13" pos:end="191:31"><name pos:start="191:13" pos:end="191:16">boff</name> <operator pos:start="191:18" pos:end="191:18">&gt;</operator> <name pos:start="191:20" pos:end="191:31"><name pos:start="191:20" pos:end="191:22">pfl</name><operator pos:start="191:23" pos:end="191:24">-&gt;</operator><name pos:start="191:25" pos:end="191:31">cfi_len</name></name></expr>)</condition><block type="pseudo" pos:start="193:13" pos:end="193:20"><block_content pos:start="193:13" pos:end="193:20">

            <expr_stmt pos:start="193:13" pos:end="193:20"><expr pos:start="193:13" pos:end="193:19"><name pos:start="193:13" pos:end="193:15">ret</name> <operator pos:start="193:17" pos:end="193:17">=</operator> <literal type="number" pos:start="193:19" pos:end="193:19">0</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="195:9" pos:end="197:39">else<block type="pseudo" pos:start="197:13" pos:end="197:39"><block_content pos:start="197:13" pos:end="197:39">

            <expr_stmt pos:start="197:13" pos:end="197:39"><expr pos:start="197:13" pos:end="197:38"><name pos:start="197:13" pos:end="197:15">ret</name> <operator pos:start="197:17" pos:end="197:17">=</operator> <name pos:start="197:19" pos:end="197:38"><name pos:start="197:19" pos:end="197:21">pfl</name><operator pos:start="197:22" pos:end="197:23">-&gt;</operator><name pos:start="197:24" pos:end="197:32">cfi_table</name><index pos:start="197:33" pos:end="197:38">[<expr pos:start="197:34" pos:end="197:37"><name pos:start="197:34" pos:end="197:37">boff</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="199:9" pos:end="199:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="205:5" pos:end="205:15">return <expr pos:start="205:12" pos:end="205:14"><name pos:start="205:12" pos:end="205:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
