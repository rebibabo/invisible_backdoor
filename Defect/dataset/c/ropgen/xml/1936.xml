<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1936.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">udp_read_packet</name><parameter_list pos:start="1:27" pos:end="3:54">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:68"><decl pos:start="1:48" pos:end="1:68"><type pos:start="1:48" pos:end="1:68"><name pos:start="1:48" pos:end="1:57">RTSPStream</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier><modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:68">prtsp_st</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:39"><decl pos:start="3:28" pos:end="3:39"><type pos:start="3:28" pos:end="3:39"><name pos:start="3:28" pos:end="3:34">uint8_t</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:39">buf</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:53"><decl pos:start="3:42" pos:end="3:53"><type pos:start="3:42" pos:end="3:53"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:53">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="103:1">{<block_content pos:start="7:5" pos:end="101:5">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">RTSPState</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">rt</name> <init pos:start="7:19" pos:end="7:32">= <expr pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:21">s</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">RTSPStream</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:23">rtsp_st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">fd_set</name></type> <name pos:start="11:12" pos:end="11:15">rfds</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:10"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">fd</name></decl>, <decl pos:start="13:13" pos:end="13:18"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:13" pos:end="13:18">fd_max</name></decl>, <decl pos:start="13:21" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:21" pos:end="13:21">n</name></decl>, <decl pos:start="13:24" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:24" pos:end="13:24">i</name></decl>, <decl pos:start="13:27" pos:end="13:29"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:27" pos:end="13:29">ret</name></decl>, <decl pos:start="13:32" pos:end="13:37"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:32" pos:end="13:37">tcp_fd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:18">timeval</name></name></type> <name pos:start="15:20" pos:end="15:21">tv</name></decl>;</decl_stmt>



    <for pos:start="19:5" pos:end="101:5">for<control pos:start="19:8" pos:end="19:11">(<init pos:start="19:9" pos:end="19:9">;</init><condition pos:start="19:10" pos:end="19:10">;</condition><incr/>)</control> <block pos:start="19:13" pos:end="101:5">{<block_content pos:start="21:9" pos:end="99:9">

        <if_stmt pos:start="21:9" pos:end="23:34"><if pos:start="21:9" pos:end="23:34">if <condition pos:start="21:12" pos:end="21:31">(<expr pos:start="21:13" pos:end="21:30"><call pos:start="21:13" pos:end="21:30"><name pos:start="21:13" pos:end="21:28">url_interrupt_cb</name><argument_list pos:start="21:29" pos:end="21:30">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:34"><block_content pos:start="23:13" pos:end="23:34">

            <return pos:start="23:13" pos:end="23:34">return <expr pos:start="23:20" pos:end="23:33"><call pos:start="23:20" pos:end="23:33"><name pos:start="23:20" pos:end="23:26">AVERROR</name><argument_list pos:start="23:27" pos:end="23:33">(<argument pos:start="23:28" pos:end="23:32"><expr pos:start="23:28" pos:end="23:32"><name pos:start="23:28" pos:end="23:32">EINTR</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:23"><expr pos:start="25:9" pos:end="25:22"><call pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:15">FD_ZERO</name><argument_list pos:start="25:16" pos:end="25:22">(<argument pos:start="25:17" pos:end="25:21"><expr pos:start="25:17" pos:end="25:21"><operator pos:start="25:17" pos:end="25:17">&amp;</operator><name pos:start="25:18" pos:end="25:21">rfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:59"><expr pos:start="27:9" pos:end="27:58"><name pos:start="27:9" pos:end="27:14">tcp_fd</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <name pos:start="27:18" pos:end="27:23">fd_max</name> <operator pos:start="27:25" pos:end="27:25">=</operator> <call pos:start="27:27" pos:end="27:58"><name pos:start="27:27" pos:end="27:45">url_get_file_handle</name><argument_list pos:start="27:46" pos:end="27:58">(<argument pos:start="27:47" pos:end="27:57"><expr pos:start="27:47" pos:end="27:57"><name pos:start="27:47" pos:end="27:57"><name pos:start="27:47" pos:end="27:48">rt</name><operator pos:start="27:49" pos:end="27:50">-&gt;</operator><name pos:start="27:51" pos:end="27:57">rtsp_hd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:30"><expr pos:start="29:9" pos:end="29:29"><call pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:14">FD_SET</name><argument_list pos:start="29:15" pos:end="29:29">(<argument pos:start="29:16" pos:end="29:21"><expr pos:start="29:16" pos:end="29:21"><name pos:start="29:16" pos:end="29:21">tcp_fd</name></expr></argument>, <argument pos:start="29:24" pos:end="29:28"><expr pos:start="29:24" pos:end="29:28"><operator pos:start="29:24" pos:end="29:24">&amp;</operator><name pos:start="29:25" pos:end="29:28">rfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="31:9" pos:end="51:9">for<control pos:start="31:12" pos:end="31:48">(<init pos:start="31:13" pos:end="31:18"><expr pos:start="31:13" pos:end="31:17"><name pos:start="31:13" pos:end="31:13">i</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <literal type="number" pos:start="31:17" pos:end="31:17">0</literal></expr>;</init> <condition pos:start="31:20" pos:end="31:43"><expr pos:start="31:20" pos:end="31:42"><name pos:start="31:20" pos:end="31:20">i</name> <operator pos:start="31:22" pos:end="31:22">&lt;</operator> <name pos:start="31:24" pos:end="31:42"><name pos:start="31:24" pos:end="31:25">rt</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:42">nb_rtsp_streams</name></name></expr>;</condition> <incr pos:start="31:45" pos:end="31:47"><expr pos:start="31:45" pos:end="31:47"><name pos:start="31:45" pos:end="31:45">i</name><operator pos:start="31:46" pos:end="31:47">++</operator></expr></incr>)</control> <block pos:start="31:50" pos:end="51:9">{<block_content pos:start="33:13" pos:end="49:13">

            <expr_stmt pos:start="33:13" pos:end="33:42"><expr pos:start="33:13" pos:end="33:41"><name pos:start="33:13" pos:end="33:19">rtsp_st</name> <operator pos:start="33:21" pos:end="33:21">=</operator> <name pos:start="33:23" pos:end="33:41"><name pos:start="33:23" pos:end="33:24">rt</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:38">rtsp_streams</name><index pos:start="33:39" pos:end="33:41">[<expr pos:start="33:40" pos:end="33:40"><name pos:start="33:40" pos:end="33:40">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="35:13" pos:end="49:13"><if pos:start="35:13" pos:end="49:13">if <condition pos:start="35:16" pos:end="35:36">(<expr pos:start="35:17" pos:end="35:35"><name pos:start="35:17" pos:end="35:35"><name pos:start="35:17" pos:end="35:23">rtsp_st</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:35">rtp_handle</name></name></expr>)</condition> <block pos:start="35:38" pos:end="49:13">{<block_content pos:start="41:17" pos:end="47:34">

                <comment type="block" pos:start="37:17" pos:end="39:43">/* currently, we cannot probe RTCP handle because of

                 * blocking restrictions */</comment>

                <expr_stmt pos:start="41:17" pos:end="41:62"><expr pos:start="41:17" pos:end="41:61"><name pos:start="41:17" pos:end="41:18">fd</name> <operator pos:start="41:20" pos:end="41:20">=</operator> <call pos:start="41:22" pos:end="41:61"><name pos:start="41:22" pos:end="41:40">url_get_file_handle</name><argument_list pos:start="41:41" pos:end="41:61">(<argument pos:start="41:42" pos:end="41:60"><expr pos:start="41:42" pos:end="41:60"><name pos:start="41:42" pos:end="41:60"><name pos:start="41:42" pos:end="41:48">rtsp_st</name><operator pos:start="41:49" pos:end="41:50">-&gt;</operator><name pos:start="41:51" pos:end="41:60">rtp_handle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="43:17" pos:end="45:32"><if pos:start="43:17" pos:end="45:32">if <condition pos:start="43:20" pos:end="43:32">(<expr pos:start="43:21" pos:end="43:31"><name pos:start="43:21" pos:end="43:22">fd</name> <operator pos:start="43:24" pos:end="43:24">&gt;</operator> <name pos:start="43:26" pos:end="43:31">fd_max</name></expr>)</condition><block type="pseudo" pos:start="45:21" pos:end="45:32"><block_content pos:start="45:21" pos:end="45:32">

                    <expr_stmt pos:start="45:21" pos:end="45:32"><expr pos:start="45:21" pos:end="45:31"><name pos:start="45:21" pos:end="45:26">fd_max</name> <operator pos:start="45:28" pos:end="45:28">=</operator> <name pos:start="45:30" pos:end="45:31">fd</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:34"><expr pos:start="47:17" pos:end="47:33"><call pos:start="47:17" pos:end="47:33"><name pos:start="47:17" pos:end="47:22">FD_SET</name><argument_list pos:start="47:23" pos:end="47:33">(<argument pos:start="47:24" pos:end="47:25"><expr pos:start="47:24" pos:end="47:25"><name pos:start="47:24" pos:end="47:25">fd</name></expr></argument>, <argument pos:start="47:28" pos:end="47:32"><expr pos:start="47:28" pos:end="47:32"><operator pos:start="47:28" pos:end="47:28">&amp;</operator><name pos:start="47:29" pos:end="47:32">rfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="53:9" pos:end="53:22"><expr pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:10">tv</name><operator pos:start="53:11" pos:end="53:11">.</operator><name pos:start="53:12" pos:end="53:17">tv_sec</name></name> <operator pos:start="53:19" pos:end="53:19">=</operator> <literal type="number" pos:start="53:21" pos:end="53:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:32"><expr pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:10">tv</name><operator pos:start="55:11" pos:end="55:11">.</operator><name pos:start="55:12" pos:end="55:18">tv_usec</name></name> <operator pos:start="55:20" pos:end="55:20">=</operator> <literal type="number" pos:start="55:22" pos:end="55:24">100</literal> <operator pos:start="55:26" pos:end="55:26">*</operator> <literal type="number" pos:start="55:28" pos:end="55:31">1000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:55"><expr pos:start="57:9" pos:end="57:54"><name pos:start="57:9" pos:end="57:9">n</name> <operator pos:start="57:11" pos:end="57:11">=</operator> <call pos:start="57:13" pos:end="57:54"><name pos:start="57:13" pos:end="57:18">select</name><argument_list pos:start="57:19" pos:end="57:54">(<argument pos:start="57:20" pos:end="57:29"><expr pos:start="57:20" pos:end="57:29"><name pos:start="57:20" pos:end="57:25">fd_max</name> <operator pos:start="57:27" pos:end="57:27">+</operator> <literal type="number" pos:start="57:29" pos:end="57:29">1</literal></expr></argument>, <argument pos:start="57:32" pos:end="57:36"><expr pos:start="57:32" pos:end="57:36"><operator pos:start="57:32" pos:end="57:32">&amp;</operator><name pos:start="57:33" pos:end="57:36">rfds</name></expr></argument>, <argument pos:start="57:39" pos:end="57:42"><expr pos:start="57:39" pos:end="57:42"><name pos:start="57:39" pos:end="57:42">NULL</name></expr></argument>, <argument pos:start="57:45" pos:end="57:48"><expr pos:start="57:45" pos:end="57:48"><name pos:start="57:45" pos:end="57:48">NULL</name></expr></argument>, <argument pos:start="57:51" pos:end="57:53"><expr pos:start="57:51" pos:end="57:53"><operator pos:start="57:51" pos:end="57:51">&amp;</operator><name pos:start="57:52" pos:end="57:53">tv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="99:9"><if pos:start="59:9" pos:end="99:9">if <condition pos:start="59:12" pos:end="59:18">(<expr pos:start="59:13" pos:end="59:17"><name pos:start="59:13" pos:end="59:13">n</name> <operator pos:start="59:15" pos:end="59:15">&gt;</operator> <literal type="number" pos:start="59:17" pos:end="59:17">0</literal></expr>)</condition> <block pos:start="59:20" pos:end="99:9">{<block_content pos:start="61:13" pos:end="97:13">

            <for pos:start="61:13" pos:end="85:13">for<control pos:start="61:16" pos:end="61:52">(<init pos:start="61:17" pos:end="61:22"><expr pos:start="61:17" pos:end="61:21"><name pos:start="61:17" pos:end="61:17">i</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <literal type="number" pos:start="61:21" pos:end="61:21">0</literal></expr>;</init> <condition pos:start="61:24" pos:end="61:47"><expr pos:start="61:24" pos:end="61:46"><name pos:start="61:24" pos:end="61:24">i</name> <operator pos:start="61:26" pos:end="61:26">&lt;</operator> <name pos:start="61:28" pos:end="61:46"><name pos:start="61:28" pos:end="61:29">rt</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:46">nb_rtsp_streams</name></name></expr>;</condition> <incr pos:start="61:49" pos:end="61:51"><expr pos:start="61:49" pos:end="61:51"><name pos:start="61:49" pos:end="61:49">i</name><operator pos:start="61:50" pos:end="61:51">++</operator></expr></incr>)</control> <block pos:start="61:54" pos:end="85:13">{<block_content pos:start="63:17" pos:end="83:17">

                <expr_stmt pos:start="63:17" pos:end="63:46"><expr pos:start="63:17" pos:end="63:45"><name pos:start="63:17" pos:end="63:23">rtsp_st</name> <operator pos:start="63:25" pos:end="63:25">=</operator> <name pos:start="63:27" pos:end="63:45"><name pos:start="63:27" pos:end="63:28">rt</name><operator pos:start="63:29" pos:end="63:30">-&gt;</operator><name pos:start="63:31" pos:end="63:42">rtsp_streams</name><index pos:start="63:43" pos:end="63:45">[<expr pos:start="63:44" pos:end="63:44"><name pos:start="63:44" pos:end="63:44">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="65:17" pos:end="83:17"><if pos:start="65:17" pos:end="83:17">if <condition pos:start="65:20" pos:end="65:40">(<expr pos:start="65:21" pos:end="65:39"><name pos:start="65:21" pos:end="65:39"><name pos:start="65:21" pos:end="65:27">rtsp_st</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:39">rtp_handle</name></name></expr>)</condition> <block pos:start="65:42" pos:end="83:17">{<block_content pos:start="67:21" pos:end="81:21">

                    <expr_stmt pos:start="67:21" pos:end="67:66"><expr pos:start="67:21" pos:end="67:65"><name pos:start="67:21" pos:end="67:22">fd</name> <operator pos:start="67:24" pos:end="67:24">=</operator> <call pos:start="67:26" pos:end="67:65"><name pos:start="67:26" pos:end="67:44">url_get_file_handle</name><argument_list pos:start="67:45" pos:end="67:65">(<argument pos:start="67:46" pos:end="67:64"><expr pos:start="67:46" pos:end="67:64"><name pos:start="67:46" pos:end="67:64"><name pos:start="67:46" pos:end="67:52">rtsp_st</name><operator pos:start="67:53" pos:end="67:54">-&gt;</operator><name pos:start="67:55" pos:end="67:64">rtp_handle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="69:21" pos:end="81:21"><if pos:start="69:21" pos:end="81:21">if <condition pos:start="69:24" pos:end="69:44">(<expr pos:start="69:25" pos:end="69:43"><call pos:start="69:25" pos:end="69:43"><name pos:start="69:25" pos:end="69:32">FD_ISSET</name><argument_list pos:start="69:33" pos:end="69:43">(<argument pos:start="69:34" pos:end="69:35"><expr pos:start="69:34" pos:end="69:35"><name pos:start="69:34" pos:end="69:35">fd</name></expr></argument>, <argument pos:start="69:38" pos:end="69:42"><expr pos:start="69:38" pos:end="69:42"><operator pos:start="69:38" pos:end="69:38">&amp;</operator><name pos:start="69:39" pos:end="69:42">rfds</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:46" pos:end="81:21">{<block_content pos:start="71:25" pos:end="79:25">

                        <expr_stmt pos:start="71:25" pos:end="71:75"><expr pos:start="71:25" pos:end="71:74"><name pos:start="71:25" pos:end="71:27">ret</name> <operator pos:start="71:29" pos:end="71:29">=</operator> <call pos:start="71:31" pos:end="71:74"><name pos:start="71:31" pos:end="71:38">url_read</name><argument_list pos:start="71:39" pos:end="71:74">(<argument pos:start="71:40" pos:end="71:58"><expr pos:start="71:40" pos:end="71:58"><name pos:start="71:40" pos:end="71:58"><name pos:start="71:40" pos:end="71:46">rtsp_st</name><operator pos:start="71:47" pos:end="71:48">-&gt;</operator><name pos:start="71:49" pos:end="71:58">rtp_handle</name></name></expr></argument>, <argument pos:start="71:61" pos:end="71:63"><expr pos:start="71:61" pos:end="71:63"><name pos:start="71:61" pos:end="71:63">buf</name></expr></argument>, <argument pos:start="71:66" pos:end="71:73"><expr pos:start="71:66" pos:end="71:73"><name pos:start="71:66" pos:end="71:73">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="73:25" pos:end="79:25"><if pos:start="73:25" pos:end="79:25">if <condition pos:start="73:28" pos:end="73:36">(<expr pos:start="73:29" pos:end="73:35"><name pos:start="73:29" pos:end="73:31">ret</name> <operator pos:start="73:33" pos:end="73:33">&gt;</operator> <literal type="number" pos:start="73:35" pos:end="73:35">0</literal></expr>)</condition> <block pos:start="73:38" pos:end="79:25">{<block_content pos:start="75:29" pos:end="77:39">

                            <expr_stmt pos:start="75:29" pos:end="75:48"><expr pos:start="75:29" pos:end="75:47"><operator pos:start="75:29" pos:end="75:29">*</operator><name pos:start="75:30" pos:end="75:37">prtsp_st</name> <operator pos:start="75:39" pos:end="75:39">=</operator> <name pos:start="75:41" pos:end="75:47">rtsp_st</name></expr>;</expr_stmt>

                            <return pos:start="77:29" pos:end="77:39">return <expr pos:start="77:36" pos:end="77:38"><name pos:start="77:36" pos:end="77:38">ret</name></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="87:13" pos:end="97:13"><if pos:start="87:13" pos:end="97:13">if <condition pos:start="87:16" pos:end="87:40">(<expr pos:start="87:17" pos:end="87:39"><call pos:start="87:17" pos:end="87:39"><name pos:start="87:17" pos:end="87:24">FD_ISSET</name><argument_list pos:start="87:25" pos:end="87:39">(<argument pos:start="87:26" pos:end="87:31"><expr pos:start="87:26" pos:end="87:31"><name pos:start="87:26" pos:end="87:31">tcp_fd</name></expr></argument>, <argument pos:start="87:34" pos:end="87:38"><expr pos:start="87:34" pos:end="87:38"><operator pos:start="87:34" pos:end="87:34">&amp;</operator><name pos:start="87:35" pos:end="87:38">rfds</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="87:42" pos:end="97:13">{<block_content pos:start="89:17" pos:end="93:52">

                <decl_stmt pos:start="89:17" pos:end="89:40"><decl pos:start="89:17" pos:end="89:39"><type pos:start="89:17" pos:end="89:33"><name pos:start="89:17" pos:end="89:33">RTSPMessageHeader</name></type> <name pos:start="89:35" pos:end="89:39">reply</name></decl>;</decl_stmt>



                <expr_stmt pos:start="93:17" pos:end="93:52"><expr pos:start="93:17" pos:end="93:51"><call pos:start="93:17" pos:end="93:51"><name pos:start="93:17" pos:end="93:31">rtsp_read_reply</name><argument_list pos:start="93:32" pos:end="93:51">(<argument pos:start="93:33" pos:end="93:33"><expr pos:start="93:33" pos:end="93:33"><name pos:start="93:33" pos:end="93:33">s</name></expr></argument>, <argument pos:start="93:36" pos:end="93:41"><expr pos:start="93:36" pos:end="93:41"><operator pos:start="93:36" pos:end="93:36">&amp;</operator><name pos:start="93:37" pos:end="93:41">reply</name></expr></argument>, <argument pos:start="93:44" pos:end="93:47"><expr pos:start="93:44" pos:end="93:47"><name pos:start="93:44" pos:end="93:47">NULL</name></expr></argument>, <argument pos:start="93:50" pos:end="93:50"><expr pos:start="93:50" pos:end="93:50"><literal type="number" pos:start="93:50" pos:end="93:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="95:17" pos:end="95:40">/* XXX: parse message */</comment>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
