<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6378.c" pos:tabs="8"><function pos:start="1:1" pos:end="749:15"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:29">initFilter</name><parameter_list pos:start="1:30" pos:end="11:70">(<parameter pos:start="1:31" pos:end="1:49"><decl pos:start="1:31" pos:end="1:49"><type pos:start="1:31" pos:end="1:49"><name pos:start="1:31" pos:end="1:37">int16_t</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier><modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:49">outFilter</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:70"><decl pos:start="1:52" pos:end="1:70"><type pos:start="1:52" pos:end="1:70"><name pos:start="1:52" pos:end="1:58">int32_t</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier><modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:70">filterPos</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:48"><decl pos:start="3:31" pos:end="3:48"><type pos:start="3:31" pos:end="3:48"><name pos:start="3:31" pos:end="3:33">int</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:48">outFilterSize</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:58"><decl pos:start="3:51" pos:end="3:58"><type pos:start="3:51" pos:end="3:58"><name pos:start="3:51" pos:end="3:53">int</name></type> <name pos:start="3:55" pos:end="3:58">xInc</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:68"><decl pos:start="3:61" pos:end="3:68"><type pos:start="3:61" pos:end="3:68"><name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:68">srcW</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:38"><decl pos:start="5:31" pos:end="5:38"><type pos:start="5:31" pos:end="5:38"><name pos:start="5:31" pos:end="5:33">int</name></type> <name pos:start="5:35" pos:end="5:38">dstW</name></decl></parameter>, <parameter pos:start="5:41" pos:end="5:55"><decl pos:start="5:41" pos:end="5:55"><type pos:start="5:41" pos:end="5:55"><name pos:start="5:41" pos:end="5:43">int</name></type> <name pos:start="5:45" pos:end="5:55">filterAlign</name></decl></parameter>, <parameter pos:start="5:58" pos:end="5:64"><decl pos:start="5:58" pos:end="5:64"><type pos:start="5:58" pos:end="5:64"><name pos:start="5:58" pos:end="5:60">int</name></type> <name pos:start="5:62" pos:end="5:64">one</name></decl></parameter>,

                              <parameter pos:start="7:31" pos:end="7:39"><decl pos:start="7:31" pos:end="7:39"><type pos:start="7:31" pos:end="7:39"><name pos:start="7:31" pos:end="7:33">int</name></type> <name pos:start="7:35" pos:end="7:39">flags</name></decl></parameter>, <parameter pos:start="7:42" pos:end="7:54"><decl pos:start="7:42" pos:end="7:54"><type pos:start="7:42" pos:end="7:54"><name pos:start="7:42" pos:end="7:44">int</name></type> <name pos:start="7:46" pos:end="7:54">cpu_flags</name></decl></parameter>,

                              <parameter pos:start="9:31" pos:end="9:50"><decl pos:start="9:31" pos:end="9:50"><type pos:start="9:31" pos:end="9:50"><name pos:start="9:31" pos:end="9:39">SwsVector</name> <modifier pos:start="9:41" pos:end="9:41">*</modifier></type><name pos:start="9:42" pos:end="9:50">srcFilter</name></decl></parameter>, <parameter pos:start="9:53" pos:end="9:72"><decl pos:start="9:53" pos:end="9:72"><type pos:start="9:53" pos:end="9:72"><name pos:start="9:53" pos:end="9:61">SwsVector</name> <modifier pos:start="9:63" pos:end="9:63">*</modifier></type><name pos:start="9:64" pos:end="9:72">dstFilter</name></decl></parameter>,

                              <parameter pos:start="11:31" pos:end="11:45"><decl pos:start="11:31" pos:end="11:45"><type pos:start="11:31" pos:end="11:42"><name pos:start="11:31" pos:end="11:36">double</name></type> <name pos:start="11:38" pos:end="11:45"><name pos:start="11:38" pos:end="11:42">param</name><index pos:start="11:43" pos:end="11:45">[<expr pos:start="11:44" pos:end="11:44"><literal type="number" pos:start="11:44" pos:end="11:44">2</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="11:48" pos:end="11:57"><decl pos:start="11:48" pos:end="11:57"><type pos:start="11:48" pos:end="11:57"><name pos:start="11:48" pos:end="11:50">int</name></type> <name pos:start="11:52" pos:end="11:57">srcPos</name></decl></parameter>, <parameter pos:start="11:60" pos:end="11:69"><decl pos:start="11:60" pos:end="11:69"><type pos:start="11:60" pos:end="11:69"><name pos:start="11:60" pos:end="11:62">int</name></type> <name pos:start="11:64" pos:end="11:69">dstPos</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="749:15">{<block_content pos:start="15:5" pos:end="749:15">

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:18">filterSize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:20"><decl pos:start="19:5" pos:end="19:19"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:19">filter2Size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:22"><decl pos:start="21:5" pos:end="21:21"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:21">minFilterSize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:30"><decl pos:start="23:5" pos:end="23:29"><type pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:11">int64_t</name> <modifier pos:start="23:13" pos:end="23:13">*</modifier></type><name pos:start="23:14" pos:end="23:19">filter</name>    <init pos:start="23:24" pos:end="23:29">= <expr pos:start="23:26" pos:end="23:29"><name pos:start="23:26" pos:end="23:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:30"><decl pos:start="25:5" pos:end="25:29"><type pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:11">int64_t</name> <modifier pos:start="25:13" pos:end="25:13">*</modifier></type><name pos:start="25:14" pos:end="25:20">filter2</name>   <init pos:start="25:24" pos:end="25:29">= <expr pos:start="25:26" pos:end="25:29"><name pos:start="25:26" pos:end="25:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:68"><decl pos:start="27:5" pos:end="27:67"><type pos:start="27:5" pos:end="27:17"><specifier pos:start="27:5" pos:end="27:9">const</specifier> <name pos:start="27:11" pos:end="27:17">int64_t</name></type> <name pos:start="27:19" pos:end="27:22">fone</name> <init pos:start="27:24" pos:end="27:67">= <expr pos:start="27:26" pos:end="27:67"><literal type="number" pos:start="27:26" pos:end="27:28">1LL</literal> <operator pos:start="27:30" pos:end="27:31">&lt;&lt;</operator> <operator pos:start="27:33" pos:end="27:33">(</operator><literal type="number" pos:start="27:34" pos:end="27:37">54</literal> <operator pos:start="27:37" pos:end="27:37">-</operator> <call pos:start="27:39" pos:end="27:66"><name pos:start="27:39" pos:end="27:43">FFMIN</name><argument_list pos:start="27:44" pos:end="27:66">(<argument pos:start="27:45" pos:end="27:62"><expr pos:start="27:45" pos:end="27:62"><call pos:start="27:45" pos:end="27:62"><name pos:start="27:45" pos:end="27:51">av_log2</name><argument_list pos:start="27:52" pos:end="27:62">(<argument pos:start="27:53" pos:end="27:61"><expr pos:start="27:53" pos:end="27:61"><name pos:start="27:53" pos:end="27:56">srcW</name><operator pos:start="27:57" pos:end="27:57">/</operator><name pos:start="27:58" pos:end="27:61">dstW</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:65" pos:end="27:65"><expr pos:start="27:65" pos:end="27:65"><literal type="number" pos:start="27:65" pos:end="27:65">8</literal></expr></argument>)</argument_list></call><operator pos:start="27:67" pos:end="27:67">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:28"><decl pos:start="29:5" pos:end="29:27"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:11">ret</name>            <init pos:start="29:24" pos:end="29:27">= <expr pos:start="29:26" pos:end="29:27"><operator pos:start="29:26" pos:end="29:26">-</operator><literal type="number" pos:start="29:27" pos:end="29:27">1</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:13"><expr pos:start="33:5" pos:end="33:12"><call pos:start="33:5" pos:end="33:12"><name pos:start="33:5" pos:end="33:10">emms_c</name><argument_list pos:start="33:11" pos:end="33:12">()</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="33:15" pos:end="33:80">// FIXME should not be required but IS (even for non-MMX versions)</comment>



    <comment type="line" pos:start="37:5" pos:end="37:80">// NOTE: the +3 is for the MMX(+1) / SSE(+3) scaler which reads over the end</comment>

    <expr_stmt pos:start="39:5" pos:end="39:79"><expr pos:start="39:5" pos:end="39:78"><call pos:start="39:5" pos:end="39:78"><name pos:start="39:5" pos:end="39:20">FF_ALLOC_OR_GOTO</name><argument_list pos:start="39:21" pos:end="39:78">(<argument pos:start="39:22" pos:end="39:25"><expr pos:start="39:22" pos:end="39:25"><name pos:start="39:22" pos:end="39:25">NULL</name></expr></argument>, <argument pos:start="39:28" pos:end="39:37"><expr pos:start="39:28" pos:end="39:37"><operator pos:start="39:28" pos:end="39:28">*</operator><name pos:start="39:29" pos:end="39:37">filterPos</name></expr></argument>, <argument pos:start="39:40" pos:end="39:71"><expr pos:start="39:40" pos:end="39:71"><operator pos:start="39:40" pos:end="39:40">(</operator><name pos:start="39:41" pos:end="39:44">dstW</name> <operator pos:start="39:46" pos:end="39:46">+</operator> <literal type="number" pos:start="39:48" pos:end="39:48">3</literal><operator pos:start="39:49" pos:end="39:49">)</operator> <operator pos:start="39:51" pos:end="39:51">*</operator> <sizeof pos:start="39:53" pos:end="39:71">sizeof<argument_list pos:start="39:59" pos:end="39:71">(<argument pos:start="39:60" pos:end="39:70"><expr pos:start="39:60" pos:end="39:70"><operator pos:start="39:60" pos:end="39:60">*</operator><operator pos:start="39:61" pos:end="39:61">*</operator><name pos:start="39:62" pos:end="39:70">filterPos</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="39:74" pos:end="39:77"><expr pos:start="39:74" pos:end="39:77"><name pos:start="39:74" pos:end="39:77">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="749:15"><if pos:start="43:5" pos:end="749:15">if <condition pos:start="43:8" pos:end="43:55">(<expr pos:start="43:9" pos:end="43:54"><call pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:13">FFABS</name><argument_list pos:start="43:14" pos:end="43:29">(<argument pos:start="43:15" pos:end="43:28"><expr pos:start="43:15" pos:end="43:28"><name pos:start="43:15" pos:end="43:18">xInc</name> <operator pos:start="43:20" pos:end="43:20">-</operator> <literal type="number" pos:start="43:22" pos:end="43:28">0x10000</literal></expr></argument>)</argument_list></call> <operator pos:start="43:31" pos:end="43:31">&lt;</operator> <literal type="number" pos:start="43:33" pos:end="43:34">10</literal> <operator pos:start="43:36" pos:end="43:37">&amp;&amp;</operator> <name pos:start="43:39" pos:end="43:44">srcPos</name> <operator pos:start="43:46" pos:end="43:47">==</operator> <name pos:start="43:49" pos:end="43:54">dstPos</name></expr>)</condition> <block pos:start="43:57" pos:end="749:15">{<block_content pos:start="45:9" pos:end="749:15"> <comment type="line" pos:start="43:59" pos:end="43:69">// unscaled</comment>

        <decl_stmt pos:start="45:9" pos:end="45:14"><decl pos:start="45:9" pos:end="45:13"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:13">i</name></decl>;</decl_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:23"><expr pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:18">filterSize</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <literal type="number" pos:start="47:22" pos:end="47:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="51:69"><expr pos:start="49:9" pos:end="51:68"><call pos:start="49:9" pos:end="51:68"><name pos:start="49:9" pos:end="49:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="49:26" pos:end="51:68">(<argument pos:start="49:27" pos:end="49:30"><expr pos:start="49:27" pos:end="49:30"><name pos:start="49:27" pos:end="49:30">NULL</name></expr></argument>, <argument pos:start="49:33" pos:end="49:38"><expr pos:start="49:33" pos:end="49:38"><name pos:start="49:33" pos:end="49:38">filter</name></expr></argument>,

                          <argument pos:start="51:27" pos:end="51:61"><expr pos:start="51:27" pos:end="51:61"><name pos:start="51:27" pos:end="51:30">dstW</name> <operator pos:start="51:32" pos:end="51:32">*</operator> <sizeof pos:start="51:34" pos:end="51:48">sizeof<argument_list pos:start="51:40" pos:end="51:48">(<argument pos:start="51:41" pos:end="51:47"><expr pos:start="51:41" pos:end="51:47"><operator pos:start="51:41" pos:end="51:41">*</operator><name pos:start="51:42" pos:end="51:47">filter</name></expr></argument>)</argument_list></sizeof> <operator pos:start="51:50" pos:end="51:50">*</operator> <name pos:start="51:52" pos:end="51:61">filterSize</name></expr></argument>, <argument pos:start="51:64" pos:end="51:67"><expr pos:start="51:64" pos:end="51:67"><name pos:start="51:64" pos:end="51:67">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="55:9" pos:end="62:5">for <control pos:start="55:13" pos:end="55:34">(<init pos:start="55:14" pos:end="55:19"><expr pos:start="55:14" pos:end="55:18"><name pos:start="55:14" pos:end="55:14">i</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="number" pos:start="55:18" pos:end="55:18">0</literal></expr>;</init> <condition pos:start="55:21" pos:end="55:29"><expr pos:start="55:21" pos:end="55:28"><name pos:start="55:21" pos:end="55:21">i</name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <name pos:start="55:25" pos:end="55:28">dstW</name></expr>;</condition> <incr pos:start="55:31" pos:end="55:33"><expr pos:start="55:31" pos:end="55:33"><name pos:start="55:31" pos:end="55:31">i</name><operator pos:start="55:32" pos:end="55:33">++</operator></expr></incr>)</control> <block pos:start="55:36" pos:end="62:5">{<block_content pos:start="57:13" pos:end="59:39">

            <expr_stmt pos:start="57:13" pos:end="57:42"><expr pos:start="57:13" pos:end="57:41"><name pos:start="57:13" pos:end="57:34"><name pos:start="57:13" pos:end="57:18">filter</name><index pos:start="57:19" pos:end="57:34">[<expr pos:start="57:20" pos:end="57:33"><name pos:start="57:20" pos:end="57:20">i</name> <operator pos:start="57:22" pos:end="57:22">*</operator> <name pos:start="57:24" pos:end="57:33">filterSize</name></expr>]</index></name> <operator pos:start="57:36" pos:end="57:36">=</operator> <name pos:start="57:38" pos:end="57:41">fone</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:39"><expr pos:start="59:13" pos:end="59:38"><operator pos:start="59:13" pos:end="59:13">(</operator><operator pos:start="59:14" pos:end="59:14">*</operator><name pos:start="59:15" pos:end="59:23">filterPos</name><operator pos:start="59:24" pos:end="59:24">)</operator><index pos:start="59:25" pos:end="59:27">[<expr pos:start="59:26" pos:end="59:26"><name pos:start="59:26" pos:end="59:26">i</name></expr>]</index>        <operator pos:start="59:36" pos:end="59:36">=</operator> <name pos:start="59:38" pos:end="59:38">i</name></expr>;</expr_stmt>


    </block_content>}</block></for> <if_stmt pos:start="62:7" pos:end="749:15"><if type="elseif" pos:start="62:7" pos:end="749:15">else if <condition pos:start="62:15" pos:end="62:33">(<expr pos:start="62:16" pos:end="62:32"><name pos:start="62:16" pos:end="62:20">flags</name> <operator pos:start="62:22" pos:end="62:22">&amp;</operator> <name pos:start="62:24" pos:end="62:32">SWS_POINT</name></expr>)</condition> <block pos:start="62:35" pos:end="749:15">{<block_content pos:start="64:9" pos:end="749:15"> <comment type="line" pos:start="62:37" pos:end="62:71">// lame looking point sampling mode</comment>

        <decl_stmt pos:start="64:9" pos:end="64:14"><decl pos:start="64:9" pos:end="64:13"><type pos:start="64:9" pos:end="64:11"><name pos:start="64:9" pos:end="64:11">int</name></type> <name pos:start="64:13" pos:end="64:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="66:9" pos:end="66:26"><decl pos:start="66:9" pos:end="66:25"><type pos:start="66:9" pos:end="66:15"><name pos:start="66:9" pos:end="66:15">int64_t</name></type> <name pos:start="66:17" pos:end="66:25">xDstInSrc</name></decl>;</decl_stmt>

        <expr_stmt pos:start="68:9" pos:end="68:23"><expr pos:start="68:9" pos:end="68:22"><name pos:start="68:9" pos:end="68:18">filterSize</name> <operator pos:start="68:20" pos:end="68:20">=</operator> <literal type="number" pos:start="68:22" pos:end="68:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="70:9" pos:end="72:68"><expr pos:start="70:9" pos:end="72:67"><call pos:start="70:9" pos:end="72:67"><name pos:start="70:9" pos:end="70:24">FF_ALLOC_OR_GOTO</name><argument_list pos:start="70:25" pos:end="72:67">(<argument pos:start="70:26" pos:end="70:29"><expr pos:start="70:26" pos:end="70:29"><name pos:start="70:26" pos:end="70:29">NULL</name></expr></argument>, <argument pos:start="70:32" pos:end="70:37"><expr pos:start="70:32" pos:end="70:37"><name pos:start="70:32" pos:end="70:37">filter</name></expr></argument>,

                         <argument pos:start="72:26" pos:end="72:60"><expr pos:start="72:26" pos:end="72:60"><name pos:start="72:26" pos:end="72:29">dstW</name> <operator pos:start="72:31" pos:end="72:31">*</operator> <sizeof pos:start="72:33" pos:end="72:47">sizeof<argument_list pos:start="72:39" pos:end="72:47">(<argument pos:start="72:40" pos:end="72:46"><expr pos:start="72:40" pos:end="72:46"><operator pos:start="72:40" pos:end="72:40">*</operator><name pos:start="72:41" pos:end="72:46">filter</name></expr></argument>)</argument_list></sizeof> <operator pos:start="72:49" pos:end="72:49">*</operator> <name pos:start="72:51" pos:end="72:60">filterSize</name></expr></argument>, <argument pos:start="72:63" pos:end="72:66"><expr pos:start="72:63" pos:end="72:66"><name pos:start="72:63" pos:end="72:66">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="76:9" pos:end="76:73"><expr pos:start="76:9" pos:end="76:72"><name pos:start="76:9" pos:end="76:17">xDstInSrc</name> <operator pos:start="76:19" pos:end="76:19">=</operator> <operator pos:start="76:21" pos:end="76:21">(</operator><operator pos:start="76:22" pos:end="76:22">(</operator><name pos:start="76:23" pos:end="76:28">dstPos</name><operator pos:start="76:29" pos:end="76:29">*</operator><operator pos:start="76:30" pos:end="76:30">(</operator><name pos:start="76:31" pos:end="76:37">int64_t</name><operator pos:start="76:38" pos:end="76:38">)</operator><name pos:start="76:39" pos:end="76:42">xInc</name><operator pos:start="76:43" pos:end="76:43">)</operator><operator pos:start="76:44" pos:end="76:45">&gt;&gt;</operator><literal type="number" pos:start="76:46" pos:end="76:46">8</literal><operator pos:start="76:47" pos:end="76:47">)</operator> <operator pos:start="76:49" pos:end="76:49">-</operator> <operator pos:start="76:51" pos:end="76:51">(</operator><operator pos:start="76:52" pos:end="76:52">(</operator><name pos:start="76:53" pos:end="76:58">srcPos</name><operator pos:start="76:59" pos:end="76:59">*</operator><literal type="number" pos:start="76:60" pos:end="76:67">0x8000LL</literal><operator pos:start="76:68" pos:end="76:68">)</operator><operator pos:start="76:69" pos:end="76:70">&gt;&gt;</operator><literal type="number" pos:start="76:71" pos:end="76:71">7</literal><operator pos:start="76:72" pos:end="76:72">)</operator></expr>;</expr_stmt>

        <for pos:start="78:9" pos:end="91:5">for <control pos:start="78:13" pos:end="78:34">(<init pos:start="78:14" pos:end="78:19"><expr pos:start="78:14" pos:end="78:18"><name pos:start="78:14" pos:end="78:14">i</name> <operator pos:start="78:16" pos:end="78:16">=</operator> <literal type="number" pos:start="78:18" pos:end="78:18">0</literal></expr>;</init> <condition pos:start="78:21" pos:end="78:29"><expr pos:start="78:21" pos:end="78:28"><name pos:start="78:21" pos:end="78:21">i</name> <operator pos:start="78:23" pos:end="78:23">&lt;</operator> <name pos:start="78:25" pos:end="78:28">dstW</name></expr>;</condition> <incr pos:start="78:31" pos:end="78:33"><expr pos:start="78:31" pos:end="78:33"><name pos:start="78:31" pos:end="78:31">i</name><operator pos:start="78:32" pos:end="78:33">++</operator></expr></incr>)</control> <block pos:start="78:36" pos:end="91:5">{<block_content pos:start="80:13" pos:end="88:35">

            <decl_stmt pos:start="80:13" pos:end="80:78"><decl pos:start="80:13" pos:end="80:77"><type pos:start="80:13" pos:end="80:15"><name pos:start="80:13" pos:end="80:15">int</name></type> <name pos:start="80:17" pos:end="80:18">xx</name> <init pos:start="80:20" pos:end="80:77">= <expr pos:start="80:22" pos:end="80:77"><operator pos:start="80:22" pos:end="80:22">(</operator><name pos:start="80:23" pos:end="80:31">xDstInSrc</name> <operator pos:start="80:33" pos:end="80:33">-</operator> <operator pos:start="80:35" pos:end="80:35">(</operator><operator pos:start="80:36" pos:end="80:36">(</operator><name pos:start="80:37" pos:end="80:46">filterSize</name> <operator pos:start="80:48" pos:end="80:48">-</operator> <literal type="number" pos:start="80:50" pos:end="80:50">1</literal><operator pos:start="80:51" pos:end="80:51">)</operator> <operator pos:start="80:53" pos:end="80:54">&lt;&lt;</operator> <literal type="number" pos:start="80:56" pos:end="80:57">15</literal><operator pos:start="80:58" pos:end="80:58">)</operator> <operator pos:start="80:60" pos:end="80:60">+</operator> <operator pos:start="80:62" pos:end="80:62">(</operator><literal type="number" pos:start="80:63" pos:end="80:63">1</literal> <operator pos:start="80:65" pos:end="80:66">&lt;&lt;</operator> <literal type="number" pos:start="80:68" pos:end="80:69">15</literal><operator pos:start="80:70" pos:end="80:70">)</operator><operator pos:start="80:71" pos:end="80:71">)</operator> <operator pos:start="80:73" pos:end="80:74">&gt;&gt;</operator> <literal type="number" pos:start="80:76" pos:end="80:77">16</literal></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="84:13" pos:end="84:33"><expr pos:start="84:13" pos:end="84:32"><operator pos:start="84:13" pos:end="84:13">(</operator><operator pos:start="84:14" pos:end="84:14">*</operator><name pos:start="84:15" pos:end="84:23">filterPos</name><operator pos:start="84:24" pos:end="84:24">)</operator><index pos:start="84:25" pos:end="84:27">[<expr pos:start="84:26" pos:end="84:26"><name pos:start="84:26" pos:end="84:26">i</name></expr>]</index> <operator pos:start="84:29" pos:end="84:29">=</operator> <name pos:start="84:31" pos:end="84:32">xx</name></expr>;</expr_stmt>

            <expr_stmt pos:start="86:13" pos:end="86:35"><expr pos:start="86:13" pos:end="86:34"><name pos:start="86:13" pos:end="86:21"><name pos:start="86:13" pos:end="86:18">filter</name><index pos:start="86:19" pos:end="86:21">[<expr pos:start="86:20" pos:end="86:20"><name pos:start="86:20" pos:end="86:20">i</name></expr>]</index></name>       <operator pos:start="86:29" pos:end="86:29">=</operator> <name pos:start="86:31" pos:end="86:34">fone</name></expr>;</expr_stmt>

            <expr_stmt pos:start="88:13" pos:end="88:35"><expr pos:start="88:13" pos:end="88:34"><name pos:start="88:13" pos:end="88:21">xDstInSrc</name>      <operator pos:start="88:28" pos:end="88:29">+=</operator> <name pos:start="88:31" pos:end="88:34">xInc</name></expr>;</expr_stmt>


    </block_content>}</block></for> <if_stmt pos:start="91:7" pos:end="749:15"><if type="elseif" pos:start="91:7" pos:end="749:15">else if <condition pos:start="91:15" pos:end="93:43">(<expr pos:start="91:16" pos:end="93:42"><operator pos:start="91:16" pos:end="91:16">(</operator><name pos:start="91:17" pos:end="91:20">xInc</name> <operator pos:start="91:22" pos:end="91:23">&lt;=</operator> <operator pos:start="91:25" pos:end="91:25">(</operator><literal type="number" pos:start="91:26" pos:end="91:26">1</literal> <operator pos:start="91:28" pos:end="91:29">&lt;&lt;</operator> <literal type="number" pos:start="91:31" pos:end="91:32">16</literal><operator pos:start="91:33" pos:end="91:33">)</operator> <operator pos:start="91:35" pos:end="91:36">&amp;&amp;</operator> <operator pos:start="91:38" pos:end="91:38">(</operator><name pos:start="91:39" pos:end="91:43">flags</name> <operator pos:start="91:45" pos:end="91:45">&amp;</operator> <name pos:start="91:47" pos:end="91:54">SWS_AREA</name><operator pos:start="91:55" pos:end="91:55">)</operator><operator pos:start="91:56" pos:end="91:56">)</operator> <operator pos:start="91:58" pos:end="91:59">||</operator>

               <operator pos:start="93:16" pos:end="93:16">(</operator><name pos:start="93:17" pos:end="93:21">flags</name> <operator pos:start="93:23" pos:end="93:23">&amp;</operator> <name pos:start="93:25" pos:end="93:41">SWS_FAST_BILINEAR</name><operator pos:start="93:42" pos:end="93:42">)</operator></expr>)</condition> <block pos:start="93:45" pos:end="749:15">{<block_content pos:start="95:9" pos:end="749:15"> <comment type="line" pos:start="93:47" pos:end="93:65">// bilinear upscale</comment>

        <decl_stmt pos:start="95:9" pos:end="95:14"><decl pos:start="95:9" pos:end="95:13"><type pos:start="95:9" pos:end="95:11"><name pos:start="95:9" pos:end="95:11">int</name></type> <name pos:start="95:13" pos:end="95:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="97:9" pos:end="97:26"><decl pos:start="97:9" pos:end="97:25"><type pos:start="97:9" pos:end="97:15"><name pos:start="97:9" pos:end="97:15">int64_t</name></type> <name pos:start="97:17" pos:end="97:25">xDstInSrc</name></decl>;</decl_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:23"><expr pos:start="99:9" pos:end="99:22"><name pos:start="99:9" pos:end="99:18">filterSize</name> <operator pos:start="99:20" pos:end="99:20">=</operator> <literal type="number" pos:start="99:22" pos:end="99:22">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="103:68"><expr pos:start="101:9" pos:end="103:67"><call pos:start="101:9" pos:end="103:67"><name pos:start="101:9" pos:end="101:24">FF_ALLOC_OR_GOTO</name><argument_list pos:start="101:25" pos:end="103:67">(<argument pos:start="101:26" pos:end="101:29"><expr pos:start="101:26" pos:end="101:29"><name pos:start="101:26" pos:end="101:29">NULL</name></expr></argument>, <argument pos:start="101:32" pos:end="101:37"><expr pos:start="101:32" pos:end="101:37"><name pos:start="101:32" pos:end="101:37">filter</name></expr></argument>,

                         <argument pos:start="103:26" pos:end="103:60"><expr pos:start="103:26" pos:end="103:60"><name pos:start="103:26" pos:end="103:29">dstW</name> <operator pos:start="103:31" pos:end="103:31">*</operator> <sizeof pos:start="103:33" pos:end="103:47">sizeof<argument_list pos:start="103:39" pos:end="103:47">(<argument pos:start="103:40" pos:end="103:46"><expr pos:start="103:40" pos:end="103:46"><operator pos:start="103:40" pos:end="103:40">*</operator><name pos:start="103:41" pos:end="103:46">filter</name></expr></argument>)</argument_list></sizeof> <operator pos:start="103:49" pos:end="103:49">*</operator> <name pos:start="103:51" pos:end="103:60">filterSize</name></expr></argument>, <argument pos:start="103:63" pos:end="103:66"><expr pos:start="103:63" pos:end="103:66"><name pos:start="103:63" pos:end="103:66">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:73"><expr pos:start="107:9" pos:end="107:72"><name pos:start="107:9" pos:end="107:17">xDstInSrc</name> <operator pos:start="107:19" pos:end="107:19">=</operator> <operator pos:start="107:21" pos:end="107:21">(</operator><operator pos:start="107:22" pos:end="107:22">(</operator><name pos:start="107:23" pos:end="107:28">dstPos</name><operator pos:start="107:29" pos:end="107:29">*</operator><operator pos:start="107:30" pos:end="107:30">(</operator><name pos:start="107:31" pos:end="107:37">int64_t</name><operator pos:start="107:38" pos:end="107:38">)</operator><name pos:start="107:39" pos:end="107:42">xInc</name><operator pos:start="107:43" pos:end="107:43">)</operator><operator pos:start="107:44" pos:end="107:45">&gt;&gt;</operator><literal type="number" pos:start="107:46" pos:end="107:46">8</literal><operator pos:start="107:47" pos:end="107:47">)</operator> <operator pos:start="107:49" pos:end="107:49">-</operator> <operator pos:start="107:51" pos:end="107:51">(</operator><operator pos:start="107:52" pos:end="107:52">(</operator><name pos:start="107:53" pos:end="107:58">srcPos</name><operator pos:start="107:59" pos:end="107:59">*</operator><literal type="number" pos:start="107:60" pos:end="107:67">0x8000LL</literal><operator pos:start="107:68" pos:end="107:68">)</operator><operator pos:start="107:69" pos:end="107:70">&gt;&gt;</operator><literal type="number" pos:start="107:71" pos:end="107:71">7</literal><operator pos:start="107:72" pos:end="107:72">)</operator></expr>;</expr_stmt>

        <for pos:start="109:9" pos:end="749:15">for <control pos:start="109:13" pos:end="109:34">(<init pos:start="109:14" pos:end="109:19"><expr pos:start="109:14" pos:end="109:18"><name pos:start="109:14" pos:end="109:14">i</name> <operator pos:start="109:16" pos:end="109:16">=</operator> <literal type="number" pos:start="109:18" pos:end="109:18">0</literal></expr>;</init> <condition pos:start="109:21" pos:end="109:29"><expr pos:start="109:21" pos:end="109:28"><name pos:start="109:21" pos:end="109:21">i</name> <operator pos:start="109:23" pos:end="109:23">&lt;</operator> <name pos:start="109:25" pos:end="109:28">dstW</name></expr>;</condition> <incr pos:start="109:31" pos:end="109:33"><expr pos:start="109:31" pos:end="109:33"><name pos:start="109:31" pos:end="109:31">i</name><operator pos:start="109:32" pos:end="109:33">++</operator></expr></incr>)</control> <block pos:start="109:36" pos:end="749:15">{<block_content pos:start="111:13" pos:end="749:15">

            <decl_stmt pos:start="111:13" pos:end="111:78"><decl pos:start="111:13" pos:end="111:77"><type pos:start="111:13" pos:end="111:15"><name pos:start="111:13" pos:end="111:15">int</name></type> <name pos:start="111:17" pos:end="111:18">xx</name> <init pos:start="111:20" pos:end="111:77">= <expr pos:start="111:22" pos:end="111:77"><operator pos:start="111:22" pos:end="111:22">(</operator><name pos:start="111:23" pos:end="111:31">xDstInSrc</name> <operator pos:start="111:33" pos:end="111:33">-</operator> <operator pos:start="111:35" pos:end="111:35">(</operator><operator pos:start="111:36" pos:end="111:36">(</operator><name pos:start="111:37" pos:end="111:46">filterSize</name> <operator pos:start="111:48" pos:end="111:48">-</operator> <literal type="number" pos:start="111:50" pos:end="111:50">1</literal><operator pos:start="111:51" pos:end="111:51">)</operator> <operator pos:start="111:53" pos:end="111:54">&lt;&lt;</operator> <literal type="number" pos:start="111:56" pos:end="111:57">15</literal><operator pos:start="111:58" pos:end="111:58">)</operator> <operator pos:start="111:60" pos:end="111:60">+</operator> <operator pos:start="111:62" pos:end="111:62">(</operator><literal type="number" pos:start="111:63" pos:end="111:63">1</literal> <operator pos:start="111:65" pos:end="111:66">&lt;&lt;</operator> <literal type="number" pos:start="111:68" pos:end="111:69">15</literal><operator pos:start="111:70" pos:end="111:70">)</operator><operator pos:start="111:71" pos:end="111:71">)</operator> <operator pos:start="111:73" pos:end="111:74">&gt;&gt;</operator> <literal type="number" pos:start="111:76" pos:end="111:77">16</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="113:13" pos:end="113:18"><decl pos:start="113:13" pos:end="113:17"><type pos:start="113:13" pos:end="113:15"><name pos:start="113:13" pos:end="113:15">int</name></type> <name pos:start="113:17" pos:end="113:17">j</name></decl>;</decl_stmt>



            <expr_stmt pos:start="117:13" pos:end="117:33"><expr pos:start="117:13" pos:end="117:32"><operator pos:start="117:13" pos:end="117:13">(</operator><operator pos:start="117:14" pos:end="117:14">*</operator><name pos:start="117:15" pos:end="117:23">filterPos</name><operator pos:start="117:24" pos:end="117:24">)</operator><index pos:start="117:25" pos:end="117:27">[<expr pos:start="117:26" pos:end="117:26"><name pos:start="117:26" pos:end="117:26">i</name></expr>]</index> <operator pos:start="117:29" pos:end="117:29">=</operator> <name pos:start="117:31" pos:end="117:32">xx</name></expr>;</expr_stmt>

            <comment type="line" pos:start="119:13" pos:end="119:69">// bilinear upscale / linear interpolate / area averaging</comment>

            <for pos:start="121:13" pos:end="137:5">for <control pos:start="121:17" pos:end="121:44">(<init pos:start="121:18" pos:end="121:23"><expr pos:start="121:18" pos:end="121:22"><name pos:start="121:18" pos:end="121:18">j</name> <operator pos:start="121:20" pos:end="121:20">=</operator> <literal type="number" pos:start="121:22" pos:end="121:22">0</literal></expr>;</init> <condition pos:start="121:25" pos:end="121:39"><expr pos:start="121:25" pos:end="121:38"><name pos:start="121:25" pos:end="121:25">j</name> <operator pos:start="121:27" pos:end="121:27">&lt;</operator> <name pos:start="121:29" pos:end="121:38">filterSize</name></expr>;</condition> <incr pos:start="121:41" pos:end="121:43"><expr pos:start="121:41" pos:end="121:43"><name pos:start="121:41" pos:end="121:41">j</name><operator pos:start="121:42" pos:end="121:43">++</operator></expr></incr>)</control> <block pos:start="121:46" pos:end="137:5">{<block_content pos:start="123:17" pos:end="134:30">

                <decl_stmt pos:start="123:17" pos:end="123:86"><decl pos:start="123:17" pos:end="123:85"><type pos:start="123:17" pos:end="123:23"><name pos:start="123:17" pos:end="123:23">int64_t</name></type> <name pos:start="123:25" pos:end="123:29">coeff</name><init pos:start="123:30" pos:end="123:85">= <expr pos:start="123:32" pos:end="123:85"><name pos:start="123:32" pos:end="123:35">fone</name> <operator pos:start="123:37" pos:end="123:37">-</operator> <call pos:start="123:39" pos:end="123:74"><name pos:start="123:39" pos:end="123:43">FFABS</name><argument_list pos:start="123:44" pos:end="123:74">(<argument pos:start="123:45" pos:end="123:73"><expr pos:start="123:45" pos:end="123:73"><operator pos:start="123:45" pos:end="123:45">(</operator><operator pos:start="123:46" pos:end="123:46">(</operator><name pos:start="123:47" pos:end="123:53">int64_t</name><operator pos:start="123:54" pos:end="123:54">)</operator><name pos:start="123:55" pos:end="123:56">xx</name><operator pos:start="123:57" pos:end="123:58">&lt;&lt;</operator><literal type="number" pos:start="123:59" pos:end="123:60">16</literal><operator pos:start="123:61" pos:end="123:61">)</operator> <operator pos:start="123:63" pos:end="123:63">-</operator> <name pos:start="123:65" pos:end="123:73">xDstInSrc</name></expr></argument>)</argument_list></call><operator pos:start="123:75" pos:end="123:75">*</operator><operator pos:start="123:76" pos:end="123:76">(</operator><name pos:start="123:77" pos:end="123:80">fone</name><operator pos:start="123:81" pos:end="123:82">&gt;&gt;</operator><literal type="number" pos:start="123:83" pos:end="123:84">16</literal><operator pos:start="123:85" pos:end="123:85">)</operator></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="125:17" pos:end="127:30"><if pos:start="125:17" pos:end="127:30">if <condition pos:start="125:20" pos:end="125:30">(<expr pos:start="125:21" pos:end="125:29"><name pos:start="125:21" pos:end="125:25">coeff</name> <operator pos:start="125:27" pos:end="125:27">&lt;</operator> <literal type="number" pos:start="125:29" pos:end="125:29">0</literal></expr>)</condition><block type="pseudo" pos:start="127:21" pos:end="127:30"><block_content pos:start="127:21" pos:end="127:30">

                    <expr_stmt pos:start="127:21" pos:end="127:30"><expr pos:start="127:21" pos:end="127:29"><name pos:start="127:21" pos:end="127:25">coeff</name> <operator pos:start="127:27" pos:end="127:27">=</operator> <literal type="number" pos:start="127:29" pos:end="127:29">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="129:17" pos:end="129:51"><expr pos:start="129:17" pos:end="129:50"><name pos:start="129:17" pos:end="129:42"><name pos:start="129:17" pos:end="129:22">filter</name><index pos:start="129:23" pos:end="129:42">[<expr pos:start="129:24" pos:end="129:41"><name pos:start="129:24" pos:end="129:24">i</name> <operator pos:start="129:26" pos:end="129:26">*</operator> <name pos:start="129:28" pos:end="129:37">filterSize</name> <operator pos:start="129:39" pos:end="129:39">+</operator> <name pos:start="129:41" pos:end="129:41">j</name></expr>]</index></name> <operator pos:start="129:44" pos:end="129:44">=</operator> <name pos:start="129:46" pos:end="129:50">coeff</name></expr>;</expr_stmt>

                <expr_stmt pos:start="131:17" pos:end="131:21"><expr pos:start="131:17" pos:end="131:20"><name pos:start="131:17" pos:end="131:18">xx</name><operator pos:start="131:19" pos:end="131:20">++</operator></expr>;</expr_stmt>


            <expr_stmt pos:start="134:13" pos:end="134:30"><expr pos:start="134:13" pos:end="134:29"><name pos:start="134:13" pos:end="134:21">xDstInSrc</name> <operator pos:start="134:23" pos:end="134:24">+=</operator> <name pos:start="134:26" pos:end="134:29">xInc</name></expr>;</expr_stmt>


    </block_content>}</block></for> <if_stmt pos:start="137:7" pos:end="749:15"><else pos:start="137:7" pos:end="749:15">else <block pos:start="137:12" pos:end="749:15">{<block_content pos:start="139:9" pos:end="749:15">

        <decl_stmt pos:start="139:9" pos:end="139:26"><decl pos:start="139:9" pos:end="139:25"><type pos:start="139:9" pos:end="139:15"><name pos:start="139:9" pos:end="139:15">int64_t</name></type> <name pos:start="139:17" pos:end="139:25">xDstInSrc</name></decl>;</decl_stmt>

        <decl_stmt pos:start="141:9" pos:end="141:23"><decl pos:start="141:9" pos:end="141:22"><type pos:start="141:9" pos:end="141:11"><name pos:start="141:9" pos:end="141:11">int</name></type> <name pos:start="141:13" pos:end="141:22">sizeFactor</name></decl>;</decl_stmt>



        <if_stmt pos:start="145:9" pos:end="749:15"><if pos:start="145:9" pos:end="147:27">if <condition pos:start="145:12" pos:end="145:32">(<expr pos:start="145:13" pos:end="145:31"><name pos:start="145:13" pos:end="145:17">flags</name> <operator pos:start="145:19" pos:end="145:19">&amp;</operator> <name pos:start="145:21" pos:end="145:31">SWS_BICUBIC</name></expr>)</condition><block type="pseudo" pos:start="147:13" pos:end="147:27"><block_content pos:start="147:13" pos:end="147:27">

            <expr_stmt pos:start="147:13" pos:end="147:27"><expr pos:start="147:13" pos:end="147:26"><name pos:start="147:13" pos:end="147:22">sizeFactor</name> <operator pos:start="147:24" pos:end="147:24">=</operator> <literal type="number" pos:start="147:26" pos:end="147:26">4</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="149:9" pos:end="151:27">else if <condition pos:start="149:17" pos:end="149:31">(<expr pos:start="149:18" pos:end="149:30"><name pos:start="149:18" pos:end="149:22">flags</name> <operator pos:start="149:24" pos:end="149:24">&amp;</operator> <name pos:start="149:26" pos:end="149:30">SWS_X</name></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="151:27"><block_content pos:start="151:13" pos:end="151:27">

            <expr_stmt pos:start="151:13" pos:end="151:27"><expr pos:start="151:13" pos:end="151:26"><name pos:start="151:13" pos:end="151:22">sizeFactor</name> <operator pos:start="151:24" pos:end="151:24">=</operator> <literal type="number" pos:start="151:26" pos:end="151:26">8</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="153:9" pos:end="155:27">else if <condition pos:start="153:17" pos:end="153:34">(<expr pos:start="153:18" pos:end="153:33"><name pos:start="153:18" pos:end="153:22">flags</name> <operator pos:start="153:24" pos:end="153:24">&amp;</operator> <name pos:start="153:26" pos:end="153:33">SWS_AREA</name></expr>)</condition><block type="pseudo" pos:start="155:13" pos:end="155:27"><block_content pos:start="155:13" pos:end="155:27">

            <expr_stmt pos:start="155:13" pos:end="155:27"><expr pos:start="155:13" pos:end="155:26"><name pos:start="155:13" pos:end="155:22">sizeFactor</name> <operator pos:start="155:24" pos:end="155:24">=</operator> <literal type="number" pos:start="155:26" pos:end="155:26">1</literal></expr>;</expr_stmt></block_content></block></if>     <comment type="line" pos:start="155:33" pos:end="155:77">// downscale only, for upscale it is bilinear</comment>

        <if type="elseif" pos:start="157:9" pos:end="159:27">else if <condition pos:start="157:17" pos:end="157:35">(<expr pos:start="157:18" pos:end="157:34"><name pos:start="157:18" pos:end="157:22">flags</name> <operator pos:start="157:24" pos:end="157:24">&amp;</operator> <name pos:start="157:26" pos:end="157:34">SWS_GAUSS</name></expr>)</condition><block type="pseudo" pos:start="159:13" pos:end="159:27"><block_content pos:start="159:13" pos:end="159:27">

            <expr_stmt pos:start="159:13" pos:end="159:27"><expr pos:start="159:13" pos:end="159:26"><name pos:start="159:13" pos:end="159:22">sizeFactor</name> <operator pos:start="159:24" pos:end="159:24">=</operator> <literal type="number" pos:start="159:26" pos:end="159:26">8</literal></expr>;</expr_stmt></block_content></block></if>     <comment type="line" pos:start="159:33" pos:end="159:46">// infinite ;)</comment>

        <if type="elseif" pos:start="161:9" pos:end="163:80">else if <condition pos:start="161:17" pos:end="161:37">(<expr pos:start="161:18" pos:end="161:36"><name pos:start="161:18" pos:end="161:22">flags</name> <operator pos:start="161:24" pos:end="161:24">&amp;</operator> <name pos:start="161:26" pos:end="161:36">SWS_LANCZOS</name></expr>)</condition><block type="pseudo" pos:start="163:13" pos:end="163:80"><block_content pos:start="163:13" pos:end="163:80">

            <expr_stmt pos:start="163:13" pos:end="163:80"><expr pos:start="163:13" pos:end="163:79"><name pos:start="163:13" pos:end="163:22">sizeFactor</name> <operator pos:start="163:24" pos:end="163:24">=</operator> <ternary pos:start="163:26" pos:end="163:79"><condition pos:start="163:26" pos:end="163:56"><expr pos:start="163:26" pos:end="163:54"><name pos:start="163:26" pos:end="163:33"><name pos:start="163:26" pos:end="163:30">param</name><index pos:start="163:31" pos:end="163:33">[<expr pos:start="163:32" pos:end="163:32"><literal type="number" pos:start="163:32" pos:end="163:32">0</literal></expr>]</index></name> <operator pos:start="163:35" pos:end="163:36">!=</operator> <name pos:start="163:38" pos:end="163:54">SWS_PARAM_DEFAULT</name></expr> ?</condition><then pos:start="163:58" pos:end="163:75"> <expr pos:start="163:58" pos:end="163:75"><call pos:start="163:58" pos:end="163:75"><name pos:start="163:58" pos:end="163:61">ceil</name><argument_list pos:start="163:62" pos:end="163:75">(<argument pos:start="163:63" pos:end="163:74"><expr pos:start="163:63" pos:end="163:74"><literal type="number" pos:start="163:63" pos:end="163:63">2</literal> <operator pos:start="163:65" pos:end="163:65">*</operator> <name pos:start="163:67" pos:end="163:74"><name pos:start="163:67" pos:end="163:71">param</name><index pos:start="163:72" pos:end="163:74">[<expr pos:start="163:73" pos:end="163:73"><literal type="number" pos:start="163:73" pos:end="163:73">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="163:77" pos:end="163:79">: <expr pos:start="163:79" pos:end="163:79"><literal type="number" pos:start="163:79" pos:end="163:79">6</literal></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="165:9" pos:end="167:28">else if <condition pos:start="165:17" pos:end="165:34">(<expr pos:start="165:18" pos:end="165:33"><name pos:start="165:18" pos:end="165:22">flags</name> <operator pos:start="165:24" pos:end="165:24">&amp;</operator> <name pos:start="165:26" pos:end="165:33">SWS_SINC</name></expr>)</condition><block type="pseudo" pos:start="167:13" pos:end="167:28"><block_content pos:start="167:13" pos:end="167:28">

            <expr_stmt pos:start="167:13" pos:end="167:28"><expr pos:start="167:13" pos:end="167:27"><name pos:start="167:13" pos:end="167:22">sizeFactor</name> <operator pos:start="167:24" pos:end="167:24">=</operator> <literal type="number" pos:start="167:26" pos:end="167:27">20</literal></expr>;</expr_stmt></block_content></block></if>    <comment type="line" pos:start="167:33" pos:end="167:46">// infinite ;)</comment>

        <if type="elseif" pos:start="169:9" pos:end="171:28">else if <condition pos:start="169:17" pos:end="169:36">(<expr pos:start="169:18" pos:end="169:35"><name pos:start="169:18" pos:end="169:22">flags</name> <operator pos:start="169:24" pos:end="169:24">&amp;</operator> <name pos:start="169:26" pos:end="169:35">SWS_SPLINE</name></expr>)</condition><block type="pseudo" pos:start="171:13" pos:end="171:28"><block_content pos:start="171:13" pos:end="171:28">

            <expr_stmt pos:start="171:13" pos:end="171:28"><expr pos:start="171:13" pos:end="171:27"><name pos:start="171:13" pos:end="171:22">sizeFactor</name> <operator pos:start="171:24" pos:end="171:24">=</operator> <literal type="number" pos:start="171:26" pos:end="171:27">20</literal></expr>;</expr_stmt></block_content></block></if>    <comment type="line" pos:start="171:33" pos:end="171:46">// infinite ;)</comment>

        <if type="elseif" pos:start="173:9" pos:end="175:27">else if <condition pos:start="173:17" pos:end="173:38">(<expr pos:start="173:18" pos:end="173:37"><name pos:start="173:18" pos:end="173:22">flags</name> <operator pos:start="173:24" pos:end="173:24">&amp;</operator> <name pos:start="173:26" pos:end="173:37">SWS_BILINEAR</name></expr>)</condition><block type="pseudo" pos:start="175:13" pos:end="175:27"><block_content pos:start="175:13" pos:end="175:27">

            <expr_stmt pos:start="175:13" pos:end="175:27"><expr pos:start="175:13" pos:end="175:26"><name pos:start="175:13" pos:end="175:22">sizeFactor</name> <operator pos:start="175:24" pos:end="175:24">=</operator> <literal type="number" pos:start="175:26" pos:end="175:26">2</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="177:9" pos:end="749:15">else <block pos:start="177:14" pos:end="749:15">{<block_content pos:start="179:13" pos:end="749:15">

            <expr_stmt pos:start="179:13" pos:end="179:26"><expr pos:start="179:13" pos:end="179:25"><call pos:start="179:13" pos:end="179:25"><name pos:start="179:13" pos:end="179:22">av_assert0</name><argument_list pos:start="179:23" pos:end="179:25">(<argument pos:start="179:24" pos:end="179:24"><expr pos:start="179:24" pos:end="179:24"><literal type="number" pos:start="179:24" pos:end="179:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>




        <if_stmt pos:start="184:9" pos:end="190:67"><if pos:start="184:9" pos:end="186:40">if <condition pos:start="184:12" pos:end="184:28">(<expr pos:start="184:13" pos:end="184:27"><name pos:start="184:13" pos:end="184:16">xInc</name> <operator pos:start="184:18" pos:end="184:19">&lt;=</operator> <literal type="number" pos:start="184:21" pos:end="184:21">1</literal> <operator pos:start="184:23" pos:end="184:24">&lt;&lt;</operator> <literal type="number" pos:start="184:26" pos:end="184:27">16</literal></expr>)</condition><block type="pseudo" pos:start="186:13" pos:end="186:40"><block_content pos:start="186:13" pos:end="186:40">

            <expr_stmt pos:start="186:13" pos:end="186:40"><expr pos:start="186:13" pos:end="186:39"><name pos:start="186:13" pos:end="186:22">filterSize</name> <operator pos:start="186:24" pos:end="186:24">=</operator> <literal type="number" pos:start="186:26" pos:end="186:28">1</literal> <operator pos:start="186:28" pos:end="186:28">+</operator> <name pos:start="186:30" pos:end="186:39">sizeFactor</name></expr>;</expr_stmt></block_content></block></if>    <comment type="line" pos:start="186:45" pos:end="186:54">// upscale</comment>

        <else pos:start="188:9" pos:end="190:67">else<block type="pseudo" pos:start="190:13" pos:end="190:67"><block_content pos:start="190:13" pos:end="190:67">

            <expr_stmt pos:start="190:13" pos:end="190:67"><expr pos:start="190:13" pos:end="190:66"><name pos:start="190:13" pos:end="190:22">filterSize</name> <operator pos:start="190:24" pos:end="190:24">=</operator> <literal type="number" pos:start="190:26" pos:end="190:28">1</literal> <operator pos:start="190:28" pos:end="190:28">+</operator> <operator pos:start="190:30" pos:end="190:30">(</operator><name pos:start="190:31" pos:end="190:40">sizeFactor</name> <operator pos:start="190:42" pos:end="190:42">*</operator> <name pos:start="190:44" pos:end="190:47">srcW</name> <operator pos:start="190:49" pos:end="190:49">+</operator> <name pos:start="190:51" pos:end="190:54">dstW</name> <operator pos:start="190:56" pos:end="190:56">-</operator> <literal type="number" pos:start="190:58" pos:end="190:58">1</literal><operator pos:start="190:59" pos:end="190:59">)</operator> <operator pos:start="190:61" pos:end="190:61">/</operator> <name pos:start="190:63" pos:end="190:66">dstW</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="194:9" pos:end="194:49"><expr pos:start="194:9" pos:end="194:48"><name pos:start="194:9" pos:end="194:18">filterSize</name> <operator pos:start="194:20" pos:end="194:20">=</operator> <call pos:start="194:22" pos:end="194:48"><name pos:start="194:22" pos:end="194:26">FFMIN</name><argument_list pos:start="194:27" pos:end="194:48">(<argument pos:start="194:28" pos:end="194:37"><expr pos:start="194:28" pos:end="194:37"><name pos:start="194:28" pos:end="194:37">filterSize</name></expr></argument>, <argument pos:start="194:40" pos:end="194:47"><expr pos:start="194:40" pos:end="194:47"><name pos:start="194:40" pos:end="194:43">srcW</name> <operator pos:start="194:45" pos:end="194:45">-</operator> <literal type="number" pos:start="194:47" pos:end="194:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="196:9" pos:end="196:42"><expr pos:start="196:9" pos:end="196:41"><name pos:start="196:9" pos:end="196:18">filterSize</name> <operator pos:start="196:20" pos:end="196:20">=</operator> <call pos:start="196:22" pos:end="196:41"><name pos:start="196:22" pos:end="196:26">FFMAX</name><argument_list pos:start="196:27" pos:end="196:41">(<argument pos:start="196:28" pos:end="196:37"><expr pos:start="196:28" pos:end="196:37"><name pos:start="196:28" pos:end="196:37">filterSize</name></expr></argument>, <argument pos:start="196:40" pos:end="196:40"><expr pos:start="196:40" pos:end="196:40"><literal type="number" pos:start="196:40" pos:end="196:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="200:9" pos:end="202:68"><expr pos:start="200:9" pos:end="202:67"><call pos:start="200:9" pos:end="202:67"><name pos:start="200:9" pos:end="200:24">FF_ALLOC_OR_GOTO</name><argument_list pos:start="200:25" pos:end="202:67">(<argument pos:start="200:26" pos:end="200:29"><expr pos:start="200:26" pos:end="200:29"><name pos:start="200:26" pos:end="200:29">NULL</name></expr></argument>, <argument pos:start="200:32" pos:end="200:37"><expr pos:start="200:32" pos:end="200:37"><name pos:start="200:32" pos:end="200:37">filter</name></expr></argument>,

                         <argument pos:start="202:26" pos:end="202:60"><expr pos:start="202:26" pos:end="202:60"><name pos:start="202:26" pos:end="202:29">dstW</name> <operator pos:start="202:31" pos:end="202:31">*</operator> <sizeof pos:start="202:33" pos:end="202:47">sizeof<argument_list pos:start="202:39" pos:end="202:47">(<argument pos:start="202:40" pos:end="202:46"><expr pos:start="202:40" pos:end="202:46"><operator pos:start="202:40" pos:end="202:40">*</operator><name pos:start="202:41" pos:end="202:46">filter</name></expr></argument>)</argument_list></sizeof> <operator pos:start="202:49" pos:end="202:49">*</operator> <name pos:start="202:51" pos:end="202:60">filterSize</name></expr></argument>, <argument pos:start="202:63" pos:end="202:66"><expr pos:start="202:63" pos:end="202:66"><name pos:start="202:63" pos:end="202:66">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="206:9" pos:end="206:74"><expr pos:start="206:9" pos:end="206:73"><name pos:start="206:9" pos:end="206:17">xDstInSrc</name> <operator pos:start="206:19" pos:end="206:19">=</operator> <operator pos:start="206:21" pos:end="206:21">(</operator><operator pos:start="206:22" pos:end="206:22">(</operator><name pos:start="206:23" pos:end="206:28">dstPos</name><operator pos:start="206:29" pos:end="206:29">*</operator><operator pos:start="206:30" pos:end="206:30">(</operator><name pos:start="206:31" pos:end="206:37">int64_t</name><operator pos:start="206:38" pos:end="206:38">)</operator><name pos:start="206:39" pos:end="206:42">xInc</name><operator pos:start="206:43" pos:end="206:43">)</operator><operator pos:start="206:44" pos:end="206:45">&gt;&gt;</operator><literal type="number" pos:start="206:46" pos:end="206:46">7</literal><operator pos:start="206:47" pos:end="206:47">)</operator> <operator pos:start="206:49" pos:end="206:49">-</operator> <operator pos:start="206:51" pos:end="206:51">(</operator><operator pos:start="206:52" pos:end="206:52">(</operator><name pos:start="206:53" pos:end="206:58">srcPos</name><operator pos:start="206:59" pos:end="206:59">*</operator><literal type="number" pos:start="206:60" pos:end="206:68">0x10000LL</literal><operator pos:start="206:69" pos:end="206:69">)</operator><operator pos:start="206:70" pos:end="206:71">&gt;&gt;</operator><literal type="number" pos:start="206:72" pos:end="206:72">7</literal><operator pos:start="206:73" pos:end="206:73">)</operator></expr>;</expr_stmt>

        <for pos:start="208:9" pos:end="749:15">for <control pos:start="208:13" pos:end="208:34">(<init pos:start="208:14" pos:end="208:19"><expr pos:start="208:14" pos:end="208:18"><name pos:start="208:14" pos:end="208:14">i</name> <operator pos:start="208:16" pos:end="208:16">=</operator> <literal type="number" pos:start="208:18" pos:end="208:18">0</literal></expr>;</init> <condition pos:start="208:21" pos:end="208:29"><expr pos:start="208:21" pos:end="208:28"><name pos:start="208:21" pos:end="208:21">i</name> <operator pos:start="208:23" pos:end="208:23">&lt;</operator> <name pos:start="208:25" pos:end="208:28">dstW</name></expr>;</condition> <incr pos:start="208:31" pos:end="208:33"><expr pos:start="208:31" pos:end="208:33"><name pos:start="208:31" pos:end="208:31">i</name><operator pos:start="208:32" pos:end="208:33">++</operator></expr></incr>)</control> <block pos:start="208:36" pos:end="749:15">{<block_content pos:start="210:13" pos:end="749:15">

            <decl_stmt pos:start="210:13" pos:end="210:72"><decl pos:start="210:13" pos:end="210:71"><type pos:start="210:13" pos:end="210:15"><name pos:start="210:13" pos:end="210:15">int</name></type> <name pos:start="210:17" pos:end="210:18">xx</name> <init pos:start="210:20" pos:end="210:71">= <expr pos:start="210:22" pos:end="210:71"><operator pos:start="210:22" pos:end="210:22">(</operator><name pos:start="210:23" pos:end="210:31">xDstInSrc</name> <operator pos:start="210:33" pos:end="210:33">-</operator> <operator pos:start="210:35" pos:end="210:35">(</operator><operator pos:start="210:36" pos:end="210:36">(</operator><name pos:start="210:37" pos:end="210:46">filterSize</name> <operator pos:start="210:48" pos:end="210:48">-</operator> <literal type="number" pos:start="210:50" pos:end="210:50">2</literal><operator pos:start="210:51" pos:end="210:51">)</operator> <operator pos:start="210:53" pos:end="210:54">&lt;&lt;</operator> <literal type="number" pos:start="210:56" pos:end="210:57">16</literal><operator pos:start="210:58" pos:end="210:58">)</operator><operator pos:start="210:59" pos:end="210:59">)</operator> <operator pos:start="210:61" pos:end="210:61">/</operator> <operator pos:start="210:63" pos:end="210:63">(</operator><literal type="number" pos:start="210:64" pos:end="210:64">1</literal> <operator pos:start="210:66" pos:end="210:67">&lt;&lt;</operator> <literal type="number" pos:start="210:69" pos:end="210:70">17</literal><operator pos:start="210:71" pos:end="210:71">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="212:13" pos:end="212:18"><decl pos:start="212:13" pos:end="212:17"><type pos:start="212:13" pos:end="212:15"><name pos:start="212:13" pos:end="212:15">int</name></type> <name pos:start="212:17" pos:end="212:17">j</name></decl>;</decl_stmt>

            <expr_stmt pos:start="214:13" pos:end="214:33"><expr pos:start="214:13" pos:end="214:32"><operator pos:start="214:13" pos:end="214:13">(</operator><operator pos:start="214:14" pos:end="214:14">*</operator><name pos:start="214:15" pos:end="214:23">filterPos</name><operator pos:start="214:24" pos:end="214:24">)</operator><index pos:start="214:25" pos:end="214:27">[<expr pos:start="214:26" pos:end="214:26"><name pos:start="214:26" pos:end="214:26">i</name></expr>]</index> <operator pos:start="214:29" pos:end="214:29">=</operator> <name pos:start="214:31" pos:end="214:32">xx</name></expr>;</expr_stmt>

            <for pos:start="216:13" pos:end="749:15">for <control pos:start="216:17" pos:end="216:44">(<init pos:start="216:18" pos:end="216:23"><expr pos:start="216:18" pos:end="216:22"><name pos:start="216:18" pos:end="216:18">j</name> <operator pos:start="216:20" pos:end="216:20">=</operator> <literal type="number" pos:start="216:22" pos:end="216:22">0</literal></expr>;</init> <condition pos:start="216:25" pos:end="216:39"><expr pos:start="216:25" pos:end="216:38"><name pos:start="216:25" pos:end="216:25">j</name> <operator pos:start="216:27" pos:end="216:27">&lt;</operator> <name pos:start="216:29" pos:end="216:38">filterSize</name></expr>;</condition> <incr pos:start="216:41" pos:end="216:43"><expr pos:start="216:41" pos:end="216:43"><name pos:start="216:41" pos:end="216:41">j</name><operator pos:start="216:42" pos:end="216:43">++</operator></expr></incr>)</control> <block pos:start="216:46" pos:end="749:15">{<block_content pos:start="218:17" pos:end="749:15">

                <decl_stmt pos:start="218:17" pos:end="218:75"><decl pos:start="218:17" pos:end="218:74"><type pos:start="218:17" pos:end="218:23"><name pos:start="218:17" pos:end="218:23">int64_t</name></type> <name pos:start="218:25" pos:end="218:25">d</name> <init pos:start="218:27" pos:end="218:74">= <expr pos:start="218:29" pos:end="218:74"><operator pos:start="218:29" pos:end="218:29">(</operator><call pos:start="218:30" pos:end="218:67"><name pos:start="218:30" pos:end="218:34">FFABS</name><argument_list pos:start="218:35" pos:end="218:67">(<argument pos:start="218:36" pos:end="218:66"><expr pos:start="218:36" pos:end="218:66"><operator pos:start="218:36" pos:end="218:36">(</operator><operator pos:start="218:37" pos:end="218:37">(</operator><name pos:start="218:38" pos:end="218:44">int64_t</name><operator pos:start="218:45" pos:end="218:45">)</operator><name pos:start="218:46" pos:end="218:47">xx</name> <operator pos:start="218:49" pos:end="218:50">&lt;&lt;</operator> <literal type="number" pos:start="218:52" pos:end="218:53">17</literal><operator pos:start="218:54" pos:end="218:54">)</operator> <operator pos:start="218:56" pos:end="218:56">-</operator> <name pos:start="218:58" pos:end="218:66">xDstInSrc</name></expr></argument>)</argument_list></call><operator pos:start="218:68" pos:end="218:68">)</operator> <operator pos:start="218:70" pos:end="218:71">&lt;&lt;</operator> <literal type="number" pos:start="218:73" pos:end="218:74">13</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="220:17" pos:end="220:30"><decl pos:start="220:17" pos:end="220:29"><type pos:start="220:17" pos:end="220:22"><name pos:start="220:17" pos:end="220:22">double</name></type> <name pos:start="220:24" pos:end="220:29">floatd</name></decl>;</decl_stmt>

                <decl_stmt pos:start="222:17" pos:end="222:30"><decl pos:start="222:17" pos:end="222:29"><type pos:start="222:17" pos:end="222:23"><name pos:start="222:17" pos:end="222:23">int64_t</name></type> <name pos:start="222:25" pos:end="222:29">coeff</name></decl>;</decl_stmt>



                <if_stmt pos:start="226:17" pos:end="228:40"><if pos:start="226:17" pos:end="228:40">if <condition pos:start="226:20" pos:end="226:35">(<expr pos:start="226:21" pos:end="226:34"><name pos:start="226:21" pos:end="226:24">xInc</name> <operator pos:start="226:26" pos:end="226:26">&gt;</operator> <literal type="number" pos:start="226:28" pos:end="226:28">1</literal> <operator pos:start="226:30" pos:end="226:31">&lt;&lt;</operator> <literal type="number" pos:start="226:33" pos:end="226:34">16</literal></expr>)</condition><block type="pseudo" pos:start="228:21" pos:end="228:40"><block_content pos:start="228:21" pos:end="228:40">

                    <expr_stmt pos:start="228:21" pos:end="228:40"><expr pos:start="228:21" pos:end="228:39"><name pos:start="228:21" pos:end="228:21">d</name> <operator pos:start="228:23" pos:end="228:23">=</operator> <name pos:start="228:25" pos:end="228:25">d</name> <operator pos:start="228:27" pos:end="228:27">*</operator> <name pos:start="228:29" pos:end="228:32">dstW</name> <operator pos:start="228:34" pos:end="228:34">/</operator> <name pos:start="228:36" pos:end="228:39">srcW</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="230:17" pos:end="230:47"><expr pos:start="230:17" pos:end="230:46"><name pos:start="230:17" pos:end="230:22">floatd</name> <operator pos:start="230:24" pos:end="230:24">=</operator> <name pos:start="230:26" pos:end="230:26">d</name> <operator pos:start="230:28" pos:end="230:28">*</operator> <operator pos:start="230:30" pos:end="230:30">(</operator><literal type="number" pos:start="230:31" pos:end="230:33">1.0</literal> <operator pos:start="230:35" pos:end="230:35">/</operator> <operator pos:start="230:37" pos:end="230:37">(</operator><literal type="number" pos:start="230:38" pos:end="230:38">1</literal> <operator pos:start="230:40" pos:end="230:41">&lt;&lt;</operator> <literal type="number" pos:start="230:43" pos:end="230:44">30</literal><operator pos:start="230:45" pos:end="230:45">)</operator><operator pos:start="230:46" pos:end="230:46">)</operator></expr>;</expr_stmt>



                <if_stmt pos:start="234:17" pos:end="749:15"><if pos:start="234:17" pos:end="749:15">if <condition pos:start="234:20" pos:end="234:40">(<expr pos:start="234:21" pos:end="234:39"><name pos:start="234:21" pos:end="234:25">flags</name> <operator pos:start="234:27" pos:end="234:27">&amp;</operator> <name pos:start="234:29" pos:end="234:39">SWS_BICUBIC</name></expr>)</condition> <block pos:start="234:42" pos:end="749:15">{<block_content pos:start="236:21" pos:end="749:15">

                    <decl_stmt pos:start="236:21" pos:end="236:93"><decl pos:start="236:21" pos:end="236:92"><type pos:start="236:21" pos:end="236:27"><name pos:start="236:21" pos:end="236:27">int64_t</name></type> <name pos:start="236:29" pos:end="236:29">B</name> <init pos:start="236:31" pos:end="236:92">= <expr pos:start="236:33" pos:end="236:92"><operator pos:start="236:33" pos:end="236:33">(</operator><ternary pos:start="236:34" pos:end="236:79"><condition pos:start="236:34" pos:end="236:64"><expr pos:start="236:34" pos:end="236:62"><name pos:start="236:34" pos:end="236:41"><name pos:start="236:34" pos:end="236:38">param</name><index pos:start="236:39" pos:end="236:41">[<expr pos:start="236:40" pos:end="236:40"><literal type="number" pos:start="236:40" pos:end="236:40">0</literal></expr>]</index></name> <operator pos:start="236:43" pos:end="236:44">!=</operator> <name pos:start="236:46" pos:end="236:62">SWS_PARAM_DEFAULT</name></expr> ?</condition><then pos:start="236:66" pos:end="236:73"> <expr pos:start="236:66" pos:end="236:73"><name pos:start="236:66" pos:end="236:73"><name pos:start="236:66" pos:end="236:70">param</name><index pos:start="236:71" pos:end="236:73">[<expr pos:start="236:72" pos:end="236:72"><literal type="number" pos:start="236:72" pos:end="236:72">0</literal></expr>]</index></name></expr> </then><else pos:start="236:75" pos:end="236:79">:   <expr pos:start="236:79" pos:end="236:79"><literal type="number" pos:start="236:79" pos:end="236:79">0</literal></expr></else></ternary><operator pos:start="236:80" pos:end="236:80">)</operator> <operator pos:start="236:82" pos:end="236:82">*</operator> <operator pos:start="236:84" pos:end="236:84">(</operator><literal type="number" pos:start="236:85" pos:end="236:85">1</literal> <operator pos:start="236:87" pos:end="236:88">&lt;&lt;</operator> <literal type="number" pos:start="236:90" pos:end="236:91">24</literal><operator pos:start="236:92" pos:end="236:92">)</operator></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="238:21" pos:end="238:93"><decl pos:start="238:21" pos:end="238:92"><type pos:start="238:21" pos:end="238:27"><name pos:start="238:21" pos:end="238:27">int64_t</name></type> <name pos:start="238:29" pos:end="238:29">C</name> <init pos:start="238:31" pos:end="238:92">= <expr pos:start="238:33" pos:end="238:92"><operator pos:start="238:33" pos:end="238:33">(</operator><ternary pos:start="238:34" pos:end="238:79"><condition pos:start="238:34" pos:end="238:64"><expr pos:start="238:34" pos:end="238:62"><name pos:start="238:34" pos:end="238:41"><name pos:start="238:34" pos:end="238:38">param</name><index pos:start="238:39" pos:end="238:41">[<expr pos:start="238:40" pos:end="238:40"><literal type="number" pos:start="238:40" pos:end="238:40">1</literal></expr>]</index></name> <operator pos:start="238:43" pos:end="238:44">!=</operator> <name pos:start="238:46" pos:end="238:62">SWS_PARAM_DEFAULT</name></expr> ?</condition><then pos:start="238:66" pos:end="238:73"> <expr pos:start="238:66" pos:end="238:73"><name pos:start="238:66" pos:end="238:73"><name pos:start="238:66" pos:end="238:70">param</name><index pos:start="238:71" pos:end="238:73">[<expr pos:start="238:72" pos:end="238:72"><literal type="number" pos:start="238:72" pos:end="238:72">1</literal></expr>]</index></name></expr> </then><else pos:start="238:75" pos:end="238:79">: <expr pos:start="238:77" pos:end="238:79"><literal type="number" pos:start="238:77" pos:end="238:79">0.6</literal></expr></else></ternary><operator pos:start="238:80" pos:end="238:80">)</operator> <operator pos:start="238:82" pos:end="238:82">*</operator> <operator pos:start="238:84" pos:end="238:84">(</operator><literal type="number" pos:start="238:85" pos:end="238:85">1</literal> <operator pos:start="238:87" pos:end="238:88">&lt;&lt;</operator> <literal type="number" pos:start="238:90" pos:end="238:91">24</literal><operator pos:start="238:92" pos:end="238:92">)</operator></expr></init></decl>;</decl_stmt>



                    <if_stmt pos:start="242:21" pos:end="749:15"><if pos:start="242:21" pos:end="246:21">if <condition pos:start="242:24" pos:end="242:39">(<expr pos:start="242:25" pos:end="242:38"><name pos:start="242:25" pos:end="242:25">d</name> <operator pos:start="242:27" pos:end="242:28">&gt;=</operator> <literal type="number" pos:start="242:30" pos:end="242:32">1LL</literal> <operator pos:start="242:34" pos:end="242:35">&lt;&lt;</operator> <literal type="number" pos:start="242:37" pos:end="242:38">31</literal></expr>)</condition> <block pos:start="242:41" pos:end="246:21">{<block_content pos:start="244:25" pos:end="244:36">

                        <expr_stmt pos:start="244:25" pos:end="244:36"><expr pos:start="244:25" pos:end="244:35"><name pos:start="244:25" pos:end="244:29">coeff</name> <operator pos:start="244:31" pos:end="244:31">=</operator> <literal type="number" pos:start="244:33" pos:end="244:35">0.0</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="246:23" pos:end="749:15">else <block pos:start="246:28" pos:end="749:15">{<block_content pos:start="248:25" pos:end="749:15">

                        <decl_stmt pos:start="248:25" pos:end="248:53"><decl pos:start="248:25" pos:end="248:52"><type pos:start="248:25" pos:end="248:31"><name pos:start="248:25" pos:end="248:31">int64_t</name></type> <name pos:start="248:33" pos:end="248:34">dd</name>  <init pos:start="248:37" pos:end="248:52">= <expr pos:start="248:39" pos:end="248:52"><operator pos:start="248:39" pos:end="248:39">(</operator><name pos:start="248:40" pos:end="248:40">d</name>  <operator pos:start="248:43" pos:end="248:43">*</operator> <name pos:start="248:45" pos:end="248:45">d</name><operator pos:start="248:46" pos:end="248:46">)</operator> <operator pos:start="248:48" pos:end="248:49">&gt;&gt;</operator> <literal type="number" pos:start="248:51" pos:end="248:52">30</literal></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="250:25" pos:end="250:53"><decl pos:start="250:25" pos:end="250:52"><type pos:start="250:25" pos:end="250:31"><name pos:start="250:25" pos:end="250:31">int64_t</name></type> <name pos:start="250:33" pos:end="250:35">ddd</name> <init pos:start="250:37" pos:end="250:52">= <expr pos:start="250:39" pos:end="250:52"><operator pos:start="250:39" pos:end="250:39">(</operator><name pos:start="250:40" pos:end="250:41">dd</name> <operator pos:start="250:43" pos:end="250:43">*</operator> <name pos:start="250:45" pos:end="250:45">d</name><operator pos:start="250:46" pos:end="250:46">)</operator> <operator pos:start="250:48" pos:end="250:49">&gt;&gt;</operator> <literal type="number" pos:start="250:51" pos:end="250:52">30</literal></expr></init></decl>;</decl_stmt>



                        <if_stmt pos:start="254:25" pos:end="270:67"><if pos:start="254:25" pos:end="260:83">if <condition pos:start="254:28" pos:end="254:42">(<expr pos:start="254:29" pos:end="254:41"><name pos:start="254:29" pos:end="254:29">d</name> <operator pos:start="254:31" pos:end="254:31">&lt;</operator> <literal type="number" pos:start="254:33" pos:end="254:35">1LL</literal> <operator pos:start="254:37" pos:end="254:38">&lt;&lt;</operator> <literal type="number" pos:start="254:40" pos:end="254:41">30</literal></expr>)</condition><block type="pseudo" pos:start="256:29" pos:end="260:83"><block_content pos:start="256:29" pos:end="260:83">

                            <expr_stmt pos:start="256:29" pos:end="260:83"><expr pos:start="256:29" pos:end="260:82"><name pos:start="256:29" pos:end="256:33">coeff</name> <operator pos:start="256:35" pos:end="256:35">=</operator>  <operator pos:start="256:38" pos:end="256:38">(</operator><literal type="number" pos:start="256:39" pos:end="256:40">12</literal> <operator pos:start="256:42" pos:end="256:42">*</operator> <operator pos:start="256:44" pos:end="256:44">(</operator><literal type="number" pos:start="256:45" pos:end="256:45">1</literal> <operator pos:start="256:47" pos:end="256:48">&lt;&lt;</operator> <literal type="number" pos:start="256:50" pos:end="256:51">24</literal><operator pos:start="256:52" pos:end="256:52">)</operator> <operator pos:start="256:54" pos:end="256:54">-</operator>  <literal type="number" pos:start="256:57" pos:end="256:57">9</literal> <operator pos:start="256:59" pos:end="256:59">*</operator> <name pos:start="256:61" pos:end="256:61">B</name> <operator pos:start="256:63" pos:end="256:63">-</operator> <literal type="number" pos:start="256:65" pos:end="256:65">6</literal> <operator pos:start="256:67" pos:end="256:67">*</operator> <name pos:start="256:69" pos:end="256:69">C</name><operator pos:start="256:70" pos:end="256:70">)</operator> <operator pos:start="256:72" pos:end="256:72">*</operator> <name pos:start="256:74" pos:end="256:76">ddd</name> <operator pos:start="256:78" pos:end="256:78">+</operator>

                                    <operator pos:start="258:37" pos:end="258:37">(</operator><operator pos:start="258:38" pos:end="258:38">-</operator><literal type="number" pos:start="258:39" pos:end="258:40">18</literal> <operator pos:start="258:42" pos:end="258:42">*</operator> <operator pos:start="258:44" pos:end="258:44">(</operator><literal type="number" pos:start="258:45" pos:end="258:45">1</literal> <operator pos:start="258:47" pos:end="258:48">&lt;&lt;</operator> <literal type="number" pos:start="258:50" pos:end="258:51">24</literal><operator pos:start="258:52" pos:end="258:52">)</operator> <operator pos:start="258:54" pos:end="258:54">+</operator> <literal type="number" pos:start="258:56" pos:end="258:57">12</literal> <operator pos:start="258:59" pos:end="258:59">*</operator> <name pos:start="258:61" pos:end="258:61">B</name> <operator pos:start="258:63" pos:end="258:63">+</operator> <literal type="number" pos:start="258:65" pos:end="258:65">6</literal> <operator pos:start="258:67" pos:end="258:67">*</operator> <name pos:start="258:69" pos:end="258:69">C</name><operator pos:start="258:70" pos:end="258:70">)</operator> <operator pos:start="258:72" pos:end="258:72">*</operator>  <name pos:start="258:75" pos:end="258:76">dd</name> <operator pos:start="258:78" pos:end="258:78">+</operator>

                                      <operator pos:start="260:39" pos:end="260:39">(</operator><literal type="number" pos:start="260:40" pos:end="260:40">6</literal> <operator pos:start="260:42" pos:end="260:42">*</operator> <operator pos:start="260:44" pos:end="260:44">(</operator><literal type="number" pos:start="260:45" pos:end="260:45">1</literal> <operator pos:start="260:47" pos:end="260:48">&lt;&lt;</operator> <literal type="number" pos:start="260:50" pos:end="260:51">24</literal><operator pos:start="260:52" pos:end="260:52">)</operator> <operator pos:start="260:54" pos:end="260:54">-</operator>  <literal type="number" pos:start="260:57" pos:end="260:57">2</literal> <operator pos:start="260:59" pos:end="260:59">*</operator> <name pos:start="260:61" pos:end="260:61">B</name><operator pos:start="260:62" pos:end="260:62">)</operator>         <operator pos:start="260:72" pos:end="260:72">*</operator> <operator pos:start="260:74" pos:end="260:74">(</operator><literal type="number" pos:start="260:75" pos:end="260:75">1</literal> <operator pos:start="260:77" pos:end="260:78">&lt;&lt;</operator> <literal type="number" pos:start="260:80" pos:end="260:81">30</literal><operator pos:start="260:82" pos:end="260:82">)</operator></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="262:25" pos:end="270:67">else<block type="pseudo" pos:start="264:29" pos:end="270:67"><block_content pos:start="264:29" pos:end="270:67">

                            <expr_stmt pos:start="264:29" pos:end="270:67"><expr pos:start="264:29" pos:end="270:66"><name pos:start="264:29" pos:end="264:33">coeff</name> <operator pos:start="264:35" pos:end="264:35">=</operator>      <operator pos:start="264:42" pos:end="264:42">(</operator><operator pos:start="264:43" pos:end="264:43">-</operator><name pos:start="264:44" pos:end="264:44">B</name> <operator pos:start="264:46" pos:end="264:46">-</operator>  <literal type="number" pos:start="264:49" pos:end="264:49">6</literal> <operator pos:start="264:51" pos:end="264:51">*</operator> <name pos:start="264:53" pos:end="264:53">C</name><operator pos:start="264:54" pos:end="264:54">)</operator> <operator pos:start="264:56" pos:end="264:56">*</operator> <name pos:start="264:58" pos:end="264:60">ddd</name> <operator pos:start="264:62" pos:end="264:62">+</operator>

                                      <operator pos:start="266:39" pos:end="266:39">(</operator><literal type="number" pos:start="266:40" pos:end="266:40">6</literal> <operator pos:start="266:42" pos:end="266:42">*</operator> <name pos:start="266:44" pos:end="266:44">B</name> <operator pos:start="266:46" pos:end="266:46">+</operator> <literal type="number" pos:start="266:48" pos:end="266:49">30</literal> <operator pos:start="266:51" pos:end="266:51">*</operator> <name pos:start="266:53" pos:end="266:53">C</name><operator pos:start="266:54" pos:end="266:54">)</operator> <operator pos:start="266:56" pos:end="266:56">*</operator> <name pos:start="266:58" pos:end="266:59">dd</name>  <operator pos:start="266:62" pos:end="266:62">+</operator>

                                    <operator pos:start="268:37" pos:end="268:37">(</operator><operator pos:start="268:38" pos:end="268:38">-</operator><literal type="number" pos:start="268:39" pos:end="268:40">12</literal> <operator pos:start="268:42" pos:end="268:42">*</operator> <name pos:start="268:44" pos:end="268:44">B</name> <operator pos:start="268:46" pos:end="268:46">-</operator> <literal type="number" pos:start="268:48" pos:end="268:49">48</literal> <operator pos:start="268:51" pos:end="268:51">*</operator> <name pos:start="268:53" pos:end="268:53">C</name><operator pos:start="268:54" pos:end="268:54">)</operator> <operator pos:start="268:56" pos:end="268:56">*</operator> <name pos:start="268:58" pos:end="268:58">d</name>   <operator pos:start="268:62" pos:end="268:62">+</operator>

                                      <operator pos:start="270:39" pos:end="270:39">(</operator><literal type="number" pos:start="270:40" pos:end="270:40">8</literal> <operator pos:start="270:42" pos:end="270:42">*</operator> <name pos:start="270:44" pos:end="270:44">B</name> <operator pos:start="270:46" pos:end="270:46">+</operator> <literal type="number" pos:start="270:48" pos:end="270:49">24</literal> <operator pos:start="270:51" pos:end="270:51">*</operator> <name pos:start="270:53" pos:end="270:53">C</name><operator pos:start="270:54" pos:end="270:54">)</operator> <operator pos:start="270:56" pos:end="270:56">*</operator> <operator pos:start="270:58" pos:end="270:58">(</operator><literal type="number" pos:start="270:59" pos:end="270:59">1</literal> <operator pos:start="270:61" pos:end="270:62">&lt;&lt;</operator> <literal type="number" pos:start="270:64" pos:end="270:65">30</literal><operator pos:start="270:66" pos:end="270:66">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>


                    <expr_stmt pos:start="273:21" pos:end="288:0"><expr pos:start="273:21" pos:end="273:43"><name pos:start="273:21" pos:end="273:25">coeff</name> <operator pos:start="273:27" pos:end="273:28">/=</operator> <operator pos:start="273:30" pos:end="273:30">(</operator><literal type="number" pos:start="273:31" pos:end="273:33">1LL</literal><operator pos:start="273:34" pos:end="273:35">&lt;&lt;</operator><literal type="number" pos:start="273:36" pos:end="273:37">54</literal><operator pos:start="273:38" pos:end="273:38">)</operator><operator pos:start="273:39" pos:end="273:39">/</operator><name pos:start="273:40" pos:end="273:43">fone</name></expr>;</expr_stmt>


<cpp:if pos:start="276:1" pos:end="276:5">#<cpp:directive pos:start="276:2" pos:end="276:3">if</cpp:directive> <expr pos:start="276:5" pos:end="276:5"><literal type="number" pos:start="276:5" pos:end="276:5">0</literal></expr></cpp:if>

                else if (flags &amp; SWS_X) {

                    double p  = param ? param * 0.01 : 0.3;

                    coeff     = d ? sin(d * M_PI) / (d * M_PI) : 1.0;

                    coeff    *= pow(2.0, -p * d * d);


<cpp:endif pos:start="287:1" pos:end="287:6">#<cpp:directive pos:start="287:2" pos:end="287:6">endif</cpp:directive></cpp:endif>

                <if_stmt pos:start="289:17" pos:end="749:15"><if type="elseif" pos:start="289:17" pos:end="315:17">else if <condition pos:start="289:25" pos:end="289:39">(<expr pos:start="289:26" pos:end="289:38"><name pos:start="289:26" pos:end="289:30">flags</name> <operator pos:start="289:32" pos:end="289:32">&amp;</operator> <name pos:start="289:34" pos:end="289:38">SWS_X</name></expr>)</condition> <block pos:start="289:41" pos:end="315:17">{<block_content pos:start="291:21" pos:end="313:51">

                    <decl_stmt pos:start="291:21" pos:end="291:78"><decl pos:start="291:21" pos:end="291:77"><type pos:start="291:21" pos:end="291:26"><name pos:start="291:21" pos:end="291:26">double</name></type> <name pos:start="291:28" pos:end="291:28">A</name> <init pos:start="291:30" pos:end="291:77">= <expr pos:start="291:32" pos:end="291:77"><ternary pos:start="291:32" pos:end="291:77"><condition pos:start="291:32" pos:end="291:62"><expr pos:start="291:32" pos:end="291:60"><name pos:start="291:32" pos:end="291:39"><name pos:start="291:32" pos:end="291:36">param</name><index pos:start="291:37" pos:end="291:39">[<expr pos:start="291:38" pos:end="291:38"><literal type="number" pos:start="291:38" pos:end="291:38">0</literal></expr>]</index></name> <operator pos:start="291:41" pos:end="291:42">!=</operator> <name pos:start="291:44" pos:end="291:60">SWS_PARAM_DEFAULT</name></expr> ?</condition><then pos:start="291:64" pos:end="291:71"> <expr pos:start="291:64" pos:end="291:71"><name pos:start="291:64" pos:end="291:71"><name pos:start="291:64" pos:end="291:68">param</name><index pos:start="291:69" pos:end="291:71">[<expr pos:start="291:70" pos:end="291:70"><literal type="number" pos:start="291:70" pos:end="291:70">0</literal></expr>]</index></name></expr> </then><else pos:start="291:73" pos:end="291:77">: <expr pos:start="291:75" pos:end="291:77"><literal type="number" pos:start="291:75" pos:end="291:77">1.0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="293:21" pos:end="293:29"><decl pos:start="293:21" pos:end="293:28"><type pos:start="293:21" pos:end="293:26"><name pos:start="293:21" pos:end="293:26">double</name></type> <name pos:start="293:28" pos:end="293:28">c</name></decl>;</decl_stmt>



                    <if_stmt pos:start="297:21" pos:end="303:33"><if pos:start="297:21" pos:end="299:47">if <condition pos:start="297:24" pos:end="297:37">(<expr pos:start="297:25" pos:end="297:36"><name pos:start="297:25" pos:end="297:30">floatd</name> <operator pos:start="297:32" pos:end="297:32">&lt;</operator> <literal type="number" pos:start="297:34" pos:end="297:36">1.0</literal></expr>)</condition><block type="pseudo" pos:start="299:25" pos:end="299:47"><block_content pos:start="299:25" pos:end="299:47">

                        <expr_stmt pos:start="299:25" pos:end="299:47"><expr pos:start="299:25" pos:end="299:46"><name pos:start="299:25" pos:end="299:25">c</name> <operator pos:start="299:27" pos:end="299:27">=</operator> <call pos:start="299:29" pos:end="299:46"><name pos:start="299:29" pos:end="299:31">cos</name><argument_list pos:start="299:32" pos:end="299:46">(<argument pos:start="299:33" pos:end="299:45"><expr pos:start="299:33" pos:end="299:45"><name pos:start="299:33" pos:end="299:38">floatd</name> <operator pos:start="299:40" pos:end="299:40">*</operator> <name pos:start="299:42" pos:end="299:45">M_PI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="301:21" pos:end="303:33">else<block type="pseudo" pos:start="303:25" pos:end="303:33"><block_content pos:start="303:25" pos:end="303:33">

                        <expr_stmt pos:start="303:25" pos:end="303:33"><expr pos:start="303:25" pos:end="303:32"><name pos:start="303:25" pos:end="303:25">c</name> <operator pos:start="303:27" pos:end="303:27">=</operator> <operator pos:start="303:29" pos:end="303:29">-</operator><literal type="number" pos:start="303:30" pos:end="303:32">1.0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <if_stmt pos:start="305:21" pos:end="311:38"><if pos:start="305:21" pos:end="307:40">if <condition pos:start="305:24" pos:end="305:32">(<expr pos:start="305:25" pos:end="305:31"><name pos:start="305:25" pos:end="305:25">c</name> <operator pos:start="305:27" pos:end="305:27">&lt;</operator> <literal type="number" pos:start="305:29" pos:end="305:31">0.0</literal></expr>)</condition><block type="pseudo" pos:start="307:25" pos:end="307:40"><block_content pos:start="307:25" pos:end="307:40">

                        <expr_stmt pos:start="307:25" pos:end="307:40"><expr pos:start="307:25" pos:end="307:39"><name pos:start="307:25" pos:end="307:25">c</name> <operator pos:start="307:27" pos:end="307:27">=</operator> <operator pos:start="307:29" pos:end="307:29">-</operator><call pos:start="307:30" pos:end="307:39"><name pos:start="307:30" pos:end="307:32">pow</name><argument_list pos:start="307:33" pos:end="307:39">(<argument pos:start="307:34" pos:end="307:35"><expr pos:start="307:34" pos:end="307:35"><operator pos:start="307:34" pos:end="307:34">-</operator><name pos:start="307:35" pos:end="307:35">c</name></expr></argument>, <argument pos:start="307:38" pos:end="307:38"><expr pos:start="307:38" pos:end="307:38"><name pos:start="307:38" pos:end="307:38">A</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="309:21" pos:end="311:38">else<block type="pseudo" pos:start="311:25" pos:end="311:38"><block_content pos:start="311:25" pos:end="311:38">

                        <expr_stmt pos:start="311:25" pos:end="311:38"><expr pos:start="311:25" pos:end="311:37"><name pos:start="311:25" pos:end="311:25">c</name> <operator pos:start="311:27" pos:end="311:27">=</operator> <call pos:start="311:29" pos:end="311:37"><name pos:start="311:29" pos:end="311:31">pow</name><argument_list pos:start="311:32" pos:end="311:37">(<argument pos:start="311:33" pos:end="311:33"><expr pos:start="311:33" pos:end="311:33"><name pos:start="311:33" pos:end="311:33">c</name></expr></argument>, <argument pos:start="311:36" pos:end="311:36"><expr pos:start="311:36" pos:end="311:36"><name pos:start="311:36" pos:end="311:36">A</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="313:21" pos:end="313:51"><expr pos:start="313:21" pos:end="313:50"><name pos:start="313:21" pos:end="313:25">coeff</name> <operator pos:start="313:27" pos:end="313:27">=</operator> <operator pos:start="313:29" pos:end="313:29">(</operator><name pos:start="313:30" pos:end="313:30">c</name> <operator pos:start="313:32" pos:end="313:32">*</operator> <literal type="number" pos:start="313:34" pos:end="313:38">0.5</literal> <operator pos:start="313:38" pos:end="313:38">+</operator> <literal type="number" pos:start="313:40" pos:end="313:42">0.5</literal><operator pos:start="313:43" pos:end="313:43">)</operator> <operator pos:start="313:45" pos:end="313:45">*</operator> <name pos:start="313:47" pos:end="313:50">fone</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="315:19" pos:end="333:17">else if <condition pos:start="315:27" pos:end="315:44">(<expr pos:start="315:28" pos:end="315:43"><name pos:start="315:28" pos:end="315:32">flags</name> <operator pos:start="315:34" pos:end="315:34">&amp;</operator> <name pos:start="315:36" pos:end="315:43">SWS_AREA</name></expr>)</condition> <block pos:start="315:46" pos:end="333:17">{<block_content pos:start="317:21" pos:end="331:47">

                    <decl_stmt pos:start="317:21" pos:end="317:47"><decl pos:start="317:21" pos:end="317:46"><type pos:start="317:21" pos:end="317:27"><name pos:start="317:21" pos:end="317:27">int64_t</name></type> <name pos:start="317:29" pos:end="317:30">d2</name> <init pos:start="317:32" pos:end="317:46">= <expr pos:start="317:34" pos:end="317:46"><name pos:start="317:34" pos:end="317:34">d</name> <operator pos:start="317:36" pos:end="317:36">-</operator> <operator pos:start="317:38" pos:end="317:38">(</operator><literal type="number" pos:start="317:39" pos:end="317:39">1</literal> <operator pos:start="317:41" pos:end="317:42">&lt;&lt;</operator> <literal type="number" pos:start="317:44" pos:end="317:45">29</literal><operator pos:start="317:46" pos:end="317:46">)</operator></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="319:21" pos:end="329:36"><if pos:start="319:21" pos:end="321:57">if <condition pos:start="319:24" pos:end="319:56">(<expr pos:start="319:25" pos:end="319:55"><name pos:start="319:25" pos:end="319:26">d2</name> <operator pos:start="319:28" pos:end="319:28">*</operator> <name pos:start="319:30" pos:end="319:33">xInc</name> <operator pos:start="319:35" pos:end="319:35">&lt;</operator> <operator pos:start="319:37" pos:end="319:37">-</operator><operator pos:start="319:38" pos:end="319:38">(</operator><literal type="number" pos:start="319:39" pos:end="319:41">1LL</literal> <operator pos:start="319:43" pos:end="319:44">&lt;&lt;</operator> <operator pos:start="319:46" pos:end="319:46">(</operator><literal type="number" pos:start="319:47" pos:end="319:50">29</literal> <operator pos:start="319:50" pos:end="319:50">+</operator> <literal type="number" pos:start="319:52" pos:end="319:53">16</literal><operator pos:start="319:54" pos:end="319:54">)</operator><operator pos:start="319:55" pos:end="319:55">)</operator></expr>)</condition><block type="pseudo" pos:start="321:25" pos:end="321:57"><block_content pos:start="321:25" pos:end="321:57">

                        <expr_stmt pos:start="321:25" pos:end="321:57"><expr pos:start="321:25" pos:end="321:56"><name pos:start="321:25" pos:end="321:29">coeff</name> <operator pos:start="321:31" pos:end="321:31">=</operator> <literal type="number" pos:start="321:33" pos:end="321:35">1.0</literal> <operator pos:start="321:37" pos:end="321:37">*</operator> <operator pos:start="321:39" pos:end="321:39">(</operator><literal type="number" pos:start="321:40" pos:end="321:42">1LL</literal> <operator pos:start="321:44" pos:end="321:45">&lt;&lt;</operator> <operator pos:start="321:47" pos:end="321:47">(</operator><literal type="number" pos:start="321:48" pos:end="321:51">30</literal> <operator pos:start="321:51" pos:end="321:51">+</operator> <literal type="number" pos:start="321:53" pos:end="321:54">16</literal><operator pos:start="321:55" pos:end="321:55">)</operator><operator pos:start="321:56" pos:end="321:56">)</operator></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="323:21" pos:end="325:64">else if <condition pos:start="323:29" pos:end="323:60">(<expr pos:start="323:30" pos:end="323:59"><name pos:start="323:30" pos:end="323:31">d2</name> <operator pos:start="323:33" pos:end="323:33">*</operator> <name pos:start="323:35" pos:end="323:38">xInc</name> <operator pos:start="323:40" pos:end="323:40">&lt;</operator> <operator pos:start="323:42" pos:end="323:42">(</operator><literal type="number" pos:start="323:43" pos:end="323:45">1LL</literal> <operator pos:start="323:47" pos:end="323:48">&lt;&lt;</operator> <operator pos:start="323:50" pos:end="323:50">(</operator><literal type="number" pos:start="323:51" pos:end="323:54">29</literal> <operator pos:start="323:54" pos:end="323:54">+</operator> <literal type="number" pos:start="323:56" pos:end="323:57">16</literal><operator pos:start="323:58" pos:end="323:58">)</operator><operator pos:start="323:59" pos:end="323:59">)</operator></expr>)</condition><block type="pseudo" pos:start="325:25" pos:end="325:64"><block_content pos:start="325:25" pos:end="325:64">

                        <expr_stmt pos:start="325:25" pos:end="325:64"><expr pos:start="325:25" pos:end="325:63"><name pos:start="325:25" pos:end="325:29">coeff</name> <operator pos:start="325:31" pos:end="325:31">=</operator> <operator pos:start="325:33" pos:end="325:33">-</operator><name pos:start="325:34" pos:end="325:35">d2</name> <operator pos:start="325:37" pos:end="325:37">*</operator> <name pos:start="325:39" pos:end="325:42">xInc</name> <operator pos:start="325:44" pos:end="325:44">+</operator> <operator pos:start="325:46" pos:end="325:46">(</operator><literal type="number" pos:start="325:47" pos:end="325:49">1LL</literal> <operator pos:start="325:51" pos:end="325:52">&lt;&lt;</operator> <operator pos:start="325:54" pos:end="325:54">(</operator><literal type="number" pos:start="325:55" pos:end="325:58">29</literal> <operator pos:start="325:58" pos:end="325:58">+</operator> <literal type="number" pos:start="325:60" pos:end="325:61">16</literal><operator pos:start="325:62" pos:end="325:62">)</operator><operator pos:start="325:63" pos:end="325:63">)</operator></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="327:21" pos:end="329:36">else<block type="pseudo" pos:start="329:25" pos:end="329:36"><block_content pos:start="329:25" pos:end="329:36">

                        <expr_stmt pos:start="329:25" pos:end="329:36"><expr pos:start="329:25" pos:end="329:35"><name pos:start="329:25" pos:end="329:29">coeff</name> <operator pos:start="329:31" pos:end="329:31">=</operator> <literal type="number" pos:start="329:33" pos:end="329:35">0.0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="331:21" pos:end="331:47"><expr pos:start="331:21" pos:end="331:46"><name pos:start="331:21" pos:end="331:25">coeff</name> <operator pos:start="331:27" pos:end="331:28">*=</operator> <name pos:start="331:30" pos:end="331:33">fone</name> <operator pos:start="331:35" pos:end="331:36">&gt;&gt;</operator> <operator pos:start="331:38" pos:end="331:38">(</operator><literal type="number" pos:start="331:39" pos:end="331:42">30</literal> <operator pos:start="331:42" pos:end="331:42">+</operator> <literal type="number" pos:start="331:44" pos:end="331:45">16</literal><operator pos:start="331:46" pos:end="331:46">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="333:19" pos:end="339:17">else if <condition pos:start="333:27" pos:end="333:45">(<expr pos:start="333:28" pos:end="333:44"><name pos:start="333:28" pos:end="333:32">flags</name> <operator pos:start="333:34" pos:end="333:34">&amp;</operator> <name pos:start="333:36" pos:end="333:44">SWS_GAUSS</name></expr>)</condition> <block pos:start="333:47" pos:end="339:17">{<block_content pos:start="335:21" pos:end="337:68">

                    <decl_stmt pos:start="335:21" pos:end="335:78"><decl pos:start="335:21" pos:end="335:77"><type pos:start="335:21" pos:end="335:26"><name pos:start="335:21" pos:end="335:26">double</name></type> <name pos:start="335:28" pos:end="335:28">p</name> <init pos:start="335:30" pos:end="335:77">= <expr pos:start="335:32" pos:end="335:77"><ternary pos:start="335:32" pos:end="335:77"><condition pos:start="335:32" pos:end="335:62"><expr pos:start="335:32" pos:end="335:60"><name pos:start="335:32" pos:end="335:39"><name pos:start="335:32" pos:end="335:36">param</name><index pos:start="335:37" pos:end="335:39">[<expr pos:start="335:38" pos:end="335:38"><literal type="number" pos:start="335:38" pos:end="335:38">0</literal></expr>]</index></name> <operator pos:start="335:41" pos:end="335:42">!=</operator> <name pos:start="335:44" pos:end="335:60">SWS_PARAM_DEFAULT</name></expr> ?</condition><then pos:start="335:64" pos:end="335:71"> <expr pos:start="335:64" pos:end="335:71"><name pos:start="335:64" pos:end="335:71"><name pos:start="335:64" pos:end="335:68">param</name><index pos:start="335:69" pos:end="335:71">[<expr pos:start="335:70" pos:end="335:70"><literal type="number" pos:start="335:70" pos:end="335:70">0</literal></expr>]</index></name></expr> </then><else pos:start="335:73" pos:end="335:77">: <expr pos:start="335:75" pos:end="335:77"><literal type="number" pos:start="335:75" pos:end="335:77">3.0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="337:21" pos:end="337:68"><expr pos:start="337:21" pos:end="337:67"><name pos:start="337:21" pos:end="337:25">coeff</name> <operator pos:start="337:27" pos:end="337:27">=</operator> <operator pos:start="337:29" pos:end="337:29">(</operator><call pos:start="337:30" pos:end="337:59"><name pos:start="337:30" pos:end="337:32">pow</name><argument_list pos:start="337:33" pos:end="337:59">(<argument pos:start="337:34" pos:end="337:36"><expr pos:start="337:34" pos:end="337:36"><literal type="number" pos:start="337:34" pos:end="337:36">2.0</literal></expr></argument>, <argument pos:start="337:39" pos:end="337:58"><expr pos:start="337:39" pos:end="337:58"><operator pos:start="337:39" pos:end="337:39">-</operator><name pos:start="337:40" pos:end="337:40">p</name> <operator pos:start="337:42" pos:end="337:42">*</operator> <name pos:start="337:44" pos:end="337:49">floatd</name> <operator pos:start="337:51" pos:end="337:51">*</operator> <name pos:start="337:53" pos:end="337:58">floatd</name></expr></argument>)</argument_list></call><operator pos:start="337:60" pos:end="337:60">)</operator> <operator pos:start="337:62" pos:end="337:62">*</operator> <name pos:start="337:64" pos:end="337:67">fone</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="339:19" pos:end="343:17">else if <condition pos:start="339:27" pos:end="339:44">(<expr pos:start="339:28" pos:end="339:43"><name pos:start="339:28" pos:end="339:32">flags</name> <operator pos:start="339:34" pos:end="339:34">&amp;</operator> <name pos:start="339:36" pos:end="339:43">SWS_SINC</name></expr>)</condition> <block pos:start="339:46" pos:end="343:17">{<block_content pos:start="341:21" pos:end="341:84">

                    <expr_stmt pos:start="341:21" pos:end="341:84"><expr pos:start="341:21" pos:end="341:83"><name pos:start="341:21" pos:end="341:25">coeff</name> <operator pos:start="341:27" pos:end="341:27">=</operator> <operator pos:start="341:29" pos:end="341:29">(</operator><ternary pos:start="341:30" pos:end="341:75"><condition pos:start="341:30" pos:end="341:32"><expr pos:start="341:30" pos:end="341:30"><name pos:start="341:30" pos:end="341:30">d</name></expr> ?</condition><then pos:start="341:34" pos:end="341:69"> <expr pos:start="341:34" pos:end="341:69"><call pos:start="341:34" pos:end="341:51"><name pos:start="341:34" pos:end="341:36">sin</name><argument_list pos:start="341:37" pos:end="341:51">(<argument pos:start="341:38" pos:end="341:50"><expr pos:start="341:38" pos:end="341:50"><name pos:start="341:38" pos:end="341:43">floatd</name> <operator pos:start="341:45" pos:end="341:45">*</operator> <name pos:start="341:47" pos:end="341:50">M_PI</name></expr></argument>)</argument_list></call> <operator pos:start="341:53" pos:end="341:53">/</operator> <operator pos:start="341:55" pos:end="341:55">(</operator><name pos:start="341:56" pos:end="341:61">floatd</name> <operator pos:start="341:63" pos:end="341:63">*</operator> <name pos:start="341:65" pos:end="341:68">M_PI</name><operator pos:start="341:69" pos:end="341:69">)</operator></expr> </then><else pos:start="341:71" pos:end="341:75">: <expr pos:start="341:73" pos:end="341:75"><literal type="number" pos:start="341:73" pos:end="341:75">1.0</literal></expr></else></ternary><operator pos:start="341:76" pos:end="341:76">)</operator> <operator pos:start="341:78" pos:end="341:78">*</operator> <name pos:start="341:80" pos:end="341:83">fone</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="343:19" pos:end="355:17">else if <condition pos:start="343:27" pos:end="343:47">(<expr pos:start="343:28" pos:end="343:46"><name pos:start="343:28" pos:end="343:32">flags</name> <operator pos:start="343:34" pos:end="343:34">&amp;</operator> <name pos:start="343:36" pos:end="343:46">SWS_LANCZOS</name></expr>)</condition> <block pos:start="343:49" pos:end="355:17">{<block_content pos:start="345:21" pos:end="353:34">

                    <decl_stmt pos:start="345:21" pos:end="345:78"><decl pos:start="345:21" pos:end="345:77"><type pos:start="345:21" pos:end="345:26"><name pos:start="345:21" pos:end="345:26">double</name></type> <name pos:start="345:28" pos:end="345:28">p</name> <init pos:start="345:30" pos:end="345:77">= <expr pos:start="345:32" pos:end="345:77"><ternary pos:start="345:32" pos:end="345:77"><condition pos:start="345:32" pos:end="345:62"><expr pos:start="345:32" pos:end="345:60"><name pos:start="345:32" pos:end="345:39"><name pos:start="345:32" pos:end="345:36">param</name><index pos:start="345:37" pos:end="345:39">[<expr pos:start="345:38" pos:end="345:38"><literal type="number" pos:start="345:38" pos:end="345:38">0</literal></expr>]</index></name> <operator pos:start="345:41" pos:end="345:42">!=</operator> <name pos:start="345:44" pos:end="345:60">SWS_PARAM_DEFAULT</name></expr> ?</condition><then pos:start="345:64" pos:end="345:71"> <expr pos:start="345:64" pos:end="345:71"><name pos:start="345:64" pos:end="345:71"><name pos:start="345:64" pos:end="345:68">param</name><index pos:start="345:69" pos:end="345:71">[<expr pos:start="345:70" pos:end="345:70"><literal type="number" pos:start="345:70" pos:end="345:70">0</literal></expr>]</index></name></expr> </then><else pos:start="345:73" pos:end="345:77">: <expr pos:start="345:75" pos:end="345:77"><literal type="number" pos:start="345:75" pos:end="345:77">3.0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="347:21" pos:end="349:79"><expr pos:start="347:21" pos:end="349:78"><name pos:start="347:21" pos:end="347:25">coeff</name> <operator pos:start="347:27" pos:end="347:27">=</operator> <operator pos:start="347:29" pos:end="347:29">(</operator><ternary pos:start="347:30" pos:end="349:70"><condition pos:start="347:30" pos:end="347:32"><expr pos:start="347:30" pos:end="347:30"><name pos:start="347:30" pos:end="347:30">d</name></expr> ?</condition><then pos:start="347:34" pos:end="349:64"> <expr pos:start="347:34" pos:end="349:64"><call pos:start="347:34" pos:end="347:51"><name pos:start="347:34" pos:end="347:36">sin</name><argument_list pos:start="347:37" pos:end="347:51">(<argument pos:start="347:38" pos:end="347:50"><expr pos:start="347:38" pos:end="347:50"><name pos:start="347:38" pos:end="347:43">floatd</name> <operator pos:start="347:45" pos:end="347:45">*</operator> <name pos:start="347:47" pos:end="347:50">M_PI</name></expr></argument>)</argument_list></call> <operator pos:start="347:53" pos:end="347:53">*</operator> <call pos:start="347:55" pos:end="347:76"><name pos:start="347:55" pos:end="347:57">sin</name><argument_list pos:start="347:58" pos:end="347:76">(<argument pos:start="347:59" pos:end="347:75"><expr pos:start="347:59" pos:end="347:75"><name pos:start="347:59" pos:end="347:64">floatd</name> <operator pos:start="347:66" pos:end="347:66">*</operator> <name pos:start="347:68" pos:end="347:71">M_PI</name> <operator pos:start="347:73" pos:end="347:73">/</operator> <name pos:start="347:75" pos:end="347:75">p</name></expr></argument>)</argument_list></call> <operator pos:start="347:78" pos:end="347:78">/</operator>

                             <operator pos:start="349:30" pos:end="349:30">(</operator><name pos:start="349:31" pos:end="349:36">floatd</name> <operator pos:start="349:38" pos:end="349:38">*</operator> <name pos:start="349:40" pos:end="349:45">floatd</name> <operator pos:start="349:47" pos:end="349:47">*</operator> <name pos:start="349:49" pos:end="349:52">M_PI</name> <operator pos:start="349:54" pos:end="349:54">*</operator> <name pos:start="349:56" pos:end="349:59">M_PI</name> <operator pos:start="349:61" pos:end="349:61">/</operator> <name pos:start="349:63" pos:end="349:63">p</name><operator pos:start="349:64" pos:end="349:64">)</operator></expr> </then><else pos:start="349:66" pos:end="349:70">: <expr pos:start="349:68" pos:end="349:70"><literal type="number" pos:start="349:68" pos:end="349:70">1.0</literal></expr></else></ternary><operator pos:start="349:71" pos:end="349:71">)</operator> <operator pos:start="349:73" pos:end="349:73">*</operator> <name pos:start="349:75" pos:end="349:78">fone</name></expr>;</expr_stmt>

                    <if_stmt pos:start="351:21" pos:end="353:34"><if pos:start="351:21" pos:end="353:34">if <condition pos:start="351:24" pos:end="351:35">(<expr pos:start="351:25" pos:end="351:34"><name pos:start="351:25" pos:end="351:30">floatd</name> <operator pos:start="351:32" pos:end="351:32">&gt;</operator> <name pos:start="351:34" pos:end="351:34">p</name></expr>)</condition><block type="pseudo" pos:start="353:25" pos:end="353:34"><block_content pos:start="353:25" pos:end="353:34">

                        <expr_stmt pos:start="353:25" pos:end="353:34"><expr pos:start="353:25" pos:end="353:33"><name pos:start="353:25" pos:end="353:29">coeff</name> <operator pos:start="353:31" pos:end="353:31">=</operator> <literal type="number" pos:start="353:33" pos:end="353:33">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="355:19" pos:end="365:17">else if <condition pos:start="355:27" pos:end="355:48">(<expr pos:start="355:28" pos:end="355:47"><name pos:start="355:28" pos:end="355:32">flags</name> <operator pos:start="355:34" pos:end="355:34">&amp;</operator> <name pos:start="355:36" pos:end="355:47">SWS_BILINEAR</name></expr>)</condition> <block pos:start="355:50" pos:end="365:17">{<block_content pos:start="357:21" pos:end="363:40">

                    <expr_stmt pos:start="357:21" pos:end="357:42"><expr pos:start="357:21" pos:end="357:41"><name pos:start="357:21" pos:end="357:25">coeff</name> <operator pos:start="357:27" pos:end="357:27">=</operator> <operator pos:start="357:29" pos:end="357:29">(</operator><literal type="number" pos:start="357:30" pos:end="357:30">1</literal> <operator pos:start="357:32" pos:end="357:33">&lt;&lt;</operator> <literal type="number" pos:start="357:35" pos:end="357:36">30</literal><operator pos:start="357:37" pos:end="357:37">)</operator> <operator pos:start="357:39" pos:end="357:39">-</operator> <name pos:start="357:41" pos:end="357:41">d</name></expr>;</expr_stmt>

                    <if_stmt pos:start="359:21" pos:end="361:34"><if pos:start="359:21" pos:end="361:34">if <condition pos:start="359:24" pos:end="359:34">(<expr pos:start="359:25" pos:end="359:33"><name pos:start="359:25" pos:end="359:29">coeff</name> <operator pos:start="359:31" pos:end="359:31">&lt;</operator> <literal type="number" pos:start="359:33" pos:end="359:33">0</literal></expr>)</condition><block type="pseudo" pos:start="361:25" pos:end="361:34"><block_content pos:start="361:25" pos:end="361:34">

                        <expr_stmt pos:start="361:25" pos:end="361:34"><expr pos:start="361:25" pos:end="361:33"><name pos:start="361:25" pos:end="361:29">coeff</name> <operator pos:start="361:31" pos:end="361:31">=</operator> <literal type="number" pos:start="361:33" pos:end="361:33">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="363:21" pos:end="363:40"><expr pos:start="363:21" pos:end="363:39"><name pos:start="363:21" pos:end="363:25">coeff</name> <operator pos:start="363:27" pos:end="363:28">*=</operator> <name pos:start="363:30" pos:end="363:33">fone</name> <operator pos:start="363:35" pos:end="363:36">&gt;&gt;</operator> <literal type="number" pos:start="363:38" pos:end="363:39">30</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="365:19" pos:end="371:17">else if <condition pos:start="365:27" pos:end="365:46">(<expr pos:start="365:28" pos:end="365:45"><name pos:start="365:28" pos:end="365:32">flags</name> <operator pos:start="365:34" pos:end="365:34">&amp;</operator> <name pos:start="365:36" pos:end="365:45">SWS_SPLINE</name></expr>)</condition> <block pos:start="365:48" pos:end="371:17">{<block_content pos:start="367:21" pos:end="369:81">

                    <decl_stmt pos:start="367:21" pos:end="367:50"><decl pos:start="367:21" pos:end="367:49"><type pos:start="367:21" pos:end="367:26"><name pos:start="367:21" pos:end="367:26">double</name></type> <name pos:start="367:28" pos:end="367:28">p</name> <init pos:start="367:30" pos:end="367:49">= <expr pos:start="367:32" pos:end="367:49"><operator pos:start="367:32" pos:end="367:32">-</operator><literal type="number" pos:start="367:33" pos:end="367:49">2.196152422706632</literal></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="369:21" pos:end="369:81"><expr pos:start="369:21" pos:end="369:80"><name pos:start="369:21" pos:end="369:25">coeff</name> <operator pos:start="369:27" pos:end="369:27">=</operator> <call pos:start="369:29" pos:end="369:73"><name pos:start="369:29" pos:end="369:42">getSplineCoeff</name><argument_list pos:start="369:43" pos:end="369:73">(<argument pos:start="369:44" pos:end="369:46"><expr pos:start="369:44" pos:end="369:46"><literal type="number" pos:start="369:44" pos:end="369:46">1.0</literal></expr></argument>, <argument pos:start="369:49" pos:end="369:51"><expr pos:start="369:49" pos:end="369:51"><literal type="number" pos:start="369:49" pos:end="369:51">0.0</literal></expr></argument>, <argument pos:start="369:54" pos:end="369:54"><expr pos:start="369:54" pos:end="369:54"><name pos:start="369:54" pos:end="369:54">p</name></expr></argument>, <argument pos:start="369:57" pos:end="369:64"><expr pos:start="369:57" pos:end="369:64"><operator pos:start="369:57" pos:end="369:57">-</operator><name pos:start="369:58" pos:end="369:58">p</name> <operator pos:start="369:60" pos:end="369:60">-</operator> <literal type="number" pos:start="369:62" pos:end="369:64">1.0</literal></expr></argument>, <argument pos:start="369:67" pos:end="369:72"><expr pos:start="369:67" pos:end="369:72"><name pos:start="369:67" pos:end="369:72">floatd</name></expr></argument>)</argument_list></call> <operator pos:start="369:75" pos:end="369:75">*</operator> <name pos:start="369:77" pos:end="369:80">fone</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="371:19" pos:end="749:15">else <block pos:start="371:24" pos:end="749:15">{<block_content pos:start="373:21" pos:end="749:15">

                    <expr_stmt pos:start="373:21" pos:end="373:34"><expr pos:start="373:21" pos:end="373:33"><call pos:start="373:21" pos:end="373:33"><name pos:start="373:21" pos:end="373:30">av_assert0</name><argument_list pos:start="373:31" pos:end="373:33">(<argument pos:start="373:32" pos:end="373:32"><expr pos:start="373:32" pos:end="373:32"><literal type="number" pos:start="373:32" pos:end="373:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>




                <expr_stmt pos:start="378:17" pos:end="378:51"><expr pos:start="378:17" pos:end="378:50"><name pos:start="378:17" pos:end="378:42"><name pos:start="378:17" pos:end="378:22">filter</name><index pos:start="378:23" pos:end="378:42">[<expr pos:start="378:24" pos:end="378:41"><name pos:start="378:24" pos:end="378:24">i</name> <operator pos:start="378:26" pos:end="378:26">*</operator> <name pos:start="378:28" pos:end="378:37">filterSize</name> <operator pos:start="378:39" pos:end="378:39">+</operator> <name pos:start="378:41" pos:end="378:41">j</name></expr>]</index></name> <operator pos:start="378:44" pos:end="378:44">=</operator> <name pos:start="378:46" pos:end="378:50">coeff</name></expr>;</expr_stmt>

                <expr_stmt pos:start="380:17" pos:end="380:21"><expr pos:start="380:17" pos:end="380:20"><name pos:start="380:17" pos:end="380:18">xx</name><operator pos:start="380:19" pos:end="380:20">++</operator></expr>;</expr_stmt>


            <expr_stmt pos:start="383:13" pos:end="383:34"><expr pos:start="383:13" pos:end="383:33"><name pos:start="383:13" pos:end="383:21">xDstInSrc</name> <operator pos:start="383:23" pos:end="383:24">+=</operator> <literal type="number" pos:start="383:26" pos:end="383:26">2</literal> <operator pos:start="383:28" pos:end="383:28">*</operator> <name pos:start="383:30" pos:end="383:33">xInc</name></expr>;</expr_stmt>





    <comment type="block" pos:start="389:5" pos:end="393:7">/* apply src &amp; dst Filter to filter -&gt; filter2

     * av_free(filter);

     */</comment>

    <expr_stmt pos:start="395:5" pos:end="395:31"><expr pos:start="395:5" pos:end="395:30"><call pos:start="395:5" pos:end="395:30"><name pos:start="395:5" pos:end="395:14">av_assert0</name><argument_list pos:start="395:15" pos:end="395:30">(<argument pos:start="395:16" pos:end="395:29"><expr pos:start="395:16" pos:end="395:29"><name pos:start="395:16" pos:end="395:25">filterSize</name> <operator pos:start="395:27" pos:end="395:27">&gt;</operator> <literal type="number" pos:start="395:29" pos:end="395:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="397:5" pos:end="397:29"><expr pos:start="397:5" pos:end="397:28"><name pos:start="397:5" pos:end="397:15">filter2Size</name> <operator pos:start="397:17" pos:end="397:17">=</operator> <name pos:start="397:19" pos:end="397:28">filterSize</name></expr>;</expr_stmt>

    <if_stmt pos:start="399:5" pos:end="401:45"><if pos:start="399:5" pos:end="401:45">if <condition pos:start="399:8" pos:end="399:18">(<expr pos:start="399:9" pos:end="399:17"><name pos:start="399:9" pos:end="399:17">srcFilter</name></expr>)</condition><block type="pseudo" pos:start="401:9" pos:end="401:45"><block_content pos:start="401:9" pos:end="401:45">

        <expr_stmt pos:start="401:9" pos:end="401:45"><expr pos:start="401:9" pos:end="401:44"><name pos:start="401:9" pos:end="401:19">filter2Size</name> <operator pos:start="401:21" pos:end="401:22">+=</operator> <name pos:start="401:24" pos:end="401:40"><name pos:start="401:24" pos:end="401:32">srcFilter</name><operator pos:start="401:33" pos:end="401:34">-&gt;</operator><name pos:start="401:35" pos:end="401:40">length</name></name> <operator pos:start="401:42" pos:end="401:42">-</operator> <literal type="number" pos:start="401:44" pos:end="401:44">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="403:5" pos:end="405:45"><if pos:start="403:5" pos:end="405:45">if <condition pos:start="403:8" pos:end="403:18">(<expr pos:start="403:9" pos:end="403:17"><name pos:start="403:9" pos:end="403:17">dstFilter</name></expr>)</condition><block type="pseudo" pos:start="405:9" pos:end="405:45"><block_content pos:start="405:9" pos:end="405:45">

        <expr_stmt pos:start="405:9" pos:end="405:45"><expr pos:start="405:9" pos:end="405:44"><name pos:start="405:9" pos:end="405:19">filter2Size</name> <operator pos:start="405:21" pos:end="405:22">+=</operator> <name pos:start="405:24" pos:end="405:40"><name pos:start="405:24" pos:end="405:32">dstFilter</name><operator pos:start="405:33" pos:end="405:34">-&gt;</operator><name pos:start="405:35" pos:end="405:40">length</name></name> <operator pos:start="405:42" pos:end="405:42">-</operator> <literal type="number" pos:start="405:44" pos:end="405:44">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="407:5" pos:end="407:32"><expr pos:start="407:5" pos:end="407:31"><call pos:start="407:5" pos:end="407:31"><name pos:start="407:5" pos:end="407:14">av_assert0</name><argument_list pos:start="407:15" pos:end="407:31">(<argument pos:start="407:16" pos:end="407:30"><expr pos:start="407:16" pos:end="407:30"><name pos:start="407:16" pos:end="407:26">filter2Size</name> <operator pos:start="407:28" pos:end="407:28">&gt;</operator> <literal type="number" pos:start="407:30" pos:end="407:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="409:5" pos:end="409:82"><expr pos:start="409:5" pos:end="409:81"><call pos:start="409:5" pos:end="409:81"><name pos:start="409:5" pos:end="409:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="409:22" pos:end="409:81">(<argument pos:start="409:23" pos:end="409:26"><expr pos:start="409:23" pos:end="409:26"><name pos:start="409:23" pos:end="409:26">NULL</name></expr></argument>, <argument pos:start="409:29" pos:end="409:35"><expr pos:start="409:29" pos:end="409:35"><name pos:start="409:29" pos:end="409:35">filter2</name></expr></argument>, <argument pos:start="409:38" pos:end="409:74"><expr pos:start="409:38" pos:end="409:74"><name pos:start="409:38" pos:end="409:48">filter2Size</name> <operator pos:start="409:50" pos:end="409:50">*</operator> <name pos:start="409:52" pos:end="409:55">dstW</name> <operator pos:start="409:57" pos:end="409:57">*</operator> <sizeof pos:start="409:59" pos:end="409:74">sizeof<argument_list pos:start="409:65" pos:end="409:74">(<argument pos:start="409:66" pos:end="409:73"><expr pos:start="409:66" pos:end="409:73"><operator pos:start="409:66" pos:end="409:66">*</operator><name pos:start="409:67" pos:end="409:73">filter2</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="409:77" pos:end="409:80"><expr pos:start="409:77" pos:end="409:80"><name pos:start="409:77" pos:end="409:80">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="413:5" pos:end="749:15">for <control pos:start="413:9" pos:end="413:30">(<init pos:start="413:10" pos:end="413:15"><expr pos:start="413:10" pos:end="413:14"><name pos:start="413:10" pos:end="413:10">i</name> <operator pos:start="413:12" pos:end="413:12">=</operator> <literal type="number" pos:start="413:14" pos:end="413:14">0</literal></expr>;</init> <condition pos:start="413:17" pos:end="413:25"><expr pos:start="413:17" pos:end="413:24"><name pos:start="413:17" pos:end="413:17">i</name> <operator pos:start="413:19" pos:end="413:19">&lt;</operator> <name pos:start="413:21" pos:end="413:24">dstW</name></expr>;</condition> <incr pos:start="413:27" pos:end="413:29"><expr pos:start="413:27" pos:end="413:29"><name pos:start="413:27" pos:end="413:27">i</name><operator pos:start="413:28" pos:end="413:29">++</operator></expr></incr>)</control> <block pos:start="413:32" pos:end="749:15">{<block_content pos:start="415:9" pos:end="749:15">

        <decl_stmt pos:start="415:9" pos:end="415:17"><decl pos:start="415:9" pos:end="415:13"><type pos:start="415:9" pos:end="415:11"><name pos:start="415:9" pos:end="415:11">int</name></type> <name pos:start="415:13" pos:end="415:13">j</name></decl>, <decl pos:start="415:16" pos:end="415:16"><type ref="prev" pos:start="415:9" pos:end="415:11"/><name pos:start="415:16" pos:end="415:16">k</name></decl>;</decl_stmt>



        <if_stmt pos:start="419:9" pos:end="749:15"><if pos:start="419:9" pos:end="749:15">if <condition pos:start="419:12" pos:end="419:22">(<expr pos:start="419:13" pos:end="419:21"><name pos:start="419:13" pos:end="419:21">srcFilter</name></expr>)</condition> <block pos:start="419:24" pos:end="749:15">{<block_content pos:start="421:13" pos:end="749:15">

            <for pos:start="421:13" pos:end="430:9">for <control pos:start="421:17" pos:end="421:51">(<init pos:start="421:18" pos:end="421:23"><expr pos:start="421:18" pos:end="421:22"><name pos:start="421:18" pos:end="421:18">k</name> <operator pos:start="421:20" pos:end="421:20">=</operator> <literal type="number" pos:start="421:22" pos:end="421:22">0</literal></expr>;</init> <condition pos:start="421:25" pos:end="421:46"><expr pos:start="421:25" pos:end="421:45"><name pos:start="421:25" pos:end="421:25">k</name> <operator pos:start="421:27" pos:end="421:27">&lt;</operator> <name pos:start="421:29" pos:end="421:45"><name pos:start="421:29" pos:end="421:37">srcFilter</name><operator pos:start="421:38" pos:end="421:39">-&gt;</operator><name pos:start="421:40" pos:end="421:45">length</name></name></expr>;</condition> <incr pos:start="421:48" pos:end="421:50"><expr pos:start="421:48" pos:end="421:50"><name pos:start="421:48" pos:end="421:48">k</name><operator pos:start="421:49" pos:end="421:50">++</operator></expr></incr>)</control> <block pos:start="421:53" pos:end="430:9">{<block_content pos:start="423:17" pos:end="427:73">

                <for pos:start="423:17" pos:end="427:73">for <control pos:start="423:21" pos:end="423:48">(<init pos:start="423:22" pos:end="423:27"><expr pos:start="423:22" pos:end="423:26"><name pos:start="423:22" pos:end="423:22">j</name> <operator pos:start="423:24" pos:end="423:24">=</operator> <literal type="number" pos:start="423:26" pos:end="423:26">0</literal></expr>;</init> <condition pos:start="423:29" pos:end="423:43"><expr pos:start="423:29" pos:end="423:42"><name pos:start="423:29" pos:end="423:29">j</name> <operator pos:start="423:31" pos:end="423:31">&lt;</operator> <name pos:start="423:33" pos:end="423:42">filterSize</name></expr>;</condition> <incr pos:start="423:45" pos:end="423:47"><expr pos:start="423:45" pos:end="423:47"><name pos:start="423:45" pos:end="423:45">j</name><operator pos:start="423:46" pos:end="423:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="425:21" pos:end="427:73"><block_content pos:start="425:21" pos:end="427:73">

                    <expr_stmt pos:start="425:21" pos:end="427:73"><expr pos:start="425:21" pos:end="427:72"><name pos:start="425:21" pos:end="425:52"><name pos:start="425:21" pos:end="425:27">filter2</name><index pos:start="425:28" pos:end="425:52">[<expr pos:start="425:29" pos:end="425:51"><name pos:start="425:29" pos:end="425:29">i</name> <operator pos:start="425:31" pos:end="425:31">*</operator> <name pos:start="425:33" pos:end="425:43">filter2Size</name> <operator pos:start="425:45" pos:end="425:45">+</operator> <name pos:start="425:47" pos:end="425:47">k</name> <operator pos:start="425:49" pos:end="425:49">+</operator> <name pos:start="425:51" pos:end="425:51">j</name></expr>]</index></name> <operator pos:start="425:54" pos:end="425:55">+=</operator>

                        <name pos:start="427:25" pos:end="427:43"><name pos:start="427:25" pos:end="427:33">srcFilter</name><operator pos:start="427:34" pos:end="427:35">-&gt;</operator><name pos:start="427:36" pos:end="427:40">coeff</name><index pos:start="427:41" pos:end="427:43">[<expr pos:start="427:42" pos:end="427:42"><name pos:start="427:42" pos:end="427:42">k</name></expr>]</index></name> <operator pos:start="427:45" pos:end="427:45">*</operator> <name pos:start="427:47" pos:end="427:72"><name pos:start="427:47" pos:end="427:52">filter</name><index pos:start="427:53" pos:end="427:72">[<expr pos:start="427:54" pos:end="427:71"><name pos:start="427:54" pos:end="427:54">i</name> <operator pos:start="427:56" pos:end="427:56">*</operator> <name pos:start="427:58" pos:end="427:67">filterSize</name> <operator pos:start="427:69" pos:end="427:69">+</operator> <name pos:start="427:71" pos:end="427:71">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>


        </block_content>}</block></for> <if_stmt pos:start="430:11" pos:end="749:15"><else pos:start="430:11" pos:end="749:15">else <block pos:start="430:16" pos:end="749:15">{<block_content pos:start="432:13" pos:end="749:15">

            <for pos:start="432:13" pos:end="434:74">for <control pos:start="432:17" pos:end="432:44">(<init pos:start="432:18" pos:end="432:23"><expr pos:start="432:18" pos:end="432:22"><name pos:start="432:18" pos:end="432:18">j</name> <operator pos:start="432:20" pos:end="432:20">=</operator> <literal type="number" pos:start="432:22" pos:end="432:22">0</literal></expr>;</init> <condition pos:start="432:25" pos:end="432:39"><expr pos:start="432:25" pos:end="432:38"><name pos:start="432:25" pos:end="432:25">j</name> <operator pos:start="432:27" pos:end="432:27">&lt;</operator> <name pos:start="432:29" pos:end="432:38">filterSize</name></expr>;</condition> <incr pos:start="432:41" pos:end="432:43"><expr pos:start="432:41" pos:end="432:43"><name pos:start="432:41" pos:end="432:41">j</name><operator pos:start="432:42" pos:end="432:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="434:17" pos:end="434:74"><block_content pos:start="434:17" pos:end="434:74">

                <expr_stmt pos:start="434:17" pos:end="434:74"><expr pos:start="434:17" pos:end="434:73"><name pos:start="434:17" pos:end="434:44"><name pos:start="434:17" pos:end="434:23">filter2</name><index pos:start="434:24" pos:end="434:44">[<expr pos:start="434:25" pos:end="434:43"><name pos:start="434:25" pos:end="434:25">i</name> <operator pos:start="434:27" pos:end="434:27">*</operator> <name pos:start="434:29" pos:end="434:39">filter2Size</name> <operator pos:start="434:41" pos:end="434:41">+</operator> <name pos:start="434:43" pos:end="434:43">j</name></expr>]</index></name> <operator pos:start="434:46" pos:end="434:46">=</operator> <name pos:start="434:48" pos:end="434:73"><name pos:start="434:48" pos:end="434:53">filter</name><index pos:start="434:54" pos:end="434:73">[<expr pos:start="434:55" pos:end="434:72"><name pos:start="434:55" pos:end="434:55">i</name> <operator pos:start="434:57" pos:end="434:57">*</operator> <name pos:start="434:59" pos:end="434:68">filterSize</name> <operator pos:start="434:70" pos:end="434:70">+</operator> <name pos:start="434:72" pos:end="434:72">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>


        <comment type="line" pos:start="437:9" pos:end="437:26">// FIXME dstFilter</comment>



        <expr_stmt pos:start="441:9" pos:end="441:72"><expr pos:start="441:9" pos:end="441:71"><operator pos:start="441:9" pos:end="441:9">(</operator><operator pos:start="441:10" pos:end="441:10">*</operator><name pos:start="441:11" pos:end="441:19">filterPos</name><operator pos:start="441:20" pos:end="441:20">)</operator><index pos:start="441:21" pos:end="441:23">[<expr pos:start="441:22" pos:end="441:22"><name pos:start="441:22" pos:end="441:22">i</name></expr>]</index> <operator pos:start="441:25" pos:end="441:26">+=</operator> <operator pos:start="441:28" pos:end="441:28">(</operator><name pos:start="441:29" pos:end="441:38">filterSize</name> <operator pos:start="441:40" pos:end="441:40">-</operator> <literal type="number" pos:start="441:42" pos:end="441:42">1</literal><operator pos:start="441:43" pos:end="441:43">)</operator> <operator pos:start="441:45" pos:end="441:45">/</operator> <literal type="number" pos:start="441:47" pos:end="441:49">2</literal> <operator pos:start="441:49" pos:end="441:49">-</operator> <operator pos:start="441:51" pos:end="441:51">(</operator><name pos:start="441:52" pos:end="441:62">filter2Size</name> <operator pos:start="441:64" pos:end="441:64">-</operator> <literal type="number" pos:start="441:66" pos:end="441:66">1</literal><operator pos:start="441:67" pos:end="441:67">)</operator> <operator pos:start="441:69" pos:end="441:69">/</operator> <literal type="number" pos:start="441:71" pos:end="441:71">2</literal></expr>;</expr_stmt>


    <expr_stmt pos:start="444:5" pos:end="444:22"><expr pos:start="444:5" pos:end="444:21"><call pos:start="444:5" pos:end="444:21"><name pos:start="444:5" pos:end="444:12">av_freep</name><argument_list pos:start="444:13" pos:end="444:21">(<argument pos:start="444:14" pos:end="444:20"><expr pos:start="444:14" pos:end="444:20"><operator pos:start="444:14" pos:end="444:14">&amp;</operator><name pos:start="444:15" pos:end="444:20">filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="448:5" pos:end="448:72">/* try to reduce the filter-size (step1 find size and shift left) */</comment>

    <comment type="line" pos:start="450:5" pos:end="450:76">// Assume it is near normalized (*0.5 or *2.0 is OK but * 0.001 is not).</comment>

    <expr_stmt pos:start="452:5" pos:end="452:22"><expr pos:start="452:5" pos:end="452:21"><name pos:start="452:5" pos:end="452:17">minFilterSize</name> <operator pos:start="452:19" pos:end="452:19">=</operator> <literal type="number" pos:start="452:21" pos:end="452:21">0</literal></expr>;</expr_stmt>

    <for pos:start="454:5" pos:end="749:15">for <control pos:start="454:9" pos:end="454:35">(<init pos:start="454:10" pos:end="454:22"><expr pos:start="454:10" pos:end="454:21"><name pos:start="454:10" pos:end="454:10">i</name> <operator pos:start="454:12" pos:end="454:12">=</operator> <name pos:start="454:14" pos:end="454:17">dstW</name> <operator pos:start="454:19" pos:end="454:19">-</operator> <literal type="number" pos:start="454:21" pos:end="454:21">1</literal></expr>;</init> <condition pos:start="454:24" pos:end="454:30"><expr pos:start="454:24" pos:end="454:29"><name pos:start="454:24" pos:end="454:24">i</name> <operator pos:start="454:26" pos:end="454:27">&gt;=</operator> <literal type="number" pos:start="454:29" pos:end="454:29">0</literal></expr>;</condition> <incr pos:start="454:32" pos:end="454:34"><expr pos:start="454:32" pos:end="454:34"><name pos:start="454:32" pos:end="454:32">i</name><operator pos:start="454:33" pos:end="454:34">--</operator></expr></incr>)</control> <block pos:start="454:37" pos:end="749:15">{<block_content pos:start="456:9" pos:end="749:15">

        <decl_stmt pos:start="456:9" pos:end="456:30"><decl pos:start="456:9" pos:end="456:29"><type pos:start="456:9" pos:end="456:11"><name pos:start="456:9" pos:end="456:11">int</name></type> <name pos:start="456:13" pos:end="456:15">min</name> <init pos:start="456:17" pos:end="456:29">= <expr pos:start="456:19" pos:end="456:29"><name pos:start="456:19" pos:end="456:29">filter2Size</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="458:9" pos:end="458:14"><decl pos:start="458:9" pos:end="458:13"><type pos:start="458:9" pos:end="458:11"><name pos:start="458:9" pos:end="458:11">int</name></type> <name pos:start="458:13" pos:end="458:13">j</name></decl>;</decl_stmt>

        <decl_stmt pos:start="460:9" pos:end="460:29"><decl pos:start="460:9" pos:end="460:28"><type pos:start="460:9" pos:end="460:15"><name pos:start="460:9" pos:end="460:15">int64_t</name></type> <name pos:start="460:17" pos:end="460:22">cutOff</name> <init pos:start="460:24" pos:end="460:28">= <expr pos:start="460:26" pos:end="460:28"><literal type="number" pos:start="460:26" pos:end="460:28">0.0</literal></expr></init></decl>;</decl_stmt>



        <comment type="block" pos:start="464:9" pos:end="464:72">/* get rid of near zero elements on the left by shifting left */</comment>

        <for pos:start="466:9" pos:end="749:15">for <control pos:start="466:13" pos:end="466:41">(<init pos:start="466:14" pos:end="466:19"><expr pos:start="466:14" pos:end="466:18"><name pos:start="466:14" pos:end="466:14">j</name> <operator pos:start="466:16" pos:end="466:16">=</operator> <literal type="number" pos:start="466:18" pos:end="466:18">0</literal></expr>;</init> <condition pos:start="466:21" pos:end="466:36"><expr pos:start="466:21" pos:end="466:35"><name pos:start="466:21" pos:end="466:21">j</name> <operator pos:start="466:23" pos:end="466:23">&lt;</operator> <name pos:start="466:25" pos:end="466:35">filter2Size</name></expr>;</condition> <incr pos:start="466:38" pos:end="466:40"><expr pos:start="466:38" pos:end="466:40"><name pos:start="466:38" pos:end="466:38">j</name><operator pos:start="466:39" pos:end="466:40">++</operator></expr></incr>)</control> <block pos:start="466:43" pos:end="749:15">{<block_content pos:start="468:13" pos:end="749:15">

            <decl_stmt pos:start="468:13" pos:end="468:18"><decl pos:start="468:13" pos:end="468:17"><type pos:start="468:13" pos:end="468:15"><name pos:start="468:13" pos:end="468:15">int</name></type> <name pos:start="468:17" pos:end="468:17">k</name></decl>;</decl_stmt>

            <expr_stmt pos:start="470:13" pos:end="470:54"><expr pos:start="470:13" pos:end="470:53"><name pos:start="470:13" pos:end="470:18">cutOff</name> <operator pos:start="470:20" pos:end="470:21">+=</operator> <call pos:start="470:23" pos:end="470:53"><name pos:start="470:23" pos:end="470:27">FFABS</name><argument_list pos:start="470:28" pos:end="470:53">(<argument pos:start="470:29" pos:end="470:52"><expr pos:start="470:29" pos:end="470:52"><name pos:start="470:29" pos:end="470:52"><name pos:start="470:29" pos:end="470:35">filter2</name><index pos:start="470:36" pos:end="470:52">[<expr pos:start="470:37" pos:end="470:51"><name pos:start="470:37" pos:end="470:37">i</name> <operator pos:start="470:39" pos:end="470:39">*</operator> <name pos:start="470:41" pos:end="470:51">filter2Size</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="474:13" pos:end="476:22"><if pos:start="474:13" pos:end="476:22">if <condition pos:start="474:16" pos:end="474:54">(<expr pos:start="474:17" pos:end="474:53"><name pos:start="474:17" pos:end="474:22">cutOff</name> <operator pos:start="474:24" pos:end="474:24">&gt;</operator> <name pos:start="474:26" pos:end="474:46">SWS_MAX_REDUCE_CUTOFF</name> <operator pos:start="474:48" pos:end="474:48">*</operator> <name pos:start="474:50" pos:end="474:53">fone</name></expr>)</condition><block type="pseudo" pos:start="476:17" pos:end="476:22"><block_content pos:start="476:17" pos:end="476:22">

                <break pos:start="476:17" pos:end="476:22">break;</break></block_content></block></if></if_stmt>



            <comment type="block" pos:start="480:13" pos:end="482:34">/* preserve monotonicity because the core can't handle the

             * filter otherwise */</comment>

            <if_stmt pos:start="484:13" pos:end="486:22"><if pos:start="484:13" pos:end="486:22">if <condition pos:start="484:16" pos:end="484:71">(<expr pos:start="484:17" pos:end="484:70"><name pos:start="484:17" pos:end="484:17">i</name> <operator pos:start="484:19" pos:end="484:19">&lt;</operator> <name pos:start="484:21" pos:end="484:24">dstW</name> <operator pos:start="484:26" pos:end="484:26">-</operator> <literal type="number" pos:start="484:28" pos:end="484:28">1</literal> <operator pos:start="484:30" pos:end="484:31">&amp;&amp;</operator> <operator pos:start="484:33" pos:end="484:33">(</operator><operator pos:start="484:34" pos:end="484:34">*</operator><name pos:start="484:35" pos:end="484:43">filterPos</name><operator pos:start="484:44" pos:end="484:44">)</operator><index pos:start="484:45" pos:end="484:47">[<expr pos:start="484:46" pos:end="484:46"><name pos:start="484:46" pos:end="484:46">i</name></expr>]</index> <operator pos:start="484:49" pos:end="484:50">&gt;=</operator> <operator pos:start="484:52" pos:end="484:52">(</operator><operator pos:start="484:53" pos:end="484:53">*</operator><name pos:start="484:54" pos:end="484:62">filterPos</name><operator pos:start="484:63" pos:end="484:63">)</operator><index pos:start="484:64" pos:end="484:70">[<expr pos:start="484:65" pos:end="484:69"><name pos:start="484:65" pos:end="484:65">i</name> <operator pos:start="484:67" pos:end="484:67">+</operator> <literal type="number" pos:start="484:69" pos:end="484:69">1</literal></expr>]</index></expr>)</condition><block type="pseudo" pos:start="486:17" pos:end="486:22"><block_content pos:start="486:17" pos:end="486:22">

                <break pos:start="486:17" pos:end="486:22">break;</break></block_content></block></if></if_stmt>



            <comment type="line" pos:start="490:13" pos:end="490:44">// move filter coefficients left</comment>

            <for pos:start="492:13" pos:end="494:80">for <control pos:start="492:17" pos:end="492:45">(<init pos:start="492:18" pos:end="492:23"><expr pos:start="492:18" pos:end="492:22"><name pos:start="492:18" pos:end="492:18">k</name> <operator pos:start="492:20" pos:end="492:20">=</operator> <literal type="number" pos:start="492:22" pos:end="492:22">1</literal></expr>;</init> <condition pos:start="492:25" pos:end="492:40"><expr pos:start="492:25" pos:end="492:39"><name pos:start="492:25" pos:end="492:25">k</name> <operator pos:start="492:27" pos:end="492:27">&lt;</operator> <name pos:start="492:29" pos:end="492:39">filter2Size</name></expr>;</condition> <incr pos:start="492:42" pos:end="492:44"><expr pos:start="492:42" pos:end="492:44"><name pos:start="492:42" pos:end="492:42">k</name><operator pos:start="492:43" pos:end="492:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="494:17" pos:end="494:80"><block_content pos:start="494:17" pos:end="494:80">

                <expr_stmt pos:start="494:17" pos:end="494:80"><expr pos:start="494:17" pos:end="494:79"><name pos:start="494:17" pos:end="494:48"><name pos:start="494:17" pos:end="494:23">filter2</name><index pos:start="494:24" pos:end="494:48">[<expr pos:start="494:25" pos:end="494:47"><name pos:start="494:25" pos:end="494:25">i</name> <operator pos:start="494:27" pos:end="494:27">*</operator> <name pos:start="494:29" pos:end="494:39">filter2Size</name> <operator pos:start="494:41" pos:end="494:41">+</operator> <name pos:start="494:43" pos:end="494:43">k</name> <operator pos:start="494:45" pos:end="494:45">-</operator> <literal type="number" pos:start="494:47" pos:end="494:47">1</literal></expr>]</index></name> <operator pos:start="494:50" pos:end="494:50">=</operator> <name pos:start="494:52" pos:end="494:79"><name pos:start="494:52" pos:end="494:58">filter2</name><index pos:start="494:59" pos:end="494:79">[<expr pos:start="494:60" pos:end="494:78"><name pos:start="494:60" pos:end="494:60">i</name> <operator pos:start="494:62" pos:end="494:62">*</operator> <name pos:start="494:64" pos:end="494:74">filter2Size</name> <operator pos:start="494:76" pos:end="494:76">+</operator> <name pos:start="494:78" pos:end="494:78">k</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="496:13" pos:end="496:49"><expr pos:start="496:13" pos:end="496:48"><name pos:start="496:13" pos:end="496:44"><name pos:start="496:13" pos:end="496:19">filter2</name><index pos:start="496:20" pos:end="496:44">[<expr pos:start="496:21" pos:end="496:43"><name pos:start="496:21" pos:end="496:21">i</name> <operator pos:start="496:23" pos:end="496:23">*</operator> <name pos:start="496:25" pos:end="496:35">filter2Size</name> <operator pos:start="496:37" pos:end="496:37">+</operator> <name pos:start="496:39" pos:end="496:39">k</name> <operator pos:start="496:41" pos:end="496:41">-</operator> <literal type="number" pos:start="496:43" pos:end="496:43">1</literal></expr>]</index></name> <operator pos:start="496:46" pos:end="496:46">=</operator> <literal type="number" pos:start="496:48" pos:end="496:48">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="498:13" pos:end="498:30"><expr pos:start="498:13" pos:end="498:29"><operator pos:start="498:13" pos:end="498:13">(</operator><operator pos:start="498:14" pos:end="498:14">*</operator><name pos:start="498:15" pos:end="498:23">filterPos</name><operator pos:start="498:24" pos:end="498:24">)</operator><index pos:start="498:25" pos:end="498:27">[<expr pos:start="498:26" pos:end="498:26"><name pos:start="498:26" pos:end="498:26">i</name></expr>]</index><operator pos:start="498:28" pos:end="498:29">++</operator></expr>;</expr_stmt>




        <expr_stmt pos:start="503:9" pos:end="503:19"><expr pos:start="503:9" pos:end="503:18"><name pos:start="503:9" pos:end="503:14">cutOff</name> <operator pos:start="503:16" pos:end="503:16">=</operator> <literal type="number" pos:start="503:18" pos:end="503:18">0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="505:9" pos:end="505:43">/* count near zeros on the right */</comment>

        <for pos:start="507:9" pos:end="749:15">for <control pos:start="507:13" pos:end="507:45">(<init pos:start="507:14" pos:end="507:33"><expr pos:start="507:14" pos:end="507:32"><name pos:start="507:14" pos:end="507:14">j</name> <operator pos:start="507:16" pos:end="507:16">=</operator> <name pos:start="507:18" pos:end="507:28">filter2Size</name> <operator pos:start="507:30" pos:end="507:30">-</operator> <literal type="number" pos:start="507:32" pos:end="507:32">1</literal></expr>;</init> <condition pos:start="507:35" pos:end="507:40"><expr pos:start="507:35" pos:end="507:39"><name pos:start="507:35" pos:end="507:35">j</name> <operator pos:start="507:37" pos:end="507:37">&gt;</operator> <literal type="number" pos:start="507:39" pos:end="507:39">0</literal></expr>;</condition> <incr pos:start="507:42" pos:end="507:44"><expr pos:start="507:42" pos:end="507:44"><name pos:start="507:42" pos:end="507:42">j</name><operator pos:start="507:43" pos:end="507:44">--</operator></expr></incr>)</control> <block pos:start="507:47" pos:end="749:15">{<block_content pos:start="509:13" pos:end="749:15">

            <expr_stmt pos:start="509:13" pos:end="509:58"><expr pos:start="509:13" pos:end="509:57"><name pos:start="509:13" pos:end="509:18">cutOff</name> <operator pos:start="509:20" pos:end="509:21">+=</operator> <call pos:start="509:23" pos:end="509:57"><name pos:start="509:23" pos:end="509:27">FFABS</name><argument_list pos:start="509:28" pos:end="509:57">(<argument pos:start="509:29" pos:end="509:56"><expr pos:start="509:29" pos:end="509:56"><name pos:start="509:29" pos:end="509:56"><name pos:start="509:29" pos:end="509:35">filter2</name><index pos:start="509:36" pos:end="509:56">[<expr pos:start="509:37" pos:end="509:55"><name pos:start="509:37" pos:end="509:37">i</name> <operator pos:start="509:39" pos:end="509:39">*</operator> <name pos:start="509:41" pos:end="509:51">filter2Size</name> <operator pos:start="509:53" pos:end="509:53">+</operator> <name pos:start="509:55" pos:end="509:55">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="513:13" pos:end="515:22"><if pos:start="513:13" pos:end="515:22">if <condition pos:start="513:16" pos:end="513:54">(<expr pos:start="513:17" pos:end="513:53"><name pos:start="513:17" pos:end="513:22">cutOff</name> <operator pos:start="513:24" pos:end="513:24">&gt;</operator> <name pos:start="513:26" pos:end="513:46">SWS_MAX_REDUCE_CUTOFF</name> <operator pos:start="513:48" pos:end="513:48">*</operator> <name pos:start="513:50" pos:end="513:53">fone</name></expr>)</condition><block type="pseudo" pos:start="515:17" pos:end="515:22"><block_content pos:start="515:17" pos:end="515:22">

                <break pos:start="515:17" pos:end="515:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="517:13" pos:end="517:18"><expr pos:start="517:13" pos:end="517:17"><name pos:start="517:13" pos:end="517:15">min</name><operator pos:start="517:16" pos:end="517:17">--</operator></expr>;</expr_stmt>




        <if_stmt pos:start="522:9" pos:end="524:32"><if pos:start="522:9" pos:end="524:32">if <condition pos:start="522:12" pos:end="522:32">(<expr pos:start="522:13" pos:end="522:31"><name pos:start="522:13" pos:end="522:15">min</name> <operator pos:start="522:17" pos:end="522:17">&gt;</operator> <name pos:start="522:19" pos:end="522:31">minFilterSize</name></expr>)</condition><block type="pseudo" pos:start="524:13" pos:end="524:32"><block_content pos:start="524:13" pos:end="524:32">

            <expr_stmt pos:start="524:13" pos:end="524:32"><expr pos:start="524:13" pos:end="524:31"><name pos:start="524:13" pos:end="524:25">minFilterSize</name> <operator pos:start="524:27" pos:end="524:27">=</operator> <name pos:start="524:29" pos:end="524:31">min</name></expr>;</expr_stmt></block_content></block></if></if_stmt>




    <if_stmt pos:start="529:5" pos:end="749:15"><if pos:start="529:5" pos:end="749:15">if <condition pos:start="529:8" pos:end="529:31">(<expr pos:start="529:9" pos:end="529:30"><call pos:start="529:9" pos:end="529:30"><name pos:start="529:9" pos:end="529:19">PPC_ALTIVEC</name><argument_list pos:start="529:20" pos:end="529:30">(<argument pos:start="529:21" pos:end="529:29"><expr pos:start="529:21" pos:end="529:29"><name pos:start="529:21" pos:end="529:29">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="529:33" pos:end="749:15">{<block_content pos:start="533:9" pos:end="749:15">

        <comment type="line" pos:start="531:9" pos:end="531:78">// we can handle the special case 4, so we don't want to go the full 8</comment>

        <if_stmt pos:start="533:9" pos:end="535:28"><if pos:start="533:9" pos:end="535:28">if <condition pos:start="533:12" pos:end="533:30">(<expr pos:start="533:13" pos:end="533:29"><name pos:start="533:13" pos:end="533:25">minFilterSize</name> <operator pos:start="533:27" pos:end="533:27">&lt;</operator> <literal type="number" pos:start="533:29" pos:end="533:29">5</literal></expr>)</condition><block type="pseudo" pos:start="535:13" pos:end="535:28"><block_content pos:start="535:13" pos:end="535:28">

            <expr_stmt pos:start="535:13" pos:end="535:28"><expr pos:start="535:13" pos:end="535:27"><name pos:start="535:13" pos:end="535:23">filterAlign</name> <operator pos:start="535:25" pos:end="535:25">=</operator> <literal type="number" pos:start="535:27" pos:end="535:27">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="539:9" pos:end="543:77">/* We really don't want to waste our time doing useless computation, so

         * fall back on the scalar C code for very small filters.

         * Vectorizing is worth it only if you have a decent-sized vector. */</comment>

        <if_stmt pos:start="545:9" pos:end="547:28"><if pos:start="545:9" pos:end="547:28">if <condition pos:start="545:12" pos:end="545:30">(<expr pos:start="545:13" pos:end="545:29"><name pos:start="545:13" pos:end="545:25">minFilterSize</name> <operator pos:start="545:27" pos:end="545:27">&lt;</operator> <literal type="number" pos:start="545:29" pos:end="545:29">3</literal></expr>)</condition><block type="pseudo" pos:start="547:13" pos:end="547:28"><block_content pos:start="547:13" pos:end="547:28">

            <expr_stmt pos:start="547:13" pos:end="547:28"><expr pos:start="547:13" pos:end="547:27"><name pos:start="547:13" pos:end="547:23">filterAlign</name> <operator pos:start="547:25" pos:end="547:25">=</operator> <literal type="number" pos:start="547:27" pos:end="547:27">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>




    <if_stmt pos:start="552:5" pos:end="749:15"><if pos:start="552:5" pos:end="749:15">if <condition pos:start="552:8" pos:end="552:48">(<expr pos:start="552:9" pos:end="552:47"><name pos:start="552:9" pos:end="552:16">HAVE_MMX</name> <operator pos:start="552:18" pos:end="552:19">&amp;&amp;</operator> <name pos:start="552:21" pos:end="552:29">cpu_flags</name> <operator pos:start="552:31" pos:end="552:31">&amp;</operator> <name pos:start="552:33" pos:end="552:47">AV_CPU_FLAG_MMX</name></expr>)</condition> <block pos:start="552:50" pos:end="749:15">{<block_content pos:start="556:9" pos:end="749:15">

        <comment type="line" pos:start="554:9" pos:end="554:55">// special case for unscaled vertical filtering</comment>

        <if_stmt pos:start="556:9" pos:end="558:28"><if pos:start="556:9" pos:end="558:28">if <condition pos:start="556:12" pos:end="556:51">(<expr pos:start="556:13" pos:end="556:50"><name pos:start="556:13" pos:end="556:25">minFilterSize</name> <operator pos:start="556:27" pos:end="556:28">==</operator> <literal type="number" pos:start="556:30" pos:end="556:30">1</literal> <operator pos:start="556:32" pos:end="556:33">&amp;&amp;</operator> <name pos:start="556:35" pos:end="556:45">filterAlign</name> <operator pos:start="556:47" pos:end="556:48">==</operator> <literal type="number" pos:start="556:50" pos:end="556:50">2</literal></expr>)</condition><block type="pseudo" pos:start="558:13" pos:end="558:28"><block_content pos:start="558:13" pos:end="558:28">

            <expr_stmt pos:start="558:13" pos:end="558:28"><expr pos:start="558:13" pos:end="558:27"><name pos:start="558:13" pos:end="558:23">filterAlign</name> <operator pos:start="558:25" pos:end="558:25">=</operator> <literal type="number" pos:start="558:27" pos:end="558:27">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>




    <expr_stmt pos:start="563:5" pos:end="563:34"><expr pos:start="563:5" pos:end="563:33"><call pos:start="563:5" pos:end="563:33"><name pos:start="563:5" pos:end="563:14">av_assert0</name><argument_list pos:start="563:15" pos:end="563:33">(<argument pos:start="563:16" pos:end="563:32"><expr pos:start="563:16" pos:end="563:32"><name pos:start="563:16" pos:end="563:28">minFilterSize</name> <operator pos:start="563:30" pos:end="563:30">&gt;</operator> <literal type="number" pos:start="563:32" pos:end="563:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="565:5" pos:end="565:76"><expr pos:start="565:5" pos:end="565:75"><name pos:start="565:5" pos:end="565:14">filterSize</name> <operator pos:start="565:16" pos:end="565:16">=</operator> <operator pos:start="565:18" pos:end="565:18">(</operator><name pos:start="565:19" pos:end="565:31">minFilterSize</name> <operator pos:start="565:33" pos:end="565:33">+</operator> <operator pos:start="565:35" pos:end="565:35">(</operator><name pos:start="565:36" pos:end="565:46">filterAlign</name> <operator pos:start="565:48" pos:end="565:48">-</operator> <literal type="number" pos:start="565:50" pos:end="565:50">1</literal><operator pos:start="565:51" pos:end="565:51">)</operator><operator pos:start="565:52" pos:end="565:52">)</operator> <operator pos:start="565:54" pos:end="565:54">&amp;</operator> <operator pos:start="565:56" pos:end="565:56">(</operator><operator pos:start="565:57" pos:end="565:57">~</operator><operator pos:start="565:58" pos:end="565:58">(</operator><name pos:start="565:59" pos:end="565:69">filterAlign</name> <operator pos:start="565:71" pos:end="565:71">-</operator> <literal type="number" pos:start="565:73" pos:end="565:73">1</literal><operator pos:start="565:74" pos:end="565:74">)</operator><operator pos:start="565:75" pos:end="565:75">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="567:5" pos:end="567:31"><expr pos:start="567:5" pos:end="567:30"><call pos:start="567:5" pos:end="567:30"><name pos:start="567:5" pos:end="567:14">av_assert0</name><argument_list pos:start="567:15" pos:end="567:30">(<argument pos:start="567:16" pos:end="567:29"><expr pos:start="567:16" pos:end="567:29"><name pos:start="567:16" pos:end="567:25">filterSize</name> <operator pos:start="567:27" pos:end="567:27">&gt;</operator> <literal type="number" pos:start="567:29" pos:end="567:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="569:5" pos:end="569:60"><expr pos:start="569:5" pos:end="569:59"><name pos:start="569:5" pos:end="569:10">filter</name> <operator pos:start="569:12" pos:end="569:12">=</operator> <call pos:start="569:14" pos:end="569:59"><name pos:start="569:14" pos:end="569:22">av_malloc</name><argument_list pos:start="569:23" pos:end="569:59">(<argument pos:start="569:24" pos:end="569:58"><expr pos:start="569:24" pos:end="569:58"><name pos:start="569:24" pos:end="569:33">filterSize</name> <operator pos:start="569:35" pos:end="569:35">*</operator> <name pos:start="569:37" pos:end="569:40">dstW</name> <operator pos:start="569:42" pos:end="569:42">*</operator> <sizeof pos:start="569:44" pos:end="569:58">sizeof<argument_list pos:start="569:50" pos:end="569:58">(<argument pos:start="569:51" pos:end="569:57"><expr pos:start="569:51" pos:end="569:57"><operator pos:start="569:51" pos:end="569:51">*</operator><name pos:start="569:52" pos:end="569:57">filter</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="571:5" pos:end="749:15"><if pos:start="571:5" pos:end="749:15">if <condition pos:start="571:8" pos:end="573:79">(<expr pos:start="571:9" pos:end="573:78"><name pos:start="571:9" pos:end="571:18">filterSize</name> <operator pos:start="571:20" pos:end="571:21">&gt;=</operator> <name pos:start="571:23" pos:end="571:37">MAX_FILTER_SIZE</name> <operator pos:start="571:39" pos:end="571:39">*</operator> <literal type="number" pos:start="571:41" pos:end="571:42">16</literal> <operator pos:start="571:44" pos:end="571:44">/</operator>

                      <operator pos:start="573:23" pos:end="573:23">(</operator><ternary pos:start="573:24" pos:end="573:66"><condition pos:start="573:24" pos:end="573:51"><expr pos:start="573:24" pos:end="573:49"><operator pos:start="573:24" pos:end="573:24">(</operator><name pos:start="573:25" pos:end="573:29">flags</name> <operator pos:start="573:31" pos:end="573:31">&amp;</operator> <name pos:start="573:33" pos:end="573:48">SWS_ACCURATE_RND</name><operator pos:start="573:49" pos:end="573:49">)</operator></expr> ?</condition><then pos:start="573:53" pos:end="573:61"> <expr pos:start="573:53" pos:end="573:61"><name pos:start="573:53" pos:end="573:61">APCK_SIZE</name></expr> </then><else pos:start="573:63" pos:end="573:66">: <expr pos:start="573:65" pos:end="573:66"><literal type="number" pos:start="573:65" pos:end="573:66">16</literal></expr></else></ternary><operator pos:start="573:67" pos:end="573:67">)</operator> <operator pos:start="573:69" pos:end="573:70">||</operator> <operator pos:start="573:72" pos:end="573:72">!</operator><name pos:start="573:73" pos:end="573:78">filter</name></expr>)</condition> <block pos:start="573:81" pos:end="749:15">{<block_content pos:start="575:9" pos:end="749:15">

        <expr_stmt pos:start="575:9" pos:end="575:152"><expr pos:start="575:9" pos:end="575:151"><call pos:start="575:9" pos:end="575:151"><name pos:start="575:9" pos:end="575:14">av_log</name><argument_list pos:start="575:15" pos:end="575:151">(<argument pos:start="575:16" pos:end="575:19"><expr pos:start="575:16" pos:end="575:19"><name pos:start="575:16" pos:end="575:19">NULL</name></expr></argument>, <argument pos:start="575:22" pos:end="575:33"><expr pos:start="575:22" pos:end="575:33"><name pos:start="575:22" pos:end="575:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="575:36" pos:end="575:138"><expr pos:start="575:36" pos:end="575:138"><literal type="string" pos:start="575:36" pos:end="575:138">"sws: filterSize %d is too large, try less extreem scaling or increase MAX_FILTER_SIZE and recompile\n"</literal></expr></argument>, <argument pos:start="575:141" pos:end="575:150"><expr pos:start="575:141" pos:end="575:150"><name pos:start="575:141" pos:end="575:150">filterSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="577:9" pos:end="577:18">goto <name pos:start="577:14" pos:end="577:17">fail</name>;</goto>


    <expr_stmt pos:start="580:5" pos:end="580:32"><expr pos:start="580:5" pos:end="580:31"><operator pos:start="580:5" pos:end="580:5">*</operator><name pos:start="580:6" pos:end="580:18">outFilterSize</name> <operator pos:start="580:20" pos:end="580:20">=</operator> <name pos:start="580:22" pos:end="580:31">filterSize</name></expr>;</expr_stmt>



    <if_stmt pos:start="584:5" pos:end="590:40"><if pos:start="584:5" pos:end="590:40">if <condition pos:start="584:8" pos:end="584:31">(<expr pos:start="584:9" pos:end="584:30"><name pos:start="584:9" pos:end="584:13">flags</name> <operator pos:start="584:15" pos:end="584:15">&amp;</operator> <name pos:start="584:17" pos:end="584:30">SWS_PRINT_INFO</name></expr>)</condition><block type="pseudo" pos:start="586:9" pos:end="590:40"><block_content pos:start="586:9" pos:end="590:40">

        <expr_stmt pos:start="586:9" pos:end="590:40"><expr pos:start="586:9" pos:end="590:39"><call pos:start="586:9" pos:end="590:39"><name pos:start="586:9" pos:end="586:14">av_log</name><argument_list pos:start="586:15" pos:end="590:39">(<argument pos:start="586:16" pos:end="586:19"><expr pos:start="586:16" pos:end="586:19"><name pos:start="586:16" pos:end="586:19">NULL</name></expr></argument>, <argument pos:start="586:22" pos:end="586:35"><expr pos:start="586:22" pos:end="586:35"><name pos:start="586:22" pos:end="586:35">AV_LOG_VERBOSE</name></expr></argument>,

               <argument pos:start="588:16" pos:end="588:68"><expr pos:start="588:16" pos:end="588:68"><literal type="string" pos:start="588:16" pos:end="588:68">"SwScaler: reducing / aligning filtersize %d -&gt; %d\n"</literal></expr></argument>,

               <argument pos:start="590:16" pos:end="590:26"><expr pos:start="590:16" pos:end="590:26"><name pos:start="590:16" pos:end="590:26">filter2Size</name></expr></argument>, <argument pos:start="590:29" pos:end="590:38"><expr pos:start="590:29" pos:end="590:38"><name pos:start="590:29" pos:end="590:38">filterSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <comment type="block" pos:start="592:5" pos:end="592:57">/* try to reduce the filter-size (step2 reduce it) */</comment>

    <for pos:start="594:5" pos:end="749:15">for <control pos:start="594:9" pos:end="594:30">(<init pos:start="594:10" pos:end="594:15"><expr pos:start="594:10" pos:end="594:14"><name pos:start="594:10" pos:end="594:10">i</name> <operator pos:start="594:12" pos:end="594:12">=</operator> <literal type="number" pos:start="594:14" pos:end="594:14">0</literal></expr>;</init> <condition pos:start="594:17" pos:end="594:25"><expr pos:start="594:17" pos:end="594:24"><name pos:start="594:17" pos:end="594:17">i</name> <operator pos:start="594:19" pos:end="594:19">&lt;</operator> <name pos:start="594:21" pos:end="594:24">dstW</name></expr>;</condition> <incr pos:start="594:27" pos:end="594:29"><expr pos:start="594:27" pos:end="594:29"><name pos:start="594:27" pos:end="594:27">i</name><operator pos:start="594:28" pos:end="594:29">++</operator></expr></incr>)</control> <block pos:start="594:32" pos:end="749:15">{<block_content pos:start="596:9" pos:end="749:15">

        <decl_stmt pos:start="596:9" pos:end="596:14"><decl pos:start="596:9" pos:end="596:13"><type pos:start="596:9" pos:end="596:11"><name pos:start="596:9" pos:end="596:11">int</name></type> <name pos:start="596:13" pos:end="596:13">j</name></decl>;</decl_stmt>



        <for pos:start="600:9" pos:end="749:15">for <control pos:start="600:13" pos:end="600:40">(<init pos:start="600:14" pos:end="600:19"><expr pos:start="600:14" pos:end="600:18"><name pos:start="600:14" pos:end="600:14">j</name> <operator pos:start="600:16" pos:end="600:16">=</operator> <literal type="number" pos:start="600:18" pos:end="600:18">0</literal></expr>;</init> <condition pos:start="600:21" pos:end="600:35"><expr pos:start="600:21" pos:end="600:34"><name pos:start="600:21" pos:end="600:21">j</name> <operator pos:start="600:23" pos:end="600:23">&lt;</operator> <name pos:start="600:25" pos:end="600:34">filterSize</name></expr>;</condition> <incr pos:start="600:37" pos:end="600:39"><expr pos:start="600:37" pos:end="600:39"><name pos:start="600:37" pos:end="600:37">j</name><operator pos:start="600:38" pos:end="600:39">++</operator></expr></incr>)</control> <block pos:start="600:42" pos:end="749:15">{<block_content pos:start="602:13" pos:end="749:15">

            <if_stmt pos:start="602:13" pos:end="608:74"><if pos:start="602:13" pos:end="604:47">if <condition pos:start="602:16" pos:end="602:33">(<expr pos:start="602:17" pos:end="602:32"><name pos:start="602:17" pos:end="602:17">j</name> <operator pos:start="602:19" pos:end="602:20">&gt;=</operator> <name pos:start="602:22" pos:end="602:32">filter2Size</name></expr>)</condition><block type="pseudo" pos:start="604:17" pos:end="604:47"><block_content pos:start="604:17" pos:end="604:47">

                <expr_stmt pos:start="604:17" pos:end="604:47"><expr pos:start="604:17" pos:end="604:46"><name pos:start="604:17" pos:end="604:42"><name pos:start="604:17" pos:end="604:22">filter</name><index pos:start="604:23" pos:end="604:42">[<expr pos:start="604:24" pos:end="604:41"><name pos:start="604:24" pos:end="604:24">i</name> <operator pos:start="604:26" pos:end="604:26">*</operator> <name pos:start="604:28" pos:end="604:37">filterSize</name> <operator pos:start="604:39" pos:end="604:39">+</operator> <name pos:start="604:41" pos:end="604:41">j</name></expr>]</index></name> <operator pos:start="604:44" pos:end="604:44">=</operator> <literal type="number" pos:start="604:46" pos:end="604:46">0</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="606:13" pos:end="608:74">else<block type="pseudo" pos:start="608:17" pos:end="608:74"><block_content pos:start="608:17" pos:end="608:74">

                <expr_stmt pos:start="608:17" pos:end="608:74"><expr pos:start="608:17" pos:end="608:73"><name pos:start="608:17" pos:end="608:42"><name pos:start="608:17" pos:end="608:22">filter</name><index pos:start="608:23" pos:end="608:42">[<expr pos:start="608:24" pos:end="608:41"><name pos:start="608:24" pos:end="608:24">i</name> <operator pos:start="608:26" pos:end="608:26">*</operator> <name pos:start="608:28" pos:end="608:37">filterSize</name> <operator pos:start="608:39" pos:end="608:39">+</operator> <name pos:start="608:41" pos:end="608:41">j</name></expr>]</index></name> <operator pos:start="608:44" pos:end="608:44">=</operator> <name pos:start="608:46" pos:end="608:73"><name pos:start="608:46" pos:end="608:52">filter2</name><index pos:start="608:53" pos:end="608:73">[<expr pos:start="608:54" pos:end="608:72"><name pos:start="608:54" pos:end="608:54">i</name> <operator pos:start="608:56" pos:end="608:56">*</operator> <name pos:start="608:58" pos:end="608:68">filter2Size</name> <operator pos:start="608:70" pos:end="608:70">+</operator> <name pos:start="608:72" pos:end="608:72">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="610:13" pos:end="612:47"><if pos:start="610:13" pos:end="612:47">if <condition pos:start="610:16" pos:end="610:61">(<expr pos:start="610:17" pos:end="610:60"><operator pos:start="610:17" pos:end="610:17">(</operator><name pos:start="610:18" pos:end="610:22">flags</name> <operator pos:start="610:24" pos:end="610:24">&amp;</operator> <name pos:start="610:26" pos:end="610:37">SWS_BITEXACT</name><operator pos:start="610:38" pos:end="610:38">)</operator> <operator pos:start="610:40" pos:end="610:41">&amp;&amp;</operator> <name pos:start="610:43" pos:end="610:43">j</name> <operator pos:start="610:45" pos:end="610:46">&gt;=</operator> <name pos:start="610:48" pos:end="610:60">minFilterSize</name></expr>)</condition><block type="pseudo" pos:start="612:17" pos:end="612:47"><block_content pos:start="612:17" pos:end="612:47">

                <expr_stmt pos:start="612:17" pos:end="612:47"><expr pos:start="612:17" pos:end="612:46"><name pos:start="612:17" pos:end="612:42"><name pos:start="612:17" pos:end="612:22">filter</name><index pos:start="612:23" pos:end="612:42">[<expr pos:start="612:24" pos:end="612:41"><name pos:start="612:24" pos:end="612:24">i</name> <operator pos:start="612:26" pos:end="612:26">*</operator> <name pos:start="612:28" pos:end="612:37">filterSize</name> <operator pos:start="612:39" pos:end="612:39">+</operator> <name pos:start="612:41" pos:end="612:41">j</name></expr>]</index></name> <operator pos:start="612:44" pos:end="612:44">=</operator> <literal type="number" pos:start="612:46" pos:end="612:46">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>





    <comment type="line" pos:start="618:5" pos:end="618:47">// FIXME try to align filterPos if possible</comment>



    <comment type="line" pos:start="622:5" pos:end="622:18">// fix borders</comment>

    <for pos:start="624:5" pos:end="749:15">for <control pos:start="624:9" pos:end="624:30">(<init pos:start="624:10" pos:end="624:15"><expr pos:start="624:10" pos:end="624:14"><name pos:start="624:10" pos:end="624:10">i</name> <operator pos:start="624:12" pos:end="624:12">=</operator> <literal type="number" pos:start="624:14" pos:end="624:14">0</literal></expr>;</init> <condition pos:start="624:17" pos:end="624:25"><expr pos:start="624:17" pos:end="624:24"><name pos:start="624:17" pos:end="624:17">i</name> <operator pos:start="624:19" pos:end="624:19">&lt;</operator> <name pos:start="624:21" pos:end="624:24">dstW</name></expr>;</condition> <incr pos:start="624:27" pos:end="624:29"><expr pos:start="624:27" pos:end="624:29"><name pos:start="624:27" pos:end="624:27">i</name><operator pos:start="624:28" pos:end="624:29">++</operator></expr></incr>)</control> <block pos:start="624:32" pos:end="749:15">{<block_content pos:start="626:9" pos:end="749:15">

        <decl_stmt pos:start="626:9" pos:end="626:14"><decl pos:start="626:9" pos:end="626:13"><type pos:start="626:9" pos:end="626:11"><name pos:start="626:9" pos:end="626:11">int</name></type> <name pos:start="626:13" pos:end="626:13">j</name></decl>;</decl_stmt>

        <if_stmt pos:start="628:9" pos:end="749:15"><if pos:start="628:9" pos:end="749:15">if <condition pos:start="628:12" pos:end="628:32">(<expr pos:start="628:13" pos:end="628:31"><operator pos:start="628:13" pos:end="628:13">(</operator><operator pos:start="628:14" pos:end="628:14">*</operator><name pos:start="628:15" pos:end="628:23">filterPos</name><operator pos:start="628:24" pos:end="628:24">)</operator><index pos:start="628:25" pos:end="628:27">[<expr pos:start="628:26" pos:end="628:26"><name pos:start="628:26" pos:end="628:26">i</name></expr>]</index> <operator pos:start="628:29" pos:end="628:29">&lt;</operator> <literal type="number" pos:start="628:31" pos:end="628:31">0</literal></expr>)</condition> <block pos:start="628:34" pos:end="749:15">{<block_content pos:start="632:13" pos:end="749:15">

            <comment type="line" pos:start="630:13" pos:end="630:72">// move filter coefficients left to compensate for filterPos</comment>

            <for pos:start="632:13" pos:end="749:15">for <control pos:start="632:17" pos:end="632:44">(<init pos:start="632:18" pos:end="632:23"><expr pos:start="632:18" pos:end="632:22"><name pos:start="632:18" pos:end="632:18">j</name> <operator pos:start="632:20" pos:end="632:20">=</operator> <literal type="number" pos:start="632:22" pos:end="632:22">1</literal></expr>;</init> <condition pos:start="632:25" pos:end="632:39"><expr pos:start="632:25" pos:end="632:38"><name pos:start="632:25" pos:end="632:25">j</name> <operator pos:start="632:27" pos:end="632:27">&lt;</operator> <name pos:start="632:29" pos:end="632:38">filterSize</name></expr>;</condition> <incr pos:start="632:41" pos:end="632:43"><expr pos:start="632:41" pos:end="632:43"><name pos:start="632:41" pos:end="632:41">j</name><operator pos:start="632:42" pos:end="632:43">++</operator></expr></incr>)</control> <block pos:start="632:46" pos:end="749:15">{<block_content pos:start="634:17" pos:end="749:15">

                <decl_stmt pos:start="634:17" pos:end="634:57"><decl pos:start="634:17" pos:end="634:56"><type pos:start="634:17" pos:end="634:19"><name pos:start="634:17" pos:end="634:19">int</name></type> <name pos:start="634:21" pos:end="634:24">left</name> <init pos:start="634:26" pos:end="634:56">= <expr pos:start="634:28" pos:end="634:56"><call pos:start="634:28" pos:end="634:56"><name pos:start="634:28" pos:end="634:32">FFMAX</name><argument_list pos:start="634:33" pos:end="634:56">(<argument pos:start="634:34" pos:end="634:52"><expr pos:start="634:34" pos:end="634:52"><name pos:start="634:34" pos:end="634:34">j</name> <operator pos:start="634:36" pos:end="634:36">+</operator> <operator pos:start="634:38" pos:end="634:38">(</operator><operator pos:start="634:39" pos:end="634:39">*</operator><name pos:start="634:40" pos:end="634:48">filterPos</name><operator pos:start="634:49" pos:end="634:49">)</operator><index pos:start="634:50" pos:end="634:52">[<expr pos:start="634:51" pos:end="634:51"><name pos:start="634:51" pos:end="634:51">i</name></expr>]</index></expr></argument>, <argument pos:start="634:55" pos:end="634:55"><expr pos:start="634:55" pos:end="634:55"><literal type="number" pos:start="634:55" pos:end="634:55">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="636:17" pos:end="636:76"><expr pos:start="636:17" pos:end="636:75"><name pos:start="636:17" pos:end="636:45"><name pos:start="636:17" pos:end="636:22">filter</name><index pos:start="636:23" pos:end="636:45">[<expr pos:start="636:24" pos:end="636:44"><name pos:start="636:24" pos:end="636:24">i</name> <operator pos:start="636:26" pos:end="636:26">*</operator> <name pos:start="636:28" pos:end="636:37">filterSize</name> <operator pos:start="636:39" pos:end="636:39">+</operator> <name pos:start="636:41" pos:end="636:44">left</name></expr>]</index></name> <operator pos:start="636:47" pos:end="636:48">+=</operator> <name pos:start="636:50" pos:end="636:75"><name pos:start="636:50" pos:end="636:55">filter</name><index pos:start="636:56" pos:end="636:75">[<expr pos:start="636:57" pos:end="636:74"><name pos:start="636:57" pos:end="636:57">i</name> <operator pos:start="636:59" pos:end="636:59">*</operator> <name pos:start="636:61" pos:end="636:70">filterSize</name> <operator pos:start="636:72" pos:end="636:72">+</operator> <name pos:start="636:74" pos:end="636:74">j</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="638:17" pos:end="638:51"><expr pos:start="638:17" pos:end="638:50"><name pos:start="638:17" pos:end="638:42"><name pos:start="638:17" pos:end="638:22">filter</name><index pos:start="638:23" pos:end="638:42">[<expr pos:start="638:24" pos:end="638:41"><name pos:start="638:24" pos:end="638:24">i</name> <operator pos:start="638:26" pos:end="638:26">*</operator> <name pos:start="638:28" pos:end="638:37">filterSize</name> <operator pos:start="638:39" pos:end="638:39">+</operator> <name pos:start="638:41" pos:end="638:41">j</name></expr>]</index></name>     <operator pos:start="638:48" pos:end="638:48">=</operator> <literal type="number" pos:start="638:50" pos:end="638:50">0</literal></expr>;</expr_stmt>


            <expr_stmt pos:start="641:13" pos:end="641:31"><expr pos:start="641:13" pos:end="641:30"><operator pos:start="641:13" pos:end="641:13">(</operator><operator pos:start="641:14" pos:end="641:14">*</operator><name pos:start="641:15" pos:end="641:23">filterPos</name><operator pos:start="641:24" pos:end="641:24">)</operator><index pos:start="641:25" pos:end="641:27">[<expr pos:start="641:26" pos:end="641:26"><name pos:start="641:26" pos:end="641:26">i</name></expr>]</index><operator pos:start="641:28" pos:end="641:28">=</operator> <literal type="number" pos:start="641:30" pos:end="641:30">0</literal></expr>;</expr_stmt>




        <if_stmt pos:start="646:9" pos:end="749:15"><if pos:start="646:9" pos:end="749:15">if <condition pos:start="646:12" pos:end="646:48">(<expr pos:start="646:13" pos:end="646:47"><operator pos:start="646:13" pos:end="646:13">(</operator><operator pos:start="646:14" pos:end="646:14">*</operator><name pos:start="646:15" pos:end="646:23">filterPos</name><operator pos:start="646:24" pos:end="646:24">)</operator><index pos:start="646:25" pos:end="646:27">[<expr pos:start="646:26" pos:end="646:26"><name pos:start="646:26" pos:end="646:26">i</name></expr>]</index> <operator pos:start="646:29" pos:end="646:29">+</operator> <name pos:start="646:31" pos:end="646:40">filterSize</name> <operator pos:start="646:42" pos:end="646:42">&gt;</operator> <name pos:start="646:44" pos:end="646:47">srcW</name></expr>)</condition> <block pos:start="646:50" pos:end="749:15">{<block_content pos:start="648:13" pos:end="749:15">

            <decl_stmt pos:start="648:13" pos:end="648:60"><decl pos:start="648:13" pos:end="648:59"><type pos:start="648:13" pos:end="648:15"><name pos:start="648:13" pos:end="648:15">int</name></type> <name pos:start="648:17" pos:end="648:21">shift</name> <init pos:start="648:23" pos:end="648:59">= <expr pos:start="648:25" pos:end="648:59"><operator pos:start="648:25" pos:end="648:25">(</operator><operator pos:start="648:26" pos:end="648:26">*</operator><name pos:start="648:27" pos:end="648:35">filterPos</name><operator pos:start="648:36" pos:end="648:36">)</operator><index pos:start="648:37" pos:end="648:39">[<expr pos:start="648:38" pos:end="648:38"><name pos:start="648:38" pos:end="648:38">i</name></expr>]</index> <operator pos:start="648:41" pos:end="648:41">+</operator> <name pos:start="648:43" pos:end="648:52">filterSize</name> <operator pos:start="648:54" pos:end="648:54">-</operator> <name pos:start="648:56" pos:end="648:59">srcW</name></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:start="650:13" pos:end="650:73">// move filter coefficients right to compensate for filterPos</comment>

            <for pos:start="652:13" pos:end="749:15">for <control pos:start="652:17" pos:end="652:49">(<init pos:start="652:18" pos:end="652:36"><expr pos:start="652:18" pos:end="652:35"><name pos:start="652:18" pos:end="652:18">j</name> <operator pos:start="652:20" pos:end="652:20">=</operator> <name pos:start="652:22" pos:end="652:31">filterSize</name> <operator pos:start="652:33" pos:end="652:33">-</operator> <literal type="number" pos:start="652:35" pos:end="652:35">2</literal></expr>;</init> <condition pos:start="652:38" pos:end="652:44"><expr pos:start="652:38" pos:end="652:43"><name pos:start="652:38" pos:end="652:38">j</name> <operator pos:start="652:40" pos:end="652:41">&gt;=</operator> <literal type="number" pos:start="652:43" pos:end="652:43">0</literal></expr>;</condition> <incr pos:start="652:46" pos:end="652:48"><expr pos:start="652:46" pos:end="652:48"><name pos:start="652:46" pos:end="652:46">j</name><operator pos:start="652:47" pos:end="652:48">--</operator></expr></incr>)</control> <block pos:start="652:51" pos:end="749:15">{<block_content pos:start="654:17" pos:end="749:15">

                <decl_stmt pos:start="654:17" pos:end="654:61"><decl pos:start="654:17" pos:end="654:60"><type pos:start="654:17" pos:end="654:19"><name pos:start="654:17" pos:end="654:19">int</name></type> <name pos:start="654:21" pos:end="654:25">right</name> <init pos:start="654:27" pos:end="654:60">= <expr pos:start="654:29" pos:end="654:60"><call pos:start="654:29" pos:end="654:60"><name pos:start="654:29" pos:end="654:33">FFMIN</name><argument_list pos:start="654:34" pos:end="654:60">(<argument pos:start="654:35" pos:end="654:43"><expr pos:start="654:35" pos:end="654:43"><name pos:start="654:35" pos:end="654:35">j</name> <operator pos:start="654:37" pos:end="654:37">+</operator> <name pos:start="654:39" pos:end="654:43">shift</name></expr></argument>, <argument pos:start="654:46" pos:end="654:59"><expr pos:start="654:46" pos:end="654:59"><name pos:start="654:46" pos:end="654:55">filterSize</name> <operator pos:start="654:57" pos:end="654:57">-</operator> <literal type="number" pos:start="654:59" pos:end="654:59">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="656:17" pos:end="656:77"><expr pos:start="656:17" pos:end="656:76"><name pos:start="656:17" pos:end="656:46"><name pos:start="656:17" pos:end="656:22">filter</name><index pos:start="656:23" pos:end="656:46">[<expr pos:start="656:24" pos:end="656:45"><name pos:start="656:24" pos:end="656:24">i</name> <operator pos:start="656:26" pos:end="656:26">*</operator> <name pos:start="656:28" pos:end="656:37">filterSize</name> <operator pos:start="656:39" pos:end="656:39">+</operator> <name pos:start="656:41" pos:end="656:45">right</name></expr>]</index></name> <operator pos:start="656:48" pos:end="656:49">+=</operator> <name pos:start="656:51" pos:end="656:76"><name pos:start="656:51" pos:end="656:56">filter</name><index pos:start="656:57" pos:end="656:76">[<expr pos:start="656:58" pos:end="656:75"><name pos:start="656:58" pos:end="656:58">i</name> <operator pos:start="656:60" pos:end="656:60">*</operator> <name pos:start="656:62" pos:end="656:71">filterSize</name> <operator pos:start="656:73" pos:end="656:73">+</operator> <name pos:start="656:75" pos:end="656:75">j</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="658:17" pos:end="658:52"><expr pos:start="658:17" pos:end="658:51"><name pos:start="658:17" pos:end="658:42"><name pos:start="658:17" pos:end="658:22">filter</name><index pos:start="658:23" pos:end="658:42">[<expr pos:start="658:24" pos:end="658:41"><name pos:start="658:24" pos:end="658:24">i</name> <operator pos:start="658:26" pos:end="658:26">*</operator> <name pos:start="658:28" pos:end="658:37">filterSize</name> <operator pos:start="658:39" pos:end="658:39">+</operator> <name pos:start="658:41" pos:end="658:41">j</name></expr>]</index></name>      <operator pos:start="658:49" pos:end="658:49">=</operator> <literal type="number" pos:start="658:51" pos:end="658:51">0</literal></expr>;</expr_stmt>


            <expr_stmt pos:start="661:13" pos:end="661:47"><expr pos:start="661:13" pos:end="661:46"><operator pos:start="661:13" pos:end="661:13">(</operator><operator pos:start="661:14" pos:end="661:14">*</operator><name pos:start="661:15" pos:end="661:23">filterPos</name><operator pos:start="661:24" pos:end="661:24">)</operator><index pos:start="661:25" pos:end="661:27">[<expr pos:start="661:26" pos:end="661:26"><name pos:start="661:26" pos:end="661:26">i</name></expr>]</index><operator pos:start="661:28" pos:end="661:28">=</operator> <name pos:start="661:30" pos:end="661:33">srcW</name> <operator pos:start="661:35" pos:end="661:35">-</operator> <name pos:start="661:37" pos:end="661:46">filterSize</name></expr>;</expr_stmt>





    <comment type="line" pos:start="667:5" pos:end="667:65">// Note the +1 is for the MMX scaler which reads over the end</comment>

    <comment type="block" pos:start="669:5" pos:end="669:65">/* align at 16 for AltiVec (needed by hScale_altivec_real) */</comment>

    <expr_stmt pos:start="671:5" pos:end="673:75"><expr pos:start="671:5" pos:end="673:74"><call pos:start="671:5" pos:end="673:74"><name pos:start="671:5" pos:end="671:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="671:22" pos:end="673:74">(<argument pos:start="671:23" pos:end="671:26"><expr pos:start="671:23" pos:end="671:26"><name pos:start="671:23" pos:end="671:26">NULL</name></expr></argument>, <argument pos:start="671:29" pos:end="671:38"><expr pos:start="671:29" pos:end="671:38"><operator pos:start="671:29" pos:end="671:29">*</operator><name pos:start="671:30" pos:end="671:38">outFilter</name></expr></argument>,

                      <argument pos:start="673:23" pos:end="673:67"><expr pos:start="673:23" pos:end="673:67"><operator pos:start="673:23" pos:end="673:23">*</operator><name pos:start="673:24" pos:end="673:36">outFilterSize</name> <operator pos:start="673:38" pos:end="673:38">*</operator> <operator pos:start="673:40" pos:end="673:40">(</operator><name pos:start="673:41" pos:end="673:44">dstW</name> <operator pos:start="673:46" pos:end="673:46">+</operator> <literal type="number" pos:start="673:48" pos:end="673:48">3</literal><operator pos:start="673:49" pos:end="673:49">)</operator> <operator pos:start="673:51" pos:end="673:51">*</operator> <sizeof pos:start="673:53" pos:end="673:67">sizeof<argument_list pos:start="673:59" pos:end="673:67">(<argument pos:start="673:60" pos:end="673:66"><expr pos:start="673:60" pos:end="673:66"><name pos:start="673:60" pos:end="673:66">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="673:70" pos:end="673:73"><expr pos:start="673:70" pos:end="673:73"><name pos:start="673:70" pos:end="673:73">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="677:5" pos:end="677:40">/* normalize &amp; store in outFilter */</comment>

    <for pos:start="679:5" pos:end="749:15">for <control pos:start="679:9" pos:end="679:30">(<init pos:start="679:10" pos:end="679:15"><expr pos:start="679:10" pos:end="679:14"><name pos:start="679:10" pos:end="679:10">i</name> <operator pos:start="679:12" pos:end="679:12">=</operator> <literal type="number" pos:start="679:14" pos:end="679:14">0</literal></expr>;</init> <condition pos:start="679:17" pos:end="679:25"><expr pos:start="679:17" pos:end="679:24"><name pos:start="679:17" pos:end="679:17">i</name> <operator pos:start="679:19" pos:end="679:19">&lt;</operator> <name pos:start="679:21" pos:end="679:24">dstW</name></expr>;</condition> <incr pos:start="679:27" pos:end="679:29"><expr pos:start="679:27" pos:end="679:29"><name pos:start="679:27" pos:end="679:27">i</name><operator pos:start="679:28" pos:end="679:29">++</operator></expr></incr>)</control> <block pos:start="679:32" pos:end="749:15">{<block_content pos:start="681:9" pos:end="749:15">

        <decl_stmt pos:start="681:9" pos:end="681:14"><decl pos:start="681:9" pos:end="681:13"><type pos:start="681:9" pos:end="681:11"><name pos:start="681:9" pos:end="681:11">int</name></type> <name pos:start="681:13" pos:end="681:13">j</name></decl>;</decl_stmt>

        <decl_stmt pos:start="683:9" pos:end="683:26"><decl pos:start="683:9" pos:end="683:25"><type pos:start="683:9" pos:end="683:15"><name pos:start="683:9" pos:end="683:15">int64_t</name></type> <name pos:start="683:17" pos:end="683:21">error</name> <init pos:start="683:23" pos:end="683:25">= <expr pos:start="683:25" pos:end="683:25"><literal type="number" pos:start="683:25" pos:end="683:25">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="685:9" pos:end="685:26"><decl pos:start="685:9" pos:end="685:25"><type pos:start="685:9" pos:end="685:15"><name pos:start="685:9" pos:end="685:15">int64_t</name></type> <name pos:start="685:17" pos:end="685:19">sum</name>   <init pos:start="685:23" pos:end="685:25">= <expr pos:start="685:25" pos:end="685:25"><literal type="number" pos:start="685:25" pos:end="685:25">0</literal></expr></init></decl>;</decl_stmt>



        <for pos:start="689:9" pos:end="749:15">for <control pos:start="689:13" pos:end="689:40">(<init pos:start="689:14" pos:end="689:19"><expr pos:start="689:14" pos:end="689:18"><name pos:start="689:14" pos:end="689:14">j</name> <operator pos:start="689:16" pos:end="689:16">=</operator> <literal type="number" pos:start="689:18" pos:end="689:18">0</literal></expr>;</init> <condition pos:start="689:21" pos:end="689:35"><expr pos:start="689:21" pos:end="689:34"><name pos:start="689:21" pos:end="689:21">j</name> <operator pos:start="689:23" pos:end="689:23">&lt;</operator> <name pos:start="689:25" pos:end="689:34">filterSize</name></expr>;</condition> <incr pos:start="689:37" pos:end="689:39"><expr pos:start="689:37" pos:end="689:39"><name pos:start="689:37" pos:end="689:37">j</name><operator pos:start="689:38" pos:end="689:39">++</operator></expr></incr>)</control> <block pos:start="689:42" pos:end="749:15">{<block_content pos:start="691:13" pos:end="749:15">

            <expr_stmt pos:start="691:13" pos:end="691:46"><expr pos:start="691:13" pos:end="691:45"><name pos:start="691:13" pos:end="691:15">sum</name> <operator pos:start="691:17" pos:end="691:18">+=</operator> <name pos:start="691:20" pos:end="691:45"><name pos:start="691:20" pos:end="691:25">filter</name><index pos:start="691:26" pos:end="691:45">[<expr pos:start="691:27" pos:end="691:44"><name pos:start="691:27" pos:end="691:27">i</name> <operator pos:start="691:29" pos:end="691:29">*</operator> <name pos:start="691:31" pos:end="691:40">filterSize</name> <operator pos:start="691:42" pos:end="691:42">+</operator> <name pos:start="691:44" pos:end="691:44">j</name></expr>]</index></name></expr>;</expr_stmt>


        <expr_stmt pos:start="694:9" pos:end="694:36"><expr pos:start="694:9" pos:end="694:35"><name pos:start="694:9" pos:end="694:11">sum</name> <operator pos:start="694:13" pos:end="694:13">=</operator> <operator pos:start="694:15" pos:end="694:15">(</operator><name pos:start="694:16" pos:end="694:18">sum</name> <operator pos:start="694:20" pos:end="694:20">+</operator> <name pos:start="694:22" pos:end="694:24">one</name> <operator pos:start="694:26" pos:end="694:26">/</operator> <literal type="number" pos:start="694:28" pos:end="694:28">2</literal><operator pos:start="694:29" pos:end="694:29">)</operator> <operator pos:start="694:31" pos:end="694:31">/</operator> <name pos:start="694:33" pos:end="694:35">one</name></expr>;</expr_stmt>





        <for pos:start="700:9" pos:end="749:15">for <control pos:start="700:13" pos:end="700:44">(<init pos:start="700:14" pos:end="700:19"><expr pos:start="700:14" pos:end="700:18"><name pos:start="700:14" pos:end="700:14">j</name> <operator pos:start="700:16" pos:end="700:16">=</operator> <literal type="number" pos:start="700:18" pos:end="700:18">0</literal></expr>;</init> <condition pos:start="700:21" pos:end="700:39"><expr pos:start="700:21" pos:end="700:38"><name pos:start="700:21" pos:end="700:21">j</name> <operator pos:start="700:23" pos:end="700:23">&lt;</operator> <operator pos:start="700:25" pos:end="700:25">*</operator><name pos:start="700:26" pos:end="700:38">outFilterSize</name></expr>;</condition> <incr pos:start="700:41" pos:end="700:43"><expr pos:start="700:41" pos:end="700:43"><name pos:start="700:41" pos:end="700:41">j</name><operator pos:start="700:42" pos:end="700:43">++</operator></expr></incr>)</control> <block pos:start="700:46" pos:end="749:15">{<block_content pos:start="702:13" pos:end="749:15">

            <decl_stmt pos:start="702:13" pos:end="702:59"><decl pos:start="702:13" pos:end="702:58"><type pos:start="702:13" pos:end="702:19"><name pos:start="702:13" pos:end="702:19">int64_t</name></type> <name pos:start="702:21" pos:end="702:21">v</name> <init pos:start="702:23" pos:end="702:58">= <expr pos:start="702:25" pos:end="702:58"><name pos:start="702:25" pos:end="702:50"><name pos:start="702:25" pos:end="702:30">filter</name><index pos:start="702:31" pos:end="702:50">[<expr pos:start="702:32" pos:end="702:49"><name pos:start="702:32" pos:end="702:32">i</name> <operator pos:start="702:34" pos:end="702:34">*</operator> <name pos:start="702:36" pos:end="702:45">filterSize</name> <operator pos:start="702:47" pos:end="702:47">+</operator> <name pos:start="702:49" pos:end="702:49">j</name></expr>]</index></name> <operator pos:start="702:52" pos:end="702:52">+</operator> <name pos:start="702:54" pos:end="702:58">error</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="704:13" pos:end="704:44"><decl pos:start="704:13" pos:end="704:43"><type pos:start="704:13" pos:end="704:15"><name pos:start="704:13" pos:end="704:15">int</name></type> <name pos:start="704:17" pos:end="704:20">intV</name>  <init pos:start="704:23" pos:end="704:43">= <expr pos:start="704:25" pos:end="704:43"><call pos:start="704:25" pos:end="704:43"><name pos:start="704:25" pos:end="704:35">ROUNDED_DIV</name><argument_list pos:start="704:36" pos:end="704:43">(<argument pos:start="704:37" pos:end="704:37"><expr pos:start="704:37" pos:end="704:37"><name pos:start="704:37" pos:end="704:37">v</name></expr></argument>, <argument pos:start="704:40" pos:end="704:42"><expr pos:start="704:40" pos:end="704:42"><name pos:start="704:40" pos:end="704:42">sum</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="706:13" pos:end="706:58"><expr pos:start="706:13" pos:end="706:57"><operator pos:start="706:13" pos:end="706:13">(</operator><operator pos:start="706:14" pos:end="706:14">*</operator><name pos:start="706:15" pos:end="706:23">outFilter</name><operator pos:start="706:24" pos:end="706:24">)</operator><index pos:start="706:25" pos:end="706:50">[<expr pos:start="706:26" pos:end="706:49"><name pos:start="706:26" pos:end="706:26">i</name> <operator pos:start="706:28" pos:end="706:28">*</operator> <operator pos:start="706:30" pos:end="706:30">(</operator><operator pos:start="706:31" pos:end="706:31">*</operator><name pos:start="706:32" pos:end="706:44">outFilterSize</name><operator pos:start="706:45" pos:end="706:45">)</operator> <operator pos:start="706:47" pos:end="706:47">+</operator> <name pos:start="706:49" pos:end="706:49">j</name></expr>]</index> <operator pos:start="706:52" pos:end="706:52">=</operator> <name pos:start="706:54" pos:end="706:57">intV</name></expr>;</expr_stmt>

            <expr_stmt pos:start="708:13" pos:end="708:68"><expr pos:start="708:13" pos:end="708:67"><name pos:start="708:13" pos:end="708:17">error</name>                                  <operator pos:start="708:52" pos:end="708:52">=</operator> <name pos:start="708:54" pos:end="708:54">v</name> <operator pos:start="708:56" pos:end="708:56">-</operator> <name pos:start="708:58" pos:end="708:61">intV</name> <operator pos:start="708:63" pos:end="708:63">*</operator> <name pos:start="708:65" pos:end="708:67">sum</name></expr>;</expr_stmt>





    <expr_stmt pos:start="714:5" pos:end="718:52"><expr pos:start="714:5" pos:end="718:51"><operator pos:start="714:5" pos:end="714:5">(</operator><operator pos:start="714:6" pos:end="714:6">*</operator><name pos:start="714:7" pos:end="714:15">filterPos</name><operator pos:start="714:16" pos:end="714:16">)</operator><index pos:start="714:17" pos:end="714:26">[<expr pos:start="714:18" pos:end="714:25"><name pos:start="714:18" pos:end="714:21">dstW</name> <operator pos:start="714:23" pos:end="714:23">+</operator> <literal type="number" pos:start="714:25" pos:end="714:25">0</literal></expr>]</index> <operator pos:start="714:28" pos:end="714:28">=</operator>

    <operator pos:start="716:5" pos:end="716:5">(</operator><operator pos:start="716:6" pos:end="716:6">*</operator><name pos:start="716:7" pos:end="716:15">filterPos</name><operator pos:start="716:16" pos:end="716:16">)</operator><index pos:start="716:17" pos:end="716:26">[<expr pos:start="716:18" pos:end="716:25"><name pos:start="716:18" pos:end="716:21">dstW</name> <operator pos:start="716:23" pos:end="716:23">+</operator> <literal type="number" pos:start="716:25" pos:end="716:25">1</literal></expr>]</index> <operator pos:start="716:28" pos:end="716:28">=</operator>

    <operator pos:start="718:5" pos:end="718:5">(</operator><operator pos:start="718:6" pos:end="718:6">*</operator><name pos:start="718:7" pos:end="718:15">filterPos</name><operator pos:start="718:16" pos:end="718:16">)</operator><index pos:start="718:17" pos:end="718:26">[<expr pos:start="718:18" pos:end="718:25"><name pos:start="718:18" pos:end="718:21">dstW</name> <operator pos:start="718:23" pos:end="718:23">+</operator> <literal type="number" pos:start="718:25" pos:end="718:25">2</literal></expr>]</index> <operator pos:start="718:28" pos:end="718:28">=</operator> <operator pos:start="718:30" pos:end="718:30">(</operator><operator pos:start="718:31" pos:end="718:31">*</operator><name pos:start="718:32" pos:end="718:40">filterPos</name><operator pos:start="718:41" pos:end="718:41">)</operator><index pos:start="718:42" pos:end="718:51">[<expr pos:start="718:43" pos:end="718:50"><name pos:start="718:43" pos:end="718:46">dstW</name> <operator pos:start="718:48" pos:end="718:48">-</operator> <literal type="number" pos:start="718:50" pos:end="718:50">1</literal></expr>]</index></expr>;</expr_stmt> <comment type="block" pos:start="718:54" pos:end="720:76">/* the MMX/SSE scaler will

                                                      * read over the end */</comment>

    <for pos:start="722:5" pos:end="749:15">for <control pos:start="722:9" pos:end="722:40">(<init pos:start="722:10" pos:end="722:15"><expr pos:start="722:10" pos:end="722:14"><name pos:start="722:10" pos:end="722:10">i</name> <operator pos:start="722:12" pos:end="722:12">=</operator> <literal type="number" pos:start="722:14" pos:end="722:14">0</literal></expr>;</init> <condition pos:start="722:17" pos:end="722:35"><expr pos:start="722:17" pos:end="722:34"><name pos:start="722:17" pos:end="722:17">i</name> <operator pos:start="722:19" pos:end="722:19">&lt;</operator> <operator pos:start="722:21" pos:end="722:21">*</operator><name pos:start="722:22" pos:end="722:34">outFilterSize</name></expr>;</condition> <incr pos:start="722:37" pos:end="722:39"><expr pos:start="722:37" pos:end="722:39"><name pos:start="722:37" pos:end="722:37">i</name><operator pos:start="722:38" pos:end="722:39">++</operator></expr></incr>)</control> <block pos:start="722:42" pos:end="749:15">{<block_content pos:start="724:9" pos:end="749:15">

        <decl_stmt pos:start="724:9" pos:end="724:50"><decl pos:start="724:9" pos:end="724:49"><type pos:start="724:9" pos:end="724:11"><name pos:start="724:9" pos:end="724:11">int</name></type> <name pos:start="724:13" pos:end="724:13">k</name> <init pos:start="724:15" pos:end="724:49">= <expr pos:start="724:17" pos:end="724:49"><operator pos:start="724:17" pos:end="724:17">(</operator><name pos:start="724:18" pos:end="724:21">dstW</name> <operator pos:start="724:23" pos:end="724:23">-</operator> <literal type="number" pos:start="724:25" pos:end="724:25">1</literal><operator pos:start="724:26" pos:end="724:26">)</operator> <operator pos:start="724:28" pos:end="724:28">*</operator> <operator pos:start="724:30" pos:end="724:30">(</operator><operator pos:start="724:31" pos:end="724:31">*</operator><name pos:start="724:32" pos:end="724:44">outFilterSize</name><operator pos:start="724:45" pos:end="724:45">)</operator> <operator pos:start="724:47" pos:end="724:47">+</operator> <name pos:start="724:49" pos:end="724:49">i</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="726:9" pos:end="730:65"><expr pos:start="726:9" pos:end="730:64"><operator pos:start="726:9" pos:end="726:9">(</operator><operator pos:start="726:10" pos:end="726:10">*</operator><name pos:start="726:11" pos:end="726:19">outFilter</name><operator pos:start="726:20" pos:end="726:20">)</operator><index pos:start="726:21" pos:end="726:46">[<expr pos:start="726:22" pos:end="726:45"><name pos:start="726:22" pos:end="726:22">k</name> <operator pos:start="726:24" pos:end="726:24">+</operator> <literal type="number" pos:start="726:26" pos:end="726:26">1</literal> <operator pos:start="726:28" pos:end="726:28">*</operator> <operator pos:start="726:30" pos:end="726:30">(</operator><operator pos:start="726:31" pos:end="726:31">*</operator><name pos:start="726:32" pos:end="726:44">outFilterSize</name><operator pos:start="726:45" pos:end="726:45">)</operator></expr>]</index> <operator pos:start="726:48" pos:end="726:48">=</operator>

        <operator pos:start="728:9" pos:end="728:9">(</operator><operator pos:start="728:10" pos:end="728:10">*</operator><name pos:start="728:11" pos:end="728:19">outFilter</name><operator pos:start="728:20" pos:end="728:20">)</operator><index pos:start="728:21" pos:end="728:46">[<expr pos:start="728:22" pos:end="728:45"><name pos:start="728:22" pos:end="728:22">k</name> <operator pos:start="728:24" pos:end="728:24">+</operator> <literal type="number" pos:start="728:26" pos:end="728:26">2</literal> <operator pos:start="728:28" pos:end="728:28">*</operator> <operator pos:start="728:30" pos:end="728:30">(</operator><operator pos:start="728:31" pos:end="728:31">*</operator><name pos:start="728:32" pos:end="728:44">outFilterSize</name><operator pos:start="728:45" pos:end="728:45">)</operator></expr>]</index> <operator pos:start="728:48" pos:end="728:48">=</operator>

        <operator pos:start="730:9" pos:end="730:9">(</operator><operator pos:start="730:10" pos:end="730:10">*</operator><name pos:start="730:11" pos:end="730:19">outFilter</name><operator pos:start="730:20" pos:end="730:20">)</operator><index pos:start="730:21" pos:end="730:46">[<expr pos:start="730:22" pos:end="730:45"><name pos:start="730:22" pos:end="730:22">k</name> <operator pos:start="730:24" pos:end="730:24">+</operator> <literal type="number" pos:start="730:26" pos:end="730:26">3</literal> <operator pos:start="730:28" pos:end="730:28">*</operator> <operator pos:start="730:30" pos:end="730:30">(</operator><operator pos:start="730:31" pos:end="730:31">*</operator><name pos:start="730:32" pos:end="730:44">outFilterSize</name><operator pos:start="730:45" pos:end="730:45">)</operator></expr>]</index> <operator pos:start="730:48" pos:end="730:48">=</operator> <operator pos:start="730:50" pos:end="730:50">(</operator><operator pos:start="730:51" pos:end="730:51">*</operator><name pos:start="730:52" pos:end="730:60">outFilter</name><operator pos:start="730:61" pos:end="730:61">)</operator><index pos:start="730:62" pos:end="730:64">[<expr pos:start="730:63" pos:end="730:63"><name pos:start="730:63" pos:end="730:63">k</name></expr>]</index></expr>;</expr_stmt>




    <expr_stmt pos:start="735:5" pos:end="735:12"><expr pos:start="735:5" pos:end="735:11"><name pos:start="735:5" pos:end="735:7">ret</name> <operator pos:start="735:9" pos:end="735:9">=</operator> <literal type="number" pos:start="735:11" pos:end="735:11">0</literal></expr>;</expr_stmt>



<label pos:start="739:1" pos:end="739:5"><name pos:start="739:1" pos:end="739:4">fail</name>:</label>

    <if_stmt pos:start="741:5" pos:end="743:63"><if pos:start="741:5" pos:end="743:63">if<condition pos:start="741:7" pos:end="741:15">(<expr pos:start="741:8" pos:end="741:14"><name pos:start="741:8" pos:end="741:10">ret</name> <operator pos:start="741:12" pos:end="741:12">&lt;</operator> <literal type="number" pos:start="741:14" pos:end="741:14">0</literal></expr>)</condition><block type="pseudo" pos:start="743:9" pos:end="743:63"><block_content pos:start="743:9" pos:end="743:63">

        <expr_stmt pos:start="743:9" pos:end="743:63"><expr pos:start="743:9" pos:end="743:62"><call pos:start="743:9" pos:end="743:62"><name pos:start="743:9" pos:end="743:14">av_log</name><argument_list pos:start="743:15" pos:end="743:62">(<argument pos:start="743:16" pos:end="743:19"><expr pos:start="743:16" pos:end="743:19"><name pos:start="743:16" pos:end="743:19">NULL</name></expr></argument>, <argument pos:start="743:22" pos:end="743:33"><expr pos:start="743:22" pos:end="743:33"><name pos:start="743:22" pos:end="743:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="743:36" pos:end="743:61"><expr pos:start="743:36" pos:end="743:61"><literal type="string" pos:start="743:36" pos:end="743:61">"sws: initFilter failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="745:5" pos:end="745:20"><expr pos:start="745:5" pos:end="745:19"><call pos:start="745:5" pos:end="745:19"><name pos:start="745:5" pos:end="745:11">av_free</name><argument_list pos:start="745:12" pos:end="745:19">(<argument pos:start="745:13" pos:end="745:18"><expr pos:start="745:13" pos:end="745:18"><name pos:start="745:13" pos:end="745:18">filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="747:5" pos:end="747:21"><expr pos:start="747:5" pos:end="747:20"><call pos:start="747:5" pos:end="747:20"><name pos:start="747:5" pos:end="747:11">av_free</name><argument_list pos:start="747:12" pos:end="747:20">(<argument pos:start="747:13" pos:end="747:19"><expr pos:start="747:13" pos:end="747:19"><name pos:start="747:13" pos:end="747:19">filter2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="749:5" pos:end="749:15">return <expr pos:start="749:12" pos:end="749:14"><name pos:start="749:12" pos:end="749:14">ret</name></expr>;</return></block_content></block></for></block_content></block></for></block_content></block></for></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></for></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
