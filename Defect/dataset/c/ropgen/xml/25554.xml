<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25554.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:46">av_thread_message_queue_recv_locked</name><parameter_list pos:start="1:47" pos:end="5:62">(<parameter pos:start="1:48" pos:end="1:71"><decl pos:start="1:48" pos:end="1:71"><type pos:start="1:48" pos:end="1:71"><name pos:start="1:48" pos:end="1:67">AVThreadMessageQueue</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:71">mq</name></decl></parameter>,

                                               <parameter pos:start="3:48" pos:end="3:56"><decl pos:start="3:48" pos:end="3:56"><type pos:start="3:48" pos:end="3:56"><name pos:start="3:48" pos:end="3:51">void</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:56">msg</name></decl></parameter>,

                                               <parameter pos:start="5:48" pos:end="5:61"><decl pos:start="5:48" pos:end="5:61"><type pos:start="5:48" pos:end="5:61"><name pos:start="5:48" pos:end="5:55">unsigned</name></type> <name pos:start="5:57" pos:end="5:61">flags</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="29:1">{<block_content pos:start="9:5" pos:end="27:13">

    <while pos:start="9:5" pos:end="17:5">while <condition pos:start="9:11" pos:end="9:64">(<expr pos:start="9:12" pos:end="9:63"><operator pos:start="9:12" pos:end="9:12">!</operator><name pos:start="9:13" pos:end="9:24"><name pos:start="9:13" pos:end="9:14">mq</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:24">err_recv</name></name> <operator pos:start="9:26" pos:end="9:27">&amp;&amp;</operator> <call pos:start="9:29" pos:end="9:50"><name pos:start="9:29" pos:end="9:40">av_fifo_size</name><argument_list pos:start="9:41" pos:end="9:50">(<argument pos:start="9:42" pos:end="9:49"><expr pos:start="9:42" pos:end="9:49"><name pos:start="9:42" pos:end="9:49"><name pos:start="9:42" pos:end="9:43">mq</name><operator pos:start="9:44" pos:end="9:45">-&gt;</operator><name pos:start="9:46" pos:end="9:49">fifo</name></name></expr></argument>)</argument_list></call> <operator pos:start="9:52" pos:end="9:52">&lt;</operator> <name pos:start="9:54" pos:end="9:63"><name pos:start="9:54" pos:end="9:55">mq</name><operator pos:start="9:56" pos:end="9:57">-&gt;</operator><name pos:start="9:58" pos:end="9:63">elsize</name></name></expr>)</condition> <block pos:start="9:66" pos:end="17:5">{<block_content pos:start="11:9" pos:end="15:48">

        <if_stmt pos:start="11:9" pos:end="13:35"><if pos:start="11:9" pos:end="13:35">if <condition pos:start="11:12" pos:end="11:49">(<expr pos:start="11:13" pos:end="11:48"><operator pos:start="11:13" pos:end="11:13">(</operator><name pos:start="11:14" pos:end="11:18">flags</name> <operator pos:start="11:20" pos:end="11:20">&amp;</operator> <name pos:start="11:22" pos:end="11:47">AV_THREAD_MESSAGE_NONBLOCK</name><operator pos:start="11:48" pos:end="11:48">)</operator></expr>)</condition><block type="pseudo" pos:start="13:13" pos:end="13:35"><block_content pos:start="13:13" pos:end="13:35">

            <return pos:start="13:13" pos:end="13:35">return <expr pos:start="13:20" pos:end="13:34"><call pos:start="13:20" pos:end="13:34"><name pos:start="13:20" pos:end="13:26">AVERROR</name><argument_list pos:start="13:27" pos:end="13:34">(<argument pos:start="13:28" pos:end="13:33"><expr pos:start="13:28" pos:end="13:33"><name pos:start="13:28" pos:end="13:33">EAGAIN</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:48"><expr pos:start="15:9" pos:end="15:47"><call pos:start="15:9" pos:end="15:47"><name pos:start="15:9" pos:end="15:25">pthread_cond_wait</name><argument_list pos:start="15:26" pos:end="15:47">(<argument pos:start="15:27" pos:end="15:35"><expr pos:start="15:27" pos:end="15:35"><operator pos:start="15:27" pos:end="15:27">&amp;</operator><name pos:start="15:28" pos:end="15:35"><name pos:start="15:28" pos:end="15:29">mq</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:35">cond</name></name></expr></argument>, <argument pos:start="15:38" pos:end="15:46"><expr pos:start="15:38" pos:end="15:46"><operator pos:start="15:38" pos:end="15:38">&amp;</operator><name pos:start="15:39" pos:end="15:46"><name pos:start="15:39" pos:end="15:40">mq</name><operator pos:start="15:41" pos:end="15:42">-&gt;</operator><name pos:start="15:43" pos:end="15:46">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="19:5" pos:end="21:28"><if pos:start="19:5" pos:end="21:28">if <condition pos:start="19:8" pos:end="19:44">(<expr pos:start="19:9" pos:end="19:43"><call pos:start="19:9" pos:end="19:30"><name pos:start="19:9" pos:end="19:20">av_fifo_size</name><argument_list pos:start="19:21" pos:end="19:30">(<argument pos:start="19:22" pos:end="19:29"><expr pos:start="19:22" pos:end="19:29"><name pos:start="19:22" pos:end="19:29"><name pos:start="19:22" pos:end="19:23">mq</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:29">fifo</name></name></expr></argument>)</argument_list></call> <operator pos:start="19:32" pos:end="19:32">&lt;</operator> <name pos:start="19:34" pos:end="19:43"><name pos:start="19:34" pos:end="19:35">mq</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:43">elsize</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:28"><block_content pos:start="21:9" pos:end="21:28">

        <return pos:start="21:9" pos:end="21:28">return <expr pos:start="21:16" pos:end="21:27"><name pos:start="21:16" pos:end="21:27"><name pos:start="21:16" pos:end="21:17">mq</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:27">err_recv</name></name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:58"><expr pos:start="23:5" pos:end="23:57"><call pos:start="23:5" pos:end="23:57"><name pos:start="23:5" pos:end="23:24">av_fifo_generic_read</name><argument_list pos:start="23:25" pos:end="23:57">(<argument pos:start="23:26" pos:end="23:33"><expr pos:start="23:26" pos:end="23:33"><name pos:start="23:26" pos:end="23:33"><name pos:start="23:26" pos:end="23:27">mq</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:33">fifo</name></name></expr></argument>, <argument pos:start="23:36" pos:end="23:38"><expr pos:start="23:36" pos:end="23:38"><name pos:start="23:36" pos:end="23:38">msg</name></expr></argument>, <argument pos:start="23:41" pos:end="23:50"><expr pos:start="23:41" pos:end="23:50"><name pos:start="23:41" pos:end="23:50"><name pos:start="23:41" pos:end="23:42">mq</name><operator pos:start="23:43" pos:end="23:44">-&gt;</operator><name pos:start="23:45" pos:end="23:50">elsize</name></name></expr></argument>, <argument pos:start="23:53" pos:end="23:56"><expr pos:start="23:53" pos:end="23:56"><name pos:start="23:53" pos:end="23:56">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><call pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:23">pthread_cond_signal</name><argument_list pos:start="25:24" pos:end="25:34">(<argument pos:start="25:25" pos:end="25:33"><expr pos:start="25:25" pos:end="25:33"><operator pos:start="25:25" pos:end="25:25">&amp;</operator><name pos:start="25:26" pos:end="25:33"><name pos:start="25:26" pos:end="25:27">mq</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:33">cond</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="27:5" pos:end="27:13">return <expr pos:start="27:12" pos:end="27:12"><literal type="number" pos:start="27:12" pos:end="27:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
