<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12662.c" pos:tabs="8"><function pos:start="1:1" pos:end="227:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">asf_read_frame_header</name><parameter_list pos:start="1:33" pos:end="1:69">(<parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:51"><name pos:start="1:34" pos:end="1:48">AVFormatContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:68"><decl pos:start="1:54" pos:end="1:68"><type pos:start="1:54" pos:end="1:68"><name pos:start="1:54" pos:end="1:64">AVIOContext</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:68">pb</name></decl></parameter>)</parameter_list><block pos:start="1:70" pos:end="227:1">{<block_content pos:start="3:5" pos:end="225:13">

    <decl_stmt pos:start="3:5" pos:end="3:35"><decl pos:start="3:5" pos:end="3:34"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:14">ASFContext</name> <modifier pos:start="3:16" pos:end="3:16">*</modifier></type><name pos:start="3:17" pos:end="3:19">asf</name> <init pos:start="3:21" pos:end="3:34">= <expr pos:start="3:23" pos:end="3:34"><name pos:start="3:23" pos:end="3:34"><name pos:start="3:23" pos:end="3:23">s</name><operator pos:start="3:24" pos:end="3:25">-&gt;</operator><name pos:start="3:26" pos:end="3:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">ASFStream</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:20">asfst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">rsize</name> <init pos:start="7:15" pos:end="7:17">= <expr pos:start="7:17" pos:end="7:17"><literal type="number" pos:start="7:17" pos:end="7:17">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">num</name> <init pos:start="9:13" pos:end="9:25">= <expr pos:start="9:15" pos:end="9:25"><call pos:start="9:15" pos:end="9:25"><name pos:start="9:15" pos:end="9:21">avio_r8</name><argument_list pos:start="9:22" pos:end="9:25">(<argument pos:start="9:23" pos:end="9:24"><expr pos:start="9:23" pos:end="9:24"><name pos:start="9:23" pos:end="9:24">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:15">ts0</name></decl>, <decl pos:start="13:18" pos:end="13:30"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:18" pos:end="13:20">ts1</name> <name pos:start="13:22" pos:end="13:30">av_unused</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:7">asf</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:24">packet_segments</name></name><operator pos:start="17:25" pos:end="17:26">--</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:37"><expr pos:start="19:5" pos:end="19:36"><name pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:7">asf</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:25">packet_key_frame</name></name> <operator pos:start="19:27" pos:end="19:27">=</operator> <name pos:start="19:29" pos:end="19:31">num</name> <operator pos:start="19:33" pos:end="19:34">&gt;&gt;</operator> <literal type="number" pos:start="19:36" pos:end="19:36">7</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:52"><expr pos:start="21:5" pos:end="21:51"><name pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:7">asf</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:21">stream_index</name></name> <operator pos:start="21:23" pos:end="21:23">=</operator> <name pos:start="21:25" pos:end="21:51"><name pos:start="21:25" pos:end="21:27">asf</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:39">asfid2avid</name><index pos:start="21:40" pos:end="21:51">[<expr pos:start="21:41" pos:end="21:50"><name pos:start="21:41" pos:end="21:43">num</name> <operator pos:start="21:45" pos:end="21:45">&amp;</operator> <literal type="number" pos:start="21:47" pos:end="21:50">0x7f</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:38"><expr pos:start="23:5" pos:end="23:37"><name pos:start="23:5" pos:end="23:9">asfst</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <operator pos:start="23:13" pos:end="23:13">&amp;</operator><name pos:start="23:14" pos:end="23:37"><name pos:start="23:14" pos:end="23:16">asf</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:25">streams</name><index pos:start="23:26" pos:end="23:37">[<expr pos:start="23:27" pos:end="23:36"><name pos:start="23:27" pos:end="23:29">num</name> <operator pos:start="23:31" pos:end="23:31">&amp;</operator> <literal type="number" pos:start="23:33" pos:end="23:36">0x7f</literal></expr>]</index></name></expr>;</expr_stmt>

    <comment type="line" pos:start="25:5" pos:end="25:34">// sequence should be ignored!</comment>

    <expr_stmt pos:start="27:5" pos:end="27:60"><expr pos:start="27:5" pos:end="27:59"><call pos:start="27:5" pos:end="27:59"><name pos:start="27:5" pos:end="27:12">DO_2BITS</name><argument_list pos:start="27:13" pos:end="27:59">(<argument pos:start="27:14" pos:end="27:38"><expr pos:start="27:14" pos:end="27:38"><name pos:start="27:14" pos:end="27:33"><name pos:start="27:14" pos:end="27:16">asf</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:33">packet_property</name></name> <operator pos:start="27:35" pos:end="27:36">&gt;&gt;</operator> <literal type="number" pos:start="27:38" pos:end="27:38">4</literal></expr></argument>, <argument pos:start="27:41" pos:end="27:55"><expr pos:start="27:41" pos:end="27:55"><name pos:start="27:41" pos:end="27:55"><name pos:start="27:41" pos:end="27:43">asf</name><operator pos:start="27:44" pos:end="27:45">-&gt;</operator><name pos:start="27:46" pos:end="27:55">packet_seq</name></name></expr></argument>, <argument pos:start="27:58" pos:end="27:58"><expr pos:start="27:58" pos:end="27:58"><literal type="number" pos:start="27:58" pos:end="27:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:68"><expr pos:start="29:5" pos:end="29:67"><call pos:start="29:5" pos:end="29:67"><name pos:start="29:5" pos:end="29:12">DO_2BITS</name><argument_list pos:start="29:13" pos:end="29:67">(<argument pos:start="29:14" pos:end="29:38"><expr pos:start="29:14" pos:end="29:38"><name pos:start="29:14" pos:end="29:33"><name pos:start="29:14" pos:end="29:16">asf</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:33">packet_property</name></name> <operator pos:start="29:35" pos:end="29:36">&gt;&gt;</operator> <literal type="number" pos:start="29:38" pos:end="29:38">2</literal></expr></argument>, <argument pos:start="29:41" pos:end="29:63"><expr pos:start="29:41" pos:end="29:63"><name pos:start="29:41" pos:end="29:63"><name pos:start="29:41" pos:end="29:43">asf</name><operator pos:start="29:44" pos:end="29:45">-&gt;</operator><name pos:start="29:46" pos:end="29:63">packet_frag_offset</name></name></expr></argument>, <argument pos:start="29:66" pos:end="29:66"><expr pos:start="29:66" pos:end="29:66"><literal type="number" pos:start="29:66" pos:end="29:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:63"><expr pos:start="31:5" pos:end="31:62"><call pos:start="31:5" pos:end="31:62"><name pos:start="31:5" pos:end="31:12">DO_2BITS</name><argument_list pos:start="31:13" pos:end="31:62">(<argument pos:start="31:14" pos:end="31:33"><expr pos:start="31:14" pos:end="31:33"><name pos:start="31:14" pos:end="31:33"><name pos:start="31:14" pos:end="31:16">asf</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:33">packet_property</name></name></expr></argument>, <argument pos:start="31:36" pos:end="31:58"><expr pos:start="31:36" pos:end="31:58"><name pos:start="31:36" pos:end="31:58"><name pos:start="31:36" pos:end="31:38">asf</name><operator pos:start="31:39" pos:end="31:40">-&gt;</operator><name pos:start="31:41" pos:end="31:58">packet_replic_size</name></name></expr></argument>, <argument pos:start="31:61" pos:end="31:61"><expr pos:start="31:61" pos:end="31:61"><literal type="number" pos:start="31:61" pos:end="31:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="37:62"><expr pos:start="33:5" pos:end="37:61"><call pos:start="33:5" pos:end="37:61"><name pos:start="33:5" pos:end="33:11">av_dlog</name><argument_list pos:start="33:12" pos:end="37:61">(<argument pos:start="33:13" pos:end="33:15"><expr pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">asf</name></expr></argument>, <argument pos:start="33:18" pos:end="33:69"><expr pos:start="33:18" pos:end="33:69"><literal type="string" pos:start="33:18" pos:end="33:69">"key:%d stream:%d seq:%d offset:%d replic_size:%d\n"</literal></expr></argument>,

            <argument pos:start="35:13" pos:end="35:33"><expr pos:start="35:13" pos:end="35:33"><name pos:start="35:13" pos:end="35:33"><name pos:start="35:13" pos:end="35:15">asf</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:33">packet_key_frame</name></name></expr></argument>, <argument pos:start="35:36" pos:end="35:52"><expr pos:start="35:36" pos:end="35:52"><name pos:start="35:36" pos:end="35:52"><name pos:start="35:36" pos:end="35:38">asf</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:52">stream_index</name></name></expr></argument>, <argument pos:start="35:55" pos:end="35:69"><expr pos:start="35:55" pos:end="35:69"><name pos:start="35:55" pos:end="35:69"><name pos:start="35:55" pos:end="35:57">asf</name><operator pos:start="35:58" pos:end="35:59">-&gt;</operator><name pos:start="35:60" pos:end="35:69">packet_seq</name></name></expr></argument>,

            <argument pos:start="37:13" pos:end="37:35"><expr pos:start="37:13" pos:end="37:35"><name pos:start="37:13" pos:end="37:35"><name pos:start="37:13" pos:end="37:15">asf</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:35">packet_frag_offset</name></name></expr></argument>, <argument pos:start="37:38" pos:end="37:60"><expr pos:start="37:38" pos:end="37:60"><name pos:start="37:38" pos:end="37:60"><name pos:start="37:38" pos:end="37:40">asf</name><operator pos:start="37:41" pos:end="37:42">-&gt;</operator><name pos:start="37:43" pos:end="37:60">packet_replic_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:62">(<expr pos:start="39:9" pos:end="39:61"><name pos:start="39:9" pos:end="39:13">rsize</name><operator pos:start="39:14" pos:end="39:14">+</operator><name pos:start="39:15" pos:end="39:37"><name pos:start="39:15" pos:end="39:17">asf</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:37">packet_replic_size</name></name> <operator pos:start="39:39" pos:end="39:39">&gt;</operator> <name pos:start="39:41" pos:end="39:61"><name pos:start="39:41" pos:end="39:43">asf</name><operator pos:start="39:44" pos:end="39:45">-&gt;</operator><name pos:start="39:46" pos:end="39:61">packet_size_left</name></name></expr>)</condition> <block pos:start="39:64" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:35">

        <expr_stmt pos:start="41:9" pos:end="41:95"><expr pos:start="41:9" pos:end="41:94"><call pos:start="41:9" pos:end="41:94"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="41:94">(<argument pos:start="41:16" pos:end="41:16"><expr pos:start="41:16" pos:end="41:16"><name pos:start="41:16" pos:end="41:16">s</name></expr></argument>, <argument pos:start="41:19" pos:end="41:30"><expr pos:start="41:19" pos:end="41:30"><name pos:start="41:19" pos:end="41:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:33" pos:end="41:68"><expr pos:start="41:33" pos:end="41:68"><literal type="string" pos:start="41:33" pos:end="41:68">"packet_replic_size %d is invalid\n"</literal></expr></argument>, <argument pos:start="41:71" pos:end="41:93"><expr pos:start="41:71" pos:end="41:93"><name pos:start="41:71" pos:end="41:93"><name pos:start="41:71" pos:end="41:73">asf</name><operator pos:start="41:74" pos:end="41:75">-&gt;</operator><name pos:start="41:76" pos:end="41:93">packet_replic_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:35">return <expr pos:start="43:16" pos:end="43:34"><name pos:start="43:16" pos:end="43:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="173:5"><if pos:start="47:5" pos:end="151:5">if <condition pos:start="47:8" pos:end="47:37">(<expr pos:start="47:9" pos:end="47:36"><name pos:start="47:9" pos:end="47:31"><name pos:start="47:9" pos:end="47:11">asf</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:31">packet_replic_size</name></name> <operator pos:start="47:33" pos:end="47:34">&gt;=</operator> <literal type="number" pos:start="47:36" pos:end="47:36">8</literal></expr>)</condition> <block pos:start="47:39" pos:end="151:5">{<block_content pos:start="49:9" pos:end="149:41">

        <decl_stmt pos:start="49:9" pos:end="49:62"><decl pos:start="49:9" pos:end="49:61"><type pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:15">int64_t</name></type> <name pos:start="49:17" pos:end="49:19">end</name> <init pos:start="49:21" pos:end="49:61">= <expr pos:start="49:23" pos:end="49:61"><call pos:start="49:23" pos:end="49:35"><name pos:start="49:23" pos:end="49:31">avio_tell</name><argument_list pos:start="49:32" pos:end="49:35">(<argument pos:start="49:33" pos:end="49:34"><expr pos:start="49:33" pos:end="49:34"><name pos:start="49:33" pos:end="49:34">pb</name></expr></argument>)</argument_list></call> <operator pos:start="49:37" pos:end="49:37">+</operator> <name pos:start="49:39" pos:end="49:61"><name pos:start="49:39" pos:end="49:41">asf</name><operator pos:start="49:42" pos:end="49:43">-&gt;</operator><name pos:start="49:44" pos:end="49:61">packet_replic_size</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="51:9" pos:end="51:26"><decl pos:start="51:9" pos:end="51:25"><type pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:18">AVRational</name></type> <name pos:start="51:20" pos:end="51:25">aspect</name></decl>;</decl_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:45"><expr pos:start="53:9" pos:end="53:44"><name pos:start="53:9" pos:end="53:28"><name pos:start="53:9" pos:end="53:11">asf</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:28">packet_obj_size</name></name> <operator pos:start="53:30" pos:end="53:30">=</operator> <call pos:start="53:32" pos:end="53:44"><name pos:start="53:32" pos:end="53:40">avio_rl32</name><argument_list pos:start="53:41" pos:end="53:44">(<argument pos:start="53:42" pos:end="53:43"><expr pos:start="53:42" pos:end="53:43"><name pos:start="53:42" pos:end="53:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="61:9"><if pos:start="55:9" pos:end="61:9">if<condition pos:start="55:11" pos:end="55:72">(<expr pos:start="55:12" pos:end="55:71"><name pos:start="55:12" pos:end="55:31"><name pos:start="55:12" pos:end="55:14">asf</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:31">packet_obj_size</name></name> <operator pos:start="55:33" pos:end="55:34">&gt;=</operator> <operator pos:start="55:36" pos:end="55:36">(</operator><literal type="number" pos:start="55:37" pos:end="55:37">1</literal><operator pos:start="55:38" pos:end="55:39">&lt;&lt;</operator><literal type="number" pos:start="55:40" pos:end="55:41">24</literal><operator pos:start="55:42" pos:end="55:42">)</operator> <operator pos:start="55:44" pos:end="55:45">||</operator> <name pos:start="55:47" pos:end="55:66"><name pos:start="55:47" pos:end="55:49">asf</name><operator pos:start="55:50" pos:end="55:51">-&gt;</operator><name pos:start="55:52" pos:end="55:66">packet_obj_size</name></name> <operator pos:start="55:68" pos:end="55:69">&lt;=</operator> <literal type="number" pos:start="55:71" pos:end="55:71">0</literal></expr>)</condition><block pos:start="55:73" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:39">

            <expr_stmt pos:start="57:13" pos:end="57:65"><expr pos:start="57:13" pos:end="57:64"><call pos:start="57:13" pos:end="57:64"><name pos:start="57:13" pos:end="57:18">av_log</name><argument_list pos:start="57:19" pos:end="57:64">(<argument pos:start="57:20" pos:end="57:20"><expr pos:start="57:20" pos:end="57:20"><name pos:start="57:20" pos:end="57:20">s</name></expr></argument>, <argument pos:start="57:23" pos:end="57:34"><expr pos:start="57:23" pos:end="57:34"><name pos:start="57:23" pos:end="57:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="57:37" pos:end="57:63"><expr pos:start="57:37" pos:end="57:63"><literal type="string" pos:start="57:37" pos:end="57:63">"packet_obj_size invalid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="59:13" pos:end="59:39">return <expr pos:start="59:20" pos:end="59:38"><name pos:start="59:20" pos:end="59:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:51"><expr pos:start="63:9" pos:end="63:50"><name pos:start="63:9" pos:end="63:34"><name pos:start="63:9" pos:end="63:11">asf</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:34">packet_frag_timestamp</name></name> <operator pos:start="63:36" pos:end="63:36">=</operator> <call pos:start="63:38" pos:end="63:50"><name pos:start="63:38" pos:end="63:46">avio_rl32</name><argument_list pos:start="63:47" pos:end="63:50">(<argument pos:start="63:48" pos:end="63:49"><expr pos:start="63:48" pos:end="63:49"><name pos:start="63:48" pos:end="63:49">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="63:53" pos:end="63:64">// timestamp</comment>



        <for pos:start="67:9" pos:end="143:9">for <control pos:start="67:13" pos:end="67:47">(<init pos:start="67:14" pos:end="67:17"><expr pos:start="67:14" pos:end="67:16"><name pos:start="67:14" pos:end="67:14">i</name><operator pos:start="67:15" pos:end="67:15">=</operator><literal type="number" pos:start="67:16" pos:end="67:16">0</literal></expr>;</init> <condition pos:start="67:19" pos:end="67:42"><expr pos:start="67:19" pos:end="67:41"><name pos:start="67:19" pos:end="67:19">i</name><operator pos:start="67:20" pos:end="67:20">&lt;</operator><name pos:start="67:21" pos:end="67:41"><name pos:start="67:21" pos:end="67:25">asfst</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:41">payload_ext_ct</name></name></expr>;</condition> <incr pos:start="67:44" pos:end="67:46"><expr pos:start="67:44" pos:end="67:46"><name pos:start="67:44" pos:end="67:44">i</name><operator pos:start="67:45" pos:end="67:46">++</operator></expr></incr>)</control> <block pos:start="67:49" pos:end="143:9">{<block_content pos:start="69:13" pos:end="141:44">

            <decl_stmt pos:start="69:13" pos:end="69:47"><decl pos:start="69:13" pos:end="69:46"><type pos:start="69:13" pos:end="69:24"><name pos:start="69:13" pos:end="69:22">ASFPayload</name> <modifier pos:start="69:24" pos:end="69:24">*</modifier></type><name pos:start="69:25" pos:end="69:25">p</name> <init pos:start="69:27" pos:end="69:46">= <expr pos:start="69:29" pos:end="69:46"><operator pos:start="69:29" pos:end="69:29">&amp;</operator><name pos:start="69:30" pos:end="69:46"><name pos:start="69:30" pos:end="69:34">asfst</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:43">payload</name><index pos:start="69:44" pos:end="69:46">[<expr pos:start="69:45" pos:end="69:45"><name pos:start="69:45" pos:end="69:45">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="71:13" pos:end="71:31"><decl pos:start="71:13" pos:end="71:30"><type pos:start="71:13" pos:end="71:15"><name pos:start="71:13" pos:end="71:15">int</name></type> <name pos:start="71:17" pos:end="71:20">size</name> <init pos:start="71:22" pos:end="71:30">= <expr pos:start="71:24" pos:end="71:30"><name pos:start="71:24" pos:end="71:30"><name pos:start="71:24" pos:end="71:24">p</name><operator pos:start="71:25" pos:end="71:26">-&gt;</operator><name pos:start="71:27" pos:end="71:30">size</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="73:13" pos:end="73:27"><decl pos:start="73:13" pos:end="73:26"><type pos:start="73:13" pos:end="73:19"><name pos:start="73:13" pos:end="73:19">int64_t</name></type> <name pos:start="73:21" pos:end="73:26">payend</name></decl>;</decl_stmt>

            <if_stmt pos:start="75:13" pos:end="77:37"><if pos:start="75:13" pos:end="77:37">if<condition pos:start="75:15" pos:end="75:30">(<expr pos:start="75:16" pos:end="75:29"><name pos:start="75:16" pos:end="75:19">size</name> <operator pos:start="75:21" pos:end="75:22">==</operator> <literal type="number" pos:start="75:24" pos:end="75:29">0xFFFF</literal></expr>)</condition><block type="pseudo" pos:start="77:17" pos:end="77:37"><block_content pos:start="77:17" pos:end="77:37">

                <expr_stmt pos:start="77:17" pos:end="77:37"><expr pos:start="77:17" pos:end="77:36"><name pos:start="77:17" pos:end="77:20">size</name> <operator pos:start="77:22" pos:end="77:22">=</operator> <call pos:start="77:24" pos:end="77:36"><name pos:start="77:24" pos:end="77:32">avio_rl16</name><argument_list pos:start="77:33" pos:end="77:36">(<argument pos:start="77:34" pos:end="77:35"><expr pos:start="77:34" pos:end="77:35"><name pos:start="77:34" pos:end="77:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:42"><expr pos:start="79:13" pos:end="79:41"><name pos:start="79:13" pos:end="79:18">payend</name> <operator pos:start="79:20" pos:end="79:20">=</operator> <call pos:start="79:22" pos:end="79:34"><name pos:start="79:22" pos:end="79:30">avio_tell</name><argument_list pos:start="79:31" pos:end="79:34">(<argument pos:start="79:32" pos:end="79:33"><expr pos:start="79:32" pos:end="79:33"><name pos:start="79:32" pos:end="79:33">pb</name></expr></argument>)</argument_list></call> <operator pos:start="79:36" pos:end="79:36">+</operator> <name pos:start="79:38" pos:end="79:41">size</name></expr>;</expr_stmt>

            <if_stmt pos:start="81:13" pos:end="87:13"><if pos:start="81:13" pos:end="87:13">if <condition pos:start="81:16" pos:end="81:29">(<expr pos:start="81:17" pos:end="81:28"><name pos:start="81:17" pos:end="81:22">payend</name> <operator pos:start="81:24" pos:end="81:24">&gt;</operator> <name pos:start="81:26" pos:end="81:28">end</name></expr>)</condition> <block pos:start="81:31" pos:end="87:13">{<block_content pos:start="83:17" pos:end="85:22">

                <expr_stmt pos:start="83:17" pos:end="83:62"><expr pos:start="83:17" pos:end="83:61"><call pos:start="83:17" pos:end="83:61"><name pos:start="83:17" pos:end="83:22">av_log</name><argument_list pos:start="83:23" pos:end="83:61">(<argument pos:start="83:24" pos:end="83:24"><expr pos:start="83:24" pos:end="83:24"><name pos:start="83:24" pos:end="83:24">s</name></expr></argument>, <argument pos:start="83:27" pos:end="83:38"><expr pos:start="83:27" pos:end="83:38"><name pos:start="83:27" pos:end="83:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="83:41" pos:end="83:60"><expr pos:start="83:41" pos:end="83:60"><literal type="string" pos:start="83:41" pos:end="83:60">"too long payload\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="85:17" pos:end="85:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <switch pos:start="89:13" pos:end="139:13">switch<condition pos:start="89:19" pos:end="89:27">(<expr pos:start="89:20" pos:end="89:26"><name pos:start="89:20" pos:end="89:26"><name pos:start="89:20" pos:end="89:20">p</name><operator pos:start="89:21" pos:end="89:22">-&gt;</operator><name pos:start="89:23" pos:end="89:26">type</name></name></expr>)</condition> <block pos:start="89:29" pos:end="139:13">{<block_content pos:start="91:13" pos:end="137:22">

            <case pos:start="91:13" pos:end="91:22">case <expr pos:start="91:18" pos:end="91:21"><literal type="number" pos:start="91:18" pos:end="91:21">0x50</literal></expr>:</case>

<comment type="line" pos:start="93:1" pos:end="93:41">//              duration = avio_rl16(pb);</comment>

                <break pos:start="95:17" pos:end="95:22">break;</break>

            <case pos:start="97:13" pos:end="97:22">case <expr pos:start="97:18" pos:end="97:21"><literal type="number" pos:start="97:18" pos:end="97:21">0x54</literal></expr>:</case>

                <expr_stmt pos:start="99:17" pos:end="99:41"><expr pos:start="99:17" pos:end="99:40"><name pos:start="99:17" pos:end="99:26"><name pos:start="99:17" pos:end="99:22">aspect</name><operator pos:start="99:23" pos:end="99:23">.</operator><name pos:start="99:24" pos:end="99:26">num</name></name> <operator pos:start="99:28" pos:end="99:28">=</operator> <call pos:start="99:30" pos:end="99:40"><name pos:start="99:30" pos:end="99:36">avio_r8</name><argument_list pos:start="99:37" pos:end="99:40">(<argument pos:start="99:38" pos:end="99:39"><expr pos:start="99:38" pos:end="99:39"><name pos:start="99:38" pos:end="99:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:41"><expr pos:start="101:17" pos:end="101:40"><name pos:start="101:17" pos:end="101:26"><name pos:start="101:17" pos:end="101:22">aspect</name><operator pos:start="101:23" pos:end="101:23">.</operator><name pos:start="101:24" pos:end="101:26">den</name></name> <operator pos:start="101:28" pos:end="101:28">=</operator> <call pos:start="101:30" pos:end="101:40"><name pos:start="101:30" pos:end="101:36">avio_r8</name><argument_list pos:start="101:37" pos:end="101:40">(<argument pos:start="101:38" pos:end="101:39"><expr pos:start="101:38" pos:end="101:39"><name pos:start="101:38" pos:end="101:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="103:17" pos:end="107:17"><if pos:start="103:17" pos:end="107:17">if <condition pos:start="103:20" pos:end="103:53">(<expr pos:start="103:21" pos:end="103:52"><name pos:start="103:21" pos:end="103:30"><name pos:start="103:21" pos:end="103:26">aspect</name><operator pos:start="103:27" pos:end="103:27">.</operator><name pos:start="103:28" pos:end="103:30">num</name></name> <operator pos:start="103:32" pos:end="103:32">&gt;</operator> <literal type="number" pos:start="103:34" pos:end="103:34">0</literal> <operator pos:start="103:36" pos:end="103:37">&amp;&amp;</operator> <name pos:start="103:39" pos:end="103:48"><name pos:start="103:39" pos:end="103:44">aspect</name><operator pos:start="103:45" pos:end="103:45">.</operator><name pos:start="103:46" pos:end="103:48">den</name></name> <operator pos:start="103:50" pos:end="103:50">&gt;</operator> <literal type="number" pos:start="103:52" pos:end="103:52">0</literal></expr>)</condition> <block pos:start="103:55" pos:end="107:17">{<block_content pos:start="105:21" pos:end="105:80">

                    <expr_stmt pos:start="105:21" pos:end="105:80"><expr pos:start="105:21" pos:end="105:79"><name pos:start="105:21" pos:end="105:49"><name pos:start="105:21" pos:end="105:21">s</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:30">streams</name><index pos:start="105:31" pos:end="105:49">[<expr pos:start="105:32" pos:end="105:48"><name pos:start="105:32" pos:end="105:48"><name pos:start="105:32" pos:end="105:34">asf</name><operator pos:start="105:35" pos:end="105:36">-&gt;</operator><name pos:start="105:37" pos:end="105:48">stream_index</name></name></expr>]</index></name><operator pos:start="105:50" pos:end="105:51">-&gt;</operator><name pos:start="105:52" pos:end="105:70">sample_aspect_ratio</name> <operator pos:start="105:72" pos:end="105:72">=</operator> <name pos:start="105:74" pos:end="105:79">aspect</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="109:17" pos:end="109:22">break;</break>

            <case pos:start="111:13" pos:end="111:22">case <expr pos:start="111:18" pos:end="111:21"><literal type="number" pos:start="111:18" pos:end="111:21">0x2A</literal></expr>:</case>

                <expr_stmt pos:start="113:17" pos:end="113:33"><expr pos:start="113:17" pos:end="113:32"><call pos:start="113:17" pos:end="113:32"><name pos:start="113:17" pos:end="113:25">avio_skip</name><argument_list pos:start="113:26" pos:end="113:32">(<argument pos:start="113:27" pos:end="113:28"><expr pos:start="113:27" pos:end="113:28"><name pos:start="113:27" pos:end="113:28">pb</name></expr></argument>, <argument pos:start="113:31" pos:end="113:31"><expr pos:start="113:31" pos:end="113:31"><literal type="number" pos:start="113:31" pos:end="113:31">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:35"><expr pos:start="115:17" pos:end="115:34"><name pos:start="115:17" pos:end="115:19">ts0</name><operator pos:start="115:20" pos:end="115:20">=</operator> <call pos:start="115:22" pos:end="115:34"><name pos:start="115:22" pos:end="115:30">avio_rl64</name><argument_list pos:start="115:31" pos:end="115:34">(<argument pos:start="115:32" pos:end="115:33"><expr pos:start="115:32" pos:end="115:33"><name pos:start="115:32" pos:end="115:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:35"><expr pos:start="117:17" pos:end="117:34"><name pos:start="117:17" pos:end="117:19">ts1</name><operator pos:start="117:20" pos:end="117:20">=</operator> <call pos:start="117:22" pos:end="117:34"><name pos:start="117:22" pos:end="117:30">avio_rl64</name><argument_list pos:start="117:31" pos:end="117:34">(<argument pos:start="117:32" pos:end="117:33"><expr pos:start="117:32" pos:end="117:33"><name pos:start="117:32" pos:end="117:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="119:17" pos:end="121:72"><if pos:start="119:17" pos:end="119:67">if<condition pos:start="119:19" pos:end="119:28">(<expr pos:start="119:20" pos:end="119:27"><name pos:start="119:20" pos:end="119:22">ts0</name><operator pos:start="119:23" pos:end="119:24">!=</operator> <operator pos:start="119:26" pos:end="119:26">-</operator><literal type="number" pos:start="119:27" pos:end="119:27">1</literal></expr>)</condition><block type="pseudo" pos:start="119:30" pos:end="119:67"><block_content pos:start="119:30" pos:end="119:67"> <expr_stmt pos:start="119:30" pos:end="119:67"><expr pos:start="119:30" pos:end="119:66"><name pos:start="119:30" pos:end="119:55"><name pos:start="119:30" pos:end="119:32">asf</name><operator pos:start="119:33" pos:end="119:34">-&gt;</operator><name pos:start="119:35" pos:end="119:55">packet_frag_timestamp</name></name><operator pos:start="119:56" pos:end="119:56">=</operator> <name pos:start="119:58" pos:end="119:60">ts0</name><operator pos:start="119:61" pos:end="119:61">/</operator><literal type="number" pos:start="119:62" pos:end="119:66">10000</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="121:17" pos:end="121:72">else<block type="pseudo" pos:start="121:30" pos:end="121:72"><block_content pos:start="121:30" pos:end="121:72">         <expr_stmt pos:start="121:30" pos:end="121:72"><expr pos:start="121:30" pos:end="121:71"><name pos:start="121:30" pos:end="121:55"><name pos:start="121:30" pos:end="121:32">asf</name><operator pos:start="121:33" pos:end="121:34">-&gt;</operator><name pos:start="121:35" pos:end="121:55">packet_frag_timestamp</name></name><operator pos:start="121:56" pos:end="121:56">=</operator> <name pos:start="121:58" pos:end="121:71">AV_NOPTS_VALUE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <break pos:start="123:17" pos:end="123:22">break;</break>

            <case pos:start="125:13" pos:end="125:22">case <expr pos:start="125:18" pos:end="125:21"><literal type="number" pos:start="125:18" pos:end="125:21">0x5B</literal></expr>:</case>

            <case pos:start="127:13" pos:end="127:22">case <expr pos:start="127:18" pos:end="127:21"><literal type="number" pos:start="127:18" pos:end="127:21">0xB7</literal></expr>:</case>

            <case pos:start="129:13" pos:end="129:22">case <expr pos:start="129:18" pos:end="129:21"><literal type="number" pos:start="129:18" pos:end="129:21">0xCC</literal></expr>:</case>

            <case pos:start="131:13" pos:end="131:22">case <expr pos:start="131:18" pos:end="131:21"><literal type="number" pos:start="131:18" pos:end="131:21">0xC0</literal></expr>:</case>

            <case pos:start="133:13" pos:end="133:22">case <expr pos:start="133:18" pos:end="133:21"><literal type="number" pos:start="133:18" pos:end="133:21">0xA0</literal></expr>:</case>

                <comment type="line" pos:start="135:17" pos:end="135:25">//unknown</comment>

                <break pos:start="137:17" pos:end="137:22">break;</break>

            </block_content>}</block></switch>

            <expr_stmt pos:start="141:13" pos:end="141:44"><expr pos:start="141:13" pos:end="141:43"><call pos:start="141:13" pos:end="141:43"><name pos:start="141:13" pos:end="141:21">avio_seek</name><argument_list pos:start="141:22" pos:end="141:43">(<argument pos:start="141:23" pos:end="141:24"><expr pos:start="141:23" pos:end="141:24"><name pos:start="141:23" pos:end="141:24">pb</name></expr></argument>, <argument pos:start="141:27" pos:end="141:32"><expr pos:start="141:27" pos:end="141:32"><name pos:start="141:27" pos:end="141:32">payend</name></expr></argument>, <argument pos:start="141:35" pos:end="141:42"><expr pos:start="141:35" pos:end="141:42"><name pos:start="141:35" pos:end="141:42">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="147:9" pos:end="147:37"><expr pos:start="147:9" pos:end="147:36"><call pos:start="147:9" pos:end="147:36"><name pos:start="147:9" pos:end="147:17">avio_seek</name><argument_list pos:start="147:18" pos:end="147:36">(<argument pos:start="147:19" pos:end="147:20"><expr pos:start="147:19" pos:end="147:20"><name pos:start="147:19" pos:end="147:20">pb</name></expr></argument>, <argument pos:start="147:23" pos:end="147:25"><expr pos:start="147:23" pos:end="147:25"><name pos:start="147:23" pos:end="147:25">end</name></expr></argument>, <argument pos:start="147:28" pos:end="147:35"><expr pos:start="147:28" pos:end="147:35"><name pos:start="147:28" pos:end="147:35">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:41"><expr pos:start="149:9" pos:end="149:40"><name pos:start="149:9" pos:end="149:13">rsize</name> <operator pos:start="149:15" pos:end="149:16">+=</operator> <name pos:start="149:18" pos:end="149:40"><name pos:start="149:18" pos:end="149:20">asf</name><operator pos:start="149:21" pos:end="149:22">-&gt;</operator><name pos:start="149:23" pos:end="149:40">packet_replic_size</name></name></expr>;</expr_stmt> <comment type="line" pos:start="149:43" pos:end="149:67">// FIXME - check validity</comment>

    </block_content>}</block></if> <if type="elseif" pos:start="151:7" pos:end="167:5">else if <condition pos:start="151:15" pos:end="151:42">(<expr pos:start="151:16" pos:end="151:41"><name pos:start="151:16" pos:end="151:38"><name pos:start="151:16" pos:end="151:18">asf</name><operator pos:start="151:19" pos:end="151:20">-&gt;</operator><name pos:start="151:21" pos:end="151:38">packet_replic_size</name></name><operator pos:start="151:39" pos:end="151:40">==</operator><literal type="number" pos:start="151:41" pos:end="151:41">1</literal></expr>)</condition><block pos:start="151:43" pos:end="167:5">{<block_content pos:start="155:9" pos:end="165:16">

        <comment type="line" pos:start="153:9" pos:end="153:59">// multipacket - frag_offset is beginning timestamp</comment>

        <expr_stmt pos:start="155:9" pos:end="155:57"><expr pos:start="155:9" pos:end="155:56"><name pos:start="155:9" pos:end="155:30"><name pos:start="155:9" pos:end="155:11">asf</name><operator pos:start="155:12" pos:end="155:13">-&gt;</operator><name pos:start="155:14" pos:end="155:30">packet_time_start</name></name> <operator pos:start="155:32" pos:end="155:32">=</operator> <name pos:start="155:34" pos:end="155:56"><name pos:start="155:34" pos:end="155:36">asf</name><operator pos:start="155:37" pos:end="155:38">-&gt;</operator><name pos:start="155:39" pos:end="155:56">packet_frag_offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:36"><expr pos:start="157:9" pos:end="157:35"><name pos:start="157:9" pos:end="157:31"><name pos:start="157:9" pos:end="157:11">asf</name><operator pos:start="157:12" pos:end="157:13">-&gt;</operator><name pos:start="157:14" pos:end="157:31">packet_frag_offset</name></name> <operator pos:start="157:33" pos:end="157:33">=</operator> <literal type="number" pos:start="157:35" pos:end="157:35">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:59"><expr pos:start="159:9" pos:end="159:58"><name pos:start="159:9" pos:end="159:34"><name pos:start="159:9" pos:end="159:11">asf</name><operator pos:start="159:12" pos:end="159:13">-&gt;</operator><name pos:start="159:14" pos:end="159:34">packet_frag_timestamp</name></name> <operator pos:start="159:36" pos:end="159:36">=</operator> <name pos:start="159:38" pos:end="159:58"><name pos:start="159:38" pos:end="159:40">asf</name><operator pos:start="159:41" pos:end="159:42">-&gt;</operator><name pos:start="159:43" pos:end="159:58">packet_timestamp</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="163:9" pos:end="163:45"><expr pos:start="163:9" pos:end="163:44"><name pos:start="163:9" pos:end="163:30"><name pos:start="163:9" pos:end="163:11">asf</name><operator pos:start="163:12" pos:end="163:13">-&gt;</operator><name pos:start="163:14" pos:end="163:30">packet_time_delta</name></name> <operator pos:start="163:32" pos:end="163:32">=</operator> <call pos:start="163:34" pos:end="163:44"><name pos:start="163:34" pos:end="163:40">avio_r8</name><argument_list pos:start="163:41" pos:end="163:44">(<argument pos:start="163:42" pos:end="163:43"><expr pos:start="163:42" pos:end="163:43"><name pos:start="163:42" pos:end="163:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:16"><expr pos:start="165:9" pos:end="165:15"><name pos:start="165:9" pos:end="165:13">rsize</name><operator pos:start="165:14" pos:end="165:15">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="167:6" pos:end="173:5">else if<condition pos:start="167:13" pos:end="167:40">(<expr pos:start="167:14" pos:end="167:39"><name pos:start="167:14" pos:end="167:36"><name pos:start="167:14" pos:end="167:16">asf</name><operator pos:start="167:17" pos:end="167:18">-&gt;</operator><name pos:start="167:19" pos:end="167:36">packet_replic_size</name></name><operator pos:start="167:37" pos:end="167:38">!=</operator><literal type="number" pos:start="167:39" pos:end="167:39">0</literal></expr>)</condition><block pos:start="167:41" pos:end="173:5">{<block_content pos:start="169:9" pos:end="171:35">

        <expr_stmt pos:start="169:9" pos:end="169:98"><expr pos:start="169:9" pos:end="169:97"><call pos:start="169:9" pos:end="169:97"><name pos:start="169:9" pos:end="169:14">av_log</name><argument_list pos:start="169:15" pos:end="169:97">(<argument pos:start="169:16" pos:end="169:16"><expr pos:start="169:16" pos:end="169:16"><name pos:start="169:16" pos:end="169:16">s</name></expr></argument>, <argument pos:start="169:19" pos:end="169:30"><expr pos:start="169:19" pos:end="169:30"><name pos:start="169:19" pos:end="169:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="169:33" pos:end="169:71"><expr pos:start="169:33" pos:end="169:71"><literal type="string" pos:start="169:33" pos:end="169:71">"unexpected packet_replic_size of %d\n"</literal></expr></argument>, <argument pos:start="169:74" pos:end="169:96"><expr pos:start="169:74" pos:end="169:96"><name pos:start="169:74" pos:end="169:96"><name pos:start="169:74" pos:end="169:76">asf</name><operator pos:start="169:77" pos:end="169:78">-&gt;</operator><name pos:start="169:79" pos:end="169:96">packet_replic_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="171:9" pos:end="171:35">return <expr pos:start="171:16" pos:end="171:34"><name pos:start="171:16" pos:end="171:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="175:5" pos:end="209:5"><if pos:start="175:5" pos:end="205:5">if <condition pos:start="175:8" pos:end="175:33">(<expr pos:start="175:9" pos:end="175:32"><name pos:start="175:9" pos:end="175:25"><name pos:start="175:9" pos:end="175:11">asf</name><operator pos:start="175:12" pos:end="175:13">-&gt;</operator><name pos:start="175:14" pos:end="175:25">packet_flags</name></name> <operator pos:start="175:27" pos:end="175:27">&amp;</operator> <literal type="number" pos:start="175:29" pos:end="175:32">0x01</literal></expr>)</condition> <block pos:start="175:35" pos:end="205:5">{<block_content pos:start="177:9" pos:end="203:9">

        <expr_stmt pos:start="177:9" pos:end="177:73"><expr pos:start="177:9" pos:end="177:72"><call pos:start="177:9" pos:end="177:72"><name pos:start="177:9" pos:end="177:16">DO_2BITS</name><argument_list pos:start="177:17" pos:end="177:72">(<argument pos:start="177:18" pos:end="177:45"><expr pos:start="177:18" pos:end="177:45"><name pos:start="177:18" pos:end="177:40"><name pos:start="177:18" pos:end="177:20">asf</name><operator pos:start="177:21" pos:end="177:22">-&gt;</operator><name pos:start="177:23" pos:end="177:40">packet_segsizetype</name></name> <operator pos:start="177:42" pos:end="177:43">&gt;&gt;</operator> <literal type="number" pos:start="177:45" pos:end="177:45">6</literal></expr></argument>, <argument pos:start="177:48" pos:end="177:68"><expr pos:start="177:48" pos:end="177:68"><name pos:start="177:48" pos:end="177:68"><name pos:start="177:48" pos:end="177:50">asf</name><operator pos:start="177:51" pos:end="177:52">-&gt;</operator><name pos:start="177:53" pos:end="177:68">packet_frag_size</name></name></expr></argument>, <argument pos:start="177:71" pos:end="177:71"><expr pos:start="177:71" pos:end="177:71"><literal type="number" pos:start="177:71" pos:end="177:71">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="177:75" pos:end="177:89">// 0 is illegal</comment>

        <if_stmt pos:start="179:9" pos:end="203:9"><if pos:start="179:9" pos:end="185:9">if <condition pos:start="179:12" pos:end="179:42">(<expr pos:start="179:13" pos:end="179:41"><name pos:start="179:13" pos:end="179:17">rsize</name> <operator pos:start="179:19" pos:end="179:19">&gt;</operator> <name pos:start="179:21" pos:end="179:41"><name pos:start="179:21" pos:end="179:23">asf</name><operator pos:start="179:24" pos:end="179:25">-&gt;</operator><name pos:start="179:26" pos:end="179:41">packet_size_left</name></name></expr>)</condition> <block pos:start="179:44" pos:end="185:9">{<block_content pos:start="181:13" pos:end="183:39">

            <expr_stmt pos:start="181:13" pos:end="181:71"><expr pos:start="181:13" pos:end="181:70"><call pos:start="181:13" pos:end="181:70"><name pos:start="181:13" pos:end="181:18">av_log</name><argument_list pos:start="181:19" pos:end="181:70">(<argument pos:start="181:20" pos:end="181:20"><expr pos:start="181:20" pos:end="181:20"><name pos:start="181:20" pos:end="181:20">s</name></expr></argument>, <argument pos:start="181:23" pos:end="181:34"><expr pos:start="181:23" pos:end="181:34"><name pos:start="181:23" pos:end="181:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="181:37" pos:end="181:69"><expr pos:start="181:37" pos:end="181:69"><literal type="string" pos:start="181:37" pos:end="181:69">"packet_replic_size is invalid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="183:13" pos:end="183:39">return <expr pos:start="183:20" pos:end="183:38"><name pos:start="183:20" pos:end="183:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="185:11" pos:end="203:9">else if<condition pos:start="185:18" pos:end="185:72">(<expr pos:start="185:19" pos:end="185:71"><name pos:start="185:19" pos:end="185:39"><name pos:start="185:19" pos:end="185:21">asf</name><operator pos:start="185:22" pos:end="185:23">-&gt;</operator><name pos:start="185:24" pos:end="185:39">packet_frag_size</name></name> <operator pos:start="185:41" pos:end="185:41">&gt;</operator> <name pos:start="185:43" pos:end="185:63"><name pos:start="185:43" pos:end="185:45">asf</name><operator pos:start="185:46" pos:end="185:47">-&gt;</operator><name pos:start="185:48" pos:end="185:63">packet_size_left</name></name> <operator pos:start="185:65" pos:end="185:65">-</operator> <name pos:start="185:67" pos:end="185:71">rsize</name></expr>)</condition><block pos:start="185:73" pos:end="203:9">{<block_content pos:start="187:13" pos:end="201:13">

            <if_stmt pos:start="187:13" pos:end="201:13"><if pos:start="187:13" pos:end="193:13">if <condition pos:start="187:16" pos:end="187:92">(<expr pos:start="187:17" pos:end="187:91"><name pos:start="187:17" pos:end="187:37"><name pos:start="187:17" pos:end="187:19">asf</name><operator pos:start="187:20" pos:end="187:21">-&gt;</operator><name pos:start="187:22" pos:end="187:37">packet_frag_size</name></name> <operator pos:start="187:39" pos:end="187:39">&gt;</operator> <name pos:start="187:41" pos:end="187:61"><name pos:start="187:41" pos:end="187:43">asf</name><operator pos:start="187:44" pos:end="187:45">-&gt;</operator><name pos:start="187:46" pos:end="187:61">packet_size_left</name></name> <operator pos:start="187:63" pos:end="187:63">-</operator> <name pos:start="187:65" pos:end="187:69">rsize</name> <operator pos:start="187:71" pos:end="187:71">+</operator> <name pos:start="187:73" pos:end="187:91"><name pos:start="187:73" pos:end="187:75">asf</name><operator pos:start="187:76" pos:end="187:77">-&gt;</operator><name pos:start="187:78" pos:end="187:91">packet_padsize</name></name></expr>)</condition> <block pos:start="187:94" pos:end="193:13">{<block_content pos:start="189:17" pos:end="191:43">

                <expr_stmt pos:start="189:17" pos:end="189:111"><expr pos:start="189:17" pos:end="189:110"><call pos:start="189:17" pos:end="189:110"><name pos:start="189:17" pos:end="189:22">av_log</name><argument_list pos:start="189:23" pos:end="189:110">(<argument pos:start="189:24" pos:end="189:24"><expr pos:start="189:24" pos:end="189:24"><name pos:start="189:24" pos:end="189:24">s</name></expr></argument>, <argument pos:start="189:27" pos:end="189:38"><expr pos:start="189:27" pos:end="189:38"><name pos:start="189:27" pos:end="189:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="189:41" pos:end="189:79"><expr pos:start="189:41" pos:end="189:79"><literal type="string" pos:start="189:41" pos:end="189:79">"packet_frag_size is invalid (%d-%d)\n"</literal></expr></argument>, <argument pos:start="189:82" pos:end="189:102"><expr pos:start="189:82" pos:end="189:102"><name pos:start="189:82" pos:end="189:102"><name pos:start="189:82" pos:end="189:84">asf</name><operator pos:start="189:85" pos:end="189:86">-&gt;</operator><name pos:start="189:87" pos:end="189:102">packet_size_left</name></name></expr></argument>, <argument pos:start="189:105" pos:end="189:109"><expr pos:start="189:105" pos:end="189:109"><name pos:start="189:105" pos:end="189:109">rsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="191:17" pos:end="191:43">return <expr pos:start="191:24" pos:end="191:42"><name pos:start="191:24" pos:end="191:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if> <else pos:start="193:15" pos:end="201:13">else <block pos:start="193:20" pos:end="201:13">{<block_content pos:start="195:17" pos:end="199:46">

                <decl_stmt pos:start="195:17" pos:end="195:83"><decl pos:start="195:17" pos:end="195:82"><type pos:start="195:17" pos:end="195:19"><name pos:start="195:17" pos:end="195:19">int</name></type> <name pos:start="195:21" pos:end="195:24">diff</name> <init pos:start="195:26" pos:end="195:82">= <expr pos:start="195:28" pos:end="195:82"><name pos:start="195:28" pos:end="195:48"><name pos:start="195:28" pos:end="195:30">asf</name><operator pos:start="195:31" pos:end="195:32">-&gt;</operator><name pos:start="195:33" pos:end="195:48">packet_frag_size</name></name> <operator pos:start="195:50" pos:end="195:50">-</operator> <operator pos:start="195:52" pos:end="195:52">(</operator><name pos:start="195:53" pos:end="195:73"><name pos:start="195:53" pos:end="195:55">asf</name><operator pos:start="195:56" pos:end="195:57">-&gt;</operator><name pos:start="195:58" pos:end="195:73">packet_size_left</name></name> <operator pos:start="195:75" pos:end="195:75">-</operator> <name pos:start="195:77" pos:end="195:81">rsize</name><operator pos:start="195:82" pos:end="195:82">)</operator></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="197:17" pos:end="197:46"><expr pos:start="197:17" pos:end="197:45"><name pos:start="197:17" pos:end="197:37"><name pos:start="197:17" pos:end="197:19">asf</name><operator pos:start="197:20" pos:end="197:21">-&gt;</operator><name pos:start="197:22" pos:end="197:37">packet_size_left</name></name> <operator pos:start="197:39" pos:end="197:40">+=</operator> <name pos:start="197:42" pos:end="197:45">diff</name></expr>;</expr_stmt>

                <expr_stmt pos:start="199:17" pos:end="199:46"><expr pos:start="199:17" pos:end="199:45"><name pos:start="199:17" pos:end="199:35"><name pos:start="199:17" pos:end="199:19">asf</name><operator pos:start="199:20" pos:end="199:21">-&gt;</operator><name pos:start="199:22" pos:end="199:35">packet_padsize</name></name>   <operator pos:start="199:39" pos:end="199:40">-=</operator> <name pos:start="199:42" pos:end="199:45">diff</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="205:7" pos:end="209:5">else <block pos:start="205:12" pos:end="209:5">{<block_content pos:start="207:9" pos:end="207:62">

        <expr_stmt pos:start="207:9" pos:end="207:62"><expr pos:start="207:9" pos:end="207:61"><name pos:start="207:9" pos:end="207:29"><name pos:start="207:9" pos:end="207:11">asf</name><operator pos:start="207:12" pos:end="207:13">-&gt;</operator><name pos:start="207:14" pos:end="207:29">packet_frag_size</name></name> <operator pos:start="207:31" pos:end="207:31">=</operator> <name pos:start="207:33" pos:end="207:53"><name pos:start="207:33" pos:end="207:35">asf</name><operator pos:start="207:36" pos:end="207:37">-&gt;</operator><name pos:start="207:38" pos:end="207:53">packet_size_left</name></name> <operator pos:start="207:55" pos:end="207:55">-</operator> <name pos:start="207:57" pos:end="207:61">rsize</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="211:5" pos:end="219:5"><if pos:start="211:5" pos:end="219:5">if <condition pos:start="211:8" pos:end="211:37">(<expr pos:start="211:9" pos:end="211:36"><name pos:start="211:9" pos:end="211:31"><name pos:start="211:9" pos:end="211:11">asf</name><operator pos:start="211:12" pos:end="211:13">-&gt;</operator><name pos:start="211:14" pos:end="211:31">packet_replic_size</name></name> <operator pos:start="211:33" pos:end="211:34">==</operator> <literal type="number" pos:start="211:36" pos:end="211:36">1</literal></expr>)</condition> <block pos:start="211:39" pos:end="219:5">{<block_content pos:start="213:9" pos:end="217:39">

        <expr_stmt pos:start="213:9" pos:end="213:55"><expr pos:start="213:9" pos:end="213:54"><name pos:start="213:9" pos:end="213:30"><name pos:start="213:9" pos:end="213:11">asf</name><operator pos:start="213:12" pos:end="213:13">-&gt;</operator><name pos:start="213:14" pos:end="213:30">packet_multi_size</name></name> <operator pos:start="213:32" pos:end="213:32">=</operator> <name pos:start="213:34" pos:end="213:54"><name pos:start="213:34" pos:end="213:36">asf</name><operator pos:start="213:37" pos:end="213:38">-&gt;</operator><name pos:start="213:39" pos:end="213:54">packet_frag_size</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="215:9" pos:end="217:39"><if pos:start="215:9" pos:end="217:39">if <condition pos:start="215:12" pos:end="215:59">(<expr pos:start="215:13" pos:end="215:58"><name pos:start="215:13" pos:end="215:34"><name pos:start="215:13" pos:end="215:15">asf</name><operator pos:start="215:16" pos:end="215:17">-&gt;</operator><name pos:start="215:18" pos:end="215:34">packet_multi_size</name></name> <operator pos:start="215:36" pos:end="215:36">&gt;</operator> <name pos:start="215:38" pos:end="215:58"><name pos:start="215:38" pos:end="215:40">asf</name><operator pos:start="215:41" pos:end="215:42">-&gt;</operator><name pos:start="215:43" pos:end="215:58">packet_size_left</name></name></expr>)</condition><block type="pseudo" pos:start="217:13" pos:end="217:39"><block_content pos:start="217:13" pos:end="217:39">

            <return pos:start="217:13" pos:end="217:39">return <expr pos:start="217:20" pos:end="217:38"><name pos:start="217:20" pos:end="217:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:35"><expr pos:start="221:5" pos:end="221:34"><name pos:start="221:5" pos:end="221:25"><name pos:start="221:5" pos:end="221:7">asf</name><operator pos:start="221:8" pos:end="221:9">-&gt;</operator><name pos:start="221:10" pos:end="221:25">packet_size_left</name></name> <operator pos:start="221:27" pos:end="221:28">-=</operator> <name pos:start="221:30" pos:end="221:34">rsize</name></expr>;</expr_stmt>



    <return pos:start="225:5" pos:end="225:13">return <expr pos:start="225:12" pos:end="225:12"><literal type="number" pos:start="225:12" pos:end="225:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
