<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20039.c" pos:tabs="8"><function pos:start="1:1" pos:end="373:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">output_audio_block</name><parameter_list pos:start="1:31" pos:end="1:60">(<parameter pos:start="1:32" pos:end="1:50"><decl pos:start="1:32" pos:end="1:50"><type pos:start="1:32" pos:end="1:50"><name pos:start="1:32" pos:end="1:47">AC3EncodeContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:59"><decl pos:start="1:53" pos:end="1:59"><type pos:start="1:53" pos:end="1:59"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:59">blk</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="373:1">{<block_content pos:start="5:5" pos:end="371:5">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">ch</name></decl>, <decl pos:start="5:13" pos:end="5:13"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:13" pos:end="5:13">i</name></decl>, <decl pos:start="5:16" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:19">baie</name></decl>, <decl pos:start="5:22" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:24">bnd</name></decl>, <decl pos:start="5:27" pos:end="5:33"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:27" pos:end="5:33">got_cpl</name></decl>, <decl pos:start="5:36" pos:end="5:38"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:36" pos:end="5:38">ch0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AC3Block</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:19">block</name> <init pos:start="7:21" pos:end="7:37">= <expr pos:start="7:23" pos:end="7:37"><operator pos:start="7:23" pos:end="7:23">&amp;</operator><name pos:start="7:24" pos:end="7:37"><name pos:start="7:24" pos:end="7:24">s</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:32">blocks</name><index pos:start="7:33" pos:end="7:37">[<expr pos:start="7:34" pos:end="7:36"><name pos:start="7:34" pos:end="7:36">blk</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:25">/* block switching */</comment>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:17">(<expr pos:start="13:9" pos:end="13:16"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:16"><name pos:start="13:10" pos:end="13:10">s</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:16">eac3</name></name></expr>)</condition> <block pos:start="13:19" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:35">

        <for pos:start="15:9" pos:end="17:35">for <control pos:start="15:13" pos:end="15:48">(<init pos:start="15:14" pos:end="15:20"><expr pos:start="15:14" pos:end="15:19"><name pos:start="15:14" pos:end="15:15">ch</name> <operator pos:start="15:17" pos:end="15:17">=</operator> <literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr>;</init> <condition pos:start="15:22" pos:end="15:42"><expr pos:start="15:22" pos:end="15:41"><name pos:start="15:22" pos:end="15:23">ch</name> <operator pos:start="15:25" pos:end="15:25">&lt;</operator> <name pos:start="15:27" pos:end="15:41"><name pos:start="15:27" pos:end="15:27">s</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:41">fbw_channels</name></name></expr>;</condition> <incr pos:start="15:44" pos:end="15:47"><expr pos:start="15:44" pos:end="15:47"><name pos:start="15:44" pos:end="15:45">ch</name><operator pos:start="15:46" pos:end="15:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="17:13" pos:end="17:35"><block_content pos:start="17:13" pos:end="17:35">

            <expr_stmt pos:start="17:13" pos:end="17:35"><expr pos:start="17:13" pos:end="17:34"><call pos:start="17:13" pos:end="17:34"><name pos:start="17:13" pos:end="17:20">put_bits</name><argument_list pos:start="17:21" pos:end="17:34">(<argument pos:start="17:22" pos:end="17:27"><expr pos:start="17:22" pos:end="17:27"><operator pos:start="17:22" pos:end="17:22">&amp;</operator><name pos:start="17:23" pos:end="17:27"><name pos:start="17:23" pos:end="17:23">s</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:27">pb</name></name></expr></argument>, <argument pos:start="17:30" pos:end="17:30"><expr pos:start="17:30" pos:end="17:30"><literal type="number" pos:start="17:30" pos:end="17:30">1</literal></expr></argument>, <argument pos:start="17:33" pos:end="17:33"><expr pos:start="17:33" pos:end="17:33"><literal type="number" pos:start="17:33" pos:end="17:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:22">/* dither flags */</comment>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:17">(<expr pos:start="25:9" pos:end="25:16"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:16"><name pos:start="25:10" pos:end="25:10">s</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:16">eac3</name></name></expr>)</condition> <block pos:start="25:19" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:35">

        <for pos:start="27:9" pos:end="29:35">for <control pos:start="27:13" pos:end="27:48">(<init pos:start="27:14" pos:end="27:20"><expr pos:start="27:14" pos:end="27:19"><name pos:start="27:14" pos:end="27:15">ch</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <literal type="number" pos:start="27:19" pos:end="27:19">0</literal></expr>;</init> <condition pos:start="27:22" pos:end="27:42"><expr pos:start="27:22" pos:end="27:41"><name pos:start="27:22" pos:end="27:23">ch</name> <operator pos:start="27:25" pos:end="27:25">&lt;</operator> <name pos:start="27:27" pos:end="27:41"><name pos:start="27:27" pos:end="27:27">s</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:41">fbw_channels</name></name></expr>;</condition> <incr pos:start="27:44" pos:end="27:47"><expr pos:start="27:44" pos:end="27:47"><name pos:start="27:44" pos:end="27:45">ch</name><operator pos:start="27:46" pos:end="27:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="29:13" pos:end="29:35"><block_content pos:start="29:13" pos:end="29:35">

            <expr_stmt pos:start="29:13" pos:end="29:35"><expr pos:start="29:13" pos:end="29:34"><call pos:start="29:13" pos:end="29:34"><name pos:start="29:13" pos:end="29:20">put_bits</name><argument_list pos:start="29:21" pos:end="29:34">(<argument pos:start="29:22" pos:end="29:27"><expr pos:start="29:22" pos:end="29:27"><operator pos:start="29:22" pos:end="29:22">&amp;</operator><name pos:start="29:23" pos:end="29:27"><name pos:start="29:23" pos:end="29:23">s</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:27">pb</name></name></expr></argument>, <argument pos:start="29:30" pos:end="29:30"><expr pos:start="29:30" pos:end="29:30"><literal type="number" pos:start="29:30" pos:end="29:30">1</literal></expr></argument>, <argument pos:start="29:33" pos:end="29:33"><expr pos:start="29:33" pos:end="29:33"><literal type="number" pos:start="29:33" pos:end="29:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:29">/* dynamic range codes */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:27"><expr pos:start="37:5" pos:end="37:26"><call pos:start="37:5" pos:end="37:26"><name pos:start="37:5" pos:end="37:12">put_bits</name><argument_list pos:start="37:13" pos:end="37:26">(<argument pos:start="37:14" pos:end="37:19"><expr pos:start="37:14" pos:end="37:19"><operator pos:start="37:14" pos:end="37:14">&amp;</operator><name pos:start="37:15" pos:end="37:19"><name pos:start="37:15" pos:end="37:15">s</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:19">pb</name></name></expr></argument>, <argument pos:start="37:22" pos:end="37:22"><expr pos:start="37:22" pos:end="37:22"><literal type="number" pos:start="37:22" pos:end="37:22">1</literal></expr></argument>, <argument pos:start="37:25" pos:end="37:25"><expr pos:start="37:25" pos:end="37:25"><literal type="number" pos:start="37:25" pos:end="37:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:28">/* spectral extension */</comment>

    <if_stmt pos:start="43:5" pos:end="45:31"><if pos:start="43:5" pos:end="45:31">if <condition pos:start="43:8" pos:end="43:16">(<expr pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:15">eac3</name></name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:31"><block_content pos:start="45:9" pos:end="45:31">

        <expr_stmt pos:start="45:9" pos:end="45:31"><expr pos:start="45:9" pos:end="45:30"><call pos:start="45:9" pos:end="45:30"><name pos:start="45:9" pos:end="45:16">put_bits</name><argument_list pos:start="45:17" pos:end="45:30">(<argument pos:start="45:18" pos:end="45:23"><expr pos:start="45:18" pos:end="45:23"><operator pos:start="45:18" pos:end="45:18">&amp;</operator><name pos:start="45:19" pos:end="45:23"><name pos:start="45:19" pos:end="45:19">s</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:23">pb</name></name></expr></argument>, <argument pos:start="45:26" pos:end="45:26"><expr pos:start="45:26" pos:end="45:26"><literal type="number" pos:start="45:26" pos:end="45:26">1</literal></expr></argument>, <argument pos:start="45:29" pos:end="45:29"><expr pos:start="45:29" pos:end="45:29"><literal type="number" pos:start="45:29" pos:end="45:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:26">/* channel coupling */</comment>

    <if_stmt pos:start="51:5" pos:end="53:53"><if pos:start="51:5" pos:end="53:53">if <condition pos:start="51:8" pos:end="51:17">(<expr pos:start="51:9" pos:end="51:16"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:16"><name pos:start="51:10" pos:end="51:10">s</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:16">eac3</name></name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:53"><block_content pos:start="53:9" pos:end="53:53">

        <expr_stmt pos:start="53:9" pos:end="53:53"><expr pos:start="53:9" pos:end="53:52"><call pos:start="53:9" pos:end="53:52"><name pos:start="53:9" pos:end="53:16">put_bits</name><argument_list pos:start="53:17" pos:end="53:52">(<argument pos:start="53:18" pos:end="53:23"><expr pos:start="53:18" pos:end="53:23"><operator pos:start="53:18" pos:end="53:18">&amp;</operator><name pos:start="53:19" pos:end="53:23"><name pos:start="53:19" pos:end="53:19">s</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:23">pb</name></name></expr></argument>, <argument pos:start="53:26" pos:end="53:26"><expr pos:start="53:26" pos:end="53:26"><literal type="number" pos:start="53:26" pos:end="53:26">1</literal></expr></argument>, <argument pos:start="53:29" pos:end="53:51"><expr pos:start="53:29" pos:end="53:51"><name pos:start="53:29" pos:end="53:51"><name pos:start="53:29" pos:end="53:33">block</name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:51">new_cpl_strategy</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="55:5" pos:end="105:5"><if pos:start="55:5" pos:end="105:5">if <condition pos:start="55:8" pos:end="55:32">(<expr pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:13">block</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:31">new_cpl_strategy</name></name></expr>)</condition> <block pos:start="55:34" pos:end="105:5">{<block_content pos:start="57:9" pos:end="103:9">

        <if_stmt pos:start="57:9" pos:end="59:51"><if pos:start="57:9" pos:end="59:51">if <condition pos:start="57:12" pos:end="57:21">(<expr pos:start="57:13" pos:end="57:20"><operator pos:start="57:13" pos:end="57:13">!</operator><name pos:start="57:14" pos:end="57:20"><name pos:start="57:14" pos:end="57:14">s</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:20">eac3</name></name></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:51"><block_content pos:start="59:13" pos:end="59:51">

            <expr_stmt pos:start="59:13" pos:end="59:51"><expr pos:start="59:13" pos:end="59:50"><call pos:start="59:13" pos:end="59:50"><name pos:start="59:13" pos:end="59:20">put_bits</name><argument_list pos:start="59:21" pos:end="59:50">(<argument pos:start="59:22" pos:end="59:27"><expr pos:start="59:22" pos:end="59:27"><operator pos:start="59:22" pos:end="59:22">&amp;</operator><name pos:start="59:23" pos:end="59:27"><name pos:start="59:23" pos:end="59:23">s</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:27">pb</name></name></expr></argument>, <argument pos:start="59:30" pos:end="59:30"><expr pos:start="59:30" pos:end="59:30"><literal type="number" pos:start="59:30" pos:end="59:30">1</literal></expr></argument>, <argument pos:start="59:33" pos:end="59:49"><expr pos:start="59:33" pos:end="59:49"><name pos:start="59:33" pos:end="59:49"><name pos:start="59:33" pos:end="59:37">block</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:49">cpl_in_use</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="61:9" pos:end="103:9"><if pos:start="61:9" pos:end="103:9">if <condition pos:start="61:12" pos:end="61:30">(<expr pos:start="61:13" pos:end="61:29"><name pos:start="61:13" pos:end="61:29"><name pos:start="61:13" pos:end="61:17">block</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:29">cpl_in_use</name></name></expr>)</condition> <block pos:start="61:32" pos:end="103:9">{<block_content pos:start="63:13" pos:end="101:13">

            <decl_stmt pos:start="63:13" pos:end="63:35"><decl pos:start="63:13" pos:end="63:25"><type pos:start="63:13" pos:end="63:15"><name pos:start="63:13" pos:end="63:15">int</name></type> <name pos:start="63:17" pos:end="63:25">start_sub</name></decl>, <decl pos:start="63:28" pos:end="63:34"><type ref="prev" pos:start="63:13" pos:end="63:15"/><name pos:start="63:28" pos:end="63:34">end_sub</name></decl>;</decl_stmt>

            <if_stmt pos:start="65:13" pos:end="67:39"><if pos:start="65:13" pos:end="67:39">if <condition pos:start="65:16" pos:end="65:24">(<expr pos:start="65:17" pos:end="65:23"><name pos:start="65:17" pos:end="65:23"><name pos:start="65:17" pos:end="65:17">s</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:23">eac3</name></name></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:39"><block_content pos:start="67:17" pos:end="67:39">

                <expr_stmt pos:start="67:17" pos:end="67:39"><expr pos:start="67:17" pos:end="67:38"><call pos:start="67:17" pos:end="67:38"><name pos:start="67:17" pos:end="67:24">put_bits</name><argument_list pos:start="67:25" pos:end="67:38">(<argument pos:start="67:26" pos:end="67:31"><expr pos:start="67:26" pos:end="67:31"><operator pos:start="67:26" pos:end="67:26">&amp;</operator><name pos:start="67:27" pos:end="67:31"><name pos:start="67:27" pos:end="67:27">s</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:31">pb</name></name></expr></argument>, <argument pos:start="67:34" pos:end="67:34"><expr pos:start="67:34" pos:end="67:34"><literal type="number" pos:start="67:34" pos:end="67:34">1</literal></expr></argument>, <argument pos:start="67:37" pos:end="67:37"><expr pos:start="67:37" pos:end="67:37"><literal type="number" pos:start="67:37" pos:end="67:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="67:41" pos:end="67:63">/* enhanced coupling */</comment>

            <if_stmt pos:start="69:13" pos:end="75:13"><if pos:start="69:13" pos:end="75:13">if <condition pos:start="69:16" pos:end="69:65">(<expr pos:start="69:17" pos:end="69:64"><operator pos:start="69:17" pos:end="69:17">!</operator><name pos:start="69:18" pos:end="69:24"><name pos:start="69:18" pos:end="69:18">s</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:24">eac3</name></name> <operator pos:start="69:26" pos:end="69:27">||</operator> <name pos:start="69:29" pos:end="69:43"><name pos:start="69:29" pos:end="69:29">s</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:43">channel_mode</name></name> <operator pos:start="69:45" pos:end="69:46">!=</operator> <name pos:start="69:48" pos:end="69:64">AC3_CHMODE_STEREO</name></expr>)</condition> <block pos:start="69:67" pos:end="75:13">{<block_content pos:start="71:17" pos:end="73:67">

                <for pos:start="71:17" pos:end="73:67">for <control pos:start="71:21" pos:end="71:57">(<init pos:start="71:22" pos:end="71:28"><expr pos:start="71:22" pos:end="71:27"><name pos:start="71:22" pos:end="71:23">ch</name> <operator pos:start="71:25" pos:end="71:25">=</operator> <literal type="number" pos:start="71:27" pos:end="71:27">1</literal></expr>;</init> <condition pos:start="71:30" pos:end="71:51"><expr pos:start="71:30" pos:end="71:50"><name pos:start="71:30" pos:end="71:31">ch</name> <operator pos:start="71:33" pos:end="71:34">&lt;=</operator> <name pos:start="71:36" pos:end="71:50"><name pos:start="71:36" pos:end="71:36">s</name><operator pos:start="71:37" pos:end="71:38">-&gt;</operator><name pos:start="71:39" pos:end="71:50">fbw_channels</name></name></expr>;</condition> <incr pos:start="71:53" pos:end="71:56"><expr pos:start="71:53" pos:end="71:56"><name pos:start="71:53" pos:end="71:54">ch</name><operator pos:start="71:55" pos:end="71:56">++</operator></expr></incr>)</control><block type="pseudo" pos:start="73:21" pos:end="73:67"><block_content pos:start="73:21" pos:end="73:67">

                    <expr_stmt pos:start="73:21" pos:end="73:67"><expr pos:start="73:21" pos:end="73:66"><call pos:start="73:21" pos:end="73:66"><name pos:start="73:21" pos:end="73:28">put_bits</name><argument_list pos:start="73:29" pos:end="73:66">(<argument pos:start="73:30" pos:end="73:35"><expr pos:start="73:30" pos:end="73:35"><operator pos:start="73:30" pos:end="73:30">&amp;</operator><name pos:start="73:31" pos:end="73:35"><name pos:start="73:31" pos:end="73:31">s</name><operator pos:start="73:32" pos:end="73:33">-&gt;</operator><name pos:start="73:34" pos:end="73:35">pb</name></name></expr></argument>, <argument pos:start="73:38" pos:end="73:38"><expr pos:start="73:38" pos:end="73:38"><literal type="number" pos:start="73:38" pos:end="73:38">1</literal></expr></argument>, <argument pos:start="73:41" pos:end="73:65"><expr pos:start="73:41" pos:end="73:65"><name pos:start="73:41" pos:end="73:65"><name pos:start="73:41" pos:end="73:45">block</name><operator pos:start="73:46" pos:end="73:47">-&gt;</operator><name pos:start="73:48" pos:end="73:61">channel_in_cpl</name><index pos:start="73:62" pos:end="73:65">[<expr pos:start="73:63" pos:end="73:64"><name pos:start="73:63" pos:end="73:64">ch</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="77:13" pos:end="79:39"><if pos:start="77:13" pos:end="79:39">if <condition pos:start="77:16" pos:end="77:53">(<expr pos:start="77:17" pos:end="77:52"><name pos:start="77:17" pos:end="77:31"><name pos:start="77:17" pos:end="77:17">s</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:31">channel_mode</name></name> <operator pos:start="77:33" pos:end="77:34">==</operator> <name pos:start="77:36" pos:end="77:52">AC3_CHMODE_STEREO</name></expr>)</condition><block type="pseudo" pos:start="79:17" pos:end="79:39"><block_content pos:start="79:17" pos:end="79:39">

                <expr_stmt pos:start="79:17" pos:end="79:39"><expr pos:start="79:17" pos:end="79:38"><call pos:start="79:17" pos:end="79:38"><name pos:start="79:17" pos:end="79:24">put_bits</name><argument_list pos:start="79:25" pos:end="79:38">(<argument pos:start="79:26" pos:end="79:31"><expr pos:start="79:26" pos:end="79:31"><operator pos:start="79:26" pos:end="79:26">&amp;</operator><name pos:start="79:27" pos:end="79:31"><name pos:start="79:27" pos:end="79:27">s</name><operator pos:start="79:28" pos:end="79:29">-&gt;</operator><name pos:start="79:30" pos:end="79:31">pb</name></name></expr></argument>, <argument pos:start="79:34" pos:end="79:34"><expr pos:start="79:34" pos:end="79:34"><literal type="number" pos:start="79:34" pos:end="79:34">1</literal></expr></argument>, <argument pos:start="79:37" pos:end="79:37"><expr pos:start="79:37" pos:end="79:37"><literal type="number" pos:start="79:37" pos:end="79:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="79:41" pos:end="79:64">/* phase flags in use */</comment>

            <expr_stmt pos:start="81:13" pos:end="81:58"><expr pos:start="81:13" pos:end="81:57"><name pos:start="81:13" pos:end="81:21">start_sub</name> <operator pos:start="81:23" pos:end="81:23">=</operator> <operator pos:start="81:25" pos:end="81:25">(</operator><name pos:start="81:26" pos:end="81:46"><name pos:start="81:26" pos:end="81:26">s</name><operator pos:start="81:27" pos:end="81:28">-&gt;</operator><name pos:start="81:29" pos:end="81:38">start_freq</name><index pos:start="81:39" pos:end="81:46">[<expr pos:start="81:40" pos:end="81:45"><name pos:start="81:40" pos:end="81:45">CPL_CH</name></expr>]</index></name> <operator pos:start="81:48" pos:end="81:48">-</operator> <literal type="number" pos:start="81:50" pos:end="81:51">37</literal><operator pos:start="81:52" pos:end="81:52">)</operator> <operator pos:start="81:54" pos:end="81:54">/</operator> <literal type="number" pos:start="81:56" pos:end="81:57">12</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:58"><expr pos:start="83:13" pos:end="83:57"><name pos:start="83:13" pos:end="83:19">end_sub</name>   <operator pos:start="83:23" pos:end="83:23">=</operator> <operator pos:start="83:25" pos:end="83:25">(</operator><name pos:start="83:26" pos:end="83:40"><name pos:start="83:26" pos:end="83:26">s</name><operator pos:start="83:27" pos:end="83:28">-&gt;</operator><name pos:start="83:29" pos:end="83:40">cpl_end_freq</name></name>       <operator pos:start="83:48" pos:end="83:48">-</operator> <literal type="number" pos:start="83:50" pos:end="83:51">37</literal><operator pos:start="83:52" pos:end="83:52">)</operator> <operator pos:start="83:54" pos:end="83:54">/</operator> <literal type="number" pos:start="83:56" pos:end="83:57">12</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:43"><expr pos:start="85:13" pos:end="85:42"><call pos:start="85:13" pos:end="85:42"><name pos:start="85:13" pos:end="85:20">put_bits</name><argument_list pos:start="85:21" pos:end="85:42">(<argument pos:start="85:22" pos:end="85:27"><expr pos:start="85:22" pos:end="85:27"><operator pos:start="85:22" pos:end="85:22">&amp;</operator><name pos:start="85:23" pos:end="85:27"><name pos:start="85:23" pos:end="85:23">s</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:27">pb</name></name></expr></argument>, <argument pos:start="85:30" pos:end="85:30"><expr pos:start="85:30" pos:end="85:30"><literal type="number" pos:start="85:30" pos:end="85:30">4</literal></expr></argument>, <argument pos:start="85:33" pos:end="85:41"><expr pos:start="85:33" pos:end="85:41"><name pos:start="85:33" pos:end="85:41">start_sub</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:45"><expr pos:start="87:13" pos:end="87:44"><call pos:start="87:13" pos:end="87:44"><name pos:start="87:13" pos:end="87:20">put_bits</name><argument_list pos:start="87:21" pos:end="87:44">(<argument pos:start="87:22" pos:end="87:27"><expr pos:start="87:22" pos:end="87:27"><operator pos:start="87:22" pos:end="87:22">&amp;</operator><name pos:start="87:23" pos:end="87:27"><name pos:start="87:23" pos:end="87:23">s</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:27">pb</name></name></expr></argument>, <argument pos:start="87:30" pos:end="87:30"><expr pos:start="87:30" pos:end="87:30"><literal type="number" pos:start="87:30" pos:end="87:30">4</literal></expr></argument>, <argument pos:start="87:33" pos:end="87:43"><expr pos:start="87:33" pos:end="87:43"><name pos:start="87:33" pos:end="87:39">end_sub</name> <operator pos:start="87:41" pos:end="87:41">-</operator> <literal type="number" pos:start="87:43" pos:end="87:43">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="89:13" pos:end="89:41">/* coupling band structure */</comment>

            <if_stmt pos:start="91:13" pos:end="101:13"><if pos:start="91:13" pos:end="95:13">if <condition pos:start="91:16" pos:end="91:24">(<expr pos:start="91:17" pos:end="91:23"><name pos:start="91:17" pos:end="91:23"><name pos:start="91:17" pos:end="91:17">s</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:23">eac3</name></name></expr>)</condition> <block pos:start="91:26" pos:end="95:13">{<block_content pos:start="93:17" pos:end="93:39">

                <expr_stmt pos:start="93:17" pos:end="93:39"><expr pos:start="93:17" pos:end="93:38"><call pos:start="93:17" pos:end="93:38"><name pos:start="93:17" pos:end="93:24">put_bits</name><argument_list pos:start="93:25" pos:end="93:38">(<argument pos:start="93:26" pos:end="93:31"><expr pos:start="93:26" pos:end="93:31"><operator pos:start="93:26" pos:end="93:26">&amp;</operator><name pos:start="93:27" pos:end="93:31"><name pos:start="93:27" pos:end="93:27">s</name><operator pos:start="93:28" pos:end="93:29">-&gt;</operator><name pos:start="93:30" pos:end="93:31">pb</name></name></expr></argument>, <argument pos:start="93:34" pos:end="93:34"><expr pos:start="93:34" pos:end="93:34"><literal type="number" pos:start="93:34" pos:end="93:34">1</literal></expr></argument>, <argument pos:start="93:37" pos:end="93:37"><expr pos:start="93:37" pos:end="93:37"><literal type="number" pos:start="93:37" pos:end="93:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="93:41" pos:end="93:57">/* use default */</comment>

            </block_content>}</block></if> <else pos:start="95:15" pos:end="101:13">else <block pos:start="95:20" pos:end="101:13">{<block_content pos:start="97:17" pos:end="99:78">

                <for pos:start="97:17" pos:end="99:78">for <control pos:start="97:21" pos:end="97:61">(<init pos:start="97:22" pos:end="97:39"><expr pos:start="97:22" pos:end="97:38"><name pos:start="97:22" pos:end="97:24">bnd</name> <operator pos:start="97:26" pos:end="97:26">=</operator> <name pos:start="97:28" pos:end="97:36">start_sub</name><operator pos:start="97:37" pos:end="97:37">+</operator><literal type="number" pos:start="97:38" pos:end="97:38">1</literal></expr>;</init> <condition pos:start="97:41" pos:end="97:54"><expr pos:start="97:41" pos:end="97:53"><name pos:start="97:41" pos:end="97:43">bnd</name> <operator pos:start="97:45" pos:end="97:45">&lt;</operator> <name pos:start="97:47" pos:end="97:53">end_sub</name></expr>;</condition> <incr pos:start="97:56" pos:end="97:60"><expr pos:start="97:56" pos:end="97:60"><name pos:start="97:56" pos:end="97:58">bnd</name><operator pos:start="97:59" pos:end="97:60">++</operator></expr></incr>)</control><block type="pseudo" pos:start="99:21" pos:end="99:78"><block_content pos:start="99:21" pos:end="99:78">

                    <expr_stmt pos:start="99:21" pos:end="99:78"><expr pos:start="99:21" pos:end="99:77"><call pos:start="99:21" pos:end="99:77"><name pos:start="99:21" pos:end="99:28">put_bits</name><argument_list pos:start="99:29" pos:end="99:77">(<argument pos:start="99:30" pos:end="99:35"><expr pos:start="99:30" pos:end="99:35"><operator pos:start="99:30" pos:end="99:30">&amp;</operator><name pos:start="99:31" pos:end="99:35"><name pos:start="99:31" pos:end="99:31">s</name><operator pos:start="99:32" pos:end="99:33">-&gt;</operator><name pos:start="99:34" pos:end="99:35">pb</name></name></expr></argument>, <argument pos:start="99:38" pos:end="99:38"><expr pos:start="99:38" pos:end="99:38"><literal type="number" pos:start="99:38" pos:end="99:38">1</literal></expr></argument>, <argument pos:start="99:41" pos:end="99:76"><expr pos:start="99:41" pos:end="99:76"><name pos:start="99:41" pos:end="99:76"><name pos:start="99:41" pos:end="99:71">ff_eac3_default_cpl_band_struct</name><index pos:start="99:72" pos:end="99:76">[<expr pos:start="99:73" pos:end="99:75"><name pos:start="99:73" pos:end="99:75">bnd</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="109:5" pos:end="109:30">/* coupling coordinates */</comment>

    <if_stmt pos:start="111:5" pos:end="139:5"><if pos:start="111:5" pos:end="139:5">if <condition pos:start="111:8" pos:end="111:26">(<expr pos:start="111:9" pos:end="111:25"><name pos:start="111:9" pos:end="111:25"><name pos:start="111:9" pos:end="111:13">block</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:25">cpl_in_use</name></name></expr>)</condition> <block pos:start="111:28" pos:end="139:5">{<block_content pos:start="113:9" pos:end="137:9">

        <for pos:start="113:9" pos:end="137:9">for <control pos:start="113:13" pos:end="113:49">(<init pos:start="113:14" pos:end="113:20"><expr pos:start="113:14" pos:end="113:19"><name pos:start="113:14" pos:end="113:15">ch</name> <operator pos:start="113:17" pos:end="113:17">=</operator> <literal type="number" pos:start="113:19" pos:end="113:19">1</literal></expr>;</init> <condition pos:start="113:22" pos:end="113:43"><expr pos:start="113:22" pos:end="113:42"><name pos:start="113:22" pos:end="113:23">ch</name> <operator pos:start="113:25" pos:end="113:26">&lt;=</operator> <name pos:start="113:28" pos:end="113:42"><name pos:start="113:28" pos:end="113:28">s</name><operator pos:start="113:29" pos:end="113:30">-&gt;</operator><name pos:start="113:31" pos:end="113:42">fbw_channels</name></name></expr>;</condition> <incr pos:start="113:45" pos:end="113:48"><expr pos:start="113:45" pos:end="113:48"><name pos:start="113:45" pos:end="113:46">ch</name><operator pos:start="113:47" pos:end="113:48">++</operator></expr></incr>)</control> <block pos:start="113:51" pos:end="137:9">{<block_content pos:start="115:13" pos:end="135:13">

            <if_stmt pos:start="115:13" pos:end="135:13"><if pos:start="115:13" pos:end="135:13">if <condition pos:start="115:16" pos:end="115:42">(<expr pos:start="115:17" pos:end="115:41"><name pos:start="115:17" pos:end="115:41"><name pos:start="115:17" pos:end="115:21">block</name><operator pos:start="115:22" pos:end="115:23">-&gt;</operator><name pos:start="115:24" pos:end="115:37">channel_in_cpl</name><index pos:start="115:38" pos:end="115:41">[<expr pos:start="115:39" pos:end="115:40"><name pos:start="115:39" pos:end="115:40">ch</name></expr>]</index></name></expr>)</condition> <block pos:start="115:44" pos:end="135:13">{<block_content pos:start="117:17" pos:end="133:17">

                <if_stmt pos:start="117:17" pos:end="119:67"><if pos:start="117:17" pos:end="119:67">if <condition pos:start="117:20" pos:end="117:63">(<expr pos:start="117:21" pos:end="117:62"><operator pos:start="117:21" pos:end="117:21">!</operator><name pos:start="117:22" pos:end="117:28"><name pos:start="117:22" pos:end="117:22">s</name><operator pos:start="117:23" pos:end="117:24">-&gt;</operator><name pos:start="117:25" pos:end="117:28">eac3</name></name> <operator pos:start="117:30" pos:end="117:31">||</operator> <name pos:start="117:33" pos:end="117:57"><name pos:start="117:33" pos:end="117:37">block</name><operator pos:start="117:38" pos:end="117:39">-&gt;</operator><name pos:start="117:40" pos:end="117:53">new_cpl_coords</name><index pos:start="117:54" pos:end="117:57">[<expr pos:start="117:55" pos:end="117:56"><name pos:start="117:55" pos:end="117:56">ch</name></expr>]</index></name> <operator pos:start="117:59" pos:end="117:60">!=</operator> <literal type="number" pos:start="117:62" pos:end="117:62">2</literal></expr>)</condition><block type="pseudo" pos:start="119:21" pos:end="119:67"><block_content pos:start="119:21" pos:end="119:67">

                    <expr_stmt pos:start="119:21" pos:end="119:67"><expr pos:start="119:21" pos:end="119:66"><call pos:start="119:21" pos:end="119:66"><name pos:start="119:21" pos:end="119:28">put_bits</name><argument_list pos:start="119:29" pos:end="119:66">(<argument pos:start="119:30" pos:end="119:35"><expr pos:start="119:30" pos:end="119:35"><operator pos:start="119:30" pos:end="119:30">&amp;</operator><name pos:start="119:31" pos:end="119:35"><name pos:start="119:31" pos:end="119:31">s</name><operator pos:start="119:32" pos:end="119:33">-&gt;</operator><name pos:start="119:34" pos:end="119:35">pb</name></name></expr></argument>, <argument pos:start="119:38" pos:end="119:38"><expr pos:start="119:38" pos:end="119:38"><literal type="number" pos:start="119:38" pos:end="119:38">1</literal></expr></argument>, <argument pos:start="119:41" pos:end="119:65"><expr pos:start="119:41" pos:end="119:65"><name pos:start="119:41" pos:end="119:65"><name pos:start="119:41" pos:end="119:45">block</name><operator pos:start="119:46" pos:end="119:47">-&gt;</operator><name pos:start="119:48" pos:end="119:61">new_cpl_coords</name><index pos:start="119:62" pos:end="119:65">[<expr pos:start="119:63" pos:end="119:64"><name pos:start="119:63" pos:end="119:64">ch</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="121:17" pos:end="133:17"><if pos:start="121:17" pos:end="133:17">if <condition pos:start="121:20" pos:end="121:46">(<expr pos:start="121:21" pos:end="121:45"><name pos:start="121:21" pos:end="121:45"><name pos:start="121:21" pos:end="121:25">block</name><operator pos:start="121:26" pos:end="121:27">-&gt;</operator><name pos:start="121:28" pos:end="121:41">new_cpl_coords</name><index pos:start="121:42" pos:end="121:45">[<expr pos:start="121:43" pos:end="121:44"><name pos:start="121:43" pos:end="121:44">ch</name></expr>]</index></name></expr>)</condition> <block pos:start="121:48" pos:end="133:17">{<block_content pos:start="123:21" pos:end="131:21">

                    <expr_stmt pos:start="123:21" pos:end="123:67"><expr pos:start="123:21" pos:end="123:66"><call pos:start="123:21" pos:end="123:66"><name pos:start="123:21" pos:end="123:28">put_bits</name><argument_list pos:start="123:29" pos:end="123:66">(<argument pos:start="123:30" pos:end="123:35"><expr pos:start="123:30" pos:end="123:35"><operator pos:start="123:30" pos:end="123:30">&amp;</operator><name pos:start="123:31" pos:end="123:35"><name pos:start="123:31" pos:end="123:31">s</name><operator pos:start="123:32" pos:end="123:33">-&gt;</operator><name pos:start="123:34" pos:end="123:35">pb</name></name></expr></argument>, <argument pos:start="123:38" pos:end="123:38"><expr pos:start="123:38" pos:end="123:38"><literal type="number" pos:start="123:38" pos:end="123:38">2</literal></expr></argument>, <argument pos:start="123:41" pos:end="123:65"><expr pos:start="123:41" pos:end="123:65"><name pos:start="123:41" pos:end="123:65"><name pos:start="123:41" pos:end="123:45">block</name><operator pos:start="123:46" pos:end="123:47">-&gt;</operator><name pos:start="123:48" pos:end="123:61">cpl_master_exp</name><index pos:start="123:62" pos:end="123:65">[<expr pos:start="123:63" pos:end="123:64"><name pos:start="123:63" pos:end="123:64">ch</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <for pos:start="125:21" pos:end="131:21">for <control pos:start="125:25" pos:end="125:64">(<init pos:start="125:26" pos:end="125:33"><expr pos:start="125:26" pos:end="125:32"><name pos:start="125:26" pos:end="125:28">bnd</name> <operator pos:start="125:30" pos:end="125:30">=</operator> <literal type="number" pos:start="125:32" pos:end="125:32">0</literal></expr>;</init> <condition pos:start="125:35" pos:end="125:57"><expr pos:start="125:35" pos:end="125:56"><name pos:start="125:35" pos:end="125:37">bnd</name> <operator pos:start="125:39" pos:end="125:39">&lt;</operator> <name pos:start="125:41" pos:end="125:56"><name pos:start="125:41" pos:end="125:41">s</name><operator pos:start="125:42" pos:end="125:43">-&gt;</operator><name pos:start="125:44" pos:end="125:56">num_cpl_bands</name></name></expr>;</condition> <incr pos:start="125:59" pos:end="125:63"><expr pos:start="125:59" pos:end="125:63"><name pos:start="125:59" pos:end="125:61">bnd</name><operator pos:start="125:62" pos:end="125:63">++</operator></expr></incr>)</control> <block pos:start="125:66" pos:end="131:21">{<block_content pos:start="127:25" pos:end="129:76">

                        <expr_stmt pos:start="127:25" pos:end="127:76"><expr pos:start="127:25" pos:end="127:75"><call pos:start="127:25" pos:end="127:75"><name pos:start="127:25" pos:end="127:32">put_bits</name><argument_list pos:start="127:33" pos:end="127:75">(<argument pos:start="127:34" pos:end="127:39"><expr pos:start="127:34" pos:end="127:39"><operator pos:start="127:34" pos:end="127:34">&amp;</operator><name pos:start="127:35" pos:end="127:39"><name pos:start="127:35" pos:end="127:35">s</name><operator pos:start="127:36" pos:end="127:37">-&gt;</operator><name pos:start="127:38" pos:end="127:39">pb</name></name></expr></argument>, <argument pos:start="127:42" pos:end="127:42"><expr pos:start="127:42" pos:end="127:42"><literal type="number" pos:start="127:42" pos:end="127:42">4</literal></expr></argument>, <argument pos:start="127:45" pos:end="127:74"><expr pos:start="127:45" pos:end="127:74"><name pos:start="127:45" pos:end="127:74"><name pos:start="127:45" pos:end="127:49">block</name><operator pos:start="127:50" pos:end="127:51">-&gt;</operator><name pos:start="127:52" pos:end="127:64">cpl_coord_exp</name> <index pos:start="127:66" pos:end="127:69">[<expr pos:start="127:67" pos:end="127:68"><name pos:start="127:67" pos:end="127:68">ch</name></expr>]</index><index pos:start="127:70" pos:end="127:74">[<expr pos:start="127:71" pos:end="127:73"><name pos:start="127:71" pos:end="127:73">bnd</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="129:25" pos:end="129:76"><expr pos:start="129:25" pos:end="129:75"><call pos:start="129:25" pos:end="129:75"><name pos:start="129:25" pos:end="129:32">put_bits</name><argument_list pos:start="129:33" pos:end="129:75">(<argument pos:start="129:34" pos:end="129:39"><expr pos:start="129:34" pos:end="129:39"><operator pos:start="129:34" pos:end="129:34">&amp;</operator><name pos:start="129:35" pos:end="129:39"><name pos:start="129:35" pos:end="129:35">s</name><operator pos:start="129:36" pos:end="129:37">-&gt;</operator><name pos:start="129:38" pos:end="129:39">pb</name></name></expr></argument>, <argument pos:start="129:42" pos:end="129:42"><expr pos:start="129:42" pos:end="129:42"><literal type="number" pos:start="129:42" pos:end="129:42">4</literal></expr></argument>, <argument pos:start="129:45" pos:end="129:74"><expr pos:start="129:45" pos:end="129:74"><name pos:start="129:45" pos:end="129:74"><name pos:start="129:45" pos:end="129:49">block</name><operator pos:start="129:50" pos:end="129:51">-&gt;</operator><name pos:start="129:52" pos:end="129:65">cpl_coord_mant</name><index pos:start="129:66" pos:end="129:69">[<expr pos:start="129:67" pos:end="129:68"><name pos:start="129:67" pos:end="129:68">ch</name></expr>]</index><index pos:start="129:70" pos:end="129:74">[<expr pos:start="129:71" pos:end="129:73"><name pos:start="129:71" pos:end="129:73">bnd</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="143:5" pos:end="143:28">/* stereo rematrixing */</comment>

    <if_stmt pos:start="145:5" pos:end="161:5"><if pos:start="145:5" pos:end="161:5">if <condition pos:start="145:8" pos:end="145:45">(<expr pos:start="145:9" pos:end="145:44"><name pos:start="145:9" pos:end="145:23"><name pos:start="145:9" pos:end="145:9">s</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:23">channel_mode</name></name> <operator pos:start="145:25" pos:end="145:26">==</operator> <name pos:start="145:28" pos:end="145:44">AC3_CHMODE_STEREO</name></expr>)</condition> <block pos:start="145:47" pos:end="161:5">{<block_content pos:start="147:9" pos:end="159:9">

        <if_stmt pos:start="147:9" pos:end="149:65"><if pos:start="147:9" pos:end="149:65">if <condition pos:start="147:12" pos:end="147:32">(<expr pos:start="147:13" pos:end="147:31"><operator pos:start="147:13" pos:end="147:13">!</operator><name pos:start="147:14" pos:end="147:20"><name pos:start="147:14" pos:end="147:14">s</name><operator pos:start="147:15" pos:end="147:16">-&gt;</operator><name pos:start="147:17" pos:end="147:20">eac3</name></name> <operator pos:start="147:22" pos:end="147:23">||</operator> <name pos:start="147:25" pos:end="147:27">blk</name> <operator pos:start="147:29" pos:end="147:29">&gt;</operator> <literal type="number" pos:start="147:31" pos:end="147:31">0</literal></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:65"><block_content pos:start="149:13" pos:end="149:65">

            <expr_stmt pos:start="149:13" pos:end="149:65"><expr pos:start="149:13" pos:end="149:64"><call pos:start="149:13" pos:end="149:64"><name pos:start="149:13" pos:end="149:20">put_bits</name><argument_list pos:start="149:21" pos:end="149:64">(<argument pos:start="149:22" pos:end="149:27"><expr pos:start="149:22" pos:end="149:27"><operator pos:start="149:22" pos:end="149:22">&amp;</operator><name pos:start="149:23" pos:end="149:27"><name pos:start="149:23" pos:end="149:23">s</name><operator pos:start="149:24" pos:end="149:25">-&gt;</operator><name pos:start="149:26" pos:end="149:27">pb</name></name></expr></argument>, <argument pos:start="149:30" pos:end="149:30"><expr pos:start="149:30" pos:end="149:30"><literal type="number" pos:start="149:30" pos:end="149:30">1</literal></expr></argument>, <argument pos:start="149:33" pos:end="149:63"><expr pos:start="149:33" pos:end="149:63"><name pos:start="149:33" pos:end="149:63"><name pos:start="149:33" pos:end="149:37">block</name><operator pos:start="149:38" pos:end="149:39">-&gt;</operator><name pos:start="149:40" pos:end="149:63">new_rematrixing_strategy</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="151:9" pos:end="159:9"><if pos:start="151:9" pos:end="159:9">if <condition pos:start="151:12" pos:end="151:44">(<expr pos:start="151:13" pos:end="151:43"><name pos:start="151:13" pos:end="151:43"><name pos:start="151:13" pos:end="151:17">block</name><operator pos:start="151:18" pos:end="151:19">-&gt;</operator><name pos:start="151:20" pos:end="151:43">new_rematrixing_strategy</name></name></expr>)</condition> <block pos:start="151:46" pos:end="159:9">{<block_content pos:start="155:13" pos:end="157:67">

            <comment type="block" pos:start="153:13" pos:end="153:35">/* rematrixing flags */</comment>

            <for pos:start="155:13" pos:end="157:67">for <control pos:start="155:17" pos:end="155:68">(<init pos:start="155:18" pos:end="155:25"><expr pos:start="155:18" pos:end="155:24"><name pos:start="155:18" pos:end="155:20">bnd</name> <operator pos:start="155:22" pos:end="155:22">=</operator> <literal type="number" pos:start="155:24" pos:end="155:24">0</literal></expr>;</init> <condition pos:start="155:27" pos:end="155:61"><expr pos:start="155:27" pos:end="155:60"><name pos:start="155:27" pos:end="155:29">bnd</name> <operator pos:start="155:31" pos:end="155:31">&lt;</operator> <name pos:start="155:33" pos:end="155:60"><name pos:start="155:33" pos:end="155:37">block</name><operator pos:start="155:38" pos:end="155:39">-&gt;</operator><name pos:start="155:40" pos:end="155:60">num_rematrixing_bands</name></name></expr>;</condition> <incr pos:start="155:63" pos:end="155:67"><expr pos:start="155:63" pos:end="155:67"><name pos:start="155:63" pos:end="155:65">bnd</name><operator pos:start="155:66" pos:end="155:67">++</operator></expr></incr>)</control><block type="pseudo" pos:start="157:17" pos:end="157:67"><block_content pos:start="157:17" pos:end="157:67">

                <expr_stmt pos:start="157:17" pos:end="157:67"><expr pos:start="157:17" pos:end="157:66"><call pos:start="157:17" pos:end="157:66"><name pos:start="157:17" pos:end="157:24">put_bits</name><argument_list pos:start="157:25" pos:end="157:66">(<argument pos:start="157:26" pos:end="157:31"><expr pos:start="157:26" pos:end="157:31"><operator pos:start="157:26" pos:end="157:26">&amp;</operator><name pos:start="157:27" pos:end="157:31"><name pos:start="157:27" pos:end="157:27">s</name><operator pos:start="157:28" pos:end="157:29">-&gt;</operator><name pos:start="157:30" pos:end="157:31">pb</name></name></expr></argument>, <argument pos:start="157:34" pos:end="157:34"><expr pos:start="157:34" pos:end="157:34"><literal type="number" pos:start="157:34" pos:end="157:34">1</literal></expr></argument>, <argument pos:start="157:37" pos:end="157:65"><expr pos:start="157:37" pos:end="157:65"><name pos:start="157:37" pos:end="157:65"><name pos:start="157:37" pos:end="157:41">block</name><operator pos:start="157:42" pos:end="157:43">-&gt;</operator><name pos:start="157:44" pos:end="157:60">rematrixing_flags</name><index pos:start="157:61" pos:end="157:65">[<expr pos:start="157:62" pos:end="157:64"><name pos:start="157:62" pos:end="157:64">bnd</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="165:5" pos:end="165:27">/* exponent strategy */</comment>

    <if_stmt pos:start="167:5" pos:end="177:5"><if pos:start="167:5" pos:end="177:5">if <condition pos:start="167:8" pos:end="167:17">(<expr pos:start="167:9" pos:end="167:16"><operator pos:start="167:9" pos:end="167:9">!</operator><name pos:start="167:10" pos:end="167:16"><name pos:start="167:10" pos:end="167:10">s</name><operator pos:start="167:11" pos:end="167:12">-&gt;</operator><name pos:start="167:13" pos:end="167:16">eac3</name></name></expr>)</condition> <block pos:start="167:19" pos:end="177:5">{<block_content pos:start="169:9" pos:end="175:70">

        <for pos:start="169:9" pos:end="171:58">for <control pos:start="169:13" pos:end="169:66">(<init pos:start="169:14" pos:end="169:37"><expr pos:start="169:14" pos:end="169:36"><name pos:start="169:14" pos:end="169:15">ch</name> <operator pos:start="169:17" pos:end="169:17">=</operator> <operator pos:start="169:19" pos:end="169:19">!</operator><name pos:start="169:20" pos:end="169:36"><name pos:start="169:20" pos:end="169:24">block</name><operator pos:start="169:25" pos:end="169:26">-&gt;</operator><name pos:start="169:27" pos:end="169:36">cpl_in_use</name></name></expr>;</init> <condition pos:start="169:39" pos:end="169:60"><expr pos:start="169:39" pos:end="169:59"><name pos:start="169:39" pos:end="169:40">ch</name> <operator pos:start="169:42" pos:end="169:43">&lt;=</operator> <name pos:start="169:45" pos:end="169:59"><name pos:start="169:45" pos:end="169:45">s</name><operator pos:start="169:46" pos:end="169:47">-&gt;</operator><name pos:start="169:48" pos:end="169:59">fbw_channels</name></name></expr>;</condition> <incr pos:start="169:62" pos:end="169:65"><expr pos:start="169:62" pos:end="169:65"><name pos:start="169:62" pos:end="169:63">ch</name><operator pos:start="169:64" pos:end="169:65">++</operator></expr></incr>)</control><block type="pseudo" pos:start="171:13" pos:end="171:58"><block_content pos:start="171:13" pos:end="171:58">

            <expr_stmt pos:start="171:13" pos:end="171:58"><expr pos:start="171:13" pos:end="171:57"><call pos:start="171:13" pos:end="171:57"><name pos:start="171:13" pos:end="171:20">put_bits</name><argument_list pos:start="171:21" pos:end="171:57">(<argument pos:start="171:22" pos:end="171:27"><expr pos:start="171:22" pos:end="171:27"><operator pos:start="171:22" pos:end="171:22">&amp;</operator><name pos:start="171:23" pos:end="171:27"><name pos:start="171:23" pos:end="171:23">s</name><operator pos:start="171:24" pos:end="171:25">-&gt;</operator><name pos:start="171:26" pos:end="171:27">pb</name></name></expr></argument>, <argument pos:start="171:30" pos:end="171:30"><expr pos:start="171:30" pos:end="171:30"><literal type="number" pos:start="171:30" pos:end="171:30">2</literal></expr></argument>, <argument pos:start="171:33" pos:end="171:56"><expr pos:start="171:33" pos:end="171:56"><name pos:start="171:33" pos:end="171:56"><name pos:start="171:33" pos:end="171:33">s</name><operator pos:start="171:34" pos:end="171:35">-&gt;</operator><name pos:start="171:36" pos:end="171:47">exp_strategy</name><index pos:start="171:48" pos:end="171:51">[<expr pos:start="171:49" pos:end="171:50"><name pos:start="171:49" pos:end="171:50">ch</name></expr>]</index><index pos:start="171:52" pos:end="171:56">[<expr pos:start="171:53" pos:end="171:55"><name pos:start="171:53" pos:end="171:55">blk</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <if_stmt pos:start="173:9" pos:end="175:70"><if pos:start="173:9" pos:end="175:70">if <condition pos:start="173:12" pos:end="173:22">(<expr pos:start="173:13" pos:end="173:21"><name pos:start="173:13" pos:end="173:21"><name pos:start="173:13" pos:end="173:13">s</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:21">lfe_on</name></name></expr>)</condition><block type="pseudo" pos:start="175:13" pos:end="175:70"><block_content pos:start="175:13" pos:end="175:70">

            <expr_stmt pos:start="175:13" pos:end="175:70"><expr pos:start="175:13" pos:end="175:69"><call pos:start="175:13" pos:end="175:69"><name pos:start="175:13" pos:end="175:20">put_bits</name><argument_list pos:start="175:21" pos:end="175:69">(<argument pos:start="175:22" pos:end="175:27"><expr pos:start="175:22" pos:end="175:27"><operator pos:start="175:22" pos:end="175:22">&amp;</operator><name pos:start="175:23" pos:end="175:27"><name pos:start="175:23" pos:end="175:23">s</name><operator pos:start="175:24" pos:end="175:25">-&gt;</operator><name pos:start="175:26" pos:end="175:27">pb</name></name></expr></argument>, <argument pos:start="175:30" pos:end="175:30"><expr pos:start="175:30" pos:end="175:30"><literal type="number" pos:start="175:30" pos:end="175:30">1</literal></expr></argument>, <argument pos:start="175:33" pos:end="175:68"><expr pos:start="175:33" pos:end="175:68"><name pos:start="175:33" pos:end="175:68"><name pos:start="175:33" pos:end="175:33">s</name><operator pos:start="175:34" pos:end="175:35">-&gt;</operator><name pos:start="175:36" pos:end="175:47">exp_strategy</name><index pos:start="175:48" pos:end="175:63">[<expr pos:start="175:49" pos:end="175:62"><name pos:start="175:49" pos:end="175:62"><name pos:start="175:49" pos:end="175:49">s</name><operator pos:start="175:50" pos:end="175:51">-&gt;</operator><name pos:start="175:52" pos:end="175:62">lfe_channel</name></name></expr>]</index><index pos:start="175:64" pos:end="175:68">[<expr pos:start="175:65" pos:end="175:67"><name pos:start="175:65" pos:end="175:67">blk</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="181:5" pos:end="181:19">/* bandwidth */</comment>

    <for pos:start="183:5" pos:end="189:5">for <control pos:start="183:9" pos:end="183:45">(<init pos:start="183:10" pos:end="183:16"><expr pos:start="183:10" pos:end="183:15"><name pos:start="183:10" pos:end="183:11">ch</name> <operator pos:start="183:13" pos:end="183:13">=</operator> <literal type="number" pos:start="183:15" pos:end="183:15">1</literal></expr>;</init> <condition pos:start="183:18" pos:end="183:39"><expr pos:start="183:18" pos:end="183:38"><name pos:start="183:18" pos:end="183:19">ch</name> <operator pos:start="183:21" pos:end="183:22">&lt;=</operator> <name pos:start="183:24" pos:end="183:38"><name pos:start="183:24" pos:end="183:24">s</name><operator pos:start="183:25" pos:end="183:26">-&gt;</operator><name pos:start="183:27" pos:end="183:38">fbw_channels</name></name></expr>;</condition> <incr pos:start="183:41" pos:end="183:44"><expr pos:start="183:41" pos:end="183:44"><name pos:start="183:41" pos:end="183:42">ch</name><operator pos:start="183:43" pos:end="183:44">++</operator></expr></incr>)</control> <block pos:start="183:47" pos:end="189:5">{<block_content pos:start="185:9" pos:end="187:51">

        <if_stmt pos:start="185:9" pos:end="187:51"><if pos:start="185:9" pos:end="187:51">if <condition pos:start="185:12" pos:end="185:80">(<expr pos:start="185:13" pos:end="185:79"><name pos:start="185:13" pos:end="185:36"><name pos:start="185:13" pos:end="185:13">s</name><operator pos:start="185:14" pos:end="185:15">-&gt;</operator><name pos:start="185:16" pos:end="185:27">exp_strategy</name><index pos:start="185:28" pos:end="185:31">[<expr pos:start="185:29" pos:end="185:30"><name pos:start="185:29" pos:end="185:30">ch</name></expr>]</index><index pos:start="185:32" pos:end="185:36">[<expr pos:start="185:33" pos:end="185:35"><name pos:start="185:33" pos:end="185:35">blk</name></expr>]</index></name> <operator pos:start="185:38" pos:end="185:39">!=</operator> <name pos:start="185:41" pos:end="185:49">EXP_REUSE</name> <operator pos:start="185:51" pos:end="185:52">&amp;&amp;</operator> <operator pos:start="185:54" pos:end="185:54">!</operator><name pos:start="185:55" pos:end="185:79"><name pos:start="185:55" pos:end="185:59">block</name><operator pos:start="185:60" pos:end="185:61">-&gt;</operator><name pos:start="185:62" pos:end="185:75">channel_in_cpl</name><index pos:start="185:76" pos:end="185:79">[<expr pos:start="185:77" pos:end="185:78"><name pos:start="185:77" pos:end="185:78">ch</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="187:13" pos:end="187:51"><block_content pos:start="187:13" pos:end="187:51">

            <expr_stmt pos:start="187:13" pos:end="187:51"><expr pos:start="187:13" pos:end="187:50"><call pos:start="187:13" pos:end="187:50"><name pos:start="187:13" pos:end="187:20">put_bits</name><argument_list pos:start="187:21" pos:end="187:50">(<argument pos:start="187:22" pos:end="187:27"><expr pos:start="187:22" pos:end="187:27"><operator pos:start="187:22" pos:end="187:22">&amp;</operator><name pos:start="187:23" pos:end="187:27"><name pos:start="187:23" pos:end="187:23">s</name><operator pos:start="187:24" pos:end="187:25">-&gt;</operator><name pos:start="187:26" pos:end="187:27">pb</name></name></expr></argument>, <argument pos:start="187:30" pos:end="187:30"><expr pos:start="187:30" pos:end="187:30"><literal type="number" pos:start="187:30" pos:end="187:30">6</literal></expr></argument>, <argument pos:start="187:33" pos:end="187:49"><expr pos:start="187:33" pos:end="187:49"><name pos:start="187:33" pos:end="187:49"><name pos:start="187:33" pos:end="187:33">s</name><operator pos:start="187:34" pos:end="187:35">-&gt;</operator><name pos:start="187:36" pos:end="187:49">bandwidth_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="193:5" pos:end="193:19">/* exponents */</comment>

    <for pos:start="195:5" pos:end="231:5">for <control pos:start="195:9" pos:end="195:58">(<init pos:start="195:10" pos:end="195:33"><expr pos:start="195:10" pos:end="195:32"><name pos:start="195:10" pos:end="195:11">ch</name> <operator pos:start="195:13" pos:end="195:13">=</operator> <operator pos:start="195:15" pos:end="195:15">!</operator><name pos:start="195:16" pos:end="195:32"><name pos:start="195:16" pos:end="195:20">block</name><operator pos:start="195:21" pos:end="195:22">-&gt;</operator><name pos:start="195:23" pos:end="195:32">cpl_in_use</name></name></expr>;</init> <condition pos:start="195:35" pos:end="195:52"><expr pos:start="195:35" pos:end="195:51"><name pos:start="195:35" pos:end="195:36">ch</name> <operator pos:start="195:38" pos:end="195:39">&lt;=</operator> <name pos:start="195:41" pos:end="195:51"><name pos:start="195:41" pos:end="195:41">s</name><operator pos:start="195:42" pos:end="195:43">-&gt;</operator><name pos:start="195:44" pos:end="195:51">channels</name></name></expr>;</condition> <incr pos:start="195:54" pos:end="195:57"><expr pos:start="195:54" pos:end="195:57"><name pos:start="195:54" pos:end="195:55">ch</name><operator pos:start="195:56" pos:end="195:57">++</operator></expr></incr>)</control> <block pos:start="195:60" pos:end="231:5">{<block_content pos:start="197:9" pos:end="229:35">

        <decl_stmt pos:start="197:9" pos:end="197:22"><decl pos:start="197:9" pos:end="197:21"><type pos:start="197:9" pos:end="197:11"><name pos:start="197:9" pos:end="197:11">int</name></type> <name pos:start="197:13" pos:end="197:21">nb_groups</name></decl>;</decl_stmt>

        <decl_stmt pos:start="199:9" pos:end="199:33"><decl pos:start="199:9" pos:end="199:32"><type pos:start="199:9" pos:end="199:11"><name pos:start="199:9" pos:end="199:11">int</name></type> <name pos:start="199:13" pos:end="199:15">cpl</name> <init pos:start="199:17" pos:end="199:32">= <expr pos:start="199:19" pos:end="199:32"><operator pos:start="199:19" pos:end="199:19">(</operator><name pos:start="199:20" pos:end="199:21">ch</name> <operator pos:start="199:23" pos:end="199:24">==</operator> <name pos:start="199:26" pos:end="199:31">CPL_CH</name><operator pos:start="199:32" pos:end="199:32">)</operator></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="203:9" pos:end="205:21"><if pos:start="203:9" pos:end="205:21">if <condition pos:start="203:12" pos:end="203:50">(<expr pos:start="203:13" pos:end="203:49"><name pos:start="203:13" pos:end="203:36"><name pos:start="203:13" pos:end="203:13">s</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:27">exp_strategy</name><index pos:start="203:28" pos:end="203:31">[<expr pos:start="203:29" pos:end="203:30"><name pos:start="203:29" pos:end="203:30">ch</name></expr>]</index><index pos:start="203:32" pos:end="203:36">[<expr pos:start="203:33" pos:end="203:35"><name pos:start="203:33" pos:end="203:35">blk</name></expr>]</index></name> <operator pos:start="203:38" pos:end="203:39">==</operator> <name pos:start="203:41" pos:end="203:49">EXP_REUSE</name></expr>)</condition><block type="pseudo" pos:start="205:13" pos:end="205:21"><block_content pos:start="205:13" pos:end="205:21">

            <continue pos:start="205:13" pos:end="205:21">continue;</continue></block_content></block></if></if_stmt>



        <comment type="block" pos:start="209:9" pos:end="209:25">/* DC exponent */</comment>

        <expr_stmt pos:start="211:9" pos:end="211:62"><expr pos:start="211:9" pos:end="211:61"><call pos:start="211:9" pos:end="211:61"><name pos:start="211:9" pos:end="211:16">put_bits</name><argument_list pos:start="211:17" pos:end="211:61">(<argument pos:start="211:18" pos:end="211:23"><expr pos:start="211:18" pos:end="211:23"><operator pos:start="211:18" pos:end="211:18">&amp;</operator><name pos:start="211:19" pos:end="211:23"><name pos:start="211:19" pos:end="211:19">s</name><operator pos:start="211:20" pos:end="211:21">-&gt;</operator><name pos:start="211:22" pos:end="211:23">pb</name></name></expr></argument>, <argument pos:start="211:26" pos:end="211:26"><expr pos:start="211:26" pos:end="211:26"><literal type="number" pos:start="211:26" pos:end="211:26">4</literal></expr></argument>, <argument pos:start="211:29" pos:end="211:60"><expr pos:start="211:29" pos:end="211:60"><name pos:start="211:29" pos:end="211:53"><name pos:start="211:29" pos:end="211:33">block</name><operator pos:start="211:34" pos:end="211:35">-&gt;</operator><name pos:start="211:36" pos:end="211:46">grouped_exp</name><index pos:start="211:47" pos:end="211:50">[<expr pos:start="211:48" pos:end="211:49"><name pos:start="211:48" pos:end="211:49">ch</name></expr>]</index><index pos:start="211:51" pos:end="211:53">[<expr pos:start="211:52" pos:end="211:52"><literal type="number" pos:start="211:52" pos:end="211:52">0</literal></expr>]</index></name> <operator pos:start="211:55" pos:end="211:56">&gt;&gt;</operator> <name pos:start="211:58" pos:end="211:60">cpl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="215:9" pos:end="215:29">/* exponent groups */</comment>

        <expr_stmt pos:start="217:9" pos:end="217:111"><expr pos:start="217:9" pos:end="217:110"><name pos:start="217:9" pos:end="217:17">nb_groups</name> <operator pos:start="217:19" pos:end="217:19">=</operator> <name pos:start="217:21" pos:end="217:110"><name pos:start="217:21" pos:end="217:38">exponent_group_tab</name><index pos:start="217:39" pos:end="217:43">[<expr pos:start="217:40" pos:end="217:42"><name pos:start="217:40" pos:end="217:42">cpl</name></expr>]</index><index pos:start="217:44" pos:end="217:71">[<expr pos:start="217:45" pos:end="217:70"><name pos:start="217:45" pos:end="217:68"><name pos:start="217:45" pos:end="217:45">s</name><operator pos:start="217:46" pos:end="217:47">-&gt;</operator><name pos:start="217:48" pos:end="217:59">exp_strategy</name><index pos:start="217:60" pos:end="217:63">[<expr pos:start="217:61" pos:end="217:62"><name pos:start="217:61" pos:end="217:62">ch</name></expr>]</index><index pos:start="217:64" pos:end="217:68">[<expr pos:start="217:65" pos:end="217:67"><name pos:start="217:65" pos:end="217:67">blk</name></expr>]</index></name><operator pos:start="217:69" pos:end="217:69">-</operator><literal type="number" pos:start="217:70" pos:end="217:70">1</literal></expr>]</index><index pos:start="217:72" pos:end="217:110">[<expr pos:start="217:73" pos:end="217:109"><name pos:start="217:73" pos:end="217:91"><name pos:start="217:73" pos:end="217:77">block</name><operator pos:start="217:78" pos:end="217:79">-&gt;</operator><name pos:start="217:80" pos:end="217:87">end_freq</name><index pos:start="217:88" pos:end="217:91">[<expr pos:start="217:89" pos:end="217:90"><name pos:start="217:89" pos:end="217:90">ch</name></expr>]</index></name><operator pos:start="217:92" pos:end="217:92">-</operator><name pos:start="217:93" pos:end="217:109"><name pos:start="217:93" pos:end="217:93">s</name><operator pos:start="217:94" pos:end="217:95">-&gt;</operator><name pos:start="217:96" pos:end="217:105">start_freq</name><index pos:start="217:106" pos:end="217:109">[<expr pos:start="217:107" pos:end="217:108"><name pos:start="217:107" pos:end="217:108">ch</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="219:9" pos:end="221:59">for <control pos:start="219:13" pos:end="219:40">(<init pos:start="219:14" pos:end="219:19"><expr pos:start="219:14" pos:end="219:18"><name pos:start="219:14" pos:end="219:14">i</name> <operator pos:start="219:16" pos:end="219:16">=</operator> <literal type="number" pos:start="219:18" pos:end="219:18">1</literal></expr>;</init> <condition pos:start="219:21" pos:end="219:35"><expr pos:start="219:21" pos:end="219:34"><name pos:start="219:21" pos:end="219:21">i</name> <operator pos:start="219:23" pos:end="219:24">&lt;=</operator> <name pos:start="219:26" pos:end="219:34">nb_groups</name></expr>;</condition> <incr pos:start="219:37" pos:end="219:39"><expr pos:start="219:37" pos:end="219:39"><name pos:start="219:37" pos:end="219:37">i</name><operator pos:start="219:38" pos:end="219:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="221:13" pos:end="221:59"><block_content pos:start="221:13" pos:end="221:59">

            <expr_stmt pos:start="221:13" pos:end="221:59"><expr pos:start="221:13" pos:end="221:58"><call pos:start="221:13" pos:end="221:58"><name pos:start="221:13" pos:end="221:20">put_bits</name><argument_list pos:start="221:21" pos:end="221:58">(<argument pos:start="221:22" pos:end="221:27"><expr pos:start="221:22" pos:end="221:27"><operator pos:start="221:22" pos:end="221:22">&amp;</operator><name pos:start="221:23" pos:end="221:27"><name pos:start="221:23" pos:end="221:23">s</name><operator pos:start="221:24" pos:end="221:25">-&gt;</operator><name pos:start="221:26" pos:end="221:27">pb</name></name></expr></argument>, <argument pos:start="221:30" pos:end="221:30"><expr pos:start="221:30" pos:end="221:30"><literal type="number" pos:start="221:30" pos:end="221:30">7</literal></expr></argument>, <argument pos:start="221:33" pos:end="221:57"><expr pos:start="221:33" pos:end="221:57"><name pos:start="221:33" pos:end="221:57"><name pos:start="221:33" pos:end="221:37">block</name><operator pos:start="221:38" pos:end="221:39">-&gt;</operator><name pos:start="221:40" pos:end="221:50">grouped_exp</name><index pos:start="221:51" pos:end="221:54">[<expr pos:start="221:52" pos:end="221:53"><name pos:start="221:52" pos:end="221:53">ch</name></expr>]</index><index pos:start="221:55" pos:end="221:57">[<expr pos:start="221:56" pos:end="221:56"><name pos:start="221:56" pos:end="221:56">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <comment type="block" pos:start="225:9" pos:end="225:29">/* gain range info */</comment>

        <if_stmt pos:start="227:9" pos:end="229:35"><if pos:start="227:9" pos:end="229:35">if <condition pos:start="227:12" pos:end="227:41">(<expr pos:start="227:13" pos:end="227:40"><name pos:start="227:13" pos:end="227:14">ch</name> <operator pos:start="227:16" pos:end="227:17">!=</operator> <name pos:start="227:19" pos:end="227:32"><name pos:start="227:19" pos:end="227:19">s</name><operator pos:start="227:20" pos:end="227:21">-&gt;</operator><name pos:start="227:22" pos:end="227:32">lfe_channel</name></name> <operator pos:start="227:34" pos:end="227:35">&amp;&amp;</operator> <operator pos:start="227:37" pos:end="227:37">!</operator><name pos:start="227:38" pos:end="227:40">cpl</name></expr>)</condition><block type="pseudo" pos:start="229:13" pos:end="229:35"><block_content pos:start="229:13" pos:end="229:35">

            <expr_stmt pos:start="229:13" pos:end="229:35"><expr pos:start="229:13" pos:end="229:34"><call pos:start="229:13" pos:end="229:34"><name pos:start="229:13" pos:end="229:20">put_bits</name><argument_list pos:start="229:21" pos:end="229:34">(<argument pos:start="229:22" pos:end="229:27"><expr pos:start="229:22" pos:end="229:27"><operator pos:start="229:22" pos:end="229:22">&amp;</operator><name pos:start="229:23" pos:end="229:27"><name pos:start="229:23" pos:end="229:23">s</name><operator pos:start="229:24" pos:end="229:25">-&gt;</operator><name pos:start="229:26" pos:end="229:27">pb</name></name></expr></argument>, <argument pos:start="229:30" pos:end="229:30"><expr pos:start="229:30" pos:end="229:30"><literal type="number" pos:start="229:30" pos:end="229:30">2</literal></expr></argument>, <argument pos:start="229:33" pos:end="229:33"><expr pos:start="229:33" pos:end="229:33"><literal type="number" pos:start="229:33" pos:end="229:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="235:5" pos:end="235:29">/* bit allocation info */</comment>

    <if_stmt pos:start="237:5" pos:end="257:5"><if pos:start="237:5" pos:end="257:5">if <condition pos:start="237:8" pos:end="237:17">(<expr pos:start="237:9" pos:end="237:16"><operator pos:start="237:9" pos:end="237:9">!</operator><name pos:start="237:10" pos:end="237:16"><name pos:start="237:10" pos:end="237:10">s</name><operator pos:start="237:11" pos:end="237:12">-&gt;</operator><name pos:start="237:13" pos:end="237:16">eac3</name></name></expr>)</condition> <block pos:start="237:19" pos:end="257:5">{<block_content pos:start="239:9" pos:end="255:9">

        <expr_stmt pos:start="239:9" pos:end="239:26"><expr pos:start="239:9" pos:end="239:25"><name pos:start="239:9" pos:end="239:12">baie</name> <operator pos:start="239:14" pos:end="239:14">=</operator> <operator pos:start="239:16" pos:end="239:16">(</operator><name pos:start="239:17" pos:end="239:19">blk</name> <operator pos:start="239:21" pos:end="239:22">==</operator> <literal type="number" pos:start="239:24" pos:end="239:24">0</literal><operator pos:start="239:25" pos:end="239:25">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="241:9" pos:end="241:34"><expr pos:start="241:9" pos:end="241:33"><call pos:start="241:9" pos:end="241:33"><name pos:start="241:9" pos:end="241:16">put_bits</name><argument_list pos:start="241:17" pos:end="241:33">(<argument pos:start="241:18" pos:end="241:23"><expr pos:start="241:18" pos:end="241:23"><operator pos:start="241:18" pos:end="241:18">&amp;</operator><name pos:start="241:19" pos:end="241:23"><name pos:start="241:19" pos:end="241:19">s</name><operator pos:start="241:20" pos:end="241:21">-&gt;</operator><name pos:start="241:22" pos:end="241:23">pb</name></name></expr></argument>, <argument pos:start="241:26" pos:end="241:26"><expr pos:start="241:26" pos:end="241:26"><literal type="number" pos:start="241:26" pos:end="241:26">1</literal></expr></argument>, <argument pos:start="241:29" pos:end="241:32"><expr pos:start="241:29" pos:end="241:32"><name pos:start="241:29" pos:end="241:32">baie</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="243:9" pos:end="255:9"><if pos:start="243:9" pos:end="255:9">if <condition pos:start="243:12" pos:end="243:17">(<expr pos:start="243:13" pos:end="243:16"><name pos:start="243:13" pos:end="243:16">baie</name></expr>)</condition> <block pos:start="243:19" pos:end="255:9">{<block_content pos:start="245:13" pos:end="253:47">

            <expr_stmt pos:start="245:13" pos:end="245:52"><expr pos:start="245:13" pos:end="245:51"><call pos:start="245:13" pos:end="245:51"><name pos:start="245:13" pos:end="245:20">put_bits</name><argument_list pos:start="245:21" pos:end="245:51">(<argument pos:start="245:22" pos:end="245:27"><expr pos:start="245:22" pos:end="245:27"><operator pos:start="245:22" pos:end="245:22">&amp;</operator><name pos:start="245:23" pos:end="245:27"><name pos:start="245:23" pos:end="245:23">s</name><operator pos:start="245:24" pos:end="245:25">-&gt;</operator><name pos:start="245:26" pos:end="245:27">pb</name></name></expr></argument>, <argument pos:start="245:30" pos:end="245:30"><expr pos:start="245:30" pos:end="245:30"><literal type="number" pos:start="245:30" pos:end="245:30">2</literal></expr></argument>, <argument pos:start="245:33" pos:end="245:50"><expr pos:start="245:33" pos:end="245:50"><name pos:start="245:33" pos:end="245:50"><name pos:start="245:33" pos:end="245:33">s</name><operator pos:start="245:34" pos:end="245:35">-&gt;</operator><name pos:start="245:36" pos:end="245:50">slow_decay_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="247:13" pos:end="247:52"><expr pos:start="247:13" pos:end="247:51"><call pos:start="247:13" pos:end="247:51"><name pos:start="247:13" pos:end="247:20">put_bits</name><argument_list pos:start="247:21" pos:end="247:51">(<argument pos:start="247:22" pos:end="247:27"><expr pos:start="247:22" pos:end="247:27"><operator pos:start="247:22" pos:end="247:22">&amp;</operator><name pos:start="247:23" pos:end="247:27"><name pos:start="247:23" pos:end="247:23">s</name><operator pos:start="247:24" pos:end="247:25">-&gt;</operator><name pos:start="247:26" pos:end="247:27">pb</name></name></expr></argument>, <argument pos:start="247:30" pos:end="247:30"><expr pos:start="247:30" pos:end="247:30"><literal type="number" pos:start="247:30" pos:end="247:30">2</literal></expr></argument>, <argument pos:start="247:33" pos:end="247:50"><expr pos:start="247:33" pos:end="247:50"><name pos:start="247:33" pos:end="247:50"><name pos:start="247:33" pos:end="247:33">s</name><operator pos:start="247:34" pos:end="247:35">-&gt;</operator><name pos:start="247:36" pos:end="247:50">fast_decay_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:51"><expr pos:start="249:13" pos:end="249:50"><call pos:start="249:13" pos:end="249:50"><name pos:start="249:13" pos:end="249:20">put_bits</name><argument_list pos:start="249:21" pos:end="249:50">(<argument pos:start="249:22" pos:end="249:27"><expr pos:start="249:22" pos:end="249:27"><operator pos:start="249:22" pos:end="249:22">&amp;</operator><name pos:start="249:23" pos:end="249:27"><name pos:start="249:23" pos:end="249:23">s</name><operator pos:start="249:24" pos:end="249:25">-&gt;</operator><name pos:start="249:26" pos:end="249:27">pb</name></name></expr></argument>, <argument pos:start="249:30" pos:end="249:30"><expr pos:start="249:30" pos:end="249:30"><literal type="number" pos:start="249:30" pos:end="249:30">2</literal></expr></argument>, <argument pos:start="249:33" pos:end="249:49"><expr pos:start="249:33" pos:end="249:49"><name pos:start="249:33" pos:end="249:49"><name pos:start="249:33" pos:end="249:33">s</name><operator pos:start="249:34" pos:end="249:35">-&gt;</operator><name pos:start="249:36" pos:end="249:49">slow_gain_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:52"><expr pos:start="251:13" pos:end="251:51"><call pos:start="251:13" pos:end="251:51"><name pos:start="251:13" pos:end="251:20">put_bits</name><argument_list pos:start="251:21" pos:end="251:51">(<argument pos:start="251:22" pos:end="251:27"><expr pos:start="251:22" pos:end="251:27"><operator pos:start="251:22" pos:end="251:22">&amp;</operator><name pos:start="251:23" pos:end="251:27"><name pos:start="251:23" pos:end="251:23">s</name><operator pos:start="251:24" pos:end="251:25">-&gt;</operator><name pos:start="251:26" pos:end="251:27">pb</name></name></expr></argument>, <argument pos:start="251:30" pos:end="251:30"><expr pos:start="251:30" pos:end="251:30"><literal type="number" pos:start="251:30" pos:end="251:30">2</literal></expr></argument>, <argument pos:start="251:33" pos:end="251:50"><expr pos:start="251:33" pos:end="251:50"><name pos:start="251:33" pos:end="251:50"><name pos:start="251:33" pos:end="251:33">s</name><operator pos:start="251:34" pos:end="251:35">-&gt;</operator><name pos:start="251:36" pos:end="251:50">db_per_bit_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:47"><expr pos:start="253:13" pos:end="253:46"><call pos:start="253:13" pos:end="253:46"><name pos:start="253:13" pos:end="253:20">put_bits</name><argument_list pos:start="253:21" pos:end="253:46">(<argument pos:start="253:22" pos:end="253:27"><expr pos:start="253:22" pos:end="253:27"><operator pos:start="253:22" pos:end="253:22">&amp;</operator><name pos:start="253:23" pos:end="253:27"><name pos:start="253:23" pos:end="253:23">s</name><operator pos:start="253:24" pos:end="253:25">-&gt;</operator><name pos:start="253:26" pos:end="253:27">pb</name></name></expr></argument>, <argument pos:start="253:30" pos:end="253:30"><expr pos:start="253:30" pos:end="253:30"><literal type="number" pos:start="253:30" pos:end="253:30">3</literal></expr></argument>, <argument pos:start="253:33" pos:end="253:45"><expr pos:start="253:33" pos:end="253:45"><name pos:start="253:33" pos:end="253:45"><name pos:start="253:33" pos:end="253:33">s</name><operator pos:start="253:34" pos:end="253:35">-&gt;</operator><name pos:start="253:36" pos:end="253:45">floor_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="261:5" pos:end="261:20">/* snr offset */</comment>

    <if_stmt pos:start="263:5" pos:end="285:5"><if pos:start="263:5" pos:end="281:5">if <condition pos:start="263:8" pos:end="263:17">(<expr pos:start="263:9" pos:end="263:16"><operator pos:start="263:9" pos:end="263:9">!</operator><name pos:start="263:10" pos:end="263:16"><name pos:start="263:10" pos:end="263:10">s</name><operator pos:start="263:11" pos:end="263:12">-&gt;</operator><name pos:start="263:13" pos:end="263:16">eac3</name></name></expr>)</condition> <block pos:start="263:19" pos:end="281:5">{<block_content pos:start="265:9" pos:end="279:9">

        <expr_stmt pos:start="265:9" pos:end="265:52"><expr pos:start="265:9" pos:end="265:51"><call pos:start="265:9" pos:end="265:51"><name pos:start="265:9" pos:end="265:16">put_bits</name><argument_list pos:start="265:17" pos:end="265:51">(<argument pos:start="265:18" pos:end="265:23"><expr pos:start="265:18" pos:end="265:23"><operator pos:start="265:18" pos:end="265:18">&amp;</operator><name pos:start="265:19" pos:end="265:23"><name pos:start="265:19" pos:end="265:19">s</name><operator pos:start="265:20" pos:end="265:21">-&gt;</operator><name pos:start="265:22" pos:end="265:23">pb</name></name></expr></argument>, <argument pos:start="265:26" pos:end="265:26"><expr pos:start="265:26" pos:end="265:26"><literal type="number" pos:start="265:26" pos:end="265:26">1</literal></expr></argument>, <argument pos:start="265:29" pos:end="265:50"><expr pos:start="265:29" pos:end="265:50"><name pos:start="265:29" pos:end="265:50"><name pos:start="265:29" pos:end="265:33">block</name><operator pos:start="265:34" pos:end="265:35">-&gt;</operator><name pos:start="265:36" pos:end="265:50">new_snr_offsets</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="267:9" pos:end="279:9"><if pos:start="267:9" pos:end="279:9">if <condition pos:start="267:12" pos:end="267:35">(<expr pos:start="267:13" pos:end="267:34"><name pos:start="267:13" pos:end="267:34"><name pos:start="267:13" pos:end="267:17">block</name><operator pos:start="267:18" pos:end="267:19">-&gt;</operator><name pos:start="267:20" pos:end="267:34">new_snr_offsets</name></name></expr>)</condition> <block pos:start="267:37" pos:end="279:9">{<block_content pos:start="269:13" pos:end="277:13">

            <expr_stmt pos:start="269:13" pos:end="269:54"><expr pos:start="269:13" pos:end="269:53"><call pos:start="269:13" pos:end="269:53"><name pos:start="269:13" pos:end="269:20">put_bits</name><argument_list pos:start="269:21" pos:end="269:53">(<argument pos:start="269:22" pos:end="269:27"><expr pos:start="269:22" pos:end="269:27"><operator pos:start="269:22" pos:end="269:22">&amp;</operator><name pos:start="269:23" pos:end="269:27"><name pos:start="269:23" pos:end="269:23">s</name><operator pos:start="269:24" pos:end="269:25">-&gt;</operator><name pos:start="269:26" pos:end="269:27">pb</name></name></expr></argument>, <argument pos:start="269:30" pos:end="269:30"><expr pos:start="269:30" pos:end="269:30"><literal type="number" pos:start="269:30" pos:end="269:30">6</literal></expr></argument>, <argument pos:start="269:33" pos:end="269:52"><expr pos:start="269:33" pos:end="269:52"><name pos:start="269:33" pos:end="269:52"><name pos:start="269:33" pos:end="269:33">s</name><operator pos:start="269:34" pos:end="269:35">-&gt;</operator><name pos:start="269:36" pos:end="269:52">coarse_snr_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="271:13" pos:end="277:13">for <control pos:start="271:17" pos:end="271:66">(<init pos:start="271:18" pos:end="271:41"><expr pos:start="271:18" pos:end="271:40"><name pos:start="271:18" pos:end="271:19">ch</name> <operator pos:start="271:21" pos:end="271:21">=</operator> <operator pos:start="271:23" pos:end="271:23">!</operator><name pos:start="271:24" pos:end="271:40"><name pos:start="271:24" pos:end="271:28">block</name><operator pos:start="271:29" pos:end="271:30">-&gt;</operator><name pos:start="271:31" pos:end="271:40">cpl_in_use</name></name></expr>;</init> <condition pos:start="271:43" pos:end="271:60"><expr pos:start="271:43" pos:end="271:59"><name pos:start="271:43" pos:end="271:44">ch</name> <operator pos:start="271:46" pos:end="271:47">&lt;=</operator> <name pos:start="271:49" pos:end="271:59"><name pos:start="271:49" pos:end="271:49">s</name><operator pos:start="271:50" pos:end="271:51">-&gt;</operator><name pos:start="271:52" pos:end="271:59">channels</name></name></expr>;</condition> <incr pos:start="271:62" pos:end="271:65"><expr pos:start="271:62" pos:end="271:65"><name pos:start="271:62" pos:end="271:63">ch</name><operator pos:start="271:64" pos:end="271:65">++</operator></expr></incr>)</control> <block pos:start="271:68" pos:end="277:13">{<block_content pos:start="273:17" pos:end="275:59">

                <expr_stmt pos:start="273:17" pos:end="273:60"><expr pos:start="273:17" pos:end="273:59"><call pos:start="273:17" pos:end="273:59"><name pos:start="273:17" pos:end="273:24">put_bits</name><argument_list pos:start="273:25" pos:end="273:59">(<argument pos:start="273:26" pos:end="273:31"><expr pos:start="273:26" pos:end="273:31"><operator pos:start="273:26" pos:end="273:26">&amp;</operator><name pos:start="273:27" pos:end="273:31"><name pos:start="273:27" pos:end="273:27">s</name><operator pos:start="273:28" pos:end="273:29">-&gt;</operator><name pos:start="273:30" pos:end="273:31">pb</name></name></expr></argument>, <argument pos:start="273:34" pos:end="273:34"><expr pos:start="273:34" pos:end="273:34"><literal type="number" pos:start="273:34" pos:end="273:34">4</literal></expr></argument>, <argument pos:start="273:37" pos:end="273:58"><expr pos:start="273:37" pos:end="273:58"><name pos:start="273:37" pos:end="273:58"><name pos:start="273:37" pos:end="273:37">s</name><operator pos:start="273:38" pos:end="273:39">-&gt;</operator><name pos:start="273:40" pos:end="273:54">fine_snr_offset</name><index pos:start="273:55" pos:end="273:58">[<expr pos:start="273:56" pos:end="273:57"><name pos:start="273:56" pos:end="273:57">ch</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="275:17" pos:end="275:59"><expr pos:start="275:17" pos:end="275:58"><call pos:start="275:17" pos:end="275:58"><name pos:start="275:17" pos:end="275:24">put_bits</name><argument_list pos:start="275:25" pos:end="275:58">(<argument pos:start="275:26" pos:end="275:31"><expr pos:start="275:26" pos:end="275:31"><operator pos:start="275:26" pos:end="275:26">&amp;</operator><name pos:start="275:27" pos:end="275:31"><name pos:start="275:27" pos:end="275:27">s</name><operator pos:start="275:28" pos:end="275:29">-&gt;</operator><name pos:start="275:30" pos:end="275:31">pb</name></name></expr></argument>, <argument pos:start="275:34" pos:end="275:34"><expr pos:start="275:34" pos:end="275:34"><literal type="number" pos:start="275:34" pos:end="275:34">3</literal></expr></argument>, <argument pos:start="275:37" pos:end="275:57"><expr pos:start="275:37" pos:end="275:57"><name pos:start="275:37" pos:end="275:57"><name pos:start="275:37" pos:end="275:37">s</name><operator pos:start="275:38" pos:end="275:39">-&gt;</operator><name pos:start="275:40" pos:end="275:53">fast_gain_code</name><index pos:start="275:54" pos:end="275:57">[<expr pos:start="275:55" pos:end="275:56"><name pos:start="275:55" pos:end="275:56">ch</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="281:7" pos:end="285:5">else <block pos:start="281:12" pos:end="285:5">{<block_content pos:start="283:9" pos:end="283:31">

        <expr_stmt pos:start="283:9" pos:end="283:31"><expr pos:start="283:9" pos:end="283:30"><call pos:start="283:9" pos:end="283:30"><name pos:start="283:9" pos:end="283:16">put_bits</name><argument_list pos:start="283:17" pos:end="283:30">(<argument pos:start="283:18" pos:end="283:23"><expr pos:start="283:18" pos:end="283:23"><operator pos:start="283:18" pos:end="283:18">&amp;</operator><name pos:start="283:19" pos:end="283:23"><name pos:start="283:19" pos:end="283:19">s</name><operator pos:start="283:20" pos:end="283:21">-&gt;</operator><name pos:start="283:22" pos:end="283:23">pb</name></name></expr></argument>, <argument pos:start="283:26" pos:end="283:26"><expr pos:start="283:26" pos:end="283:26"><literal type="number" pos:start="283:26" pos:end="283:26">1</literal></expr></argument>, <argument pos:start="283:29" pos:end="283:29"><expr pos:start="283:29" pos:end="283:29"><literal type="number" pos:start="283:29" pos:end="283:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="283:33" pos:end="283:61">/* no converter snr offset */</comment>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="289:5" pos:end="289:23">/* coupling leak */</comment>

    <if_stmt pos:start="291:5" pos:end="305:5"><if pos:start="291:5" pos:end="305:5">if <condition pos:start="291:8" pos:end="291:26">(<expr pos:start="291:9" pos:end="291:25"><name pos:start="291:9" pos:end="291:25"><name pos:start="291:9" pos:end="291:13">block</name><operator pos:start="291:14" pos:end="291:15">-&gt;</operator><name pos:start="291:16" pos:end="291:25">cpl_in_use</name></name></expr>)</condition> <block pos:start="291:28" pos:end="305:5">{<block_content pos:start="293:9" pos:end="303:9">

        <if_stmt pos:start="293:9" pos:end="295:53"><if pos:start="293:9" pos:end="295:53">if <condition pos:start="293:12" pos:end="293:49">(<expr pos:start="293:13" pos:end="293:48"><operator pos:start="293:13" pos:end="293:13">!</operator><name pos:start="293:14" pos:end="293:20"><name pos:start="293:14" pos:end="293:14">s</name><operator pos:start="293:15" pos:end="293:16">-&gt;</operator><name pos:start="293:17" pos:end="293:20">eac3</name></name> <operator pos:start="293:22" pos:end="293:23">||</operator> <name pos:start="293:25" pos:end="293:43"><name pos:start="293:25" pos:end="293:29">block</name><operator pos:start="293:30" pos:end="293:31">-&gt;</operator><name pos:start="293:32" pos:end="293:43">new_cpl_leak</name></name> <operator pos:start="293:45" pos:end="293:46">!=</operator> <literal type="number" pos:start="293:48" pos:end="293:48">2</literal></expr>)</condition><block type="pseudo" pos:start="295:13" pos:end="295:53"><block_content pos:start="295:13" pos:end="295:53">

            <expr_stmt pos:start="295:13" pos:end="295:53"><expr pos:start="295:13" pos:end="295:52"><call pos:start="295:13" pos:end="295:52"><name pos:start="295:13" pos:end="295:20">put_bits</name><argument_list pos:start="295:21" pos:end="295:52">(<argument pos:start="295:22" pos:end="295:27"><expr pos:start="295:22" pos:end="295:27"><operator pos:start="295:22" pos:end="295:22">&amp;</operator><name pos:start="295:23" pos:end="295:27"><name pos:start="295:23" pos:end="295:23">s</name><operator pos:start="295:24" pos:end="295:25">-&gt;</operator><name pos:start="295:26" pos:end="295:27">pb</name></name></expr></argument>, <argument pos:start="295:30" pos:end="295:30"><expr pos:start="295:30" pos:end="295:30"><literal type="number" pos:start="295:30" pos:end="295:30">1</literal></expr></argument>, <argument pos:start="295:33" pos:end="295:51"><expr pos:start="295:33" pos:end="295:51"><name pos:start="295:33" pos:end="295:51"><name pos:start="295:33" pos:end="295:37">block</name><operator pos:start="295:38" pos:end="295:39">-&gt;</operator><name pos:start="295:40" pos:end="295:51">new_cpl_leak</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="297:9" pos:end="303:9"><if pos:start="297:9" pos:end="303:9">if <condition pos:start="297:12" pos:end="297:32">(<expr pos:start="297:13" pos:end="297:31"><name pos:start="297:13" pos:end="297:31"><name pos:start="297:13" pos:end="297:17">block</name><operator pos:start="297:18" pos:end="297:19">-&gt;</operator><name pos:start="297:20" pos:end="297:31">new_cpl_leak</name></name></expr>)</condition> <block pos:start="297:34" pos:end="303:9">{<block_content pos:start="299:13" pos:end="301:60">

            <expr_stmt pos:start="299:13" pos:end="299:60"><expr pos:start="299:13" pos:end="299:59"><call pos:start="299:13" pos:end="299:59"><name pos:start="299:13" pos:end="299:20">put_bits</name><argument_list pos:start="299:21" pos:end="299:59">(<argument pos:start="299:22" pos:end="299:27"><expr pos:start="299:22" pos:end="299:27"><operator pos:start="299:22" pos:end="299:22">&amp;</operator><name pos:start="299:23" pos:end="299:27"><name pos:start="299:23" pos:end="299:23">s</name><operator pos:start="299:24" pos:end="299:25">-&gt;</operator><name pos:start="299:26" pos:end="299:27">pb</name></name></expr></argument>, <argument pos:start="299:30" pos:end="299:30"><expr pos:start="299:30" pos:end="299:30"><literal type="number" pos:start="299:30" pos:end="299:30">3</literal></expr></argument>, <argument pos:start="299:33" pos:end="299:58"><expr pos:start="299:33" pos:end="299:58"><name pos:start="299:33" pos:end="299:58"><name pos:start="299:33" pos:end="299:33">s</name><operator pos:start="299:34" pos:end="299:35">-&gt;</operator><name pos:start="299:36" pos:end="299:44">bit_alloc</name><operator pos:start="299:45" pos:end="299:45">.</operator><name pos:start="299:46" pos:end="299:58">cpl_fast_leak</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="301:13" pos:end="301:60"><expr pos:start="301:13" pos:end="301:59"><call pos:start="301:13" pos:end="301:59"><name pos:start="301:13" pos:end="301:20">put_bits</name><argument_list pos:start="301:21" pos:end="301:59">(<argument pos:start="301:22" pos:end="301:27"><expr pos:start="301:22" pos:end="301:27"><operator pos:start="301:22" pos:end="301:22">&amp;</operator><name pos:start="301:23" pos:end="301:27"><name pos:start="301:23" pos:end="301:23">s</name><operator pos:start="301:24" pos:end="301:25">-&gt;</operator><name pos:start="301:26" pos:end="301:27">pb</name></name></expr></argument>, <argument pos:start="301:30" pos:end="301:30"><expr pos:start="301:30" pos:end="301:30"><literal type="number" pos:start="301:30" pos:end="301:30">3</literal></expr></argument>, <argument pos:start="301:33" pos:end="301:58"><expr pos:start="301:33" pos:end="301:58"><name pos:start="301:33" pos:end="301:58"><name pos:start="301:33" pos:end="301:33">s</name><operator pos:start="301:34" pos:end="301:35">-&gt;</operator><name pos:start="301:36" pos:end="301:44">bit_alloc</name><operator pos:start="301:45" pos:end="301:45">.</operator><name pos:start="301:46" pos:end="301:58">cpl_slow_leak</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="309:5" pos:end="315:5"><if pos:start="309:5" pos:end="315:5">if <condition pos:start="309:8" pos:end="309:17">(<expr pos:start="309:9" pos:end="309:16"><operator pos:start="309:9" pos:end="309:9">!</operator><name pos:start="309:10" pos:end="309:16"><name pos:start="309:10" pos:end="309:10">s</name><operator pos:start="309:11" pos:end="309:12">-&gt;</operator><name pos:start="309:13" pos:end="309:16">eac3</name></name></expr>)</condition> <block pos:start="309:19" pos:end="315:5">{<block_content pos:start="311:9" pos:end="313:31">

        <expr_stmt pos:start="311:9" pos:end="311:31"><expr pos:start="311:9" pos:end="311:30"><call pos:start="311:9" pos:end="311:30"><name pos:start="311:9" pos:end="311:16">put_bits</name><argument_list pos:start="311:17" pos:end="311:30">(<argument pos:start="311:18" pos:end="311:23"><expr pos:start="311:18" pos:end="311:23"><operator pos:start="311:18" pos:end="311:18">&amp;</operator><name pos:start="311:19" pos:end="311:23"><name pos:start="311:19" pos:end="311:19">s</name><operator pos:start="311:20" pos:end="311:21">-&gt;</operator><name pos:start="311:22" pos:end="311:23">pb</name></name></expr></argument>, <argument pos:start="311:26" pos:end="311:26"><expr pos:start="311:26" pos:end="311:26"><literal type="number" pos:start="311:26" pos:end="311:26">1</literal></expr></argument>, <argument pos:start="311:29" pos:end="311:29"><expr pos:start="311:29" pos:end="311:29"><literal type="number" pos:start="311:29" pos:end="311:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="311:33" pos:end="311:61">/* no delta bit allocation */</comment>

        <expr_stmt pos:start="313:9" pos:end="313:31"><expr pos:start="313:9" pos:end="313:30"><call pos:start="313:9" pos:end="313:30"><name pos:start="313:9" pos:end="313:16">put_bits</name><argument_list pos:start="313:17" pos:end="313:30">(<argument pos:start="313:18" pos:end="313:23"><expr pos:start="313:18" pos:end="313:23"><operator pos:start="313:18" pos:end="313:18">&amp;</operator><name pos:start="313:19" pos:end="313:23"><name pos:start="313:19" pos:end="313:19">s</name><operator pos:start="313:20" pos:end="313:21">-&gt;</operator><name pos:start="313:22" pos:end="313:23">pb</name></name></expr></argument>, <argument pos:start="313:26" pos:end="313:26"><expr pos:start="313:26" pos:end="313:26"><literal type="number" pos:start="313:26" pos:end="313:26">1</literal></expr></argument>, <argument pos:start="313:29" pos:end="313:29"><expr pos:start="313:29" pos:end="313:29"><literal type="number" pos:start="313:29" pos:end="313:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="313:33" pos:end="313:53">/* no data to skip */</comment>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="319:5" pos:end="319:19">/* mantissas */</comment>

    <expr_stmt pos:start="321:5" pos:end="321:33"><expr pos:start="321:5" pos:end="321:32"><name pos:start="321:5" pos:end="321:11">got_cpl</name> <operator pos:start="321:13" pos:end="321:13">=</operator> <operator pos:start="321:15" pos:end="321:15">!</operator><name pos:start="321:16" pos:end="321:32"><name pos:start="321:16" pos:end="321:20">block</name><operator pos:start="321:21" pos:end="321:22">-&gt;</operator><name pos:start="321:23" pos:end="321:32">cpl_in_use</name></name></expr>;</expr_stmt>

    <for pos:start="323:5" pos:end="371:5">for <control pos:start="323:9" pos:end="323:41">(<init pos:start="323:10" pos:end="323:16"><expr pos:start="323:10" pos:end="323:15"><name pos:start="323:10" pos:end="323:11">ch</name> <operator pos:start="323:13" pos:end="323:13">=</operator> <literal type="number" pos:start="323:15" pos:end="323:15">1</literal></expr>;</init> <condition pos:start="323:18" pos:end="323:35"><expr pos:start="323:18" pos:end="323:34"><name pos:start="323:18" pos:end="323:19">ch</name> <operator pos:start="323:21" pos:end="323:22">&lt;=</operator> <name pos:start="323:24" pos:end="323:34"><name pos:start="323:24" pos:end="323:24">s</name><operator pos:start="323:25" pos:end="323:26">-&gt;</operator><name pos:start="323:27" pos:end="323:34">channels</name></name></expr>;</condition> <incr pos:start="323:37" pos:end="323:40"><expr pos:start="323:37" pos:end="323:40"><name pos:start="323:37" pos:end="323:38">ch</name><operator pos:start="323:39" pos:end="323:40">++</operator></expr></incr>)</control> <block pos:start="323:43" pos:end="371:5">{<block_content pos:start="325:9" pos:end="369:21">

        <decl_stmt pos:start="325:9" pos:end="325:17"><decl pos:start="325:9" pos:end="325:13"><type pos:start="325:9" pos:end="325:11"><name pos:start="325:9" pos:end="325:11">int</name></type> <name pos:start="325:13" pos:end="325:13">b</name></decl>, <decl pos:start="325:16" pos:end="325:16"><type ref="prev" pos:start="325:9" pos:end="325:11"/><name pos:start="325:16" pos:end="325:16">q</name></decl>;</decl_stmt>



        <if_stmt pos:start="329:9" pos:end="337:9"><if pos:start="329:9" pos:end="337:9">if <condition pos:start="329:12" pos:end="329:62">(<expr pos:start="329:13" pos:end="329:61"><operator pos:start="329:13" pos:end="329:13">!</operator><name pos:start="329:14" pos:end="329:20">got_cpl</name> <operator pos:start="329:22" pos:end="329:23">&amp;&amp;</operator> <name pos:start="329:25" pos:end="329:26">ch</name> <operator pos:start="329:28" pos:end="329:28">&gt;</operator> <literal type="number" pos:start="329:30" pos:end="329:30">1</literal> <operator pos:start="329:32" pos:end="329:33">&amp;&amp;</operator> <name pos:start="329:35" pos:end="329:61"><name pos:start="329:35" pos:end="329:39">block</name><operator pos:start="329:40" pos:end="329:41">-&gt;</operator><name pos:start="329:42" pos:end="329:55">channel_in_cpl</name><index pos:start="329:56" pos:end="329:61">[<expr pos:start="329:57" pos:end="329:60"><name pos:start="329:57" pos:end="329:58">ch</name><operator pos:start="329:59" pos:end="329:59">-</operator><literal type="number" pos:start="329:60" pos:end="329:60">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="329:64" pos:end="337:9">{<block_content pos:start="331:13" pos:end="335:24">

            <expr_stmt pos:start="331:13" pos:end="331:29"><expr pos:start="331:13" pos:end="331:28"><name pos:start="331:13" pos:end="331:15">ch0</name>     <operator pos:start="331:21" pos:end="331:21">=</operator> <name pos:start="331:23" pos:end="331:24">ch</name> <operator pos:start="331:26" pos:end="331:26">-</operator> <literal type="number" pos:start="331:28" pos:end="331:28">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="333:13" pos:end="333:29"><expr pos:start="333:13" pos:end="333:28"><name pos:start="333:13" pos:end="333:14">ch</name>      <operator pos:start="333:21" pos:end="333:21">=</operator> <name pos:start="333:23" pos:end="333:28">CPL_CH</name></expr>;</expr_stmt>

            <expr_stmt pos:start="335:13" pos:end="335:24"><expr pos:start="335:13" pos:end="335:23"><name pos:start="335:13" pos:end="335:19">got_cpl</name> <operator pos:start="335:21" pos:end="335:21">=</operator> <literal type="number" pos:start="335:23" pos:end="335:23">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <for pos:start="339:9" pos:end="365:9">for <control pos:start="339:13" pos:end="339:65">(<init pos:start="339:14" pos:end="339:35"><expr pos:start="339:14" pos:end="339:34"><name pos:start="339:14" pos:end="339:14">i</name> <operator pos:start="339:16" pos:end="339:16">=</operator> <name pos:start="339:18" pos:end="339:34"><name pos:start="339:18" pos:end="339:18">s</name><operator pos:start="339:19" pos:end="339:20">-&gt;</operator><name pos:start="339:21" pos:end="339:30">start_freq</name><index pos:start="339:31" pos:end="339:34">[<expr pos:start="339:32" pos:end="339:33"><name pos:start="339:32" pos:end="339:33">ch</name></expr>]</index></name></expr>;</init> <condition pos:start="339:37" pos:end="339:60"><expr pos:start="339:37" pos:end="339:59"><name pos:start="339:37" pos:end="339:37">i</name> <operator pos:start="339:39" pos:end="339:39">&lt;</operator> <name pos:start="339:41" pos:end="339:59"><name pos:start="339:41" pos:end="339:45">block</name><operator pos:start="339:46" pos:end="339:47">-&gt;</operator><name pos:start="339:48" pos:end="339:55">end_freq</name><index pos:start="339:56" pos:end="339:59">[<expr pos:start="339:57" pos:end="339:58"><name pos:start="339:57" pos:end="339:58">ch</name></expr>]</index></name></expr>;</condition> <incr pos:start="339:62" pos:end="339:64"><expr pos:start="339:62" pos:end="339:64"><name pos:start="339:62" pos:end="339:62">i</name><operator pos:start="339:63" pos:end="339:64">++</operator></expr></incr>)</control> <block pos:start="339:67" pos:end="365:9">{<block_content pos:start="341:13" pos:end="363:13">

            <expr_stmt pos:start="341:13" pos:end="341:36"><expr pos:start="341:13" pos:end="341:35"><name pos:start="341:13" pos:end="341:13">q</name> <operator pos:start="341:15" pos:end="341:15">=</operator> <name pos:start="341:17" pos:end="341:35"><name pos:start="341:17" pos:end="341:21">block</name><operator pos:start="341:22" pos:end="341:23">-&gt;</operator><name pos:start="341:24" pos:end="341:28">qmant</name><index pos:start="341:29" pos:end="341:32">[<expr pos:start="341:30" pos:end="341:31"><name pos:start="341:30" pos:end="341:31">ch</name></expr>]</index><index pos:start="341:33" pos:end="341:35">[<expr pos:start="341:34" pos:end="341:34"><name pos:start="341:34" pos:end="341:34">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="343:13" pos:end="343:39"><expr pos:start="343:13" pos:end="343:38"><name pos:start="343:13" pos:end="343:13">b</name> <operator pos:start="343:15" pos:end="343:15">=</operator> <name pos:start="343:17" pos:end="343:38"><name pos:start="343:17" pos:end="343:17">s</name><operator pos:start="343:18" pos:end="343:19">-&gt;</operator><name pos:start="343:20" pos:end="343:26">ref_bap</name><index pos:start="343:27" pos:end="343:30">[<expr pos:start="343:28" pos:end="343:29"><name pos:start="343:28" pos:end="343:29">ch</name></expr>]</index><index pos:start="343:31" pos:end="343:35">[<expr pos:start="343:32" pos:end="343:34"><name pos:start="343:32" pos:end="343:34">blk</name></expr>]</index><index pos:start="343:36" pos:end="343:38">[<expr pos:start="343:37" pos:end="343:37"><name pos:start="343:37" pos:end="343:37">i</name></expr>]</index></name></expr>;</expr_stmt>

            <switch pos:start="345:13" pos:end="363:13">switch <condition pos:start="345:20" pos:end="345:22">(<expr pos:start="345:21" pos:end="345:21"><name pos:start="345:21" pos:end="345:21">b</name></expr>)</condition> <block pos:start="345:24" pos:end="363:13">{<block_content pos:start="347:13" pos:end="361:67">

            <case pos:start="347:13" pos:end="347:19">case <expr pos:start="347:18" pos:end="347:18"><literal type="number" pos:start="347:18" pos:end="347:18">0</literal></expr>:</case>                                          <break pos:start="347:62" pos:end="347:67">break;</break>

            <case pos:start="349:13" pos:end="349:19">case <expr pos:start="349:18" pos:end="349:18"><literal type="number" pos:start="349:18" pos:end="349:18">1</literal></expr>:</case> <if_stmt pos:start="349:21" pos:end="349:60"><if pos:start="349:21" pos:end="349:60">if <condition pos:start="349:24" pos:end="349:33">(<expr pos:start="349:25" pos:end="349:32"><name pos:start="349:25" pos:end="349:25">q</name> <operator pos:start="349:27" pos:end="349:28">!=</operator> <literal type="number" pos:start="349:30" pos:end="349:32">128</literal></expr>)</condition><block type="pseudo" pos:start="349:35" pos:end="349:60"><block_content pos:start="349:35" pos:end="349:60"> <expr_stmt pos:start="349:35" pos:end="349:60"><expr pos:start="349:35" pos:end="349:59"><call pos:start="349:35" pos:end="349:59"><name pos:start="349:35" pos:end="349:42">put_bits</name> <argument_list pos:start="349:44" pos:end="349:59">(<argument pos:start="349:45" pos:end="349:50"><expr pos:start="349:45" pos:end="349:50"><operator pos:start="349:45" pos:end="349:45">&amp;</operator><name pos:start="349:46" pos:end="349:50"><name pos:start="349:46" pos:end="349:46">s</name><operator pos:start="349:47" pos:end="349:48">-&gt;</operator><name pos:start="349:49" pos:end="349:50">pb</name></name></expr></argument>,   <argument pos:start="349:55" pos:end="349:55"><expr pos:start="349:55" pos:end="349:55"><literal type="number" pos:start="349:55" pos:end="349:55">5</literal></expr></argument>, <argument pos:start="349:58" pos:end="349:58"><expr pos:start="349:58" pos:end="349:58"><name pos:start="349:58" pos:end="349:58">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <break pos:start="349:62" pos:end="349:67">break;</break>

            <case pos:start="351:13" pos:end="351:19">case <expr pos:start="351:18" pos:end="351:18"><literal type="number" pos:start="351:18" pos:end="351:18">2</literal></expr>:</case> <if_stmt pos:start="351:21" pos:end="351:60"><if pos:start="351:21" pos:end="351:60">if <condition pos:start="351:24" pos:end="351:33">(<expr pos:start="351:25" pos:end="351:32"><name pos:start="351:25" pos:end="351:25">q</name> <operator pos:start="351:27" pos:end="351:28">!=</operator> <literal type="number" pos:start="351:30" pos:end="351:32">128</literal></expr>)</condition><block type="pseudo" pos:start="351:35" pos:end="351:60"><block_content pos:start="351:35" pos:end="351:60"> <expr_stmt pos:start="351:35" pos:end="351:60"><expr pos:start="351:35" pos:end="351:59"><call pos:start="351:35" pos:end="351:59"><name pos:start="351:35" pos:end="351:42">put_bits</name> <argument_list pos:start="351:44" pos:end="351:59">(<argument pos:start="351:45" pos:end="351:50"><expr pos:start="351:45" pos:end="351:50"><operator pos:start="351:45" pos:end="351:45">&amp;</operator><name pos:start="351:46" pos:end="351:50"><name pos:start="351:46" pos:end="351:46">s</name><operator pos:start="351:47" pos:end="351:48">-&gt;</operator><name pos:start="351:49" pos:end="351:50">pb</name></name></expr></argument>,   <argument pos:start="351:55" pos:end="351:55"><expr pos:start="351:55" pos:end="351:55"><literal type="number" pos:start="351:55" pos:end="351:55">7</literal></expr></argument>, <argument pos:start="351:58" pos:end="351:58"><expr pos:start="351:58" pos:end="351:58"><name pos:start="351:58" pos:end="351:58">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <break pos:start="351:62" pos:end="351:67">break;</break>

            <case pos:start="353:13" pos:end="353:19">case <expr pos:start="353:18" pos:end="353:18"><literal type="number" pos:start="353:18" pos:end="353:18">3</literal></expr>:</case>               <expr_stmt pos:start="353:35" pos:end="353:60"><expr pos:start="353:35" pos:end="353:59"><call pos:start="353:35" pos:end="353:59"><name pos:start="353:35" pos:end="353:43">put_sbits</name><argument_list pos:start="353:44" pos:end="353:59">(<argument pos:start="353:45" pos:end="353:50"><expr pos:start="353:45" pos:end="353:50"><operator pos:start="353:45" pos:end="353:45">&amp;</operator><name pos:start="353:46" pos:end="353:50"><name pos:start="353:46" pos:end="353:46">s</name><operator pos:start="353:47" pos:end="353:48">-&gt;</operator><name pos:start="353:49" pos:end="353:50">pb</name></name></expr></argument>,   <argument pos:start="353:55" pos:end="353:55"><expr pos:start="353:55" pos:end="353:55"><literal type="number" pos:start="353:55" pos:end="353:55">3</literal></expr></argument>, <argument pos:start="353:58" pos:end="353:58"><expr pos:start="353:58" pos:end="353:58"><name pos:start="353:58" pos:end="353:58">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="353:62" pos:end="353:67">break;</break>

            <case pos:start="355:13" pos:end="355:19">case <expr pos:start="355:18" pos:end="355:18"><literal type="number" pos:start="355:18" pos:end="355:18">4</literal></expr>:</case> <if_stmt pos:start="355:21" pos:end="355:60"><if pos:start="355:21" pos:end="355:60">if <condition pos:start="355:24" pos:end="355:33">(<expr pos:start="355:25" pos:end="355:32"><name pos:start="355:25" pos:end="355:25">q</name> <operator pos:start="355:27" pos:end="355:28">!=</operator> <literal type="number" pos:start="355:30" pos:end="355:32">128</literal></expr>)</condition><block type="pseudo" pos:start="355:35" pos:end="355:60"><block_content pos:start="355:35" pos:end="355:60"> <expr_stmt pos:start="355:35" pos:end="355:60"><expr pos:start="355:35" pos:end="355:59"><call pos:start="355:35" pos:end="355:59"><name pos:start="355:35" pos:end="355:42">put_bits</name> <argument_list pos:start="355:44" pos:end="355:59">(<argument pos:start="355:45" pos:end="355:50"><expr pos:start="355:45" pos:end="355:50"><operator pos:start="355:45" pos:end="355:45">&amp;</operator><name pos:start="355:46" pos:end="355:50"><name pos:start="355:46" pos:end="355:46">s</name><operator pos:start="355:47" pos:end="355:48">-&gt;</operator><name pos:start="355:49" pos:end="355:50">pb</name></name></expr></argument>,   <argument pos:start="355:55" pos:end="355:55"><expr pos:start="355:55" pos:end="355:55"><literal type="number" pos:start="355:55" pos:end="355:55">7</literal></expr></argument>, <argument pos:start="355:58" pos:end="355:58"><expr pos:start="355:58" pos:end="355:58"><name pos:start="355:58" pos:end="355:58">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <break pos:start="355:62" pos:end="355:67">break;</break>

            <case pos:start="357:13" pos:end="357:20">case <expr pos:start="357:18" pos:end="357:19"><literal type="number" pos:start="357:18" pos:end="357:19">14</literal></expr>:</case>              <expr_stmt pos:start="357:35" pos:end="357:60"><expr pos:start="357:35" pos:end="357:59"><call pos:start="357:35" pos:end="357:59"><name pos:start="357:35" pos:end="357:43">put_sbits</name><argument_list pos:start="357:44" pos:end="357:59">(<argument pos:start="357:45" pos:end="357:50"><expr pos:start="357:45" pos:end="357:50"><operator pos:start="357:45" pos:end="357:45">&amp;</operator><name pos:start="357:46" pos:end="357:50"><name pos:start="357:46" pos:end="357:46">s</name><operator pos:start="357:47" pos:end="357:48">-&gt;</operator><name pos:start="357:49" pos:end="357:50">pb</name></name></expr></argument>,  <argument pos:start="357:54" pos:end="357:55"><expr pos:start="357:54" pos:end="357:55"><literal type="number" pos:start="357:54" pos:end="357:55">14</literal></expr></argument>, <argument pos:start="357:58" pos:end="357:58"><expr pos:start="357:58" pos:end="357:58"><name pos:start="357:58" pos:end="357:58">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="357:62" pos:end="357:67">break;</break>

            <case pos:start="359:13" pos:end="359:20">case <expr pos:start="359:18" pos:end="359:19"><literal type="number" pos:start="359:18" pos:end="359:19">15</literal></expr>:</case>              <expr_stmt pos:start="359:35" pos:end="359:60"><expr pos:start="359:35" pos:end="359:59"><call pos:start="359:35" pos:end="359:59"><name pos:start="359:35" pos:end="359:43">put_sbits</name><argument_list pos:start="359:44" pos:end="359:59">(<argument pos:start="359:45" pos:end="359:50"><expr pos:start="359:45" pos:end="359:50"><operator pos:start="359:45" pos:end="359:45">&amp;</operator><name pos:start="359:46" pos:end="359:50"><name pos:start="359:46" pos:end="359:46">s</name><operator pos:start="359:47" pos:end="359:48">-&gt;</operator><name pos:start="359:49" pos:end="359:50">pb</name></name></expr></argument>,  <argument pos:start="359:54" pos:end="359:55"><expr pos:start="359:54" pos:end="359:55"><literal type="number" pos:start="359:54" pos:end="359:55">16</literal></expr></argument>, <argument pos:start="359:58" pos:end="359:58"><expr pos:start="359:58" pos:end="359:58"><name pos:start="359:58" pos:end="359:58">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="359:62" pos:end="359:67">break;</break>

            <default pos:start="361:13" pos:end="361:20">default:</default>              <expr_stmt pos:start="361:35" pos:end="361:60"><expr pos:start="361:35" pos:end="361:59"><call pos:start="361:35" pos:end="361:59"><name pos:start="361:35" pos:end="361:43">put_sbits</name><argument_list pos:start="361:44" pos:end="361:59">(<argument pos:start="361:45" pos:end="361:50"><expr pos:start="361:45" pos:end="361:50"><operator pos:start="361:45" pos:end="361:45">&amp;</operator><name pos:start="361:46" pos:end="361:50"><name pos:start="361:46" pos:end="361:46">s</name><operator pos:start="361:47" pos:end="361:48">-&gt;</operator><name pos:start="361:49" pos:end="361:50">pb</name></name></expr></argument>, <argument pos:start="361:53" pos:end="361:55"><expr pos:start="361:53" pos:end="361:55"><name pos:start="361:53" pos:end="361:53">b</name><operator pos:start="361:54" pos:end="361:54">-</operator><literal type="number" pos:start="361:55" pos:end="361:55">1</literal></expr></argument>, <argument pos:start="361:58" pos:end="361:58"><expr pos:start="361:58" pos:end="361:58"><name pos:start="361:58" pos:end="361:58">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="361:62" pos:end="361:67">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></for>

        <if_stmt pos:start="367:9" pos:end="369:21"><if pos:start="367:9" pos:end="369:21">if <condition pos:start="367:12" pos:end="367:25">(<expr pos:start="367:13" pos:end="367:24"><name pos:start="367:13" pos:end="367:14">ch</name> <operator pos:start="367:16" pos:end="367:17">==</operator> <name pos:start="367:19" pos:end="367:24">CPL_CH</name></expr>)</condition><block type="pseudo" pos:start="369:13" pos:end="369:21"><block_content pos:start="369:13" pos:end="369:21">

            <expr_stmt pos:start="369:13" pos:end="369:21"><expr pos:start="369:13" pos:end="369:20"><name pos:start="369:13" pos:end="369:14">ch</name> <operator pos:start="369:16" pos:end="369:16">=</operator> <name pos:start="369:18" pos:end="369:20">ch0</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
