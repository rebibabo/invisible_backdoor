<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2406.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">init_uni_ac_vlc</name><parameter_list pos:start="1:28" pos:end="1:65">(<parameter pos:start="1:29" pos:end="1:39"><decl pos:start="1:29" pos:end="1:39"><type pos:start="1:29" pos:end="1:39"><name pos:start="1:29" pos:end="1:35">RLTable</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:39">rl</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:64"><decl pos:start="1:42" pos:end="1:64"><type pos:start="1:42" pos:end="1:64"><name pos:start="1:42" pos:end="1:48">uint8_t</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:64">uni_ac_vlc_len</name></decl></parameter>)</parameter_list><block pos:start="1:66" pos:end="89:1">{<block_content pos:start="3:5" pos:end="87:5">

    <decl_stmt pos:start="3:5" pos:end="3:10"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>;</decl_stmt>



    <for pos:start="7:5" pos:end="87:5">for<control pos:start="7:8" pos:end="7:24">(<init pos:start="7:9" pos:end="7:12"><expr pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:9">i</name><operator pos:start="7:10" pos:end="7:10">=</operator><literal type="number" pos:start="7:11" pos:end="7:11">0</literal></expr>;</init> <condition pos:start="7:14" pos:end="7:19"><expr pos:start="7:14" pos:end="7:18"><name pos:start="7:14" pos:end="7:14">i</name><operator pos:start="7:15" pos:end="7:15">&lt;</operator><literal type="number" pos:start="7:16" pos:end="7:18">128</literal></expr>;</condition> <incr pos:start="7:21" pos:end="7:23"><expr pos:start="7:21" pos:end="7:23"><name pos:start="7:21" pos:end="7:21">i</name><operator pos:start="7:22" pos:end="7:23">++</operator></expr></incr>)</control><block pos:start="7:25" pos:end="87:5">{<block_content pos:start="9:9" pos:end="85:9">

        <decl_stmt pos:start="9:9" pos:end="9:24"><decl pos:start="9:9" pos:end="9:23"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:17">level</name><init pos:start="9:18" pos:end="9:23">= <expr pos:start="9:20" pos:end="9:23"><name pos:start="9:20" pos:end="9:20">i</name><operator pos:start="9:21" pos:end="9:21">-</operator><literal type="number" pos:start="9:22" pos:end="9:23">64</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="11:9" pos:end="11:16"><decl pos:start="11:9" pos:end="11:15"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:15">run</name></decl>;</decl_stmt>



        <for pos:start="15:9" pos:end="85:9">for<control pos:start="15:12" pos:end="15:33">(<init pos:start="15:13" pos:end="15:18"><expr pos:start="15:13" pos:end="15:17"><name pos:start="15:13" pos:end="15:15">run</name><operator pos:start="15:16" pos:end="15:16">=</operator><literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr>;</init> <condition pos:start="15:20" pos:end="15:26"><expr pos:start="15:20" pos:end="15:25"><name pos:start="15:20" pos:end="15:22">run</name><operator pos:start="15:23" pos:end="15:23">&lt;</operator><literal type="number" pos:start="15:24" pos:end="15:25">64</literal></expr>;</condition> <incr pos:start="15:28" pos:end="15:32"><expr pos:start="15:28" pos:end="15:32"><name pos:start="15:28" pos:end="15:30">run</name><operator pos:start="15:31" pos:end="15:32">++</operator></expr></incr>)</control><block pos:start="15:34" pos:end="85:9">{<block_content pos:start="17:13" pos:end="83:59">

            <decl_stmt pos:start="17:13" pos:end="17:32"><decl pos:start="17:13" pos:end="17:19"><type pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">int</name></type> <name pos:start="17:17" pos:end="17:19">len</name></decl>, <decl pos:start="17:22" pos:end="17:25"><type ref="prev" pos:start="17:13" pos:end="17:15"/><name pos:start="17:22" pos:end="17:25">bits</name></decl>, <decl pos:start="17:28" pos:end="17:31"><type ref="prev" pos:start="17:13" pos:end="17:15"/><name pos:start="17:28" pos:end="17:31">code</name></decl>;</decl_stmt>



            <decl_stmt pos:start="21:13" pos:end="21:37"><decl pos:start="21:13" pos:end="21:36"><type pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:15">int</name></type> <name pos:start="21:17" pos:end="21:22">alevel</name><init pos:start="21:23" pos:end="21:36">= <expr pos:start="21:25" pos:end="21:36"><call pos:start="21:25" pos:end="21:36"><name pos:start="21:25" pos:end="21:29">FFABS</name><argument_list pos:start="21:30" pos:end="21:36">(<argument pos:start="21:31" pos:end="21:35"><expr pos:start="21:31" pos:end="21:35"><name pos:start="21:31" pos:end="21:35">level</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="23:13" pos:end="23:36"><decl pos:start="23:13" pos:end="23:35"><type pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:15">int</name></type> <name pos:start="23:17" pos:end="23:20">sign</name><init pos:start="23:21" pos:end="23:35">= <expr pos:start="23:23" pos:end="23:35"><operator pos:start="23:23" pos:end="23:23">(</operator><name pos:start="23:24" pos:end="23:28">level</name><operator pos:start="23:29" pos:end="23:30">&gt;&gt;</operator><literal type="number" pos:start="23:31" pos:end="23:32">31</literal><operator pos:start="23:33" pos:end="23:33">)</operator><operator pos:start="23:34" pos:end="23:34">&amp;</operator><literal type="number" pos:start="23:35" pos:end="23:35">1</literal></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="27:13" pos:end="33:57"><if pos:start="27:13" pos:end="29:26">if <condition pos:start="27:16" pos:end="27:47">(<expr pos:start="27:17" pos:end="27:46"><name pos:start="27:17" pos:end="27:22">alevel</name> <operator pos:start="27:24" pos:end="27:24">&gt;</operator> <name pos:start="27:26" pos:end="27:46"><name pos:start="27:26" pos:end="27:27">rl</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:38">max_level</name><index pos:start="27:39" pos:end="27:41">[<expr pos:start="27:40" pos:end="27:40"><literal type="number" pos:start="27:40" pos:end="27:40">0</literal></expr>]</index><index pos:start="27:42" pos:end="27:46">[<expr pos:start="27:43" pos:end="27:45"><name pos:start="27:43" pos:end="27:45">run</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="29:17" pos:end="29:26"><block_content pos:start="29:17" pos:end="29:26">

                <expr_stmt pos:start="29:17" pos:end="29:26"><expr pos:start="29:17" pos:end="29:25"><name pos:start="29:17" pos:end="29:20">code</name><operator pos:start="29:21" pos:end="29:21">=</operator> <literal type="number" pos:start="29:23" pos:end="29:25">111</literal></expr>;</expr_stmt></block_content></block></if> <comment type="block" pos:start="29:28" pos:end="29:36">/*rl-&gt;n*/</comment>

            <else pos:start="31:13" pos:end="33:57">else<block type="pseudo" pos:start="33:17" pos:end="33:57"><block_content pos:start="33:17" pos:end="33:57">

                <expr_stmt pos:start="33:17" pos:end="33:57"><expr pos:start="33:17" pos:end="33:56"><name pos:start="33:17" pos:end="33:20">code</name><operator pos:start="33:21" pos:end="33:21">=</operator> <name pos:start="33:23" pos:end="33:43"><name pos:start="33:23" pos:end="33:24">rl</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:35">index_run</name><index pos:start="33:36" pos:end="33:38">[<expr pos:start="33:37" pos:end="33:37"><literal type="number" pos:start="33:37" pos:end="33:37">0</literal></expr>]</index><index pos:start="33:39" pos:end="33:43">[<expr pos:start="33:40" pos:end="33:42"><name pos:start="33:40" pos:end="33:42">run</name></expr>]</index></name> <operator pos:start="33:45" pos:end="33:45">+</operator> <name pos:start="33:47" pos:end="33:52">alevel</name> <operator pos:start="33:54" pos:end="33:54">-</operator> <literal type="number" pos:start="33:56" pos:end="33:56">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <if_stmt pos:start="37:13" pos:end="79:13"><if pos:start="37:13" pos:end="45:13">if <condition pos:start="37:16" pos:end="37:39">(<expr pos:start="37:17" pos:end="37:26"><name pos:start="37:17" pos:end="37:20">code</name> <operator pos:start="37:22" pos:end="37:22">&lt;</operator> <literal type="number" pos:start="37:24" pos:end="37:26">111</literal></expr> <comment type="block" pos:start="37:28" pos:end="37:38">/* rl-&gt;n */</comment>)</condition> <block pos:start="37:41" pos:end="45:13">{<block_content pos:start="41:17" pos:end="43:57">

                <comment type="block" pos:start="39:17" pos:end="39:50">/* store the vlc &amp; sign at once */</comment>

                <expr_stmt pos:start="41:17" pos:end="41:48"><expr pos:start="41:17" pos:end="41:47"><name pos:start="41:17" pos:end="41:19">len</name><operator pos:start="41:20" pos:end="41:20">=</operator>   <name pos:start="41:24" pos:end="41:45"><name pos:start="41:24" pos:end="41:25">rl</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:36">table_vlc</name><index pos:start="41:37" pos:end="41:42">[<expr pos:start="41:38" pos:end="41:41"><name pos:start="41:38" pos:end="41:41">code</name></expr>]</index><index pos:start="41:43" pos:end="41:45">[<expr pos:start="41:44" pos:end="41:44"><literal type="number" pos:start="41:44" pos:end="41:44">1</literal></expr>]</index></name><operator pos:start="41:46" pos:end="41:46">+</operator><literal type="number" pos:start="41:47" pos:end="41:47">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:57"><expr pos:start="43:17" pos:end="43:56"><name pos:start="43:17" pos:end="43:20">bits</name><operator pos:start="43:21" pos:end="43:21">=</operator> <operator pos:start="43:23" pos:end="43:23">(</operator><name pos:start="43:24" pos:end="43:45"><name pos:start="43:24" pos:end="43:25">rl</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:36">table_vlc</name><index pos:start="43:37" pos:end="43:42">[<expr pos:start="43:38" pos:end="43:41"><name pos:start="43:38" pos:end="43:41">code</name></expr>]</index><index pos:start="43:43" pos:end="43:45">[<expr pos:start="43:44" pos:end="43:44"><literal type="number" pos:start="43:44" pos:end="43:44">0</literal></expr>]</index></name><operator pos:start="43:46" pos:end="43:47">&lt;&lt;</operator><literal type="number" pos:start="43:48" pos:end="43:48">1</literal><operator pos:start="43:49" pos:end="43:49">)</operator> <operator pos:start="43:51" pos:end="43:51">+</operator> <name pos:start="43:53" pos:end="43:56">sign</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="45:15" pos:end="79:13">else <block pos:start="45:20" pos:end="79:13">{<block_content pos:start="47:17" pos:end="77:17">

                <expr_stmt pos:start="47:17" pos:end="47:55"><expr pos:start="47:17" pos:end="47:54"><name pos:start="47:17" pos:end="47:19">len</name><operator pos:start="47:20" pos:end="47:20">=</operator>  <name pos:start="47:23" pos:end="47:52"><name pos:start="47:23" pos:end="47:24">rl</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:35">table_vlc</name><index pos:start="47:36" pos:end="47:49">[<expr pos:start="47:37" pos:end="47:39"><literal type="number" pos:start="47:37" pos:end="47:39">111</literal></expr><comment type="block" pos:start="47:40" pos:end="47:48">/*rl-&gt;n*/</comment>]</index><index pos:start="47:50" pos:end="47:52">[<expr pos:start="47:51" pos:end="47:51"><literal type="number" pos:start="47:51" pos:end="47:51">1</literal></expr>]</index></name><operator pos:start="47:53" pos:end="47:53">+</operator><literal type="number" pos:start="47:54" pos:end="47:54">6</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:56"><expr pos:start="49:17" pos:end="49:55"><name pos:start="49:17" pos:end="49:20">bits</name><operator pos:start="49:21" pos:end="49:21">=</operator> <name pos:start="49:23" pos:end="49:52"><name pos:start="49:23" pos:end="49:24">rl</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:35">table_vlc</name><index pos:start="49:36" pos:end="49:49">[<expr pos:start="49:37" pos:end="49:39"><literal type="number" pos:start="49:37" pos:end="49:39">111</literal></expr><comment type="block" pos:start="49:40" pos:end="49:48">/*rl-&gt;n*/</comment>]</index><index pos:start="49:50" pos:end="49:52">[<expr pos:start="49:51" pos:end="49:51"><literal type="number" pos:start="49:51" pos:end="49:51">0</literal></expr>]</index></name><operator pos:start="49:53" pos:end="49:54">&lt;&lt;</operator><literal type="number" pos:start="49:55" pos:end="49:55">6</literal></expr>;</expr_stmt>



                <expr_stmt pos:start="53:17" pos:end="53:27"><expr pos:start="53:17" pos:end="53:26"><name pos:start="53:17" pos:end="53:20">bits</name><operator pos:start="53:21" pos:end="53:22">|=</operator> <name pos:start="53:24" pos:end="53:26">run</name></expr>;</expr_stmt>

                <if_stmt pos:start="55:17" pos:end="77:17"><if pos:start="55:17" pos:end="61:17">if <condition pos:start="55:20" pos:end="55:33">(<expr pos:start="55:21" pos:end="55:32"><name pos:start="55:21" pos:end="55:26">alevel</name> <operator pos:start="55:28" pos:end="55:28">&lt;</operator> <literal type="number" pos:start="55:30" pos:end="55:32">128</literal></expr>)</condition> <block pos:start="55:35" pos:end="61:17">{<block_content pos:start="57:21" pos:end="59:40">

                    <expr_stmt pos:start="57:21" pos:end="57:29"><expr pos:start="57:21" pos:end="57:28"><name pos:start="57:21" pos:end="57:24">bits</name><operator pos:start="57:25" pos:end="57:27">&lt;&lt;=</operator><literal type="number" pos:start="57:28" pos:end="57:28">8</literal></expr>;</expr_stmt> <expr_stmt pos:start="57:31" pos:end="57:37"><expr pos:start="57:31" pos:end="57:36"><name pos:start="57:31" pos:end="57:33">len</name><operator pos:start="57:34" pos:end="57:35">+=</operator><literal type="number" pos:start="57:36" pos:end="57:36">8</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="59:21" pos:end="59:40"><expr pos:start="59:21" pos:end="59:39"><name pos:start="59:21" pos:end="59:24">bits</name><operator pos:start="59:25" pos:end="59:26">|=</operator> <name pos:start="59:28" pos:end="59:32">level</name> <operator pos:start="59:34" pos:end="59:34">&amp;</operator> <literal type="number" pos:start="59:36" pos:end="59:39">0xff</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="61:19" pos:end="77:17">else <block pos:start="61:24" pos:end="77:17">{<block_content pos:start="63:21" pos:end="75:21">

                    <expr_stmt pos:start="63:21" pos:end="63:30"><expr pos:start="63:21" pos:end="63:29"><name pos:start="63:21" pos:end="63:24">bits</name><operator pos:start="63:25" pos:end="63:27">&lt;&lt;=</operator><literal type="number" pos:start="63:28" pos:end="63:29">16</literal></expr>;</expr_stmt> <expr_stmt pos:start="63:32" pos:end="63:39"><expr pos:start="63:32" pos:end="63:38"><name pos:start="63:32" pos:end="63:34">len</name><operator pos:start="63:35" pos:end="63:36">+=</operator><literal type="number" pos:start="63:37" pos:end="63:38">16</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="65:21" pos:end="65:40"><expr pos:start="65:21" pos:end="65:39"><name pos:start="65:21" pos:end="65:24">bits</name><operator pos:start="65:25" pos:end="65:26">|=</operator> <name pos:start="65:28" pos:end="65:32">level</name> <operator pos:start="65:34" pos:end="65:34">&amp;</operator> <literal type="number" pos:start="65:36" pos:end="65:39">0xff</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="67:21" pos:end="75:21"><if pos:start="67:21" pos:end="71:21">if <condition pos:start="67:24" pos:end="67:34">(<expr pos:start="67:25" pos:end="67:33"><name pos:start="67:25" pos:end="67:29">level</name> <operator pos:start="67:31" pos:end="67:31">&lt;</operator> <literal type="number" pos:start="67:33" pos:end="67:33">0</literal></expr>)</condition> <block pos:start="67:36" pos:end="71:21">{<block_content pos:start="69:25" pos:end="69:52">

                        <expr_stmt pos:start="69:25" pos:end="69:52"><expr pos:start="69:25" pos:end="69:51"><name pos:start="69:25" pos:end="69:28">bits</name><operator pos:start="69:29" pos:end="69:30">|=</operator> <literal type="number" pos:start="69:32" pos:end="69:39">0x8001</literal> <operator pos:start="69:39" pos:end="69:39">+</operator> <name pos:start="69:41" pos:end="69:45">level</name> <operator pos:start="69:47" pos:end="69:47">+</operator> <literal type="number" pos:start="69:49" pos:end="69:51">255</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="71:23" pos:end="75:21">else <block pos:start="71:28" pos:end="75:21">{<block_content pos:start="73:25" pos:end="73:46">

                        <expr_stmt pos:start="73:25" pos:end="73:46"><expr pos:start="73:25" pos:end="73:45"><name pos:start="73:25" pos:end="73:28">bits</name><operator pos:start="73:29" pos:end="73:30">|=</operator> <name pos:start="73:32" pos:end="73:36">level</name> <operator pos:start="73:38" pos:end="73:38">&amp;</operator> <literal type="number" pos:start="73:40" pos:end="73:45">0xffff</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="83:13" pos:end="83:59"><expr pos:start="83:13" pos:end="83:58"><name pos:start="83:13" pos:end="83:53"><name pos:start="83:13" pos:end="83:26">uni_ac_vlc_len</name> <index pos:start="83:28" pos:end="83:53">[<expr pos:start="83:29" pos:end="83:52"><call pos:start="83:29" pos:end="83:52"><name pos:start="83:29" pos:end="83:44">UNI_AC_ENC_INDEX</name><argument_list pos:start="83:45" pos:end="83:52">(<argument pos:start="83:46" pos:end="83:48"><expr pos:start="83:46" pos:end="83:48"><name pos:start="83:46" pos:end="83:48">run</name></expr></argument>, <argument pos:start="83:51" pos:end="83:51"><expr pos:start="83:51" pos:end="83:51"><name pos:start="83:51" pos:end="83:51">i</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="83:54" pos:end="83:54">=</operator> <name pos:start="83:56" pos:end="83:58">len</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function></unit>
