<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1400.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">qemu_fsdev_add</name><parameter_list pos:start="1:19" pos:end="1:34">(<parameter pos:start="1:20" pos:end="1:33"><decl pos:start="1:20" pos:end="1:33"><type pos:start="1:20" pos:end="1:29"><name pos:start="1:20" pos:end="1:27">QemuOpts</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:33">opts</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="107:1">{<block_content pos:start="5:5" pos:end="105:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:30"><name pos:start="7:5" pos:end="7:28"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:28">FsDriverListEntry</name></name> <modifier pos:start="7:30" pos:end="7:30">*</modifier></type><name pos:start="7:31" pos:end="7:34">fsle</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:24">fsdev_id</name> <init pos:start="9:26" pos:end="9:45">= <expr pos:start="9:28" pos:end="9:45"><call pos:start="9:28" pos:end="9:45"><name pos:start="9:28" pos:end="9:39">qemu_opts_id</name><argument_list pos:start="9:40" pos:end="9:45">(<argument pos:start="9:41" pos:end="9:44"><expr pos:start="9:41" pos:end="9:44"><name pos:start="9:41" pos:end="9:44">opts</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:58"><decl pos:start="11:5" pos:end="11:57"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:24">fsdriver</name> <init pos:start="11:26" pos:end="11:57">= <expr pos:start="11:28" pos:end="11:57"><call pos:start="11:28" pos:end="11:57"><name pos:start="11:28" pos:end="11:39">qemu_opt_get</name><argument_list pos:start="11:40" pos:end="11:57">(<argument pos:start="11:41" pos:end="11:44"><expr pos:start="11:41" pos:end="11:44"><name pos:start="11:41" pos:end="11:44">opts</name></expr></argument>, <argument pos:start="11:47" pos:end="11:56"><expr pos:start="11:47" pos:end="11:56"><literal type="string" pos:start="11:47" pos:end="11:56">"fsdriver"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:58"><decl pos:start="13:5" pos:end="13:57"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:24">writeout</name> <init pos:start="13:26" pos:end="13:57">= <expr pos:start="13:28" pos:end="13:57"><call pos:start="13:28" pos:end="13:57"><name pos:start="13:28" pos:end="13:39">qemu_opt_get</name><argument_list pos:start="13:40" pos:end="13:57">(<argument pos:start="13:41" pos:end="13:44"><expr pos:start="13:41" pos:end="13:44"><name pos:start="13:41" pos:end="13:44">opts</name></expr></argument>, <argument pos:start="13:47" pos:end="13:56"><expr pos:start="13:47" pos:end="13:56"><literal type="string" pos:start="13:47" pos:end="13:56">"writeout"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:53"><decl pos:start="15:5" pos:end="15:52"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">bool</name></type> <name pos:start="15:10" pos:end="15:11">ro</name> <init pos:start="15:13" pos:end="15:52">= <expr pos:start="15:15" pos:end="15:52"><call pos:start="15:15" pos:end="15:52"><name pos:start="15:15" pos:end="15:31">qemu_opt_get_bool</name><argument_list pos:start="15:32" pos:end="15:52">(<argument pos:start="15:33" pos:end="15:36"><expr pos:start="15:33" pos:end="15:36"><name pos:start="15:33" pos:end="15:36">opts</name></expr></argument>, <argument pos:start="15:39" pos:end="15:48"><expr pos:start="15:39" pos:end="15:48"><literal type="string" pos:start="15:39" pos:end="15:48">"readonly"</literal></expr></argument>, <argument pos:start="15:51" pos:end="15:51"><expr pos:start="15:51" pos:end="15:51"><literal type="number" pos:start="15:51" pos:end="15:51">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:18">(<expr pos:start="19:9" pos:end="19:17"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:17">fsdev_id</name></expr>)</condition> <block pos:start="19:20" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:52"><expr pos:start="21:9" pos:end="21:51"><call pos:start="21:9" pos:end="21:51"><name pos:start="21:9" pos:end="21:15">fprintf</name><argument_list pos:start="21:16" pos:end="21:51">(<argument pos:start="21:17" pos:end="21:22"><expr pos:start="21:17" pos:end="21:22"><name pos:start="21:17" pos:end="21:22">stderr</name></expr></argument>, <argument pos:start="21:25" pos:end="21:50"><expr pos:start="21:25" pos:end="21:50"><literal type="string" pos:start="21:25" pos:end="21:50">"fsdev: No id specified\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="57:5"><if pos:start="29:5" pos:end="51:5">if <condition pos:start="29:8" pos:end="29:17">(<expr pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:16">fsdriver</name></expr>)</condition> <block pos:start="29:19" pos:end="51:5">{<block_content pos:start="31:9" pos:end="49:9">

        <for pos:start="31:9" pos:end="39:9">for <control pos:start="31:13" pos:end="31:51">(<init pos:start="31:14" pos:end="31:19"><expr pos:start="31:14" pos:end="31:18"><name pos:start="31:14" pos:end="31:14">i</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>;</init> <condition pos:start="31:21" pos:end="31:46"><expr pos:start="31:21" pos:end="31:45"><name pos:start="31:21" pos:end="31:21">i</name> <operator pos:start="31:23" pos:end="31:23">&lt;</operator> <call pos:start="31:25" pos:end="31:45"><name pos:start="31:25" pos:end="31:34">ARRAY_SIZE</name><argument_list pos:start="31:35" pos:end="31:45">(<argument pos:start="31:36" pos:end="31:44"><expr pos:start="31:36" pos:end="31:44"><name pos:start="31:36" pos:end="31:44">FsDrivers</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="31:48" pos:end="31:50"><expr pos:start="31:48" pos:end="31:50"><name pos:start="31:48" pos:end="31:48">i</name><operator pos:start="31:49" pos:end="31:50">++</operator></expr></incr>)</control> <block pos:start="31:53" pos:end="39:9">{<block_content pos:start="33:13" pos:end="37:13">

            <if_stmt pos:start="33:13" pos:end="37:13"><if pos:start="33:13" pos:end="37:13">if <condition pos:start="33:16" pos:end="33:57">(<expr pos:start="33:17" pos:end="33:56"><call pos:start="33:17" pos:end="33:51"><name pos:start="33:17" pos:end="33:22">strcmp</name><argument_list pos:start="33:23" pos:end="33:51">(<argument pos:start="33:24" pos:end="33:40"><expr pos:start="33:24" pos:end="33:40"><name pos:start="33:24" pos:end="33:35"><name pos:start="33:24" pos:end="33:32">FsDrivers</name><index pos:start="33:33" pos:end="33:35">[<expr pos:start="33:34" pos:end="33:34"><name pos:start="33:34" pos:end="33:34">i</name></expr>]</index></name><operator pos:start="33:36" pos:end="33:36">.</operator><name pos:start="33:37" pos:end="33:40">name</name></expr></argument>, <argument pos:start="33:43" pos:end="33:50"><expr pos:start="33:43" pos:end="33:50"><name pos:start="33:43" pos:end="33:50">fsdriver</name></expr></argument>)</argument_list></call> <operator pos:start="33:53" pos:end="33:54">==</operator> <literal type="number" pos:start="33:56" pos:end="33:56">0</literal></expr>)</condition> <block pos:start="33:59" pos:end="37:13">{<block_content pos:start="35:17" pos:end="35:22">

                <break pos:start="35:17" pos:end="35:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="43:9" pos:end="49:9"><if pos:start="43:9" pos:end="49:9">if <condition pos:start="43:12" pos:end="43:39">(<expr pos:start="43:13" pos:end="43:38"><name pos:start="43:13" pos:end="43:13">i</name> <operator pos:start="43:15" pos:end="43:16">==</operator> <call pos:start="43:18" pos:end="43:38"><name pos:start="43:18" pos:end="43:27">ARRAY_SIZE</name><argument_list pos:start="43:28" pos:end="43:38">(<argument pos:start="43:29" pos:end="43:37"><expr pos:start="43:29" pos:end="43:37"><name pos:start="43:29" pos:end="43:37">FsDrivers</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:41" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:22">

            <expr_stmt pos:start="45:13" pos:end="45:72"><expr pos:start="45:13" pos:end="45:71"><call pos:start="45:13" pos:end="45:71"><name pos:start="45:13" pos:end="45:19">fprintf</name><argument_list pos:start="45:20" pos:end="45:71">(<argument pos:start="45:21" pos:end="45:26"><expr pos:start="45:21" pos:end="45:26"><name pos:start="45:21" pos:end="45:26">stderr</name></expr></argument>, <argument pos:start="45:29" pos:end="45:60"><expr pos:start="45:29" pos:end="45:60"><literal type="string" pos:start="45:29" pos:end="45:60">"fsdev: fsdriver %s not found\n"</literal></expr></argument>, <argument pos:start="45:63" pos:end="45:70"><expr pos:start="45:63" pos:end="45:70"><name pos:start="45:63" pos:end="45:70">fsdriver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="47:13" pos:end="47:22">return <expr pos:start="47:20" pos:end="47:21"><operator pos:start="47:20" pos:end="47:20">-</operator><literal type="number" pos:start="47:21" pos:end="47:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="57:5">else <block pos:start="51:12" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:18">

        <expr_stmt pos:start="53:9" pos:end="53:58"><expr pos:start="53:9" pos:end="53:57"><call pos:start="53:9" pos:end="53:57"><name pos:start="53:9" pos:end="53:15">fprintf</name><argument_list pos:start="53:16" pos:end="53:57">(<argument pos:start="53:17" pos:end="53:22"><expr pos:start="53:17" pos:end="53:22"><name pos:start="53:17" pos:end="53:22">stderr</name></expr></argument>, <argument pos:start="53:25" pos:end="53:56"><expr pos:start="53:25" pos:end="53:56"><literal type="string" pos:start="53:25" pos:end="53:56">"fsdev: No fsdriver specified\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:18">return <expr pos:start="55:16" pos:end="55:17"><operator pos:start="55:16" pos:end="55:16">-</operator><literal type="number" pos:start="55:17" pos:end="55:17">1</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:36"><expr pos:start="61:5" pos:end="61:35"><name pos:start="61:5" pos:end="61:8">fsle</name> <operator pos:start="61:10" pos:end="61:10">=</operator> <call pos:start="61:12" pos:end="61:35"><name pos:start="61:12" pos:end="61:20">g_malloc0</name><argument_list pos:start="61:21" pos:end="61:35">(<argument pos:start="61:22" pos:end="61:34"><expr pos:start="61:22" pos:end="61:34"><sizeof pos:start="61:22" pos:end="61:34">sizeof<argument_list pos:start="61:28" pos:end="61:34">(<argument pos:start="61:29" pos:end="61:33"><expr pos:start="61:29" pos:end="61:33"><operator pos:start="61:29" pos:end="61:29">*</operator><name pos:start="61:30" pos:end="61:33">fsle</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:44"><expr pos:start="63:5" pos:end="63:43"><name pos:start="63:5" pos:end="63:22"><name pos:start="63:5" pos:end="63:8">fsle</name><operator pos:start="63:9" pos:end="63:10">-&gt;</operator><name pos:start="63:11" pos:end="63:13">fse</name><operator pos:start="63:14" pos:end="63:14">.</operator><name pos:start="63:15" pos:end="63:22">fsdev_id</name></name> <operator pos:start="63:24" pos:end="63:24">=</operator> <call pos:start="63:26" pos:end="63:43"><name pos:start="63:26" pos:end="63:33">g_strdup</name><argument_list pos:start="63:34" pos:end="63:43">(<argument pos:start="63:35" pos:end="63:42"><expr pos:start="63:35" pos:end="63:42"><name pos:start="63:35" pos:end="63:42">fsdev_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:37"><expr pos:start="65:5" pos:end="65:36"><name pos:start="65:5" pos:end="65:17"><name pos:start="65:5" pos:end="65:8">fsle</name><operator pos:start="65:9" pos:end="65:10">-&gt;</operator><name pos:start="65:11" pos:end="65:13">fse</name><operator pos:start="65:14" pos:end="65:14">.</operator><name pos:start="65:15" pos:end="65:17">ops</name></name> <operator pos:start="65:19" pos:end="65:19">=</operator> <name pos:start="65:21" pos:end="65:32"><name pos:start="65:21" pos:end="65:29">FsDrivers</name><index pos:start="65:30" pos:end="65:32">[<expr pos:start="65:31" pos:end="65:31"><name pos:start="65:31" pos:end="65:31">i</name></expr>]</index></name><operator pos:start="65:33" pos:end="65:33">.</operator><name pos:start="65:34" pos:end="65:36">ops</name></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="75:5"><if pos:start="67:5" pos:end="75:5">if <condition pos:start="67:8" pos:end="67:17">(<expr pos:start="67:9" pos:end="67:16"><name pos:start="67:9" pos:end="67:16">writeout</name></expr>)</condition> <block pos:start="67:19" pos:end="75:5">{<block_content pos:start="69:9" pos:end="73:9">

        <if_stmt pos:start="69:9" pos:end="73:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:43">(<expr pos:start="69:13" pos:end="69:42"><operator pos:start="69:13" pos:end="69:13">!</operator><call pos:start="69:14" pos:end="69:42"><name pos:start="69:14" pos:end="69:19">strcmp</name><argument_list pos:start="69:20" pos:end="69:42">(<argument pos:start="69:21" pos:end="69:28"><expr pos:start="69:21" pos:end="69:28"><name pos:start="69:21" pos:end="69:28">writeout</name></expr></argument>, <argument pos:start="69:31" pos:end="69:41"><expr pos:start="69:31" pos:end="69:41"><literal type="string" pos:start="69:31" pos:end="69:41">"immediate"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:45" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:62">

            <expr_stmt pos:start="71:13" pos:end="71:62"><expr pos:start="71:13" pos:end="71:61"><name pos:start="71:13" pos:end="71:34"><name pos:start="71:13" pos:end="71:16">fsle</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:21">fse</name><operator pos:start="71:22" pos:end="71:22">.</operator><name pos:start="71:23" pos:end="71:34">export_flags</name></name> <operator pos:start="71:36" pos:end="71:37">|=</operator> <name pos:start="71:39" pos:end="71:61">V9FS_IMMEDIATE_WRITEOUT</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="77:5" pos:end="85:5"><if pos:start="77:5" pos:end="81:5">if <condition pos:start="77:8" pos:end="77:11">(<expr pos:start="77:9" pos:end="77:10"><name pos:start="77:9" pos:end="77:10">ro</name></expr>)</condition> <block pos:start="77:13" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:46">

        <expr_stmt pos:start="79:9" pos:end="79:46"><expr pos:start="79:9" pos:end="79:45"><name pos:start="79:9" pos:end="79:30"><name pos:start="79:9" pos:end="79:12">fsle</name><operator pos:start="79:13" pos:end="79:14">-&gt;</operator><name pos:start="79:15" pos:end="79:17">fse</name><operator pos:start="79:18" pos:end="79:18">.</operator><name pos:start="79:19" pos:end="79:30">export_flags</name></name> <operator pos:start="79:32" pos:end="79:33">|=</operator> <name pos:start="79:35" pos:end="79:45">V9FS_RDONLY</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="81:7" pos:end="85:5">else <block pos:start="81:12" pos:end="85:5">{<block_content pos:start="83:9" pos:end="83:47">

        <expr_stmt pos:start="83:9" pos:end="83:47"><expr pos:start="83:9" pos:end="83:46"><name pos:start="83:9" pos:end="83:30"><name pos:start="83:9" pos:end="83:12">fsle</name><operator pos:start="83:13" pos:end="83:14">-&gt;</operator><name pos:start="83:15" pos:end="83:17">fse</name><operator pos:start="83:18" pos:end="83:18">.</operator><name pos:start="83:19" pos:end="83:30">export_flags</name></name> <operator pos:start="83:32" pos:end="83:33">&amp;=</operator> <operator pos:start="83:35" pos:end="83:35">~</operator><name pos:start="83:36" pos:end="83:46">V9FS_RDONLY</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="89:5" pos:end="99:5"><if pos:start="89:5" pos:end="99:5">if <condition pos:start="89:8" pos:end="89:34">(<expr pos:start="89:9" pos:end="89:33"><name pos:start="89:9" pos:end="89:33"><name pos:start="89:9" pos:end="89:12">fsle</name><operator pos:start="89:13" pos:end="89:14">-&gt;</operator><name pos:start="89:15" pos:end="89:17">fse</name><operator pos:start="89:18" pos:end="89:18">.</operator><name pos:start="89:19" pos:end="89:21">ops</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:33">parse_opts</name></name></expr>)</condition> <block pos:start="89:36" pos:end="99:5">{<block_content pos:start="91:9" pos:end="97:9">

        <if_stmt pos:start="91:9" pos:end="97:9"><if pos:start="91:9" pos:end="97:9">if <condition pos:start="91:12" pos:end="91:56">(<expr pos:start="91:13" pos:end="91:55"><call pos:start="91:13" pos:end="91:55"><name pos:start="91:13" pos:end="91:37"><name pos:start="91:13" pos:end="91:16">fsle</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:21">fse</name><operator pos:start="91:22" pos:end="91:22">.</operator><name pos:start="91:23" pos:end="91:25">ops</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:37">parse_opts</name></name><argument_list pos:start="91:38" pos:end="91:55">(<argument pos:start="91:39" pos:end="91:42"><expr pos:start="91:39" pos:end="91:42"><name pos:start="91:39" pos:end="91:42">opts</name></expr></argument>, <argument pos:start="91:45" pos:end="91:54"><expr pos:start="91:45" pos:end="91:54"><operator pos:start="91:45" pos:end="91:45">&amp;</operator><name pos:start="91:46" pos:end="91:54"><name pos:start="91:46" pos:end="91:49">fsle</name><operator pos:start="91:50" pos:end="91:51">-&gt;</operator><name pos:start="91:52" pos:end="91:54">fse</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="91:58" pos:end="97:9">{<block_content pos:start="95:13" pos:end="95:22">



            <return pos:start="95:13" pos:end="95:22">return <expr pos:start="95:20" pos:end="95:21"><operator pos:start="95:20" pos:end="95:20">-</operator><literal type="number" pos:start="95:21" pos:end="95:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:54"><expr pos:start="103:5" pos:end="103:53"><call pos:start="103:5" pos:end="103:53"><name pos:start="103:5" pos:end="103:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="103:23" pos:end="103:53">(<argument pos:start="103:24" pos:end="103:40"><expr pos:start="103:24" pos:end="103:40"><operator pos:start="103:24" pos:end="103:24">&amp;</operator><name pos:start="103:25" pos:end="103:40">fsdriver_entries</name></expr></argument>, <argument pos:start="103:43" pos:end="103:46"><expr pos:start="103:43" pos:end="103:46"><name pos:start="103:43" pos:end="103:46">fsle</name></expr></argument>, <argument pos:start="103:49" pos:end="103:52"><expr pos:start="103:49" pos:end="103:52"><name pos:start="103:49" pos:end="103:52">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="105:5" pos:end="105:13">return <expr pos:start="105:12" pos:end="105:12"><literal type="number" pos:start="105:12" pos:end="105:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
