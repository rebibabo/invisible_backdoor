<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25811.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">convert_read</name><parameter_list pos:start="1:24" pos:end="3:37">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:42"><name pos:start="1:25" pos:end="1:39">ImgConvertState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:62"><decl pos:start="1:45" pos:end="1:62"><type pos:start="1:45" pos:end="1:62"><name pos:start="1:45" pos:end="1:51">int64_t</name></type> <name pos:start="1:53" pos:end="1:62">sector_num</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:78"><decl pos:start="1:65" pos:end="1:78"><type pos:start="1:65" pos:end="1:78"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:78">nb_sectors</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:36"><decl pos:start="3:25" pos:end="3:36"><type pos:start="3:25" pos:end="3:36"><name pos:start="3:25" pos:end="3:31">uint8_t</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:36">buf</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="69:1">{<block_content pos:start="7:5" pos:end="67:13">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:63">(<expr pos:start="13:9" pos:end="13:62"><name pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:17">status</name></name> <operator pos:start="13:19" pos:end="13:20">==</operator> <name pos:start="13:22" pos:end="13:29">BLK_ZERO</name> <operator pos:start="13:31" pos:end="13:32">||</operator> <name pos:start="13:34" pos:end="13:42"><name pos:start="13:34" pos:end="13:34">s</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:42">status</name></name> <operator pos:start="13:44" pos:end="13:45">==</operator> <name pos:start="13:47" pos:end="13:62">BLK_BACKING_FILE</name></expr>)</condition> <block pos:start="13:65" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:41"><expr pos:start="21:5" pos:end="21:40"><call pos:start="21:5" pos:end="21:40"><name pos:start="21:5" pos:end="21:10">assert</name><argument_list pos:start="21:11" pos:end="21:40">(<argument pos:start="21:12" pos:end="21:39"><expr pos:start="21:12" pos:end="21:39"><name pos:start="21:12" pos:end="21:21">nb_sectors</name> <operator pos:start="21:23" pos:end="21:24">&lt;=</operator> <name pos:start="21:26" pos:end="21:39"><name pos:start="21:26" pos:end="21:26">s</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:39">buf_sectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="23:5" pos:end="63:5">while <condition pos:start="23:11" pos:end="23:26">(<expr pos:start="23:12" pos:end="23:25"><name pos:start="23:12" pos:end="23:21">nb_sectors</name> <operator pos:start="23:23" pos:end="23:23">&gt;</operator> <literal type="number" pos:start="23:25" pos:end="23:25">0</literal></expr>)</condition> <block pos:start="23:28" pos:end="63:5">{<block_content pos:start="25:9" pos:end="61:36">

        <decl_stmt pos:start="25:9" pos:end="25:26"><decl pos:start="25:9" pos:end="25:25"><type pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:20">BlockBackend</name> <modifier pos:start="25:22" pos:end="25:22">*</modifier></type><name pos:start="25:23" pos:end="25:25">blk</name></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:27"><decl pos:start="27:9" pos:end="27:26"><type pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:15">int64_t</name></type> <name pos:start="27:17" pos:end="27:26">bs_sectors</name></decl>;</decl_stmt>



        <comment type="block" pos:start="31:9" pos:end="35:69">/* In the case of compression with multiple source files, we can get a

         * nb_sectors that spreads into the next part. So we must be able to

         * read across multiple BDSes for one convert_read() call. */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:43"><expr pos:start="37:9" pos:end="37:42"><call pos:start="37:9" pos:end="37:42"><name pos:start="37:9" pos:end="37:27">convert_select_part</name><argument_list pos:start="37:28" pos:end="37:42">(<argument pos:start="37:29" pos:end="37:29"><expr pos:start="37:29" pos:end="37:29"><name pos:start="37:29" pos:end="37:29">s</name></expr></argument>, <argument pos:start="37:32" pos:end="37:41"><expr pos:start="37:32" pos:end="37:41"><name pos:start="37:32" pos:end="37:41">sector_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:33"><expr pos:start="39:9" pos:end="39:32"><name pos:start="39:9" pos:end="39:11">blk</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <name pos:start="39:15" pos:end="39:32"><name pos:start="39:15" pos:end="39:15">s</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:20">src</name><index pos:start="39:21" pos:end="39:32">[<expr pos:start="39:22" pos:end="39:31"><name pos:start="39:22" pos:end="39:31"><name pos:start="39:22" pos:end="39:22">s</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:31">src_cur</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:48"><expr pos:start="41:9" pos:end="41:47"><name pos:start="41:9" pos:end="41:18">bs_sectors</name> <operator pos:start="41:20" pos:end="41:20">=</operator> <name pos:start="41:22" pos:end="41:47"><name pos:start="41:22" pos:end="41:22">s</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:35">src_sectors</name><index pos:start="41:36" pos:end="41:47">[<expr pos:start="41:37" pos:end="41:46"><name pos:start="41:37" pos:end="41:46"><name pos:start="41:37" pos:end="41:37">s</name><operator pos:start="41:38" pos:end="41:39">-&gt;</operator><name pos:start="41:40" pos:end="41:46">src_cur</name></name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:75"><expr pos:start="45:9" pos:end="45:74"><name pos:start="45:9" pos:end="45:9">n</name> <operator pos:start="45:11" pos:end="45:11">=</operator> <call pos:start="45:13" pos:end="45:74"><name pos:start="45:13" pos:end="45:15">MIN</name><argument_list pos:start="45:16" pos:end="45:74">(<argument pos:start="45:17" pos:end="45:26"><expr pos:start="45:17" pos:end="45:26"><name pos:start="45:17" pos:end="45:26">nb_sectors</name></expr></argument>, <argument pos:start="45:29" pos:end="45:73"><expr pos:start="45:29" pos:end="45:73"><name pos:start="45:29" pos:end="45:38">bs_sectors</name> <operator pos:start="45:40" pos:end="45:40">-</operator> <operator pos:start="45:42" pos:end="45:42">(</operator><name pos:start="45:43" pos:end="45:52">sector_num</name> <operator pos:start="45:54" pos:end="45:54">-</operator> <name pos:start="45:56" pos:end="45:72"><name pos:start="45:56" pos:end="45:56">s</name><operator pos:start="45:57" pos:end="45:58">-&gt;</operator><name pos:start="45:59" pos:end="45:72">src_cur_offset</name></name><operator pos:start="45:73" pos:end="45:73">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:68"><expr pos:start="47:9" pos:end="47:67"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:67"><name pos:start="47:15" pos:end="47:22">blk_read</name><argument_list pos:start="47:23" pos:end="47:67">(<argument pos:start="47:24" pos:end="47:26"><expr pos:start="47:24" pos:end="47:26"><name pos:start="47:24" pos:end="47:26">blk</name></expr></argument>, <argument pos:start="47:29" pos:end="47:58"><expr pos:start="47:29" pos:end="47:58"><name pos:start="47:29" pos:end="47:38">sector_num</name> <operator pos:start="47:40" pos:end="47:40">-</operator> <name pos:start="47:42" pos:end="47:58"><name pos:start="47:42" pos:end="47:42">s</name><operator pos:start="47:43" pos:end="47:44">-&gt;</operator><name pos:start="47:45" pos:end="47:58">src_cur_offset</name></name></expr></argument>, <argument pos:start="47:61" pos:end="47:63"><expr pos:start="47:61" pos:end="47:63"><name pos:start="47:61" pos:end="47:63">buf</name></expr></argument>, <argument pos:start="47:66" pos:end="47:66"><expr pos:start="47:66" pos:end="47:66"><name pos:start="47:66" pos:end="47:66">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="53:9"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:20">(<expr pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:17">&lt;</operator> <literal type="number" pos:start="49:19" pos:end="49:19">0</literal></expr>)</condition> <block pos:start="49:22" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:23">

            <return pos:start="51:13" pos:end="51:23">return <expr pos:start="51:20" pos:end="51:22"><name pos:start="51:20" pos:end="51:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:24"><expr pos:start="57:9" pos:end="57:23"><name pos:start="57:9" pos:end="57:18">sector_num</name> <operator pos:start="57:20" pos:end="57:21">+=</operator> <name pos:start="57:23" pos:end="57:23">n</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:24"><expr pos:start="59:9" pos:end="59:23"><name pos:start="59:9" pos:end="59:18">nb_sectors</name> <operator pos:start="59:20" pos:end="59:21">-=</operator> <name pos:start="59:23" pos:end="59:23">n</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:36"><expr pos:start="61:9" pos:end="61:35"><name pos:start="61:9" pos:end="61:11">buf</name> <operator pos:start="61:13" pos:end="61:14">+=</operator> <name pos:start="61:16" pos:end="61:16">n</name> <operator pos:start="61:18" pos:end="61:18">*</operator> <name pos:start="61:20" pos:end="61:35">BDRV_SECTOR_SIZE</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
