<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25218.c" pos:tabs="8"><function pos:start="1:1" pos:end="353:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">dv_decode_video_segment</name><parameter_list pos:start="1:35" pos:end="1:68">(<parameter pos:start="1:36" pos:end="1:56"><decl pos:start="1:36" pos:end="1:56"><type pos:start="1:36" pos:end="1:56"><name pos:start="1:36" pos:end="1:49">AVCodecContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:56">avctx</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:67"><decl pos:start="1:59" pos:end="1:67"><type pos:start="1:59" pos:end="1:67"><name pos:start="1:59" pos:end="1:62">void</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="353:1">{<block_content pos:start="5:5" pos:end="351:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">DVVideoContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:40">= <expr pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">DVwork_chunk</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:28">work_chunk</name> <init pos:start="7:30" pos:end="7:34">= <expr pos:start="7:32" pos:end="7:34"><name pos:start="7:32" pos:end="7:34">arg</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">quant</name></decl>, <decl pos:start="9:16" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:16" pos:end="9:17">dc</name></decl>, <decl pos:start="9:20" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:27">dct_mode</name></decl>, <decl pos:start="9:30" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:30" pos:end="9:35">class1</name></decl>, <decl pos:start="9:38" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:38" pos:end="9:38">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">mb_index</name></decl>, <decl pos:start="11:19" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:19" pos:end="11:22">mb_x</name></decl>, <decl pos:start="11:25" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:25" pos:end="11:28">mb_y</name></decl>, <decl pos:start="11:31" pos:end="11:40"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:31" pos:end="11:40">last_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">y_stride</name></decl>, <decl pos:start="13:19" pos:end="13:26"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:19" pos:end="13:26">linesize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">DCTELEM</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:18">block</name></decl>, <decl pos:start="15:21" pos:end="15:27"><type ref="prev" pos:start="15:5" pos:end="15:13"><modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:27">block1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">c_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:19"><decl pos:start="19:5" pos:end="19:18"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">uint8_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:18">y_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:27"><decl pos:start="21:5" pos:end="21:26"><type pos:start="21:5" pos:end="21:19"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:17">uint8_t</name> <modifier pos:start="21:19" pos:end="21:19">*</modifier></type><name pos:start="21:20" pos:end="21:26">buf_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:28"><decl pos:start="23:5" pos:end="23:20"><type pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:17">PutBitContext</name></type> <name pos:start="23:19" pos:end="23:20">pb</name></decl>, <decl pos:start="23:23" pos:end="23:27"><type ref="prev" pos:start="23:5" pos:end="23:17"/><name pos:start="23:23" pos:end="23:27">vs_pb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:21"><decl pos:start="25:5" pos:end="25:20"><type pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:17">GetBitContext</name></type> <name pos:start="25:19" pos:end="25:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:49"><decl pos:start="27:5" pos:end="27:37"><type pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:13">BlockInfo</name></type> <name pos:start="27:15" pos:end="27:37"><name pos:start="27:15" pos:end="27:21">mb_data</name><index pos:start="27:22" pos:end="27:37">[<expr pos:start="27:23" pos:end="27:36"><literal type="number" pos:start="27:23" pos:end="27:23">5</literal> <operator pos:start="27:25" pos:end="27:25">*</operator> <name pos:start="27:27" pos:end="27:36">DV_MAX_BPM</name></expr>]</index></name></decl>, <decl pos:start="27:40" pos:end="27:42"><type ref="prev" pos:start="27:5" pos:end="27:13"><modifier pos:start="27:40" pos:end="27:40">*</modifier></type><name pos:start="27:41" pos:end="27:42">mb</name></decl>, <decl pos:start="27:45" pos:end="27:48"><type ref="prev" pos:start="27:5" pos:end="27:13"><modifier pos:start="27:45" pos:end="27:45">*</modifier></type><name pos:start="27:46" pos:end="27:48">mb1</name></decl>;</decl_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:60"><expr pos:start="29:5" pos:end="29:59"><call pos:start="29:5" pos:end="29:59"><name pos:start="29:5" pos:end="29:20">LOCAL_ALIGNED_16</name><argument_list pos:start="29:21" pos:end="29:59">(<argument pos:start="29:22" pos:end="29:28"><expr pos:start="29:22" pos:end="29:28"><name pos:start="29:22" pos:end="29:28">DCTELEM</name></expr></argument>, <argument pos:start="29:31" pos:end="29:36"><expr pos:start="29:31" pos:end="29:36"><name pos:start="29:31" pos:end="29:36">sblock</name></expr></argument>, <argument pos:start="29:39" pos:end="29:52"><expr pos:start="29:39" pos:end="29:52"><index pos:start="29:39" pos:end="29:52">[<expr pos:start="29:40" pos:end="29:51"><literal type="number" pos:start="29:40" pos:end="29:40">5</literal><operator pos:start="29:41" pos:end="29:41">*</operator><name pos:start="29:42" pos:end="29:51">DV_MAX_BPM</name></expr>]</index></expr></argument>, <argument pos:start="29:55" pos:end="29:58"><expr pos:start="29:55" pos:end="29:58"><index pos:start="29:55" pos:end="29:58">[<expr pos:start="29:56" pos:end="29:57"><literal type="number" pos:start="29:56" pos:end="29:57">64</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:55"><expr pos:start="31:5" pos:end="31:54"><call pos:start="31:5" pos:end="31:54"><name pos:start="31:5" pos:end="31:20">LOCAL_ALIGNED_16</name><argument_list pos:start="31:21" pos:end="31:54">(<argument pos:start="31:22" pos:end="31:28"><expr pos:start="31:22" pos:end="31:28"><name pos:start="31:22" pos:end="31:28">uint8_t</name></expr></argument>, <argument pos:start="31:31" pos:end="31:43"><expr pos:start="31:31" pos:end="31:43"><name pos:start="31:31" pos:end="31:43">mb_bit_buffer</name></expr></argument>, <argument pos:start="31:46" pos:end="31:53"><expr pos:start="31:46" pos:end="31:53"><index pos:start="31:46" pos:end="31:53">[<expr pos:start="31:47" pos:end="31:52"><literal type="number" pos:start="31:47" pos:end="31:50">80</literal> <operator pos:start="31:50" pos:end="31:50">+</operator> <literal type="number" pos:start="31:52" pos:end="31:52">4</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="31:57" pos:end="31:78">/* allow some slack */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:59"><expr pos:start="33:5" pos:end="33:58"><call pos:start="33:5" pos:end="33:58"><name pos:start="33:5" pos:end="33:20">LOCAL_ALIGNED_16</name><argument_list pos:start="33:21" pos:end="33:58">(<argument pos:start="33:22" pos:end="33:28"><expr pos:start="33:22" pos:end="33:28"><name pos:start="33:22" pos:end="33:28">uint8_t</name></expr></argument>, <argument pos:start="33:31" pos:end="33:43"><expr pos:start="33:31" pos:end="33:43"><name pos:start="33:31" pos:end="33:43">vs_bit_buffer</name></expr></argument>, <argument pos:start="33:46" pos:end="33:57"><expr pos:start="33:46" pos:end="33:57"><index pos:start="33:46" pos:end="33:57">[<expr pos:start="33:47" pos:end="33:56"><literal type="number" pos:start="33:47" pos:end="33:47">5</literal> <operator pos:start="33:49" pos:end="33:49">*</operator> <literal type="number" pos:start="33:51" pos:end="33:54">80</literal> <operator pos:start="33:54" pos:end="33:54">+</operator> <literal type="number" pos:start="33:56" pos:end="33:56">4</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="33:61" pos:end="33:82">/* allow some slack */</comment>

    <decl_stmt pos:start="35:5" pos:end="35:50"><decl pos:start="35:5" pos:end="35:49"><type pos:start="35:5" pos:end="35:13"><specifier pos:start="35:5" pos:end="35:9">const</specifier> <name pos:start="35:11" pos:end="35:13">int</name></type> <name pos:start="35:15" pos:end="35:28">log2_blocksize</name> <init pos:start="35:30" pos:end="35:49">= <expr pos:start="35:32" pos:end="35:49"><literal type="number" pos:start="35:32" pos:end="35:33">3</literal><operator pos:start="35:33" pos:end="35:33">-</operator><name pos:start="35:34" pos:end="35:49"><name pos:start="35:34" pos:end="35:34">s</name><operator pos:start="35:35" pos:end="35:36">-&gt;</operator><name pos:start="35:37" pos:end="35:41">avctx</name><operator pos:start="35:42" pos:end="35:43">-&gt;</operator><name pos:start="35:44" pos:end="35:49">lowres</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:25"><decl pos:start="37:5" pos:end="37:24"><type pos:start="37:5" pos:end="37:7"><name pos:start="37:5" pos:end="37:7">int</name></type> <name pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:21">is_field_mode</name><index pos:start="37:22" pos:end="37:24">[<expr pos:start="37:23" pos:end="37:23"><literal type="number" pos:start="37:23" pos:end="37:23">5</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:44"><expr pos:start="41:5" pos:end="41:43"><call pos:start="41:5" pos:end="41:43"><name pos:start="41:5" pos:end="41:10">assert</name><argument_list pos:start="41:11" pos:end="41:43">(<argument pos:start="41:12" pos:end="41:42"><expr pos:start="41:12" pos:end="41:42"><operator pos:start="41:12" pos:end="41:12">(</operator><operator pos:start="41:13" pos:end="41:13">(</operator><operator pos:start="41:14" pos:end="41:14">(</operator><name pos:start="41:15" pos:end="41:17">int</name><operator pos:start="41:18" pos:end="41:18">)</operator><name pos:start="41:19" pos:end="41:31">mb_bit_buffer</name><operator pos:start="41:32" pos:end="41:32">)</operator> <operator pos:start="41:34" pos:end="41:34">&amp;</operator> <literal type="number" pos:start="41:36" pos:end="41:36">7</literal><operator pos:start="41:37" pos:end="41:37">)</operator> <operator pos:start="41:39" pos:end="41:40">==</operator> <literal type="number" pos:start="41:42" pos:end="41:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:44"><expr pos:start="43:5" pos:end="43:43"><call pos:start="43:5" pos:end="43:43"><name pos:start="43:5" pos:end="43:10">assert</name><argument_list pos:start="43:11" pos:end="43:43">(<argument pos:start="43:12" pos:end="43:42"><expr pos:start="43:12" pos:end="43:42"><operator pos:start="43:12" pos:end="43:12">(</operator><operator pos:start="43:13" pos:end="43:13">(</operator><operator pos:start="43:14" pos:end="43:14">(</operator><name pos:start="43:15" pos:end="43:17">int</name><operator pos:start="43:18" pos:end="43:18">)</operator><name pos:start="43:19" pos:end="43:31">vs_bit_buffer</name><operator pos:start="43:32" pos:end="43:32">)</operator> <operator pos:start="43:34" pos:end="43:34">&amp;</operator> <literal type="number" pos:start="43:36" pos:end="43:36">7</literal><operator pos:start="43:37" pos:end="43:37">)</operator> <operator pos:start="43:39" pos:end="43:40">==</operator> <literal type="number" pos:start="43:42" pos:end="43:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:52"><expr pos:start="47:5" pos:end="47:51"><call pos:start="47:5" pos:end="47:51"><name pos:start="47:5" pos:end="47:10">memset</name><argument_list pos:start="47:11" pos:end="47:51">(<argument pos:start="47:12" pos:end="47:17"><expr pos:start="47:12" pos:end="47:17"><name pos:start="47:12" pos:end="47:17">sblock</name></expr></argument>, <argument pos:start="47:20" pos:end="47:20"><expr pos:start="47:20" pos:end="47:20"><literal type="number" pos:start="47:20" pos:end="47:20">0</literal></expr></argument>, <argument pos:start="47:23" pos:end="47:50"><expr pos:start="47:23" pos:end="47:50"><literal type="number" pos:start="47:23" pos:end="47:23">5</literal><operator pos:start="47:24" pos:end="47:24">*</operator><name pos:start="47:25" pos:end="47:34">DV_MAX_BPM</name><operator pos:start="47:35" pos:end="47:35">*</operator><sizeof pos:start="47:36" pos:end="47:50">sizeof<argument_list pos:start="47:42" pos:end="47:50">(<argument pos:start="47:43" pos:end="47:49"><expr pos:start="47:43" pos:end="47:49"><operator pos:start="47:43" pos:end="47:43">*</operator><name pos:start="47:44" pos:end="47:49">sblock</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:55">/* pass 1: read DC and AC coefficients in blocks */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:49"><expr pos:start="53:5" pos:end="53:48"><name pos:start="53:5" pos:end="53:11">buf_ptr</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <operator pos:start="53:15" pos:end="53:15">&amp;</operator><name pos:start="53:16" pos:end="53:48"><name pos:start="53:16" pos:end="53:16">s</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:21">buf</name><index pos:start="53:22" pos:end="53:48">[<expr pos:start="53:23" pos:end="53:47"><name pos:start="53:23" pos:end="53:44"><name pos:start="53:23" pos:end="53:32">work_chunk</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:44">buf_offset</name></name><operator pos:start="53:45" pos:end="53:45">*</operator><literal type="number" pos:start="53:46" pos:end="53:47">80</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:28"><expr pos:start="55:5" pos:end="55:27"><name pos:start="55:5" pos:end="55:10">block1</name>  <operator pos:start="55:13" pos:end="55:13">=</operator> <operator pos:start="55:15" pos:end="55:15">&amp;</operator><name pos:start="55:16" pos:end="55:27"><name pos:start="55:16" pos:end="55:21">sblock</name><index pos:start="55:22" pos:end="55:24">[<expr pos:start="55:23" pos:end="55:23"><literal type="number" pos:start="55:23" pos:end="55:23">0</literal></expr>]</index><index pos:start="55:25" pos:end="55:27">[<expr pos:start="55:26" pos:end="55:26"><literal type="number" pos:start="55:26" pos:end="55:26">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:22"><expr pos:start="57:5" pos:end="57:21"><name pos:start="57:5" pos:end="57:7">mb1</name>     <operator pos:start="57:13" pos:end="57:13">=</operator> <name pos:start="57:15" pos:end="57:21">mb_data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:49"><expr pos:start="59:5" pos:end="59:48"><call pos:start="59:5" pos:end="59:48"><name pos:start="59:5" pos:end="59:17">init_put_bits</name><argument_list pos:start="59:18" pos:end="59:48">(<argument pos:start="59:19" pos:end="59:24"><expr pos:start="59:19" pos:end="59:24"><operator pos:start="59:19" pos:end="59:19">&amp;</operator><name pos:start="59:20" pos:end="59:24">vs_pb</name></expr></argument>, <argument pos:start="59:27" pos:end="59:39"><expr pos:start="59:27" pos:end="59:39"><name pos:start="59:27" pos:end="59:39">vs_bit_buffer</name></expr></argument>, <argument pos:start="59:42" pos:end="59:47"><expr pos:start="59:42" pos:end="59:47"><literal type="number" pos:start="59:42" pos:end="59:42">5</literal> <operator pos:start="59:44" pos:end="59:44">*</operator> <literal type="number" pos:start="59:46" pos:end="59:47">80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="61:5" pos:end="193:5">for <control pos:start="61:9" pos:end="61:96">(<init pos:start="61:10" pos:end="61:22"><expr pos:start="61:10" pos:end="61:21"><name pos:start="61:10" pos:end="61:17">mb_index</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <literal type="number" pos:start="61:21" pos:end="61:21">0</literal></expr>;</init> <condition pos:start="61:24" pos:end="61:36"><expr pos:start="61:24" pos:end="61:35"><name pos:start="61:24" pos:end="61:31">mb_index</name> <operator pos:start="61:33" pos:end="61:33">&lt;</operator> <literal type="number" pos:start="61:35" pos:end="61:35">5</literal></expr>;</condition> <incr pos:start="61:38" pos:end="61:95"><expr pos:start="61:38" pos:end="61:47"><name pos:start="61:38" pos:end="61:45">mb_index</name><operator pos:start="61:46" pos:end="61:47">++</operator></expr><operator pos:start="61:48" pos:end="61:48">,</operator> <expr pos:start="61:50" pos:end="61:67"><name pos:start="61:50" pos:end="61:52">mb1</name> <operator pos:start="61:54" pos:end="61:55">+=</operator> <name pos:start="61:57" pos:end="61:67"><name pos:start="61:57" pos:end="61:57">s</name><operator pos:start="61:58" pos:end="61:59">-&gt;</operator><name pos:start="61:60" pos:end="61:62">sys</name><operator pos:start="61:63" pos:end="61:64">-&gt;</operator><name pos:start="61:65" pos:end="61:67">bpm</name></name></expr><operator pos:start="61:68" pos:end="61:68">,</operator> <expr pos:start="61:70" pos:end="61:95"><name pos:start="61:70" pos:end="61:75">block1</name> <operator pos:start="61:77" pos:end="61:78">+=</operator> <name pos:start="61:80" pos:end="61:90"><name pos:start="61:80" pos:end="61:80">s</name><operator pos:start="61:81" pos:end="61:82">-&gt;</operator><name pos:start="61:83" pos:end="61:85">sys</name><operator pos:start="61:86" pos:end="61:87">-&gt;</operator><name pos:start="61:88" pos:end="61:90">bpm</name></name> <operator pos:start="61:92" pos:end="61:92">*</operator> <literal type="number" pos:start="61:94" pos:end="61:95">64</literal></expr></incr>)</control> <block pos:start="61:98" pos:end="193:5">{<block_content pos:start="65:9" pos:end="191:34">

        <comment type="block" pos:start="63:9" pos:end="63:25">/* skip header */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:34"><expr pos:start="65:9" pos:end="65:33"><name pos:start="65:9" pos:end="65:13">quant</name> <operator pos:start="65:15" pos:end="65:15">=</operator> <name pos:start="65:17" pos:end="65:26"><name pos:start="65:17" pos:end="65:23">buf_ptr</name><index pos:start="65:24" pos:end="65:26">[<expr pos:start="65:25" pos:end="65:25"><literal type="number" pos:start="65:25" pos:end="65:25">3</literal></expr>]</index></name> <operator pos:start="65:28" pos:end="65:28">&amp;</operator> <literal type="number" pos:start="65:30" pos:end="65:33">0x0f</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:21"><expr pos:start="67:9" pos:end="67:20"><name pos:start="67:9" pos:end="67:15">buf_ptr</name> <operator pos:start="67:17" pos:end="67:18">+=</operator> <literal type="number" pos:start="67:20" pos:end="67:20">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:46"><expr pos:start="69:9" pos:end="69:45"><call pos:start="69:9" pos:end="69:45"><name pos:start="69:9" pos:end="69:21">init_put_bits</name><argument_list pos:start="69:22" pos:end="69:45">(<argument pos:start="69:23" pos:end="69:25"><expr pos:start="69:23" pos:end="69:25"><operator pos:start="69:23" pos:end="69:23">&amp;</operator><name pos:start="69:24" pos:end="69:25">pb</name></expr></argument>, <argument pos:start="69:28" pos:end="69:40"><expr pos:start="69:28" pos:end="69:40"><name pos:start="69:28" pos:end="69:40">mb_bit_buffer</name></expr></argument>, <argument pos:start="69:43" pos:end="69:44"><expr pos:start="69:43" pos:end="69:44"><literal type="number" pos:start="69:43" pos:end="69:44">80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:20"><expr pos:start="71:9" pos:end="71:19"><name pos:start="71:9" pos:end="71:10">mb</name>    <operator pos:start="71:15" pos:end="71:15">=</operator> <name pos:start="71:17" pos:end="71:19">mb1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:23"><expr pos:start="73:9" pos:end="73:22"><name pos:start="73:9" pos:end="73:13">block</name> <operator pos:start="73:15" pos:end="73:15">=</operator> <name pos:start="73:17" pos:end="73:22">block1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:36"><expr pos:start="75:9" pos:end="75:35"><name pos:start="75:9" pos:end="75:31"><name pos:start="75:9" pos:end="75:21">is_field_mode</name><index pos:start="75:22" pos:end="75:31">[<expr pos:start="75:23" pos:end="75:30"><name pos:start="75:23" pos:end="75:30">mb_index</name></expr>]</index></name> <operator pos:start="75:33" pos:end="75:33">=</operator> <literal type="number" pos:start="75:35" pos:end="75:35">0</literal></expr>;</expr_stmt>

        <for pos:start="77:9" pos:end="153:9">for <control pos:start="77:13" pos:end="77:41">(<init pos:start="77:14" pos:end="77:19"><expr pos:start="77:14" pos:end="77:18"><name pos:start="77:14" pos:end="77:14">j</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <literal type="number" pos:start="77:18" pos:end="77:18">0</literal></expr>;</init> <condition pos:start="77:21" pos:end="77:36"><expr pos:start="77:21" pos:end="77:35"><name pos:start="77:21" pos:end="77:21">j</name> <operator pos:start="77:23" pos:end="77:23">&lt;</operator> <name pos:start="77:25" pos:end="77:35"><name pos:start="77:25" pos:end="77:25">s</name><operator pos:start="77:26" pos:end="77:27">-&gt;</operator><name pos:start="77:28" pos:end="77:30">sys</name><operator pos:start="77:31" pos:end="77:32">-&gt;</operator><name pos:start="77:33" pos:end="77:35">bpm</name></name></expr>;</condition> <incr pos:start="77:38" pos:end="77:40"><expr pos:start="77:38" pos:end="77:40"><name pos:start="77:38" pos:end="77:38">j</name><operator pos:start="77:39" pos:end="77:40">++</operator></expr></incr>)</control> <block pos:start="77:43" pos:end="153:9">{<block_content pos:start="79:13" pos:end="151:17">

            <expr_stmt pos:start="79:13" pos:end="79:48"><expr pos:start="79:13" pos:end="79:47"><name pos:start="79:13" pos:end="79:22">last_index</name> <operator pos:start="79:24" pos:end="79:24">=</operator> <name pos:start="79:26" pos:end="79:47"><name pos:start="79:26" pos:end="79:26">s</name><operator pos:start="79:27" pos:end="79:28">-&gt;</operator><name pos:start="79:29" pos:end="79:31">sys</name><operator pos:start="79:32" pos:end="79:33">-&gt;</operator><name pos:start="79:34" pos:end="79:44">block_sizes</name><index pos:start="79:45" pos:end="79:47">[<expr pos:start="79:46" pos:end="79:46"><name pos:start="79:46" pos:end="79:46">j</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:52"><expr pos:start="81:13" pos:end="81:51"><call pos:start="81:13" pos:end="81:51"><name pos:start="81:13" pos:end="81:25">init_get_bits</name><argument_list pos:start="81:26" pos:end="81:51">(<argument pos:start="81:27" pos:end="81:29"><expr pos:start="81:27" pos:end="81:29"><operator pos:start="81:27" pos:end="81:27">&amp;</operator><name pos:start="81:28" pos:end="81:29">gb</name></expr></argument>, <argument pos:start="81:32" pos:end="81:38"><expr pos:start="81:32" pos:end="81:38"><name pos:start="81:32" pos:end="81:38">buf_ptr</name></expr></argument>, <argument pos:start="81:41" pos:end="81:50"><expr pos:start="81:41" pos:end="81:50"><name pos:start="81:41" pos:end="81:50">last_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="85:13" pos:end="85:28">/* get the DC */</comment>

            <expr_stmt pos:start="87:13" pos:end="87:41"><expr pos:start="87:13" pos:end="87:40"><name pos:start="87:13" pos:end="87:14">dc</name>       <operator pos:start="87:22" pos:end="87:22">=</operator> <call pos:start="87:24" pos:end="87:40"><name pos:start="87:24" pos:end="87:32">get_sbits</name><argument_list pos:start="87:33" pos:end="87:40">(<argument pos:start="87:34" pos:end="87:36"><expr pos:start="87:34" pos:end="87:36"><operator pos:start="87:34" pos:end="87:34">&amp;</operator><name pos:start="87:35" pos:end="87:36">gb</name></expr></argument>, <argument pos:start="87:39" pos:end="87:39"><expr pos:start="87:39" pos:end="87:39"><literal type="number" pos:start="87:39" pos:end="87:39">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:38"><expr pos:start="89:13" pos:end="89:37"><name pos:start="89:13" pos:end="89:20">dct_mode</name> <operator pos:start="89:22" pos:end="89:22">=</operator> <call pos:start="89:24" pos:end="89:37"><name pos:start="89:24" pos:end="89:32">get_bits1</name><argument_list pos:start="89:33" pos:end="89:37">(<argument pos:start="89:34" pos:end="89:36"><expr pos:start="89:34" pos:end="89:36"><operator pos:start="89:34" pos:end="89:34">&amp;</operator><name pos:start="89:35" pos:end="89:36">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:40"><expr pos:start="91:13" pos:end="91:39"><name pos:start="91:13" pos:end="91:18">class1</name>   <operator pos:start="91:22" pos:end="91:22">=</operator> <call pos:start="91:24" pos:end="91:39"><name pos:start="91:24" pos:end="91:31">get_bits</name><argument_list pos:start="91:32" pos:end="91:39">(<argument pos:start="91:33" pos:end="91:35"><expr pos:start="91:33" pos:end="91:35"><operator pos:start="91:33" pos:end="91:33">&amp;</operator><name pos:start="91:34" pos:end="91:35">gb</name></expr></argument>, <argument pos:start="91:38" pos:end="91:38"><expr pos:start="91:38" pos:end="91:38"><literal type="number" pos:start="91:38" pos:end="91:38">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="93:13" pos:end="113:13"><if pos:start="93:13" pos:end="103:13">if <condition pos:start="93:16" pos:end="93:41">(<expr pos:start="93:17" pos:end="93:40"><call pos:start="93:17" pos:end="93:40"><name pos:start="93:17" pos:end="93:32">DV_PROFILE_IS_HD</name><argument_list pos:start="93:33" pos:end="93:40">(<argument pos:start="93:34" pos:end="93:39"><expr pos:start="93:34" pos:end="93:39"><name pos:start="93:34" pos:end="93:39"><name pos:start="93:34" pos:end="93:34">s</name><operator pos:start="93:35" pos:end="93:36">-&gt;</operator><name pos:start="93:37" pos:end="93:39">sys</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:43" pos:end="103:13">{<block_content pos:start="95:17" pos:end="101:58">

                <expr_stmt pos:start="95:17" pos:end="95:50"><expr pos:start="95:17" pos:end="95:49"><name pos:start="95:17" pos:end="95:28"><name pos:start="95:17" pos:end="95:18">mb</name><operator pos:start="95:19" pos:end="95:20">-&gt;</operator><name pos:start="95:21" pos:end="95:28">idct_put</name></name>     <operator pos:start="95:34" pos:end="95:34">=</operator> <name pos:start="95:36" pos:end="95:49"><name pos:start="95:36" pos:end="95:36">s</name><operator pos:start="95:37" pos:end="95:38">-&gt;</operator><name pos:start="95:39" pos:end="95:46">idct_put</name><index pos:start="95:47" pos:end="95:49">[<expr pos:start="95:48" pos:end="95:48"><literal type="number" pos:start="95:48" pos:end="95:48">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:51"><expr pos:start="97:17" pos:end="97:50"><name pos:start="97:17" pos:end="97:30"><name pos:start="97:17" pos:end="97:18">mb</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:30">scan_table</name></name>   <operator pos:start="97:34" pos:end="97:34">=</operator> <name pos:start="97:36" pos:end="97:50"><name pos:start="97:36" pos:end="97:36">s</name><operator pos:start="97:37" pos:end="97:38">-&gt;</operator><name pos:start="97:39" pos:end="97:47">dv_zigzag</name><index pos:start="97:48" pos:end="97:50">[<expr pos:start="97:49" pos:end="97:49"><literal type="number" pos:start="97:49" pos:end="97:49">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:100"><expr pos:start="99:17" pos:end="99:99"><name pos:start="99:17" pos:end="99:32"><name pos:start="99:17" pos:end="99:18">mb</name><operator pos:start="99:19" pos:end="99:20">-&gt;</operator><name pos:start="99:21" pos:end="99:32">factor_table</name></name> <operator pos:start="99:34" pos:end="99:34">=</operator> <operator pos:start="99:36" pos:end="99:36">&amp;</operator><name pos:start="99:37" pos:end="99:99"><name pos:start="99:37" pos:end="99:37">s</name><operator pos:start="99:38" pos:end="99:39">-&gt;</operator><name pos:start="99:40" pos:end="99:42">sys</name><operator pos:start="99:43" pos:end="99:44">-&gt;</operator><name pos:start="99:45" pos:end="99:55">idct_factor</name><index pos:start="99:56" pos:end="99:99">[<expr pos:start="99:57" pos:end="99:98"><operator pos:start="99:57" pos:end="99:57">(</operator><name pos:start="99:58" pos:end="99:58">j</name> <operator pos:start="99:60" pos:end="99:61">&gt;=</operator> <literal type="number" pos:start="99:63" pos:end="99:63">4</literal><operator pos:start="99:64" pos:end="99:64">)</operator><operator pos:start="99:65" pos:end="99:65">*</operator><literal type="number" pos:start="99:66" pos:end="99:66">4</literal><operator pos:start="99:67" pos:end="99:67">*</operator><literal type="number" pos:start="99:68" pos:end="99:69">16</literal><operator pos:start="99:70" pos:end="99:70">*</operator><literal type="number" pos:start="99:71" pos:end="99:74">64</literal> <operator pos:start="99:74" pos:end="99:74">+</operator> <name pos:start="99:76" pos:end="99:81">class1</name><operator pos:start="99:82" pos:end="99:82">*</operator><literal type="number" pos:start="99:83" pos:end="99:84">16</literal><operator pos:start="99:85" pos:end="99:85">*</operator><literal type="number" pos:start="99:86" pos:end="99:89">64</literal> <operator pos:start="99:89" pos:end="99:89">+</operator> <name pos:start="99:91" pos:end="99:95">quant</name><operator pos:start="99:96" pos:end="99:96">*</operator><literal type="number" pos:start="99:97" pos:end="99:98">64</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:58"><expr pos:start="101:17" pos:end="101:57"><name pos:start="101:17" pos:end="101:39"><name pos:start="101:17" pos:end="101:29">is_field_mode</name><index pos:start="101:30" pos:end="101:39">[<expr pos:start="101:31" pos:end="101:38"><name pos:start="101:31" pos:end="101:38">mb_index</name></expr>]</index></name> <operator pos:start="101:41" pos:end="101:42">|=</operator> <operator pos:start="101:44" pos:end="101:44">!</operator><name pos:start="101:45" pos:end="101:45">j</name> <operator pos:start="101:47" pos:end="101:48">&amp;&amp;</operator> <name pos:start="101:50" pos:end="101:57">dct_mode</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="103:15" pos:end="113:13">else <block pos:start="103:20" pos:end="113:13">{<block_content pos:start="105:17" pos:end="111:94">

                <expr_stmt pos:start="105:17" pos:end="105:80"><expr pos:start="105:17" pos:end="105:79"><name pos:start="105:17" pos:end="105:28"><name pos:start="105:17" pos:end="105:18">mb</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:28">idct_put</name></name>     <operator pos:start="105:34" pos:end="105:34">=</operator> <name pos:start="105:36" pos:end="105:79"><name pos:start="105:36" pos:end="105:36">s</name><operator pos:start="105:37" pos:end="105:38">-&gt;</operator><name pos:start="105:39" pos:end="105:46">idct_put</name><index pos:start="105:47" pos:end="105:79">[<expr pos:start="105:48" pos:end="105:78"><name pos:start="105:48" pos:end="105:55">dct_mode</name> <operator pos:start="105:57" pos:end="105:58">&amp;&amp;</operator> <name pos:start="105:60" pos:end="105:73">log2_blocksize</name> <operator pos:start="105:75" pos:end="105:76">==</operator> <literal type="number" pos:start="105:78" pos:end="105:78">3</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:58"><expr pos:start="107:17" pos:end="107:57"><name pos:start="107:17" pos:end="107:30"><name pos:start="107:17" pos:end="107:18">mb</name><operator pos:start="107:19" pos:end="107:20">-&gt;</operator><name pos:start="107:21" pos:end="107:30">scan_table</name></name>   <operator pos:start="107:34" pos:end="107:34">=</operator> <name pos:start="107:36" pos:end="107:57"><name pos:start="107:36" pos:end="107:36">s</name><operator pos:start="107:37" pos:end="107:38">-&gt;</operator><name pos:start="107:39" pos:end="107:47">dv_zigzag</name><index pos:start="107:48" pos:end="107:57">[<expr pos:start="107:49" pos:end="107:56"><name pos:start="107:49" pos:end="107:56">dct_mode</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="111:94"><expr pos:start="109:17" pos:end="111:93"><name pos:start="109:17" pos:end="109:32"><name pos:start="109:17" pos:end="109:18">mb</name><operator pos:start="109:19" pos:end="109:20">-&gt;</operator><name pos:start="109:21" pos:end="109:32">factor_table</name></name> <operator pos:start="109:34" pos:end="109:34">=</operator> <operator pos:start="109:36" pos:end="109:36">&amp;</operator><name pos:start="109:37" pos:end="111:93"><name pos:start="109:37" pos:end="109:37">s</name><operator pos:start="109:38" pos:end="109:39">-&gt;</operator><name pos:start="109:40" pos:end="109:42">sys</name><operator pos:start="109:43" pos:end="109:44">-&gt;</operator><name pos:start="109:45" pos:end="109:55">idct_factor</name><index pos:start="109:56" pos:end="111:93">[<expr pos:start="109:57" pos:end="111:92"><operator pos:start="109:57" pos:end="109:57">(</operator><name pos:start="109:58" pos:end="109:63">class1</name> <operator pos:start="109:65" pos:end="109:66">==</operator> <literal type="number" pos:start="109:68" pos:end="109:68">3</literal><operator pos:start="109:69" pos:end="109:69">)</operator><operator pos:start="109:70" pos:end="109:70">*</operator><literal type="number" pos:start="109:71" pos:end="109:71">2</literal><operator pos:start="109:72" pos:end="109:72">*</operator><literal type="number" pos:start="109:73" pos:end="109:74">22</literal><operator pos:start="109:75" pos:end="109:75">*</operator><literal type="number" pos:start="109:76" pos:end="109:79">64</literal> <operator pos:start="109:79" pos:end="109:79">+</operator> <name pos:start="109:81" pos:end="109:88">dct_mode</name><operator pos:start="109:89" pos:end="109:89">*</operator><literal type="number" pos:start="109:90" pos:end="109:91">22</literal><operator pos:start="109:92" pos:end="109:92">*</operator><literal type="number" pos:start="109:93" pos:end="109:96">64</literal> <operator pos:start="109:96" pos:end="109:96">+</operator>

                                                        <operator pos:start="111:57" pos:end="111:57">(</operator><name pos:start="111:58" pos:end="111:62">quant</name> <operator pos:start="111:64" pos:end="111:64">+</operator> <name pos:start="111:66" pos:end="111:88"><name pos:start="111:66" pos:end="111:80">dv_quant_offset</name><index pos:start="111:81" pos:end="111:88">[<expr pos:start="111:82" pos:end="111:87"><name pos:start="111:82" pos:end="111:87">class1</name></expr>]</index></name><operator pos:start="111:89" pos:end="111:89">)</operator><operator pos:start="111:90" pos:end="111:90">*</operator><literal type="number" pos:start="111:91" pos:end="111:92">64</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:25"><expr pos:start="115:13" pos:end="115:24"><name pos:start="115:13" pos:end="115:14">dc</name> <operator pos:start="115:16" pos:end="115:16">=</operator> <name pos:start="115:18" pos:end="115:19">dc</name> <operator pos:start="115:21" pos:end="115:22">&lt;&lt;</operator> <literal type="number" pos:start="115:24" pos:end="115:24">2</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="117:13" pos:end="119:31">/* convert to unsigned because 128 is not added in the

               standard IDCT */</comment>

            <expr_stmt pos:start="121:13" pos:end="121:23"><expr pos:start="121:13" pos:end="121:22"><name pos:start="121:13" pos:end="121:14">dc</name> <operator pos:start="121:16" pos:end="121:17">+=</operator> <literal type="number" pos:start="121:19" pos:end="121:22">1024</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:26"><expr pos:start="123:13" pos:end="123:25"><name pos:start="123:13" pos:end="123:20"><name pos:start="123:13" pos:end="123:17">block</name><index pos:start="123:18" pos:end="123:20">[<expr pos:start="123:19" pos:end="123:19"><literal type="number" pos:start="123:19" pos:end="123:19">0</literal></expr>]</index></name> <operator pos:start="123:22" pos:end="123:22">=</operator> <name pos:start="123:24" pos:end="123:25">dc</name></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:39"><expr pos:start="125:13" pos:end="125:38"><name pos:start="125:13" pos:end="125:19">buf_ptr</name> <operator pos:start="125:21" pos:end="125:22">+=</operator> <name pos:start="125:24" pos:end="125:33">last_index</name> <operator pos:start="125:35" pos:end="125:36">&gt;&gt;</operator> <literal type="number" pos:start="125:38" pos:end="125:38">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:38"><expr pos:start="127:13" pos:end="127:37"><name pos:start="127:13" pos:end="127:19"><name pos:start="127:13" pos:end="127:14">mb</name><operator pos:start="127:15" pos:end="127:16">-&gt;</operator><name pos:start="127:17" pos:end="127:19">pos</name></name>               <operator pos:start="127:35" pos:end="127:35">=</operator> <literal type="number" pos:start="127:37" pos:end="127:37">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:38"><expr pos:start="129:13" pos:end="129:37"><name pos:start="129:13" pos:end="129:33"><name pos:start="129:13" pos:end="129:14">mb</name><operator pos:start="129:15" pos:end="129:16">-&gt;</operator><name pos:start="129:17" pos:end="129:33">partial_bit_count</name></name> <operator pos:start="129:35" pos:end="129:35">=</operator> <literal type="number" pos:start="129:37" pos:end="129:37">0</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="133:13" pos:end="133:61"><expr pos:start="133:13" pos:end="133:60"><call pos:start="133:13" pos:end="133:60"><name pos:start="133:13" pos:end="133:19">av_dlog</name><argument_list pos:start="133:20" pos:end="133:60">(<argument pos:start="133:21" pos:end="133:25"><expr pos:start="133:21" pos:end="133:25"><name pos:start="133:21" pos:end="133:25">avctx</name></expr></argument>, <argument pos:start="133:28" pos:end="133:46"><expr pos:start="133:28" pos:end="133:46"><literal type="string" pos:start="133:28" pos:end="133:46">"MB block: %d, %d "</literal></expr></argument>, <argument pos:start="133:49" pos:end="133:56"><expr pos:start="133:49" pos:end="133:56"><name pos:start="133:49" pos:end="133:56">mb_index</name></expr></argument>, <argument pos:start="133:59" pos:end="133:59"><expr pos:start="133:59" pos:end="133:59"><name pos:start="133:59" pos:end="133:59">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:41"><expr pos:start="135:13" pos:end="135:40"><call pos:start="135:13" pos:end="135:40"><name pos:start="135:13" pos:end="135:24">dv_decode_ac</name><argument_list pos:start="135:25" pos:end="135:40">(<argument pos:start="135:26" pos:end="135:28"><expr pos:start="135:26" pos:end="135:28"><operator pos:start="135:26" pos:end="135:26">&amp;</operator><name pos:start="135:27" pos:end="135:28">gb</name></expr></argument>, <argument pos:start="135:31" pos:end="135:32"><expr pos:start="135:31" pos:end="135:32"><name pos:start="135:31" pos:end="135:32">mb</name></expr></argument>, <argument pos:start="135:35" pos:end="135:39"><expr pos:start="135:35" pos:end="135:39"><name pos:start="135:35" pos:end="135:39">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="139:13" pos:end="141:35">/* write the remaining bits in a new buffer only if the

               block is finished */</comment>

            <if_stmt pos:start="143:13" pos:end="145:35"><if pos:start="143:13" pos:end="145:35">if <condition pos:start="143:16" pos:end="143:30">(<expr pos:start="143:17" pos:end="143:29"><name pos:start="143:17" pos:end="143:23"><name pos:start="143:17" pos:end="143:18">mb</name><operator pos:start="143:19" pos:end="143:20">-&gt;</operator><name pos:start="143:21" pos:end="143:23">pos</name></name> <operator pos:start="143:25" pos:end="143:26">&gt;=</operator> <literal type="number" pos:start="143:28" pos:end="143:29">64</literal></expr>)</condition><block type="pseudo" pos:start="145:17" pos:end="145:35"><block_content pos:start="145:17" pos:end="145:35">

                <expr_stmt pos:start="145:17" pos:end="145:35"><expr pos:start="145:17" pos:end="145:34"><call pos:start="145:17" pos:end="145:34"><name pos:start="145:17" pos:end="145:24">bit_copy</name><argument_list pos:start="145:25" pos:end="145:34">(<argument pos:start="145:26" pos:end="145:28"><expr pos:start="145:26" pos:end="145:28"><operator pos:start="145:26" pos:end="145:26">&amp;</operator><name pos:start="145:27" pos:end="145:28">pb</name></expr></argument>, <argument pos:start="145:31" pos:end="145:33"><expr pos:start="145:31" pos:end="145:33"><operator pos:start="145:31" pos:end="145:31">&amp;</operator><name pos:start="145:32" pos:end="145:33">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="149:13" pos:end="149:24"><expr pos:start="149:13" pos:end="149:23"><name pos:start="149:13" pos:end="149:17">block</name> <operator pos:start="149:19" pos:end="149:20">+=</operator> <literal type="number" pos:start="149:22" pos:end="149:23">64</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:17"><expr pos:start="151:13" pos:end="151:16"><name pos:start="151:13" pos:end="151:14">mb</name><operator pos:start="151:15" pos:end="151:16">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="157:9" pos:end="157:45">/* pass 2: we can do it just after */</comment>

        <expr_stmt pos:start="159:9" pos:end="159:84"><expr pos:start="159:9" pos:end="159:83"><call pos:start="159:9" pos:end="159:83"><name pos:start="159:9" pos:end="159:15">av_dlog</name><argument_list pos:start="159:16" pos:end="159:83">(<argument pos:start="159:17" pos:end="159:21"><expr pos:start="159:17" pos:end="159:21"><name pos:start="159:17" pos:end="159:21">avctx</name></expr></argument>, <argument pos:start="159:24" pos:end="159:51"><expr pos:start="159:24" pos:end="159:51"><literal type="string" pos:start="159:24" pos:end="159:51">"***pass 2 size=%d MB#=%d\n"</literal></expr></argument>, <argument pos:start="159:54" pos:end="159:72"><expr pos:start="159:54" pos:end="159:72"><call pos:start="159:54" pos:end="159:72"><name pos:start="159:54" pos:end="159:67">put_bits_count</name><argument_list pos:start="159:68" pos:end="159:72">(<argument pos:start="159:69" pos:end="159:71"><expr pos:start="159:69" pos:end="159:71"><operator pos:start="159:69" pos:end="159:69">&amp;</operator><name pos:start="159:70" pos:end="159:71">pb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="159:75" pos:end="159:82"><expr pos:start="159:75" pos:end="159:82"><name pos:start="159:75" pos:end="159:82">mb_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:23"><expr pos:start="161:9" pos:end="161:22"><name pos:start="161:9" pos:end="161:13">block</name> <operator pos:start="161:15" pos:end="161:15">=</operator> <name pos:start="161:17" pos:end="161:22">block1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:20"><expr pos:start="163:9" pos:end="163:19"><name pos:start="163:9" pos:end="163:10">mb</name>    <operator pos:start="163:15" pos:end="163:15">=</operator> <name pos:start="163:17" pos:end="163:19">mb1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:63"><expr pos:start="165:9" pos:end="165:62"><call pos:start="165:9" pos:end="165:62"><name pos:start="165:9" pos:end="165:21">init_get_bits</name><argument_list pos:start="165:22" pos:end="165:62">(<argument pos:start="165:23" pos:end="165:25"><expr pos:start="165:23" pos:end="165:25"><operator pos:start="165:23" pos:end="165:23">&amp;</operator><name pos:start="165:24" pos:end="165:25">gb</name></expr></argument>, <argument pos:start="165:28" pos:end="165:40"><expr pos:start="165:28" pos:end="165:40"><name pos:start="165:28" pos:end="165:40">mb_bit_buffer</name></expr></argument>, <argument pos:start="165:43" pos:end="165:61"><expr pos:start="165:43" pos:end="165:61"><call pos:start="165:43" pos:end="165:61"><name pos:start="165:43" pos:end="165:56">put_bits_count</name><argument_list pos:start="165:57" pos:end="165:61">(<argument pos:start="165:58" pos:end="165:60"><expr pos:start="165:58" pos:end="165:60"><operator pos:start="165:58" pos:end="165:58">&amp;</operator><name pos:start="165:59" pos:end="165:60">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:28"><expr pos:start="167:9" pos:end="167:27"><call pos:start="167:9" pos:end="167:27"><name pos:start="167:9" pos:end="167:22">flush_put_bits</name><argument_list pos:start="167:23" pos:end="167:27">(<argument pos:start="167:24" pos:end="167:26"><expr pos:start="167:24" pos:end="167:26"><operator pos:start="167:24" pos:end="167:24">&amp;</operator><name pos:start="167:25" pos:end="167:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="169:9" pos:end="183:9">for <control pos:start="169:13" pos:end="169:60">(<init pos:start="169:14" pos:end="169:19"><expr pos:start="169:14" pos:end="169:18"><name pos:start="169:14" pos:end="169:14">j</name> <operator pos:start="169:16" pos:end="169:16">=</operator> <literal type="number" pos:start="169:18" pos:end="169:18">0</literal></expr>;</init> <condition pos:start="169:21" pos:end="169:36"><expr pos:start="169:21" pos:end="169:35"><name pos:start="169:21" pos:end="169:21">j</name> <operator pos:start="169:23" pos:end="169:23">&lt;</operator> <name pos:start="169:25" pos:end="169:35"><name pos:start="169:25" pos:end="169:25">s</name><operator pos:start="169:26" pos:end="169:27">-&gt;</operator><name pos:start="169:28" pos:end="169:30">sys</name><operator pos:start="169:31" pos:end="169:32">-&gt;</operator><name pos:start="169:33" pos:end="169:35">bpm</name></name></expr>;</condition> <incr pos:start="169:38" pos:end="169:59"><expr pos:start="169:38" pos:end="169:40"><name pos:start="169:38" pos:end="169:38">j</name><operator pos:start="169:39" pos:end="169:40">++</operator></expr><operator pos:start="169:41" pos:end="169:41">,</operator> <expr pos:start="169:43" pos:end="169:53"><name pos:start="169:43" pos:end="169:47">block</name> <operator pos:start="169:49" pos:end="169:50">+=</operator> <literal type="number" pos:start="169:52" pos:end="169:53">64</literal></expr><operator pos:start="169:54" pos:end="169:54">,</operator> <expr pos:start="169:56" pos:end="169:59"><name pos:start="169:56" pos:end="169:57">mb</name><operator pos:start="169:58" pos:end="169:59">++</operator></expr></incr>)</control> <block pos:start="169:62" pos:end="183:9">{<block_content pos:start="171:13" pos:end="181:13">

            <if_stmt pos:start="171:13" pos:end="181:13"><if pos:start="171:13" pos:end="181:13">if <condition pos:start="171:16" pos:end="171:55">(<expr pos:start="171:17" pos:end="171:54"><name pos:start="171:17" pos:end="171:23"><name pos:start="171:17" pos:end="171:18">mb</name><operator pos:start="171:19" pos:end="171:20">-&gt;</operator><name pos:start="171:21" pos:end="171:23">pos</name></name> <operator pos:start="171:25" pos:end="171:25">&lt;</operator> <literal type="number" pos:start="171:27" pos:end="171:28">64</literal> <operator pos:start="171:30" pos:end="171:31">&amp;&amp;</operator> <call pos:start="171:33" pos:end="171:50"><name pos:start="171:33" pos:end="171:45">get_bits_left</name><argument_list pos:start="171:46" pos:end="171:50">(<argument pos:start="171:47" pos:end="171:49"><expr pos:start="171:47" pos:end="171:49"><operator pos:start="171:47" pos:end="171:47">&amp;</operator><name pos:start="171:48" pos:end="171:49">gb</name></expr></argument>)</argument_list></call> <operator pos:start="171:52" pos:end="171:52">&gt;</operator> <literal type="number" pos:start="171:54" pos:end="171:54">0</literal></expr>)</condition> <block pos:start="171:57" pos:end="181:13">{<block_content pos:start="173:17" pos:end="179:26">

                <expr_stmt pos:start="173:17" pos:end="173:45"><expr pos:start="173:17" pos:end="173:44"><call pos:start="173:17" pos:end="173:44"><name pos:start="173:17" pos:end="173:28">dv_decode_ac</name><argument_list pos:start="173:29" pos:end="173:44">(<argument pos:start="173:30" pos:end="173:32"><expr pos:start="173:30" pos:end="173:32"><operator pos:start="173:30" pos:end="173:30">&amp;</operator><name pos:start="173:31" pos:end="173:32">gb</name></expr></argument>, <argument pos:start="173:35" pos:end="173:36"><expr pos:start="173:35" pos:end="173:36"><name pos:start="173:35" pos:end="173:36">mb</name></expr></argument>, <argument pos:start="173:39" pos:end="173:43"><expr pos:start="173:39" pos:end="173:43"><name pos:start="173:39" pos:end="173:43">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="175:17" pos:end="175:74">/* if still not finished, no need to parse other blocks */</comment>

                <if_stmt pos:start="177:17" pos:end="179:26"><if pos:start="177:17" pos:end="179:26">if <condition pos:start="177:20" pos:end="177:33">(<expr pos:start="177:21" pos:end="177:32"><name pos:start="177:21" pos:end="177:27"><name pos:start="177:21" pos:end="177:22">mb</name><operator pos:start="177:23" pos:end="177:24">-&gt;</operator><name pos:start="177:25" pos:end="177:27">pos</name></name> <operator pos:start="177:29" pos:end="177:29">&lt;</operator> <literal type="number" pos:start="177:31" pos:end="177:32">64</literal></expr>)</condition><block type="pseudo" pos:start="179:21" pos:end="179:26"><block_content pos:start="179:21" pos:end="179:26">

                    <break pos:start="179:21" pos:end="179:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <comment type="block" pos:start="185:9" pos:end="187:37">/* all blocks are finished, so the extra bytes can be used at

           the video segment level */</comment>

        <if_stmt pos:start="189:9" pos:end="191:34"><if pos:start="189:9" pos:end="191:34">if <condition pos:start="189:12" pos:end="189:29">(<expr pos:start="189:13" pos:end="189:28"><name pos:start="189:13" pos:end="189:13">j</name> <operator pos:start="189:15" pos:end="189:16">&gt;=</operator> <name pos:start="189:18" pos:end="189:28"><name pos:start="189:18" pos:end="189:18">s</name><operator pos:start="189:19" pos:end="189:20">-&gt;</operator><name pos:start="189:21" pos:end="189:23">sys</name><operator pos:start="189:24" pos:end="189:25">-&gt;</operator><name pos:start="189:26" pos:end="189:28">bpm</name></name></expr>)</condition><block type="pseudo" pos:start="191:13" pos:end="191:34"><block_content pos:start="191:13" pos:end="191:34">

            <expr_stmt pos:start="191:13" pos:end="191:34"><expr pos:start="191:13" pos:end="191:33"><call pos:start="191:13" pos:end="191:33"><name pos:start="191:13" pos:end="191:20">bit_copy</name><argument_list pos:start="191:21" pos:end="191:33">(<argument pos:start="191:22" pos:end="191:27"><expr pos:start="191:22" pos:end="191:27"><operator pos:start="191:22" pos:end="191:22">&amp;</operator><name pos:start="191:23" pos:end="191:27">vs_pb</name></expr></argument>, <argument pos:start="191:30" pos:end="191:32"><expr pos:start="191:30" pos:end="191:32"><operator pos:start="191:30" pos:end="191:30">&amp;</operator><name pos:start="191:31" pos:end="191:32">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="197:5" pos:end="197:53">/* we need a pass over the whole video segment */</comment>

    <expr_stmt pos:start="199:5" pos:end="199:66"><expr pos:start="199:5" pos:end="199:65"><call pos:start="199:5" pos:end="199:65"><name pos:start="199:5" pos:end="199:11">av_dlog</name><argument_list pos:start="199:12" pos:end="199:65">(<argument pos:start="199:13" pos:end="199:17"><expr pos:start="199:13" pos:end="199:17"><name pos:start="199:13" pos:end="199:17">avctx</name></expr></argument>, <argument pos:start="199:20" pos:end="199:40"><expr pos:start="199:20" pos:end="199:40"><literal type="string" pos:start="199:20" pos:end="199:40">"***pass 3 size=%d\n"</literal></expr></argument>, <argument pos:start="199:43" pos:end="199:64"><expr pos:start="199:43" pos:end="199:64"><call pos:start="199:43" pos:end="199:64"><name pos:start="199:43" pos:end="199:56">put_bits_count</name><argument_list pos:start="199:57" pos:end="199:64">(<argument pos:start="199:58" pos:end="199:63"><expr pos:start="199:58" pos:end="199:63"><operator pos:start="199:58" pos:end="199:58">&amp;</operator><name pos:start="199:59" pos:end="199:63">vs_pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:26"><expr pos:start="201:5" pos:end="201:25"><name pos:start="201:5" pos:end="201:9">block</name> <operator pos:start="201:11" pos:end="201:11">=</operator> <operator pos:start="201:13" pos:end="201:13">&amp;</operator><name pos:start="201:14" pos:end="201:25"><name pos:start="201:14" pos:end="201:19">sblock</name><index pos:start="201:20" pos:end="201:22">[<expr pos:start="201:21" pos:end="201:21"><literal type="number" pos:start="201:21" pos:end="201:21">0</literal></expr>]</index><index pos:start="201:23" pos:end="201:25">[<expr pos:start="201:24" pos:end="201:24"><literal type="number" pos:start="201:24" pos:end="201:24">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:20"><expr pos:start="203:5" pos:end="203:19"><name pos:start="203:5" pos:end="203:6">mb</name>    <operator pos:start="203:11" pos:end="203:11">=</operator> <name pos:start="203:13" pos:end="203:19">mb_data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:62"><expr pos:start="205:5" pos:end="205:61"><call pos:start="205:5" pos:end="205:61"><name pos:start="205:5" pos:end="205:17">init_get_bits</name><argument_list pos:start="205:18" pos:end="205:61">(<argument pos:start="205:19" pos:end="205:21"><expr pos:start="205:19" pos:end="205:21"><operator pos:start="205:19" pos:end="205:19">&amp;</operator><name pos:start="205:20" pos:end="205:21">gb</name></expr></argument>, <argument pos:start="205:24" pos:end="205:36"><expr pos:start="205:24" pos:end="205:36"><name pos:start="205:24" pos:end="205:36">vs_bit_buffer</name></expr></argument>, <argument pos:start="205:39" pos:end="205:60"><expr pos:start="205:39" pos:end="205:60"><call pos:start="205:39" pos:end="205:60"><name pos:start="205:39" pos:end="205:52">put_bits_count</name><argument_list pos:start="205:53" pos:end="205:60">(<argument pos:start="205:54" pos:end="205:59"><expr pos:start="205:54" pos:end="205:59"><operator pos:start="205:54" pos:end="205:54">&amp;</operator><name pos:start="205:55" pos:end="205:59">vs_pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:27"><expr pos:start="207:5" pos:end="207:26"><call pos:start="207:5" pos:end="207:26"><name pos:start="207:5" pos:end="207:18">flush_put_bits</name><argument_list pos:start="207:19" pos:end="207:26">(<argument pos:start="207:20" pos:end="207:25"><expr pos:start="207:20" pos:end="207:25"><operator pos:start="207:20" pos:end="207:20">&amp;</operator><name pos:start="207:21" pos:end="207:25">vs_pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="209:5" pos:end="231:5">for <control pos:start="209:9" pos:end="209:48">(<init pos:start="209:10" pos:end="209:22"><expr pos:start="209:10" pos:end="209:21"><name pos:start="209:10" pos:end="209:17">mb_index</name> <operator pos:start="209:19" pos:end="209:19">=</operator> <literal type="number" pos:start="209:21" pos:end="209:21">0</literal></expr>;</init> <condition pos:start="209:24" pos:end="209:36"><expr pos:start="209:24" pos:end="209:35"><name pos:start="209:24" pos:end="209:31">mb_index</name> <operator pos:start="209:33" pos:end="209:33">&lt;</operator> <literal type="number" pos:start="209:35" pos:end="209:35">5</literal></expr>;</condition> <incr pos:start="209:38" pos:end="209:47"><expr pos:start="209:38" pos:end="209:47"><name pos:start="209:38" pos:end="209:45">mb_index</name><operator pos:start="209:46" pos:end="209:47">++</operator></expr></incr>)</control> <block pos:start="209:50" pos:end="231:5">{<block_content pos:start="211:9" pos:end="229:9">

        <for pos:start="211:9" pos:end="229:9">for <control pos:start="211:13" pos:end="211:41">(<init pos:start="211:14" pos:end="211:19"><expr pos:start="211:14" pos:end="211:18"><name pos:start="211:14" pos:end="211:14">j</name> <operator pos:start="211:16" pos:end="211:16">=</operator> <literal type="number" pos:start="211:18" pos:end="211:18">0</literal></expr>;</init> <condition pos:start="211:21" pos:end="211:36"><expr pos:start="211:21" pos:end="211:35"><name pos:start="211:21" pos:end="211:21">j</name> <operator pos:start="211:23" pos:end="211:23">&lt;</operator> <name pos:start="211:25" pos:end="211:35"><name pos:start="211:25" pos:end="211:25">s</name><operator pos:start="211:26" pos:end="211:27">-&gt;</operator><name pos:start="211:28" pos:end="211:30">sys</name><operator pos:start="211:31" pos:end="211:32">-&gt;</operator><name pos:start="211:33" pos:end="211:35">bpm</name></name></expr>;</condition> <incr pos:start="211:38" pos:end="211:40"><expr pos:start="211:38" pos:end="211:40"><name pos:start="211:38" pos:end="211:38">j</name><operator pos:start="211:39" pos:end="211:40">++</operator></expr></incr>)</control> <block pos:start="211:43" pos:end="229:9">{<block_content pos:start="213:13" pos:end="227:17">

            <if_stmt pos:start="213:13" pos:end="219:13"><if pos:start="213:13" pos:end="219:13">if <condition pos:start="213:16" pos:end="213:29">(<expr pos:start="213:17" pos:end="213:28"><name pos:start="213:17" pos:end="213:23"><name pos:start="213:17" pos:end="213:18">mb</name><operator pos:start="213:19" pos:end="213:20">-&gt;</operator><name pos:start="213:21" pos:end="213:23">pos</name></name> <operator pos:start="213:25" pos:end="213:25">&lt;</operator> <literal type="number" pos:start="213:27" pos:end="213:28">64</literal></expr>)</condition> <block pos:start="213:31" pos:end="219:13">{<block_content pos:start="215:17" pos:end="217:45">

                <expr_stmt pos:start="215:17" pos:end="215:61"><expr pos:start="215:17" pos:end="215:60"><call pos:start="215:17" pos:end="215:60"><name pos:start="215:17" pos:end="215:23">av_dlog</name><argument_list pos:start="215:24" pos:end="215:60">(<argument pos:start="215:25" pos:end="215:29"><expr pos:start="215:25" pos:end="215:29"><name pos:start="215:25" pos:end="215:29">avctx</name></expr></argument>, <argument pos:start="215:32" pos:end="215:46"><expr pos:start="215:32" pos:end="215:46"><literal type="string" pos:start="215:32" pos:end="215:46">"start %d:%d\n"</literal></expr></argument>, <argument pos:start="215:49" pos:end="215:56"><expr pos:start="215:49" pos:end="215:56"><name pos:start="215:49" pos:end="215:56">mb_index</name></expr></argument>, <argument pos:start="215:59" pos:end="215:59"><expr pos:start="215:59" pos:end="215:59"><name pos:start="215:59" pos:end="215:59">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="217:17" pos:end="217:45"><expr pos:start="217:17" pos:end="217:44"><call pos:start="217:17" pos:end="217:44"><name pos:start="217:17" pos:end="217:28">dv_decode_ac</name><argument_list pos:start="217:29" pos:end="217:44">(<argument pos:start="217:30" pos:end="217:32"><expr pos:start="217:30" pos:end="217:32"><operator pos:start="217:30" pos:end="217:30">&amp;</operator><name pos:start="217:31" pos:end="217:32">gb</name></expr></argument>, <argument pos:start="217:35" pos:end="217:36"><expr pos:start="217:35" pos:end="217:36"><name pos:start="217:35" pos:end="217:36">mb</name></expr></argument>, <argument pos:start="217:39" pos:end="217:43"><expr pos:start="217:39" pos:end="217:43"><name pos:start="217:39" pos:end="217:43">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="221:13" pos:end="223:89"><if pos:start="221:13" pos:end="223:89">if <condition pos:start="221:16" pos:end="221:47">(<expr pos:start="221:17" pos:end="221:46"><name pos:start="221:17" pos:end="221:23"><name pos:start="221:17" pos:end="221:18">mb</name><operator pos:start="221:19" pos:end="221:20">-&gt;</operator><name pos:start="221:21" pos:end="221:23">pos</name></name> <operator pos:start="221:25" pos:end="221:26">&gt;=</operator> <literal type="number" pos:start="221:28" pos:end="221:29">64</literal> <operator pos:start="221:31" pos:end="221:32">&amp;&amp;</operator> <name pos:start="221:34" pos:end="221:40"><name pos:start="221:34" pos:end="221:35">mb</name><operator pos:start="221:36" pos:end="221:37">-&gt;</operator><name pos:start="221:38" pos:end="221:40">pos</name></name> <operator pos:start="221:42" pos:end="221:42">&lt;</operator> <literal type="number" pos:start="221:44" pos:end="221:46">127</literal></expr>)</condition><block type="pseudo" pos:start="223:17" pos:end="223:89"><block_content pos:start="223:17" pos:end="223:89">

                <expr_stmt pos:start="223:17" pos:end="223:89"><expr pos:start="223:17" pos:end="223:88"><call pos:start="223:17" pos:end="223:88"><name pos:start="223:17" pos:end="223:22">av_log</name><argument_list pos:start="223:23" pos:end="223:88">(<argument pos:start="223:24" pos:end="223:28"><expr pos:start="223:24" pos:end="223:28"><name pos:start="223:24" pos:end="223:28">avctx</name></expr></argument>, <argument pos:start="223:31" pos:end="223:42"><expr pos:start="223:31" pos:end="223:42"><name pos:start="223:31" pos:end="223:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="223:45" pos:end="223:78"><expr pos:start="223:45" pos:end="223:78"><literal type="string" pos:start="223:45" pos:end="223:78">"AC EOB marker is absent pos=%d\n"</literal></expr></argument>, <argument pos:start="223:81" pos:end="223:87"><expr pos:start="223:81" pos:end="223:87"><name pos:start="223:81" pos:end="223:87"><name pos:start="223:81" pos:end="223:82">mb</name><operator pos:start="223:83" pos:end="223:84">-&gt;</operator><name pos:start="223:85" pos:end="223:87">pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:24"><expr pos:start="225:13" pos:end="225:23"><name pos:start="225:13" pos:end="225:17">block</name> <operator pos:start="225:19" pos:end="225:20">+=</operator> <literal type="number" pos:start="225:22" pos:end="225:23">64</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:17"><expr pos:start="227:13" pos:end="227:16"><name pos:start="227:13" pos:end="227:14">mb</name><operator pos:start="227:15" pos:end="227:16">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="235:5" pos:end="235:39">/* compute idct and place blocks */</comment>

    <expr_stmt pos:start="237:5" pos:end="237:26"><expr pos:start="237:5" pos:end="237:25"><name pos:start="237:5" pos:end="237:9">block</name> <operator pos:start="237:11" pos:end="237:11">=</operator> <operator pos:start="237:13" pos:end="237:13">&amp;</operator><name pos:start="237:14" pos:end="237:25"><name pos:start="237:14" pos:end="237:19">sblock</name><index pos:start="237:20" pos:end="237:22">[<expr pos:start="237:21" pos:end="237:21"><literal type="number" pos:start="237:21" pos:end="237:21">0</literal></expr>]</index><index pos:start="237:23" pos:end="237:25">[<expr pos:start="237:24" pos:end="237:24"><literal type="number" pos:start="237:24" pos:end="237:24">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="239:5" pos:end="239:20"><expr pos:start="239:5" pos:end="239:19"><name pos:start="239:5" pos:end="239:6">mb</name>    <operator pos:start="239:11" pos:end="239:11">=</operator> <name pos:start="239:13" pos:end="239:19">mb_data</name></expr>;</expr_stmt>

    <for pos:start="241:5" pos:end="349:5">for <control pos:start="241:9" pos:end="241:48">(<init pos:start="241:10" pos:end="241:22"><expr pos:start="241:10" pos:end="241:21"><name pos:start="241:10" pos:end="241:17">mb_index</name> <operator pos:start="241:19" pos:end="241:19">=</operator> <literal type="number" pos:start="241:21" pos:end="241:21">0</literal></expr>;</init> <condition pos:start="241:24" pos:end="241:36"><expr pos:start="241:24" pos:end="241:35"><name pos:start="241:24" pos:end="241:31">mb_index</name> <operator pos:start="241:33" pos:end="241:33">&lt;</operator> <literal type="number" pos:start="241:35" pos:end="241:35">5</literal></expr>;</condition> <incr pos:start="241:38" pos:end="241:47"><expr pos:start="241:38" pos:end="241:47"><name pos:start="241:38" pos:end="241:45">mb_index</name><operator pos:start="241:46" pos:end="241:47">++</operator></expr></incr>)</control> <block pos:start="241:50" pos:end="349:5">{<block_content pos:start="243:9" pos:end="347:9">

        <expr_stmt pos:start="243:9" pos:end="243:66"><expr pos:start="243:9" pos:end="243:65"><call pos:start="243:9" pos:end="243:65"><name pos:start="243:9" pos:end="243:26">dv_calculate_mb_xy</name><argument_list pos:start="243:27" pos:end="243:65">(<argument pos:start="243:28" pos:end="243:28"><expr pos:start="243:28" pos:end="243:28"><name pos:start="243:28" pos:end="243:28">s</name></expr></argument>, <argument pos:start="243:31" pos:end="243:40"><expr pos:start="243:31" pos:end="243:40"><name pos:start="243:31" pos:end="243:40">work_chunk</name></expr></argument>, <argument pos:start="243:43" pos:end="243:50"><expr pos:start="243:43" pos:end="243:50"><name pos:start="243:43" pos:end="243:50">mb_index</name></expr></argument>, <argument pos:start="243:53" pos:end="243:57"><expr pos:start="243:53" pos:end="243:57"><operator pos:start="243:53" pos:end="243:53">&amp;</operator><name pos:start="243:54" pos:end="243:57">mb_x</name></expr></argument>, <argument pos:start="243:60" pos:end="243:64"><expr pos:start="243:60" pos:end="243:64"><operator pos:start="243:60" pos:end="243:60">&amp;</operator><name pos:start="243:61" pos:end="243:64">mb_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="247:9" pos:end="247:37">/* idct_put'ting luminance */</comment>

        <if_stmt pos:start="249:9" pos:end="261:9"><if pos:start="249:9" pos:end="257:9">if <condition pos:start="249:12" pos:end="253:51">(<expr pos:start="249:13" pos:end="253:50"><operator pos:start="249:13" pos:end="249:13">(</operator><name pos:start="249:14" pos:end="249:28"><name pos:start="249:14" pos:end="249:14">s</name><operator pos:start="249:15" pos:end="249:16">-&gt;</operator><name pos:start="249:17" pos:end="249:19">sys</name><operator pos:start="249:20" pos:end="249:21">-&gt;</operator><name pos:start="249:22" pos:end="249:28">pix_fmt</name></name> <operator pos:start="249:30" pos:end="249:31">==</operator> <name pos:start="249:33" pos:end="249:47">PIX_FMT_YUV420P</name><operator pos:start="249:48" pos:end="249:48">)</operator> <operator pos:start="249:50" pos:end="249:51">||</operator>

            <operator pos:start="251:13" pos:end="251:13">(</operator><name pos:start="251:14" pos:end="251:28"><name pos:start="251:14" pos:end="251:14">s</name><operator pos:start="251:15" pos:end="251:16">-&gt;</operator><name pos:start="251:17" pos:end="251:19">sys</name><operator pos:start="251:20" pos:end="251:21">-&gt;</operator><name pos:start="251:22" pos:end="251:28">pix_fmt</name></name> <operator pos:start="251:30" pos:end="251:31">==</operator> <name pos:start="251:33" pos:end="251:47">PIX_FMT_YUV411P</name> <operator pos:start="251:49" pos:end="251:50">&amp;&amp;</operator> <name pos:start="251:52" pos:end="251:55">mb_x</name> <operator pos:start="251:57" pos:end="251:58">&gt;=</operator> <operator pos:start="251:60" pos:end="251:60">(</operator><literal type="number" pos:start="251:61" pos:end="251:63">704</literal> <operator pos:start="251:65" pos:end="251:65">/</operator> <literal type="number" pos:start="251:67" pos:end="251:67">8</literal><operator pos:start="251:68" pos:end="251:68">)</operator><operator pos:start="251:69" pos:end="251:69">)</operator> <operator pos:start="251:71" pos:end="251:72">||</operator>

            <operator pos:start="253:13" pos:end="253:13">(</operator><name pos:start="253:14" pos:end="253:27"><name pos:start="253:14" pos:end="253:14">s</name><operator pos:start="253:15" pos:end="253:16">-&gt;</operator><name pos:start="253:17" pos:end="253:19">sys</name><operator pos:start="253:20" pos:end="253:21">-&gt;</operator><name pos:start="253:22" pos:end="253:27">height</name></name> <operator pos:start="253:29" pos:end="253:30">&gt;=</operator> <literal type="number" pos:start="253:32" pos:end="253:34">720</literal> <operator pos:start="253:36" pos:end="253:37">&amp;&amp;</operator> <name pos:start="253:39" pos:end="253:42">mb_y</name> <operator pos:start="253:44" pos:end="253:45">!=</operator> <literal type="number" pos:start="253:47" pos:end="253:49">134</literal><operator pos:start="253:50" pos:end="253:50">)</operator></expr>)</condition> <block pos:start="253:53" pos:end="257:9">{<block_content pos:start="255:13" pos:end="255:97">

            <expr_stmt pos:start="255:13" pos:end="255:97"><expr pos:start="255:13" pos:end="255:96"><name pos:start="255:13" pos:end="255:20">y_stride</name> <operator pos:start="255:22" pos:end="255:22">=</operator> <operator pos:start="255:24" pos:end="255:24">(</operator><name pos:start="255:25" pos:end="255:46"><name pos:start="255:25" pos:end="255:25">s</name><operator pos:start="255:26" pos:end="255:27">-&gt;</operator><name pos:start="255:28" pos:end="255:34">picture</name><operator pos:start="255:35" pos:end="255:35">.</operator><name pos:start="255:36" pos:end="255:43">linesize</name><index pos:start="255:44" pos:end="255:46">[<expr pos:start="255:45" pos:end="255:45"><literal type="number" pos:start="255:45" pos:end="255:45">0</literal></expr>]</index></name> <operator pos:start="255:48" pos:end="255:49">&lt;&lt;</operator> <operator pos:start="255:51" pos:end="255:51">(</operator><operator pos:start="255:52" pos:end="255:52">(</operator><operator pos:start="255:53" pos:end="255:53">!</operator><name pos:start="255:54" pos:end="255:76"><name pos:start="255:54" pos:end="255:66">is_field_mode</name><index pos:start="255:67" pos:end="255:76">[<expr pos:start="255:68" pos:end="255:75"><name pos:start="255:68" pos:end="255:75">mb_index</name></expr>]</index></name><operator pos:start="255:77" pos:end="255:77">)</operator> <operator pos:start="255:79" pos:end="255:79">*</operator> <name pos:start="255:81" pos:end="255:94">log2_blocksize</name><operator pos:start="255:95" pos:end="255:95">)</operator><operator pos:start="255:96" pos:end="255:96">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="257:11" pos:end="261:9">else <block pos:start="257:16" pos:end="261:9">{<block_content pos:start="259:13" pos:end="259:45">

            <expr_stmt pos:start="259:13" pos:end="259:45"><expr pos:start="259:13" pos:end="259:44"><name pos:start="259:13" pos:end="259:20">y_stride</name> <operator pos:start="259:22" pos:end="259:22">=</operator> <operator pos:start="259:24" pos:end="259:24">(</operator><literal type="number" pos:start="259:25" pos:end="259:25">2</literal> <operator pos:start="259:27" pos:end="259:28">&lt;&lt;</operator> <name pos:start="259:30" pos:end="259:43">log2_blocksize</name><operator pos:start="259:44" pos:end="259:44">)</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="263:9" pos:end="263:96"><expr pos:start="263:9" pos:end="263:95"><name pos:start="263:9" pos:end="263:13">y_ptr</name> <operator pos:start="263:15" pos:end="263:15">=</operator> <name pos:start="263:17" pos:end="263:34"><name pos:start="263:17" pos:end="263:17">s</name><operator pos:start="263:18" pos:end="263:19">-&gt;</operator><name pos:start="263:20" pos:end="263:26">picture</name><operator pos:start="263:27" pos:end="263:27">.</operator><name pos:start="263:28" pos:end="263:31">data</name><index pos:start="263:32" pos:end="263:34">[<expr pos:start="263:33" pos:end="263:33"><literal type="number" pos:start="263:33" pos:end="263:33">0</literal></expr>]</index></name> <operator pos:start="263:36" pos:end="263:36">+</operator> <operator pos:start="263:38" pos:end="263:38">(</operator><operator pos:start="263:39" pos:end="263:39">(</operator><name pos:start="263:40" pos:end="263:43">mb_y</name> <operator pos:start="263:45" pos:end="263:45">*</operator> <name pos:start="263:47" pos:end="263:68"><name pos:start="263:47" pos:end="263:47">s</name><operator pos:start="263:48" pos:end="263:49">-&gt;</operator><name pos:start="263:50" pos:end="263:56">picture</name><operator pos:start="263:57" pos:end="263:57">.</operator><name pos:start="263:58" pos:end="263:65">linesize</name><index pos:start="263:66" pos:end="263:68">[<expr pos:start="263:67" pos:end="263:67"><literal type="number" pos:start="263:67" pos:end="263:67">0</literal></expr>]</index></name> <operator pos:start="263:70" pos:end="263:70">+</operator> <name pos:start="263:72" pos:end="263:75">mb_x</name><operator pos:start="263:76" pos:end="263:76">)</operator> <operator pos:start="263:78" pos:end="263:79">&lt;&lt;</operator> <name pos:start="263:81" pos:end="263:94">log2_blocksize</name><operator pos:start="263:95" pos:end="263:95">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="265:9" pos:end="265:69"><expr pos:start="265:9" pos:end="265:68"><name pos:start="265:9" pos:end="265:16">linesize</name> <operator pos:start="265:18" pos:end="265:18">=</operator> <name pos:start="265:20" pos:end="265:41"><name pos:start="265:20" pos:end="265:20">s</name><operator pos:start="265:21" pos:end="265:22">-&gt;</operator><name pos:start="265:23" pos:end="265:29">picture</name><operator pos:start="265:30" pos:end="265:30">.</operator><name pos:start="265:31" pos:end="265:38">linesize</name><index pos:start="265:39" pos:end="265:41">[<expr pos:start="265:40" pos:end="265:40"><literal type="number" pos:start="265:40" pos:end="265:40">0</literal></expr>]</index></name> <operator pos:start="265:43" pos:end="265:44">&lt;&lt;</operator> <name pos:start="265:46" pos:end="265:68"><name pos:start="265:46" pos:end="265:58">is_field_mode</name><index pos:start="265:59" pos:end="265:68">[<expr pos:start="265:60" pos:end="265:67"><name pos:start="265:60" pos:end="265:67">mb_index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="267:9" pos:end="267:93"><expr pos:start="267:9" pos:end="267:92"><name pos:start="267:9" pos:end="267:13"><name pos:start="267:9" pos:end="267:10">mb</name><index pos:start="267:11" pos:end="267:13">[<expr pos:start="267:12" pos:end="267:12"><literal type="number" pos:start="267:12" pos:end="267:12">0</literal></expr>]</index></name>    <operator pos:start="267:18" pos:end="267:18">.</operator><call pos:start="267:19" pos:end="267:92"><name pos:start="267:19" pos:end="267:26">idct_put</name><argument_list pos:start="267:27" pos:end="267:92">(<argument pos:start="267:28" pos:end="267:32"><expr pos:start="267:28" pos:end="267:32"><name pos:start="267:28" pos:end="267:32">y_ptr</name></expr></argument>                                   , <argument pos:start="267:70" pos:end="267:77"><expr pos:start="267:70" pos:end="267:77"><name pos:start="267:70" pos:end="267:77">linesize</name></expr></argument>, <argument pos:start="267:80" pos:end="267:91"><expr pos:start="267:80" pos:end="267:91"><name pos:start="267:80" pos:end="267:84">block</name> <operator pos:start="267:86" pos:end="267:86">+</operator> <literal type="number" pos:start="267:88" pos:end="267:88">0</literal><operator pos:start="267:89" pos:end="267:89">*</operator><literal type="number" pos:start="267:90" pos:end="267:91">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="269:9" pos:end="281:9"><if pos:start="269:9" pos:end="273:9">if <condition pos:start="269:12" pos:end="269:37">(<expr pos:start="269:13" pos:end="269:36"><name pos:start="269:13" pos:end="269:31"><name pos:start="269:13" pos:end="269:13">s</name><operator pos:start="269:14" pos:end="269:15">-&gt;</operator><name pos:start="269:16" pos:end="269:18">sys</name><operator pos:start="269:19" pos:end="269:20">-&gt;</operator><name pos:start="269:21" pos:end="269:31">video_stype</name></name> <operator pos:start="269:33" pos:end="269:34">==</operator> <literal type="number" pos:start="269:36" pos:end="269:36">4</literal></expr>)</condition> <block pos:start="269:39" pos:end="273:9">{<block_content pos:start="271:13" pos:end="271:93"> <comment type="block" pos:start="269:41" pos:end="269:52">/* SD 422 */</comment>

            <expr_stmt pos:start="271:13" pos:end="271:93"><expr pos:start="271:13" pos:end="271:92"><name pos:start="271:13" pos:end="271:17"><name pos:start="271:13" pos:end="271:14">mb</name><index pos:start="271:15" pos:end="271:17">[<expr pos:start="271:16" pos:end="271:16"><literal type="number" pos:start="271:16" pos:end="271:16">2</literal></expr>]</index></name><operator pos:start="271:18" pos:end="271:18">.</operator><call pos:start="271:19" pos:end="271:92"><name pos:start="271:19" pos:end="271:26">idct_put</name><argument_list pos:start="271:27" pos:end="271:92">(<argument pos:start="271:28" pos:end="271:56"><expr pos:start="271:28" pos:end="271:56"><name pos:start="271:28" pos:end="271:32">y_ptr</name> <operator pos:start="271:34" pos:end="271:34">+</operator> <operator pos:start="271:36" pos:end="271:36">(</operator><literal type="number" pos:start="271:37" pos:end="271:37">1</literal> <operator pos:start="271:39" pos:end="271:40">&lt;&lt;</operator> <name pos:start="271:42" pos:end="271:55">log2_blocksize</name><operator pos:start="271:56" pos:end="271:56">)</operator></expr></argument>           , <argument pos:start="271:70" pos:end="271:77"><expr pos:start="271:70" pos:end="271:77"><name pos:start="271:70" pos:end="271:77">linesize</name></expr></argument>, <argument pos:start="271:80" pos:end="271:91"><expr pos:start="271:80" pos:end="271:91"><name pos:start="271:80" pos:end="271:84">block</name> <operator pos:start="271:86" pos:end="271:86">+</operator> <literal type="number" pos:start="271:88" pos:end="271:88">2</literal><operator pos:start="271:89" pos:end="271:89">*</operator><literal type="number" pos:start="271:90" pos:end="271:91">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="273:11" pos:end="281:9">else <block pos:start="273:16" pos:end="281:9">{<block_content pos:start="275:13" pos:end="279:93">

            <expr_stmt pos:start="275:13" pos:end="275:93"><expr pos:start="275:13" pos:end="275:92"><name pos:start="275:13" pos:end="275:17"><name pos:start="275:13" pos:end="275:14">mb</name><index pos:start="275:15" pos:end="275:17">[<expr pos:start="275:16" pos:end="275:16"><literal type="number" pos:start="275:16" pos:end="275:16">1</literal></expr>]</index></name><operator pos:start="275:18" pos:end="275:18">.</operator><call pos:start="275:19" pos:end="275:92"><name pos:start="275:19" pos:end="275:26">idct_put</name><argument_list pos:start="275:27" pos:end="275:92">(<argument pos:start="275:28" pos:end="275:56"><expr pos:start="275:28" pos:end="275:56"><name pos:start="275:28" pos:end="275:32">y_ptr</name> <operator pos:start="275:34" pos:end="275:34">+</operator> <operator pos:start="275:36" pos:end="275:36">(</operator><literal type="number" pos:start="275:37" pos:end="275:37">1</literal> <operator pos:start="275:39" pos:end="275:40">&lt;&lt;</operator> <name pos:start="275:42" pos:end="275:55">log2_blocksize</name><operator pos:start="275:56" pos:end="275:56">)</operator></expr></argument>           , <argument pos:start="275:70" pos:end="275:77"><expr pos:start="275:70" pos:end="275:77"><name pos:start="275:70" pos:end="275:77">linesize</name></expr></argument>, <argument pos:start="275:80" pos:end="275:91"><expr pos:start="275:80" pos:end="275:91"><name pos:start="275:80" pos:end="275:84">block</name> <operator pos:start="275:86" pos:end="275:86">+</operator> <literal type="number" pos:start="275:88" pos:end="275:88">1</literal><operator pos:start="275:89" pos:end="275:89">*</operator><literal type="number" pos:start="275:90" pos:end="275:91">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="277:13" pos:end="277:93"><expr pos:start="277:13" pos:end="277:92"><name pos:start="277:13" pos:end="277:17"><name pos:start="277:13" pos:end="277:14">mb</name><index pos:start="277:15" pos:end="277:17">[<expr pos:start="277:16" pos:end="277:16"><literal type="number" pos:start="277:16" pos:end="277:16">2</literal></expr>]</index></name><operator pos:start="277:18" pos:end="277:18">.</operator><call pos:start="277:19" pos:end="277:92"><name pos:start="277:19" pos:end="277:26">idct_put</name><argument_list pos:start="277:27" pos:end="277:92">(<argument pos:start="277:28" pos:end="277:67"><expr pos:start="277:28" pos:end="277:67"><name pos:start="277:28" pos:end="277:32">y_ptr</name>                         <operator pos:start="277:58" pos:end="277:58">+</operator> <name pos:start="277:60" pos:end="277:67">y_stride</name></expr></argument>, <argument pos:start="277:70" pos:end="277:77"><expr pos:start="277:70" pos:end="277:77"><name pos:start="277:70" pos:end="277:77">linesize</name></expr></argument>, <argument pos:start="277:80" pos:end="277:91"><expr pos:start="277:80" pos:end="277:91"><name pos:start="277:80" pos:end="277:84">block</name> <operator pos:start="277:86" pos:end="277:86">+</operator> <literal type="number" pos:start="277:88" pos:end="277:88">2</literal><operator pos:start="277:89" pos:end="277:89">*</operator><literal type="number" pos:start="277:90" pos:end="277:91">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="279:13" pos:end="279:93"><expr pos:start="279:13" pos:end="279:92"><name pos:start="279:13" pos:end="279:17"><name pos:start="279:13" pos:end="279:14">mb</name><index pos:start="279:15" pos:end="279:17">[<expr pos:start="279:16" pos:end="279:16"><literal type="number" pos:start="279:16" pos:end="279:16">3</literal></expr>]</index></name><operator pos:start="279:18" pos:end="279:18">.</operator><call pos:start="279:19" pos:end="279:92"><name pos:start="279:19" pos:end="279:26">idct_put</name><argument_list pos:start="279:27" pos:end="279:92">(<argument pos:start="279:28" pos:end="279:67"><expr pos:start="279:28" pos:end="279:67"><name pos:start="279:28" pos:end="279:32">y_ptr</name> <operator pos:start="279:34" pos:end="279:34">+</operator> <operator pos:start="279:36" pos:end="279:36">(</operator><literal type="number" pos:start="279:37" pos:end="279:37">1</literal> <operator pos:start="279:39" pos:end="279:40">&lt;&lt;</operator> <name pos:start="279:42" pos:end="279:55">log2_blocksize</name><operator pos:start="279:56" pos:end="279:56">)</operator> <operator pos:start="279:58" pos:end="279:58">+</operator> <name pos:start="279:60" pos:end="279:67">y_stride</name></expr></argument>, <argument pos:start="279:70" pos:end="279:77"><expr pos:start="279:70" pos:end="279:77"><name pos:start="279:70" pos:end="279:77">linesize</name></expr></argument>, <argument pos:start="279:80" pos:end="279:91"><expr pos:start="279:80" pos:end="279:91"><name pos:start="279:80" pos:end="279:84">block</name> <operator pos:start="279:86" pos:end="279:86">+</operator> <literal type="number" pos:start="279:88" pos:end="279:88">3</literal><operator pos:start="279:89" pos:end="279:89">*</operator><literal type="number" pos:start="279:90" pos:end="279:91">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="283:9" pos:end="283:16"><expr pos:start="283:9" pos:end="283:15"><name pos:start="283:9" pos:end="283:10">mb</name> <operator pos:start="283:12" pos:end="283:13">+=</operator> <literal type="number" pos:start="283:15" pos:end="283:15">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="285:9" pos:end="285:22"><expr pos:start="285:9" pos:end="285:21"><name pos:start="285:9" pos:end="285:13">block</name> <operator pos:start="285:15" pos:end="285:16">+=</operator> <literal type="number" pos:start="285:18" pos:end="285:18">4</literal><operator pos:start="285:19" pos:end="285:19">*</operator><literal type="number" pos:start="285:20" pos:end="285:21">64</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="289:9" pos:end="289:39">/* idct_put'ting chrominance */</comment>

        <expr_stmt pos:start="291:9" pos:end="293:98"><expr pos:start="291:9" pos:end="293:97"><name pos:start="291:9" pos:end="291:16">c_offset</name> <operator pos:start="291:18" pos:end="291:18">=</operator> <operator pos:start="291:20" pos:end="291:20">(</operator><operator pos:start="291:21" pos:end="291:21">(</operator><operator pos:start="291:22" pos:end="291:22">(</operator><name pos:start="291:23" pos:end="291:26">mb_y</name> <operator pos:start="291:28" pos:end="291:29">&gt;&gt;</operator>  <operator pos:start="291:32" pos:end="291:32">(</operator><name pos:start="291:33" pos:end="291:47"><name pos:start="291:33" pos:end="291:33">s</name><operator pos:start="291:34" pos:end="291:35">-&gt;</operator><name pos:start="291:36" pos:end="291:38">sys</name><operator pos:start="291:39" pos:end="291:40">-&gt;</operator><name pos:start="291:41" pos:end="291:47">pix_fmt</name></name> <operator pos:start="291:49" pos:end="291:50">==</operator> <name pos:start="291:52" pos:end="291:66">PIX_FMT_YUV420P</name><operator pos:start="291:67" pos:end="291:67">)</operator><operator pos:start="291:68" pos:end="291:68">)</operator> <operator pos:start="291:70" pos:end="291:70">*</operator> <name pos:start="291:72" pos:end="291:93"><name pos:start="291:72" pos:end="291:72">s</name><operator pos:start="291:73" pos:end="291:74">-&gt;</operator><name pos:start="291:75" pos:end="291:81">picture</name><operator pos:start="291:82" pos:end="291:82">.</operator><name pos:start="291:83" pos:end="291:90">linesize</name><index pos:start="291:91" pos:end="291:93">[<expr pos:start="291:92" pos:end="291:92"><literal type="number" pos:start="291:92" pos:end="291:92">1</literal></expr>]</index></name> <operator pos:start="291:95" pos:end="291:95">+</operator>

                     <operator pos:start="293:22" pos:end="293:22">(</operator><name pos:start="293:23" pos:end="293:26">mb_x</name> <operator pos:start="293:28" pos:end="293:29">&gt;&gt;</operator> <operator pos:start="293:31" pos:end="293:31">(</operator><ternary pos:start="293:32" pos:end="293:75"><condition pos:start="293:32" pos:end="293:69"><expr pos:start="293:32" pos:end="293:67"><operator pos:start="293:32" pos:end="293:32">(</operator><name pos:start="293:33" pos:end="293:47"><name pos:start="293:33" pos:end="293:33">s</name><operator pos:start="293:34" pos:end="293:35">-&gt;</operator><name pos:start="293:36" pos:end="293:38">sys</name><operator pos:start="293:39" pos:end="293:40">-&gt;</operator><name pos:start="293:41" pos:end="293:47">pix_fmt</name></name> <operator pos:start="293:49" pos:end="293:50">==</operator> <name pos:start="293:52" pos:end="293:66">PIX_FMT_YUV411P</name><operator pos:start="293:67" pos:end="293:67">)</operator></expr> ?</condition><then pos:start="293:71" pos:end="293:71"> <expr pos:start="293:71" pos:end="293:71"><literal type="number" pos:start="293:71" pos:end="293:71">2</literal></expr> </then><else pos:start="293:73" pos:end="293:75">: <expr pos:start="293:75" pos:end="293:75"><literal type="number" pos:start="293:75" pos:end="293:75">1</literal></expr></else></ternary><operator pos:start="293:76" pos:end="293:76">)</operator><operator pos:start="293:77" pos:end="293:77">)</operator><operator pos:start="293:78" pos:end="293:78">)</operator> <operator pos:start="293:80" pos:end="293:81">&lt;&lt;</operator> <name pos:start="293:83" pos:end="293:96">log2_blocksize</name><operator pos:start="293:97" pos:end="293:97">)</operator></expr>;</expr_stmt>

        <for pos:start="295:9" pos:end="347:9">for <control pos:start="295:13" pos:end="295:27">(<init pos:start="295:14" pos:end="295:19"><expr pos:start="295:14" pos:end="295:18"><name pos:start="295:14" pos:end="295:14">j</name> <operator pos:start="295:16" pos:end="295:16">=</operator> <literal type="number" pos:start="295:18" pos:end="295:18">2</literal></expr>;</init> <condition pos:start="295:21" pos:end="295:22"><expr pos:start="295:21" pos:end="295:21"><name pos:start="295:21" pos:end="295:21">j</name></expr>;</condition> <incr pos:start="295:24" pos:end="295:26"><expr pos:start="295:24" pos:end="295:26"><name pos:start="295:24" pos:end="295:24">j</name><operator pos:start="295:25" pos:end="295:26">--</operator></expr></incr>)</control> <block pos:start="295:29" pos:end="347:9">{<block_content pos:start="297:13" pos:end="345:13">

            <decl_stmt pos:start="297:13" pos:end="297:59"><decl pos:start="297:13" pos:end="297:58"><type pos:start="297:13" pos:end="297:21"><name pos:start="297:13" pos:end="297:19">uint8_t</name> <modifier pos:start="297:21" pos:end="297:21">*</modifier></type><name pos:start="297:22" pos:end="297:26">c_ptr</name> <init pos:start="297:28" pos:end="297:58">= <expr pos:start="297:30" pos:end="297:58"><name pos:start="297:30" pos:end="297:47"><name pos:start="297:30" pos:end="297:30">s</name><operator pos:start="297:31" pos:end="297:32">-&gt;</operator><name pos:start="297:33" pos:end="297:39">picture</name><operator pos:start="297:40" pos:end="297:40">.</operator><name pos:start="297:41" pos:end="297:44">data</name><index pos:start="297:45" pos:end="297:47">[<expr pos:start="297:46" pos:end="297:46"><name pos:start="297:46" pos:end="297:46">j</name></expr>]</index></name> <operator pos:start="297:49" pos:end="297:49">+</operator> <name pos:start="297:51" pos:end="297:58">c_offset</name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="299:13" pos:end="345:13"><if pos:start="299:13" pos:end="329:13">if <condition pos:start="299:16" pos:end="299:72">(<expr pos:start="299:17" pos:end="299:71"><name pos:start="299:17" pos:end="299:31"><name pos:start="299:17" pos:end="299:17">s</name><operator pos:start="299:18" pos:end="299:19">-&gt;</operator><name pos:start="299:20" pos:end="299:22">sys</name><operator pos:start="299:23" pos:end="299:24">-&gt;</operator><name pos:start="299:25" pos:end="299:31">pix_fmt</name></name> <operator pos:start="299:33" pos:end="299:34">==</operator> <name pos:start="299:36" pos:end="299:50">PIX_FMT_YUV411P</name> <operator pos:start="299:52" pos:end="299:53">&amp;&amp;</operator> <name pos:start="299:55" pos:end="299:58">mb_x</name> <operator pos:start="299:60" pos:end="299:61">&gt;=</operator> <operator pos:start="299:63" pos:end="299:63">(</operator><literal type="number" pos:start="299:64" pos:end="299:66">704</literal> <operator pos:start="299:68" pos:end="299:68">/</operator> <literal type="number" pos:start="299:70" pos:end="299:70">8</literal><operator pos:start="299:71" pos:end="299:71">)</operator></expr>)</condition> <block pos:start="299:74" pos:end="329:13">{<block_content pos:start="301:19" pos:end="327:36">

                  <decl_stmt pos:start="301:19" pos:end="301:48"><decl pos:start="301:19" pos:end="301:47"><type pos:start="301:19" pos:end="301:26"><name pos:start="301:19" pos:end="301:26">uint64_t</name></type> <name pos:start="301:28" pos:end="301:47"><name pos:start="301:28" pos:end="301:41">aligned_pixels</name><index pos:start="301:42" pos:end="301:47">[<expr pos:start="301:43" pos:end="301:46"><literal type="number" pos:start="301:43" pos:end="301:44">64</literal><operator pos:start="301:45" pos:end="301:45">/</operator><literal type="number" pos:start="301:46" pos:end="301:46">8</literal></expr>]</index></name></decl>;</decl_stmt>

                  <decl_stmt pos:start="303:19" pos:end="303:61"><decl pos:start="303:19" pos:end="303:60"><type pos:start="303:19" pos:end="303:27"><name pos:start="303:19" pos:end="303:25">uint8_t</name> <modifier pos:start="303:27" pos:end="303:27">*</modifier></type><name pos:start="303:28" pos:end="303:33">pixels</name> <init pos:start="303:35" pos:end="303:60">= <expr pos:start="303:37" pos:end="303:60"><operator pos:start="303:37" pos:end="303:37">(</operator><name pos:start="303:38" pos:end="303:44">uint8_t</name><operator pos:start="303:45" pos:end="303:45">*</operator><operator pos:start="303:46" pos:end="303:46">)</operator><name pos:start="303:47" pos:end="303:60">aligned_pixels</name></expr></init></decl>;</decl_stmt>

                  <decl_stmt pos:start="305:19" pos:end="305:41"><decl pos:start="305:19" pos:end="305:33"><type pos:start="305:19" pos:end="305:27"><name pos:start="305:19" pos:end="305:25">uint8_t</name> <modifier pos:start="305:27" pos:end="305:27">*</modifier></type><name pos:start="305:28" pos:end="305:33">c_ptr1</name></decl>, <decl pos:start="305:36" pos:end="305:40"><type ref="prev" pos:start="305:19" pos:end="305:27"><modifier pos:start="305:36" pos:end="305:36">*</modifier></type><name pos:start="305:37" pos:end="305:40">ptr1</name></decl>;</decl_stmt>

                  <decl_stmt pos:start="307:19" pos:end="307:27"><decl pos:start="307:19" pos:end="307:23"><type pos:start="307:19" pos:end="307:21"><name pos:start="307:19" pos:end="307:21">int</name></type> <name pos:start="307:23" pos:end="307:23">x</name></decl>, <decl pos:start="307:26" pos:end="307:26"><type ref="prev" pos:start="307:19" pos:end="307:21"/><name pos:start="307:26" pos:end="307:26">y</name></decl>;</decl_stmt>

                  <expr_stmt pos:start="309:19" pos:end="309:49"><expr pos:start="309:19" pos:end="309:48"><call pos:start="309:19" pos:end="309:48"><name pos:start="309:19" pos:end="309:30"><name pos:start="309:19" pos:end="309:20">mb</name><operator pos:start="309:21" pos:end="309:22">-&gt;</operator><name pos:start="309:23" pos:end="309:30">idct_put</name></name><argument_list pos:start="309:31" pos:end="309:48">(<argument pos:start="309:32" pos:end="309:37"><expr pos:start="309:32" pos:end="309:37"><name pos:start="309:32" pos:end="309:37">pixels</name></expr></argument>, <argument pos:start="309:40" pos:end="309:40"><expr pos:start="309:40" pos:end="309:40"><literal type="number" pos:start="309:40" pos:end="309:40">8</literal></expr></argument>, <argument pos:start="309:43" pos:end="309:47"><expr pos:start="309:43" pos:end="309:47"><name pos:start="309:43" pos:end="309:47">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                  <for pos:start="311:19" pos:end="325:19">for <control pos:start="311:23" pos:end="311:107">(<init pos:start="311:24" pos:end="311:29"><expr pos:start="311:24" pos:end="311:28"><name pos:start="311:24" pos:end="311:24">y</name> <operator pos:start="311:26" pos:end="311:26">=</operator> <literal type="number" pos:start="311:28" pos:end="311:28">0</literal></expr>;</init> <condition pos:start="311:31" pos:end="311:56"><expr pos:start="311:31" pos:end="311:55"><name pos:start="311:31" pos:end="311:31">y</name> <operator pos:start="311:33" pos:end="311:33">&lt;</operator> <operator pos:start="311:35" pos:end="311:35">(</operator><literal type="number" pos:start="311:36" pos:end="311:36">1</literal> <operator pos:start="311:38" pos:end="311:39">&lt;&lt;</operator> <name pos:start="311:41" pos:end="311:54">log2_blocksize</name><operator pos:start="311:55" pos:end="311:55">)</operator></expr>;</condition> <incr pos:start="311:58" pos:end="311:106"><expr pos:start="311:58" pos:end="311:60"><name pos:start="311:58" pos:end="311:58">y</name><operator pos:start="311:59" pos:end="311:60">++</operator></expr><operator pos:start="311:61" pos:end="311:61">,</operator> <expr pos:start="311:63" pos:end="311:93"><name pos:start="311:63" pos:end="311:67">c_ptr</name> <operator pos:start="311:69" pos:end="311:70">+=</operator> <name pos:start="311:72" pos:end="311:93"><name pos:start="311:72" pos:end="311:72">s</name><operator pos:start="311:73" pos:end="311:74">-&gt;</operator><name pos:start="311:75" pos:end="311:81">picture</name><operator pos:start="311:82" pos:end="311:82">.</operator><name pos:start="311:83" pos:end="311:90">linesize</name><index pos:start="311:91" pos:end="311:93">[<expr pos:start="311:92" pos:end="311:92"><name pos:start="311:92" pos:end="311:92">j</name></expr>]</index></name></expr><operator pos:start="311:94" pos:end="311:94">,</operator> <expr pos:start="311:96" pos:end="311:106"><name pos:start="311:96" pos:end="311:101">pixels</name> <operator pos:start="311:103" pos:end="311:104">+=</operator> <literal type="number" pos:start="311:106" pos:end="311:106">8</literal></expr></incr>)</control> <block pos:start="311:109" pos:end="325:19">{<block_content pos:start="313:23" pos:end="323:23">

                      <expr_stmt pos:start="313:23" pos:end="313:68"><expr pos:start="313:23" pos:end="313:67"><name pos:start="313:23" pos:end="313:26">ptr1</name>   <operator pos:start="313:30" pos:end="313:30">=</operator> <name pos:start="313:32" pos:end="313:37">pixels</name> <operator pos:start="313:39" pos:end="313:39">+</operator> <operator pos:start="313:41" pos:end="313:41">(</operator><literal type="number" pos:start="313:42" pos:end="313:42">1</literal> <operator pos:start="313:44" pos:end="313:45">&lt;&lt;</operator> <operator pos:start="313:47" pos:end="313:47">(</operator><name pos:start="313:48" pos:end="313:61">log2_blocksize</name> <operator pos:start="313:63" pos:end="313:63">-</operator> <literal type="number" pos:start="313:65" pos:end="313:65">1</literal><operator pos:start="313:66" pos:end="313:66">)</operator><operator pos:start="313:67" pos:end="313:67">)</operator></expr>;</expr_stmt>

                      <expr_stmt pos:start="315:23" pos:end="315:82"><expr pos:start="315:23" pos:end="315:81"><name pos:start="315:23" pos:end="315:28">c_ptr1</name> <operator pos:start="315:30" pos:end="315:30">=</operator> <name pos:start="315:32" pos:end="315:36">c_ptr</name> <operator pos:start="315:38" pos:end="315:38">+</operator> <operator pos:start="315:40" pos:end="315:40">(</operator><name pos:start="315:41" pos:end="315:62"><name pos:start="315:41" pos:end="315:41">s</name><operator pos:start="315:42" pos:end="315:43">-&gt;</operator><name pos:start="315:44" pos:end="315:50">picture</name><operator pos:start="315:51" pos:end="315:51">.</operator><name pos:start="315:52" pos:end="315:59">linesize</name><index pos:start="315:60" pos:end="315:62">[<expr pos:start="315:61" pos:end="315:61"><name pos:start="315:61" pos:end="315:61">j</name></expr>]</index></name> <operator pos:start="315:64" pos:end="315:65">&lt;&lt;</operator> <name pos:start="315:67" pos:end="315:80">log2_blocksize</name><operator pos:start="315:81" pos:end="315:81">)</operator></expr>;</expr_stmt>

                      <for pos:start="317:23" pos:end="323:23">for <control pos:start="317:27" pos:end="317:71">(<init pos:start="317:28" pos:end="317:33"><expr pos:start="317:28" pos:end="317:32"><name pos:start="317:28" pos:end="317:28">x</name> <operator pos:start="317:30" pos:end="317:30">=</operator> <literal type="number" pos:start="317:32" pos:end="317:32">0</literal></expr>;</init> <condition pos:start="317:35" pos:end="317:66"><expr pos:start="317:35" pos:end="317:65"><name pos:start="317:35" pos:end="317:35">x</name> <operator pos:start="317:37" pos:end="317:37">&lt;</operator> <operator pos:start="317:39" pos:end="317:39">(</operator><literal type="number" pos:start="317:40" pos:end="317:40">1</literal> <operator pos:start="317:42" pos:end="317:43">&lt;&lt;</operator> <operator pos:start="317:45" pos:end="317:45">(</operator><name pos:start="317:46" pos:end="317:59">log2_blocksize</name> <operator pos:start="317:61" pos:end="317:61">-</operator> <literal type="number" pos:start="317:63" pos:end="317:63">1</literal><operator pos:start="317:64" pos:end="317:64">)</operator><operator pos:start="317:65" pos:end="317:65">)</operator></expr>;</condition> <incr pos:start="317:68" pos:end="317:70"><expr pos:start="317:68" pos:end="317:70"><name pos:start="317:68" pos:end="317:68">x</name><operator pos:start="317:69" pos:end="317:70">++</operator></expr></incr>)</control> <block pos:start="317:73" pos:end="323:23">{<block_content pos:start="319:27" pos:end="321:46">

                          <expr_stmt pos:start="319:27" pos:end="319:48"><expr pos:start="319:27" pos:end="319:47"><name pos:start="319:27" pos:end="319:34"><name pos:start="319:27" pos:end="319:31">c_ptr</name><index pos:start="319:32" pos:end="319:34">[<expr pos:start="319:33" pos:end="319:33"><name pos:start="319:33" pos:end="319:33">x</name></expr>]</index></name>  <operator pos:start="319:37" pos:end="319:37">=</operator> <name pos:start="319:39" pos:end="319:47"><name pos:start="319:39" pos:end="319:44">pixels</name><index pos:start="319:45" pos:end="319:47">[<expr pos:start="319:46" pos:end="319:46"><name pos:start="319:46" pos:end="319:46">x</name></expr>]</index></name></expr>;</expr_stmt>

                          <expr_stmt pos:start="321:27" pos:end="321:46"><expr pos:start="321:27" pos:end="321:45"><name pos:start="321:27" pos:end="321:35"><name pos:start="321:27" pos:end="321:32">c_ptr1</name><index pos:start="321:33" pos:end="321:35">[<expr pos:start="321:34" pos:end="321:34"><name pos:start="321:34" pos:end="321:34">x</name></expr>]</index></name> <operator pos:start="321:37" pos:end="321:37">=</operator> <name pos:start="321:39" pos:end="321:45"><name pos:start="321:39" pos:end="321:42">ptr1</name><index pos:start="321:43" pos:end="321:45">[<expr pos:start="321:44" pos:end="321:44"><name pos:start="321:44" pos:end="321:44">x</name></expr>]</index></name></expr>;</expr_stmt>

                      </block_content>}</block></for>

                  </block_content>}</block></for>

                  <expr_stmt pos:start="327:19" pos:end="327:30"><expr pos:start="327:19" pos:end="327:29"><name pos:start="327:19" pos:end="327:23">block</name> <operator pos:start="327:25" pos:end="327:26">+=</operator> <literal type="number" pos:start="327:28" pos:end="327:29">64</literal></expr>;</expr_stmt> <expr_stmt pos:start="327:32" pos:end="327:36"><expr pos:start="327:32" pos:end="327:35"><name pos:start="327:32" pos:end="327:33">mb</name><operator pos:start="327:34" pos:end="327:35">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="329:15" pos:end="345:13">else <block pos:start="329:20" pos:end="345:13">{<block_content pos:start="331:19" pos:end="343:19">

                  <expr_stmt pos:start="331:19" pos:end="333:117"><expr pos:start="331:19" pos:end="333:116"><name pos:start="331:19" pos:end="331:26">y_stride</name> <operator pos:start="331:28" pos:end="331:28">=</operator> <ternary pos:start="331:30" pos:end="333:116"><condition pos:start="331:30" pos:end="331:44"><expr pos:start="331:30" pos:end="331:42"><operator pos:start="331:30" pos:end="331:30">(</operator><name pos:start="331:31" pos:end="331:34">mb_y</name> <operator pos:start="331:36" pos:end="331:37">==</operator> <literal type="number" pos:start="331:39" pos:end="331:41">134</literal><operator pos:start="331:42" pos:end="331:42">)</operator></expr> ?</condition><then pos:start="331:46" pos:end="331:66"> <expr pos:start="331:46" pos:end="331:66"><operator pos:start="331:46" pos:end="331:46">(</operator><literal type="number" pos:start="331:47" pos:end="331:47">1</literal> <operator pos:start="331:49" pos:end="331:50">&lt;&lt;</operator> <name pos:start="331:52" pos:end="331:65">log2_blocksize</name><operator pos:start="331:66" pos:end="331:66">)</operator></expr> </then><else pos:start="331:68" pos:end="333:116">:

                                             <expr pos:start="333:46" pos:end="333:116"><name pos:start="333:46" pos:end="333:67"><name pos:start="333:46" pos:end="333:46">s</name><operator pos:start="333:47" pos:end="333:48">-&gt;</operator><name pos:start="333:49" pos:end="333:55">picture</name><operator pos:start="333:56" pos:end="333:56">.</operator><name pos:start="333:57" pos:end="333:64">linesize</name><index pos:start="333:65" pos:end="333:67">[<expr pos:start="333:66" pos:end="333:66"><name pos:start="333:66" pos:end="333:66">j</name></expr>]</index></name> <operator pos:start="333:69" pos:end="333:70">&lt;&lt;</operator> <operator pos:start="333:72" pos:end="333:72">(</operator><operator pos:start="333:73" pos:end="333:73">(</operator><operator pos:start="333:74" pos:end="333:74">!</operator><name pos:start="333:75" pos:end="333:97"><name pos:start="333:75" pos:end="333:87">is_field_mode</name><index pos:start="333:88" pos:end="333:97">[<expr pos:start="333:89" pos:end="333:96"><name pos:start="333:89" pos:end="333:96">mb_index</name></expr>]</index></name><operator pos:start="333:98" pos:end="333:98">)</operator> <operator pos:start="333:100" pos:end="333:100">*</operator> <name pos:start="333:102" pos:end="333:115">log2_blocksize</name><operator pos:start="333:116" pos:end="333:116">)</operator></expr></else></ternary></expr>;</expr_stmt>

                  <expr_stmt pos:start="335:19" pos:end="335:79"><expr pos:start="335:19" pos:end="335:78"><name pos:start="335:19" pos:end="335:26">linesize</name> <operator pos:start="335:28" pos:end="335:28">=</operator> <name pos:start="335:30" pos:end="335:51"><name pos:start="335:30" pos:end="335:30">s</name><operator pos:start="335:31" pos:end="335:32">-&gt;</operator><name pos:start="335:33" pos:end="335:39">picture</name><operator pos:start="335:40" pos:end="335:40">.</operator><name pos:start="335:41" pos:end="335:48">linesize</name><index pos:start="335:49" pos:end="335:51">[<expr pos:start="335:50" pos:end="335:50"><name pos:start="335:50" pos:end="335:50">j</name></expr>]</index></name> <operator pos:start="335:53" pos:end="335:54">&lt;&lt;</operator> <name pos:start="335:56" pos:end="335:78"><name pos:start="335:56" pos:end="335:68">is_field_mode</name><index pos:start="335:69" pos:end="335:78">[<expr pos:start="335:70" pos:end="335:77"><name pos:start="335:70" pos:end="335:77">mb_index</name></expr>]</index></name></expr>;</expr_stmt>

                  <expr_stmt pos:start="337:19" pos:end="337:74"><expr pos:start="337:19" pos:end="337:73"><operator pos:start="337:19" pos:end="337:19">(</operator><name pos:start="337:20" pos:end="337:21">mb</name><operator pos:start="337:22" pos:end="337:23">++</operator><operator pos:start="337:24" pos:end="337:24">)</operator><operator pos:start="337:25" pos:end="337:26">-&gt;</operator>    <call pos:start="337:31" pos:end="337:73"><name pos:start="337:31" pos:end="337:38">idct_put</name><argument_list pos:start="337:39" pos:end="337:73">(<argument pos:start="337:40" pos:end="337:44"><expr pos:start="337:40" pos:end="337:44"><name pos:start="337:40" pos:end="337:44">c_ptr</name></expr></argument>           , <argument pos:start="337:58" pos:end="337:65"><expr pos:start="337:58" pos:end="337:65"><name pos:start="337:58" pos:end="337:65">linesize</name></expr></argument>, <argument pos:start="337:68" pos:end="337:72"><expr pos:start="337:68" pos:end="337:72"><name pos:start="337:68" pos:end="337:72">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="337:76" pos:end="337:87"><expr pos:start="337:76" pos:end="337:86"><name pos:start="337:76" pos:end="337:80">block</name> <operator pos:start="337:82" pos:end="337:83">+=</operator> <literal type="number" pos:start="337:85" pos:end="337:86">64</literal></expr>;</expr_stmt>

                  <if_stmt pos:start="339:19" pos:end="343:19"><if pos:start="339:19" pos:end="343:19">if <condition pos:start="339:22" pos:end="339:39">(<expr pos:start="339:23" pos:end="339:38"><name pos:start="339:23" pos:end="339:33"><name pos:start="339:23" pos:end="339:23">s</name><operator pos:start="339:24" pos:end="339:25">-&gt;</operator><name pos:start="339:26" pos:end="339:28">sys</name><operator pos:start="339:29" pos:end="339:30">-&gt;</operator><name pos:start="339:31" pos:end="339:33">bpm</name></name> <operator pos:start="339:35" pos:end="339:36">==</operator> <literal type="number" pos:start="339:38" pos:end="339:38">8</literal></expr>)</condition> <block pos:start="339:41" pos:end="343:19">{<block_content pos:start="341:23" pos:end="341:87">

                      <expr_stmt pos:start="341:23" pos:end="341:74"><expr pos:start="341:23" pos:end="341:73"><operator pos:start="341:23" pos:end="341:23">(</operator><name pos:start="341:24" pos:end="341:25">mb</name><operator pos:start="341:26" pos:end="341:27">++</operator><operator pos:start="341:28" pos:end="341:28">)</operator><operator pos:start="341:29" pos:end="341:30">-&gt;</operator><call pos:start="341:31" pos:end="341:73"><name pos:start="341:31" pos:end="341:38">idct_put</name><argument_list pos:start="341:39" pos:end="341:73">(<argument pos:start="341:40" pos:end="341:55"><expr pos:start="341:40" pos:end="341:55"><name pos:start="341:40" pos:end="341:44">c_ptr</name> <operator pos:start="341:46" pos:end="341:46">+</operator> <name pos:start="341:48" pos:end="341:55">y_stride</name></expr></argument>, <argument pos:start="341:58" pos:end="341:65"><expr pos:start="341:58" pos:end="341:65"><name pos:start="341:58" pos:end="341:65">linesize</name></expr></argument>, <argument pos:start="341:68" pos:end="341:72"><expr pos:start="341:68" pos:end="341:72"><name pos:start="341:68" pos:end="341:72">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="341:76" pos:end="341:87"><expr pos:start="341:76" pos:end="341:86"><name pos:start="341:76" pos:end="341:80">block</name> <operator pos:start="341:82" pos:end="341:83">+=</operator> <literal type="number" pos:start="341:85" pos:end="341:86">64</literal></expr>;</expr_stmt>

                  </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <return pos:start="351:5" pos:end="351:13">return <expr pos:start="351:12" pos:end="351:12"><literal type="number" pos:start="351:12" pos:end="351:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
