<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10320.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:69"><name pos:start="1:1" pos:end="1:21">pvscsi_ring_init_data</name><argument_list pos:start="1:22" pos:end="1:69">(<argument pos:start="1:23" pos:end="1:39">PVSCSIRingInfo *m</argument>, <argument pos:start="1:42" pos:end="1:68">PVSCSICmdDescSetupRings *ri</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:25">txr_len_log2</name></decl>, <decl pos:start="7:28" pos:end="7:39"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:28" pos:end="7:39">rxr_len_log2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:26">req_ring_size</name></decl>, <decl pos:start="9:29" pos:end="9:41"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:29" pos:end="9:41">cmp_ring_size</name></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:51"><expr pos:start="11:5" pos:end="11:50"><name pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:5">m</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:12">rs_pa</name></name> <operator pos:start="11:14" pos:end="11:14">=</operator> <name pos:start="11:16" pos:end="11:32"><name pos:start="11:16" pos:end="11:17">ri</name><operator pos:start="11:18" pos:end="11:19">-&gt;</operator><name pos:start="11:20" pos:end="11:32">ringsStatePPN</name></name> <operator pos:start="11:34" pos:end="11:35">&lt;&lt;</operator> <name pos:start="11:37" pos:end="11:50">VMW_PAGE_SHIFT</name></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="17:68">(<expr pos:start="15:9" pos:end="17:67"><operator pos:start="15:9" pos:end="15:9">(</operator><name pos:start="15:10" pos:end="15:28"><name pos:start="15:10" pos:end="15:11">ri</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:28">reqRingNumPages</name></name> <operator pos:start="15:30" pos:end="15:30">&gt;</operator> <name pos:start="15:32" pos:end="15:63">PVSCSI_SETUP_RINGS_MAX_NUM_PAGES</name><operator pos:start="15:64" pos:end="15:64">)</operator>

        <operator pos:start="17:9" pos:end="17:10">||</operator> <operator pos:start="17:12" pos:end="17:12">(</operator><name pos:start="17:13" pos:end="17:31"><name pos:start="17:13" pos:end="17:14">ri</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:31">cmpRingNumPages</name></name> <operator pos:start="17:33" pos:end="17:33">&gt;</operator> <name pos:start="17:35" pos:end="17:66">PVSCSI_SETUP_RINGS_MAX_NUM_PAGES</name><operator pos:start="17:67" pos:end="17:67">)</operator></expr>)</condition> <block pos:start="17:70" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:18">

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:78"><expr pos:start="23:5" pos:end="23:77"><name pos:start="23:5" pos:end="23:17">req_ring_size</name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:39"><name pos:start="23:21" pos:end="23:22">ri</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:39">reqRingNumPages</name></name> <operator pos:start="23:41" pos:end="23:41">*</operator> <name pos:start="23:43" pos:end="23:77">PVSCSI_MAX_NUM_REQ_ENTRIES_PER_PAGE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:78"><expr pos:start="25:5" pos:end="25:77"><name pos:start="25:5" pos:end="25:17">cmp_ring_size</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:39"><name pos:start="25:21" pos:end="25:22">ri</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:39">cmpRingNumPages</name></name> <operator pos:start="25:41" pos:end="25:41">*</operator> <name pos:start="25:43" pos:end="25:77">PVSCSI_MAX_NUM_CMP_ENTRIES_PER_PAGE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:50"><expr pos:start="27:5" pos:end="27:49"><name pos:start="27:5" pos:end="27:16">txr_len_log2</name> <operator pos:start="27:18" pos:end="27:18">=</operator> <call pos:start="27:20" pos:end="27:49"><name pos:start="27:20" pos:end="27:30">pvscsi_log2</name><argument_list pos:start="27:31" pos:end="27:49">(<argument pos:start="27:32" pos:end="27:48"><expr pos:start="27:32" pos:end="27:48"><name pos:start="27:32" pos:end="27:44">req_ring_size</name> <operator pos:start="27:46" pos:end="27:46">-</operator> <literal type="number" pos:start="27:48" pos:end="27:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:50"><expr pos:start="29:5" pos:end="29:49"><name pos:start="29:5" pos:end="29:16">rxr_len_log2</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <call pos:start="29:20" pos:end="29:49"><name pos:start="29:20" pos:end="29:30">pvscsi_log2</name><argument_list pos:start="29:31" pos:end="29:49">(<argument pos:start="29:32" pos:end="29:48"><expr pos:start="29:32" pos:end="29:48"><name pos:start="29:32" pos:end="29:44">cmp_ring_size</name> <operator pos:start="29:46" pos:end="29:46">-</operator> <literal type="number" pos:start="29:48" pos:end="29:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:41"><expr pos:start="33:5" pos:end="33:40"><name pos:start="33:5" pos:end="33:19"><name pos:start="33:5" pos:end="33:5">m</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:19">txr_len_mask</name></name> <operator pos:start="33:21" pos:end="33:21">=</operator> <call pos:start="33:23" pos:end="33:40"><name pos:start="33:23" pos:end="33:26">MASK</name><argument_list pos:start="33:27" pos:end="33:40">(<argument pos:start="33:28" pos:end="33:39"><expr pos:start="33:28" pos:end="33:39"><name pos:start="33:28" pos:end="33:39">txr_len_log2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:41"><expr pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:5">m</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:19">rxr_len_mask</name></name> <operator pos:start="35:21" pos:end="35:21">=</operator> <call pos:start="35:23" pos:end="35:40"><name pos:start="35:23" pos:end="35:26">MASK</name><argument_list pos:start="35:27" pos:end="35:40">(<argument pos:start="35:28" pos:end="35:39"><expr pos:start="35:28" pos:end="35:39"><name pos:start="35:28" pos:end="35:39">rxr_len_log2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:24"><expr pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:19"><name pos:start="39:5" pos:end="39:5">m</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:19">consumed_ptr</name></name> <operator pos:start="39:21" pos:end="39:21">=</operator> <literal type="number" pos:start="39:23" pos:end="39:23">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:26"><expr pos:start="41:5" pos:end="41:25"><name pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:5">m</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:21">filled_cmp_ptr</name></name> <operator pos:start="41:23" pos:end="41:23">=</operator> <literal type="number" pos:start="41:25" pos:end="41:25">0</literal></expr>;</expr_stmt>



    <for pos:start="45:5" pos:end="49:5">for <control pos:start="45:9" pos:end="45:45">(<init pos:start="45:10" pos:end="45:15"><expr pos:start="45:10" pos:end="45:14"><name pos:start="45:10" pos:end="45:10">i</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>;</init> <condition pos:start="45:17" pos:end="45:40"><expr pos:start="45:17" pos:end="45:39"><name pos:start="45:17" pos:end="45:17">i</name> <operator pos:start="45:19" pos:end="45:19">&lt;</operator> <name pos:start="45:21" pos:end="45:39"><name pos:start="45:21" pos:end="45:22">ri</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:39">reqRingNumPages</name></name></expr>;</condition> <incr pos:start="45:42" pos:end="45:44"><expr pos:start="45:42" pos:end="45:44"><name pos:start="45:42" pos:end="45:42">i</name><operator pos:start="45:43" pos:end="45:44">++</operator></expr></incr>)</control> <block pos:start="45:47" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:71">

        <expr_stmt pos:start="47:9" pos:end="47:71"><expr pos:start="47:9" pos:end="47:70"><name pos:start="47:9" pos:end="47:31"><name pos:start="47:9" pos:end="47:9">m</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:28">req_ring_pages_pa</name><index pos:start="47:29" pos:end="47:31">[<expr pos:start="47:30" pos:end="47:30"><name pos:start="47:30" pos:end="47:30">i</name></expr>]</index></name> <operator pos:start="47:33" pos:end="47:33">=</operator> <name pos:start="47:35" pos:end="47:52"><name pos:start="47:35" pos:end="47:36">ri</name><operator pos:start="47:37" pos:end="47:38">-&gt;</operator><name pos:start="47:39" pos:end="47:49">reqRingPPNs</name><index pos:start="47:50" pos:end="47:52">[<expr pos:start="47:51" pos:end="47:51"><name pos:start="47:51" pos:end="47:51">i</name></expr>]</index></name> <operator pos:start="47:54" pos:end="47:55">&lt;&lt;</operator> <name pos:start="47:57" pos:end="47:70">VMW_PAGE_SHIFT</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="53:5" pos:end="57:5">for <control pos:start="53:9" pos:end="53:45">(<init pos:start="53:10" pos:end="53:15"><expr pos:start="53:10" pos:end="53:14"><name pos:start="53:10" pos:end="53:10">i</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>;</init> <condition pos:start="53:17" pos:end="53:40"><expr pos:start="53:17" pos:end="53:39"><name pos:start="53:17" pos:end="53:17">i</name> <operator pos:start="53:19" pos:end="53:19">&lt;</operator> <name pos:start="53:21" pos:end="53:39"><name pos:start="53:21" pos:end="53:22">ri</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:39">cmpRingNumPages</name></name></expr>;</condition> <incr pos:start="53:42" pos:end="53:44"><expr pos:start="53:42" pos:end="53:44"><name pos:start="53:42" pos:end="53:42">i</name><operator pos:start="53:43" pos:end="53:44">++</operator></expr></incr>)</control> <block pos:start="53:47" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:71">

        <expr_stmt pos:start="55:9" pos:end="55:71"><expr pos:start="55:9" pos:end="55:70"><name pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:9">m</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:28">cmp_ring_pages_pa</name><index pos:start="55:29" pos:end="55:31">[<expr pos:start="55:30" pos:end="55:30"><name pos:start="55:30" pos:end="55:30">i</name></expr>]</index></name> <operator pos:start="55:33" pos:end="55:33">=</operator> <name pos:start="55:35" pos:end="55:52"><name pos:start="55:35" pos:end="55:36">ri</name><operator pos:start="55:37" pos:end="55:38">-&gt;</operator><name pos:start="55:39" pos:end="55:49">cmpRingPPNs</name><index pos:start="55:50" pos:end="55:52">[<expr pos:start="55:51" pos:end="55:51"><name pos:start="55:51" pos:end="55:51">i</name></expr>]</index></name> <operator pos:start="55:54" pos:end="55:55">&lt;&lt;</operator> <name pos:start="55:57" pos:end="55:70">VMW_PAGE_SHIFT</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="61:5" pos:end="61:35"><expr pos:start="61:5" pos:end="61:34"><call pos:start="61:5" pos:end="61:34"><name pos:start="61:5" pos:end="61:16">RS_SET_FIELD</name><argument_list pos:start="61:17" pos:end="61:34">(<argument pos:start="61:18" pos:end="61:18"><expr pos:start="61:18" pos:end="61:18"><name pos:start="61:18" pos:end="61:18">m</name></expr></argument>, <argument pos:start="61:21" pos:end="61:30"><expr pos:start="61:21" pos:end="61:30"><name pos:start="61:21" pos:end="61:30">reqProdIdx</name></expr></argument>, <argument pos:start="61:33" pos:end="61:33"><expr pos:start="61:33" pos:end="61:33"><literal type="number" pos:start="61:33" pos:end="61:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:35"><expr pos:start="63:5" pos:end="63:34"><call pos:start="63:5" pos:end="63:34"><name pos:start="63:5" pos:end="63:16">RS_SET_FIELD</name><argument_list pos:start="63:17" pos:end="63:34">(<argument pos:start="63:18" pos:end="63:18"><expr pos:start="63:18" pos:end="63:18"><name pos:start="63:18" pos:end="63:18">m</name></expr></argument>, <argument pos:start="63:21" pos:end="63:30"><expr pos:start="63:21" pos:end="63:30"><name pos:start="63:21" pos:end="63:30">reqConsIdx</name></expr></argument>, <argument pos:start="63:33" pos:end="63:33"><expr pos:start="63:33" pos:end="63:33"><literal type="number" pos:start="63:33" pos:end="63:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:53"><expr pos:start="65:5" pos:end="65:52"><call pos:start="65:5" pos:end="65:52"><name pos:start="65:5" pos:end="65:16">RS_SET_FIELD</name><argument_list pos:start="65:17" pos:end="65:52">(<argument pos:start="65:18" pos:end="65:18"><expr pos:start="65:18" pos:end="65:18"><name pos:start="65:18" pos:end="65:18">m</name></expr></argument>, <argument pos:start="65:21" pos:end="65:37"><expr pos:start="65:21" pos:end="65:37"><name pos:start="65:21" pos:end="65:37">reqNumEntriesLog2</name></expr></argument>, <argument pos:start="65:40" pos:end="65:51"><expr pos:start="65:40" pos:end="65:51"><name pos:start="65:40" pos:end="65:51">txr_len_log2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:35"><expr pos:start="69:5" pos:end="69:34"><call pos:start="69:5" pos:end="69:34"><name pos:start="69:5" pos:end="69:16">RS_SET_FIELD</name><argument_list pos:start="69:17" pos:end="69:34">(<argument pos:start="69:18" pos:end="69:18"><expr pos:start="69:18" pos:end="69:18"><name pos:start="69:18" pos:end="69:18">m</name></expr></argument>, <argument pos:start="69:21" pos:end="69:30"><expr pos:start="69:21" pos:end="69:30"><name pos:start="69:21" pos:end="69:30">cmpProdIdx</name></expr></argument>, <argument pos:start="69:33" pos:end="69:33"><expr pos:start="69:33" pos:end="69:33"><literal type="number" pos:start="69:33" pos:end="69:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:35"><expr pos:start="71:5" pos:end="71:34"><call pos:start="71:5" pos:end="71:34"><name pos:start="71:5" pos:end="71:16">RS_SET_FIELD</name><argument_list pos:start="71:17" pos:end="71:34">(<argument pos:start="71:18" pos:end="71:18"><expr pos:start="71:18" pos:end="71:18"><name pos:start="71:18" pos:end="71:18">m</name></expr></argument>, <argument pos:start="71:21" pos:end="71:30"><expr pos:start="71:21" pos:end="71:30"><name pos:start="71:21" pos:end="71:30">cmpConsIdx</name></expr></argument>, <argument pos:start="71:33" pos:end="71:33"><expr pos:start="71:33" pos:end="71:33"><literal type="number" pos:start="71:33" pos:end="71:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:53"><expr pos:start="73:5" pos:end="73:52"><call pos:start="73:5" pos:end="73:52"><name pos:start="73:5" pos:end="73:16">RS_SET_FIELD</name><argument_list pos:start="73:17" pos:end="73:52">(<argument pos:start="73:18" pos:end="73:18"><expr pos:start="73:18" pos:end="73:18"><name pos:start="73:18" pos:end="73:18">m</name></expr></argument>, <argument pos:start="73:21" pos:end="73:37"><expr pos:start="73:21" pos:end="73:37"><name pos:start="73:21" pos:end="73:37">cmpNumEntriesLog2</name></expr></argument>, <argument pos:start="73:40" pos:end="73:51"><expr pos:start="73:40" pos:end="73:51"><name pos:start="73:40" pos:end="73:51">rxr_len_log2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:60"><expr pos:start="77:5" pos:end="77:59"><call pos:start="77:5" pos:end="77:59"><name pos:start="77:5" pos:end="77:31">trace_pvscsi_ring_init_data</name><argument_list pos:start="77:32" pos:end="77:59">(<argument pos:start="77:33" pos:end="77:44"><expr pos:start="77:33" pos:end="77:44"><name pos:start="77:33" pos:end="77:44">txr_len_log2</name></expr></argument>, <argument pos:start="77:47" pos:end="77:58"><expr pos:start="77:47" pos:end="77:58"><name pos:start="77:47" pos:end="77:58">rxr_len_log2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="81:5" pos:end="81:39">/* Flush ring state page changes */</comment>

    <expr_stmt pos:start="83:5" pos:end="83:14"><expr pos:start="83:5" pos:end="83:13"><call pos:start="83:5" pos:end="83:13"><name pos:start="83:5" pos:end="83:11">smp_wmb</name><argument_list pos:start="83:12" pos:end="83:13">()</argument_list></call></expr>;</expr_stmt>



    <return pos:start="87:5" pos:end="87:13">return <expr pos:start="87:12" pos:end="87:12"><literal type="number" pos:start="87:12" pos:end="87:12">0</literal></expr>;</return>

</block_content>}</block>
</unit>
