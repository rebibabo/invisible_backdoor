<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20085.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">tco_timer_expired</name><parameter_list pos:start="1:30" pos:end="1:43">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:36"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:25">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">TCOIORegs</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:17">tr</name> <init pos:start="5:19" pos:end="5:26">= <expr pos:start="5:21" pos:end="5:26"><name pos:start="5:21" pos:end="5:26">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:66"><decl pos:start="7:5" pos:end="7:65"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">ICH9LPCPMRegs</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">pm</name> <init pos:start="7:23" pos:end="7:65">= <expr pos:start="7:25" pos:end="7:65"><call pos:start="7:25" pos:end="7:65"><name pos:start="7:25" pos:end="7:36">container_of</name><argument_list pos:start="7:37" pos:end="7:65">(<argument pos:start="7:38" pos:end="7:39"><expr pos:start="7:38" pos:end="7:39"><name pos:start="7:38" pos:end="7:39">tr</name></expr></argument>, <argument pos:start="7:42" pos:end="7:54"><expr pos:start="7:42" pos:end="7:54"><name pos:start="7:42" pos:end="7:54">ICH9LPCPMRegs</name></expr></argument>, <argument pos:start="7:57" pos:end="7:64"><expr pos:start="7:57" pos:end="7:64"><name pos:start="7:57" pos:end="7:64">tco_regs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:59"><decl pos:start="9:5" pos:end="9:58"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">ICH9LPCState</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">lpc</name> <init pos:start="9:23" pos:end="9:58">= <expr pos:start="9:25" pos:end="9:58"><call pos:start="9:25" pos:end="9:58"><name pos:start="9:25" pos:end="9:36">container_of</name><argument_list pos:start="9:37" pos:end="9:58">(<argument pos:start="9:38" pos:end="9:39"><expr pos:start="9:38" pos:end="9:39"><name pos:start="9:38" pos:end="9:39">pm</name></expr></argument>, <argument pos:start="9:42" pos:end="9:53"><expr pos:start="9:42" pos:end="9:53"><name pos:start="9:42" pos:end="9:53">ICH9LPCState</name></expr></argument>, <argument pos:start="9:56" pos:end="9:57"><expr pos:start="9:56" pos:end="9:57"><name pos:start="9:56" pos:end="9:57">pm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:64"><decl pos:start="11:5" pos:end="11:63"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:16">gcs</name> <init pos:start="11:18" pos:end="11:63">= <expr pos:start="11:20" pos:end="11:63"><call pos:start="11:20" pos:end="11:63"><name pos:start="11:20" pos:end="11:31">pci_get_long</name><argument_list pos:start="11:32" pos:end="11:63">(<argument pos:start="11:33" pos:end="11:62"><expr pos:start="11:33" pos:end="11:62"><name pos:start="11:33" pos:end="11:48"><name pos:start="11:33" pos:end="11:35">lpc</name><operator pos:start="11:36" pos:end="11:37">-&gt;</operator><name pos:start="11:38" pos:end="11:48">chip_config</name></name> <operator pos:start="11:50" pos:end="11:50">+</operator> <name pos:start="11:52" pos:end="11:62">ICH9_CC_GCS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:20"><expr pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:6">tr</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:11">tco</name><operator pos:start="15:12" pos:end="15:12">.</operator><name pos:start="15:13" pos:end="15:15">rld</name></name> <operator pos:start="15:17" pos:end="15:17">=</operator> <literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:32"><expr pos:start="17:5" pos:end="17:31"><name pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:6">tr</name><operator pos:start="17:7" pos:end="17:8">-&gt;</operator><name pos:start="17:9" pos:end="17:11">tco</name><operator pos:start="17:12" pos:end="17:12">.</operator><name pos:start="17:13" pos:end="17:16">sts1</name></name> <operator pos:start="17:18" pos:end="17:19">|=</operator> <name pos:start="17:21" pos:end="17:31">TCO_TIMEOUT</name></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="39:5"><if pos:start="19:5" pos:end="39:5">if <condition pos:start="19:8" pos:end="19:31">(<expr pos:start="19:9" pos:end="19:30"><operator pos:start="19:9" pos:end="19:10">++</operator><name pos:start="19:11" pos:end="19:25"><name pos:start="19:11" pos:end="19:12">tr</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:25">timeouts_no</name></name> <operator pos:start="19:27" pos:end="19:28">==</operator> <literal type="number" pos:start="19:30" pos:end="19:30">2</literal></expr>)</condition> <block pos:start="19:33" pos:end="39:5">{<block_content pos:start="21:9" pos:end="37:9">

        <expr_stmt pos:start="21:9" pos:end="21:42"><expr pos:start="21:9" pos:end="21:41"><name pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:10">tr</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:15">tco</name><operator pos:start="21:16" pos:end="21:16">.</operator><name pos:start="21:17" pos:end="21:20">sts2</name></name> <operator pos:start="21:22" pos:end="21:23">|=</operator> <name pos:start="21:25" pos:end="21:41">TCO_SECOND_TO_STS</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:37"><expr pos:start="23:9" pos:end="23:36"><name pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:10">tr</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:15">tco</name><operator pos:start="23:16" pos:end="23:16">.</operator><name pos:start="23:17" pos:end="23:20">sts2</name></name> <operator pos:start="23:22" pos:end="23:23">|=</operator> <name pos:start="23:25" pos:end="23:36">TCO_BOOT_STS</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:28"><expr pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:10">tr</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:23">timeouts_no</name></name> <operator pos:start="25:25" pos:end="25:25">=</operator> <literal type="number" pos:start="25:27" pos:end="25:27">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="29:9" pos:end="37:9"><if pos:start="29:9" pos:end="37:9">if <condition pos:start="29:12" pos:end="29:43">(<expr pos:start="29:13" pos:end="29:42"><operator pos:start="29:13" pos:end="29:13">!</operator><operator pos:start="29:14" pos:end="29:14">(</operator><name pos:start="29:15" pos:end="29:17">gcs</name> <operator pos:start="29:19" pos:end="29:19">&amp;</operator> <name pos:start="29:21" pos:end="29:41">ICH9_CC_GCS_NO_REBOOT</name><operator pos:start="29:42" pos:end="29:42">)</operator></expr>)</condition> <block pos:start="29:45" pos:end="37:9">{<block_content pos:start="31:13" pos:end="35:19">

            <expr_stmt pos:start="31:13" pos:end="31:38"><expr pos:start="31:13" pos:end="31:37"><call pos:start="31:13" pos:end="31:37"><name pos:start="31:13" pos:end="31:35">watchdog_perform_action</name><argument_list pos:start="31:36" pos:end="31:37">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:31"><expr pos:start="33:13" pos:end="33:30"><call pos:start="33:13" pos:end="33:30"><name pos:start="33:13" pos:end="33:26">tco_timer_stop</name><argument_list pos:start="33:27" pos:end="33:30">(<argument pos:start="33:28" pos:end="33:29"><expr pos:start="33:28" pos:end="33:29"><name pos:start="33:28" pos:end="33:29">tr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="35:13" pos:end="35:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:45">(<expr pos:start="43:9" pos:end="43:44"><name pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:10">pm</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:18">smi_en</name></name> <operator pos:start="43:20" pos:end="43:20">&amp;</operator> <name pos:start="43:22" pos:end="43:44">ICH9_PMIO_SMI_EN_TCO_EN</name></expr>)</condition> <block pos:start="43:47" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:28">

        <expr_stmt pos:start="45:9" pos:end="45:28"><expr pos:start="45:9" pos:end="45:27"><call pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:25">ich9_generate_smi</name><argument_list pos:start="45:26" pos:end="45:27">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="51:5">else <block pos:start="47:12" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:28">

        <expr_stmt pos:start="49:9" pos:end="49:28"><expr pos:start="49:9" pos:end="49:27"><call pos:start="49:9" pos:end="49:27"><name pos:start="49:9" pos:end="49:25">ich9_generate_nmi</name><argument_list pos:start="49:26" pos:end="49:27">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:30"><expr pos:start="53:5" pos:end="53:29"><name pos:start="53:5" pos:end="53:15"><name pos:start="53:5" pos:end="53:6">tr</name><operator pos:start="53:7" pos:end="53:8">-&gt;</operator><name pos:start="53:9" pos:end="53:11">tco</name><operator pos:start="53:12" pos:end="53:12">.</operator><name pos:start="53:13" pos:end="53:15">rld</name></name> <operator pos:start="53:17" pos:end="53:17">=</operator> <name pos:start="53:19" pos:end="53:29"><name pos:start="53:19" pos:end="53:20">tr</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:25">tco</name><operator pos:start="53:26" pos:end="53:26">.</operator><name pos:start="53:27" pos:end="53:29">tmr</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:25"><expr pos:start="55:5" pos:end="55:24"><call pos:start="55:5" pos:end="55:24"><name pos:start="55:5" pos:end="55:20">tco_timer_reload</name><argument_list pos:start="55:21" pos:end="55:24">(<argument pos:start="55:22" pos:end="55:23"><expr pos:start="55:22" pos:end="55:23"><name pos:start="55:22" pos:end="55:23">tr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
