<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13277.c" pos:tabs="8"><function pos:start="1:1" pos:end="273:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:46">libschroedinger_encode_init</name><parameter_list pos:start="1:47" pos:end="1:69">(<parameter pos:start="1:48" pos:end="1:68"><decl pos:start="1:48" pos:end="1:68"><type pos:start="1:48" pos:end="1:63"><name pos:start="1:48" pos:end="1:61">AVCodecContext</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:68">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="273:1">{<block_content pos:start="5:5" pos:end="271:13">

    <decl_stmt pos:start="5:5" pos:end="5:58"><decl pos:start="5:5" pos:end="5:57"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">SchroEncoderParams</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:38">p_schro_params</name> <init pos:start="5:40" pos:end="5:57">= <expr pos:start="5:42" pos:end="5:57"><name pos:start="5:42" pos:end="5:57"><name pos:start="5:42" pos:end="5:46">avctx</name><operator pos:start="5:47" pos:end="5:48">-&gt;</operator><name pos:start="5:49" pos:end="5:57">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:24">SchroVideoFormatEnum</name></type> <name pos:start="7:26" pos:end="7:31">preset</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:67">/* Initialize the libraries that libschroedinger depends on. */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:17"><expr pos:start="13:5" pos:end="13:16"><call pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:14">schro_init</name><argument_list pos:start="13:15" pos:end="13:16">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:35">/* Create an encoder object. */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:50"><expr pos:start="19:5" pos:end="19:49"><name pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:18">p_schro_params</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:27">encoder</name></name> <operator pos:start="19:29" pos:end="19:29">=</operator> <call pos:start="19:31" pos:end="19:49"><name pos:start="19:31" pos:end="19:47">schro_encoder_new</name><argument_list pos:start="19:48" pos:end="19:49">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:33">(<expr pos:start="23:9" pos:end="23:32"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:32"><name pos:start="23:10" pos:end="23:23">p_schro_params</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:32">encoder</name></name></expr>)</condition> <block pos:start="23:35" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:18">

        <expr_stmt pos:start="25:9" pos:end="27:66"><expr pos:start="25:9" pos:end="27:65"><call pos:start="25:9" pos:end="27:65"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="27:65">(<argument pos:start="25:16" pos:end="25:20"><expr pos:start="25:16" pos:end="25:20"><name pos:start="25:16" pos:end="25:20">avctx</name></expr></argument>, <argument pos:start="25:23" pos:end="25:34"><expr pos:start="25:23" pos:end="25:34"><name pos:start="25:23" pos:end="25:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="27:16" pos:end="27:64"><expr pos:start="27:16" pos:end="27:64"><literal type="string" pos:start="27:16" pos:end="27:64">"Unrecoverable Error: schro_encoder_new failed. "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:32">/* Initialize the format. */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:53"><expr pos:start="37:5" pos:end="37:52"><name pos:start="37:5" pos:end="37:10">preset</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <call pos:start="37:14" pos:end="37:52"><name pos:start="37:14" pos:end="37:45">ff_get_schro_video_format_preset</name><argument_list pos:start="37:46" pos:end="37:52">(<argument pos:start="37:47" pos:end="37:51"><expr pos:start="37:47" pos:end="37:51"><name pos:start="37:47" pos:end="37:51">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="41:76"><expr pos:start="39:5" pos:end="41:75"><name pos:start="39:5" pos:end="39:26"><name pos:start="39:5" pos:end="39:18">p_schro_params</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:26">format</name></name> <operator pos:start="39:28" pos:end="39:28">=</operator>

                    <call pos:start="41:21" pos:end="41:75"><name pos:start="41:21" pos:end="41:50">schro_encoder_get_video_format</name><argument_list pos:start="41:51" pos:end="41:75">(<argument pos:start="41:52" pos:end="41:74"><expr pos:start="41:52" pos:end="41:74"><name pos:start="41:52" pos:end="41:74"><name pos:start="41:52" pos:end="41:65">p_schro_params</name><operator pos:start="41:66" pos:end="41:67">-&gt;</operator><name pos:start="41:68" pos:end="41:74">encoder</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:76"><expr pos:start="43:5" pos:end="43:75"><call pos:start="43:5" pos:end="43:75"><name pos:start="43:5" pos:end="43:43">schro_video_format_set_std_video_format</name><argument_list pos:start="43:44" pos:end="43:75">(<argument pos:start="43:45" pos:end="43:66"><expr pos:start="43:45" pos:end="43:66"><name pos:start="43:45" pos:end="43:66"><name pos:start="43:45" pos:end="43:58">p_schro_params</name><operator pos:start="43:59" pos:end="43:60">-&gt;</operator><name pos:start="43:61" pos:end="43:66">format</name></name></expr></argument>, <argument pos:start="43:69" pos:end="43:74"><expr pos:start="43:69" pos:end="43:74"><name pos:start="43:69" pos:end="43:74">preset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:50"><expr pos:start="45:5" pos:end="45:49"><name pos:start="45:5" pos:end="45:33"><name pos:start="45:5" pos:end="45:18">p_schro_params</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:26">format</name><operator pos:start="45:27" pos:end="45:28">-&gt;</operator><name pos:start="45:29" pos:end="45:33">width</name></name>  <operator pos:start="45:36" pos:end="45:36">=</operator> <name pos:start="45:38" pos:end="45:49"><name pos:start="45:38" pos:end="45:42">avctx</name><operator pos:start="45:43" pos:end="45:44">-&gt;</operator><name pos:start="45:45" pos:end="45:49">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:51"><expr pos:start="47:5" pos:end="47:50"><name pos:start="47:5" pos:end="47:34"><name pos:start="47:5" pos:end="47:18">p_schro_params</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:26">format</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:34">height</name></name> <operator pos:start="47:36" pos:end="47:36">=</operator> <name pos:start="47:38" pos:end="47:50"><name pos:start="47:38" pos:end="47:42">avctx</name><operator pos:start="47:43" pos:end="47:44">-&gt;</operator><name pos:start="47:45" pos:end="47:50">height</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="53:18"><if pos:start="51:5" pos:end="53:18">if <condition pos:start="51:8" pos:end="51:39">(<expr pos:start="51:9" pos:end="51:38"><call pos:start="51:9" pos:end="51:32"><name pos:start="51:9" pos:end="51:25">set_chroma_format</name><argument_list pos:start="51:26" pos:end="51:32">(<argument pos:start="51:27" pos:end="51:31"><expr pos:start="51:27" pos:end="51:31"><name pos:start="51:27" pos:end="51:31">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="51:34" pos:end="51:35">==</operator> <operator pos:start="51:37" pos:end="51:37">-</operator><literal type="number" pos:start="51:38" pos:end="51:38">1</literal></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:18"><block_content pos:start="53:9" pos:end="53:18">

        <return pos:start="53:9" pos:end="53:18">return <expr pos:start="53:16" pos:end="53:17"><operator pos:start="53:16" pos:end="53:16">-</operator><literal type="number" pos:start="53:17" pos:end="53:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="69:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:50">(<expr pos:start="57:9" pos:end="57:49"><name pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:13">avctx</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:30">color_primaries</name></name> <operator pos:start="57:32" pos:end="57:33">==</operator> <name pos:start="57:35" pos:end="57:49">AVCOL_PRI_BT709</name></expr>)</condition> <block pos:start="57:52" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:77">

        <expr_stmt pos:start="59:9" pos:end="59:77"><expr pos:start="59:9" pos:end="59:76"><name pos:start="59:9" pos:end="59:48"><name pos:start="59:9" pos:end="59:22">p_schro_params</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:30">format</name><operator pos:start="59:31" pos:end="59:32">-&gt;</operator><name pos:start="59:33" pos:end="59:48">colour_primaries</name></name> <operator pos:start="59:50" pos:end="59:50">=</operator> <name pos:start="59:52" pos:end="59:76">SCHRO_COLOUR_PRIMARY_HDTV</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="61:7" pos:end="65:5">else if <condition pos:start="61:15" pos:end="61:59">(<expr pos:start="61:16" pos:end="61:58"><name pos:start="61:16" pos:end="61:37"><name pos:start="61:16" pos:end="61:20">avctx</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:37">color_primaries</name></name> <operator pos:start="61:39" pos:end="61:40">==</operator> <name pos:start="61:42" pos:end="61:58">AVCOL_PRI_BT470BG</name></expr>)</condition> <block pos:start="61:61" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:81">

        <expr_stmt pos:start="63:9" pos:end="63:81"><expr pos:start="63:9" pos:end="63:80"><name pos:start="63:9" pos:end="63:48"><name pos:start="63:9" pos:end="63:22">p_schro_params</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:30">format</name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:48">colour_primaries</name></name> <operator pos:start="63:50" pos:end="63:50">=</operator> <name pos:start="63:52" pos:end="63:80">SCHRO_COLOUR_PRIMARY_SDTV_625</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="65:7" pos:end="69:5">else if <condition pos:start="65:15" pos:end="65:61">(<expr pos:start="65:16" pos:end="65:60"><name pos:start="65:16" pos:end="65:37"><name pos:start="65:16" pos:end="65:20">avctx</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:37">color_primaries</name></name> <operator pos:start="65:39" pos:end="65:40">==</operator> <name pos:start="65:42" pos:end="65:60">AVCOL_PRI_SMPTE170M</name></expr>)</condition> <block pos:start="65:63" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:81">

        <expr_stmt pos:start="67:9" pos:end="67:81"><expr pos:start="67:9" pos:end="67:80"><name pos:start="67:9" pos:end="67:48"><name pos:start="67:9" pos:end="67:22">p_schro_params</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:30">format</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:48">colour_primaries</name></name> <operator pos:start="67:50" pos:end="67:50">=</operator> <name pos:start="67:52" pos:end="67:80">SCHRO_COLOUR_PRIMARY_SDTV_525</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="73:5" pos:end="81:5"><if pos:start="73:5" pos:end="77:5">if <condition pos:start="73:8" pos:end="73:45">(<expr pos:start="73:9" pos:end="73:44"><name pos:start="73:9" pos:end="73:25"><name pos:start="73:9" pos:end="73:13">avctx</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:25">colorspace</name></name> <operator pos:start="73:27" pos:end="73:28">==</operator> <name pos:start="73:30" pos:end="73:44">AVCOL_SPC_BT709</name></expr>)</condition> <block pos:start="73:47" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:73">

        <expr_stmt pos:start="75:9" pos:end="75:73"><expr pos:start="75:9" pos:end="75:72"><name pos:start="75:9" pos:end="75:45"><name pos:start="75:9" pos:end="75:22">p_schro_params</name><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:30">format</name><operator pos:start="75:31" pos:end="75:32">-&gt;</operator><name pos:start="75:33" pos:end="75:45">colour_matrix</name></name> <operator pos:start="75:47" pos:end="75:47">=</operator> <name pos:start="75:49" pos:end="75:72">SCHRO_COLOUR_MATRIX_HDTV</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="77:7" pos:end="81:5">else if <condition pos:start="77:15" pos:end="77:54">(<expr pos:start="77:16" pos:end="77:53"><name pos:start="77:16" pos:end="77:32"><name pos:start="77:16" pos:end="77:20">avctx</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:32">colorspace</name></name> <operator pos:start="77:34" pos:end="77:35">==</operator> <name pos:start="77:37" pos:end="77:53">AVCOL_SPC_BT470BG</name></expr>)</condition> <block pos:start="77:56" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:73">

        <expr_stmt pos:start="79:9" pos:end="79:73"><expr pos:start="79:9" pos:end="79:72"><name pos:start="79:9" pos:end="79:45"><name pos:start="79:9" pos:end="79:22">p_schro_params</name><operator pos:start="79:23" pos:end="79:24">-&gt;</operator><name pos:start="79:25" pos:end="79:30">format</name><operator pos:start="79:31" pos:end="79:32">-&gt;</operator><name pos:start="79:33" pos:end="79:45">colour_matrix</name></name> <operator pos:start="79:47" pos:end="79:47">=</operator> <name pos:start="79:49" pos:end="79:72">SCHRO_COLOUR_MATRIX_SDTV</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="85:5" pos:end="89:5"><if pos:start="85:5" pos:end="89:5">if <condition pos:start="85:8" pos:end="85:44">(<expr pos:start="85:9" pos:end="85:43"><name pos:start="85:9" pos:end="85:24"><name pos:start="85:9" pos:end="85:13">avctx</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:24">color_trc</name></name> <operator pos:start="85:26" pos:end="85:27">==</operator> <name pos:start="85:29" pos:end="85:43">AVCOL_TRC_BT709</name></expr>)</condition> <block pos:start="85:46" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:81">

        <expr_stmt pos:start="87:9" pos:end="87:81"><expr pos:start="87:9" pos:end="87:80"><name pos:start="87:9" pos:end="87:49"><name pos:start="87:9" pos:end="87:22">p_schro_params</name><operator pos:start="87:23" pos:end="87:24">-&gt;</operator><name pos:start="87:25" pos:end="87:30">format</name><operator pos:start="87:31" pos:end="87:32">-&gt;</operator><name pos:start="87:33" pos:end="87:49">transfer_function</name></name> <operator pos:start="87:51" pos:end="87:51">=</operator> <name pos:start="87:53" pos:end="87:80">SCHRO_TRANSFER_CHAR_TV_GAMMA</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="93:5" pos:end="105:5"><if pos:start="93:5" pos:end="105:5">if <condition pos:start="93:8" pos:end="95:71">(<expr pos:start="93:9" pos:end="95:70"><call pos:start="93:9" pos:end="95:64"><name pos:start="93:9" pos:end="93:33">ff_get_schro_frame_format</name><argument_list pos:start="93:34" pos:end="95:64">(<argument pos:start="93:35" pos:end="93:71"><expr pos:start="93:35" pos:end="93:71"><name pos:start="93:35" pos:end="93:71"><name pos:start="93:35" pos:end="93:48">p_schro_params</name><operator pos:start="93:49" pos:end="93:50">-&gt;</operator><name pos:start="93:51" pos:end="93:56">format</name><operator pos:start="93:57" pos:end="93:58">-&gt;</operator><name pos:start="93:59" pos:end="93:71">chroma_format</name></name></expr></argument>,

                                  <argument pos:start="95:35" pos:end="95:63"><expr pos:start="95:35" pos:end="95:63"><operator pos:start="95:35" pos:end="95:35">&amp;</operator><name pos:start="95:36" pos:end="95:63"><name pos:start="95:36" pos:end="95:49">p_schro_params</name><operator pos:start="95:50" pos:end="95:51">-&gt;</operator><name pos:start="95:52" pos:end="95:63">frame_format</name></name></expr></argument>)</argument_list></call> <operator pos:start="95:66" pos:end="95:67">==</operator> <operator pos:start="95:69" pos:end="95:69">-</operator><literal type="number" pos:start="95:70" pos:end="95:70">1</literal></expr>)</condition> <block pos:start="95:73" pos:end="105:5">{<block_content pos:start="97:9" pos:end="103:18">

        <expr_stmt pos:start="97:9" pos:end="101:40"><expr pos:start="97:9" pos:end="101:39"><call pos:start="97:9" pos:end="101:39"><name pos:start="97:9" pos:end="97:14">av_log</name><argument_list pos:start="97:15" pos:end="101:39">(<argument pos:start="97:16" pos:end="97:20"><expr pos:start="97:16" pos:end="97:20"><name pos:start="97:16" pos:end="97:20">avctx</name></expr></argument>, <argument pos:start="97:23" pos:end="97:34"><expr pos:start="97:23" pos:end="97:34"><name pos:start="97:23" pos:end="97:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="99:16" pos:end="101:38"><expr pos:start="99:16" pos:end="101:38"><literal type="string" pos:start="99:16" pos:end="99:75">"This codec currently supports only planar YUV 4:2:0, 4:2:2"</literal>

               <literal type="string" pos:start="101:16" pos:end="101:38">" and 4:4:4 formats.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="103:9" pos:end="103:18">return <expr pos:start="103:16" pos:end="103:17"><operator pos:start="103:16" pos:end="103:16">-</operator><literal type="number" pos:start="103:17" pos:end="103:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:74"><expr pos:start="109:5" pos:end="109:73"><name pos:start="109:5" pos:end="109:48"><name pos:start="109:5" pos:end="109:18">p_schro_params</name><operator pos:start="109:19" pos:end="109:20">-&gt;</operator><name pos:start="109:21" pos:end="109:26">format</name><operator pos:start="109:27" pos:end="109:28">-&gt;</operator><name pos:start="109:29" pos:end="109:48">frame_rate_numerator</name></name>   <operator pos:start="109:52" pos:end="109:52">=</operator> <name pos:start="109:54" pos:end="109:73"><name pos:start="109:54" pos:end="109:58">avctx</name><operator pos:start="109:59" pos:end="109:60">-&gt;</operator><name pos:start="109:61" pos:end="109:69">time_base</name><operator pos:start="109:70" pos:end="109:70">.</operator><name pos:start="109:71" pos:end="109:73">den</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:74"><expr pos:start="111:5" pos:end="111:73"><name pos:start="111:5" pos:end="111:50"><name pos:start="111:5" pos:end="111:18">p_schro_params</name><operator pos:start="111:19" pos:end="111:20">-&gt;</operator><name pos:start="111:21" pos:end="111:26">format</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:50">frame_rate_denominator</name></name> <operator pos:start="111:52" pos:end="111:52">=</operator> <name pos:start="111:54" pos:end="111:73"><name pos:start="111:54" pos:end="111:58">avctx</name><operator pos:start="111:59" pos:end="111:60">-&gt;</operator><name pos:start="111:61" pos:end="111:69">time_base</name><operator pos:start="111:70" pos:end="111:70">.</operator><name pos:start="111:71" pos:end="111:73">num</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="115:5" pos:end="119:76"><expr pos:start="115:5" pos:end="119:75"><name pos:start="115:5" pos:end="115:30"><name pos:start="115:5" pos:end="115:18">p_schro_params</name><operator pos:start="115:19" pos:end="115:20">-&gt;</operator><name pos:start="115:21" pos:end="115:30">frame_size</name></name> <operator pos:start="115:32" pos:end="115:32">=</operator> <call pos:start="115:34" pos:end="119:75"><name pos:start="115:34" pos:end="115:57">av_image_get_buffer_size</name><argument_list pos:start="115:58" pos:end="119:75">(<argument pos:start="115:59" pos:end="115:72"><expr pos:start="115:59" pos:end="115:72"><name pos:start="115:59" pos:end="115:72"><name pos:start="115:59" pos:end="115:63">avctx</name><operator pos:start="115:64" pos:end="115:65">-&gt;</operator><name pos:start="115:66" pos:end="115:72">pix_fmt</name></name></expr></argument>,

                                                          <argument pos:start="117:59" pos:end="117:70"><expr pos:start="117:59" pos:end="117:70"><name pos:start="117:59" pos:end="117:70"><name pos:start="117:59" pos:end="117:63">avctx</name><operator pos:start="117:64" pos:end="117:65">-&gt;</operator><name pos:start="117:66" pos:end="117:70">width</name></name></expr></argument>,

                                                          <argument pos:start="119:59" pos:end="119:71"><expr pos:start="119:59" pos:end="119:71"><name pos:start="119:59" pos:end="119:71"><name pos:start="119:59" pos:end="119:63">avctx</name><operator pos:start="119:64" pos:end="119:65">-&gt;</operator><name pos:start="119:66" pos:end="119:71">height</name></name></expr></argument>, <argument pos:start="119:74" pos:end="119:74"><expr pos:start="119:74" pos:end="119:74"><literal type="number" pos:start="119:74" pos:end="119:74">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="123:5" pos:end="161:5"><if pos:start="123:5" pos:end="151:5">if <condition pos:start="123:8" pos:end="123:25">(<expr pos:start="123:9" pos:end="123:24"><operator pos:start="123:9" pos:end="123:9">!</operator><name pos:start="123:10" pos:end="123:24"><name pos:start="123:10" pos:end="123:14">avctx</name><operator pos:start="123:15" pos:end="123:16">-&gt;</operator><name pos:start="123:17" pos:end="123:24">gop_size</name></name></expr>)</condition> <block pos:start="123:27" pos:end="151:5">{<block_content pos:start="125:9" pos:end="149:66">

        <expr_stmt pos:start="125:9" pos:end="134:0"><expr pos:start="125:9" pos:end="129:70"><call pos:start="125:9" pos:end="129:70"><name pos:start="125:9" pos:end="125:40">schro_encoder_setting_set_double</name><argument_list pos:start="125:41" pos:end="129:70">(<argument pos:start="125:42" pos:end="125:64"><expr pos:start="125:42" pos:end="125:64"><name pos:start="125:42" pos:end="125:64"><name pos:start="125:42" pos:end="125:55">p_schro_params</name><operator pos:start="125:56" pos:end="125:57">-&gt;</operator><name pos:start="125:58" pos:end="125:64">encoder</name></name></expr></argument>,

                                         <argument pos:start="127:42" pos:end="127:56"><expr pos:start="127:42" pos:end="127:56"><literal type="string" pos:start="127:42" pos:end="127:56">"gop_structure"</literal></expr></argument>,

                                         <argument pos:start="129:42" pos:end="129:69"><expr pos:start="129:42" pos:end="129:69"><name pos:start="129:42" pos:end="129:69">SCHRO_ENCODER_GOP_INTRA_ONLY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="133:1" pos:end="133:21">#<cpp:directive pos:start="133:2" pos:end="133:3">if</cpp:directive> <expr pos:start="133:5" pos:end="133:21"><name pos:start="133:5" pos:end="133:21">FF_API_CODER_TYPE</name></expr></cpp:if>

<macro pos:start="135:1" pos:end="135:31"><name pos:start="135:1" pos:end="135:31">FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

        <if_stmt pos:start="137:9" pos:end="139:40"><if pos:start="137:9" pos:end="139:40">if <condition pos:start="137:12" pos:end="137:51">(<expr pos:start="137:13" pos:end="137:50"><name pos:start="137:13" pos:end="137:29"><name pos:start="137:13" pos:end="137:17">avctx</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:29">coder_type</name></name> <operator pos:start="137:31" pos:end="137:32">!=</operator> <name pos:start="137:34" pos:end="137:50">FF_CODER_TYPE_VLC</name></expr>)</condition><block type="pseudo" pos:start="139:13" pos:end="139:40"><block_content pos:start="139:13" pos:end="139:40">

            <expr_stmt pos:start="139:13" pos:end="139:40"><expr pos:start="139:13" pos:end="139:39"><name pos:start="139:13" pos:end="139:35"><name pos:start="139:13" pos:end="139:26">p_schro_params</name><operator pos:start="139:27" pos:end="139:28">-&gt;</operator><name pos:start="139:29" pos:end="139:35">noarith</name></name> <operator pos:start="139:37" pos:end="139:37">=</operator> <literal type="number" pos:start="139:39" pos:end="139:39">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<decl_stmt pos:start="141:1" pos:end="149:66"><decl pos:start="141:1" pos:end="149:65"><type pos:start="141:1" pos:end="144:0"><name pos:start="141:1" pos:end="144:0">FF_ENABLE_DEPRECATION_WARNINGS</name></type>

<cpp:endif pos:start="143:1" pos:end="143:6">#<cpp:directive pos:start="143:2" pos:end="143:6">endif</cpp:directive></cpp:endif>

        <name pos:start="145:9" pos:end="145:40">schro_encoder_setting_set_double</name><argument_list pos:start="145:41" pos:end="149:65">(<argument pos:start="145:42" pos:end="145:64"><expr pos:start="145:42" pos:end="145:64"><name pos:start="145:42" pos:end="145:64"><name pos:start="145:42" pos:end="145:55">p_schro_params</name><operator pos:start="145:56" pos:end="145:57">-&gt;</operator><name pos:start="145:58" pos:end="145:64">encoder</name></name></expr></argument>,

                                         <argument pos:start="147:42" pos:end="147:57"><expr pos:start="147:42" pos:end="147:57"><literal type="string" pos:start="147:42" pos:end="147:57">"enable_noarith"</literal></expr></argument>,

                                         <argument pos:start="149:42" pos:end="149:64"><expr pos:start="149:42" pos:end="149:64"><name pos:start="149:42" pos:end="149:64"><name pos:start="149:42" pos:end="149:55">p_schro_params</name><operator pos:start="149:56" pos:end="149:57">-&gt;</operator><name pos:start="149:58" pos:end="149:64">noarith</name></name></expr></argument>)</argument_list></decl>;</decl_stmt>

    </block_content>}</block></if> <else pos:start="151:7" pos:end="161:5">else <block pos:start="151:12" pos:end="161:5">{<block_content pos:start="153:9" pos:end="159:33">

        <expr_stmt pos:start="153:9" pos:end="155:73"><expr pos:start="153:9" pos:end="155:72"><call pos:start="153:9" pos:end="155:72"><name pos:start="153:9" pos:end="153:40">schro_encoder_setting_set_double</name><argument_list pos:start="153:41" pos:end="155:72">(<argument pos:start="153:42" pos:end="153:64"><expr pos:start="153:42" pos:end="153:64"><name pos:start="153:42" pos:end="153:64"><name pos:start="153:42" pos:end="153:55">p_schro_params</name><operator pos:start="153:56" pos:end="153:57">-&gt;</operator><name pos:start="153:58" pos:end="153:64">encoder</name></name></expr></argument>,

                                         <argument pos:start="155:42" pos:end="155:54"><expr pos:start="155:42" pos:end="155:54"><literal type="string" pos:start="155:42" pos:end="155:54">"au_distance"</literal></expr></argument>, <argument pos:start="155:57" pos:end="155:71"><expr pos:start="155:57" pos:end="155:71"><name pos:start="155:57" pos:end="155:71"><name pos:start="155:57" pos:end="155:61">avctx</name><operator pos:start="155:62" pos:end="155:63">-&gt;</operator><name pos:start="155:64" pos:end="155:71">gop_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:32"><expr pos:start="157:9" pos:end="157:31"><name pos:start="157:9" pos:end="157:27"><name pos:start="157:9" pos:end="157:13">avctx</name><operator pos:start="157:14" pos:end="157:15">-&gt;</operator><name pos:start="157:16" pos:end="157:27">has_b_frames</name></name> <operator pos:start="157:29" pos:end="157:29">=</operator> <literal type="number" pos:start="157:31" pos:end="157:31">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:33"><expr pos:start="159:9" pos:end="159:32"><name pos:start="159:9" pos:end="159:27"><name pos:start="159:9" pos:end="159:22">p_schro_params</name><operator pos:start="159:23" pos:end="159:24">-&gt;</operator><name pos:start="159:25" pos:end="159:27">dts</name></name> <operator pos:start="159:29" pos:end="159:29">=</operator> <operator pos:start="159:31" pos:end="159:31">-</operator><literal type="number" pos:start="159:32" pos:end="159:32">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="165:5" pos:end="165:70">/* FIXME - Need to handle SCHRO_ENCODER_RATE_CONTROL_LOW_DELAY. */</comment>

    <if_stmt pos:start="167:5" pos:end="217:5"><if pos:start="167:5" pos:end="203:5">if <condition pos:start="167:8" pos:end="167:44">(<expr pos:start="167:9" pos:end="167:43"><name pos:start="167:9" pos:end="167:20"><name pos:start="167:9" pos:end="167:13">avctx</name><operator pos:start="167:14" pos:end="167:15">-&gt;</operator><name pos:start="167:16" pos:end="167:20">flags</name></name> <operator pos:start="167:22" pos:end="167:22">&amp;</operator> <name pos:start="167:24" pos:end="167:43">AV_CODEC_FLAG_QSCALE</name></expr>)</condition> <block pos:start="167:46" pos:end="203:5">{<block_content pos:start="169:9" pos:end="201:9">

        <if_stmt pos:start="169:9" pos:end="201:9"><if pos:start="169:9" pos:end="179:9">if <condition pos:start="169:12" pos:end="169:35">(<expr pos:start="169:13" pos:end="169:34"><operator pos:start="169:13" pos:end="169:13">!</operator><name pos:start="169:14" pos:end="169:34"><name pos:start="169:14" pos:end="169:18">avctx</name><operator pos:start="169:19" pos:end="169:20">-&gt;</operator><name pos:start="169:21" pos:end="169:34">global_quality</name></name></expr>)</condition> <block pos:start="169:37" pos:end="179:9">{<block_content pos:start="173:13" pos:end="177:82">

            <comment type="block" pos:start="171:13" pos:end="171:33">/* lossless coding */</comment>

            <expr_stmt pos:start="173:13" pos:end="177:82"><expr pos:start="173:13" pos:end="177:81"><call pos:start="173:13" pos:end="177:81"><name pos:start="173:13" pos:end="173:44">schro_encoder_setting_set_double</name><argument_list pos:start="173:45" pos:end="177:81">(<argument pos:start="173:46" pos:end="173:68"><expr pos:start="173:46" pos:end="173:68"><name pos:start="173:46" pos:end="173:68"><name pos:start="173:46" pos:end="173:59">p_schro_params</name><operator pos:start="173:60" pos:end="173:61">-&gt;</operator><name pos:start="173:62" pos:end="173:68">encoder</name></name></expr></argument>,

                                             <argument pos:start="175:46" pos:end="175:59"><expr pos:start="175:46" pos:end="175:59"><literal type="string" pos:start="175:46" pos:end="175:59">"rate_control"</literal></expr></argument>,

                                             <argument pos:start="177:46" pos:end="177:80"><expr pos:start="177:46" pos:end="177:80"><name pos:start="177:46" pos:end="177:80">SCHRO_ENCODER_RATE_CONTROL_LOSSLESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="179:11" pos:end="201:9">else <block pos:start="179:16" pos:end="201:9">{<block_content pos:start="181:13" pos:end="199:65">

            <decl_stmt pos:start="181:13" pos:end="181:24"><decl pos:start="181:13" pos:end="181:23"><type pos:start="181:13" pos:end="181:15"><name pos:start="181:13" pos:end="181:15">int</name></type> <name pos:start="181:17" pos:end="181:23">quality</name></decl>;</decl_stmt>

            <expr_stmt pos:start="183:13" pos:end="187:90"><expr pos:start="183:13" pos:end="187:89"><call pos:start="183:13" pos:end="187:89"><name pos:start="183:13" pos:end="183:44">schro_encoder_setting_set_double</name><argument_list pos:start="183:45" pos:end="187:89">(<argument pos:start="183:46" pos:end="183:68"><expr pos:start="183:46" pos:end="183:68"><name pos:start="183:46" pos:end="183:68"><name pos:start="183:46" pos:end="183:59">p_schro_params</name><operator pos:start="183:60" pos:end="183:61">-&gt;</operator><name pos:start="183:62" pos:end="183:68">encoder</name></name></expr></argument>,

                                             <argument pos:start="185:46" pos:end="185:59"><expr pos:start="185:46" pos:end="185:59"><literal type="string" pos:start="185:46" pos:end="185:59">"rate_control"</literal></expr></argument>,

                                             <argument pos:start="187:46" pos:end="187:88"><expr pos:start="187:46" pos:end="187:88"><name pos:start="187:46" pos:end="187:88">SCHRO_ENCODER_RATE_CONTROL_CONSTANT_QUALITY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="191:13" pos:end="191:59"><expr pos:start="191:13" pos:end="191:58"><name pos:start="191:13" pos:end="191:19">quality</name> <operator pos:start="191:21" pos:end="191:21">=</operator> <name pos:start="191:23" pos:end="191:43"><name pos:start="191:23" pos:end="191:27">avctx</name><operator pos:start="191:28" pos:end="191:29">-&gt;</operator><name pos:start="191:30" pos:end="191:43">global_quality</name></name> <operator pos:start="191:45" pos:end="191:45">/</operator> <name pos:start="191:47" pos:end="191:58">FF_QP2LAMBDA</name></expr>;</expr_stmt>

            <if_stmt pos:start="193:13" pos:end="195:29"><if pos:start="193:13" pos:end="195:29">if <condition pos:start="193:16" pos:end="193:29">(<expr pos:start="193:17" pos:end="193:28"><name pos:start="193:17" pos:end="193:23">quality</name> <operator pos:start="193:25" pos:end="193:25">&gt;</operator> <literal type="number" pos:start="193:27" pos:end="193:28">10</literal></expr>)</condition><block type="pseudo" pos:start="195:17" pos:end="195:29"><block_content pos:start="195:17" pos:end="195:29">

                <expr_stmt pos:start="195:17" pos:end="195:29"><expr pos:start="195:17" pos:end="195:28"><name pos:start="195:17" pos:end="195:23">quality</name> <operator pos:start="195:25" pos:end="195:25">=</operator> <literal type="number" pos:start="195:27" pos:end="195:28">10</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="197:13" pos:end="199:65"><expr pos:start="197:13" pos:end="199:64"><call pos:start="197:13" pos:end="199:64"><name pos:start="197:13" pos:end="197:44">schro_encoder_setting_set_double</name><argument_list pos:start="197:45" pos:end="199:64">(<argument pos:start="197:46" pos:end="197:68"><expr pos:start="197:46" pos:end="197:68"><name pos:start="197:46" pos:end="197:68"><name pos:start="197:46" pos:end="197:59">p_schro_params</name><operator pos:start="197:60" pos:end="197:61">-&gt;</operator><name pos:start="197:62" pos:end="197:68">encoder</name></name></expr></argument>,

                                             <argument pos:start="199:46" pos:end="199:54"><expr pos:start="199:46" pos:end="199:54"><literal type="string" pos:start="199:46" pos:end="199:54">"quality"</literal></expr></argument>, <argument pos:start="199:57" pos:end="199:63"><expr pos:start="199:57" pos:end="199:63"><name pos:start="199:57" pos:end="199:63">quality</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="203:7" pos:end="217:5">else <block pos:start="203:12" pos:end="217:5">{<block_content pos:start="205:9" pos:end="215:69">

        <expr_stmt pos:start="205:9" pos:end="209:86"><expr pos:start="205:9" pos:end="209:85"><call pos:start="205:9" pos:end="209:85"><name pos:start="205:9" pos:end="205:40">schro_encoder_setting_set_double</name><argument_list pos:start="205:41" pos:end="209:85">(<argument pos:start="205:42" pos:end="205:64"><expr pos:start="205:42" pos:end="205:64"><name pos:start="205:42" pos:end="205:64"><name pos:start="205:42" pos:end="205:55">p_schro_params</name><operator pos:start="205:56" pos:end="205:57">-&gt;</operator><name pos:start="205:58" pos:end="205:64">encoder</name></name></expr></argument>,

                                         <argument pos:start="207:42" pos:end="207:55"><expr pos:start="207:42" pos:end="207:55"><literal type="string" pos:start="207:42" pos:end="207:55">"rate_control"</literal></expr></argument>,

                                         <argument pos:start="209:42" pos:end="209:84"><expr pos:start="209:42" pos:end="209:84"><name pos:start="209:42" pos:end="209:84">SCHRO_ENCODER_RATE_CONTROL_CONSTANT_BITRATE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="213:9" pos:end="215:69"><expr pos:start="213:9" pos:end="215:68"><call pos:start="213:9" pos:end="215:68"><name pos:start="213:9" pos:end="213:40">schro_encoder_setting_set_double</name><argument_list pos:start="213:41" pos:end="215:68">(<argument pos:start="213:42" pos:end="213:64"><expr pos:start="213:42" pos:end="213:64"><name pos:start="213:42" pos:end="213:64"><name pos:start="213:42" pos:end="213:55">p_schro_params</name><operator pos:start="213:56" pos:end="213:57">-&gt;</operator><name pos:start="213:58" pos:end="213:64">encoder</name></name></expr></argument>,

                                         <argument pos:start="215:42" pos:end="215:50"><expr pos:start="215:42" pos:end="215:50"><literal type="string" pos:start="215:42" pos:end="215:50">"bitrate"</literal></expr></argument>, <argument pos:start="215:53" pos:end="215:67"><expr pos:start="215:53" pos:end="215:67"><name pos:start="215:53" pos:end="215:67"><name pos:start="215:53" pos:end="215:57">avctx</name><operator pos:start="215:58" pos:end="215:59">-&gt;</operator><name pos:start="215:60" pos:end="215:67">bit_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="221:5" pos:end="229:65"><if pos:start="221:5" pos:end="229:65">if <condition pos:start="221:8" pos:end="221:51">(<expr pos:start="221:9" pos:end="221:50"><name pos:start="221:9" pos:end="221:20"><name pos:start="221:9" pos:end="221:13">avctx</name><operator pos:start="221:14" pos:end="221:15">-&gt;</operator><name pos:start="221:16" pos:end="221:20">flags</name></name> <operator pos:start="221:22" pos:end="221:22">&amp;</operator> <name pos:start="221:24" pos:end="221:50">AV_CODEC_FLAG_INTERLACED_ME</name></expr>)</condition><block type="pseudo" pos:start="227:9" pos:end="229:65"><block_content pos:start="227:9" pos:end="229:65">

        <comment type="block" pos:start="223:9" pos:end="225:58">/* All material can be coded as interlaced or progressive

           irrespective of the type of source material. */</comment>

        <expr_stmt pos:start="227:9" pos:end="229:65"><expr pos:start="227:9" pos:end="229:64"><call pos:start="227:9" pos:end="229:64"><name pos:start="227:9" pos:end="227:40">schro_encoder_setting_set_double</name><argument_list pos:start="227:41" pos:end="229:64">(<argument pos:start="227:42" pos:end="227:64"><expr pos:start="227:42" pos:end="227:64"><name pos:start="227:42" pos:end="227:64"><name pos:start="227:42" pos:end="227:55">p_schro_params</name><operator pos:start="227:56" pos:end="227:57">-&gt;</operator><name pos:start="227:58" pos:end="227:64">encoder</name></name></expr></argument>,

                                         <argument pos:start="229:42" pos:end="229:60"><expr pos:start="229:42" pos:end="229:60"><literal type="string" pos:start="229:42" pos:end="229:60">"interlaced_coding"</literal></expr></argument>, <argument pos:start="229:63" pos:end="229:63"><expr pos:start="229:63" pos:end="229:63"><literal type="number" pos:start="229:63" pos:end="229:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="233:5" pos:end="235:81"><expr pos:start="233:5" pos:end="235:80"><call pos:start="233:5" pos:end="235:80"><name pos:start="233:5" pos:end="233:36">schro_encoder_setting_set_double</name><argument_list pos:start="233:37" pos:end="235:80">(<argument pos:start="233:38" pos:end="233:60"><expr pos:start="233:38" pos:end="233:60"><name pos:start="233:38" pos:end="233:60"><name pos:start="233:38" pos:end="233:51">p_schro_params</name><operator pos:start="233:52" pos:end="233:53">-&gt;</operator><name pos:start="233:54" pos:end="233:60">encoder</name></name></expr></argument>, <argument pos:start="233:63" pos:end="233:72"><expr pos:start="233:63" pos:end="233:72"><literal type="string" pos:start="233:63" pos:end="233:72">"open_gop"</literal></expr></argument>,

                                     <argument pos:start="235:38" pos:end="235:79"><expr pos:start="235:38" pos:end="235:79"><operator pos:start="235:38" pos:end="235:38">!</operator><operator pos:start="235:39" pos:end="235:39">(</operator><name pos:start="235:40" pos:end="235:51"><name pos:start="235:40" pos:end="235:44">avctx</name><operator pos:start="235:45" pos:end="235:46">-&gt;</operator><name pos:start="235:47" pos:end="235:51">flags</name></name> <operator pos:start="235:53" pos:end="235:53">&amp;</operator> <name pos:start="235:55" pos:end="235:78">AV_CODEC_FLAG_CLOSED_GOP</name><operator pos:start="235:79" pos:end="235:79">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="239:5" pos:end="241:52">/* FIXME: Signal range hardcoded to 8-bit data until both libschroedinger

     * and libdirac support other bit-depth data. */</comment>

    <expr_stmt pos:start="243:5" pos:end="245:75"><expr pos:start="243:5" pos:end="245:74"><call pos:start="243:5" pos:end="245:74"><name pos:start="243:5" pos:end="243:43">schro_video_format_set_std_signal_range</name><argument_list pos:start="243:44" pos:end="245:74">(<argument pos:start="243:45" pos:end="243:66"><expr pos:start="243:45" pos:end="243:66"><name pos:start="243:45" pos:end="243:66"><name pos:start="243:45" pos:end="243:58">p_schro_params</name><operator pos:start="243:59" pos:end="243:60">-&gt;</operator><name pos:start="243:61" pos:end="243:66">format</name></name></expr></argument>,

                                            <argument pos:start="245:45" pos:end="245:73"><expr pos:start="245:45" pos:end="245:73"><name pos:start="245:45" pos:end="245:73">SCHRO_SIGNAL_RANGE_8BIT_VIDEO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="249:5" pos:end="249:33">/* Set the encoder format. */</comment>

    <expr_stmt pos:start="251:5" pos:end="253:59"><expr pos:start="251:5" pos:end="253:58"><call pos:start="251:5" pos:end="253:58"><name pos:start="251:5" pos:end="251:34">schro_encoder_set_video_format</name><argument_list pos:start="251:35" pos:end="253:58">(<argument pos:start="251:36" pos:end="251:58"><expr pos:start="251:36" pos:end="251:58"><name pos:start="251:36" pos:end="251:58"><name pos:start="251:36" pos:end="251:49">p_schro_params</name><operator pos:start="251:50" pos:end="251:51">-&gt;</operator><name pos:start="251:52" pos:end="251:58">encoder</name></name></expr></argument>,

                                   <argument pos:start="253:36" pos:end="253:57"><expr pos:start="253:36" pos:end="253:57"><name pos:start="253:36" pos:end="253:57"><name pos:start="253:36" pos:end="253:49">p_schro_params</name><operator pos:start="253:50" pos:end="253:51">-&gt;</operator><name pos:start="253:52" pos:end="253:57">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="257:5" pos:end="257:30">/* Set the debug level. */</comment>

    <expr_stmt pos:start="259:5" pos:end="259:40"><expr pos:start="259:5" pos:end="259:39"><call pos:start="259:5" pos:end="259:39"><name pos:start="259:5" pos:end="259:25">schro_debug_set_level</name><argument_list pos:start="259:26" pos:end="259:39">(<argument pos:start="259:27" pos:end="259:38"><expr pos:start="259:27" pos:end="259:38"><name pos:start="259:27" pos:end="259:38"><name pos:start="259:27" pos:end="259:31">avctx</name><operator pos:start="259:32" pos:end="259:33">-&gt;</operator><name pos:start="259:34" pos:end="259:38">debug</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="263:5" pos:end="263:49"><expr pos:start="263:5" pos:end="263:48"><call pos:start="263:5" pos:end="263:48"><name pos:start="263:5" pos:end="263:23">schro_encoder_start</name><argument_list pos:start="263:24" pos:end="263:48">(<argument pos:start="263:25" pos:end="263:47"><expr pos:start="263:25" pos:end="263:47"><name pos:start="263:25" pos:end="263:47"><name pos:start="263:25" pos:end="263:38">p_schro_params</name><operator pos:start="263:39" pos:end="263:40">-&gt;</operator><name pos:start="263:41" pos:end="263:47">encoder</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="267:5" pos:end="267:45">/* Initialize the encoded frame queue. */</comment>

    <expr_stmt pos:start="269:5" pos:end="269:58"><expr pos:start="269:5" pos:end="269:57"><call pos:start="269:5" pos:end="269:57"><name pos:start="269:5" pos:end="269:23">ff_schro_queue_init</name><argument_list pos:start="269:24" pos:end="269:57">(<argument pos:start="269:25" pos:end="269:56"><expr pos:start="269:25" pos:end="269:56"><operator pos:start="269:25" pos:end="269:25">&amp;</operator><name pos:start="269:26" pos:end="269:56"><name pos:start="269:26" pos:end="269:39">p_schro_params</name><operator pos:start="269:40" pos:end="269:41">-&gt;</operator><name pos:start="269:42" pos:end="269:56">enc_frame_queue</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="271:5" pos:end="271:13">return <expr pos:start="271:12" pos:end="271:12"><literal type="number" pos:start="271:12" pos:end="271:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
