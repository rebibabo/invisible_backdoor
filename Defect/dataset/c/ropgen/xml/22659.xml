<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22659.c" pos:tabs="8"><function pos:start="1:1" pos:end="157:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">archipelago_submit_request</name><parameter_list pos:start="1:38" pos:end="13:47">(<parameter pos:start="1:39" pos:end="1:61"><decl pos:start="1:39" pos:end="1:61"><type pos:start="1:39" pos:end="1:61"><name pos:start="1:39" pos:end="1:58">BDRVArchipelagoState</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:61">s</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:55"><decl pos:start="3:41" pos:end="3:55"><type pos:start="3:41" pos:end="3:55"><name pos:start="3:41" pos:end="3:48">uint64_t</name></type> <name pos:start="3:50" pos:end="3:55">bufidx</name></decl></parameter>,

                                        <parameter pos:start="5:41" pos:end="5:52"><decl pos:start="5:41" pos:end="5:52"><type pos:start="5:41" pos:end="5:52"><name pos:start="5:41" pos:end="5:46">size_t</name></type> <name pos:start="5:48" pos:end="5:52">count</name></decl></parameter>,

                                        <parameter pos:start="7:41" pos:end="7:52"><decl pos:start="7:41" pos:end="7:52"><type pos:start="7:41" pos:end="7:52"><name pos:start="7:41" pos:end="7:45">off_t</name></type> <name pos:start="7:47" pos:end="7:52">offset</name></decl></parameter>,

                                        <parameter pos:start="9:41" pos:end="9:64"><decl pos:start="9:41" pos:end="9:64"><type pos:start="9:41" pos:end="9:64"><name pos:start="9:41" pos:end="9:56">ArchipelagoAIOCB</name> <modifier pos:start="9:58" pos:end="9:58">*</modifier></type><name pos:start="9:59" pos:end="9:64">aio_cb</name></decl></parameter>,

                                        <parameter pos:start="11:41" pos:end="11:75"><decl pos:start="11:41" pos:end="11:75"><type pos:start="11:41" pos:end="11:75"><name pos:start="11:41" pos:end="11:67">ArchipelagoSegmentedRequest</name> <modifier pos:start="11:69" pos:end="11:69">*</modifier></type><name pos:start="11:70" pos:end="11:75">segreq</name></decl></parameter>,

                                        <parameter pos:start="13:41" pos:end="13:46"><decl pos:start="13:41" pos:end="13:46"><type pos:start="13:41" pos:end="13:46"><name pos:start="13:41" pos:end="13:43">int</name></type> <name pos:start="13:45" pos:end="13:46">op</name></decl></parameter>)</parameter_list>

<block pos:start="15:1" pos:end="157:1">{<block_content pos:start="17:5" pos:end="155:16">

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>, <decl pos:start="17:14" pos:end="17:22"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:14" pos:end="17:22">targetlen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:8">char</name> <modifier pos:start="19:10" pos:end="19:10">*</modifier></type><name pos:start="19:11" pos:end="19:16">target</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:22"><decl pos:start="21:5" pos:end="21:21"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:8">void</name> <modifier pos:start="21:10" pos:end="21:10">*</modifier></type><name pos:start="21:11" pos:end="21:14">data</name> <init pos:start="21:16" pos:end="21:21">= <expr pos:start="21:18" pos:end="21:21"><name pos:start="21:18" pos:end="21:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:29"><decl pos:start="23:5" pos:end="23:28"><type pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:10">struct</name> <name pos:start="23:12" pos:end="23:23">xseg_request</name></name> <modifier pos:start="23:25" pos:end="23:25">*</modifier></type><name pos:start="23:26" pos:end="23:28">req</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:63"><decl pos:start="25:5" pos:end="25:62"><type pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:18">AIORequestData</name> <modifier pos:start="25:20" pos:end="25:20">*</modifier></type><name pos:start="25:21" pos:end="25:27">reqdata</name> <init pos:start="25:29" pos:end="25:62">= <expr pos:start="25:31" pos:end="25:62"><call pos:start="25:31" pos:end="25:62"><name pos:start="25:31" pos:end="25:38">g_malloc</name><argument_list pos:start="25:39" pos:end="25:62">(<argument pos:start="25:40" pos:end="25:61"><expr pos:start="25:40" pos:end="25:61"><sizeof pos:start="25:40" pos:end="25:61">sizeof<argument_list pos:start="25:46" pos:end="25:61">(<argument pos:start="25:47" pos:end="25:60"><expr pos:start="25:47" pos:end="25:60"><name pos:start="25:47" pos:end="25:60">AIORequestData</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:35"><expr pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:13">targetlen</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <call pos:start="29:17" pos:end="29:34"><name pos:start="29:17" pos:end="29:22">strlen</name><argument_list pos:start="29:23" pos:end="29:34">(<argument pos:start="29:24" pos:end="29:33"><expr pos:start="29:24" pos:end="29:33"><name pos:start="29:24" pos:end="29:33"><name pos:start="29:24" pos:end="29:24">s</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:33">volname</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:69"><expr pos:start="31:5" pos:end="31:68"><name pos:start="31:5" pos:end="31:7">req</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:68"><name pos:start="31:11" pos:end="31:26">xseg_get_request</name><argument_list pos:start="31:27" pos:end="31:68">(<argument pos:start="31:28" pos:end="31:34"><expr pos:start="31:28" pos:end="31:34"><name pos:start="31:28" pos:end="31:34"><name pos:start="31:28" pos:end="31:28">s</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:34">xseg</name></name></expr></argument>, <argument pos:start="31:37" pos:end="31:46"><expr pos:start="31:37" pos:end="31:46"><name pos:start="31:37" pos:end="31:46"><name pos:start="31:37" pos:end="31:37">s</name><operator pos:start="31:38" pos:end="31:39">-&gt;</operator><name pos:start="31:40" pos:end="31:46">srcport</name></name></expr></argument>, <argument pos:start="31:49" pos:end="31:58"><expr pos:start="31:49" pos:end="31:58"><name pos:start="31:49" pos:end="31:58"><name pos:start="31:49" pos:end="31:49">s</name><operator pos:start="31:50" pos:end="31:51">-&gt;</operator><name pos:start="31:52" pos:end="31:58">vportno</name></name></expr></argument>, <argument pos:start="31:61" pos:end="31:67"><expr pos:start="31:61" pos:end="31:67"><name pos:start="31:61" pos:end="31:67">X_ALLOC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:13">(<expr pos:start="33:9" pos:end="33:12"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:12">req</name></expr>)</condition> <block pos:start="33:15" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:23">

        <expr_stmt pos:start="35:9" pos:end="35:52"><expr pos:start="35:9" pos:end="35:51"><call pos:start="35:9" pos:end="35:51"><name pos:start="35:9" pos:end="35:22">archipelagolog</name><argument_list pos:start="35:23" pos:end="35:51">(<argument pos:start="35:24" pos:end="35:50"><expr pos:start="35:24" pos:end="35:50"><literal type="string" pos:start="35:24" pos:end="35:50">"Cannot get XSEG request\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="37:9" pos:end="37:23">goto <name pos:start="37:14" pos:end="37:22">err_exit2</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:60"><expr pos:start="41:5" pos:end="41:59"><name pos:start="41:5" pos:end="41:7">ret</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="41:59"><name pos:start="41:11" pos:end="41:27">xseg_prep_request</name><argument_list pos:start="41:28" pos:end="41:59">(<argument pos:start="41:29" pos:end="41:35"><expr pos:start="41:29" pos:end="41:35"><name pos:start="41:29" pos:end="41:35"><name pos:start="41:29" pos:end="41:29">s</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:35">xseg</name></name></expr></argument>, <argument pos:start="41:38" pos:end="41:40"><expr pos:start="41:38" pos:end="41:40"><name pos:start="41:38" pos:end="41:40">req</name></expr></argument>, <argument pos:start="41:43" pos:end="41:51"><expr pos:start="41:43" pos:end="41:51"><name pos:start="41:43" pos:end="41:51">targetlen</name></expr></argument>, <argument pos:start="41:54" pos:end="41:58"><expr pos:start="41:54" pos:end="41:58"><name pos:start="41:54" pos:end="41:58">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:16">(<expr pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">&lt;</operator> <literal type="number" pos:start="43:15" pos:end="43:15">0</literal></expr>)</condition> <block pos:start="43:18" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:22">

        <expr_stmt pos:start="45:9" pos:end="45:56"><expr pos:start="45:9" pos:end="45:55"><call pos:start="45:9" pos:end="45:55"><name pos:start="45:9" pos:end="45:22">archipelagolog</name><argument_list pos:start="45:23" pos:end="45:55">(<argument pos:start="45:24" pos:end="45:54"><expr pos:start="45:24" pos:end="45:54"><literal type="string" pos:start="45:24" pos:end="45:54">"Cannot prepare XSEG request\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="47:9" pos:end="47:22">goto <name pos:start="47:14" pos:end="47:21">err_exit</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:43"><expr pos:start="51:5" pos:end="51:42"><name pos:start="51:5" pos:end="51:10">target</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <call pos:start="51:14" pos:end="51:42"><name pos:start="51:14" pos:end="51:28">xseg_get_target</name><argument_list pos:start="51:29" pos:end="51:42">(<argument pos:start="51:30" pos:end="51:36"><expr pos:start="51:30" pos:end="51:36"><name pos:start="51:30" pos:end="51:36"><name pos:start="51:30" pos:end="51:30">s</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:36">xseg</name></name></expr></argument>, <argument pos:start="51:39" pos:end="51:41"><expr pos:start="51:39" pos:end="51:41"><name pos:start="51:39" pos:end="51:41">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:16">(<expr pos:start="53:9" pos:end="53:15"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:15">target</name></expr>)</condition> <block pos:start="53:18" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:22">

        <expr_stmt pos:start="55:9" pos:end="55:51"><expr pos:start="55:9" pos:end="55:50"><call pos:start="55:9" pos:end="55:50"><name pos:start="55:9" pos:end="55:22">archipelagolog</name><argument_list pos:start="55:23" pos:end="55:50">(<argument pos:start="55:24" pos:end="55:49"><expr pos:start="55:24" pos:end="55:49"><literal type="string" pos:start="55:24" pos:end="55:49">"Cannot get XSEG target\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="57:9" pos:end="57:22">goto <name pos:start="57:14" pos:end="57:21">err_exit</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:42"><expr pos:start="61:5" pos:end="61:41"><call pos:start="61:5" pos:end="61:41"><name pos:start="61:5" pos:end="61:10">memcpy</name><argument_list pos:start="61:11" pos:end="61:41">(<argument pos:start="61:12" pos:end="61:17"><expr pos:start="61:12" pos:end="61:17"><name pos:start="61:12" pos:end="61:17">target</name></expr></argument>, <argument pos:start="61:20" pos:end="61:29"><expr pos:start="61:20" pos:end="61:29"><name pos:start="61:20" pos:end="61:29"><name pos:start="61:20" pos:end="61:20">s</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:29">volname</name></name></expr></argument>, <argument pos:start="61:32" pos:end="61:40"><expr pos:start="61:32" pos:end="61:40"><name pos:start="61:32" pos:end="61:40">targetlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:22"><expr pos:start="63:5" pos:end="63:21"><name pos:start="63:5" pos:end="63:13"><name pos:start="63:5" pos:end="63:7">req</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:13">size</name></name> <operator pos:start="63:15" pos:end="63:15">=</operator> <name pos:start="63:17" pos:end="63:21">count</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:25"><expr pos:start="65:5" pos:end="65:24"><name pos:start="65:5" pos:end="65:15"><name pos:start="65:5" pos:end="65:7">req</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:15">offset</name></name> <operator pos:start="65:17" pos:end="65:17">=</operator> <name pos:start="65:19" pos:end="65:24">offset</name></expr>;</expr_stmt>



    <switch pos:start="69:5" pos:end="89:5">switch <condition pos:start="69:12" pos:end="69:15">(<expr pos:start="69:13" pos:end="69:14"><name pos:start="69:13" pos:end="69:14">op</name></expr>)</condition> <block pos:start="69:17" pos:end="89:5">{<block_content pos:start="71:5" pos:end="87:14">

    <case pos:start="71:5" pos:end="71:24">case <expr pos:start="71:10" pos:end="71:23"><name pos:start="71:10" pos:end="71:23">ARCHIP_OP_READ</name></expr>:</case>

        <expr_stmt pos:start="73:9" pos:end="73:25"><expr pos:start="73:9" pos:end="73:24"><name pos:start="73:9" pos:end="73:15"><name pos:start="73:9" pos:end="73:11">req</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:15">op</name></name> <operator pos:start="73:17" pos:end="73:17">=</operator> <name pos:start="73:19" pos:end="73:24">X_READ</name></expr>;</expr_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <case pos:start="77:5" pos:end="77:25">case <expr pos:start="77:10" pos:end="77:24"><name pos:start="77:10" pos:end="77:24">ARCHIP_OP_WRITE</name></expr>:</case>

        <expr_stmt pos:start="79:9" pos:end="79:26"><expr pos:start="79:9" pos:end="79:25"><name pos:start="79:9" pos:end="79:15"><name pos:start="79:9" pos:end="79:11">req</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:15">op</name></name> <operator pos:start="79:17" pos:end="79:17">=</operator> <name pos:start="79:19" pos:end="79:25">X_WRITE</name></expr>;</expr_stmt>

        <break pos:start="81:9" pos:end="81:14">break;</break>

    <case pos:start="83:5" pos:end="83:25">case <expr pos:start="83:10" pos:end="83:24"><name pos:start="83:10" pos:end="83:24">ARCHIP_OP_FLUSH</name></expr>:</case>

        <expr_stmt pos:start="85:9" pos:end="85:26"><expr pos:start="85:9" pos:end="85:25"><name pos:start="85:9" pos:end="85:15"><name pos:start="85:9" pos:end="85:11">req</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:15">op</name></name> <operator pos:start="85:17" pos:end="85:17">=</operator> <name pos:start="85:19" pos:end="85:25">X_FLUSH</name></expr>;</expr_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="91:5" pos:end="91:34"><expr pos:start="91:5" pos:end="91:33"><name pos:start="91:5" pos:end="91:20"><name pos:start="91:5" pos:end="91:11">reqdata</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:20">volname</name></name> <operator pos:start="91:22" pos:end="91:22">=</operator> <name pos:start="91:24" pos:end="91:33"><name pos:start="91:24" pos:end="91:24">s</name><operator pos:start="91:25" pos:end="91:26">-&gt;</operator><name pos:start="91:27" pos:end="91:33">volname</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:29"><expr pos:start="93:5" pos:end="93:28"><name pos:start="93:5" pos:end="93:19"><name pos:start="93:5" pos:end="93:11">reqdata</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:19">offset</name></name> <operator pos:start="93:21" pos:end="93:21">=</operator> <name pos:start="93:23" pos:end="93:28">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:26"><expr pos:start="95:5" pos:end="95:25"><name pos:start="95:5" pos:end="95:17"><name pos:start="95:5" pos:end="95:11">reqdata</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:17">size</name></name> <operator pos:start="95:19" pos:end="95:19">=</operator> <name pos:start="95:21" pos:end="95:25">count</name></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:29"><expr pos:start="97:5" pos:end="97:28"><name pos:start="97:5" pos:end="97:19"><name pos:start="97:5" pos:end="97:11">reqdata</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:19">bufidx</name></name> <operator pos:start="97:21" pos:end="97:21">=</operator> <name pos:start="97:23" pos:end="97:28">bufidx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:29"><expr pos:start="99:5" pos:end="99:28"><name pos:start="99:5" pos:end="99:19"><name pos:start="99:5" pos:end="99:11">reqdata</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:19">aio_cb</name></name> <operator pos:start="99:21" pos:end="99:21">=</operator> <name pos:start="99:23" pos:end="99:28">aio_cb</name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:29"><expr pos:start="101:5" pos:end="101:28"><name pos:start="101:5" pos:end="101:19"><name pos:start="101:5" pos:end="101:11">reqdata</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:19">segreq</name></name> <operator pos:start="101:21" pos:end="101:21">=</operator> <name pos:start="101:23" pos:end="101:28">segreq</name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:21"><expr pos:start="103:5" pos:end="103:20"><name pos:start="103:5" pos:end="103:15"><name pos:start="103:5" pos:end="103:11">reqdata</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:15">op</name></name> <operator pos:start="103:17" pos:end="103:17">=</operator> <name pos:start="103:19" pos:end="103:20">op</name></expr>;</expr_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:45"><expr pos:start="107:5" pos:end="107:44"><call pos:start="107:5" pos:end="107:44"><name pos:start="107:5" pos:end="107:21">xseg_set_req_data</name><argument_list pos:start="107:22" pos:end="107:44">(<argument pos:start="107:23" pos:end="107:29"><expr pos:start="107:23" pos:end="107:29"><name pos:start="107:23" pos:end="107:29"><name pos:start="107:23" pos:end="107:23">s</name><operator pos:start="107:24" pos:end="107:25">-&gt;</operator><name pos:start="107:26" pos:end="107:29">xseg</name></name></expr></argument>, <argument pos:start="107:32" pos:end="107:34"><expr pos:start="107:32" pos:end="107:34"><name pos:start="107:32" pos:end="107:34">req</name></expr></argument>, <argument pos:start="107:37" pos:end="107:43"><expr pos:start="107:37" pos:end="107:43"><name pos:start="107:37" pos:end="107:43">reqdata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="109:5" pos:end="123:5"><if pos:start="109:5" pos:end="123:5">if <condition pos:start="109:8" pos:end="109:30">(<expr pos:start="109:9" pos:end="109:29"><name pos:start="109:9" pos:end="109:10">op</name> <operator pos:start="109:12" pos:end="109:13">==</operator> <name pos:start="109:15" pos:end="109:29">ARCHIP_OP_WRITE</name></expr>)</condition> <block pos:start="109:32" pos:end="123:5">{<block_content pos:start="111:9" pos:end="121:61">

        <expr_stmt pos:start="111:9" pos:end="111:43"><expr pos:start="111:9" pos:end="111:42"><name pos:start="111:9" pos:end="111:12">data</name> <operator pos:start="111:14" pos:end="111:14">=</operator> <call pos:start="111:16" pos:end="111:42"><name pos:start="111:16" pos:end="111:28">xseg_get_data</name><argument_list pos:start="111:29" pos:end="111:42">(<argument pos:start="111:30" pos:end="111:36"><expr pos:start="111:30" pos:end="111:36"><name pos:start="111:30" pos:end="111:36"><name pos:start="111:30" pos:end="111:30">s</name><operator pos:start="111:31" pos:end="111:32">-&gt;</operator><name pos:start="111:33" pos:end="111:36">xseg</name></name></expr></argument>, <argument pos:start="111:39" pos:end="111:41"><expr pos:start="111:39" pos:end="111:41"><name pos:start="111:39" pos:end="111:41">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="113:9" pos:end="119:9"><if pos:start="113:9" pos:end="119:9">if <condition pos:start="113:12" pos:end="113:18">(<expr pos:start="113:13" pos:end="113:17"><operator pos:start="113:13" pos:end="113:13">!</operator><name pos:start="113:14" pos:end="113:17">data</name></expr>)</condition> <block pos:start="113:20" pos:end="119:9">{<block_content pos:start="115:13" pos:end="117:26">

            <expr_stmt pos:start="115:13" pos:end="115:53"><expr pos:start="115:13" pos:end="115:52"><call pos:start="115:13" pos:end="115:52"><name pos:start="115:13" pos:end="115:26">archipelagolog</name><argument_list pos:start="115:27" pos:end="115:52">(<argument pos:start="115:28" pos:end="115:51"><expr pos:start="115:28" pos:end="115:51"><literal type="string" pos:start="115:28" pos:end="115:51">"Cannot get XSEG data\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="117:13" pos:end="117:26">goto <name pos:start="117:18" pos:end="117:25">err_exit</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:61"><expr pos:start="121:9" pos:end="121:60"><call pos:start="121:9" pos:end="121:60"><name pos:start="121:9" pos:end="121:25">qemu_iovec_to_buf</name><argument_list pos:start="121:26" pos:end="121:60">(<argument pos:start="121:27" pos:end="121:38"><expr pos:start="121:27" pos:end="121:38"><name pos:start="121:27" pos:end="121:38"><name pos:start="121:27" pos:end="121:32">aio_cb</name><operator pos:start="121:33" pos:end="121:34">-&gt;</operator><name pos:start="121:35" pos:end="121:38">qiov</name></name></expr></argument>, <argument pos:start="121:41" pos:end="121:46"><expr pos:start="121:41" pos:end="121:46"><name pos:start="121:41" pos:end="121:46">bufidx</name></expr></argument>, <argument pos:start="121:49" pos:end="121:52"><expr pos:start="121:49" pos:end="121:52"><name pos:start="121:49" pos:end="121:52">data</name></expr></argument>, <argument pos:start="121:55" pos:end="121:59"><expr pos:start="121:55" pos:end="121:59"><name pos:start="121:55" pos:end="121:59">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <decl_stmt pos:start="127:5" pos:end="127:61"><decl pos:start="127:5" pos:end="127:60"><type pos:start="127:5" pos:end="127:9"><name pos:start="127:5" pos:end="127:9">xport</name></type> <name pos:start="127:11" pos:end="127:11">p</name> <init pos:start="127:13" pos:end="127:60">= <expr pos:start="127:15" pos:end="127:60"><call pos:start="127:15" pos:end="127:60"><name pos:start="127:15" pos:end="127:25">xseg_submit</name><argument_list pos:start="127:26" pos:end="127:60">(<argument pos:start="127:27" pos:end="127:33"><expr pos:start="127:27" pos:end="127:33"><name pos:start="127:27" pos:end="127:33"><name pos:start="127:27" pos:end="127:27">s</name><operator pos:start="127:28" pos:end="127:29">-&gt;</operator><name pos:start="127:30" pos:end="127:33">xseg</name></name></expr></argument>, <argument pos:start="127:36" pos:end="127:38"><expr pos:start="127:36" pos:end="127:38"><name pos:start="127:36" pos:end="127:38">req</name></expr></argument>, <argument pos:start="127:41" pos:end="127:50"><expr pos:start="127:41" pos:end="127:50"><name pos:start="127:41" pos:end="127:50"><name pos:start="127:41" pos:end="127:41">s</name><operator pos:start="127:42" pos:end="127:43">-&gt;</operator><name pos:start="127:44" pos:end="127:50">srcport</name></name></expr></argument>, <argument pos:start="127:53" pos:end="127:59"><expr pos:start="127:53" pos:end="127:59"><name pos:start="127:53" pos:end="127:59">X_ALLOC</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="129:5" pos:end="135:5"><if pos:start="129:5" pos:end="135:5">if <condition pos:start="129:8" pos:end="129:20">(<expr pos:start="129:9" pos:end="129:19"><name pos:start="129:9" pos:end="129:9">p</name> <operator pos:start="129:11" pos:end="129:12">==</operator> <name pos:start="129:14" pos:end="129:19">NoPort</name></expr>)</condition> <block pos:start="129:22" pos:end="135:5">{<block_content pos:start="131:9" pos:end="133:22">

        <expr_stmt pos:start="131:9" pos:end="131:58"><expr pos:start="131:9" pos:end="131:57"><call pos:start="131:9" pos:end="131:57"><name pos:start="131:9" pos:end="131:22">archipelagolog</name><argument_list pos:start="131:23" pos:end="131:57">(<argument pos:start="131:24" pos:end="131:56"><expr pos:start="131:24" pos:end="131:56"><literal type="string" pos:start="131:24" pos:end="131:56">"Could not submit XSEG request\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="133:9" pos:end="133:22">goto <name pos:start="133:14" pos:end="133:21">err_exit</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:28"><expr pos:start="137:5" pos:end="137:27"><call pos:start="137:5" pos:end="137:27"><name pos:start="137:5" pos:end="137:15">xseg_signal</name><argument_list pos:start="137:16" pos:end="137:27">(<argument pos:start="137:17" pos:end="137:23"><expr pos:start="137:17" pos:end="137:23"><name pos:start="137:17" pos:end="137:23"><name pos:start="137:17" pos:end="137:17">s</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:23">xseg</name></name></expr></argument>, <argument pos:start="137:26" pos:end="137:26"><expr pos:start="137:26" pos:end="137:26"><name pos:start="137:26" pos:end="137:26">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="139:5" pos:end="139:13">return <expr pos:start="139:12" pos:end="139:12"><literal type="number" pos:start="139:12" pos:end="139:12">0</literal></expr>;</return>



<label pos:start="143:1" pos:end="143:9"><name pos:start="143:1" pos:end="143:8">err_exit</name>:</label>

    <expr_stmt pos:start="145:5" pos:end="145:20"><expr pos:start="145:5" pos:end="145:19"><call pos:start="145:5" pos:end="145:19"><name pos:start="145:5" pos:end="145:10">g_free</name><argument_list pos:start="145:11" pos:end="145:19">(<argument pos:start="145:12" pos:end="145:18"><expr pos:start="145:12" pos:end="145:18"><name pos:start="145:12" pos:end="145:18">reqdata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:47"><expr pos:start="147:5" pos:end="147:46"><call pos:start="147:5" pos:end="147:46"><name pos:start="147:5" pos:end="147:20">xseg_put_request</name><argument_list pos:start="147:21" pos:end="147:46">(<argument pos:start="147:22" pos:end="147:28"><expr pos:start="147:22" pos:end="147:28"><name pos:start="147:22" pos:end="147:28"><name pos:start="147:22" pos:end="147:22">s</name><operator pos:start="147:23" pos:end="147:24">-&gt;</operator><name pos:start="147:25" pos:end="147:28">xseg</name></name></expr></argument>, <argument pos:start="147:31" pos:end="147:33"><expr pos:start="147:31" pos:end="147:33"><name pos:start="147:31" pos:end="147:33">req</name></expr></argument>, <argument pos:start="147:36" pos:end="147:45"><expr pos:start="147:36" pos:end="147:45"><name pos:start="147:36" pos:end="147:45"><name pos:start="147:36" pos:end="147:36">s</name><operator pos:start="147:37" pos:end="147:38">-&gt;</operator><name pos:start="147:39" pos:end="147:45">srcport</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="149:5" pos:end="149:16">return <expr pos:start="149:12" pos:end="149:15"><operator pos:start="149:12" pos:end="149:12">-</operator><name pos:start="149:13" pos:end="149:15">EIO</name></expr>;</return>

<label pos:start="151:1" pos:end="151:10"><name pos:start="151:1" pos:end="151:9">err_exit2</name>:</label>

    <expr_stmt pos:start="153:5" pos:end="153:20"><expr pos:start="153:5" pos:end="153:19"><call pos:start="153:5" pos:end="153:19"><name pos:start="153:5" pos:end="153:10">g_free</name><argument_list pos:start="153:11" pos:end="153:19">(<argument pos:start="153:12" pos:end="153:18"><expr pos:start="153:12" pos:end="153:18"><name pos:start="153:12" pos:end="153:18">reqdata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="155:5" pos:end="155:16">return <expr pos:start="155:12" pos:end="155:15"><operator pos:start="155:12" pos:end="155:12">-</operator><name pos:start="155:13" pos:end="155:15">EIO</name></expr>;</return>

</block_content>}</block></function>
</unit>
