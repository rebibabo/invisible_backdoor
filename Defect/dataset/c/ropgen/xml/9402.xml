<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9402.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">nbd_handle_reply_err</name><parameter_list pos:start="1:32" pos:end="1:74">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:40">uint32_t</name></type> <name pos:start="1:42" pos:end="1:44">opt</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:59"><decl pos:start="1:47" pos:end="1:59"><type pos:start="1:47" pos:end="1:59"><name pos:start="1:47" pos:end="1:54">uint32_t</name></type> <name pos:start="1:56" pos:end="1:59">type</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:73"><decl pos:start="1:62" pos:end="1:73"><type pos:start="1:62" pos:end="1:73"><name pos:start="1:62" pos:end="1:66">Error</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier><modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:73">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:14">

    <if_stmt pos:start="5:5" pos:end="9:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:28">(<expr pos:start="5:9" pos:end="5:27"><operator pos:start="5:9" pos:end="5:9">!</operator><operator pos:start="5:10" pos:end="5:10">(</operator><name pos:start="5:11" pos:end="5:14">type</name> <operator pos:start="5:16" pos:end="5:16">&amp;</operator> <operator pos:start="5:18" pos:end="5:18">(</operator><literal type="number" pos:start="5:19" pos:end="5:19">1</literal> <operator pos:start="5:21" pos:end="5:22">&lt;&lt;</operator> <literal type="number" pos:start="5:24" pos:end="5:25">31</literal><operator pos:start="5:26" pos:end="5:26">)</operator><operator pos:start="5:27" pos:end="5:27">)</operator></expr>)</condition> <block pos:start="5:30" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:17">

        <return pos:start="7:9" pos:end="7:17">return <expr pos:start="7:16" pos:end="7:16"><literal type="number" pos:start="7:16" pos:end="7:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="13:5" pos:end="53:5">switch <condition pos:start="13:12" pos:end="13:17">(<expr pos:start="13:13" pos:end="13:16"><name pos:start="13:13" pos:end="13:16">type</name></expr>)</condition> <block pos:start="13:19" pos:end="53:5">{<block_content pos:start="15:5" pos:end="51:14">

    <case pos:start="15:5" pos:end="15:27">case <expr pos:start="15:10" pos:end="15:26"><name pos:start="15:10" pos:end="15:26">NBD_REP_ERR_UNSUP</name></expr>:</case>

        <expr_stmt pos:start="17:9" pos:end="17:60"><expr pos:start="17:9" pos:end="17:59"><call pos:start="17:9" pos:end="17:59"><name pos:start="17:9" pos:end="17:18">error_setg</name><argument_list pos:start="17:19" pos:end="17:59">(<argument pos:start="17:20" pos:end="17:23"><expr pos:start="17:20" pos:end="17:23"><name pos:start="17:20" pos:end="17:23">errp</name></expr></argument>, <argument pos:start="17:26" pos:end="17:53"><expr pos:start="17:26" pos:end="17:53"><literal type="string" pos:start="17:26" pos:end="17:53">"Unsupported option type %x"</literal></expr></argument>, <argument pos:start="17:56" pos:end="17:58"><expr pos:start="17:56" pos:end="17:58"><name pos:start="17:56" pos:end="17:58">opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="19:9" pos:end="19:14">break;</break>



    <case pos:start="23:5" pos:end="23:28">case <expr pos:start="23:10" pos:end="23:27"><name pos:start="23:10" pos:end="23:27">NBD_REP_ERR_POLICY</name></expr>:</case>

        <expr_stmt pos:start="25:9" pos:end="25:64"><expr pos:start="25:9" pos:end="25:63"><call pos:start="25:9" pos:end="25:63"><name pos:start="25:9" pos:end="25:18">error_setg</name><argument_list pos:start="25:19" pos:end="25:63">(<argument pos:start="25:20" pos:end="25:23"><expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:23">errp</name></expr></argument>, <argument pos:start="25:26" pos:end="25:57"><expr pos:start="25:26" pos:end="25:57"><literal type="string" pos:start="25:26" pos:end="25:57">"Denied by server for option %x"</literal></expr></argument>, <argument pos:start="25:60" pos:end="25:62"><expr pos:start="25:60" pos:end="25:62"><name pos:start="25:60" pos:end="25:62">opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>



    <case pos:start="31:5" pos:end="31:29">case <expr pos:start="31:10" pos:end="31:28"><name pos:start="31:10" pos:end="31:28">NBD_REP_ERR_INVALID</name></expr>:</case>

        <expr_stmt pos:start="33:9" pos:end="33:67"><expr pos:start="33:9" pos:end="33:66"><call pos:start="33:9" pos:end="33:66"><name pos:start="33:9" pos:end="33:18">error_setg</name><argument_list pos:start="33:19" pos:end="33:66">(<argument pos:start="33:20" pos:end="33:23"><expr pos:start="33:20" pos:end="33:23"><name pos:start="33:20" pos:end="33:23">errp</name></expr></argument>, <argument pos:start="33:26" pos:end="33:60"><expr pos:start="33:26" pos:end="33:60"><literal type="string" pos:start="33:26" pos:end="33:60">"Invalid data length for option %x"</literal></expr></argument>, <argument pos:start="33:63" pos:end="33:65"><expr pos:start="33:63" pos:end="33:65"><name pos:start="33:63" pos:end="33:65">opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>



    <case pos:start="39:5" pos:end="39:30">case <expr pos:start="39:10" pos:end="39:29"><name pos:start="39:10" pos:end="39:29">NBD_REP_ERR_TLS_REQD</name></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:75"><expr pos:start="41:9" pos:end="41:74"><call pos:start="41:9" pos:end="41:74"><name pos:start="41:9" pos:end="41:18">error_setg</name><argument_list pos:start="41:19" pos:end="41:74">(<argument pos:start="41:20" pos:end="41:23"><expr pos:start="41:20" pos:end="41:23"><name pos:start="41:20" pos:end="41:23">errp</name></expr></argument>, <argument pos:start="41:26" pos:end="41:68"><expr pos:start="41:26" pos:end="41:68"><literal type="string" pos:start="41:26" pos:end="41:68">"TLS negotiation required before option %x"</literal></expr></argument>, <argument pos:start="41:71" pos:end="41:73"><expr pos:start="41:71" pos:end="41:73"><name pos:start="41:71" pos:end="41:73">opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>



    <default pos:start="47:5" pos:end="47:12">default:</default>

        <expr_stmt pos:start="49:9" pos:end="49:78"><expr pos:start="49:9" pos:end="49:77"><call pos:start="49:9" pos:end="49:77"><name pos:start="49:9" pos:end="49:18">error_setg</name><argument_list pos:start="49:19" pos:end="49:77">(<argument pos:start="49:20" pos:end="49:23"><expr pos:start="49:20" pos:end="49:23"><name pos:start="49:20" pos:end="49:23">errp</name></expr></argument>, <argument pos:start="49:26" pos:end="49:71"><expr pos:start="49:26" pos:end="49:71"><literal type="string" pos:start="49:26" pos:end="49:71">"Unknown error code when asking for option %x"</literal></expr></argument>, <argument pos:start="49:74" pos:end="49:76"><expr pos:start="49:74" pos:end="49:76"><name pos:start="49:74" pos:end="49:76">opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="57:5" pos:end="57:14">return <expr pos:start="57:12" pos:end="57:13"><operator pos:start="57:12" pos:end="57:12">-</operator><literal type="number" pos:start="57:13" pos:end="57:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
