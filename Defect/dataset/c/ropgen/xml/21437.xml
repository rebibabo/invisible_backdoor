<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21437.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:39">virtio_blk_get_features</name><parameter_list pos:start="1:40" pos:end="1:59">(<parameter pos:start="1:41" pos:end="1:58"><decl pos:start="1:41" pos:end="1:58"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:52">VirtIODevice</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">vdev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:20">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">VirtIOBlock</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:40">= <expr pos:start="5:22" pos:end="5:40"><call pos:start="5:22" pos:end="5:40"><name pos:start="5:22" pos:end="5:34">to_virtio_blk</name><argument_list pos:start="5:35" pos:end="5:40">(<argument pos:start="5:36" pos:end="5:39"><expr pos:start="5:36" pos:end="5:39"><name pos:start="5:36" pos:end="5:39">vdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:21">features</name> <init pos:start="7:23" pos:end="7:25">= <expr pos:start="7:25" pos:end="7:25"><literal type="number" pos:start="7:25" pos:end="7:25">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:44"><expr pos:start="11:5" pos:end="11:43"><name pos:start="11:5" pos:end="11:12">features</name> <operator pos:start="11:14" pos:end="11:15">|=</operator> <operator pos:start="11:17" pos:end="11:17">(</operator><literal type="number" pos:start="11:18" pos:end="11:18">1</literal> <operator pos:start="11:20" pos:end="11:21">&lt;&lt;</operator> <name pos:start="11:23" pos:end="11:42">VIRTIO_BLK_F_SEG_MAX</name><operator pos:start="11:43" pos:end="11:43">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:45"><expr pos:start="13:5" pos:end="13:44"><name pos:start="13:5" pos:end="13:12">features</name> <operator pos:start="13:14" pos:end="13:15">|=</operator> <operator pos:start="13:17" pos:end="13:17">(</operator><literal type="number" pos:start="13:18" pos:end="13:18">1</literal> <operator pos:start="13:20" pos:end="13:21">&lt;&lt;</operator> <name pos:start="13:23" pos:end="13:43">VIRTIO_BLK_F_GEOMETRY</name><operator pos:start="13:44" pos:end="13:44">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="22:0"><if pos:start="17:5" pos:end="22:0">if <condition pos:start="17:8" pos:end="17:39">(<expr pos:start="17:9" pos:end="17:38"><call pos:start="17:9" pos:end="17:38"><name pos:start="17:9" pos:end="17:31">bdrv_enable_write_cache</name><argument_list pos:start="17:32" pos:end="17:38">(<argument pos:start="17:33" pos:end="17:37"><expr pos:start="17:33" pos:end="17:37"><name pos:start="17:33" pos:end="17:37"><name pos:start="17:33" pos:end="17:33">s</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:37">bs</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="22:0"><block_content pos:start="19:9" pos:end="22:0">

        <expr_stmt pos:start="19:9" pos:end="22:0"><expr pos:start="19:9" pos:end="19:46"><name pos:start="19:9" pos:end="19:16">features</name> <operator pos:start="19:18" pos:end="19:19">|=</operator> <operator pos:start="19:21" pos:end="19:21">(</operator><literal type="number" pos:start="19:22" pos:end="19:22">1</literal> <operator pos:start="19:24" pos:end="19:25">&lt;&lt;</operator> <name pos:start="19:27" pos:end="19:45">VIRTIO_BLK_F_WCACHE</name><operator pos:start="19:46" pos:end="19:46">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:ifdef pos:start="21:1" pos:end="21:16">#<cpp:directive pos:start="21:2" pos:end="21:6">ifdef</cpp:directive> <name pos:start="21:8" pos:end="21:16">__linux__</name></cpp:ifdef>

    <expr_stmt pos:start="23:5" pos:end="26:0"><expr pos:start="23:5" pos:end="23:40"><name pos:start="23:5" pos:end="23:12">features</name> <operator pos:start="23:14" pos:end="23:15">|=</operator> <operator pos:start="23:17" pos:end="23:17">(</operator><literal type="number" pos:start="23:18" pos:end="23:18">1</literal> <operator pos:start="23:20" pos:end="23:21">&lt;&lt;</operator> <name pos:start="23:23" pos:end="23:39">VIRTIO_BLK_F_SCSI</name><operator pos:start="23:40" pos:end="23:40">)</operator></expr>;</expr_stmt>

<cpp:endif pos:start="25:1" pos:end="25:6">#<cpp:directive pos:start="25:2" pos:end="25:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="27:5" pos:end="29:47"><if pos:start="27:5" pos:end="29:47">if <condition pos:start="27:8" pos:end="27:35">(<expr pos:start="27:9" pos:end="27:34"><call pos:start="27:9" pos:end="27:34"><name pos:start="27:9" pos:end="27:14">strcmp</name><argument_list pos:start="27:15" pos:end="27:34">(<argument pos:start="27:16" pos:end="27:28"><expr pos:start="27:16" pos:end="27:28"><name pos:start="27:16" pos:end="27:28"><name pos:start="27:16" pos:end="27:16">s</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:28">serial_str</name></name></expr></argument>, <argument pos:start="27:31" pos:end="27:33"><expr pos:start="27:31" pos:end="27:33"><literal type="string" pos:start="27:31" pos:end="27:33">"0"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:47"><block_content pos:start="29:9" pos:end="29:47">

        <expr_stmt pos:start="29:9" pos:end="29:47"><expr pos:start="29:9" pos:end="29:46"><name pos:start="29:9" pos:end="29:16">features</name> <operator pos:start="29:18" pos:end="29:19">|=</operator> <literal type="number" pos:start="29:21" pos:end="29:21">1</literal> <operator pos:start="29:23" pos:end="29:24">&lt;&lt;</operator> <name pos:start="29:26" pos:end="29:46">VIRTIO_BLK_F_IDENTIFY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    

    <if_stmt pos:start="33:5" pos:end="35:41"><if pos:start="33:5" pos:end="35:41">if <condition pos:start="33:8" pos:end="33:33">(<expr pos:start="33:9" pos:end="33:32"><call pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:25">bdrv_is_read_only</name><argument_list pos:start="33:26" pos:end="33:32">(<argument pos:start="33:27" pos:end="33:31"><expr pos:start="33:27" pos:end="33:31"><name pos:start="33:27" pos:end="33:31"><name pos:start="33:27" pos:end="33:27">s</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:31">bs</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:41"><block_content pos:start="35:9" pos:end="35:41">

        <expr_stmt pos:start="35:9" pos:end="35:41"><expr pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:16">features</name> <operator pos:start="35:18" pos:end="35:19">|=</operator> <literal type="number" pos:start="35:21" pos:end="35:21">1</literal> <operator pos:start="35:23" pos:end="35:24">&lt;&lt;</operator> <name pos:start="35:26" pos:end="35:40">VIRTIO_BLK_F_RO</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="39:5" pos:end="39:20">return <expr pos:start="39:12" pos:end="39:19"><name pos:start="39:12" pos:end="39:19">features</name></expr>;</return>

</block_content>}</block></function>
</unit>
