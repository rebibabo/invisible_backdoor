<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14432.c" pos:tabs="8"><function pos:start="1:1" pos:end="201:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">vtd_do_iommu_translate</name><parameter_list pos:start="1:35" pos:end="5:56">(<parameter pos:start="1:36" pos:end="1:58"><decl pos:start="1:36" pos:end="1:58"><type pos:start="1:36" pos:end="1:58"><name pos:start="1:36" pos:end="1:50">VTDAddressSpace</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:58">vtd_as</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:75"><decl pos:start="1:61" pos:end="1:75"><type pos:start="1:61" pos:end="1:75"><name pos:start="1:61" pos:end="1:67">uint8_t</name></type> <name pos:start="1:69" pos:end="1:75">bus_num</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:48"><decl pos:start="3:36" pos:end="3:48"><type pos:start="3:36" pos:end="3:48"><name pos:start="3:36" pos:end="3:42">uint8_t</name></type> <name pos:start="3:44" pos:end="3:48">devfn</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:61"><decl pos:start="3:51" pos:end="3:61"><type pos:start="3:51" pos:end="3:61"><name pos:start="3:51" pos:end="3:56">hwaddr</name></type> <name pos:start="3:58" pos:end="3:61">addr</name></decl></parameter>, <parameter pos:start="3:64" pos:end="3:76"><decl pos:start="3:64" pos:end="3:76"><type pos:start="3:64" pos:end="3:76"><name pos:start="3:64" pos:end="3:67">bool</name></type> <name pos:start="3:69" pos:end="3:76">is_write</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:55"><decl pos:start="5:36" pos:end="5:55"><type pos:start="5:36" pos:end="5:55"><name pos:start="5:36" pos:end="5:48">IOMMUTLBEntry</name> <modifier pos:start="5:50" pos:end="5:50">*</modifier></type><name pos:start="5:51" pos:end="5:55">entry</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="201:1">{<block_content pos:start="9:5" pos:end="199:53">

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:44"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">IntelIOMMUState</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:22">s</name> <init pos:start="9:24" pos:end="9:44">= <expr pos:start="9:26" pos:end="9:44"><name pos:start="9:26" pos:end="9:44"><name pos:start="9:26" pos:end="9:31">vtd_as</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:44">iommu_state</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:19">VTDContextEntry</name></type> <name pos:start="11:21" pos:end="11:22">ce</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:66"><decl pos:start="13:5" pos:end="13:65"><type pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:24">VTDContextCacheEntry</name> <modifier pos:start="13:26" pos:end="13:26">*</modifier></type><name pos:start="13:27" pos:end="13:34">cc_entry</name> <init pos:start="13:36" pos:end="13:65">= <expr pos:start="13:38" pos:end="13:65"><operator pos:start="13:38" pos:end="13:38">&amp;</operator><name pos:start="13:39" pos:end="13:65"><name pos:start="13:39" pos:end="13:44">vtd_as</name><operator pos:start="13:45" pos:end="13:46">-&gt;</operator><name pos:start="13:47" pos:end="13:65">context_cache_entry</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint64_t</name></type> <name pos:start="15:14" pos:end="15:18">slpte</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:18">level</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:60"><decl pos:start="19:5" pos:end="19:59"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint16_t</name></type> <name pos:start="19:14" pos:end="19:22">source_id</name> <init pos:start="19:24" pos:end="19:59">= <expr pos:start="19:26" pos:end="19:59"><call pos:start="19:26" pos:end="19:59"><name pos:start="19:26" pos:end="19:43">vtd_make_source_id</name><argument_list pos:start="19:44" pos:end="19:59">(<argument pos:start="19:45" pos:end="19:51"><expr pos:start="19:45" pos:end="19:51"><name pos:start="19:45" pos:end="19:51">bus_num</name></expr></argument>, <argument pos:start="19:54" pos:end="19:58"><expr pos:start="19:54" pos:end="19:58"><name pos:start="19:54" pos:end="19:58">devfn</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:15"><decl pos:start="21:5" pos:end="21:14"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:14">ret_fr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:28"><decl pos:start="23:5" pos:end="23:27"><type pos:start="23:5" pos:end="23:8"><name pos:start="23:5" pos:end="23:8">bool</name></type> <name pos:start="23:10" pos:end="23:19">is_fpd_set</name> <init pos:start="23:21" pos:end="23:27">= <expr pos:start="23:23" pos:end="23:27"><name pos:start="23:23" pos:end="23:27">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:22"><decl pos:start="25:5" pos:end="25:21"><type pos:start="25:5" pos:end="25:8"><name pos:start="25:5" pos:end="25:8">bool</name></type> <name pos:start="25:10" pos:end="25:14">reads</name> <init pos:start="25:16" pos:end="25:21">= <expr pos:start="25:18" pos:end="25:21"><name pos:start="25:18" pos:end="25:21">true</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:23"><decl pos:start="27:5" pos:end="27:22"><type pos:start="27:5" pos:end="27:8"><name pos:start="27:5" pos:end="27:8">bool</name></type> <name pos:start="27:10" pos:end="27:15">writes</name> <init pos:start="27:17" pos:end="27:22">= <expr pos:start="27:19" pos:end="27:22"><name pos:start="27:19" pos:end="27:22">true</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:31"><decl pos:start="29:5" pos:end="29:30"><type pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:17">VTDIOTLBEntry</name> <modifier pos:start="29:19" pos:end="29:19">*</modifier></type><name pos:start="29:20" pos:end="29:30">iotlb_entry</name></decl>;</decl_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:60">/* Check if the request is in interrupt address range */</comment>

    <if_stmt pos:start="35:5" pos:end="75:5"><if pos:start="35:5" pos:end="75:5">if <condition pos:start="35:8" pos:end="35:36">(<expr pos:start="35:9" pos:end="35:35"><call pos:start="35:9" pos:end="35:35"><name pos:start="35:9" pos:end="35:29">vtd_is_interrupt_addr</name><argument_list pos:start="35:30" pos:end="35:35">(<argument pos:start="35:31" pos:end="35:34"><expr pos:start="35:31" pos:end="35:34"><name pos:start="35:31" pos:end="35:34">addr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:38" pos:end="75:5">{<block_content pos:start="37:9" pos:end="73:9">

        <if_stmt pos:start="37:9" pos:end="73:9"><if pos:start="37:9" pos:end="63:9">if <condition pos:start="37:12" pos:end="37:21">(<expr pos:start="37:13" pos:end="37:20"><name pos:start="37:13" pos:end="37:20">is_write</name></expr>)</condition> <block pos:start="37:23" pos:end="63:9">{<block_content pos:start="49:13" pos:end="61:19">

            <comment type="block" pos:start="39:13" pos:end="47:15">/* FIXME: since we don't know the length of the access here, we

             * treat Non-DWORD length write requests without PASID as

             * interrupt requests, too. Withoud interrupt remapping support,

             * we just use 1:1 mapping.

             */</comment>

            <expr_stmt pos:start="49:13" pos:end="51:47"><expr pos:start="49:13" pos:end="51:46"><call pos:start="49:13" pos:end="51:46"><name pos:start="49:13" pos:end="49:23">VTD_DPRINTF</name><argument_list pos:start="49:24" pos:end="51:46">(<argument pos:start="49:25" pos:end="49:27"><expr pos:start="49:25" pos:end="49:27"><name pos:start="49:25" pos:end="49:27">MMU</name></expr></argument>, <argument pos:start="49:30" pos:end="51:39"><expr pos:start="49:30" pos:end="51:39"><literal type="string" pos:start="49:30" pos:end="49:66">"write request to interrupt address "</literal>

                        <literal type="string" pos:start="51:25" pos:end="51:33">"gpa 0x%"</literal><name pos:start="51:34" pos:end="51:39">PRIx64</name></expr></argument>, <argument pos:start="51:42" pos:end="51:45"><expr pos:start="51:42" pos:end="51:45"><name pos:start="51:42" pos:end="51:45">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:50"><expr pos:start="53:13" pos:end="53:49"><name pos:start="53:13" pos:end="53:23"><name pos:start="53:13" pos:end="53:17">entry</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:23">iova</name></name> <operator pos:start="53:25" pos:end="53:25">=</operator> <name pos:start="53:27" pos:end="53:30">addr</name> <operator pos:start="53:32" pos:end="53:32">&amp;</operator> <name pos:start="53:34" pos:end="53:49">VTD_PAGE_MASK_4K</name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:61"><expr pos:start="55:13" pos:end="55:60"><name pos:start="55:13" pos:end="55:34"><name pos:start="55:13" pos:end="55:17">entry</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:34">translated_addr</name></name> <operator pos:start="55:36" pos:end="55:36">=</operator> <name pos:start="55:38" pos:end="55:41">addr</name> <operator pos:start="55:43" pos:end="55:43">&amp;</operator> <name pos:start="55:45" pos:end="55:60">VTD_PAGE_MASK_4K</name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:49"><expr pos:start="57:13" pos:end="57:48"><name pos:start="57:13" pos:end="57:28"><name pos:start="57:13" pos:end="57:17">entry</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:28">addr_mask</name></name> <operator pos:start="57:30" pos:end="57:30">=</operator> <operator pos:start="57:32" pos:end="57:32">~</operator><name pos:start="57:33" pos:end="57:48">VTD_PAGE_MASK_4K</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:35"><expr pos:start="59:13" pos:end="59:34"><name pos:start="59:13" pos:end="59:23"><name pos:start="59:13" pos:end="59:17">entry</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:23">perm</name></name> <operator pos:start="59:25" pos:end="59:25">=</operator> <name pos:start="59:27" pos:end="59:34">IOMMU_WO</name></expr>;</expr_stmt>

            <return pos:start="61:13" pos:end="61:19">return;</return>

        </block_content>}</block></if> <else pos:start="63:11" pos:end="73:9">else <block pos:start="63:16" pos:end="73:9">{<block_content pos:start="65:13" pos:end="71:19">

            <expr_stmt pos:start="65:13" pos:end="67:47"><expr pos:start="65:13" pos:end="67:46"><call pos:start="65:13" pos:end="67:46"><name pos:start="65:13" pos:end="65:23">VTD_DPRINTF</name><argument_list pos:start="65:24" pos:end="67:46">(<argument pos:start="65:25" pos:end="65:31"><expr pos:start="65:25" pos:end="65:31"><name pos:start="65:25" pos:end="65:31">GENERAL</name></expr></argument>, <argument pos:start="65:34" pos:end="67:39"><expr pos:start="65:34" pos:end="67:39"><literal type="string" pos:start="65:34" pos:end="65:78">"error: read request from interrupt address "</literal>

                        <literal type="string" pos:start="67:25" pos:end="67:33">"gpa 0x%"</literal><name pos:start="67:34" pos:end="67:39">PRIx64</name></expr></argument>, <argument pos:start="67:42" pos:end="67:45"><expr pos:start="67:42" pos:end="67:45"><name pos:start="67:42" pos:end="67:45">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:77"><expr pos:start="69:13" pos:end="69:76"><call pos:start="69:13" pos:end="69:76"><name pos:start="69:13" pos:end="69:33">vtd_report_dmar_fault</name><argument_list pos:start="69:34" pos:end="69:76">(<argument pos:start="69:35" pos:end="69:35"><expr pos:start="69:35" pos:end="69:35"><name pos:start="69:35" pos:end="69:35">s</name></expr></argument>, <argument pos:start="69:38" pos:end="69:46"><expr pos:start="69:38" pos:end="69:46"><name pos:start="69:38" pos:end="69:46">source_id</name></expr></argument>, <argument pos:start="69:49" pos:end="69:52"><expr pos:start="69:49" pos:end="69:52"><name pos:start="69:49" pos:end="69:52">addr</name></expr></argument>, <argument pos:start="69:55" pos:end="69:65"><expr pos:start="69:55" pos:end="69:65"><name pos:start="69:55" pos:end="69:65">VTD_FR_READ</name></expr></argument>, <argument pos:start="69:68" pos:end="69:75"><expr pos:start="69:68" pos:end="69:75"><name pos:start="69:68" pos:end="69:75">is_write</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="71:13" pos:end="71:19">return;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="77:5" pos:end="77:39">/* Try to fetch slpte form IOTLB */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:55"><expr pos:start="79:5" pos:end="79:54"><name pos:start="79:5" pos:end="79:15">iotlb_entry</name> <operator pos:start="79:17" pos:end="79:17">=</operator> <call pos:start="79:19" pos:end="79:54"><name pos:start="79:19" pos:end="79:34">vtd_lookup_iotlb</name><argument_list pos:start="79:35" pos:end="79:54">(<argument pos:start="79:36" pos:end="79:36"><expr pos:start="79:36" pos:end="79:36"><name pos:start="79:36" pos:end="79:36">s</name></expr></argument>, <argument pos:start="79:39" pos:end="79:47"><expr pos:start="79:39" pos:end="79:47"><name pos:start="79:39" pos:end="79:47">source_id</name></expr></argument>, <argument pos:start="79:50" pos:end="79:53"><expr pos:start="79:50" pos:end="79:53"><name pos:start="79:50" pos:end="79:53">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="97:5"><if pos:start="81:5" pos:end="97:5">if <condition pos:start="81:8" pos:end="81:20">(<expr pos:start="81:9" pos:end="81:19"><name pos:start="81:9" pos:end="81:19">iotlb_entry</name></expr>)</condition> <block pos:start="81:22" pos:end="97:5">{<block_content pos:start="83:9" pos:end="95:17">

        <expr_stmt pos:start="83:9" pos:end="87:64"><expr pos:start="83:9" pos:end="87:63"><call pos:start="83:9" pos:end="87:63"><name pos:start="83:9" pos:end="83:19">VTD_DPRINTF</name><argument_list pos:start="83:20" pos:end="87:63">(<argument pos:start="83:21" pos:end="83:25"><expr pos:start="83:21" pos:end="83:25"><name pos:start="83:21" pos:end="83:25">CACHE</name></expr></argument>, <argument pos:start="83:28" pos:end="85:55"><expr pos:start="83:28" pos:end="85:55"><literal type="string" pos:start="83:28" pos:end="83:46">"hit iotlb sid 0x%"</literal><name pos:start="83:47" pos:end="83:52">PRIx16</name> <literal type="string" pos:start="83:54" pos:end="83:63">" gpa 0x%"</literal><name pos:start="83:64" pos:end="83:69">PRIx64</name>

                    <literal type="string" pos:start="85:21" pos:end="85:32">" slpte 0x%"</literal><name pos:start="85:33" pos:end="85:38">PRIx64</name> <literal type="string" pos:start="85:40" pos:end="85:49">" did 0x%"</literal><name pos:start="85:50" pos:end="85:55">PRIx16</name></expr></argument>, <argument pos:start="85:58" pos:end="85:66"><expr pos:start="85:58" pos:end="85:66"><name pos:start="85:58" pos:end="85:66">source_id</name></expr></argument>, <argument pos:start="85:69" pos:end="85:72"><expr pos:start="85:69" pos:end="85:72"><name pos:start="85:69" pos:end="85:72">addr</name></expr></argument>,

                    <argument pos:start="87:21" pos:end="87:38"><expr pos:start="87:21" pos:end="87:38"><name pos:start="87:21" pos:end="87:38"><name pos:start="87:21" pos:end="87:31">iotlb_entry</name><operator pos:start="87:32" pos:end="87:33">-&gt;</operator><name pos:start="87:34" pos:end="87:38">slpte</name></name></expr></argument>, <argument pos:start="87:41" pos:end="87:62"><expr pos:start="87:41" pos:end="87:62"><name pos:start="87:41" pos:end="87:62"><name pos:start="87:41" pos:end="87:51">iotlb_entry</name><operator pos:start="87:52" pos:end="87:53">-&gt;</operator><name pos:start="87:54" pos:end="87:62">domain_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:35"><expr pos:start="89:9" pos:end="89:34"><name pos:start="89:9" pos:end="89:13">slpte</name> <operator pos:start="89:15" pos:end="89:15">=</operator> <name pos:start="89:17" pos:end="89:34"><name pos:start="89:17" pos:end="89:27">iotlb_entry</name><operator pos:start="89:28" pos:end="89:29">-&gt;</operator><name pos:start="89:30" pos:end="89:34">slpte</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:40"><expr pos:start="91:9" pos:end="91:39"><name pos:start="91:9" pos:end="91:13">reads</name> <operator pos:start="91:15" pos:end="91:15">=</operator> <name pos:start="91:17" pos:end="91:39"><name pos:start="91:17" pos:end="91:27">iotlb_entry</name><operator pos:start="91:28" pos:end="91:29">-&gt;</operator><name pos:start="91:30" pos:end="91:39">read_flags</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:42"><expr pos:start="93:9" pos:end="93:41"><name pos:start="93:9" pos:end="93:14">writes</name> <operator pos:start="93:16" pos:end="93:16">=</operator> <name pos:start="93:18" pos:end="93:41"><name pos:start="93:18" pos:end="93:28">iotlb_entry</name><operator pos:start="93:29" pos:end="93:30">-&gt;</operator><name pos:start="93:31" pos:end="93:41">write_flags</name></name></expr>;</expr_stmt>

        <goto pos:start="95:9" pos:end="95:17">goto <name pos:start="95:14" pos:end="95:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="99:5" pos:end="99:53">/* Try to fetch context-entry from cache first */</comment>

    <if_stmt pos:start="101:5" pos:end="157:5"><if pos:start="101:5" pos:end="115:5">if <condition pos:start="101:8" pos:end="101:60">(<expr pos:start="101:9" pos:end="101:59"><name pos:start="101:9" pos:end="101:35"><name pos:start="101:9" pos:end="101:16">cc_entry</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:35">context_cache_gen</name></name> <operator pos:start="101:37" pos:end="101:38">==</operator> <name pos:start="101:40" pos:end="101:59"><name pos:start="101:40" pos:end="101:40">s</name><operator pos:start="101:41" pos:end="101:42">-&gt;</operator><name pos:start="101:43" pos:end="101:59">context_cache_gen</name></name></expr>)</condition> <block pos:start="101:62" pos:end="115:5">{<block_content pos:start="103:9" pos:end="113:51">

        <expr_stmt pos:start="103:9" pos:end="109:77"><expr pos:start="103:9" pos:end="109:76"><call pos:start="103:9" pos:end="109:76"><name pos:start="103:9" pos:end="103:19">VTD_DPRINTF</name><argument_list pos:start="103:20" pos:end="109:76">(<argument pos:start="103:21" pos:end="103:25"><expr pos:start="103:21" pos:end="103:25"><name pos:start="103:21" pos:end="103:25">CACHE</name></expr></argument>, <argument pos:start="103:28" pos:end="105:66"><expr pos:start="103:28" pos:end="105:66"><literal type="string" pos:start="103:28" pos:end="103:63">"hit context-cache bus %d devfn %d "</literal>

                    <literal type="string" pos:start="105:21" pos:end="105:27">"(hi %"</literal><name pos:start="105:28" pos:end="105:33">PRIx64</name> <literal type="string" pos:start="105:35" pos:end="105:41">" lo %"</literal><name pos:start="105:42" pos:end="105:47">PRIx64</name> <literal type="string" pos:start="105:49" pos:end="105:56">" gen %"</literal><name pos:start="105:57" pos:end="105:62">PRIu32</name> <literal type="string" pos:start="105:64" pos:end="105:66">")"</literal></expr></argument>,

                    <argument pos:start="107:21" pos:end="107:27"><expr pos:start="107:21" pos:end="107:27"><name pos:start="107:21" pos:end="107:27">bus_num</name></expr></argument>, <argument pos:start="107:30" pos:end="107:34"><expr pos:start="107:30" pos:end="107:34"><name pos:start="107:30" pos:end="107:34">devfn</name></expr></argument>, <argument pos:start="107:37" pos:end="107:62"><expr pos:start="107:37" pos:end="107:62"><name pos:start="107:37" pos:end="107:62"><name pos:start="107:37" pos:end="107:44">cc_entry</name><operator pos:start="107:45" pos:end="107:46">-&gt;</operator><name pos:start="107:47" pos:end="107:59">context_entry</name><operator pos:start="107:60" pos:end="107:60">.</operator><name pos:start="107:61" pos:end="107:62">hi</name></name></expr></argument>,

                    <argument pos:start="109:21" pos:end="109:46"><expr pos:start="109:21" pos:end="109:46"><name pos:start="109:21" pos:end="109:46"><name pos:start="109:21" pos:end="109:28">cc_entry</name><operator pos:start="109:29" pos:end="109:30">-&gt;</operator><name pos:start="109:31" pos:end="109:43">context_entry</name><operator pos:start="109:44" pos:end="109:44">.</operator><name pos:start="109:45" pos:end="109:46">lo</name></name></expr></argument>, <argument pos:start="109:49" pos:end="109:75"><expr pos:start="109:49" pos:end="109:75"><name pos:start="109:49" pos:end="109:75"><name pos:start="109:49" pos:end="109:56">cc_entry</name><operator pos:start="109:57" pos:end="109:58">-&gt;</operator><name pos:start="109:59" pos:end="109:75">context_cache_gen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:37"><expr pos:start="111:9" pos:end="111:36"><name pos:start="111:9" pos:end="111:10">ce</name> <operator pos:start="111:12" pos:end="111:12">=</operator> <name pos:start="111:14" pos:end="111:36"><name pos:start="111:14" pos:end="111:21">cc_entry</name><operator pos:start="111:22" pos:end="111:23">-&gt;</operator><name pos:start="111:24" pos:end="111:36">context_entry</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:51"><expr pos:start="113:9" pos:end="113:50"><name pos:start="113:9" pos:end="113:18">is_fpd_set</name> <operator pos:start="113:20" pos:end="113:20">=</operator> <name pos:start="113:22" pos:end="113:26"><name pos:start="113:22" pos:end="113:23">ce</name><operator pos:start="113:24" pos:end="113:24">.</operator><name pos:start="113:25" pos:end="113:26">lo</name></name> <operator pos:start="113:28" pos:end="113:28">&amp;</operator> <name pos:start="113:30" pos:end="113:50">VTD_CONTEXT_ENTRY_FPD</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="115:7" pos:end="157:5">else <block pos:start="115:12" pos:end="157:5">{<block_content pos:start="117:9" pos:end="155:59">

        <expr_stmt pos:start="117:9" pos:end="117:66"><expr pos:start="117:9" pos:end="117:65"><name pos:start="117:9" pos:end="117:14">ret_fr</name> <operator pos:start="117:16" pos:end="117:16">=</operator> <call pos:start="117:18" pos:end="117:65"><name pos:start="117:18" pos:end="117:41">vtd_dev_to_context_entry</name><argument_list pos:start="117:42" pos:end="117:65">(<argument pos:start="117:43" pos:end="117:43"><expr pos:start="117:43" pos:end="117:43"><name pos:start="117:43" pos:end="117:43">s</name></expr></argument>, <argument pos:start="117:46" pos:end="117:52"><expr pos:start="117:46" pos:end="117:52"><name pos:start="117:46" pos:end="117:52">bus_num</name></expr></argument>, <argument pos:start="117:55" pos:end="117:59"><expr pos:start="117:55" pos:end="117:59"><name pos:start="117:55" pos:end="117:59">devfn</name></expr></argument>, <argument pos:start="117:62" pos:end="117:64"><expr pos:start="117:62" pos:end="117:64"><operator pos:start="117:62" pos:end="117:62">&amp;</operator><name pos:start="117:63" pos:end="117:64">ce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:51"><expr pos:start="119:9" pos:end="119:50"><name pos:start="119:9" pos:end="119:18">is_fpd_set</name> <operator pos:start="119:20" pos:end="119:20">=</operator> <name pos:start="119:22" pos:end="119:26"><name pos:start="119:22" pos:end="119:23">ce</name><operator pos:start="119:24" pos:end="119:24">.</operator><name pos:start="119:25" pos:end="119:26">lo</name></name> <operator pos:start="119:28" pos:end="119:28">&amp;</operator> <name pos:start="119:30" pos:end="119:50">VTD_CONTEXT_ENTRY_FPD</name></expr>;</expr_stmt>

        <if_stmt pos:start="121:9" pos:end="141:9"><if pos:start="121:9" pos:end="141:9">if <condition pos:start="121:12" pos:end="121:19">(<expr pos:start="121:13" pos:end="121:18"><name pos:start="121:13" pos:end="121:18">ret_fr</name></expr>)</condition> <block pos:start="121:21" pos:end="141:9">{<block_content pos:start="123:13" pos:end="139:19">

            <expr_stmt pos:start="123:13" pos:end="123:29"><expr pos:start="123:13" pos:end="123:28"><name pos:start="123:13" pos:end="123:18">ret_fr</name> <operator pos:start="123:20" pos:end="123:20">=</operator> <operator pos:start="123:22" pos:end="123:22">-</operator><name pos:start="123:23" pos:end="123:28">ret_fr</name></expr>;</expr_stmt>

            <if_stmt pos:start="125:13" pos:end="137:13"><if pos:start="125:13" pos:end="133:13">if <condition pos:start="125:16" pos:end="125:61">(<expr pos:start="125:17" pos:end="125:60"><name pos:start="125:17" pos:end="125:26">is_fpd_set</name> <operator pos:start="125:28" pos:end="125:29">&amp;&amp;</operator> <call pos:start="125:31" pos:end="125:60"><name pos:start="125:31" pos:end="125:52">vtd_is_qualified_fault</name><argument_list pos:start="125:53" pos:end="125:60">(<argument pos:start="125:54" pos:end="125:59"><expr pos:start="125:54" pos:end="125:59"><name pos:start="125:54" pos:end="125:59">ret_fr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="125:63" pos:end="133:13">{<block_content pos:start="127:17" pos:end="131:46">

                <expr_stmt pos:start="127:17" pos:end="131:46"><expr pos:start="127:17" pos:end="131:45"><call pos:start="127:17" pos:end="131:45"><name pos:start="127:17" pos:end="127:27">VTD_DPRINTF</name><argument_list pos:start="127:28" pos:end="131:45">(<argument pos:start="127:29" pos:end="127:32"><expr pos:start="127:29" pos:end="127:32"><name pos:start="127:29" pos:end="127:32">FLOG</name></expr></argument>, <argument pos:start="127:35" pos:end="131:44"><expr pos:start="127:35" pos:end="131:44"><literal type="string" pos:start="127:35" pos:end="127:73">"fault processing is disabled for DMA "</literal>

                            <literal type="string" pos:start="129:29" pos:end="129:66">"requests through this context-entry "</literal>

                            <literal type="string" pos:start="131:29" pos:end="131:44">"(with FPD Set)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="133:15" pos:end="137:13">else <block pos:start="133:20" pos:end="137:13">{<block_content pos:start="135:17" pos:end="135:76">

                <expr_stmt pos:start="135:17" pos:end="135:76"><expr pos:start="135:17" pos:end="135:75"><call pos:start="135:17" pos:end="135:75"><name pos:start="135:17" pos:end="135:37">vtd_report_dmar_fault</name><argument_list pos:start="135:38" pos:end="135:75">(<argument pos:start="135:39" pos:end="135:39"><expr pos:start="135:39" pos:end="135:39"><name pos:start="135:39" pos:end="135:39">s</name></expr></argument>, <argument pos:start="135:42" pos:end="135:50"><expr pos:start="135:42" pos:end="135:50"><name pos:start="135:42" pos:end="135:50">source_id</name></expr></argument>, <argument pos:start="135:53" pos:end="135:56"><expr pos:start="135:53" pos:end="135:56"><name pos:start="135:53" pos:end="135:56">addr</name></expr></argument>, <argument pos:start="135:59" pos:end="135:64"><expr pos:start="135:59" pos:end="135:64"><name pos:start="135:59" pos:end="135:64">ret_fr</name></expr></argument>, <argument pos:start="135:67" pos:end="135:74"><expr pos:start="135:67" pos:end="135:74"><name pos:start="135:67" pos:end="135:74">is_write</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <return pos:start="139:13" pos:end="139:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="143:9" pos:end="143:34">/* Update context-cache */</comment>

        <expr_stmt pos:start="145:9" pos:end="151:71"><expr pos:start="145:9" pos:end="151:70"><call pos:start="145:9" pos:end="151:70"><name pos:start="145:9" pos:end="145:19">VTD_DPRINTF</name><argument_list pos:start="145:20" pos:end="151:70">(<argument pos:start="145:21" pos:end="145:25"><expr pos:start="145:21" pos:end="145:25"><name pos:start="145:21" pos:end="145:25">CACHE</name></expr></argument>, <argument pos:start="145:28" pos:end="147:78"><expr pos:start="145:28" pos:end="147:78"><literal type="string" pos:start="145:28" pos:end="145:66">"update context-cache bus %d devfn %d "</literal>

                    <literal type="string" pos:start="147:21" pos:end="147:27">"(hi %"</literal><name pos:start="147:28" pos:end="147:33">PRIx64</name> <literal type="string" pos:start="147:35" pos:end="147:41">" lo %"</literal><name pos:start="147:42" pos:end="147:47">PRIx64</name> <literal type="string" pos:start="147:49" pos:end="147:56">" gen %"</literal><name pos:start="147:57" pos:end="147:62">PRIu32</name> <literal type="string" pos:start="147:64" pos:end="147:68">"-&gt;%"</literal><name pos:start="147:69" pos:end="147:74">PRIu32</name> <literal type="string" pos:start="147:76" pos:end="147:78">")"</literal></expr></argument>,

                    <argument pos:start="149:21" pos:end="149:27"><expr pos:start="149:21" pos:end="149:27"><name pos:start="149:21" pos:end="149:27">bus_num</name></expr></argument>, <argument pos:start="149:30" pos:end="149:34"><expr pos:start="149:30" pos:end="149:34"><name pos:start="149:30" pos:end="149:34">devfn</name></expr></argument>, <argument pos:start="149:37" pos:end="149:41"><expr pos:start="149:37" pos:end="149:41"><name pos:start="149:37" pos:end="149:41"><name pos:start="149:37" pos:end="149:38">ce</name><operator pos:start="149:39" pos:end="149:39">.</operator><name pos:start="149:40" pos:end="149:41">hi</name></name></expr></argument>, <argument pos:start="149:44" pos:end="149:48"><expr pos:start="149:44" pos:end="149:48"><name pos:start="149:44" pos:end="149:48"><name pos:start="149:44" pos:end="149:45">ce</name><operator pos:start="149:46" pos:end="149:46">.</operator><name pos:start="149:47" pos:end="149:48">lo</name></name></expr></argument>,

                    <argument pos:start="151:21" pos:end="151:47"><expr pos:start="151:21" pos:end="151:47"><name pos:start="151:21" pos:end="151:47"><name pos:start="151:21" pos:end="151:28">cc_entry</name><operator pos:start="151:29" pos:end="151:30">-&gt;</operator><name pos:start="151:31" pos:end="151:47">context_cache_gen</name></name></expr></argument>, <argument pos:start="151:50" pos:end="151:69"><expr pos:start="151:50" pos:end="151:69"><name pos:start="151:50" pos:end="151:69"><name pos:start="151:50" pos:end="151:50">s</name><operator pos:start="151:51" pos:end="151:52">-&gt;</operator><name pos:start="151:53" pos:end="151:69">context_cache_gen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:37"><expr pos:start="153:9" pos:end="153:36"><name pos:start="153:9" pos:end="153:31"><name pos:start="153:9" pos:end="153:16">cc_entry</name><operator pos:start="153:17" pos:end="153:18">-&gt;</operator><name pos:start="153:19" pos:end="153:31">context_entry</name></name> <operator pos:start="153:33" pos:end="153:33">=</operator> <name pos:start="153:35" pos:end="153:36">ce</name></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:59"><expr pos:start="155:9" pos:end="155:58"><name pos:start="155:9" pos:end="155:35"><name pos:start="155:9" pos:end="155:16">cc_entry</name><operator pos:start="155:17" pos:end="155:18">-&gt;</operator><name pos:start="155:19" pos:end="155:35">context_cache_gen</name></name> <operator pos:start="155:37" pos:end="155:37">=</operator> <name pos:start="155:39" pos:end="155:58"><name pos:start="155:39" pos:end="155:39">s</name><operator pos:start="155:40" pos:end="155:41">-&gt;</operator><name pos:start="155:42" pos:end="155:58">context_cache_gen</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="161:5" pos:end="163:47"><expr pos:start="161:5" pos:end="163:46"><name pos:start="161:5" pos:end="161:10">ret_fr</name> <operator pos:start="161:12" pos:end="161:12">=</operator> <call pos:start="161:14" pos:end="163:46"><name pos:start="161:14" pos:end="161:29">vtd_gpa_to_slpte</name><argument_list pos:start="161:30" pos:end="163:46">(<argument pos:start="161:31" pos:end="161:33"><expr pos:start="161:31" pos:end="161:33"><operator pos:start="161:31" pos:end="161:31">&amp;</operator><name pos:start="161:32" pos:end="161:33">ce</name></expr></argument>, <argument pos:start="161:36" pos:end="161:39"><expr pos:start="161:36" pos:end="161:39"><name pos:start="161:36" pos:end="161:39">addr</name></expr></argument>, <argument pos:start="161:42" pos:end="161:49"><expr pos:start="161:42" pos:end="161:49"><name pos:start="161:42" pos:end="161:49">is_write</name></expr></argument>, <argument pos:start="161:52" pos:end="161:57"><expr pos:start="161:52" pos:end="161:57"><operator pos:start="161:52" pos:end="161:52">&amp;</operator><name pos:start="161:53" pos:end="161:57">slpte</name></expr></argument>, <argument pos:start="161:60" pos:end="161:65"><expr pos:start="161:60" pos:end="161:65"><operator pos:start="161:60" pos:end="161:60">&amp;</operator><name pos:start="161:61" pos:end="161:65">level</name></expr></argument>,

                              <argument pos:start="163:31" pos:end="163:36"><expr pos:start="163:31" pos:end="163:36"><operator pos:start="163:31" pos:end="163:31">&amp;</operator><name pos:start="163:32" pos:end="163:36">reads</name></expr></argument>, <argument pos:start="163:39" pos:end="163:45"><expr pos:start="163:39" pos:end="163:45"><operator pos:start="163:39" pos:end="163:39">&amp;</operator><name pos:start="163:40" pos:end="163:45">writes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="165:5" pos:end="183:5"><if pos:start="165:5" pos:end="183:5">if <condition pos:start="165:8" pos:end="165:15">(<expr pos:start="165:9" pos:end="165:14"><name pos:start="165:9" pos:end="165:14">ret_fr</name></expr>)</condition> <block pos:start="165:17" pos:end="183:5">{<block_content pos:start="167:9" pos:end="181:15">

        <expr_stmt pos:start="167:9" pos:end="167:25"><expr pos:start="167:9" pos:end="167:24"><name pos:start="167:9" pos:end="167:14">ret_fr</name> <operator pos:start="167:16" pos:end="167:16">=</operator> <operator pos:start="167:18" pos:end="167:18">-</operator><name pos:start="167:19" pos:end="167:24">ret_fr</name></expr>;</expr_stmt>

        <if_stmt pos:start="169:9" pos:end="179:9"><if pos:start="169:9" pos:end="175:9">if <condition pos:start="169:12" pos:end="169:57">(<expr pos:start="169:13" pos:end="169:56"><name pos:start="169:13" pos:end="169:22">is_fpd_set</name> <operator pos:start="169:24" pos:end="169:25">&amp;&amp;</operator> <call pos:start="169:27" pos:end="169:56"><name pos:start="169:27" pos:end="169:48">vtd_is_qualified_fault</name><argument_list pos:start="169:49" pos:end="169:56">(<argument pos:start="169:50" pos:end="169:55"><expr pos:start="169:50" pos:end="169:55"><name pos:start="169:50" pos:end="169:55">ret_fr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="169:59" pos:end="175:9">{<block_content pos:start="171:13" pos:end="173:69">

            <expr_stmt pos:start="171:13" pos:end="173:69"><expr pos:start="171:13" pos:end="173:68"><call pos:start="171:13" pos:end="173:68"><name pos:start="171:13" pos:end="171:23">VTD_DPRINTF</name><argument_list pos:start="171:24" pos:end="173:68">(<argument pos:start="171:25" pos:end="171:28"><expr pos:start="171:25" pos:end="171:28"><name pos:start="171:25" pos:end="171:28">FLOG</name></expr></argument>, <argument pos:start="171:31" pos:end="173:67"><expr pos:start="171:31" pos:end="173:67"><literal type="string" pos:start="171:31" pos:end="171:78">"fault processing is disabled for DMA requests "</literal>

                        <literal type="string" pos:start="173:25" pos:end="173:67">"through this context-entry (with FPD Set)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="175:11" pos:end="179:9">else <block pos:start="175:16" pos:end="179:9">{<block_content pos:start="177:13" pos:end="177:72">

            <expr_stmt pos:start="177:13" pos:end="177:72"><expr pos:start="177:13" pos:end="177:71"><call pos:start="177:13" pos:end="177:71"><name pos:start="177:13" pos:end="177:33">vtd_report_dmar_fault</name><argument_list pos:start="177:34" pos:end="177:71">(<argument pos:start="177:35" pos:end="177:35"><expr pos:start="177:35" pos:end="177:35"><name pos:start="177:35" pos:end="177:35">s</name></expr></argument>, <argument pos:start="177:38" pos:end="177:46"><expr pos:start="177:38" pos:end="177:46"><name pos:start="177:38" pos:end="177:46">source_id</name></expr></argument>, <argument pos:start="177:49" pos:end="177:52"><expr pos:start="177:49" pos:end="177:52"><name pos:start="177:49" pos:end="177:52">addr</name></expr></argument>, <argument pos:start="177:55" pos:end="177:60"><expr pos:start="177:55" pos:end="177:60"><name pos:start="177:55" pos:end="177:60">ret_fr</name></expr></argument>, <argument pos:start="177:63" pos:end="177:70"><expr pos:start="177:63" pos:end="177:70"><name pos:start="177:63" pos:end="177:70">is_write</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <return pos:start="181:9" pos:end="181:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="187:5" pos:end="189:36"><expr pos:start="187:5" pos:end="189:35"><call pos:start="187:5" pos:end="189:35"><name pos:start="187:5" pos:end="187:20">vtd_update_iotlb</name><argument_list pos:start="187:21" pos:end="189:35">(<argument pos:start="187:22" pos:end="187:22"><expr pos:start="187:22" pos:end="187:22"><name pos:start="187:22" pos:end="187:22">s</name></expr></argument>, <argument pos:start="187:25" pos:end="187:33"><expr pos:start="187:25" pos:end="187:33"><name pos:start="187:25" pos:end="187:33">source_id</name></expr></argument>, <argument pos:start="187:36" pos:end="187:63"><expr pos:start="187:36" pos:end="187:63"><call pos:start="187:36" pos:end="187:63"><name pos:start="187:36" pos:end="187:56">VTD_CONTEXT_ENTRY_DID</name><argument_list pos:start="187:57" pos:end="187:63">(<argument pos:start="187:58" pos:end="187:62"><expr pos:start="187:58" pos:end="187:62"><name pos:start="187:58" pos:end="187:62"><name pos:start="187:58" pos:end="187:59">ce</name><operator pos:start="187:60" pos:end="187:60">.</operator><name pos:start="187:61" pos:end="187:62">hi</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="187:66" pos:end="187:69"><expr pos:start="187:66" pos:end="187:69"><name pos:start="187:66" pos:end="187:69">addr</name></expr></argument>, <argument pos:start="187:72" pos:end="187:76"><expr pos:start="187:72" pos:end="187:76"><name pos:start="187:72" pos:end="187:76">slpte</name></expr></argument>,

                     <argument pos:start="189:22" pos:end="189:26"><expr pos:start="189:22" pos:end="189:26"><name pos:start="189:22" pos:end="189:26">reads</name></expr></argument>, <argument pos:start="189:29" pos:end="189:34"><expr pos:start="189:29" pos:end="189:34"><name pos:start="189:29" pos:end="189:34">writes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="191:1" pos:end="191:4"><name pos:start="191:1" pos:end="191:3">out</name>:</label>

    <expr_stmt pos:start="193:5" pos:end="193:42"><expr pos:start="193:5" pos:end="193:41"><name pos:start="193:5" pos:end="193:15"><name pos:start="193:5" pos:end="193:9">entry</name><operator pos:start="193:10" pos:end="193:11">-&gt;</operator><name pos:start="193:12" pos:end="193:15">iova</name></name> <operator pos:start="193:17" pos:end="193:17">=</operator> <name pos:start="193:19" pos:end="193:22">addr</name> <operator pos:start="193:24" pos:end="193:24">&amp;</operator> <name pos:start="193:26" pos:end="193:41">VTD_PAGE_MASK_4K</name></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:74"><expr pos:start="195:5" pos:end="195:73"><name pos:start="195:5" pos:end="195:26"><name pos:start="195:5" pos:end="195:9">entry</name><operator pos:start="195:10" pos:end="195:11">-&gt;</operator><name pos:start="195:12" pos:end="195:26">translated_addr</name></name> <operator pos:start="195:28" pos:end="195:28">=</operator> <call pos:start="195:30" pos:end="195:54"><name pos:start="195:30" pos:end="195:47">vtd_get_slpte_addr</name><argument_list pos:start="195:48" pos:end="195:54">(<argument pos:start="195:49" pos:end="195:53"><expr pos:start="195:49" pos:end="195:53"><name pos:start="195:49" pos:end="195:53">slpte</name></expr></argument>)</argument_list></call> <operator pos:start="195:56" pos:end="195:56">&amp;</operator> <name pos:start="195:58" pos:end="195:73">VTD_PAGE_MASK_4K</name></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:41"><expr pos:start="197:5" pos:end="197:40"><name pos:start="197:5" pos:end="197:20"><name pos:start="197:5" pos:end="197:9">entry</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:20">addr_mask</name></name> <operator pos:start="197:22" pos:end="197:22">=</operator> <operator pos:start="197:24" pos:end="197:24">~</operator><name pos:start="197:25" pos:end="197:40">VTD_PAGE_MASK_4K</name></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:53"><expr pos:start="199:5" pos:end="199:52"><name pos:start="199:5" pos:end="199:15"><name pos:start="199:5" pos:end="199:9">entry</name><operator pos:start="199:10" pos:end="199:11">-&gt;</operator><name pos:start="199:12" pos:end="199:15">perm</name></name> <operator pos:start="199:17" pos:end="199:17">=</operator> <operator pos:start="199:19" pos:end="199:19">(</operator><ternary pos:start="199:20" pos:end="199:33"><condition pos:start="199:20" pos:end="199:27"><expr pos:start="199:20" pos:end="199:25"><name pos:start="199:20" pos:end="199:25">writes</name></expr> ?</condition><then pos:start="199:29" pos:end="199:29"> <expr pos:start="199:29" pos:end="199:29"><literal type="number" pos:start="199:29" pos:end="199:29">2</literal></expr> </then><else pos:start="199:31" pos:end="199:33">: <expr pos:start="199:33" pos:end="199:33"><literal type="number" pos:start="199:33" pos:end="199:33">0</literal></expr></else></ternary><operator pos:start="199:34" pos:end="199:34">)</operator> <operator pos:start="199:36" pos:end="199:36">+</operator> <operator pos:start="199:38" pos:end="199:38">(</operator><ternary pos:start="199:39" pos:end="199:51"><condition pos:start="199:39" pos:end="199:45"><expr pos:start="199:39" pos:end="199:43"><name pos:start="199:39" pos:end="199:43">reads</name></expr> ?</condition><then pos:start="199:47" pos:end="199:47"> <expr pos:start="199:47" pos:end="199:47"><literal type="number" pos:start="199:47" pos:end="199:47">1</literal></expr> </then><else pos:start="199:49" pos:end="199:51">: <expr pos:start="199:51" pos:end="199:51"><literal type="number" pos:start="199:51" pos:end="199:51">0</literal></expr></else></ternary><operator pos:start="199:52" pos:end="199:52">)</operator></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
