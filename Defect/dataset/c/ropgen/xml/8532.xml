<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8532.c" pos:tabs="8"><function pos:start="1:1" pos:end="221:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">vp6_parse_header</name><parameter_list pos:start="1:28" pos:end="3:46">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:39">VP56Context</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:62"><decl pos:start="1:45" pos:end="1:62"><type pos:start="1:45" pos:end="1:62"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:57">uint8_t</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">buf</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:76"><decl pos:start="1:65" pos:end="1:76"><type pos:start="1:65" pos:end="1:76"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:76">buf_size</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:45"><decl pos:start="3:29" pos:end="3:45"><type pos:start="3:29" pos:end="3:45"><name pos:start="3:29" pos:end="3:31">int</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:45">golden_frame</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="221:1">{<block_content pos:start="7:5" pos:end="219:15">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">VP56RangeCoder</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">c</name> <init pos:start="7:23" pos:end="7:29">= <expr pos:start="7:25" pos:end="7:29"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:29">c</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:25">parse_filter_info</name> <init pos:start="9:27" pos:end="9:29">= <expr pos:start="9:29" pos:end="9:29"><literal type="number" pos:start="9:29" pos:end="9:29">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:20">coeff_offset</name> <init pos:start="11:22" pos:end="11:24">= <expr pos:start="11:24" pos:end="11:24"><literal type="number" pos:start="11:24" pos:end="11:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">vrt_shift</name> <init pos:start="13:19" pos:end="13:21">= <expr pos:start="13:21" pos:end="13:21"><literal type="number" pos:start="13:21" pos:end="13:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:19">sub_version</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:12"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">rows</name></decl>, <decl pos:start="17:15" pos:end="17:18"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:15" pos:end="17:18">cols</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:16"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">res</name> <init pos:start="19:13" pos:end="19:15">= <expr pos:start="19:15" pos:end="19:15"><literal type="number" pos:start="19:15" pos:end="19:15">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:37"><decl pos:start="21:5" pos:end="21:36"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:23">separated_coeff</name> <init pos:start="21:25" pos:end="21:36">= <expr pos:start="21:27" pos:end="21:36"><name pos:start="21:27" pos:end="21:32"><name pos:start="21:27" pos:end="21:29">buf</name><index pos:start="21:30" pos:end="21:32">[<expr pos:start="21:31" pos:end="21:31"><literal type="number" pos:start="21:31" pos:end="21:31">0</literal></expr>]</index></name> <operator pos:start="21:34" pos:end="21:34">&amp;</operator> <literal type="number" pos:start="21:36" pos:end="21:36">1</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:64"><expr pos:start="25:5" pos:end="25:63"><name pos:start="25:5" pos:end="25:33"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:13">framep</name><index pos:start="25:14" pos:end="25:33">[<expr pos:start="25:15" pos:end="25:32"><name pos:start="25:15" pos:end="25:32">VP56_FRAME_CURRENT</name></expr>]</index></name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:44">key_frame</name> <operator pos:start="25:46" pos:end="25:46">=</operator> <operator pos:start="25:48" pos:end="25:48">!</operator><operator pos:start="25:49" pos:end="25:49">(</operator><name pos:start="25:50" pos:end="25:55"><name pos:start="25:50" pos:end="25:52">buf</name><index pos:start="25:53" pos:end="25:55">[<expr pos:start="25:54" pos:end="25:54"><literal type="number" pos:start="25:54" pos:end="25:54">0</literal></expr>]</index></name> <operator pos:start="25:57" pos:end="25:57">&amp;</operator> <literal type="number" pos:start="25:59" pos:end="25:62">0x80</literal><operator pos:start="25:63" pos:end="25:63">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:50"><expr pos:start="27:5" pos:end="27:49"><call pos:start="27:5" pos:end="27:49"><name pos:start="27:5" pos:end="27:24">ff_vp56_init_dequant</name><argument_list pos:start="27:25" pos:end="27:49">(<argument pos:start="27:26" pos:end="27:26"><expr pos:start="27:26" pos:end="27:26"><name pos:start="27:26" pos:end="27:26">s</name></expr></argument>, <argument pos:start="27:29" pos:end="27:48"><expr pos:start="27:29" pos:end="27:48"><operator pos:start="27:29" pos:end="27:29">(</operator><name pos:start="27:30" pos:end="27:35"><name pos:start="27:30" pos:end="27:32">buf</name><index pos:start="27:33" pos:end="27:35">[<expr pos:start="27:34" pos:end="27:34"><literal type="number" pos:start="27:34" pos:end="27:34">0</literal></expr>]</index></name> <operator pos:start="27:37" pos:end="27:38">&gt;&gt;</operator> <literal type="number" pos:start="27:40" pos:end="27:40">1</literal><operator pos:start="27:41" pos:end="27:41">)</operator> <operator pos:start="27:43" pos:end="27:43">&amp;</operator> <literal type="number" pos:start="27:45" pos:end="27:48">0x3F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="145:5"><if pos:start="31:5" pos:end="107:5">if <condition pos:start="31:8" pos:end="31:49">(<expr pos:start="31:9" pos:end="31:48"><name pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:17">framep</name><index pos:start="31:18" pos:end="31:37">[<expr pos:start="31:19" pos:end="31:36"><name pos:start="31:19" pos:end="31:36">VP56_FRAME_CURRENT</name></expr>]</index></name><operator pos:start="31:38" pos:end="31:39">-&gt;</operator><name pos:start="31:40" pos:end="31:48">key_frame</name></expr>)</condition> <block pos:start="31:51" pos:end="107:5">{<block_content pos:start="33:9" pos:end="105:37">

        <expr_stmt pos:start="33:9" pos:end="33:34"><expr pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:19">sub_version</name> <operator pos:start="33:21" pos:end="33:21">=</operator> <name pos:start="33:23" pos:end="33:28"><name pos:start="33:23" pos:end="33:25">buf</name><index pos:start="33:26" pos:end="33:28">[<expr pos:start="33:27" pos:end="33:27"><literal type="number" pos:start="33:27" pos:end="33:27">1</literal></expr>]</index></name> <operator pos:start="33:30" pos:end="33:31">&gt;&gt;</operator> <literal type="number" pos:start="33:33" pos:end="33:33">3</literal></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="37:21"><if pos:start="35:9" pos:end="37:21">if <condition pos:start="35:12" pos:end="35:28">(<expr pos:start="35:13" pos:end="35:27"><name pos:start="35:13" pos:end="35:23">sub_version</name> <operator pos:start="35:25" pos:end="35:25">&gt;</operator> <literal type="number" pos:start="35:27" pos:end="35:27">8</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:21"><block_content pos:start="37:13" pos:end="37:21">

            <return pos:start="37:13" pos:end="37:21">return <expr pos:start="37:20" pos:end="37:20"><literal type="number" pos:start="37:20" pos:end="37:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:41"><expr pos:start="39:9" pos:end="39:40"><name pos:start="39:9" pos:end="39:24"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:24">filter_header</name></name> <operator pos:start="39:26" pos:end="39:26">=</operator> <name pos:start="39:28" pos:end="39:33"><name pos:start="39:28" pos:end="39:30">buf</name><index pos:start="39:31" pos:end="39:33">[<expr pos:start="39:32" pos:end="39:32"><literal type="number" pos:start="39:32" pos:end="39:32">1</literal></expr>]</index></name> <operator pos:start="39:35" pos:end="39:35">&amp;</operator> <literal type="number" pos:start="39:37" pos:end="39:40">0x06</literal></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:23">(<expr pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:18"><name pos:start="41:13" pos:end="41:15">buf</name><index pos:start="41:16" pos:end="41:18">[<expr pos:start="41:17" pos:end="41:17"><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>]</index></name> <operator pos:start="41:20" pos:end="41:20">&amp;</operator> <literal type="number" pos:start="41:22" pos:end="41:22">1</literal></expr>)</condition> <block pos:start="41:25" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:21">

            <expr_stmt pos:start="43:13" pos:end="43:74"><expr pos:start="43:13" pos:end="43:73"><call pos:start="43:13" pos:end="43:73"><name pos:start="43:13" pos:end="43:18">av_log</name><argument_list pos:start="43:19" pos:end="43:73">(<argument pos:start="43:20" pos:end="43:27"><expr pos:start="43:20" pos:end="43:27"><name pos:start="43:20" pos:end="43:27"><name pos:start="43:20" pos:end="43:20">s</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:27">avctx</name></name></expr></argument>, <argument pos:start="43:30" pos:end="43:41"><expr pos:start="43:30" pos:end="43:41"><name pos:start="43:30" pos:end="43:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:44" pos:end="43:72"><expr pos:start="43:44" pos:end="43:72"><literal type="string" pos:start="43:44" pos:end="43:72">"interlacing not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="45:13" pos:end="45:21">return <expr pos:start="45:20" pos:end="45:20"><literal type="number" pos:start="45:20" pos:end="45:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="49:9" pos:end="57:9"><if pos:start="49:9" pos:end="57:9">if <condition pos:start="49:12" pos:end="49:49">(<expr pos:start="49:13" pos:end="49:48"><name pos:start="49:13" pos:end="49:27">separated_coeff</name> <operator pos:start="49:29" pos:end="49:30">||</operator> <operator pos:start="49:32" pos:end="49:32">!</operator><name pos:start="49:33" pos:end="49:48"><name pos:start="49:33" pos:end="49:33">s</name><operator pos:start="49:34" pos:end="49:35">-&gt;</operator><name pos:start="49:36" pos:end="49:48">filter_header</name></name></expr>)</condition> <block pos:start="49:51" pos:end="57:9">{<block_content pos:start="51:13" pos:end="55:26">

            <expr_stmt pos:start="51:13" pos:end="51:46"><expr pos:start="51:13" pos:end="51:45"><name pos:start="51:13" pos:end="51:24">coeff_offset</name> <operator pos:start="51:26" pos:end="51:26">=</operator> <call pos:start="51:28" pos:end="51:41"><name pos:start="51:28" pos:end="51:34">AV_RB16</name><argument_list pos:start="51:35" pos:end="51:41">(<argument pos:start="51:36" pos:end="51:40"><expr pos:start="51:36" pos:end="51:40"><name pos:start="51:36" pos:end="51:38">buf</name><operator pos:start="51:39" pos:end="51:39">+</operator><literal type="number" pos:start="51:40" pos:end="51:40">2</literal></expr></argument>)</argument_list></call> <operator pos:start="51:43" pos:end="51:43">-</operator> <literal type="number" pos:start="51:45" pos:end="51:45">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:21"><expr pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:15">buf</name> <operator pos:start="53:17" pos:end="53:18">+=</operator> <literal type="number" pos:start="53:20" pos:end="53:20">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:26"><expr pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:20">buf_size</name> <operator pos:start="55:22" pos:end="55:23">-=</operator> <literal type="number" pos:start="55:25" pos:end="55:25">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:22"><expr pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:12">rows</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <name pos:start="61:16" pos:end="61:21"><name pos:start="61:16" pos:end="61:18">buf</name><index pos:start="61:19" pos:end="61:21">[<expr pos:start="61:20" pos:end="61:20"><literal type="number" pos:start="61:20" pos:end="61:20">2</literal></expr>]</index></name></expr>;</expr_stmt>  <comment type="block" pos:start="61:25" pos:end="61:62">/* number of stored macroblock rows */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:22"><expr pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:12">cols</name> <operator pos:start="63:14" pos:end="63:14">=</operator> <name pos:start="63:16" pos:end="63:21"><name pos:start="63:16" pos:end="63:18">buf</name><index pos:start="63:19" pos:end="63:21">[<expr pos:start="63:20" pos:end="63:20"><literal type="number" pos:start="63:20" pos:end="63:20">3</literal></expr>]</index></name></expr>;</expr_stmt>  <comment type="block" pos:start="63:25" pos:end="63:62">/* number of stored macroblock cols */</comment>

        <comment type="block" pos:start="65:9" pos:end="65:59">/* buf[4] is number of displayed macroblock rows */</comment>

        <comment type="block" pos:start="67:9" pos:end="67:59">/* buf[5] is number of displayed macroblock cols */</comment>



        <if_stmt pos:start="71:9" pos:end="89:9"><if pos:start="71:9" pos:end="89:9">if <condition pos:start="71:12" pos:end="75:46">(<expr pos:start="71:13" pos:end="75:45"><operator pos:start="71:13" pos:end="71:13">!</operator><name pos:start="71:14" pos:end="71:27"><name pos:start="71:14" pos:end="71:14">s</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:27">macroblocks</name></name> <operator pos:start="71:29" pos:end="71:30">||</operator> <comment type="block" pos:start="71:32" pos:end="71:48">/* first frame */</comment>

            <literal type="number" pos:start="73:13" pos:end="73:14">16</literal><operator pos:start="73:15" pos:end="73:15">*</operator><name pos:start="73:16" pos:end="73:19">cols</name> <operator pos:start="73:21" pos:end="73:22">!=</operator> <name pos:start="73:24" pos:end="73:44"><name pos:start="73:24" pos:end="73:24">s</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:31">avctx</name><operator pos:start="73:32" pos:end="73:33">-&gt;</operator><name pos:start="73:34" pos:end="73:44">coded_width</name></name> <operator pos:start="73:46" pos:end="73:47">||</operator>

            <literal type="number" pos:start="75:13" pos:end="75:14">16</literal><operator pos:start="75:15" pos:end="75:15">*</operator><name pos:start="75:16" pos:end="75:19">rows</name> <operator pos:start="75:21" pos:end="75:22">!=</operator> <name pos:start="75:24" pos:end="75:45"><name pos:start="75:24" pos:end="75:24">s</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:31">avctx</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:45">coded_height</name></name></expr>)</condition> <block pos:start="75:48" pos:end="89:9">{<block_content pos:start="77:13" pos:end="87:20">

            <expr_stmt pos:start="77:13" pos:end="77:63"><expr pos:start="77:13" pos:end="77:62"><call pos:start="77:13" pos:end="77:62"><name pos:start="77:13" pos:end="77:34">avcodec_set_dimensions</name><argument_list pos:start="77:35" pos:end="77:62">(<argument pos:start="77:36" pos:end="77:43"><expr pos:start="77:36" pos:end="77:43"><name pos:start="77:36" pos:end="77:43"><name pos:start="77:36" pos:end="77:36">s</name><operator pos:start="77:37" pos:end="77:38">-&gt;</operator><name pos:start="77:39" pos:end="77:43">avctx</name></name></expr></argument>, <argument pos:start="77:46" pos:end="77:52"><expr pos:start="77:46" pos:end="77:52"><literal type="number" pos:start="77:46" pos:end="77:47">16</literal><operator pos:start="77:48" pos:end="77:48">*</operator><name pos:start="77:49" pos:end="77:52">cols</name></expr></argument>, <argument pos:start="77:55" pos:end="77:61"><expr pos:start="77:55" pos:end="77:61"><literal type="number" pos:start="77:55" pos:end="77:56">16</literal><operator pos:start="77:57" pos:end="77:57">*</operator><name pos:start="77:58" pos:end="77:61">rows</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="79:13" pos:end="85:13"><if pos:start="79:13" pos:end="85:13">if <condition pos:start="79:16" pos:end="79:46">(<expr pos:start="79:17" pos:end="79:45"><name pos:start="79:17" pos:end="79:40"><name pos:start="79:17" pos:end="79:17">s</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:24">avctx</name><operator pos:start="79:25" pos:end="79:26">-&gt;</operator><name pos:start="79:27" pos:end="79:40">extradata_size</name></name> <operator pos:start="79:42" pos:end="79:43">==</operator> <literal type="number" pos:start="79:45" pos:end="79:45">1</literal></expr>)</condition> <block pos:start="79:48" pos:end="85:13">{<block_content pos:start="81:17" pos:end="83:66">

                <expr_stmt pos:start="81:17" pos:end="81:64"><expr pos:start="81:17" pos:end="81:63"><name pos:start="81:17" pos:end="81:31"><name pos:start="81:17" pos:end="81:17">s</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:24">avctx</name><operator pos:start="81:25" pos:end="81:26">-&gt;</operator><name pos:start="81:27" pos:end="81:31">width</name></name>  <operator pos:start="81:34" pos:end="81:35">-=</operator> <name pos:start="81:37" pos:end="81:58"><name pos:start="81:37" pos:end="81:37">s</name><operator pos:start="81:38" pos:end="81:39">-&gt;</operator><name pos:start="81:40" pos:end="81:44">avctx</name><operator pos:start="81:45" pos:end="81:46">-&gt;</operator><name pos:start="81:47" pos:end="81:55">extradata</name><index pos:start="81:56" pos:end="81:58">[<expr pos:start="81:57" pos:end="81:57"><literal type="number" pos:start="81:57" pos:end="81:57">0</literal></expr>]</index></name> <operator pos:start="81:60" pos:end="81:61">&gt;&gt;</operator> <literal type="number" pos:start="81:63" pos:end="81:63">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:66"><expr pos:start="83:17" pos:end="83:65"><name pos:start="83:17" pos:end="83:32"><name pos:start="83:17" pos:end="83:17">s</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:24">avctx</name><operator pos:start="83:25" pos:end="83:26">-&gt;</operator><name pos:start="83:27" pos:end="83:32">height</name></name> <operator pos:start="83:34" pos:end="83:35">-=</operator> <name pos:start="83:37" pos:end="83:58"><name pos:start="83:37" pos:end="83:37">s</name><operator pos:start="83:38" pos:end="83:39">-&gt;</operator><name pos:start="83:40" pos:end="83:44">avctx</name><operator pos:start="83:45" pos:end="83:46">-&gt;</operator><name pos:start="83:47" pos:end="83:55">extradata</name><index pos:start="83:56" pos:end="83:58">[<expr pos:start="83:57" pos:end="83:57"><literal type="number" pos:start="83:57" pos:end="83:57">0</literal></expr>]</index></name> <operator pos:start="83:60" pos:end="83:60">&amp;</operator> <literal type="number" pos:start="83:62" pos:end="83:65">0x0F</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:20"><expr pos:start="87:13" pos:end="87:19"><name pos:start="87:13" pos:end="87:15">res</name> <operator pos:start="87:17" pos:end="87:17">=</operator> <literal type="number" pos:start="87:19" pos:end="87:19">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:57"><expr pos:start="93:9" pos:end="93:56"><call pos:start="93:9" pos:end="93:56"><name pos:start="93:9" pos:end="93:34">ff_vp56_init_range_decoder</name><argument_list pos:start="93:35" pos:end="93:56">(<argument pos:start="93:36" pos:end="93:36"><expr pos:start="93:36" pos:end="93:36"><name pos:start="93:36" pos:end="93:36">c</name></expr></argument>, <argument pos:start="93:39" pos:end="93:43"><expr pos:start="93:39" pos:end="93:43"><name pos:start="93:39" pos:end="93:41">buf</name><operator pos:start="93:42" pos:end="93:42">+</operator><literal type="number" pos:start="93:43" pos:end="93:43">6</literal></expr></argument>, <argument pos:start="93:46" pos:end="93:55"><expr pos:start="93:46" pos:end="93:55"><name pos:start="93:46" pos:end="93:53">buf_size</name><operator pos:start="93:54" pos:end="93:54">-</operator><literal type="number" pos:start="93:55" pos:end="93:55">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:28"><expr pos:start="95:9" pos:end="95:27"><call pos:start="95:9" pos:end="95:27"><name pos:start="95:9" pos:end="95:21">vp56_rac_gets</name><argument_list pos:start="95:22" pos:end="95:27">(<argument pos:start="95:23" pos:end="95:23"><expr pos:start="95:23" pos:end="95:23"><name pos:start="95:23" pos:end="95:23">c</name></expr></argument>, <argument pos:start="95:26" pos:end="95:26"><expr pos:start="95:26" pos:end="95:26"><literal type="number" pos:start="95:26" pos:end="95:26">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:45"><expr pos:start="99:9" pos:end="99:44"><name pos:start="99:9" pos:end="99:25">parse_filter_info</name> <operator pos:start="99:27" pos:end="99:27">=</operator> <name pos:start="99:29" pos:end="99:44"><name pos:start="99:29" pos:end="99:29">s</name><operator pos:start="99:30" pos:end="99:31">-&gt;</operator><name pos:start="99:32" pos:end="99:44">filter_header</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="103:26"><if pos:start="101:9" pos:end="103:26">if <condition pos:start="101:12" pos:end="101:28">(<expr pos:start="101:13" pos:end="101:27"><name pos:start="101:13" pos:end="101:23">sub_version</name> <operator pos:start="101:25" pos:end="101:25">&lt;</operator> <literal type="number" pos:start="101:27" pos:end="101:27">8</literal></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:26"><block_content pos:start="103:13" pos:end="103:26">

            <expr_stmt pos:start="103:13" pos:end="103:26"><expr pos:start="103:13" pos:end="103:25"><name pos:start="103:13" pos:end="103:21">vrt_shift</name> <operator pos:start="103:23" pos:end="103:23">=</operator> <literal type="number" pos:start="103:25" pos:end="103:25">5</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:37"><expr pos:start="105:9" pos:end="105:36"><name pos:start="105:9" pos:end="105:22"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:22">sub_version</name></name> <operator pos:start="105:24" pos:end="105:24">=</operator> <name pos:start="105:26" pos:end="105:36">sub_version</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="107:7" pos:end="145:5">else <block pos:start="107:12" pos:end="145:5">{<block_content pos:start="109:9" pos:end="143:9">

        <if_stmt pos:start="109:9" pos:end="111:21"><if pos:start="109:9" pos:end="111:21">if <condition pos:start="109:12" pos:end="109:28">(<expr pos:start="109:13" pos:end="109:27"><operator pos:start="109:13" pos:end="109:13">!</operator><name pos:start="109:14" pos:end="109:27"><name pos:start="109:14" pos:end="109:14">s</name><operator pos:start="109:15" pos:end="109:16">-&gt;</operator><name pos:start="109:17" pos:end="109:27">sub_version</name></name></expr>)</condition><block type="pseudo" pos:start="111:13" pos:end="111:21"><block_content pos:start="111:13" pos:end="111:21">

            <return pos:start="111:13" pos:end="111:21">return <expr pos:start="111:20" pos:end="111:20"><literal type="number" pos:start="111:20" pos:end="111:20">0</literal></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="115:9" pos:end="123:9"><if pos:start="115:9" pos:end="123:9">if <condition pos:start="115:12" pos:end="115:49">(<expr pos:start="115:13" pos:end="115:48"><name pos:start="115:13" pos:end="115:27">separated_coeff</name> <operator pos:start="115:29" pos:end="115:30">||</operator> <operator pos:start="115:32" pos:end="115:32">!</operator><name pos:start="115:33" pos:end="115:48"><name pos:start="115:33" pos:end="115:33">s</name><operator pos:start="115:34" pos:end="115:35">-&gt;</operator><name pos:start="115:36" pos:end="115:48">filter_header</name></name></expr>)</condition> <block pos:start="115:51" pos:end="123:9">{<block_content pos:start="117:13" pos:end="121:26">

            <expr_stmt pos:start="117:13" pos:end="117:46"><expr pos:start="117:13" pos:end="117:45"><name pos:start="117:13" pos:end="117:24">coeff_offset</name> <operator pos:start="117:26" pos:end="117:26">=</operator> <call pos:start="117:28" pos:end="117:41"><name pos:start="117:28" pos:end="117:34">AV_RB16</name><argument_list pos:start="117:35" pos:end="117:41">(<argument pos:start="117:36" pos:end="117:40"><expr pos:start="117:36" pos:end="117:40"><name pos:start="117:36" pos:end="117:38">buf</name><operator pos:start="117:39" pos:end="117:39">+</operator><literal type="number" pos:start="117:40" pos:end="117:40">1</literal></expr></argument>)</argument_list></call> <operator pos:start="117:43" pos:end="117:43">-</operator> <literal type="number" pos:start="117:45" pos:end="117:45">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:21"><expr pos:start="119:13" pos:end="119:20"><name pos:start="119:13" pos:end="119:15">buf</name> <operator pos:start="119:17" pos:end="119:18">+=</operator> <literal type="number" pos:start="119:20" pos:end="119:20">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:26"><expr pos:start="121:13" pos:end="121:25"><name pos:start="121:13" pos:end="121:20">buf_size</name> <operator pos:start="121:22" pos:end="121:23">-=</operator> <literal type="number" pos:start="121:25" pos:end="121:25">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:57"><expr pos:start="125:9" pos:end="125:56"><call pos:start="125:9" pos:end="125:56"><name pos:start="125:9" pos:end="125:34">ff_vp56_init_range_decoder</name><argument_list pos:start="125:35" pos:end="125:56">(<argument pos:start="125:36" pos:end="125:36"><expr pos:start="125:36" pos:end="125:36"><name pos:start="125:36" pos:end="125:36">c</name></expr></argument>, <argument pos:start="125:39" pos:end="125:43"><expr pos:start="125:39" pos:end="125:43"><name pos:start="125:39" pos:end="125:41">buf</name><operator pos:start="125:42" pos:end="125:42">+</operator><literal type="number" pos:start="125:43" pos:end="125:43">1</literal></expr></argument>, <argument pos:start="125:46" pos:end="125:55"><expr pos:start="125:46" pos:end="125:55"><name pos:start="125:46" pos:end="125:53">buf_size</name><operator pos:start="125:54" pos:end="125:54">-</operator><literal type="number" pos:start="125:55" pos:end="125:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="129:9" pos:end="129:40"><expr pos:start="129:9" pos:end="129:39"><operator pos:start="129:9" pos:end="129:9">*</operator><name pos:start="129:10" pos:end="129:21">golden_frame</name> <operator pos:start="129:23" pos:end="129:23">=</operator> <call pos:start="129:25" pos:end="129:39"><name pos:start="129:25" pos:end="129:36">vp56_rac_get</name><argument_list pos:start="129:37" pos:end="129:39">(<argument pos:start="129:38" pos:end="129:38"><expr pos:start="129:38" pos:end="129:38"><name pos:start="129:38" pos:end="129:38">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="131:9" pos:end="143:9"><if pos:start="131:9" pos:end="143:9">if <condition pos:start="131:12" pos:end="131:29">(<expr pos:start="131:13" pos:end="131:28"><name pos:start="131:13" pos:end="131:28"><name pos:start="131:13" pos:end="131:13">s</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:28">filter_header</name></name></expr>)</condition> <block pos:start="131:31" pos:end="143:9">{<block_content pos:start="133:13" pos:end="141:52">

            <expr_stmt pos:start="133:13" pos:end="133:51"><expr pos:start="133:13" pos:end="133:50"><name pos:start="133:13" pos:end="133:32"><name pos:start="133:13" pos:end="133:13">s</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:32">deblock_filtering</name></name> <operator pos:start="133:34" pos:end="133:34">=</operator> <call pos:start="133:36" pos:end="133:50"><name pos:start="133:36" pos:end="133:47">vp56_rac_get</name><argument_list pos:start="133:48" pos:end="133:50">(<argument pos:start="133:49" pos:end="133:49"><expr pos:start="133:49" pos:end="133:49"><name pos:start="133:49" pos:end="133:49">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="135:13" pos:end="137:32"><if pos:start="135:13" pos:end="137:32">if <condition pos:start="135:16" pos:end="135:37">(<expr pos:start="135:17" pos:end="135:36"><name pos:start="135:17" pos:end="135:36"><name pos:start="135:17" pos:end="135:17">s</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:36">deblock_filtering</name></name></expr>)</condition><block type="pseudo" pos:start="137:17" pos:end="137:32"><block_content pos:start="137:17" pos:end="137:32">

                <expr_stmt pos:start="137:17" pos:end="137:32"><expr pos:start="137:17" pos:end="137:31"><call pos:start="137:17" pos:end="137:31"><name pos:start="137:17" pos:end="137:28">vp56_rac_get</name><argument_list pos:start="137:29" pos:end="137:31">(<argument pos:start="137:30" pos:end="137:30"><expr pos:start="137:30" pos:end="137:30"><name pos:start="137:30" pos:end="137:30">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="139:13" pos:end="141:52"><if pos:start="139:13" pos:end="141:52">if <condition pos:start="139:16" pos:end="139:35">(<expr pos:start="139:17" pos:end="139:34"><name pos:start="139:17" pos:end="139:30"><name pos:start="139:17" pos:end="139:17">s</name><operator pos:start="139:18" pos:end="139:19">-&gt;</operator><name pos:start="139:20" pos:end="139:30">sub_version</name></name> <operator pos:start="139:32" pos:end="139:32">&gt;</operator> <literal type="number" pos:start="139:34" pos:end="139:34">7</literal></expr>)</condition><block type="pseudo" pos:start="141:17" pos:end="141:52"><block_content pos:start="141:17" pos:end="141:52">

                <expr_stmt pos:start="141:17" pos:end="141:52"><expr pos:start="141:17" pos:end="141:51"><name pos:start="141:17" pos:end="141:33">parse_filter_info</name> <operator pos:start="141:35" pos:end="141:35">=</operator> <call pos:start="141:37" pos:end="141:51"><name pos:start="141:37" pos:end="141:48">vp56_rac_get</name><argument_list pos:start="141:49" pos:end="141:51">(<argument pos:start="141:50" pos:end="141:50"><expr pos:start="141:50" pos:end="141:50"><name pos:start="141:50" pos:end="141:50">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="149:5" pos:end="177:5"><if pos:start="149:5" pos:end="177:5">if <condition pos:start="149:8" pos:end="149:26">(<expr pos:start="149:9" pos:end="149:25"><name pos:start="149:9" pos:end="149:25">parse_filter_info</name></expr>)</condition> <block pos:start="149:28" pos:end="177:5">{<block_content pos:start="151:9" pos:end="175:37">

        <if_stmt pos:start="151:9" pos:end="167:9"><if pos:start="151:9" pos:end="159:9">if <condition pos:start="151:12" pos:end="151:28">(<expr pos:start="151:13" pos:end="151:27"><call pos:start="151:13" pos:end="151:27"><name pos:start="151:13" pos:end="151:24">vp56_rac_get</name><argument_list pos:start="151:25" pos:end="151:27">(<argument pos:start="151:26" pos:end="151:26"><expr pos:start="151:26" pos:end="151:26"><name pos:start="151:26" pos:end="151:26">c</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="151:30" pos:end="159:9">{<block_content pos:start="153:13" pos:end="157:60">

            <expr_stmt pos:start="153:13" pos:end="153:31"><expr pos:start="153:13" pos:end="153:30"><name pos:start="153:13" pos:end="153:26"><name pos:start="153:13" pos:end="153:13">s</name><operator pos:start="153:14" pos:end="153:15">-&gt;</operator><name pos:start="153:16" pos:end="153:26">filter_mode</name></name> <operator pos:start="153:28" pos:end="153:28">=</operator> <literal type="number" pos:start="153:30" pos:end="153:30">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:76"><expr pos:start="155:13" pos:end="155:75"><name pos:start="155:13" pos:end="155:40"><name pos:start="155:13" pos:end="155:13">s</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:40">sample_variance_threshold</name></name> <operator pos:start="155:42" pos:end="155:42">=</operator> <call pos:start="155:44" pos:end="155:62"><name pos:start="155:44" pos:end="155:56">vp56_rac_gets</name><argument_list pos:start="155:57" pos:end="155:62">(<argument pos:start="155:58" pos:end="155:58"><expr pos:start="155:58" pos:end="155:58"><name pos:start="155:58" pos:end="155:58">c</name></expr></argument>, <argument pos:start="155:61" pos:end="155:61"><expr pos:start="155:61" pos:end="155:61"><literal type="number" pos:start="155:61" pos:end="155:61">5</literal></expr></argument>)</argument_list></call> <operator pos:start="155:64" pos:end="155:65">&lt;&lt;</operator> <name pos:start="155:67" pos:end="155:75">vrt_shift</name></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:60"><expr pos:start="157:13" pos:end="157:59"><name pos:start="157:13" pos:end="157:32"><name pos:start="157:13" pos:end="157:13">s</name><operator pos:start="157:14" pos:end="157:15">-&gt;</operator><name pos:start="157:16" pos:end="157:32">max_vector_length</name></name> <operator pos:start="157:34" pos:end="157:34">=</operator> <literal type="number" pos:start="157:36" pos:end="157:36">2</literal> <operator pos:start="157:38" pos:end="157:39">&lt;&lt;</operator> <call pos:start="157:41" pos:end="157:59"><name pos:start="157:41" pos:end="157:53">vp56_rac_gets</name><argument_list pos:start="157:54" pos:end="157:59">(<argument pos:start="157:55" pos:end="157:55"><expr pos:start="157:55" pos:end="157:55"><name pos:start="157:55" pos:end="157:55">c</name></expr></argument>, <argument pos:start="157:58" pos:end="157:58"><expr pos:start="157:58" pos:end="157:58"><literal type="number" pos:start="157:58" pos:end="157:58">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="159:11" pos:end="163:9">else if <condition pos:start="159:19" pos:end="159:35">(<expr pos:start="159:20" pos:end="159:34"><call pos:start="159:20" pos:end="159:34"><name pos:start="159:20" pos:end="159:31">vp56_rac_get</name><argument_list pos:start="159:32" pos:end="159:34">(<argument pos:start="159:33" pos:end="159:33"><expr pos:start="159:33" pos:end="159:33"><name pos:start="159:33" pos:end="159:33">c</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="159:37" pos:end="163:9">{<block_content pos:start="161:13" pos:end="161:31">

            <expr_stmt pos:start="161:13" pos:end="161:31"><expr pos:start="161:13" pos:end="161:30"><name pos:start="161:13" pos:end="161:26"><name pos:start="161:13" pos:end="161:13">s</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:26">filter_mode</name></name> <operator pos:start="161:28" pos:end="161:28">=</operator> <literal type="number" pos:start="161:30" pos:end="161:30">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="163:11" pos:end="167:9">else <block pos:start="163:16" pos:end="167:9">{<block_content pos:start="165:13" pos:end="165:31">

            <expr_stmt pos:start="165:13" pos:end="165:31"><expr pos:start="165:13" pos:end="165:30"><name pos:start="165:13" pos:end="165:26"><name pos:start="165:13" pos:end="165:13">s</name><operator pos:start="165:14" pos:end="165:15">-&gt;</operator><name pos:start="165:16" pos:end="165:26">filter_mode</name></name> <operator pos:start="165:28" pos:end="165:28">=</operator> <literal type="number" pos:start="165:30" pos:end="165:30">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="169:9" pos:end="175:37"><if pos:start="169:9" pos:end="171:54">if <condition pos:start="169:12" pos:end="169:31">(<expr pos:start="169:13" pos:end="169:30"><name pos:start="169:13" pos:end="169:26"><name pos:start="169:13" pos:end="169:13">s</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:26">sub_version</name></name> <operator pos:start="169:28" pos:end="169:28">&gt;</operator> <literal type="number" pos:start="169:30" pos:end="169:30">7</literal></expr>)</condition><block type="pseudo" pos:start="171:13" pos:end="171:54"><block_content pos:start="171:13" pos:end="171:54">

            <expr_stmt pos:start="171:13" pos:end="171:54"><expr pos:start="171:13" pos:end="171:53"><name pos:start="171:13" pos:end="171:31"><name pos:start="171:13" pos:end="171:13">s</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:31">filter_selection</name></name> <operator pos:start="171:33" pos:end="171:33">=</operator> <call pos:start="171:35" pos:end="171:53"><name pos:start="171:35" pos:end="171:47">vp56_rac_gets</name><argument_list pos:start="171:48" pos:end="171:53">(<argument pos:start="171:49" pos:end="171:49"><expr pos:start="171:49" pos:end="171:49"><name pos:start="171:49" pos:end="171:49">c</name></expr></argument>, <argument pos:start="171:52" pos:end="171:52"><expr pos:start="171:52" pos:end="171:52"><literal type="number" pos:start="171:52" pos:end="171:52">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="173:9" pos:end="175:37">else<block type="pseudo" pos:start="175:13" pos:end="175:37"><block_content pos:start="175:13" pos:end="175:37">

            <expr_stmt pos:start="175:13" pos:end="175:37"><expr pos:start="175:13" pos:end="175:36"><name pos:start="175:13" pos:end="175:31"><name pos:start="175:13" pos:end="175:13">s</name><operator pos:start="175:14" pos:end="175:15">-&gt;</operator><name pos:start="175:16" pos:end="175:31">filter_selection</name></name> <operator pos:start="175:33" pos:end="175:33">=</operator> <literal type="number" pos:start="175:35" pos:end="175:36">16</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="181:5" pos:end="181:37"><expr pos:start="181:5" pos:end="181:36"><name pos:start="181:5" pos:end="181:18"><name pos:start="181:5" pos:end="181:5">s</name><operator pos:start="181:6" pos:end="181:7">-&gt;</operator><name pos:start="181:8" pos:end="181:18">use_huffman</name></name> <operator pos:start="181:20" pos:end="181:20">=</operator> <call pos:start="181:22" pos:end="181:36"><name pos:start="181:22" pos:end="181:33">vp56_rac_get</name><argument_list pos:start="181:34" pos:end="181:36">(<argument pos:start="181:35" pos:end="181:35"><expr pos:start="181:35" pos:end="181:35"><name pos:start="181:35" pos:end="181:35">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="185:5" pos:end="185:37"><expr pos:start="185:5" pos:end="185:36"><name pos:start="185:5" pos:end="185:18"><name pos:start="185:5" pos:end="185:5">s</name><operator pos:start="185:6" pos:end="185:7">-&gt;</operator><name pos:start="185:8" pos:end="185:18">parse_coeff</name></name> <operator pos:start="185:20" pos:end="185:20">=</operator> <name pos:start="185:22" pos:end="185:36">vp6_parse_coeff</name></expr>;</expr_stmt>

    <if_stmt pos:start="187:5" pos:end="215:5"><if pos:start="187:5" pos:end="211:5">if <condition pos:start="187:8" pos:end="187:21">(<expr pos:start="187:9" pos:end="187:20"><name pos:start="187:9" pos:end="187:20">coeff_offset</name></expr>)</condition> <block pos:start="187:23" pos:end="211:5">{<block_content pos:start="189:9" pos:end="209:9">

        <expr_stmt pos:start="189:9" pos:end="189:33"><expr pos:start="189:9" pos:end="189:32"><name pos:start="189:9" pos:end="189:11">buf</name>      <operator pos:start="189:18" pos:end="189:19">+=</operator> <name pos:start="189:21" pos:end="189:32">coeff_offset</name></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:33"><expr pos:start="191:9" pos:end="191:32"><name pos:start="191:9" pos:end="191:16">buf_size</name> <operator pos:start="191:18" pos:end="191:19">-=</operator> <name pos:start="191:21" pos:end="191:32">coeff_offset</name></expr>;</expr_stmt>

        <if_stmt pos:start="193:9" pos:end="195:21"><if pos:start="193:9" pos:end="195:21">if <condition pos:start="193:12" pos:end="193:25">(<expr pos:start="193:13" pos:end="193:24"><name pos:start="193:13" pos:end="193:20">buf_size</name> <operator pos:start="193:22" pos:end="193:22">&lt;</operator> <literal type="number" pos:start="193:24" pos:end="193:24">0</literal></expr>)</condition><block type="pseudo" pos:start="195:13" pos:end="195:21"><block_content pos:start="195:13" pos:end="195:21">

            <return pos:start="195:13" pos:end="195:21">return <expr pos:start="195:20" pos:end="195:20"><literal type="number" pos:start="195:20" pos:end="195:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="197:9" pos:end="209:9"><if pos:start="197:9" pos:end="203:9">if <condition pos:start="197:12" pos:end="197:27">(<expr pos:start="197:13" pos:end="197:26"><name pos:start="197:13" pos:end="197:26"><name pos:start="197:13" pos:end="197:13">s</name><operator pos:start="197:14" pos:end="197:15">-&gt;</operator><name pos:start="197:16" pos:end="197:26">use_huffman</name></name></expr>)</condition> <block pos:start="197:29" pos:end="203:9">{<block_content pos:start="199:13" pos:end="201:52">

            <expr_stmt pos:start="199:13" pos:end="199:53"><expr pos:start="199:13" pos:end="199:52"><name pos:start="199:13" pos:end="199:26"><name pos:start="199:13" pos:end="199:13">s</name><operator pos:start="199:14" pos:end="199:15">-&gt;</operator><name pos:start="199:16" pos:end="199:26">parse_coeff</name></name> <operator pos:start="199:28" pos:end="199:28">=</operator> <name pos:start="199:30" pos:end="199:52">vp6_parse_coeff_huffman</name></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:52"><expr pos:start="201:13" pos:end="201:51"><call pos:start="201:13" pos:end="201:51"><name pos:start="201:13" pos:end="201:25">init_get_bits</name><argument_list pos:start="201:26" pos:end="201:51">(<argument pos:start="201:27" pos:end="201:32"><expr pos:start="201:27" pos:end="201:32"><operator pos:start="201:27" pos:end="201:27">&amp;</operator><name pos:start="201:28" pos:end="201:32"><name pos:start="201:28" pos:end="201:28">s</name><operator pos:start="201:29" pos:end="201:30">-&gt;</operator><name pos:start="201:31" pos:end="201:32">gb</name></name></expr></argument>, <argument pos:start="201:35" pos:end="201:37"><expr pos:start="201:35" pos:end="201:37"><name pos:start="201:35" pos:end="201:37">buf</name></expr></argument>, <argument pos:start="201:40" pos:end="201:50"><expr pos:start="201:40" pos:end="201:50"><name pos:start="201:40" pos:end="201:47">buf_size</name><operator pos:start="201:48" pos:end="201:49">&lt;&lt;</operator><literal type="number" pos:start="201:50" pos:end="201:50">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="203:11" pos:end="209:9">else <block pos:start="203:16" pos:end="209:9">{<block_content pos:start="205:13" pos:end="207:28">

            <expr_stmt pos:start="205:13" pos:end="205:62"><expr pos:start="205:13" pos:end="205:61"><call pos:start="205:13" pos:end="205:61"><name pos:start="205:13" pos:end="205:38">ff_vp56_init_range_decoder</name><argument_list pos:start="205:39" pos:end="205:61">(<argument pos:start="205:40" pos:end="205:45"><expr pos:start="205:40" pos:end="205:45"><operator pos:start="205:40" pos:end="205:40">&amp;</operator><name pos:start="205:41" pos:end="205:45"><name pos:start="205:41" pos:end="205:41">s</name><operator pos:start="205:42" pos:end="205:43">-&gt;</operator><name pos:start="205:44" pos:end="205:45">cc</name></name></expr></argument>, <argument pos:start="205:48" pos:end="205:50"><expr pos:start="205:48" pos:end="205:50"><name pos:start="205:48" pos:end="205:50">buf</name></expr></argument>, <argument pos:start="205:53" pos:end="205:60"><expr pos:start="205:53" pos:end="205:60"><name pos:start="205:53" pos:end="205:60">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:28"><expr pos:start="207:13" pos:end="207:27"><name pos:start="207:13" pos:end="207:18"><name pos:start="207:13" pos:end="207:13">s</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:18">ccp</name></name> <operator pos:start="207:20" pos:end="207:20">=</operator> <operator pos:start="207:22" pos:end="207:22">&amp;</operator><name pos:start="207:23" pos:end="207:27"><name pos:start="207:23" pos:end="207:23">s</name><operator pos:start="207:24" pos:end="207:25">-&gt;</operator><name pos:start="207:26" pos:end="207:27">cc</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="211:7" pos:end="215:5">else <block pos:start="211:12" pos:end="215:5">{<block_content pos:start="213:9" pos:end="213:23">

        <expr_stmt pos:start="213:9" pos:end="213:23"><expr pos:start="213:9" pos:end="213:22"><name pos:start="213:9" pos:end="213:14"><name pos:start="213:9" pos:end="213:9">s</name><operator pos:start="213:10" pos:end="213:11">-&gt;</operator><name pos:start="213:12" pos:end="213:14">ccp</name></name> <operator pos:start="213:16" pos:end="213:16">=</operator> <operator pos:start="213:18" pos:end="213:18">&amp;</operator><name pos:start="213:19" pos:end="213:22"><name pos:start="213:19" pos:end="213:19">s</name><operator pos:start="213:20" pos:end="213:21">-&gt;</operator><name pos:start="213:22" pos:end="213:22">c</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="219:5" pos:end="219:15">return <expr pos:start="219:12" pos:end="219:14"><name pos:start="219:12" pos:end="219:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
