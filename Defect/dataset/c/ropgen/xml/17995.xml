<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17995.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">ssize_t</name></type> <name pos:start="1:16" pos:end="1:23">qsb_grow</name><parameter_list pos:start="1:24" pos:end="1:62">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:39">QEMUSizedBuffer</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">qsb</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:61"><decl pos:start="1:47" pos:end="1:61"><type pos:start="1:47" pos:end="1:61"><name pos:start="1:47" pos:end="1:52">size_t</name></type> <name pos:start="1:54" pos:end="1:61">new_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:21">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">size_t</name></type> <name pos:start="5:12" pos:end="5:24">needed_chunks</name></decl>, <decl pos:start="5:27" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:10"/><name pos:start="5:27" pos:end="5:27">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="93:5"><if pos:start="9:5" pos:end="93:5">if <condition pos:start="9:8" pos:end="9:29">(<expr pos:start="9:9" pos:end="9:28"><name pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:11">qsb</name><operator pos:start="9:12" pos:end="9:13">-&gt;</operator><name pos:start="9:14" pos:end="9:17">size</name></name> <operator pos:start="9:19" pos:end="9:19">&lt;</operator> <name pos:start="9:21" pos:end="9:28">new_size</name></expr>)</condition> <block pos:start="9:31" pos:end="93:5">{<block_content pos:start="11:9" pos:end="91:50">

        <decl_stmt pos:start="11:9" pos:end="11:30"><decl pos:start="11:9" pos:end="11:29"><type pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:14">struct</name> <name pos:start="11:16" pos:end="11:20">iovec</name></name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:29">new_iov</name></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:48"><decl pos:start="13:9" pos:end="13:47"><type pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:14">size_t</name></type> <name pos:start="13:16" pos:end="13:24">size_diff</name> <init pos:start="13:26" pos:end="13:47">= <expr pos:start="13:28" pos:end="13:47"><name pos:start="13:28" pos:end="13:35">new_size</name> <operator pos:start="13:37" pos:end="13:37">-</operator> <name pos:start="13:39" pos:end="13:47"><name pos:start="13:39" pos:end="13:41">qsb</name><operator pos:start="13:42" pos:end="13:43">-&gt;</operator><name pos:start="13:44" pos:end="13:47">size</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="17:67"><decl pos:start="15:9" pos:end="17:66"><type pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:14">size_t</name></type> <name pos:start="15:16" pos:end="15:25">chunk_size</name> <init pos:start="15:27" pos:end="17:66">= <expr pos:start="15:29" pos:end="17:66"><ternary pos:start="15:29" pos:end="17:66"><condition pos:start="15:29" pos:end="17:30"><expr pos:start="15:29" pos:end="15:60"><operator pos:start="15:29" pos:end="15:29">(</operator><name pos:start="15:30" pos:end="15:38">size_diff</name> <operator pos:start="15:40" pos:end="15:40">&gt;</operator> <name pos:start="15:42" pos:end="15:59">QSB_MAX_CHUNK_SIZE</name><operator pos:start="15:60" pos:end="15:60">)</operator></expr>

                             ?</condition><then pos:start="17:32" pos:end="17:49"> <expr pos:start="17:32" pos:end="17:49"><name pos:start="17:32" pos:end="17:49">QSB_MAX_CHUNK_SIZE</name></expr> </then><else pos:start="17:51" pos:end="17:66">: <expr pos:start="17:53" pos:end="17:66"><name pos:start="17:53" pos:end="17:66">QSB_CHUNK_SIZE</name></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="21:9" pos:end="21:60"><expr pos:start="21:9" pos:end="21:59"><name pos:start="21:9" pos:end="21:21">needed_chunks</name> <operator pos:start="21:23" pos:end="21:23">=</operator> <call pos:start="21:25" pos:end="21:59"><name pos:start="21:25" pos:end="21:36">DIV_ROUND_UP</name><argument_list pos:start="21:37" pos:end="21:59">(<argument pos:start="21:38" pos:end="21:46"><expr pos:start="21:38" pos:end="21:46"><name pos:start="21:38" pos:end="21:46">size_diff</name></expr></argument>, <argument pos:start="21:49" pos:end="21:58"><expr pos:start="21:49" pos:end="21:58"><name pos:start="21:49" pos:end="21:58">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="25:9" pos:end="25:70"><expr pos:start="25:9" pos:end="25:69"><name pos:start="25:9" pos:end="25:15">new_iov</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <call pos:start="25:19" pos:end="25:69"><name pos:start="25:19" pos:end="25:27">g_try_new</name><argument_list pos:start="25:28" pos:end="25:69">(<argument pos:start="25:29" pos:end="25:40"><expr pos:start="25:29" pos:end="25:40">struct <name pos:start="25:36" pos:end="25:40">iovec</name></expr></argument>, <argument pos:start="25:43" pos:end="25:68"><expr pos:start="25:43" pos:end="25:68"><name pos:start="25:43" pos:end="25:52"><name pos:start="25:43" pos:end="25:45">qsb</name><operator pos:start="25:46" pos:end="25:47">-&gt;</operator><name pos:start="25:48" pos:end="25:52">n_iov</name></name> <operator pos:start="25:54" pos:end="25:54">+</operator> <name pos:start="25:56" pos:end="25:68">needed_chunks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:28">(<expr pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:19">new_iov</name> <operator pos:start="27:21" pos:end="27:22">==</operator> <name pos:start="27:24" pos:end="27:27">NULL</name></expr>)</condition> <block pos:start="27:30" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:27">

            <return pos:start="29:13" pos:end="29:27">return <expr pos:start="29:20" pos:end="29:26"><operator pos:start="29:20" pos:end="29:20">-</operator><name pos:start="29:21" pos:end="29:26">ENOMEM</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="35:9" pos:end="35:56">/* Allocate new chunks as needed into new_iov */</comment>

        <for pos:start="37:9" pos:end="65:9">for <control pos:start="37:13" pos:end="37:65">(<init pos:start="37:14" pos:end="37:28"><expr pos:start="37:14" pos:end="37:27"><name pos:start="37:14" pos:end="37:14">i</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <name pos:start="37:18" pos:end="37:27"><name pos:start="37:18" pos:end="37:20">qsb</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:27">n_iov</name></name></expr>;</init> <condition pos:start="37:30" pos:end="37:60"><expr pos:start="37:30" pos:end="37:59"><name pos:start="37:30" pos:end="37:30">i</name> <operator pos:start="37:32" pos:end="37:32">&lt;</operator> <name pos:start="37:34" pos:end="37:43"><name pos:start="37:34" pos:end="37:36">qsb</name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:43">n_iov</name></name> <operator pos:start="37:45" pos:end="37:45">+</operator> <name pos:start="37:47" pos:end="37:59">needed_chunks</name></expr>;</condition> <incr pos:start="37:62" pos:end="37:64"><expr pos:start="37:62" pos:end="37:64"><name pos:start="37:62" pos:end="37:62">i</name><operator pos:start="37:63" pos:end="37:64">++</operator></expr></incr>)</control> <block pos:start="37:67" pos:end="65:9">{<block_content pos:start="39:13" pos:end="63:13">

            <expr_stmt pos:start="39:13" pos:end="39:60"><expr pos:start="39:13" pos:end="39:59"><name pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:19">new_iov</name><index pos:start="39:20" pos:end="39:22">[<expr pos:start="39:21" pos:end="39:21"><name pos:start="39:21" pos:end="39:21">i</name></expr>]</index></name><operator pos:start="39:23" pos:end="39:23">.</operator><name pos:start="39:24" pos:end="39:31">iov_base</name> <operator pos:start="39:33" pos:end="39:33">=</operator> <call pos:start="39:35" pos:end="39:59"><name pos:start="39:35" pos:end="39:47">g_try_malloc0</name><argument_list pos:start="39:48" pos:end="39:59">(<argument pos:start="39:49" pos:end="39:58"><expr pos:start="39:49" pos:end="39:58"><name pos:start="39:49" pos:end="39:58">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:44"><expr pos:start="41:13" pos:end="41:43"><name pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:19">new_iov</name><index pos:start="41:20" pos:end="41:22">[<expr pos:start="41:21" pos:end="41:21"><name pos:start="41:21" pos:end="41:21">i</name></expr>]</index></name><operator pos:start="41:23" pos:end="41:23">.</operator><name pos:start="41:24" pos:end="41:30">iov_len</name> <operator pos:start="41:32" pos:end="41:32">=</operator> <name pos:start="41:34" pos:end="41:43">chunk_size</name></expr>;</expr_stmt>

            <if_stmt pos:start="43:13" pos:end="63:13"><if pos:start="43:13" pos:end="63:13">if <condition pos:start="43:16" pos:end="43:37">(<expr pos:start="43:17" pos:end="43:36"><operator pos:start="43:17" pos:end="43:17">!</operator><name pos:start="43:18" pos:end="43:27"><name pos:start="43:18" pos:end="43:24">new_iov</name><index pos:start="43:25" pos:end="43:27">[<expr pos:start="43:26" pos:end="43:26"><name pos:start="43:26" pos:end="43:26">i</name></expr>]</index></name><operator pos:start="43:28" pos:end="43:28">.</operator><name pos:start="43:29" pos:end="43:36">iov_base</name></expr>)</condition> <block pos:start="43:39" pos:end="63:13">{<block_content pos:start="45:17" pos:end="61:31">

                <decl_stmt pos:start="45:17" pos:end="45:25"><decl pos:start="45:17" pos:end="45:24"><type pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:22">size_t</name></type> <name pos:start="45:24" pos:end="45:24">j</name></decl>;</decl_stmt>



                <comment type="block" pos:start="49:17" pos:end="49:58">/* Free previously allocated new chunks */</comment>

                <for pos:start="51:17" pos:end="55:17">for <control pos:start="51:21" pos:end="51:48">(<init pos:start="51:22" pos:end="51:36"><expr pos:start="51:22" pos:end="51:35"><name pos:start="51:22" pos:end="51:22">j</name> <operator pos:start="51:24" pos:end="51:24">=</operator> <name pos:start="51:26" pos:end="51:35"><name pos:start="51:26" pos:end="51:28">qsb</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:35">n_iov</name></name></expr>;</init> <condition pos:start="51:38" pos:end="51:43"><expr pos:start="51:38" pos:end="51:42"><name pos:start="51:38" pos:end="51:38">j</name> <operator pos:start="51:40" pos:end="51:40">&lt;</operator> <name pos:start="51:42" pos:end="51:42">i</name></expr>;</condition> <incr pos:start="51:45" pos:end="51:47"><expr pos:start="51:45" pos:end="51:47"><name pos:start="51:45" pos:end="51:45">j</name><operator pos:start="51:46" pos:end="51:47">++</operator></expr></incr>)</control> <block pos:start="51:50" pos:end="55:17">{<block_content pos:start="53:21" pos:end="53:48">

                    <expr_stmt pos:start="53:21" pos:end="53:48"><expr pos:start="53:21" pos:end="53:47"><call pos:start="53:21" pos:end="53:47"><name pos:start="53:21" pos:end="53:26">g_free</name><argument_list pos:start="53:27" pos:end="53:47">(<argument pos:start="53:28" pos:end="53:46"><expr pos:start="53:28" pos:end="53:46"><name pos:start="53:28" pos:end="53:37"><name pos:start="53:28" pos:end="53:34">new_iov</name><index pos:start="53:35" pos:end="53:37">[<expr pos:start="53:36" pos:end="53:36"><name pos:start="53:36" pos:end="53:36">j</name></expr>]</index></name><operator pos:start="53:38" pos:end="53:38">.</operator><name pos:start="53:39" pos:end="53:46">iov_base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="57:17" pos:end="57:32"><expr pos:start="57:17" pos:end="57:31"><call pos:start="57:17" pos:end="57:31"><name pos:start="57:17" pos:end="57:22">g_free</name><argument_list pos:start="57:23" pos:end="57:31">(<argument pos:start="57:24" pos:end="57:30"><expr pos:start="57:24" pos:end="57:30"><name pos:start="57:24" pos:end="57:30">new_iov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <return pos:start="61:17" pos:end="61:31">return <expr pos:start="61:24" pos:end="61:30"><operator pos:start="61:24" pos:end="61:24">-</operator><name pos:start="61:25" pos:end="61:30">ENOMEM</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="69:9" pos:end="75:11">/*

         * Now we can't get any allocation errors, copy over to new iov

         * and switch.

         */</comment>

        <for pos:start="77:9" pos:end="81:9">for <control pos:start="77:13" pos:end="77:40">(<init pos:start="77:14" pos:end="77:19"><expr pos:start="77:14" pos:end="77:18"><name pos:start="77:14" pos:end="77:14">i</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <literal type="number" pos:start="77:18" pos:end="77:18">0</literal></expr>;</init> <condition pos:start="77:21" pos:end="77:35"><expr pos:start="77:21" pos:end="77:34"><name pos:start="77:21" pos:end="77:21">i</name> <operator pos:start="77:23" pos:end="77:23">&lt;</operator> <name pos:start="77:25" pos:end="77:34"><name pos:start="77:25" pos:end="77:27">qsb</name><operator pos:start="77:28" pos:end="77:29">-&gt;</operator><name pos:start="77:30" pos:end="77:34">n_iov</name></name></expr>;</condition> <incr pos:start="77:37" pos:end="77:39"><expr pos:start="77:37" pos:end="77:39"><name pos:start="77:37" pos:end="77:37">i</name><operator pos:start="77:38" pos:end="77:39">++</operator></expr></incr>)</control> <block pos:start="77:42" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:37">

            <expr_stmt pos:start="79:13" pos:end="79:37"><expr pos:start="79:13" pos:end="79:36"><name pos:start="79:13" pos:end="79:22"><name pos:start="79:13" pos:end="79:19">new_iov</name><index pos:start="79:20" pos:end="79:22">[<expr pos:start="79:21" pos:end="79:21"><name pos:start="79:21" pos:end="79:21">i</name></expr>]</index></name> <operator pos:start="79:24" pos:end="79:24">=</operator> <name pos:start="79:26" pos:end="79:36"><name pos:start="79:26" pos:end="79:28">qsb</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:33">iov</name><index pos:start="79:34" pos:end="79:36">[<expr pos:start="79:35" pos:end="79:35"><name pos:start="79:35" pos:end="79:35">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="85:9" pos:end="85:36"><expr pos:start="85:9" pos:end="85:35"><name pos:start="85:9" pos:end="85:18"><name pos:start="85:9" pos:end="85:11">qsb</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:18">n_iov</name></name> <operator pos:start="85:20" pos:end="85:21">+=</operator> <name pos:start="85:23" pos:end="85:35">needed_chunks</name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:25"><expr pos:start="87:9" pos:end="87:24"><call pos:start="87:9" pos:end="87:24"><name pos:start="87:9" pos:end="87:14">g_free</name><argument_list pos:start="87:15" pos:end="87:24">(<argument pos:start="87:16" pos:end="87:23"><expr pos:start="87:16" pos:end="87:23"><name pos:start="87:16" pos:end="87:23"><name pos:start="87:16" pos:end="87:18">qsb</name><operator pos:start="87:19" pos:end="87:20">-&gt;</operator><name pos:start="87:21" pos:end="87:23">iov</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:27"><expr pos:start="89:9" pos:end="89:26"><name pos:start="89:9" pos:end="89:16"><name pos:start="89:9" pos:end="89:11">qsb</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:16">iov</name></name> <operator pos:start="89:18" pos:end="89:18">=</operator> <name pos:start="89:20" pos:end="89:26">new_iov</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:50"><expr pos:start="91:9" pos:end="91:49"><name pos:start="91:9" pos:end="91:17"><name pos:start="91:9" pos:end="91:11">qsb</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:17">size</name></name> <operator pos:start="91:19" pos:end="91:20">+=</operator> <operator pos:start="91:22" pos:end="91:22">(</operator><name pos:start="91:23" pos:end="91:35">needed_chunks</name> <operator pos:start="91:37" pos:end="91:37">*</operator> <name pos:start="91:39" pos:end="91:48">chunk_size</name><operator pos:start="91:49" pos:end="91:49">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="97:5" pos:end="97:21">return <expr pos:start="97:12" pos:end="97:20"><name pos:start="97:12" pos:end="97:20"><name pos:start="97:12" pos:end="97:14">qsb</name><operator pos:start="97:15" pos:end="97:16">-&gt;</operator><name pos:start="97:17" pos:end="97:20">size</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
