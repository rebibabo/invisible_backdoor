<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26127.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">float64_is_unordered</name><parameter_list pos:start="1:32" pos:end="1:75">(<parameter pos:start="1:33" pos:end="1:39"><decl pos:start="1:33" pos:end="1:39"><type pos:start="1:33" pos:end="1:39"><name pos:start="1:33" pos:end="1:35">int</name></type> <name pos:start="1:37" pos:end="1:39">sig</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:50"><decl pos:start="1:42" pos:end="1:50"><type pos:start="1:42" pos:end="1:50"><name pos:start="1:42" pos:end="1:48">float64</name></type> <name pos:start="1:50" pos:end="1:50">a</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:74"><decl pos:start="1:53" pos:end="1:74"><type pos:start="1:53" pos:end="1:74"><name pos:start="1:53" pos:end="1:59">float64</name> <name pos:start="1:61" pos:end="1:61">b</name></type> <name pos:start="1:63" pos:end="1:74">STATUS_PARAM</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="23:5">

    <if_stmt pos:start="5:5" pos:end="23:5"><if pos:start="5:5" pos:end="15:5">if <condition pos:start="5:8" pos:end="9:58">(<expr pos:start="5:9" pos:end="9:57"><call pos:start="5:9" pos:end="5:35"><name pos:start="5:9" pos:end="5:32">float64_is_signaling_nan</name><argument_list pos:start="5:33" pos:end="5:35">(<argument pos:start="5:34" pos:end="5:34"><expr pos:start="5:34" pos:end="5:34"><name pos:start="5:34" pos:end="5:34">a</name></expr></argument>)</argument_list></call> <operator pos:start="5:37" pos:end="5:38">||</operator>

        <call pos:start="7:9" pos:end="7:35"><name pos:start="7:9" pos:end="7:32">float64_is_signaling_nan</name><argument_list pos:start="7:33" pos:end="7:35">(<argument pos:start="7:34" pos:end="7:34"><expr pos:start="7:34" pos:end="7:34"><name pos:start="7:34" pos:end="7:34">b</name></expr></argument>)</argument_list></call> <operator pos:start="7:37" pos:end="7:38">||</operator>

        <operator pos:start="9:9" pos:end="9:9">(</operator><name pos:start="9:10" pos:end="9:12">sig</name> <operator pos:start="9:14" pos:end="9:15">&amp;&amp;</operator> <operator pos:start="9:17" pos:end="9:17">(</operator><call pos:start="9:18" pos:end="9:34"><name pos:start="9:18" pos:end="9:31">float64_is_nan</name><argument_list pos:start="9:32" pos:end="9:34">(<argument pos:start="9:33" pos:end="9:33"><expr pos:start="9:33" pos:end="9:33"><name pos:start="9:33" pos:end="9:33">a</name></expr></argument>)</argument_list></call> <operator pos:start="9:36" pos:end="9:37">||</operator> <call pos:start="9:39" pos:end="9:55"><name pos:start="9:39" pos:end="9:52">float64_is_nan</name><argument_list pos:start="9:53" pos:end="9:55">(<argument pos:start="9:54" pos:end="9:54"><expr pos:start="9:54" pos:end="9:54"><name pos:start="9:54" pos:end="9:54">b</name></expr></argument>)</argument_list></call><operator pos:start="9:56" pos:end="9:56">)</operator><operator pos:start="9:57" pos:end="9:57">)</operator></expr>)</condition> <block pos:start="9:60" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:17">

        <expr_stmt pos:start="11:9" pos:end="11:48"><expr pos:start="11:9" pos:end="11:47"><call pos:start="11:9" pos:end="11:47"><name pos:start="11:9" pos:end="11:19">float_raise</name><argument_list pos:start="11:20" pos:end="11:47">(<argument pos:start="11:21" pos:end="11:38"><expr pos:start="11:21" pos:end="11:38"><name pos:start="11:21" pos:end="11:38">float_flag_invalid</name></expr></argument>, <argument pos:start="11:41" pos:end="11:46"><expr pos:start="11:41" pos:end="11:46"><name pos:start="11:41" pos:end="11:46">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">1</literal></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="15:7" pos:end="19:5">else if <condition pos:start="15:15" pos:end="15:54">(<expr pos:start="15:16" pos:end="15:53"><call pos:start="15:16" pos:end="15:32"><name pos:start="15:16" pos:end="15:29">float64_is_nan</name><argument_list pos:start="15:30" pos:end="15:32">(<argument pos:start="15:31" pos:end="15:31"><expr pos:start="15:31" pos:end="15:31"><name pos:start="15:31" pos:end="15:31">a</name></expr></argument>)</argument_list></call> <operator pos:start="15:34" pos:end="15:35">||</operator> <call pos:start="15:37" pos:end="15:53"><name pos:start="15:37" pos:end="15:50">float64_is_nan</name><argument_list pos:start="15:51" pos:end="15:53">(<argument pos:start="15:52" pos:end="15:52"><expr pos:start="15:52" pos:end="15:52"><name pos:start="15:52" pos:end="15:52">b</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:56" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">1</literal></expr>;</return>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="23:5">else <block pos:start="19:12" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:17">

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
