<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5811.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:20"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:18">GenericList</name> <modifier pos:start="1:20" pos:end="1:20">*</modifier></type><name pos:start="1:21" pos:end="1:40">qmp_output_next_list</name><parameter_list pos:start="1:41" pos:end="3:53">(<parameter pos:start="1:42" pos:end="1:51"><decl pos:start="1:42" pos:end="1:51"><type pos:start="1:42" pos:end="1:51"><name pos:start="1:42" pos:end="1:48">Visitor</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">v</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:72"><decl pos:start="1:54" pos:end="1:72"><type pos:start="1:54" pos:end="1:72"><name pos:start="1:54" pos:end="1:64">GenericList</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier><modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:72">listp</name></decl></parameter>,

                                         <parameter pos:start="3:42" pos:end="3:52"><decl pos:start="3:42" pos:end="3:52"><type pos:start="3:42" pos:end="3:52"><name pos:start="3:42" pos:end="3:47">size_t</name></type> <name pos:start="3:49" pos:end="3:52">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="29:1">{<block_content pos:start="7:5" pos:end="27:36">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">GenericList</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:21">list</name> <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><operator pos:start="7:25" pos:end="7:25">*</operator><name pos:start="7:26" pos:end="7:30">listp</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">QmpOutputVisitor</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:25">qov</name> <init pos:start="9:27" pos:end="9:37">= <expr pos:start="9:29" pos:end="9:37"><call pos:start="9:29" pos:end="9:37"><name pos:start="9:29" pos:end="9:34">to_qov</name><argument_list pos:start="9:35" pos:end="9:37">(<argument pos:start="9:36" pos:end="9:36"><expr pos:start="9:36" pos:end="9:36"><name pos:start="9:36" pos:end="9:36">v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:46"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">QStackEntry</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:18">e</name> <init pos:start="11:20" pos:end="11:46">= <expr pos:start="11:22" pos:end="11:46"><call pos:start="11:22" pos:end="11:46"><name pos:start="11:22" pos:end="11:33">QTAILQ_FIRST</name><argument_list pos:start="11:34" pos:end="11:46">(<argument pos:start="11:35" pos:end="11:45"><expr pos:start="11:35" pos:end="11:45"><operator pos:start="11:35" pos:end="11:35">&amp;</operator><name pos:start="11:36" pos:end="11:45"><name pos:start="11:36" pos:end="11:38">qov</name><operator pos:start="11:39" pos:end="11:40">-&gt;</operator><name pos:start="11:41" pos:end="11:45">stack</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:14"><expr pos:start="15:5" pos:end="15:13"><call pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:13">(<argument pos:start="15:12" pos:end="15:12"><expr pos:start="15:12" pos:end="15:12"><name pos:start="15:12" pos:end="15:12">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:24">(<expr pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:9">e</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:23">is_list_head</name></name></expr>)</condition> <block pos:start="17:26" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:20">

        <expr_stmt pos:start="19:9" pos:end="19:32"><expr pos:start="19:9" pos:end="19:31"><name pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:9">e</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:23">is_list_head</name></name> <operator pos:start="19:25" pos:end="19:25">=</operator> <name pos:start="19:27" pos:end="19:31">false</name></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:20">return <expr pos:start="21:16" pos:end="21:19"><name pos:start="21:16" pos:end="21:19">list</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="27:5" pos:end="27:36">return <expr pos:start="27:12" pos:end="27:35"><ternary pos:start="27:12" pos:end="27:35"><condition pos:start="27:12" pos:end="27:17"><expr pos:start="27:12" pos:end="27:15"><name pos:start="27:12" pos:end="27:15">list</name></expr> ?</condition><then pos:start="27:19" pos:end="27:28"> <expr pos:start="27:19" pos:end="27:28"><name pos:start="27:19" pos:end="27:28"><name pos:start="27:19" pos:end="27:22">list</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:28">next</name></name></expr> </then><else pos:start="27:30" pos:end="27:35">: <expr pos:start="27:32" pos:end="27:35"><name pos:start="27:32" pos:end="27:35">NULL</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
