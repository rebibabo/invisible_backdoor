<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1849.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:30">send_gradient_rect</name><parameter_list pos:start="1:31" pos:end="1:58">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:39">VncState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">vs</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:50"><decl pos:start="1:46" pos:end="1:50"><type pos:start="1:46" pos:end="1:50"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:50">w</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:57"><decl pos:start="1:53" pos:end="1:57"><type pos:start="1:53" pos:end="1:57"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:57">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:24">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">stream</name> <init pos:start="5:16" pos:end="5:18">= <expr pos:start="5:18" pos:end="5:18"><literal type="number" pos:start="5:18" pos:end="5:18">3</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:70"><decl pos:start="7:5" pos:end="7:69"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">level</name> <init pos:start="7:15" pos:end="7:69">= <expr pos:start="7:17" pos:end="7:69"><name pos:start="7:17" pos:end="7:49"><name pos:start="7:17" pos:end="7:26">tight_conf</name><index pos:start="7:27" pos:end="7:49">[<expr pos:start="7:28" pos:end="7:48"><name pos:start="7:28" pos:end="7:48"><name pos:start="7:28" pos:end="7:29">vs</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:48">tight_compression</name></name></expr>]</index></name><operator pos:start="7:50" pos:end="7:50">.</operator><name pos:start="7:51" pos:end="7:69">gradient_zlib_level</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:16">bytes</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:46"><if pos:start="13:5" pos:end="15:46">if <condition pos:start="13:8" pos:end="13:45">(<expr pos:start="13:9" pos:end="13:44"><name pos:start="13:9" pos:end="13:39"><name pos:start="13:9" pos:end="13:10">vs</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:20">clientds</name><operator pos:start="13:21" pos:end="13:21">.</operator><name pos:start="13:22" pos:end="13:23">pf</name><operator pos:start="13:24" pos:end="13:24">.</operator><name pos:start="13:25" pos:end="13:39">bytes_per_pixel</name></name> <operator pos:start="13:41" pos:end="13:42">==</operator> <literal type="number" pos:start="13:44" pos:end="13:44">1</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:46"><block_content pos:start="15:9" pos:end="15:46">

        <return pos:start="15:9" pos:end="15:46">return <expr pos:start="15:16" pos:end="15:45"><call pos:start="15:16" pos:end="15:45"><name pos:start="15:16" pos:end="15:35">send_full_color_rect</name><argument_list pos:start="15:36" pos:end="15:45">(<argument pos:start="15:37" pos:end="15:38"><expr pos:start="15:37" pos:end="15:38"><name pos:start="15:37" pos:end="15:38">vs</name></expr></argument>, <argument pos:start="15:41" pos:end="15:41"><expr pos:start="15:41" pos:end="15:41"><name pos:start="15:41" pos:end="15:41">w</name></expr></argument>, <argument pos:start="15:44" pos:end="15:44"><expr pos:start="15:44" pos:end="15:44"><name pos:start="15:44" pos:end="15:44">h</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:64"><expr pos:start="19:5" pos:end="19:63"><call pos:start="19:5" pos:end="19:63"><name pos:start="19:5" pos:end="19:16">vnc_write_u8</name><argument_list pos:start="19:17" pos:end="19:63">(<argument pos:start="19:18" pos:end="19:19"><expr pos:start="19:18" pos:end="19:19"><name pos:start="19:18" pos:end="19:19">vs</name></expr></argument>, <argument pos:start="19:22" pos:end="19:62"><expr pos:start="19:22" pos:end="19:62"><operator pos:start="19:22" pos:end="19:22">(</operator><name pos:start="19:23" pos:end="19:28">stream</name> <operator pos:start="19:30" pos:end="19:30">|</operator> <name pos:start="19:32" pos:end="19:56">VNC_TIGHT_EXPLICIT_FILTER</name><operator pos:start="19:57" pos:end="19:57">)</operator> <operator pos:start="19:59" pos:end="19:60">&lt;&lt;</operator> <literal type="number" pos:start="19:62" pos:end="19:62">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:48"><expr pos:start="21:5" pos:end="21:47"><call pos:start="21:5" pos:end="21:47"><name pos:start="21:5" pos:end="21:16">vnc_write_u8</name><argument_list pos:start="21:17" pos:end="21:47">(<argument pos:start="21:18" pos:end="21:19"><expr pos:start="21:18" pos:end="21:19"><name pos:start="21:18" pos:end="21:19">vs</name></expr></argument>, <argument pos:start="21:22" pos:end="21:46"><expr pos:start="21:22" pos:end="21:46"><name pos:start="21:22" pos:end="21:46">VNC_TIGHT_FILTER_GRADIENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:62"><expr pos:start="25:5" pos:end="25:61"><call pos:start="25:5" pos:end="25:61"><name pos:start="25:5" pos:end="25:18">buffer_reserve</name><argument_list pos:start="25:19" pos:end="25:61">(<argument pos:start="25:20" pos:end="25:38"><expr pos:start="25:20" pos:end="25:38"><operator pos:start="25:20" pos:end="25:20">&amp;</operator><name pos:start="25:21" pos:end="25:38"><name pos:start="25:21" pos:end="25:22">vs</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:38">tight_gradient</name></name></expr></argument>, <argument pos:start="25:41" pos:end="25:60"><expr pos:start="25:41" pos:end="25:60"><name pos:start="25:41" pos:end="25:41">w</name> <operator pos:start="25:43" pos:end="25:43">*</operator> <literal type="number" pos:start="25:45" pos:end="25:45">3</literal> <operator pos:start="25:47" pos:end="25:47">*</operator> <sizeof pos:start="25:49" pos:end="25:60">sizeof <argument_list pos:start="25:56" pos:end="25:60">(<argument pos:start="25:57" pos:end="25:59"><expr pos:start="25:57" pos:end="25:59"><name pos:start="25:57" pos:end="25:59">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="47:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:26">(<expr pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:10">vs</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:25">tight_pixel24</name></name></expr>)</condition> <block pos:start="29:28" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:18">

        <expr_stmt pos:start="31:9" pos:end="31:60"><expr pos:start="31:9" pos:end="31:59"><call pos:start="31:9" pos:end="31:59"><name pos:start="31:9" pos:end="31:31">tight_filter_gradient24</name><argument_list pos:start="31:32" pos:end="31:59">(<argument pos:start="31:33" pos:end="31:34"><expr pos:start="31:33" pos:end="31:34"><name pos:start="31:33" pos:end="31:34">vs</name></expr></argument>, <argument pos:start="31:37" pos:end="31:52"><expr pos:start="31:37" pos:end="31:52"><name pos:start="31:37" pos:end="31:52"><name pos:start="31:37" pos:end="31:38">vs</name><operator pos:start="31:39" pos:end="31:40">-&gt;</operator><name pos:start="31:41" pos:end="31:45">tight</name><operator pos:start="31:46" pos:end="31:46">.</operator><name pos:start="31:47" pos:end="31:52">buffer</name></name></expr></argument>, <argument pos:start="31:55" pos:end="31:55"><expr pos:start="31:55" pos:end="31:55"><name pos:start="31:55" pos:end="31:55">w</name></expr></argument>, <argument pos:start="31:58" pos:end="31:58"><expr pos:start="31:58" pos:end="31:58"><name pos:start="31:58" pos:end="31:58">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:18"><expr pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:13">bytes</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <literal type="number" pos:start="33:17" pos:end="33:17">3</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="35:7" pos:end="41:5">else if <condition pos:start="35:15" pos:end="35:52">(<expr pos:start="35:16" pos:end="35:51"><name pos:start="35:16" pos:end="35:46"><name pos:start="35:16" pos:end="35:17">vs</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:27">clientds</name><operator pos:start="35:28" pos:end="35:28">.</operator><name pos:start="35:29" pos:end="35:30">pf</name><operator pos:start="35:31" pos:end="35:31">.</operator><name pos:start="35:32" pos:end="35:46">bytes_per_pixel</name></name> <operator pos:start="35:48" pos:end="35:49">==</operator> <literal type="number" pos:start="35:51" pos:end="35:51">4</literal></expr>)</condition> <block pos:start="35:54" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:18">

        <expr_stmt pos:start="37:9" pos:end="37:72"><expr pos:start="37:9" pos:end="37:71"><call pos:start="37:9" pos:end="37:71"><name pos:start="37:9" pos:end="37:31">tight_filter_gradient32</name><argument_list pos:start="37:32" pos:end="37:71">(<argument pos:start="37:33" pos:end="37:34"><expr pos:start="37:33" pos:end="37:34"><name pos:start="37:33" pos:end="37:34">vs</name></expr></argument>, <argument pos:start="37:37" pos:end="37:64"><expr pos:start="37:37" pos:end="37:64"><operator pos:start="37:37" pos:end="37:37">(</operator><name pos:start="37:38" pos:end="37:45">uint32_t</name> <operator pos:start="37:47" pos:end="37:47">*</operator><operator pos:start="37:48" pos:end="37:48">)</operator><name pos:start="37:49" pos:end="37:64"><name pos:start="37:49" pos:end="37:50">vs</name><operator pos:start="37:51" pos:end="37:52">-&gt;</operator><name pos:start="37:53" pos:end="37:57">tight</name><operator pos:start="37:58" pos:end="37:58">.</operator><name pos:start="37:59" pos:end="37:64">buffer</name></name></expr></argument>, <argument pos:start="37:67" pos:end="37:67"><expr pos:start="37:67" pos:end="37:67"><name pos:start="37:67" pos:end="37:67">w</name></expr></argument>, <argument pos:start="37:70" pos:end="37:70"><expr pos:start="37:70" pos:end="37:70"><name pos:start="37:70" pos:end="37:70">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:18"><expr pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:13">bytes</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <literal type="number" pos:start="39:17" pos:end="39:17">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="47:5">else <block pos:start="41:12" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:18">

        <expr_stmt pos:start="43:9" pos:end="43:72"><expr pos:start="43:9" pos:end="43:71"><call pos:start="43:9" pos:end="43:71"><name pos:start="43:9" pos:end="43:31">tight_filter_gradient16</name><argument_list pos:start="43:32" pos:end="43:71">(<argument pos:start="43:33" pos:end="43:34"><expr pos:start="43:33" pos:end="43:34"><name pos:start="43:33" pos:end="43:34">vs</name></expr></argument>, <argument pos:start="43:37" pos:end="43:64"><expr pos:start="43:37" pos:end="43:64"><operator pos:start="43:37" pos:end="43:37">(</operator><name pos:start="43:38" pos:end="43:45">uint16_t</name> <operator pos:start="43:47" pos:end="43:47">*</operator><operator pos:start="43:48" pos:end="43:48">)</operator><name pos:start="43:49" pos:end="43:64"><name pos:start="43:49" pos:end="43:50">vs</name><operator pos:start="43:51" pos:end="43:52">-&gt;</operator><name pos:start="43:53" pos:end="43:57">tight</name><operator pos:start="43:58" pos:end="43:58">.</operator><name pos:start="43:59" pos:end="43:64">buffer</name></name></expr></argument>, <argument pos:start="43:67" pos:end="43:67"><expr pos:start="43:67" pos:end="43:67"><name pos:start="43:67" pos:end="43:67">w</name></expr></argument>, <argument pos:start="43:70" pos:end="43:70"><expr pos:start="43:70" pos:end="43:70"><name pos:start="43:70" pos:end="43:70">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:18"><expr pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:13">bytes</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <literal type="number" pos:start="45:17" pos:end="45:17">2</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:38"><expr pos:start="51:5" pos:end="51:37"><call pos:start="51:5" pos:end="51:37"><name pos:start="51:5" pos:end="51:16">buffer_reset</name><argument_list pos:start="51:17" pos:end="51:37">(<argument pos:start="51:18" pos:end="51:36"><expr pos:start="51:18" pos:end="51:36"><operator pos:start="51:18" pos:end="51:18">&amp;</operator><name pos:start="51:19" pos:end="51:36"><name pos:start="51:19" pos:end="51:20">vs</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:36">tight_gradient</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:26"><expr pos:start="55:5" pos:end="55:25"><name pos:start="55:5" pos:end="55:9">bytes</name> <operator pos:start="55:11" pos:end="55:11">=</operator> <name pos:start="55:13" pos:end="55:13">w</name> <operator pos:start="55:15" pos:end="55:15">*</operator> <name pos:start="55:17" pos:end="55:17">h</name> <operator pos:start="55:19" pos:end="55:19">*</operator> <name pos:start="55:21" pos:end="55:25">bytes</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:29"><expr pos:start="57:5" pos:end="57:28"><name pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:6">vs</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:13">tight</name><operator pos:start="57:14" pos:end="57:14">.</operator><name pos:start="57:15" pos:end="57:20">offset</name></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <name pos:start="57:24" pos:end="57:28">bytes</name></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="63:51"><expr pos:start="61:5" pos:end="63:50"><name pos:start="61:5" pos:end="61:9">bytes</name> <operator pos:start="61:11" pos:end="61:11">=</operator> <call pos:start="61:13" pos:end="63:50"><name pos:start="61:13" pos:end="61:31">tight_compress_data</name><argument_list pos:start="61:32" pos:end="63:50">(<argument pos:start="61:33" pos:end="61:34"><expr pos:start="61:33" pos:end="61:34"><name pos:start="61:33" pos:end="61:34">vs</name></expr></argument>, <argument pos:start="61:37" pos:end="61:42"><expr pos:start="61:37" pos:end="61:42"><name pos:start="61:37" pos:end="61:42">stream</name></expr></argument>, <argument pos:start="61:45" pos:end="61:49"><expr pos:start="61:45" pos:end="61:49"><name pos:start="61:45" pos:end="61:49">bytes</name></expr></argument>,

                                <argument pos:start="63:33" pos:end="63:37"><expr pos:start="63:33" pos:end="63:37"><name pos:start="63:33" pos:end="63:37">level</name></expr></argument>, <argument pos:start="63:40" pos:end="63:49"><expr pos:start="63:40" pos:end="63:49"><name pos:start="63:40" pos:end="63:49">Z_FILTERED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="65:5" pos:end="65:24">return <expr pos:start="65:12" pos:end="65:23"><operator pos:start="65:12" pos:end="65:12">(</operator><name pos:start="65:13" pos:end="65:17">bytes</name> <operator pos:start="65:19" pos:end="65:20">&gt;=</operator> <literal type="number" pos:start="65:22" pos:end="65:22">0</literal><operator pos:start="65:23" pos:end="65:23">)</operator></expr>;</return>

</block_content>}</block></function>
</unit>
