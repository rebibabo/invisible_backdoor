<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7524.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:15">sm501_init</name><parameter_list pos:start="1:16" pos:end="3:77">(<parameter pos:start="1:17" pos:end="1:47"><decl pos:start="1:17" pos:end="1:47"><type pos:start="1:17" pos:end="1:47"><name pos:start="1:17" pos:end="1:28">MemoryRegion</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:47">address_space_mem</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:62"><decl pos:start="1:50" pos:end="1:62"><type pos:start="1:50" pos:end="1:62"><name pos:start="1:50" pos:end="1:57">uint32_t</name></type> <name pos:start="1:59" pos:end="1:62">base</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:40"><decl pos:start="3:17" pos:end="3:40"><type pos:start="3:17" pos:end="3:40"><name pos:start="3:17" pos:end="3:24">uint32_t</name></type> <name pos:start="3:26" pos:end="3:40">local_mem_bytes</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:54"><decl pos:start="3:43" pos:end="3:54"><type pos:start="3:43" pos:end="3:54"><name pos:start="3:43" pos:end="3:50">qemu_irq</name></type> <name pos:start="3:52" pos:end="3:54">irq</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:76"><decl pos:start="3:57" pos:end="3:76"><type pos:start="3:57" pos:end="3:76"><name pos:start="3:57" pos:end="3:71">CharDriverState</name> <modifier pos:start="3:73" pos:end="3:73">*</modifier></type><name pos:start="3:74" pos:end="3:76">chr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="129:1">{<block_content pos:start="7:5" pos:end="127:65">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">SM501State</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type> <name pos:start="7:18" pos:end="7:18">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">DeviceState</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:63"><decl pos:start="11:5" pos:end="11:62"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">MemoryRegion</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:37">sm501_system_config</name> <init pos:start="11:39" pos:end="11:62">= <expr pos:start="11:41" pos:end="11:62"><call pos:start="11:41" pos:end="11:62"><name pos:start="11:41" pos:end="11:45">g_new</name><argument_list pos:start="11:46" pos:end="11:62">(<argument pos:start="11:47" pos:end="11:58"><expr pos:start="11:47" pos:end="11:58"><name pos:start="11:47" pos:end="11:58">MemoryRegion</name></expr></argument>, <argument pos:start="11:61" pos:end="11:61"><expr pos:start="11:61" pos:end="11:61"><literal type="number" pos:start="11:61" pos:end="11:61">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:59"><decl pos:start="13:5" pos:end="13:58"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">MemoryRegion</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:33">sm501_disp_ctrl</name> <init pos:start="13:35" pos:end="13:58">= <expr pos:start="13:37" pos:end="13:58"><call pos:start="13:37" pos:end="13:58"><name pos:start="13:37" pos:end="13:41">g_new</name><argument_list pos:start="13:42" pos:end="13:58">(<argument pos:start="13:43" pos:end="13:54"><expr pos:start="13:43" pos:end="13:54"><name pos:start="13:43" pos:end="13:54">MemoryRegion</name></expr></argument>, <argument pos:start="13:57" pos:end="13:57"><expr pos:start="13:57" pos:end="13:57"><literal type="number" pos:start="13:57" pos:end="13:57">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:59"><decl pos:start="15:5" pos:end="15:58"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16">MemoryRegion</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:33">sm501_2d_engine</name> <init pos:start="15:35" pos:end="15:58">= <expr pos:start="15:37" pos:end="15:58"><call pos:start="15:37" pos:end="15:58"><name pos:start="15:37" pos:end="15:41">g_new</name><argument_list pos:start="15:42" pos:end="15:58">(<argument pos:start="15:43" pos:end="15:54"><expr pos:start="15:43" pos:end="15:54"><name pos:start="15:43" pos:end="15:54">MemoryRegion</name></expr></argument>, <argument pos:start="15:57" pos:end="15:57"><expr pos:start="15:57" pos:end="15:57"><literal type="number" pos:start="15:57" pos:end="15:57">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:41">/* allocate management data region */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:52"><expr pos:start="21:5" pos:end="21:51"><name pos:start="21:5" pos:end="21:5">s</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <operator pos:start="21:9" pos:end="21:9">(</operator><name pos:start="21:10" pos:end="21:19">SM501State</name> <operator pos:start="21:21" pos:end="21:21">*</operator><operator pos:start="21:22" pos:end="21:22">)</operator><call pos:start="21:23" pos:end="21:51"><name pos:start="21:23" pos:end="21:31">g_malloc0</name><argument_list pos:start="21:32" pos:end="21:51">(<argument pos:start="21:33" pos:end="21:50"><expr pos:start="21:33" pos:end="21:50"><sizeof pos:start="21:33" pos:end="21:50">sizeof<argument_list pos:start="21:39" pos:end="21:50">(<argument pos:start="21:40" pos:end="21:49"><expr pos:start="21:40" pos:end="21:49"><name pos:start="21:40" pos:end="21:49">SM501State</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:19"><expr pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:11">base</name></name> <operator pos:start="23:13" pos:end="23:13">=</operator> <name pos:start="23:15" pos:end="23:18">base</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:52"><expr pos:start="25:5" pos:end="27:51"><name pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:27">local_mem_size_index</name></name>

	<operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:51"><name pos:start="27:11" pos:end="27:34">get_local_mem_size_index</name><argument_list pos:start="27:35" pos:end="27:51">(<argument pos:start="27:36" pos:end="27:50"><expr pos:start="27:36" pos:end="27:50"><name pos:start="27:36" pos:end="27:50">local_mem_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="31:43"><expr pos:start="29:5" pos:end="31:42"><call pos:start="29:5" pos:end="31:42"><name pos:start="29:5" pos:end="29:17">SM501_DPRINTF</name><argument_list pos:start="29:18" pos:end="31:42">(<argument pos:start="29:19" pos:end="29:49"><expr pos:start="29:19" pos:end="29:49"><literal type="string" pos:start="29:19" pos:end="29:49">"local mem size=%x. index=%d\n"</literal></expr></argument>, <argument pos:start="29:52" pos:end="29:72"><expr pos:start="29:52" pos:end="29:72"><call pos:start="29:52" pos:end="29:72"><name pos:start="29:52" pos:end="29:69">get_local_mem_size</name><argument_list pos:start="29:70" pos:end="29:72">(<argument pos:start="29:71" pos:end="29:71"><expr pos:start="29:71" pos:end="29:71"><name pos:start="29:71" pos:end="29:71">s</name></expr></argument>)</argument_list></call></expr></argument>,

		  <argument pos:start="31:19" pos:end="31:41"><expr pos:start="31:19" pos:end="31:41"><name pos:start="31:19" pos:end="31:41"><name pos:start="31:19" pos:end="31:19">s</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:41">local_mem_size_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:35"><expr pos:start="33:5" pos:end="33:34"><name pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:21">system_control</name></name> <operator pos:start="33:23" pos:end="33:23">=</operator> <literal type="number" pos:start="33:25" pos:end="33:34">0x00100000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:33"><expr pos:start="35:5" pos:end="35:32"><name pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:19">misc_control</name></name> <operator pos:start="35:21" pos:end="35:21">=</operator> <literal type="number" pos:start="35:23" pos:end="35:32">0x00001000</literal></expr>;</expr_stmt> <comment type="block" pos:start="35:35" pos:end="35:62">/* assumes SH, active=low */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:37"><expr pos:start="37:5" pos:end="37:36"><name pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:23">dc_panel_control</name></name> <operator pos:start="37:25" pos:end="37:25">=</operator> <literal type="number" pos:start="37:27" pos:end="37:36">0x00010000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:35"><expr pos:start="39:5" pos:end="39:34"><name pos:start="39:5" pos:end="39:21"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:21">dc_crt_control</name></name> <operator pos:start="39:23" pos:end="39:23">=</operator> <literal type="number" pos:start="39:25" pos:end="39:34">0x00010000</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:31">/* allocate local memory */</comment>

    <expr_stmt pos:start="45:5" pos:end="47:58"><expr pos:start="45:5" pos:end="47:57"><call pos:start="45:5" pos:end="47:57"><name pos:start="45:5" pos:end="45:26">memory_region_init_ram</name><argument_list pos:start="45:27" pos:end="47:57">(<argument pos:start="45:28" pos:end="45:47"><expr pos:start="45:28" pos:end="45:47"><operator pos:start="45:28" pos:end="45:28">&amp;</operator><name pos:start="45:29" pos:end="45:47"><name pos:start="45:29" pos:end="45:29">s</name><operator pos:start="45:30" pos:end="45:31">-&gt;</operator><name pos:start="45:32" pos:end="45:47">local_mem_region</name></name></expr></argument>, <argument pos:start="45:50" pos:end="45:53"><expr pos:start="45:50" pos:end="45:53"><name pos:start="45:50" pos:end="45:53">NULL</name></expr></argument>, <argument pos:start="45:56" pos:end="45:68"><expr pos:start="45:56" pos:end="45:68"><literal type="string" pos:start="45:56" pos:end="45:68">"sm501.local"</literal></expr></argument>,

                           <argument pos:start="47:28" pos:end="47:42"><expr pos:start="47:28" pos:end="47:42"><name pos:start="47:28" pos:end="47:42">local_mem_bytes</name></expr></argument>, <argument pos:start="47:45" pos:end="47:56"><expr pos:start="47:45" pos:end="47:56"><operator pos:start="47:45" pos:end="47:45">&amp;</operator><name pos:start="47:46" pos:end="47:56">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:54"><expr pos:start="49:5" pos:end="49:53"><call pos:start="49:5" pos:end="49:53"><name pos:start="49:5" pos:end="49:31">vmstate_register_ram_global</name><argument_list pos:start="49:32" pos:end="49:53">(<argument pos:start="49:33" pos:end="49:52"><expr pos:start="49:33" pos:end="49:52"><operator pos:start="49:33" pos:end="49:33">&amp;</operator><name pos:start="49:34" pos:end="49:52"><name pos:start="49:34" pos:end="49:34">s</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:52">local_mem_region</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:72"><expr pos:start="51:5" pos:end="51:71"><call pos:start="51:5" pos:end="51:71"><name pos:start="51:5" pos:end="51:25">memory_region_set_log</name><argument_list pos:start="51:26" pos:end="51:71">(<argument pos:start="51:27" pos:end="51:46"><expr pos:start="51:27" pos:end="51:46"><operator pos:start="51:27" pos:end="51:27">&amp;</operator><name pos:start="51:28" pos:end="51:46"><name pos:start="51:28" pos:end="51:28">s</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:46">local_mem_region</name></name></expr></argument>, <argument pos:start="51:49" pos:end="51:52"><expr pos:start="51:49" pos:end="51:52"><name pos:start="51:49" pos:end="51:52">true</name></expr></argument>, <argument pos:start="51:55" pos:end="51:70"><expr pos:start="51:55" pos:end="51:70"><name pos:start="51:55" pos:end="51:70">DIRTY_MEMORY_VGA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:67"><expr pos:start="53:5" pos:end="53:66"><name pos:start="53:5" pos:end="53:16"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:16">local_mem</name></name> <operator pos:start="53:18" pos:end="53:18">=</operator> <call pos:start="53:20" pos:end="53:66"><name pos:start="53:20" pos:end="53:44">memory_region_get_ram_ptr</name><argument_list pos:start="53:45" pos:end="53:66">(<argument pos:start="53:46" pos:end="53:65"><expr pos:start="53:46" pos:end="53:65"><operator pos:start="53:46" pos:end="53:46">&amp;</operator><name pos:start="53:47" pos:end="53:65"><name pos:start="53:47" pos:end="53:47">s</name><operator pos:start="53:48" pos:end="53:49">-&gt;</operator><name pos:start="53:50" pos:end="53:65">local_mem_region</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:79"><expr pos:start="55:5" pos:end="55:78"><call pos:start="55:5" pos:end="55:78"><name pos:start="55:5" pos:end="55:31">memory_region_add_subregion</name><argument_list pos:start="55:32" pos:end="55:78">(<argument pos:start="55:33" pos:end="55:49"><expr pos:start="55:33" pos:end="55:49"><name pos:start="55:33" pos:end="55:49">address_space_mem</name></expr></argument>, <argument pos:start="55:52" pos:end="55:55"><expr pos:start="55:52" pos:end="55:55"><name pos:start="55:52" pos:end="55:55">base</name></expr></argument>, <argument pos:start="55:58" pos:end="55:77"><expr pos:start="55:58" pos:end="55:77"><operator pos:start="55:58" pos:end="55:58">&amp;</operator><name pos:start="55:59" pos:end="55:77"><name pos:start="55:59" pos:end="55:59">s</name><operator pos:start="55:60" pos:end="55:61">-&gt;</operator><name pos:start="55:62" pos:end="55:77">local_mem_region</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="59:5" pos:end="59:18">/* map mmio */</comment>

    <expr_stmt pos:start="61:5" pos:end="63:55"><expr pos:start="61:5" pos:end="63:54"><call pos:start="61:5" pos:end="63:54"><name pos:start="61:5" pos:end="61:25">memory_region_init_io</name><argument_list pos:start="61:26" pos:end="63:54">(<argument pos:start="61:27" pos:end="61:45"><expr pos:start="61:27" pos:end="61:45"><name pos:start="61:27" pos:end="61:45">sm501_system_config</name></expr></argument>, <argument pos:start="61:48" pos:end="61:51"><expr pos:start="61:48" pos:end="61:51"><name pos:start="61:48" pos:end="61:51">NULL</name></expr></argument>, <argument pos:start="61:54" pos:end="61:77"><expr pos:start="61:54" pos:end="61:77"><operator pos:start="61:54" pos:end="61:54">&amp;</operator><name pos:start="61:55" pos:end="61:77">sm501_system_config_ops</name></expr></argument>, <argument pos:start="61:80" pos:end="61:80"><expr pos:start="61:80" pos:end="61:80"><name pos:start="61:80" pos:end="61:80">s</name></expr></argument>,

                          <argument pos:start="63:27" pos:end="63:47"><expr pos:start="63:27" pos:end="63:47"><literal type="string" pos:start="63:27" pos:end="63:47">"sm501-system-config"</literal></expr></argument>, <argument pos:start="63:50" pos:end="63:53"><expr pos:start="63:50" pos:end="63:53"><literal type="number" pos:start="63:50" pos:end="63:53">0x6c</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="67:53"><expr pos:start="65:5" pos:end="67:52"><call pos:start="65:5" pos:end="67:52"><name pos:start="65:5" pos:end="65:31">memory_region_add_subregion</name><argument_list pos:start="65:32" pos:end="67:52">(<argument pos:start="65:33" pos:end="65:49"><expr pos:start="65:33" pos:end="65:49"><name pos:start="65:33" pos:end="65:49">address_space_mem</name></expr></argument>, <argument pos:start="65:52" pos:end="65:74"><expr pos:start="65:52" pos:end="65:74"><name pos:start="65:52" pos:end="65:55">base</name> <operator pos:start="65:57" pos:end="65:57">+</operator> <name pos:start="65:59" pos:end="65:74">MMIO_BASE_OFFSET</name></expr></argument>,

                                <argument pos:start="67:33" pos:end="67:51"><expr pos:start="67:33" pos:end="67:51"><name pos:start="67:33" pos:end="67:51">sm501_system_config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="71:53"><expr pos:start="69:5" pos:end="71:52"><call pos:start="69:5" pos:end="71:52"><name pos:start="69:5" pos:end="69:25">memory_region_init_io</name><argument_list pos:start="69:26" pos:end="71:52">(<argument pos:start="69:27" pos:end="69:41"><expr pos:start="69:27" pos:end="69:41"><name pos:start="69:27" pos:end="69:41">sm501_disp_ctrl</name></expr></argument>, <argument pos:start="69:44" pos:end="69:47"><expr pos:start="69:44" pos:end="69:47"><name pos:start="69:44" pos:end="69:47">NULL</name></expr></argument>, <argument pos:start="69:50" pos:end="69:69"><expr pos:start="69:50" pos:end="69:69"><operator pos:start="69:50" pos:end="69:50">&amp;</operator><name pos:start="69:51" pos:end="69:69">sm501_disp_ctrl_ops</name></expr></argument>, <argument pos:start="69:72" pos:end="69:72"><expr pos:start="69:72" pos:end="69:72"><name pos:start="69:72" pos:end="69:72">s</name></expr></argument>,

                          <argument pos:start="71:27" pos:end="71:43"><expr pos:start="71:27" pos:end="71:43"><literal type="string" pos:start="71:27" pos:end="71:43">"sm501-disp-ctrl"</literal></expr></argument>, <argument pos:start="71:46" pos:end="71:51"><expr pos:start="71:46" pos:end="71:51"><literal type="number" pos:start="71:46" pos:end="71:51">0x1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="77:49"><expr pos:start="73:5" pos:end="77:48"><call pos:start="73:5" pos:end="77:48"><name pos:start="73:5" pos:end="73:31">memory_region_add_subregion</name><argument_list pos:start="73:32" pos:end="77:48">(<argument pos:start="73:33" pos:end="73:49"><expr pos:start="73:33" pos:end="73:49"><name pos:start="73:33" pos:end="73:49">address_space_mem</name></expr></argument>,

                                <argument pos:start="75:33" pos:end="75:66"><expr pos:start="75:33" pos:end="75:66"><name pos:start="75:33" pos:end="75:36">base</name> <operator pos:start="75:38" pos:end="75:38">+</operator> <name pos:start="75:40" pos:end="75:55">MMIO_BASE_OFFSET</name> <operator pos:start="75:57" pos:end="75:57">+</operator> <name pos:start="75:59" pos:end="75:66">SM501_DC</name></expr></argument>,

                                <argument pos:start="77:33" pos:end="77:47"><expr pos:start="77:33" pos:end="77:47"><name pos:start="77:33" pos:end="77:47">sm501_disp_ctrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="81:51"><expr pos:start="79:5" pos:end="81:50"><call pos:start="79:5" pos:end="81:50"><name pos:start="79:5" pos:end="79:25">memory_region_init_io</name><argument_list pos:start="79:26" pos:end="81:50">(<argument pos:start="79:27" pos:end="79:41"><expr pos:start="79:27" pos:end="79:41"><name pos:start="79:27" pos:end="79:41">sm501_2d_engine</name></expr></argument>, <argument pos:start="79:44" pos:end="79:47"><expr pos:start="79:44" pos:end="79:47"><name pos:start="79:44" pos:end="79:47">NULL</name></expr></argument>, <argument pos:start="79:50" pos:end="79:69"><expr pos:start="79:50" pos:end="79:69"><operator pos:start="79:50" pos:end="79:50">&amp;</operator><name pos:start="79:51" pos:end="79:69">sm501_2d_engine_ops</name></expr></argument>, <argument pos:start="79:72" pos:end="79:72"><expr pos:start="79:72" pos:end="79:72"><name pos:start="79:72" pos:end="79:72">s</name></expr></argument>,

                          <argument pos:start="81:27" pos:end="81:43"><expr pos:start="81:27" pos:end="81:43"><literal type="string" pos:start="81:27" pos:end="81:43">"sm501-2d-engine"</literal></expr></argument>, <argument pos:start="81:46" pos:end="81:49"><expr pos:start="81:46" pos:end="81:49"><literal type="number" pos:start="81:46" pos:end="81:49">0x54</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="87:49"><expr pos:start="83:5" pos:end="87:48"><call pos:start="83:5" pos:end="87:48"><name pos:start="83:5" pos:end="83:31">memory_region_add_subregion</name><argument_list pos:start="83:32" pos:end="87:48">(<argument pos:start="83:33" pos:end="83:49"><expr pos:start="83:33" pos:end="83:49"><name pos:start="83:33" pos:end="83:49">address_space_mem</name></expr></argument>,

                                <argument pos:start="85:33" pos:end="85:73"><expr pos:start="85:33" pos:end="85:73"><name pos:start="85:33" pos:end="85:36">base</name> <operator pos:start="85:38" pos:end="85:38">+</operator> <name pos:start="85:40" pos:end="85:55">MMIO_BASE_OFFSET</name> <operator pos:start="85:57" pos:end="85:57">+</operator> <name pos:start="85:59" pos:end="85:73">SM501_2D_ENGINE</name></expr></argument>,

                                <argument pos:start="87:33" pos:end="87:47"><expr pos:start="87:33" pos:end="87:47"><name pos:start="87:33" pos:end="87:47">sm501_2d_engine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="91:5" pos:end="91:45">/* bridge to usb host emulation module */</comment>

    <expr_stmt pos:start="93:5" pos:end="93:43"><expr pos:start="93:5" pos:end="93:42"><name pos:start="93:5" pos:end="93:7">dev</name> <operator pos:start="93:9" pos:end="93:9">=</operator> <call pos:start="93:11" pos:end="93:42"><name pos:start="93:11" pos:end="93:21">qdev_create</name><argument_list pos:start="93:22" pos:end="93:42">(<argument pos:start="93:23" pos:end="93:26"><expr pos:start="93:23" pos:end="93:26"><name pos:start="93:23" pos:end="93:26">NULL</name></expr></argument>, <argument pos:start="93:29" pos:end="93:41"><expr pos:start="93:29" pos:end="93:41"><literal type="string" pos:start="93:29" pos:end="93:41">"sysbus-ohci"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:46"><expr pos:start="95:5" pos:end="95:45"><call pos:start="95:5" pos:end="95:45"><name pos:start="95:5" pos:end="95:24">qdev_prop_set_uint32</name><argument_list pos:start="95:25" pos:end="95:45">(<argument pos:start="95:26" pos:end="95:28"><expr pos:start="95:26" pos:end="95:28"><name pos:start="95:26" pos:end="95:28">dev</name></expr></argument>, <argument pos:start="95:31" pos:end="95:41"><expr pos:start="95:31" pos:end="95:41"><literal type="string" pos:start="95:31" pos:end="95:41">"num-ports"</literal></expr></argument>, <argument pos:start="95:44" pos:end="95:44"><expr pos:start="95:44" pos:end="95:44"><literal type="number" pos:start="95:44" pos:end="95:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:50"><expr pos:start="97:5" pos:end="97:49"><call pos:start="97:5" pos:end="97:49"><name pos:start="97:5" pos:end="97:24">qdev_prop_set_uint64</name><argument_list pos:start="97:25" pos:end="97:49">(<argument pos:start="97:26" pos:end="97:28"><expr pos:start="97:26" pos:end="97:28"><name pos:start="97:26" pos:end="97:28">dev</name></expr></argument>, <argument pos:start="97:31" pos:end="97:42"><expr pos:start="97:31" pos:end="97:42"><literal type="string" pos:start="97:31" pos:end="97:42">"dma-offset"</literal></expr></argument>, <argument pos:start="97:45" pos:end="97:48"><expr pos:start="97:45" pos:end="97:48"><name pos:start="97:45" pos:end="97:48">base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:26"><expr pos:start="99:5" pos:end="99:25"><call pos:start="99:5" pos:end="99:25"><name pos:start="99:5" pos:end="99:20">qdev_init_nofail</name><argument_list pos:start="99:21" pos:end="99:25">(<argument pos:start="99:22" pos:end="99:24"><expr pos:start="99:22" pos:end="99:24"><name pos:start="99:22" pos:end="99:24">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="103:62"><expr pos:start="101:5" pos:end="103:61"><call pos:start="101:5" pos:end="103:61"><name pos:start="101:5" pos:end="101:19">sysbus_mmio_map</name><argument_list pos:start="101:20" pos:end="103:61">(<argument pos:start="101:21" pos:end="101:39"><expr pos:start="101:21" pos:end="101:39"><call pos:start="101:21" pos:end="101:39"><name pos:start="101:21" pos:end="101:34">SYS_BUS_DEVICE</name><argument_list pos:start="101:35" pos:end="101:39">(<argument pos:start="101:36" pos:end="101:38"><expr pos:start="101:36" pos:end="101:38"><name pos:start="101:36" pos:end="101:38">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="101:42" pos:end="101:42"><expr pos:start="101:42" pos:end="101:42"><literal type="number" pos:start="101:42" pos:end="101:42">0</literal></expr></argument>,

                    <argument pos:start="103:21" pos:end="103:60"><expr pos:start="103:21" pos:end="103:60"><name pos:start="103:21" pos:end="103:24">base</name> <operator pos:start="103:26" pos:end="103:26">+</operator> <name pos:start="103:28" pos:end="103:43">MMIO_BASE_OFFSET</name> <operator pos:start="103:45" pos:end="103:45">+</operator> <name pos:start="103:47" pos:end="103:60">SM501_USB_HOST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:52"><expr pos:start="105:5" pos:end="105:51"><call pos:start="105:5" pos:end="105:51"><name pos:start="105:5" pos:end="105:22">sysbus_connect_irq</name><argument_list pos:start="105:23" pos:end="105:51">(<argument pos:start="105:24" pos:end="105:42"><expr pos:start="105:24" pos:end="105:42"><call pos:start="105:24" pos:end="105:42"><name pos:start="105:24" pos:end="105:37">SYS_BUS_DEVICE</name><argument_list pos:start="105:38" pos:end="105:42">(<argument pos:start="105:39" pos:end="105:41"><expr pos:start="105:39" pos:end="105:41"><name pos:start="105:39" pos:end="105:41">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="105:45" pos:end="105:45"><expr pos:start="105:45" pos:end="105:45"><literal type="number" pos:start="105:45" pos:end="105:45">0</literal></expr></argument>, <argument pos:start="105:48" pos:end="105:50"><expr pos:start="105:48" pos:end="105:50"><name pos:start="105:48" pos:end="105:50">irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="109:5" pos:end="109:43">/* bridge to serial emulation module */</comment>

    <if_stmt pos:start="111:5" pos:end="121:5"><if pos:start="111:5" pos:end="121:5">if <condition pos:start="111:8" pos:end="111:12">(<expr pos:start="111:9" pos:end="111:11"><name pos:start="111:9" pos:end="111:11">chr</name></expr>)</condition> <block pos:start="111:14" pos:end="121:5">{<block_content pos:start="113:9" pos:end="119:58">

        <expr_stmt pos:start="113:9" pos:end="119:58"><expr pos:start="113:9" pos:end="119:57"><call pos:start="113:9" pos:end="119:57"><name pos:start="113:9" pos:end="113:22">serial_mm_init</name><argument_list pos:start="113:23" pos:end="119:57">(<argument pos:start="113:24" pos:end="113:40"><expr pos:start="113:24" pos:end="113:40"><name pos:start="113:24" pos:end="113:40">address_space_mem</name></expr></argument>,

                       <argument pos:start="115:24" pos:end="115:60"><expr pos:start="115:24" pos:end="115:60"><name pos:start="115:24" pos:end="115:27">base</name> <operator pos:start="115:29" pos:end="115:29">+</operator> <name pos:start="115:31" pos:end="115:46">MMIO_BASE_OFFSET</name> <operator pos:start="115:48" pos:end="115:48">+</operator> <name pos:start="115:50" pos:end="115:60">SM501_UART0</name></expr></argument>, <argument pos:start="115:63" pos:end="115:63"><expr pos:start="115:63" pos:end="115:63"><literal type="number" pos:start="115:63" pos:end="115:63">2</literal></expr></argument>,

                       <argument pos:start="117:24" pos:end="117:27"><expr pos:start="117:24" pos:end="117:27"><name pos:start="117:24" pos:end="117:27">NULL</name></expr></argument>, <comment type="block" pos:start="117:30" pos:end="117:58">/* TODO : chain irq to IRL */</comment>

                       <argument pos:start="119:24" pos:end="119:29"><expr pos:start="119:24" pos:end="119:29"><literal type="number" pos:start="119:24" pos:end="119:29">115200</literal></expr></argument>, <argument pos:start="119:32" pos:end="119:34"><expr pos:start="119:32" pos:end="119:34"><name pos:start="119:32" pos:end="119:34">chr</name></expr></argument>, <argument pos:start="119:37" pos:end="119:56"><expr pos:start="119:37" pos:end="119:56"><name pos:start="119:37" pos:end="119:56">DEVICE_NATIVE_ENDIAN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="125:5" pos:end="125:37">/* create qemu graphic console */</comment>

    <expr_stmt pos:start="127:5" pos:end="127:65"><expr pos:start="127:5" pos:end="127:64"><name pos:start="127:5" pos:end="127:10"><name pos:start="127:5" pos:end="127:5">s</name><operator pos:start="127:6" pos:end="127:7">-&gt;</operator><name pos:start="127:8" pos:end="127:10">con</name></name> <operator pos:start="127:12" pos:end="127:12">=</operator> <call pos:start="127:14" pos:end="127:64"><name pos:start="127:14" pos:end="127:33">graphic_console_init</name><argument_list pos:start="127:34" pos:end="127:64">(<argument pos:start="127:35" pos:end="127:45"><expr pos:start="127:35" pos:end="127:45"><call pos:start="127:35" pos:end="127:45"><name pos:start="127:35" pos:end="127:40">DEVICE</name><argument_list pos:start="127:41" pos:end="127:45">(<argument pos:start="127:42" pos:end="127:44"><expr pos:start="127:42" pos:end="127:44"><name pos:start="127:42" pos:end="127:44">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="127:48" pos:end="127:48"><expr pos:start="127:48" pos:end="127:48"><literal type="number" pos:start="127:48" pos:end="127:48">0</literal></expr></argument>, <argument pos:start="127:51" pos:end="127:60"><expr pos:start="127:51" pos:end="127:60"><operator pos:start="127:51" pos:end="127:51">&amp;</operator><name pos:start="127:52" pos:end="127:60">sm501_ops</name></expr></argument>, <argument pos:start="127:63" pos:end="127:63"><expr pos:start="127:63" pos:end="127:63"><name pos:start="127:63" pos:end="127:63">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
