<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8792.c" pos:tabs="8"><function pos:start="1:1" pos:end="747:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">ff_mpeg4_encode_mb</name><parameter_list pos:start="1:24" pos:end="3:51">(<parameter pos:start="1:25" pos:end="1:41"><decl pos:start="1:25" pos:end="1:41"><type pos:start="1:25" pos:end="1:41"><name pos:start="1:25" pos:end="1:38">MpegEncContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:63"><decl pos:start="1:44" pos:end="1:63"><type pos:start="1:44" pos:end="1:56"><name pos:start="1:44" pos:end="1:50">int16_t</name></type> <name pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:56">block</name><index pos:start="1:57" pos:end="1:59">[<expr pos:start="1:58" pos:end="1:58"><literal type="number" pos:start="1:58" pos:end="1:58">6</literal></expr>]</index><index pos:start="1:60" pos:end="1:63">[<expr pos:start="1:61" pos:end="1:62"><literal type="number" pos:start="1:61" pos:end="1:62">64</literal></expr>]</index></name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:36"><decl pos:start="3:25" pos:end="3:36"><type pos:start="3:25" pos:end="3:36"><name pos:start="3:25" pos:end="3:27">int</name></type> <name pos:start="3:29" pos:end="3:36">motion_x</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:50"><decl pos:start="3:39" pos:end="3:50"><type pos:start="3:39" pos:end="3:50"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:50">motion_y</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="747:1">{<block_content pos:start="7:5" pos:end="745:5">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">cbpc</name></decl>, <decl pos:start="7:15" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:18">cbpy</name></decl>, <decl pos:start="7:21" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:26">pred_x</name></decl>, <decl pos:start="7:29" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:29" pos:end="7:34">pred_y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:74"><decl pos:start="9:5" pos:end="9:73"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:17">PutBitContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier><specifier pos:start="9:20" pos:end="9:24">const</specifier></type> <name pos:start="9:26" pos:end="9:28">pb2</name>    <init pos:start="9:33" pos:end="9:73">= <expr pos:start="9:35" pos:end="9:73"><ternary pos:start="9:35" pos:end="9:73"><condition pos:start="9:35" pos:end="9:56"><expr pos:start="9:35" pos:end="9:54"><name pos:start="9:35" pos:end="9:54"><name pos:start="9:35" pos:end="9:35">s</name><operator pos:start="9:36" pos:end="9:37">-&gt;</operator><name pos:start="9:38" pos:end="9:54">data_partitioning</name></name></expr> ?</condition><then pos:start="9:58" pos:end="9:64"> <expr pos:start="9:58" pos:end="9:64"><operator pos:start="9:58" pos:end="9:58">&amp;</operator><name pos:start="9:59" pos:end="9:64"><name pos:start="9:59" pos:end="9:59">s</name><operator pos:start="9:60" pos:end="9:61">-&gt;</operator><name pos:start="9:62" pos:end="9:64">pb2</name></name></expr> </then><else pos:start="9:66" pos:end="9:73">: <expr pos:start="9:68" pos:end="9:73"><operator pos:start="9:68" pos:end="9:68">&amp;</operator><name pos:start="9:69" pos:end="9:73"><name pos:start="9:69" pos:end="9:69">s</name><operator pos:start="9:70" pos:end="9:71">-&gt;</operator><name pos:start="9:72" pos:end="9:73">pb</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:114"><decl pos:start="11:5" pos:end="11:113"><type pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:17">PutBitContext</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier><specifier pos:start="11:20" pos:end="11:24">const</specifier></type> <name pos:start="11:26" pos:end="11:31">tex_pb</name> <init pos:start="11:33" pos:end="11:113">= <expr pos:start="11:35" pos:end="11:113"><ternary pos:start="11:35" pos:end="11:113"><condition pos:start="11:35" pos:end="11:93"><expr pos:start="11:35" pos:end="11:91"><name pos:start="11:35" pos:end="11:54"><name pos:start="11:35" pos:end="11:35">s</name><operator pos:start="11:36" pos:end="11:37">-&gt;</operator><name pos:start="11:38" pos:end="11:54">data_partitioning</name></name> <operator pos:start="11:56" pos:end="11:57">&amp;&amp;</operator> <name pos:start="11:59" pos:end="11:70"><name pos:start="11:59" pos:end="11:59">s</name><operator pos:start="11:60" pos:end="11:61">-&gt;</operator><name pos:start="11:62" pos:end="11:70">pict_type</name></name> <operator pos:start="11:72" pos:end="11:73">!=</operator> <name pos:start="11:75" pos:end="11:91">AV_PICTURE_TYPE_B</name></expr> ?</condition><then pos:start="11:95" pos:end="11:104"> <expr pos:start="11:95" pos:end="11:104"><operator pos:start="11:95" pos:end="11:95">&amp;</operator><name pos:start="11:96" pos:end="11:104"><name pos:start="11:96" pos:end="11:96">s</name><operator pos:start="11:97" pos:end="11:98">-&gt;</operator><name pos:start="11:99" pos:end="11:104">tex_pb</name></name></expr> </then><else pos:start="11:106" pos:end="11:113">: <expr pos:start="11:108" pos:end="11:113"><operator pos:start="11:108" pos:end="11:108">&amp;</operator><name pos:start="11:109" pos:end="11:113"><name pos:start="11:109" pos:end="11:109">s</name><operator pos:start="11:110" pos:end="11:111">-&gt;</operator><name pos:start="11:112" pos:end="11:113">pb</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:111"><decl pos:start="13:5" pos:end="13:110"><type pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:17">PutBitContext</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier><specifier pos:start="13:20" pos:end="13:24">const</specifier></type> <name pos:start="13:26" pos:end="13:30">dc_pb</name>  <init pos:start="13:33" pos:end="13:110">= <expr pos:start="13:35" pos:end="13:110"><ternary pos:start="13:35" pos:end="13:110"><condition pos:start="13:35" pos:end="13:93"><expr pos:start="13:35" pos:end="13:91"><name pos:start="13:35" pos:end="13:54"><name pos:start="13:35" pos:end="13:35">s</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:54">data_partitioning</name></name> <operator pos:start="13:56" pos:end="13:57">&amp;&amp;</operator> <name pos:start="13:59" pos:end="13:70"><name pos:start="13:59" pos:end="13:59">s</name><operator pos:start="13:60" pos:end="13:61">-&gt;</operator><name pos:start="13:62" pos:end="13:70">pict_type</name></name> <operator pos:start="13:72" pos:end="13:73">!=</operator> <name pos:start="13:75" pos:end="13:91">AV_PICTURE_TYPE_I</name></expr> ?</condition><then pos:start="13:95" pos:end="13:101"> <expr pos:start="13:95" pos:end="13:101"><operator pos:start="13:95" pos:end="13:95">&amp;</operator><name pos:start="13:96" pos:end="13:101"><name pos:start="13:96" pos:end="13:96">s</name><operator pos:start="13:97" pos:end="13:98">-&gt;</operator><name pos:start="13:99" pos:end="13:101">pb2</name></name></expr> </then><else pos:start="13:103" pos:end="13:110">: <expr pos:start="13:105" pos:end="13:110"><operator pos:start="13:105" pos:end="13:105">&amp;</operator><name pos:start="13:106" pos:end="13:110"><name pos:start="13:106" pos:end="13:106">s</name><operator pos:start="13:107" pos:end="13:108">-&gt;</operator><name pos:start="13:109" pos:end="13:110">pb</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:97"><decl pos:start="15:5" pos:end="15:96"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:31">interleaved_stats</name> <init pos:start="15:33" pos:end="15:96">= <expr pos:start="15:35" pos:end="15:96"><ternary pos:start="15:35" pos:end="15:96"><condition pos:start="15:35" pos:end="15:90"><expr pos:start="15:35" pos:end="15:88"><operator pos:start="15:35" pos:end="15:35">(</operator><name pos:start="15:36" pos:end="15:43"><name pos:start="15:36" pos:end="15:36">s</name><operator pos:start="15:37" pos:end="15:38">-&gt;</operator><name pos:start="15:39" pos:end="15:43">flags</name></name> <operator pos:start="15:45" pos:end="15:45">&amp;</operator> <name pos:start="15:47" pos:end="15:62">CODEC_FLAG_PASS1</name><operator pos:start="15:63" pos:end="15:63">)</operator> <operator pos:start="15:65" pos:end="15:66">&amp;&amp;</operator> <operator pos:start="15:68" pos:end="15:68">!</operator><name pos:start="15:69" pos:end="15:88"><name pos:start="15:69" pos:end="15:69">s</name><operator pos:start="15:70" pos:end="15:71">-&gt;</operator><name pos:start="15:72" pos:end="15:88">data_partitioning</name></name></expr> ?</condition><then pos:start="15:92" pos:end="15:92"> <expr pos:start="15:92" pos:end="15:92"><literal type="number" pos:start="15:92" pos:end="15:92">1</literal></expr> </then><else pos:start="15:94" pos:end="15:96">: <expr pos:start="15:96" pos:end="15:96"><literal type="number" pos:start="15:96" pos:end="15:96">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="745:5"><if pos:start="19:5" pos:end="623:5">if <condition pos:start="19:8" pos:end="19:21">(<expr pos:start="19:9" pos:end="19:20"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:20"><name pos:start="19:10" pos:end="19:10">s</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:20">mb_intra</name></name></expr>)</condition> <block pos:start="19:23" pos:end="623:5">{<block_content pos:start="21:9" pos:end="621:9">

        <decl_stmt pos:start="21:9" pos:end="21:19"><decl pos:start="21:9" pos:end="21:13"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:13">i</name></decl>, <decl pos:start="21:16" pos:end="21:18"><type ref="prev" pos:start="21:9" pos:end="21:11"/><name pos:start="21:16" pos:end="21:18">cbp</name></decl>;</decl_stmt>



        <if_stmt pos:start="25:9" pos:end="621:9"><if pos:start="25:9" pos:end="309:9">if <condition pos:start="25:12" pos:end="25:46">(<expr pos:start="25:13" pos:end="25:45"><name pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:24">pict_type</name></name> <operator pos:start="25:26" pos:end="25:27">==</operator> <name pos:start="25:29" pos:end="25:45">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="25:48" pos:end="309:9">{<block_content pos:start="29:13" pos:end="307:50">

            <comment type="block" pos:start="27:13" pos:end="27:45">/* convert from mv_dir to type */</comment>

            <decl_stmt pos:start="29:13" pos:end="29:79"><decl pos:start="29:13" pos:end="29:78"><type pos:start="29:13" pos:end="29:28"><specifier pos:start="29:13" pos:end="29:18">static</specifier> <specifier pos:start="29:20" pos:end="29:24">const</specifier> <name pos:start="29:26" pos:end="29:28">int</name></type> <name pos:start="29:30" pos:end="29:45"><name pos:start="29:30" pos:end="29:42">mb_type_table</name><index pos:start="29:43" pos:end="29:45">[<expr pos:start="29:44" pos:end="29:44"><literal type="number" pos:start="29:44" pos:end="29:44">8</literal></expr>]</index></name> <init pos:start="29:47" pos:end="29:78">= <expr pos:start="29:49" pos:end="29:78"><block pos:start="29:49" pos:end="29:78">{ <expr pos:start="29:51" pos:end="29:52"><operator pos:start="29:51" pos:end="29:51">-</operator><literal type="number" pos:start="29:52" pos:end="29:52">1</literal></expr>, <expr pos:start="29:55" pos:end="29:55"><literal type="number" pos:start="29:55" pos:end="29:55">3</literal></expr>, <expr pos:start="29:58" pos:end="29:58"><literal type="number" pos:start="29:58" pos:end="29:58">2</literal></expr>, <expr pos:start="29:61" pos:end="29:61"><literal type="number" pos:start="29:61" pos:end="29:61">1</literal></expr>, <expr pos:start="29:64" pos:end="29:65"><operator pos:start="29:64" pos:end="29:64">-</operator><literal type="number" pos:start="29:65" pos:end="29:65">1</literal></expr>, <expr pos:start="29:68" pos:end="29:69"><operator pos:start="29:68" pos:end="29:68">-</operator><literal type="number" pos:start="29:69" pos:end="29:69">1</literal></expr>, <expr pos:start="29:72" pos:end="29:73"><operator pos:start="29:72" pos:end="29:72">-</operator><literal type="number" pos:start="29:73" pos:end="29:73">1</literal></expr>, <expr pos:start="29:76" pos:end="29:76"><literal type="number" pos:start="29:76" pos:end="29:76">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="31:13" pos:end="31:51"><decl pos:start="31:13" pos:end="31:50"><type pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:15">int</name></type> <name pos:start="31:17" pos:end="31:23">mb_type</name> <init pos:start="31:25" pos:end="31:50">= <expr pos:start="31:27" pos:end="31:50"><name pos:start="31:27" pos:end="31:50"><name pos:start="31:27" pos:end="31:39">mb_type_table</name><index pos:start="31:40" pos:end="31:50">[<expr pos:start="31:41" pos:end="31:49"><name pos:start="31:41" pos:end="31:49"><name pos:start="31:41" pos:end="31:41">s</name><operator pos:start="31:42" pos:end="31:43">-&gt;</operator><name pos:start="31:44" pos:end="31:49">mv_dir</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="35:13" pos:end="47:13"><if pos:start="35:13" pos:end="47:13">if <condition pos:start="35:16" pos:end="35:29">(<expr pos:start="35:17" pos:end="35:28"><name pos:start="35:17" pos:end="35:23"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:23">mb_x</name></name> <operator pos:start="35:25" pos:end="35:26">==</operator> <literal type="number" pos:start="35:28" pos:end="35:28">0</literal></expr>)</condition> <block pos:start="35:31" pos:end="47:13">{<block_content pos:start="37:17" pos:end="45:44">

                <for pos:start="37:17" pos:end="45:44">for <control pos:start="37:21" pos:end="37:39">(<init pos:start="37:22" pos:end="37:27"><expr pos:start="37:22" pos:end="37:26"><name pos:start="37:22" pos:end="37:22">i</name> <operator pos:start="37:24" pos:end="37:24">=</operator> <literal type="number" pos:start="37:26" pos:end="37:26">0</literal></expr>;</init> <condition pos:start="37:29" pos:end="37:34"><expr pos:start="37:29" pos:end="37:33"><name pos:start="37:29" pos:end="37:29">i</name> <operator pos:start="37:31" pos:end="37:31">&lt;</operator> <literal type="number" pos:start="37:33" pos:end="37:33">2</literal></expr>;</condition> <incr pos:start="37:36" pos:end="37:38"><expr pos:start="37:36" pos:end="37:38"><name pos:start="37:36" pos:end="37:36">i</name><operator pos:start="37:37" pos:end="37:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="39:21" pos:end="45:44"><block_content pos:start="39:21" pos:end="45:44">

                    <expr_stmt pos:start="39:21" pos:end="45:44"><expr pos:start="39:21" pos:end="45:43"><name pos:start="39:21" pos:end="39:39"><name pos:start="39:21" pos:end="39:21">s</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:30">last_mv</name><index pos:start="39:31" pos:end="39:33">[<expr pos:start="39:32" pos:end="39:32"><name pos:start="39:32" pos:end="39:32">i</name></expr>]</index><index pos:start="39:34" pos:end="39:36">[<expr pos:start="39:35" pos:end="39:35"><literal type="number" pos:start="39:35" pos:end="39:35">0</literal></expr>]</index><index pos:start="39:37" pos:end="39:39">[<expr pos:start="39:38" pos:end="39:38"><literal type="number" pos:start="39:38" pos:end="39:38">0</literal></expr>]</index></name> <operator pos:start="39:41" pos:end="39:41">=</operator>

                    <name pos:start="41:21" pos:end="41:39"><name pos:start="41:21" pos:end="41:21">s</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:30">last_mv</name><index pos:start="41:31" pos:end="41:33">[<expr pos:start="41:32" pos:end="41:32"><name pos:start="41:32" pos:end="41:32">i</name></expr>]</index><index pos:start="41:34" pos:end="41:36">[<expr pos:start="41:35" pos:end="41:35"><literal type="number" pos:start="41:35" pos:end="41:35">0</literal></expr>]</index><index pos:start="41:37" pos:end="41:39">[<expr pos:start="41:38" pos:end="41:38"><literal type="number" pos:start="41:38" pos:end="41:38">1</literal></expr>]</index></name> <operator pos:start="41:41" pos:end="41:41">=</operator>

                    <name pos:start="43:21" pos:end="43:39"><name pos:start="43:21" pos:end="43:21">s</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:30">last_mv</name><index pos:start="43:31" pos:end="43:33">[<expr pos:start="43:32" pos:end="43:32"><name pos:start="43:32" pos:end="43:32">i</name></expr>]</index><index pos:start="43:34" pos:end="43:36">[<expr pos:start="43:35" pos:end="43:35"><literal type="number" pos:start="43:35" pos:end="43:35">1</literal></expr>]</index><index pos:start="43:37" pos:end="43:39">[<expr pos:start="43:38" pos:end="43:38"><literal type="number" pos:start="43:38" pos:end="43:38">0</literal></expr>]</index></name> <operator pos:start="43:41" pos:end="43:41">=</operator>

                    <name pos:start="45:21" pos:end="45:39"><name pos:start="45:21" pos:end="45:21">s</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:30">last_mv</name><index pos:start="45:31" pos:end="45:33">[<expr pos:start="45:32" pos:end="45:32"><name pos:start="45:32" pos:end="45:32">i</name></expr>]</index><index pos:start="45:34" pos:end="45:36">[<expr pos:start="45:35" pos:end="45:35"><literal type="number" pos:start="45:35" pos:end="45:35">1</literal></expr>]</index><index pos:start="45:37" pos:end="45:39">[<expr pos:start="45:38" pos:end="45:38"><literal type="number" pos:start="45:38" pos:end="45:38">1</literal></expr>]</index></name> <operator pos:start="45:41" pos:end="45:41">=</operator> <literal type="number" pos:start="45:43" pos:end="45:43">0</literal></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="51:13" pos:end="51:54"><expr pos:start="51:13" pos:end="51:53"><call pos:start="51:13" pos:end="51:53"><name pos:start="51:13" pos:end="51:18">assert</name><argument_list pos:start="51:19" pos:end="51:53">(<argument pos:start="51:20" pos:end="51:52"><expr pos:start="51:20" pos:end="51:52"><name pos:start="51:20" pos:end="51:28"><name pos:start="51:20" pos:end="51:20">s</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:28">dquant</name></name> <operator pos:start="51:30" pos:end="51:31">&gt;=</operator> <operator pos:start="51:33" pos:end="51:33">-</operator><literal type="number" pos:start="51:34" pos:end="51:34">2</literal> <operator pos:start="51:36" pos:end="51:37">&amp;&amp;</operator> <name pos:start="51:39" pos:end="51:47"><name pos:start="51:39" pos:end="51:39">s</name><operator pos:start="51:40" pos:end="51:41">-&gt;</operator><name pos:start="51:42" pos:end="51:47">dquant</name></name> <operator pos:start="51:49" pos:end="51:50">&lt;=</operator> <literal type="number" pos:start="51:52" pos:end="51:52">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:41"><expr pos:start="53:13" pos:end="53:40"><call pos:start="53:13" pos:end="53:40"><name pos:start="53:13" pos:end="53:18">assert</name><argument_list pos:start="53:19" pos:end="53:40">(<argument pos:start="53:20" pos:end="53:39"><expr pos:start="53:20" pos:end="53:39"><operator pos:start="53:20" pos:end="53:20">(</operator><name pos:start="53:21" pos:end="53:29"><name pos:start="53:21" pos:end="53:21">s</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:29">dquant</name></name> <operator pos:start="53:31" pos:end="53:31">&amp;</operator> <literal type="number" pos:start="53:33" pos:end="53:33">1</literal><operator pos:start="53:34" pos:end="53:34">)</operator> <operator pos:start="53:36" pos:end="53:37">==</operator> <literal type="number" pos:start="53:39" pos:end="53:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:33"><expr pos:start="55:13" pos:end="55:32"><call pos:start="55:13" pos:end="55:32"><name pos:start="55:13" pos:end="55:18">assert</name><argument_list pos:start="55:19" pos:end="55:32">(<argument pos:start="55:20" pos:end="55:31"><expr pos:start="55:20" pos:end="55:31"><name pos:start="55:20" pos:end="55:26">mb_type</name> <operator pos:start="55:28" pos:end="55:29">&gt;=</operator> <literal type="number" pos:start="55:31" pos:end="55:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="59:13" pos:end="59:74">/* nothing to do if this MB was skipped in the next P Frame */</comment>

            <if_stmt pos:start="61:13" pos:end="83:13"><if pos:start="61:13" pos:end="83:13">if <condition pos:start="61:16" pos:end="61:79">(<expr pos:start="61:17" pos:end="61:78"><name pos:start="61:17" pos:end="61:78"><name pos:start="61:17" pos:end="61:17">s</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:31">next_picture</name><operator pos:start="61:32" pos:end="61:32">.</operator><name pos:start="61:33" pos:end="61:44">mbskip_table</name><index pos:start="61:45" pos:end="61:78">[<expr pos:start="61:46" pos:end="61:77"><name pos:start="61:46" pos:end="61:52"><name pos:start="61:46" pos:end="61:46">s</name><operator pos:start="61:47" pos:end="61:48">-&gt;</operator><name pos:start="61:49" pos:end="61:52">mb_y</name></name> <operator pos:start="61:54" pos:end="61:54">*</operator> <name pos:start="61:56" pos:end="61:67"><name pos:start="61:56" pos:end="61:56">s</name><operator pos:start="61:57" pos:end="61:58">-&gt;</operator><name pos:start="61:59" pos:end="61:67">mb_stride</name></name> <operator pos:start="61:69" pos:end="61:69">+</operator> <name pos:start="61:71" pos:end="61:77"><name pos:start="61:71" pos:end="61:71">s</name><operator pos:start="61:72" pos:end="61:73">-&gt;</operator><name pos:start="61:74" pos:end="61:77">mb_x</name></name></expr>]</index></name></expr>)</condition> <block pos:start="61:81" pos:end="83:13">{<block_content pos:start="63:17" pos:end="81:23">  <comment type="line" pos:start="61:84" pos:end="61:107">// FIXME avoid DCT &amp; ...</comment>

                <expr_stmt pos:start="63:17" pos:end="63:32"><expr pos:start="63:17" pos:end="63:31"><name pos:start="63:17" pos:end="63:29"><name pos:start="63:17" pos:end="63:17">s</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:29">skip_count</name></name><operator pos:start="63:30" pos:end="63:31">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="71:35"><expr pos:start="65:17" pos:end="71:34"><name pos:start="65:17" pos:end="65:30"><name pos:start="65:17" pos:end="65:17">s</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:21">mv</name><index pos:start="65:22" pos:end="65:24">[<expr pos:start="65:23" pos:end="65:23"><literal type="number" pos:start="65:23" pos:end="65:23">0</literal></expr>]</index><index pos:start="65:25" pos:end="65:27">[<expr pos:start="65:26" pos:end="65:26"><literal type="number" pos:start="65:26" pos:end="65:26">0</literal></expr>]</index><index pos:start="65:28" pos:end="65:30">[<expr pos:start="65:29" pos:end="65:29"><literal type="number" pos:start="65:29" pos:end="65:29">0</literal></expr>]</index></name> <operator pos:start="65:32" pos:end="65:32">=</operator>

                <name pos:start="67:17" pos:end="67:30"><name pos:start="67:17" pos:end="67:17">s</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:21">mv</name><index pos:start="67:22" pos:end="67:24">[<expr pos:start="67:23" pos:end="67:23"><literal type="number" pos:start="67:23" pos:end="67:23">0</literal></expr>]</index><index pos:start="67:25" pos:end="67:27">[<expr pos:start="67:26" pos:end="67:26"><literal type="number" pos:start="67:26" pos:end="67:26">0</literal></expr>]</index><index pos:start="67:28" pos:end="67:30">[<expr pos:start="67:29" pos:end="67:29"><literal type="number" pos:start="67:29" pos:end="67:29">1</literal></expr>]</index></name> <operator pos:start="67:32" pos:end="67:32">=</operator>

                <name pos:start="69:17" pos:end="69:30"><name pos:start="69:17" pos:end="69:17">s</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:21">mv</name><index pos:start="69:22" pos:end="69:24">[<expr pos:start="69:23" pos:end="69:23"><literal type="number" pos:start="69:23" pos:end="69:23">1</literal></expr>]</index><index pos:start="69:25" pos:end="69:27">[<expr pos:start="69:26" pos:end="69:26"><literal type="number" pos:start="69:26" pos:end="69:26">0</literal></expr>]</index><index pos:start="69:28" pos:end="69:30">[<expr pos:start="69:29" pos:end="69:29"><literal type="number" pos:start="69:29" pos:end="69:29">0</literal></expr>]</index></name> <operator pos:start="69:32" pos:end="69:32">=</operator>

                <name pos:start="71:17" pos:end="71:30"><name pos:start="71:17" pos:end="71:17">s</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:21">mv</name><index pos:start="71:22" pos:end="71:24">[<expr pos:start="71:23" pos:end="71:23"><literal type="number" pos:start="71:23" pos:end="71:23">1</literal></expr>]</index><index pos:start="71:25" pos:end="71:27">[<expr pos:start="71:26" pos:end="71:26"><literal type="number" pos:start="71:26" pos:end="71:26">0</literal></expr>]</index><index pos:start="71:28" pos:end="71:30">[<expr pos:start="71:29" pos:end="71:29"><literal type="number" pos:start="71:29" pos:end="71:29">1</literal></expr>]</index></name> <operator pos:start="71:32" pos:end="71:32">=</operator> <literal type="number" pos:start="71:34" pos:end="71:34">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:44"><expr pos:start="73:17" pos:end="73:43"><name pos:start="73:17" pos:end="73:25"><name pos:start="73:17" pos:end="73:17">s</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:25">mv_dir</name></name>  <operator pos:start="73:28" pos:end="73:28">=</operator> <name pos:start="73:30" pos:end="73:43">MV_DIR_FORWARD</name></expr>;</expr_stmt>  <comment type="line" pos:start="73:47" pos:end="73:63">// doesn't matter</comment>

                <expr_stmt pos:start="75:17" pos:end="75:39"><expr pos:start="75:17" pos:end="75:38"><name pos:start="75:17" pos:end="75:25"><name pos:start="75:17" pos:end="75:17">s</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:25">qscale</name></name> <operator pos:start="75:27" pos:end="75:28">-=</operator> <name pos:start="75:30" pos:end="75:38"><name pos:start="75:30" pos:end="75:30">s</name><operator pos:start="75:31" pos:end="75:32">-&gt;</operator><name pos:start="75:33" pos:end="75:38">dquant</name></name></expr>;</expr_stmt>

<comment type="line" pos:start="77:1" pos:end="77:36">//                s-&gt;mb_skipped = 1;</comment>



                <return pos:start="81:17" pos:end="81:23">return;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="87:13" pos:end="87:67"><expr pos:start="87:13" pos:end="87:66"><name pos:start="87:13" pos:end="87:15">cbp</name> <operator pos:start="87:17" pos:end="87:17">=</operator> <call pos:start="87:19" pos:end="87:66"><name pos:start="87:19" pos:end="87:27">get_b_cbp</name><argument_list pos:start="87:28" pos:end="87:66">(<argument pos:start="87:29" pos:end="87:29"><expr pos:start="87:29" pos:end="87:29"><name pos:start="87:29" pos:end="87:29">s</name></expr></argument>, <argument pos:start="87:32" pos:end="87:36"><expr pos:start="87:32" pos:end="87:36"><name pos:start="87:32" pos:end="87:36">block</name></expr></argument>, <argument pos:start="87:39" pos:end="87:46"><expr pos:start="87:39" pos:end="87:46"><name pos:start="87:39" pos:end="87:46">motion_x</name></expr></argument>, <argument pos:start="87:49" pos:end="87:56"><expr pos:start="87:49" pos:end="87:56"><name pos:start="87:49" pos:end="87:56">motion_y</name></expr></argument>, <argument pos:start="87:59" pos:end="87:65"><expr pos:start="87:59" pos:end="87:65"><name pos:start="87:59" pos:end="87:65">mb_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="91:13" pos:end="115:13"><if pos:start="91:13" pos:end="115:13">if <condition pos:start="91:16" pos:end="91:59">(<expr pos:start="91:17" pos:end="91:58"><operator pos:start="91:17" pos:end="91:17">(</operator><name pos:start="91:18" pos:end="91:20">cbp</name> <operator pos:start="91:22" pos:end="91:22">|</operator> <name pos:start="91:24" pos:end="91:31">motion_x</name> <operator pos:start="91:33" pos:end="91:33">|</operator> <name pos:start="91:35" pos:end="91:42">motion_y</name> <operator pos:start="91:44" pos:end="91:44">|</operator> <name pos:start="91:46" pos:end="91:52">mb_type</name><operator pos:start="91:53" pos:end="91:53">)</operator> <operator pos:start="91:55" pos:end="91:56">==</operator> <literal type="number" pos:start="91:58" pos:end="91:58">0</literal></expr>)</condition> <block pos:start="91:61" pos:end="115:13">{<block_content pos:start="95:17" pos:end="113:23">

                <comment type="block" pos:start="93:17" pos:end="93:45">/* direct MB with MV={0,0} */</comment>

                <expr_stmt pos:start="95:17" pos:end="95:39"><expr pos:start="95:17" pos:end="95:38"><call pos:start="95:17" pos:end="95:38"><name pos:start="95:17" pos:end="95:22">assert</name><argument_list pos:start="95:23" pos:end="95:38">(<argument pos:start="95:24" pos:end="95:37"><expr pos:start="95:24" pos:end="95:37"><name pos:start="95:24" pos:end="95:32"><name pos:start="95:24" pos:end="95:24">s</name><operator pos:start="95:25" pos:end="95:26">-&gt;</operator><name pos:start="95:27" pos:end="95:32">dquant</name></name> <operator pos:start="95:34" pos:end="95:35">==</operator> <literal type="number" pos:start="95:37" pos:end="95:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="99:17" pos:end="99:39"><expr pos:start="99:17" pos:end="99:38"><call pos:start="99:17" pos:end="99:38"><name pos:start="99:17" pos:end="99:24">put_bits</name><argument_list pos:start="99:25" pos:end="99:38">(<argument pos:start="99:26" pos:end="99:31"><expr pos:start="99:26" pos:end="99:31"><operator pos:start="99:26" pos:end="99:26">&amp;</operator><name pos:start="99:27" pos:end="99:31"><name pos:start="99:27" pos:end="99:27">s</name><operator pos:start="99:28" pos:end="99:29">-&gt;</operator><name pos:start="99:30" pos:end="99:31">pb</name></name></expr></argument>, <argument pos:start="99:34" pos:end="99:34"><expr pos:start="99:34" pos:end="99:34"><literal type="number" pos:start="99:34" pos:end="99:34">1</literal></expr></argument>, <argument pos:start="99:37" pos:end="99:37"><expr pos:start="99:37" pos:end="99:37"><literal type="number" pos:start="99:37" pos:end="99:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="99:41" pos:end="99:66">/* mb not coded modb1=1 */</comment>



                <if_stmt pos:start="103:17" pos:end="109:17"><if pos:start="103:17" pos:end="109:17">if <condition pos:start="103:20" pos:end="103:38">(<expr pos:start="103:21" pos:end="103:37"><name pos:start="103:21" pos:end="103:37">interleaved_stats</name></expr>)</condition> <block pos:start="103:40" pos:end="109:17">{<block_content pos:start="105:21" pos:end="107:35">

                    <expr_stmt pos:start="105:21" pos:end="105:35"><expr pos:start="105:21" pos:end="105:34"><name pos:start="105:21" pos:end="105:32"><name pos:start="105:21" pos:end="105:21">s</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:32">misc_bits</name></name><operator pos:start="105:33" pos:end="105:34">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="107:21" pos:end="107:35"><expr pos:start="107:21" pos:end="107:34"><name pos:start="107:21" pos:end="107:32"><name pos:start="107:21" pos:end="107:21">s</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:32">last_bits</name></name><operator pos:start="107:33" pos:end="107:34">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:32"><expr pos:start="111:17" pos:end="111:31"><name pos:start="111:17" pos:end="111:29"><name pos:start="111:17" pos:end="111:17">s</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:29">skip_count</name></name><operator pos:start="111:30" pos:end="111:31">++</operator></expr>;</expr_stmt>

                <return pos:start="113:17" pos:end="113:23">return;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="119:13" pos:end="119:35"><expr pos:start="119:13" pos:end="119:34"><call pos:start="119:13" pos:end="119:34"><name pos:start="119:13" pos:end="119:20">put_bits</name><argument_list pos:start="119:21" pos:end="119:34">(<argument pos:start="119:22" pos:end="119:27"><expr pos:start="119:22" pos:end="119:27"><operator pos:start="119:22" pos:end="119:22">&amp;</operator><name pos:start="119:23" pos:end="119:27"><name pos:start="119:23" pos:end="119:23">s</name><operator pos:start="119:24" pos:end="119:25">-&gt;</operator><name pos:start="119:26" pos:end="119:27">pb</name></name></expr></argument>, <argument pos:start="119:30" pos:end="119:30"><expr pos:start="119:30" pos:end="119:30"><literal type="number" pos:start="119:30" pos:end="119:30">1</literal></expr></argument>, <argument pos:start="119:33" pos:end="119:33"><expr pos:start="119:33" pos:end="119:33"><literal type="number" pos:start="119:33" pos:end="119:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>            <comment type="block" pos:start="119:48" pos:end="119:69">/* mb coded modb1=0 */</comment>

            <expr_stmt pos:start="121:13" pos:end="121:45"><expr pos:start="121:13" pos:end="121:44"><call pos:start="121:13" pos:end="121:44"><name pos:start="121:13" pos:end="121:20">put_bits</name><argument_list pos:start="121:21" pos:end="121:44">(<argument pos:start="121:22" pos:end="121:27"><expr pos:start="121:22" pos:end="121:27"><operator pos:start="121:22" pos:end="121:22">&amp;</operator><name pos:start="121:23" pos:end="121:27"><name pos:start="121:23" pos:end="121:23">s</name><operator pos:start="121:24" pos:end="121:25">-&gt;</operator><name pos:start="121:26" pos:end="121:27">pb</name></name></expr></argument>, <argument pos:start="121:30" pos:end="121:30"><expr pos:start="121:30" pos:end="121:30"><literal type="number" pos:start="121:30" pos:end="121:30">1</literal></expr></argument>, <argument pos:start="121:33" pos:end="121:43"><expr pos:start="121:33" pos:end="121:43"><ternary pos:start="121:33" pos:end="121:43"><condition pos:start="121:33" pos:end="121:37"><expr pos:start="121:33" pos:end="121:35"><name pos:start="121:33" pos:end="121:35">cbp</name></expr> ?</condition><then pos:start="121:39" pos:end="121:39"> <expr pos:start="121:39" pos:end="121:39"><literal type="number" pos:start="121:39" pos:end="121:39">0</literal></expr> </then><else pos:start="121:41" pos:end="121:43">: <expr pos:start="121:43" pos:end="121:43"><literal type="number" pos:start="121:43" pos:end="121:43">1</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="121:48" pos:end="121:58">/* modb2 */</comment> <comment type="line" pos:start="121:60" pos:end="121:73">// FIXME merge</comment>

            <expr_stmt pos:start="123:13" pos:end="123:45"><expr pos:start="123:13" pos:end="123:44"><call pos:start="123:13" pos:end="123:44"><name pos:start="123:13" pos:end="123:20">put_bits</name><argument_list pos:start="123:21" pos:end="123:44">(<argument pos:start="123:22" pos:end="123:27"><expr pos:start="123:22" pos:end="123:27"><operator pos:start="123:22" pos:end="123:22">&amp;</operator><name pos:start="123:23" pos:end="123:27"><name pos:start="123:23" pos:end="123:23">s</name><operator pos:start="123:24" pos:end="123:25">-&gt;</operator><name pos:start="123:26" pos:end="123:27">pb</name></name></expr></argument>, <argument pos:start="123:30" pos:end="123:40"><expr pos:start="123:30" pos:end="123:40"><name pos:start="123:30" pos:end="123:36">mb_type</name> <operator pos:start="123:38" pos:end="123:38">+</operator> <literal type="number" pos:start="123:40" pos:end="123:40">1</literal></expr></argument>, <argument pos:start="123:43" pos:end="123:43"><expr pos:start="123:43" pos:end="123:43"><literal type="number" pos:start="123:43" pos:end="123:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="123:48" pos:end="123:98">// this table is so simple that we don't need it :)</comment>

            <if_stmt pos:start="125:13" pos:end="127:41"><if pos:start="125:13" pos:end="127:41">if <condition pos:start="125:16" pos:end="125:20">(<expr pos:start="125:17" pos:end="125:19"><name pos:start="125:17" pos:end="125:19">cbp</name></expr>)</condition><block type="pseudo" pos:start="127:17" pos:end="127:41"><block_content pos:start="127:17" pos:end="127:41">

                <expr_stmt pos:start="127:17" pos:end="127:41"><expr pos:start="127:17" pos:end="127:40"><call pos:start="127:17" pos:end="127:40"><name pos:start="127:17" pos:end="127:24">put_bits</name><argument_list pos:start="127:25" pos:end="127:40">(<argument pos:start="127:26" pos:end="127:31"><expr pos:start="127:26" pos:end="127:31"><operator pos:start="127:26" pos:end="127:26">&amp;</operator><name pos:start="127:27" pos:end="127:31"><name pos:start="127:27" pos:end="127:27">s</name><operator pos:start="127:28" pos:end="127:29">-&gt;</operator><name pos:start="127:30" pos:end="127:31">pb</name></name></expr></argument>, <argument pos:start="127:34" pos:end="127:34"><expr pos:start="127:34" pos:end="127:34"><literal type="number" pos:start="127:34" pos:end="127:34">6</literal></expr></argument>, <argument pos:start="127:37" pos:end="127:39"><expr pos:start="127:37" pos:end="127:39"><name pos:start="127:37" pos:end="127:39">cbp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="131:13" pos:end="143:39"><if pos:start="131:13" pos:end="141:13">if <condition pos:start="131:16" pos:end="131:31">(<expr pos:start="131:17" pos:end="131:30"><name pos:start="131:17" pos:end="131:19">cbp</name> <operator pos:start="131:21" pos:end="131:22">&amp;&amp;</operator> <name pos:start="131:24" pos:end="131:30">mb_type</name></expr>)</condition> <block pos:start="131:33" pos:end="141:13">{<block_content pos:start="133:17" pos:end="139:43">

                <if_stmt pos:start="133:17" pos:end="139:43"><if pos:start="133:17" pos:end="135:62">if <condition pos:start="133:20" pos:end="133:30">(<expr pos:start="133:21" pos:end="133:29"><name pos:start="133:21" pos:end="133:29"><name pos:start="133:21" pos:end="133:21">s</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:29">dquant</name></name></expr>)</condition><block type="pseudo" pos:start="135:21" pos:end="135:62"><block_content pos:start="135:21" pos:end="135:62">

                    <expr_stmt pos:start="135:21" pos:end="135:62"><expr pos:start="135:21" pos:end="135:61"><call pos:start="135:21" pos:end="135:61"><name pos:start="135:21" pos:end="135:28">put_bits</name><argument_list pos:start="135:29" pos:end="135:61">(<argument pos:start="135:30" pos:end="135:35"><expr pos:start="135:30" pos:end="135:35"><operator pos:start="135:30" pos:end="135:30">&amp;</operator><name pos:start="135:31" pos:end="135:35"><name pos:start="135:31" pos:end="135:31">s</name><operator pos:start="135:32" pos:end="135:33">-&gt;</operator><name pos:start="135:34" pos:end="135:35">pb</name></name></expr></argument>, <argument pos:start="135:38" pos:end="135:38"><expr pos:start="135:38" pos:end="135:38"><literal type="number" pos:start="135:38" pos:end="135:38">2</literal></expr></argument>, <argument pos:start="135:41" pos:end="135:60"><expr pos:start="135:41" pos:end="135:60"><operator pos:start="135:41" pos:end="135:41">(</operator><name pos:start="135:42" pos:end="135:50"><name pos:start="135:42" pos:end="135:42">s</name><operator pos:start="135:43" pos:end="135:44">-&gt;</operator><name pos:start="135:45" pos:end="135:50">dquant</name></name> <operator pos:start="135:52" pos:end="135:53">&gt;&gt;</operator> <literal type="number" pos:start="135:55" pos:end="135:55">2</literal><operator pos:start="135:56" pos:end="135:56">)</operator> <operator pos:start="135:58" pos:end="135:58">+</operator> <literal type="number" pos:start="135:60" pos:end="135:60">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="137:17" pos:end="139:43">else<block type="pseudo" pos:start="139:21" pos:end="139:43"><block_content pos:start="139:21" pos:end="139:43">

                    <expr_stmt pos:start="139:21" pos:end="139:43"><expr pos:start="139:21" pos:end="139:42"><call pos:start="139:21" pos:end="139:42"><name pos:start="139:21" pos:end="139:28">put_bits</name><argument_list pos:start="139:29" pos:end="139:42">(<argument pos:start="139:30" pos:end="139:35"><expr pos:start="139:30" pos:end="139:35"><operator pos:start="139:30" pos:end="139:30">&amp;</operator><name pos:start="139:31" pos:end="139:35"><name pos:start="139:31" pos:end="139:31">s</name><operator pos:start="139:32" pos:end="139:33">-&gt;</operator><name pos:start="139:34" pos:end="139:35">pb</name></name></expr></argument>, <argument pos:start="139:38" pos:end="139:38"><expr pos:start="139:38" pos:end="139:38"><literal type="number" pos:start="139:38" pos:end="139:38">1</literal></expr></argument>, <argument pos:start="139:41" pos:end="139:41"><expr pos:start="139:41" pos:end="139:41"><literal type="number" pos:start="139:41" pos:end="139:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="141:15" pos:end="143:39">else<block type="pseudo" pos:start="143:17" pos:end="143:39"><block_content pos:start="143:17" pos:end="143:39">

                <expr_stmt pos:start="143:17" pos:end="143:39"><expr pos:start="143:17" pos:end="143:38"><name pos:start="143:17" pos:end="143:25"><name pos:start="143:17" pos:end="143:17">s</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:25">qscale</name></name> <operator pos:start="143:27" pos:end="143:28">-=</operator> <name pos:start="143:30" pos:end="143:38"><name pos:start="143:30" pos:end="143:30">s</name><operator pos:start="143:31" pos:end="143:32">-&gt;</operator><name pos:start="143:33" pos:end="143:38">dquant</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <if_stmt pos:start="147:13" pos:end="157:13"><if pos:start="147:13" pos:end="157:13">if <condition pos:start="147:16" pos:end="147:41">(<expr pos:start="147:17" pos:end="147:40"><operator pos:start="147:17" pos:end="147:17">!</operator><name pos:start="147:18" pos:end="147:40"><name pos:start="147:18" pos:end="147:18">s</name><operator pos:start="147:19" pos:end="147:20">-&gt;</operator><name pos:start="147:21" pos:end="147:40">progressive_sequence</name></name></expr>)</condition> <block pos:start="147:43" pos:end="157:13">{<block_content pos:start="149:17" pos:end="155:69">

                <if_stmt pos:start="149:17" pos:end="151:59"><if pos:start="149:17" pos:end="151:59">if <condition pos:start="149:20" pos:end="149:24">(<expr pos:start="149:21" pos:end="149:23"><name pos:start="149:21" pos:end="149:23">cbp</name></expr>)</condition><block type="pseudo" pos:start="151:21" pos:end="151:59"><block_content pos:start="151:21" pos:end="151:59">

                    <expr_stmt pos:start="151:21" pos:end="151:59"><expr pos:start="151:21" pos:end="151:58"><call pos:start="151:21" pos:end="151:58"><name pos:start="151:21" pos:end="151:28">put_bits</name><argument_list pos:start="151:29" pos:end="151:58">(<argument pos:start="151:30" pos:end="151:35"><expr pos:start="151:30" pos:end="151:35"><operator pos:start="151:30" pos:end="151:30">&amp;</operator><name pos:start="151:31" pos:end="151:35"><name pos:start="151:31" pos:end="151:31">s</name><operator pos:start="151:32" pos:end="151:33">-&gt;</operator><name pos:start="151:34" pos:end="151:35">pb</name></name></expr></argument>, <argument pos:start="151:38" pos:end="151:38"><expr pos:start="151:38" pos:end="151:38"><literal type="number" pos:start="151:38" pos:end="151:38">1</literal></expr></argument>, <argument pos:start="151:41" pos:end="151:57"><expr pos:start="151:41" pos:end="151:57"><name pos:start="151:41" pos:end="151:57"><name pos:start="151:41" pos:end="151:41">s</name><operator pos:start="151:42" pos:end="151:43">-&gt;</operator><name pos:start="151:44" pos:end="151:57">interlaced_dct</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="153:17" pos:end="155:69"><if pos:start="153:17" pos:end="155:69">if <condition pos:start="153:20" pos:end="153:28">(<expr pos:start="153:21" pos:end="153:27"><name pos:start="153:21" pos:end="153:27">mb_type</name></expr>)</condition><block type="pseudo" pos:start="155:21" pos:end="155:69"><block_content pos:start="155:21" pos:end="155:69">                  <comment type="line" pos:start="153:47" pos:end="153:64">// not direct mode</comment>

                    <expr_stmt pos:start="155:21" pos:end="155:69"><expr pos:start="155:21" pos:end="155:68"><call pos:start="155:21" pos:end="155:68"><name pos:start="155:21" pos:end="155:28">put_bits</name><argument_list pos:start="155:29" pos:end="155:68">(<argument pos:start="155:30" pos:end="155:35"><expr pos:start="155:30" pos:end="155:35"><operator pos:start="155:30" pos:end="155:30">&amp;</operator><name pos:start="155:31" pos:end="155:35"><name pos:start="155:31" pos:end="155:31">s</name><operator pos:start="155:32" pos:end="155:33">-&gt;</operator><name pos:start="155:34" pos:end="155:35">pb</name></name></expr></argument>, <argument pos:start="155:38" pos:end="155:38"><expr pos:start="155:38" pos:end="155:38"><literal type="number" pos:start="155:38" pos:end="155:38">1</literal></expr></argument>, <argument pos:start="155:41" pos:end="155:67"><expr pos:start="155:41" pos:end="155:67"><name pos:start="155:41" pos:end="155:50"><name pos:start="155:41" pos:end="155:41">s</name><operator pos:start="155:42" pos:end="155:43">-&gt;</operator><name pos:start="155:44" pos:end="155:50">mv_type</name></name> <operator pos:start="155:52" pos:end="155:53">==</operator> <name pos:start="155:55" pos:end="155:67">MV_TYPE_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="161:13" pos:end="163:49"><if pos:start="161:13" pos:end="163:49">if <condition pos:start="161:16" pos:end="161:34">(<expr pos:start="161:17" pos:end="161:33"><name pos:start="161:17" pos:end="161:33">interleaved_stats</name></expr>)</condition><block type="pseudo" pos:start="163:17" pos:end="163:49"><block_content pos:start="163:17" pos:end="163:49">

                <expr_stmt pos:start="163:17" pos:end="163:49"><expr pos:start="163:17" pos:end="163:48"><name pos:start="163:17" pos:end="163:28"><name pos:start="163:17" pos:end="163:17">s</name><operator pos:start="163:18" pos:end="163:19">-&gt;</operator><name pos:start="163:20" pos:end="163:28">misc_bits</name></name> <operator pos:start="163:30" pos:end="163:31">+=</operator> <call pos:start="163:33" pos:end="163:48"><name pos:start="163:33" pos:end="163:45">get_bits_diff</name><argument_list pos:start="163:46" pos:end="163:48">(<argument pos:start="163:47" pos:end="163:47"><expr pos:start="163:47" pos:end="163:47"><name pos:start="163:47" pos:end="163:47">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="167:13" pos:end="291:13"><if pos:start="167:13" pos:end="177:13">if <condition pos:start="167:16" pos:end="167:25">(<expr pos:start="167:17" pos:end="167:24"><operator pos:start="167:17" pos:end="167:17">!</operator><name pos:start="167:18" pos:end="167:24">mb_type</name></expr>)</condition> <block pos:start="167:27" pos:end="177:13">{<block_content pos:start="169:17" pos:end="175:29">

                <expr_stmt pos:start="169:17" pos:end="169:46"><expr pos:start="169:17" pos:end="169:45"><call pos:start="169:17" pos:end="169:45"><name pos:start="169:17" pos:end="169:22">assert</name><argument_list pos:start="169:23" pos:end="169:45">(<argument pos:start="169:24" pos:end="169:44"><expr pos:start="169:24" pos:end="169:44"><name pos:start="169:24" pos:end="169:32"><name pos:start="169:24" pos:end="169:24">s</name><operator pos:start="169:25" pos:end="169:26">-&gt;</operator><name pos:start="169:27" pos:end="169:32">mv_dir</name></name> <operator pos:start="169:34" pos:end="169:34">&amp;</operator> <name pos:start="169:36" pos:end="169:44">MV_DIRECT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:71"><expr pos:start="171:17" pos:end="171:70"><call pos:start="171:17" pos:end="171:70"><name pos:start="171:17" pos:end="171:44">ff_h263_encode_motion_vector</name><argument_list pos:start="171:45" pos:end="171:70">(<argument pos:start="171:46" pos:end="171:46"><expr pos:start="171:46" pos:end="171:46"><name pos:start="171:46" pos:end="171:46">s</name></expr></argument>, <argument pos:start="171:49" pos:end="171:56"><expr pos:start="171:49" pos:end="171:56"><name pos:start="171:49" pos:end="171:56">motion_x</name></expr></argument>, <argument pos:start="171:59" pos:end="171:66"><expr pos:start="171:59" pos:end="171:66"><name pos:start="171:59" pos:end="171:66">motion_y</name></expr></argument>, <argument pos:start="171:69" pos:end="171:69"><expr pos:start="171:69" pos:end="171:69"><literal type="number" pos:start="171:69" pos:end="171:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:29"><expr pos:start="173:17" pos:end="173:28"><name pos:start="173:17" pos:end="173:26"><name pos:start="173:17" pos:end="173:17">s</name><operator pos:start="173:18" pos:end="173:19">-&gt;</operator><name pos:start="173:20" pos:end="173:26">b_count</name></name><operator pos:start="173:27" pos:end="173:28">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:29"><expr pos:start="175:17" pos:end="175:28"><name pos:start="175:17" pos:end="175:26"><name pos:start="175:17" pos:end="175:17">s</name><operator pos:start="175:18" pos:end="175:19">-&gt;</operator><name pos:start="175:20" pos:end="175:26">f_count</name></name><operator pos:start="175:27" pos:end="175:28">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="177:15" pos:end="291:13">else <block pos:start="177:20" pos:end="291:13">{<block_content pos:start="179:17" pos:end="289:17">

                <expr_stmt pos:start="179:17" pos:end="179:51"><expr pos:start="179:17" pos:end="179:50"><call pos:start="179:17" pos:end="179:50"><name pos:start="179:17" pos:end="179:22">assert</name><argument_list pos:start="179:23" pos:end="179:50">(<argument pos:start="179:24" pos:end="179:49"><expr pos:start="179:24" pos:end="179:49"><name pos:start="179:24" pos:end="179:30">mb_type</name> <operator pos:start="179:32" pos:end="179:32">&gt;</operator> <literal type="number" pos:start="179:34" pos:end="179:34">0</literal> <operator pos:start="179:36" pos:end="179:37">&amp;&amp;</operator> <name pos:start="179:39" pos:end="179:45">mb_type</name> <operator pos:start="179:47" pos:end="179:47">&lt;</operator> <literal type="number" pos:start="179:49" pos:end="179:49">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="181:17" pos:end="289:17"><if pos:start="181:17" pos:end="227:17">if <condition pos:start="181:20" pos:end="181:48">(<expr pos:start="181:21" pos:end="181:47"><name pos:start="181:21" pos:end="181:30"><name pos:start="181:21" pos:end="181:21">s</name><operator pos:start="181:22" pos:end="181:23">-&gt;</operator><name pos:start="181:24" pos:end="181:30">mv_type</name></name> <operator pos:start="181:32" pos:end="181:33">!=</operator> <name pos:start="181:35" pos:end="181:47">MV_TYPE_FIELD</name></expr>)</condition> <block pos:start="181:50" pos:end="227:17">{<block_content pos:start="183:21" pos:end="225:21">

                    <if_stmt pos:start="183:21" pos:end="203:21"><if pos:start="183:21" pos:end="203:21">if <condition pos:start="183:24" pos:end="183:51">(<expr pos:start="183:25" pos:end="183:50"><name pos:start="183:25" pos:end="183:33"><name pos:start="183:25" pos:end="183:25">s</name><operator pos:start="183:26" pos:end="183:27">-&gt;</operator><name pos:start="183:28" pos:end="183:33">mv_dir</name></name> <operator pos:start="183:35" pos:end="183:35">&amp;</operator> <name pos:start="183:37" pos:end="183:50">MV_DIR_FORWARD</name></expr>)</condition> <block pos:start="183:53" pos:end="203:21">{<block_content pos:start="185:25" pos:end="201:37">

                        <expr_stmt pos:start="185:25" pos:end="191:64"><expr pos:start="185:25" pos:end="191:63"><call pos:start="185:25" pos:end="191:63"><name pos:start="185:25" pos:end="185:52">ff_h263_encode_motion_vector</name><argument_list pos:start="185:53" pos:end="191:63">(<argument pos:start="185:54" pos:end="185:54"><expr pos:start="185:54" pos:end="185:54"><name pos:start="185:54" pos:end="185:54">s</name></expr></argument>,

                                                     <argument pos:start="187:54" pos:end="187:89"><expr pos:start="187:54" pos:end="187:89"><name pos:start="187:54" pos:end="187:67"><name pos:start="187:54" pos:end="187:54">s</name><operator pos:start="187:55" pos:end="187:56">-&gt;</operator><name pos:start="187:57" pos:end="187:58">mv</name><index pos:start="187:59" pos:end="187:61">[<expr pos:start="187:60" pos:end="187:60"><literal type="number" pos:start="187:60" pos:end="187:60">0</literal></expr>]</index><index pos:start="187:62" pos:end="187:64">[<expr pos:start="187:63" pos:end="187:63"><literal type="number" pos:start="187:63" pos:end="187:63">0</literal></expr>]</index><index pos:start="187:65" pos:end="187:67">[<expr pos:start="187:66" pos:end="187:66"><literal type="number" pos:start="187:66" pos:end="187:66">0</literal></expr>]</index></name> <operator pos:start="187:69" pos:end="187:69">-</operator> <name pos:start="187:71" pos:end="187:89"><name pos:start="187:71" pos:end="187:71">s</name><operator pos:start="187:72" pos:end="187:73">-&gt;</operator><name pos:start="187:74" pos:end="187:80">last_mv</name><index pos:start="187:81" pos:end="187:83">[<expr pos:start="187:82" pos:end="187:82"><literal type="number" pos:start="187:82" pos:end="187:82">0</literal></expr>]</index><index pos:start="187:84" pos:end="187:86">[<expr pos:start="187:85" pos:end="187:85"><literal type="number" pos:start="187:85" pos:end="187:85">0</literal></expr>]</index><index pos:start="187:87" pos:end="187:89">[<expr pos:start="187:88" pos:end="187:88"><literal type="number" pos:start="187:88" pos:end="187:88">0</literal></expr>]</index></name></expr></argument>,

                                                     <argument pos:start="189:54" pos:end="189:89"><expr pos:start="189:54" pos:end="189:89"><name pos:start="189:54" pos:end="189:67"><name pos:start="189:54" pos:end="189:54">s</name><operator pos:start="189:55" pos:end="189:56">-&gt;</operator><name pos:start="189:57" pos:end="189:58">mv</name><index pos:start="189:59" pos:end="189:61">[<expr pos:start="189:60" pos:end="189:60"><literal type="number" pos:start="189:60" pos:end="189:60">0</literal></expr>]</index><index pos:start="189:62" pos:end="189:64">[<expr pos:start="189:63" pos:end="189:63"><literal type="number" pos:start="189:63" pos:end="189:63">0</literal></expr>]</index><index pos:start="189:65" pos:end="189:67">[<expr pos:start="189:66" pos:end="189:66"><literal type="number" pos:start="189:66" pos:end="189:66">1</literal></expr>]</index></name> <operator pos:start="189:69" pos:end="189:69">-</operator> <name pos:start="189:71" pos:end="189:89"><name pos:start="189:71" pos:end="189:71">s</name><operator pos:start="189:72" pos:end="189:73">-&gt;</operator><name pos:start="189:74" pos:end="189:80">last_mv</name><index pos:start="189:81" pos:end="189:83">[<expr pos:start="189:82" pos:end="189:82"><literal type="number" pos:start="189:82" pos:end="189:82">0</literal></expr>]</index><index pos:start="189:84" pos:end="189:86">[<expr pos:start="189:85" pos:end="189:85"><literal type="number" pos:start="189:85" pos:end="189:85">0</literal></expr>]</index><index pos:start="189:87" pos:end="189:89">[<expr pos:start="189:88" pos:end="189:88"><literal type="number" pos:start="189:88" pos:end="189:88">1</literal></expr>]</index></name></expr></argument>,

                                                     <argument pos:start="191:54" pos:end="191:62"><expr pos:start="191:54" pos:end="191:62"><name pos:start="191:54" pos:end="191:62"><name pos:start="191:54" pos:end="191:54">s</name><operator pos:start="191:55" pos:end="191:56">-&gt;</operator><name pos:start="191:57" pos:end="191:62">f_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="193:25" pos:end="195:61"><expr pos:start="193:25" pos:end="195:60"><name pos:start="193:25" pos:end="193:43"><name pos:start="193:25" pos:end="193:25">s</name><operator pos:start="193:26" pos:end="193:27">-&gt;</operator><name pos:start="193:28" pos:end="193:34">last_mv</name><index pos:start="193:35" pos:end="193:37">[<expr pos:start="193:36" pos:end="193:36"><literal type="number" pos:start="193:36" pos:end="193:36">0</literal></expr>]</index><index pos:start="193:38" pos:end="193:40">[<expr pos:start="193:39" pos:end="193:39"><literal type="number" pos:start="193:39" pos:end="193:39">0</literal></expr>]</index><index pos:start="193:41" pos:end="193:43">[<expr pos:start="193:42" pos:end="193:42"><literal type="number" pos:start="193:42" pos:end="193:42">0</literal></expr>]</index></name> <operator pos:start="193:45" pos:end="193:45">=</operator>

                        <name pos:start="195:25" pos:end="195:43"><name pos:start="195:25" pos:end="195:25">s</name><operator pos:start="195:26" pos:end="195:27">-&gt;</operator><name pos:start="195:28" pos:end="195:34">last_mv</name><index pos:start="195:35" pos:end="195:37">[<expr pos:start="195:36" pos:end="195:36"><literal type="number" pos:start="195:36" pos:end="195:36">0</literal></expr>]</index><index pos:start="195:38" pos:end="195:40">[<expr pos:start="195:39" pos:end="195:39"><literal type="number" pos:start="195:39" pos:end="195:39">1</literal></expr>]</index><index pos:start="195:41" pos:end="195:43">[<expr pos:start="195:42" pos:end="195:42"><literal type="number" pos:start="195:42" pos:end="195:42">0</literal></expr>]</index></name> <operator pos:start="195:45" pos:end="195:45">=</operator> <name pos:start="195:47" pos:end="195:60"><name pos:start="195:47" pos:end="195:47">s</name><operator pos:start="195:48" pos:end="195:49">-&gt;</operator><name pos:start="195:50" pos:end="195:51">mv</name><index pos:start="195:52" pos:end="195:54">[<expr pos:start="195:53" pos:end="195:53"><literal type="number" pos:start="195:53" pos:end="195:53">0</literal></expr>]</index><index pos:start="195:55" pos:end="195:57">[<expr pos:start="195:56" pos:end="195:56"><literal type="number" pos:start="195:56" pos:end="195:56">0</literal></expr>]</index><index pos:start="195:58" pos:end="195:60">[<expr pos:start="195:59" pos:end="195:59"><literal type="number" pos:start="195:59" pos:end="195:59">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="197:25" pos:end="199:61"><expr pos:start="197:25" pos:end="199:60"><name pos:start="197:25" pos:end="197:43"><name pos:start="197:25" pos:end="197:25">s</name><operator pos:start="197:26" pos:end="197:27">-&gt;</operator><name pos:start="197:28" pos:end="197:34">last_mv</name><index pos:start="197:35" pos:end="197:37">[<expr pos:start="197:36" pos:end="197:36"><literal type="number" pos:start="197:36" pos:end="197:36">0</literal></expr>]</index><index pos:start="197:38" pos:end="197:40">[<expr pos:start="197:39" pos:end="197:39"><literal type="number" pos:start="197:39" pos:end="197:39">0</literal></expr>]</index><index pos:start="197:41" pos:end="197:43">[<expr pos:start="197:42" pos:end="197:42"><literal type="number" pos:start="197:42" pos:end="197:42">1</literal></expr>]</index></name> <operator pos:start="197:45" pos:end="197:45">=</operator>

                        <name pos:start="199:25" pos:end="199:43"><name pos:start="199:25" pos:end="199:25">s</name><operator pos:start="199:26" pos:end="199:27">-&gt;</operator><name pos:start="199:28" pos:end="199:34">last_mv</name><index pos:start="199:35" pos:end="199:37">[<expr pos:start="199:36" pos:end="199:36"><literal type="number" pos:start="199:36" pos:end="199:36">0</literal></expr>]</index><index pos:start="199:38" pos:end="199:40">[<expr pos:start="199:39" pos:end="199:39"><literal type="number" pos:start="199:39" pos:end="199:39">1</literal></expr>]</index><index pos:start="199:41" pos:end="199:43">[<expr pos:start="199:42" pos:end="199:42"><literal type="number" pos:start="199:42" pos:end="199:42">1</literal></expr>]</index></name> <operator pos:start="199:45" pos:end="199:45">=</operator> <name pos:start="199:47" pos:end="199:60"><name pos:start="199:47" pos:end="199:47">s</name><operator pos:start="199:48" pos:end="199:49">-&gt;</operator><name pos:start="199:50" pos:end="199:51">mv</name><index pos:start="199:52" pos:end="199:54">[<expr pos:start="199:53" pos:end="199:53"><literal type="number" pos:start="199:53" pos:end="199:53">0</literal></expr>]</index><index pos:start="199:55" pos:end="199:57">[<expr pos:start="199:56" pos:end="199:56"><literal type="number" pos:start="199:56" pos:end="199:56">0</literal></expr>]</index><index pos:start="199:58" pos:end="199:60">[<expr pos:start="199:59" pos:end="199:59"><literal type="number" pos:start="199:59" pos:end="199:59">1</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="201:25" pos:end="201:37"><expr pos:start="201:25" pos:end="201:36"><name pos:start="201:25" pos:end="201:34"><name pos:start="201:25" pos:end="201:25">s</name><operator pos:start="201:26" pos:end="201:27">-&gt;</operator><name pos:start="201:28" pos:end="201:34">f_count</name></name><operator pos:start="201:35" pos:end="201:36">++</operator></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="205:21" pos:end="225:21"><if pos:start="205:21" pos:end="225:21">if <condition pos:start="205:24" pos:end="205:52">(<expr pos:start="205:25" pos:end="205:51"><name pos:start="205:25" pos:end="205:33"><name pos:start="205:25" pos:end="205:25">s</name><operator pos:start="205:26" pos:end="205:27">-&gt;</operator><name pos:start="205:28" pos:end="205:33">mv_dir</name></name> <operator pos:start="205:35" pos:end="205:35">&amp;</operator> <name pos:start="205:37" pos:end="205:51">MV_DIR_BACKWARD</name></expr>)</condition> <block pos:start="205:54" pos:end="225:21">{<block_content pos:start="207:25" pos:end="223:37">

                        <expr_stmt pos:start="207:25" pos:end="213:64"><expr pos:start="207:25" pos:end="213:63"><call pos:start="207:25" pos:end="213:63"><name pos:start="207:25" pos:end="207:52">ff_h263_encode_motion_vector</name><argument_list pos:start="207:53" pos:end="213:63">(<argument pos:start="207:54" pos:end="207:54"><expr pos:start="207:54" pos:end="207:54"><name pos:start="207:54" pos:end="207:54">s</name></expr></argument>,

                                                     <argument pos:start="209:54" pos:end="209:89"><expr pos:start="209:54" pos:end="209:89"><name pos:start="209:54" pos:end="209:67"><name pos:start="209:54" pos:end="209:54">s</name><operator pos:start="209:55" pos:end="209:56">-&gt;</operator><name pos:start="209:57" pos:end="209:58">mv</name><index pos:start="209:59" pos:end="209:61">[<expr pos:start="209:60" pos:end="209:60"><literal type="number" pos:start="209:60" pos:end="209:60">1</literal></expr>]</index><index pos:start="209:62" pos:end="209:64">[<expr pos:start="209:63" pos:end="209:63"><literal type="number" pos:start="209:63" pos:end="209:63">0</literal></expr>]</index><index pos:start="209:65" pos:end="209:67">[<expr pos:start="209:66" pos:end="209:66"><literal type="number" pos:start="209:66" pos:end="209:66">0</literal></expr>]</index></name> <operator pos:start="209:69" pos:end="209:69">-</operator> <name pos:start="209:71" pos:end="209:89"><name pos:start="209:71" pos:end="209:71">s</name><operator pos:start="209:72" pos:end="209:73">-&gt;</operator><name pos:start="209:74" pos:end="209:80">last_mv</name><index pos:start="209:81" pos:end="209:83">[<expr pos:start="209:82" pos:end="209:82"><literal type="number" pos:start="209:82" pos:end="209:82">1</literal></expr>]</index><index pos:start="209:84" pos:end="209:86">[<expr pos:start="209:85" pos:end="209:85"><literal type="number" pos:start="209:85" pos:end="209:85">0</literal></expr>]</index><index pos:start="209:87" pos:end="209:89">[<expr pos:start="209:88" pos:end="209:88"><literal type="number" pos:start="209:88" pos:end="209:88">0</literal></expr>]</index></name></expr></argument>,

                                                     <argument pos:start="211:54" pos:end="211:89"><expr pos:start="211:54" pos:end="211:89"><name pos:start="211:54" pos:end="211:67"><name pos:start="211:54" pos:end="211:54">s</name><operator pos:start="211:55" pos:end="211:56">-&gt;</operator><name pos:start="211:57" pos:end="211:58">mv</name><index pos:start="211:59" pos:end="211:61">[<expr pos:start="211:60" pos:end="211:60"><literal type="number" pos:start="211:60" pos:end="211:60">1</literal></expr>]</index><index pos:start="211:62" pos:end="211:64">[<expr pos:start="211:63" pos:end="211:63"><literal type="number" pos:start="211:63" pos:end="211:63">0</literal></expr>]</index><index pos:start="211:65" pos:end="211:67">[<expr pos:start="211:66" pos:end="211:66"><literal type="number" pos:start="211:66" pos:end="211:66">1</literal></expr>]</index></name> <operator pos:start="211:69" pos:end="211:69">-</operator> <name pos:start="211:71" pos:end="211:89"><name pos:start="211:71" pos:end="211:71">s</name><operator pos:start="211:72" pos:end="211:73">-&gt;</operator><name pos:start="211:74" pos:end="211:80">last_mv</name><index pos:start="211:81" pos:end="211:83">[<expr pos:start="211:82" pos:end="211:82"><literal type="number" pos:start="211:82" pos:end="211:82">1</literal></expr>]</index><index pos:start="211:84" pos:end="211:86">[<expr pos:start="211:85" pos:end="211:85"><literal type="number" pos:start="211:85" pos:end="211:85">0</literal></expr>]</index><index pos:start="211:87" pos:end="211:89">[<expr pos:start="211:88" pos:end="211:88"><literal type="number" pos:start="211:88" pos:end="211:88">1</literal></expr>]</index></name></expr></argument>,

                                                     <argument pos:start="213:54" pos:end="213:62"><expr pos:start="213:54" pos:end="213:62"><name pos:start="213:54" pos:end="213:62"><name pos:start="213:54" pos:end="213:54">s</name><operator pos:start="213:55" pos:end="213:56">-&gt;</operator><name pos:start="213:57" pos:end="213:62">b_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="215:25" pos:end="217:61"><expr pos:start="215:25" pos:end="217:60"><name pos:start="215:25" pos:end="215:43"><name pos:start="215:25" pos:end="215:25">s</name><operator pos:start="215:26" pos:end="215:27">-&gt;</operator><name pos:start="215:28" pos:end="215:34">last_mv</name><index pos:start="215:35" pos:end="215:37">[<expr pos:start="215:36" pos:end="215:36"><literal type="number" pos:start="215:36" pos:end="215:36">1</literal></expr>]</index><index pos:start="215:38" pos:end="215:40">[<expr pos:start="215:39" pos:end="215:39"><literal type="number" pos:start="215:39" pos:end="215:39">0</literal></expr>]</index><index pos:start="215:41" pos:end="215:43">[<expr pos:start="215:42" pos:end="215:42"><literal type="number" pos:start="215:42" pos:end="215:42">0</literal></expr>]</index></name> <operator pos:start="215:45" pos:end="215:45">=</operator>

                        <name pos:start="217:25" pos:end="217:43"><name pos:start="217:25" pos:end="217:25">s</name><operator pos:start="217:26" pos:end="217:27">-&gt;</operator><name pos:start="217:28" pos:end="217:34">last_mv</name><index pos:start="217:35" pos:end="217:37">[<expr pos:start="217:36" pos:end="217:36"><literal type="number" pos:start="217:36" pos:end="217:36">1</literal></expr>]</index><index pos:start="217:38" pos:end="217:40">[<expr pos:start="217:39" pos:end="217:39"><literal type="number" pos:start="217:39" pos:end="217:39">1</literal></expr>]</index><index pos:start="217:41" pos:end="217:43">[<expr pos:start="217:42" pos:end="217:42"><literal type="number" pos:start="217:42" pos:end="217:42">0</literal></expr>]</index></name> <operator pos:start="217:45" pos:end="217:45">=</operator> <name pos:start="217:47" pos:end="217:60"><name pos:start="217:47" pos:end="217:47">s</name><operator pos:start="217:48" pos:end="217:49">-&gt;</operator><name pos:start="217:50" pos:end="217:51">mv</name><index pos:start="217:52" pos:end="217:54">[<expr pos:start="217:53" pos:end="217:53"><literal type="number" pos:start="217:53" pos:end="217:53">1</literal></expr>]</index><index pos:start="217:55" pos:end="217:57">[<expr pos:start="217:56" pos:end="217:56"><literal type="number" pos:start="217:56" pos:end="217:56">0</literal></expr>]</index><index pos:start="217:58" pos:end="217:60">[<expr pos:start="217:59" pos:end="217:59"><literal type="number" pos:start="217:59" pos:end="217:59">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="219:25" pos:end="221:61"><expr pos:start="219:25" pos:end="221:60"><name pos:start="219:25" pos:end="219:43"><name pos:start="219:25" pos:end="219:25">s</name><operator pos:start="219:26" pos:end="219:27">-&gt;</operator><name pos:start="219:28" pos:end="219:34">last_mv</name><index pos:start="219:35" pos:end="219:37">[<expr pos:start="219:36" pos:end="219:36"><literal type="number" pos:start="219:36" pos:end="219:36">1</literal></expr>]</index><index pos:start="219:38" pos:end="219:40">[<expr pos:start="219:39" pos:end="219:39"><literal type="number" pos:start="219:39" pos:end="219:39">0</literal></expr>]</index><index pos:start="219:41" pos:end="219:43">[<expr pos:start="219:42" pos:end="219:42"><literal type="number" pos:start="219:42" pos:end="219:42">1</literal></expr>]</index></name> <operator pos:start="219:45" pos:end="219:45">=</operator>

                        <name pos:start="221:25" pos:end="221:43"><name pos:start="221:25" pos:end="221:25">s</name><operator pos:start="221:26" pos:end="221:27">-&gt;</operator><name pos:start="221:28" pos:end="221:34">last_mv</name><index pos:start="221:35" pos:end="221:37">[<expr pos:start="221:36" pos:end="221:36"><literal type="number" pos:start="221:36" pos:end="221:36">1</literal></expr>]</index><index pos:start="221:38" pos:end="221:40">[<expr pos:start="221:39" pos:end="221:39"><literal type="number" pos:start="221:39" pos:end="221:39">1</literal></expr>]</index><index pos:start="221:41" pos:end="221:43">[<expr pos:start="221:42" pos:end="221:42"><literal type="number" pos:start="221:42" pos:end="221:42">1</literal></expr>]</index></name> <operator pos:start="221:45" pos:end="221:45">=</operator> <name pos:start="221:47" pos:end="221:60"><name pos:start="221:47" pos:end="221:47">s</name><operator pos:start="221:48" pos:end="221:49">-&gt;</operator><name pos:start="221:50" pos:end="221:51">mv</name><index pos:start="221:52" pos:end="221:54">[<expr pos:start="221:53" pos:end="221:53"><literal type="number" pos:start="221:53" pos:end="221:53">1</literal></expr>]</index><index pos:start="221:55" pos:end="221:57">[<expr pos:start="221:56" pos:end="221:56"><literal type="number" pos:start="221:56" pos:end="221:56">0</literal></expr>]</index><index pos:start="221:58" pos:end="221:60">[<expr pos:start="221:59" pos:end="221:59"><literal type="number" pos:start="221:59" pos:end="221:59">1</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="223:25" pos:end="223:37"><expr pos:start="223:25" pos:end="223:36"><name pos:start="223:25" pos:end="223:34"><name pos:start="223:25" pos:end="223:25">s</name><operator pos:start="223:26" pos:end="223:27">-&gt;</operator><name pos:start="223:28" pos:end="223:34">b_count</name></name><operator pos:start="223:35" pos:end="223:36">++</operator></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="227:19" pos:end="289:17">else <block pos:start="227:24" pos:end="289:17">{<block_content pos:start="229:21" pos:end="287:21">

                    <if_stmt pos:start="229:21" pos:end="235:21"><if pos:start="229:21" pos:end="235:21">if <condition pos:start="229:24" pos:end="229:51">(<expr pos:start="229:25" pos:end="229:50"><name pos:start="229:25" pos:end="229:33"><name pos:start="229:25" pos:end="229:25">s</name><operator pos:start="229:26" pos:end="229:27">-&gt;</operator><name pos:start="229:28" pos:end="229:33">mv_dir</name></name> <operator pos:start="229:35" pos:end="229:35">&amp;</operator> <name pos:start="229:37" pos:end="229:50">MV_DIR_FORWARD</name></expr>)</condition> <block pos:start="229:53" pos:end="235:21">{<block_content pos:start="231:25" pos:end="233:67">

                        <expr_stmt pos:start="231:25" pos:end="231:67"><expr pos:start="231:25" pos:end="231:66"><call pos:start="231:25" pos:end="231:66"><name pos:start="231:25" pos:end="231:32">put_bits</name><argument_list pos:start="231:33" pos:end="231:66">(<argument pos:start="231:34" pos:end="231:39"><expr pos:start="231:34" pos:end="231:39"><operator pos:start="231:34" pos:end="231:34">&amp;</operator><name pos:start="231:35" pos:end="231:39"><name pos:start="231:35" pos:end="231:35">s</name><operator pos:start="231:36" pos:end="231:37">-&gt;</operator><name pos:start="231:38" pos:end="231:39">pb</name></name></expr></argument>, <argument pos:start="231:42" pos:end="231:42"><expr pos:start="231:42" pos:end="231:42"><literal type="number" pos:start="231:42" pos:end="231:42">1</literal></expr></argument>, <argument pos:start="231:45" pos:end="231:65"><expr pos:start="231:45" pos:end="231:65"><name pos:start="231:45" pos:end="231:65"><name pos:start="231:45" pos:end="231:45">s</name><operator pos:start="231:46" pos:end="231:47">-&gt;</operator><name pos:start="231:48" pos:end="231:59">field_select</name><index pos:start="231:60" pos:end="231:62">[<expr pos:start="231:61" pos:end="231:61"><literal type="number" pos:start="231:61" pos:end="231:61">0</literal></expr>]</index><index pos:start="231:63" pos:end="231:65">[<expr pos:start="231:64" pos:end="231:64"><literal type="number" pos:start="231:64" pos:end="231:64">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="233:25" pos:end="233:67"><expr pos:start="233:25" pos:end="233:66"><call pos:start="233:25" pos:end="233:66"><name pos:start="233:25" pos:end="233:32">put_bits</name><argument_list pos:start="233:33" pos:end="233:66">(<argument pos:start="233:34" pos:end="233:39"><expr pos:start="233:34" pos:end="233:39"><operator pos:start="233:34" pos:end="233:34">&amp;</operator><name pos:start="233:35" pos:end="233:39"><name pos:start="233:35" pos:end="233:35">s</name><operator pos:start="233:36" pos:end="233:37">-&gt;</operator><name pos:start="233:38" pos:end="233:39">pb</name></name></expr></argument>, <argument pos:start="233:42" pos:end="233:42"><expr pos:start="233:42" pos:end="233:42"><literal type="number" pos:start="233:42" pos:end="233:42">1</literal></expr></argument>, <argument pos:start="233:45" pos:end="233:65"><expr pos:start="233:45" pos:end="233:65"><name pos:start="233:45" pos:end="233:65"><name pos:start="233:45" pos:end="233:45">s</name><operator pos:start="233:46" pos:end="233:47">-&gt;</operator><name pos:start="233:48" pos:end="233:59">field_select</name><index pos:start="233:60" pos:end="233:62">[<expr pos:start="233:61" pos:end="233:61"><literal type="number" pos:start="233:61" pos:end="233:61">0</literal></expr>]</index><index pos:start="233:63" pos:end="233:65">[<expr pos:start="233:64" pos:end="233:64"><literal type="number" pos:start="233:64" pos:end="233:64">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="237:21" pos:end="243:21"><if pos:start="237:21" pos:end="243:21">if <condition pos:start="237:24" pos:end="237:52">(<expr pos:start="237:25" pos:end="237:51"><name pos:start="237:25" pos:end="237:33"><name pos:start="237:25" pos:end="237:25">s</name><operator pos:start="237:26" pos:end="237:27">-&gt;</operator><name pos:start="237:28" pos:end="237:33">mv_dir</name></name> <operator pos:start="237:35" pos:end="237:35">&amp;</operator> <name pos:start="237:37" pos:end="237:51">MV_DIR_BACKWARD</name></expr>)</condition> <block pos:start="237:54" pos:end="243:21">{<block_content pos:start="239:25" pos:end="241:67">

                        <expr_stmt pos:start="239:25" pos:end="239:67"><expr pos:start="239:25" pos:end="239:66"><call pos:start="239:25" pos:end="239:66"><name pos:start="239:25" pos:end="239:32">put_bits</name><argument_list pos:start="239:33" pos:end="239:66">(<argument pos:start="239:34" pos:end="239:39"><expr pos:start="239:34" pos:end="239:39"><operator pos:start="239:34" pos:end="239:34">&amp;</operator><name pos:start="239:35" pos:end="239:39"><name pos:start="239:35" pos:end="239:35">s</name><operator pos:start="239:36" pos:end="239:37">-&gt;</operator><name pos:start="239:38" pos:end="239:39">pb</name></name></expr></argument>, <argument pos:start="239:42" pos:end="239:42"><expr pos:start="239:42" pos:end="239:42"><literal type="number" pos:start="239:42" pos:end="239:42">1</literal></expr></argument>, <argument pos:start="239:45" pos:end="239:65"><expr pos:start="239:45" pos:end="239:65"><name pos:start="239:45" pos:end="239:65"><name pos:start="239:45" pos:end="239:45">s</name><operator pos:start="239:46" pos:end="239:47">-&gt;</operator><name pos:start="239:48" pos:end="239:59">field_select</name><index pos:start="239:60" pos:end="239:62">[<expr pos:start="239:61" pos:end="239:61"><literal type="number" pos:start="239:61" pos:end="239:61">1</literal></expr>]</index><index pos:start="239:63" pos:end="239:65">[<expr pos:start="239:64" pos:end="239:64"><literal type="number" pos:start="239:64" pos:end="239:64">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="241:25" pos:end="241:67"><expr pos:start="241:25" pos:end="241:66"><call pos:start="241:25" pos:end="241:66"><name pos:start="241:25" pos:end="241:32">put_bits</name><argument_list pos:start="241:33" pos:end="241:66">(<argument pos:start="241:34" pos:end="241:39"><expr pos:start="241:34" pos:end="241:39"><operator pos:start="241:34" pos:end="241:34">&amp;</operator><name pos:start="241:35" pos:end="241:39"><name pos:start="241:35" pos:end="241:35">s</name><operator pos:start="241:36" pos:end="241:37">-&gt;</operator><name pos:start="241:38" pos:end="241:39">pb</name></name></expr></argument>, <argument pos:start="241:42" pos:end="241:42"><expr pos:start="241:42" pos:end="241:42"><literal type="number" pos:start="241:42" pos:end="241:42">1</literal></expr></argument>, <argument pos:start="241:45" pos:end="241:65"><expr pos:start="241:45" pos:end="241:65"><name pos:start="241:45" pos:end="241:65"><name pos:start="241:45" pos:end="241:45">s</name><operator pos:start="241:46" pos:end="241:47">-&gt;</operator><name pos:start="241:48" pos:end="241:59">field_select</name><index pos:start="241:60" pos:end="241:62">[<expr pos:start="241:61" pos:end="241:61"><literal type="number" pos:start="241:61" pos:end="241:61">1</literal></expr>]</index><index pos:start="241:63" pos:end="241:65">[<expr pos:start="241:64" pos:end="241:64"><literal type="number" pos:start="241:64" pos:end="241:64">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="245:21" pos:end="265:21"><if pos:start="245:21" pos:end="265:21">if <condition pos:start="245:24" pos:end="245:51">(<expr pos:start="245:25" pos:end="245:50"><name pos:start="245:25" pos:end="245:33"><name pos:start="245:25" pos:end="245:25">s</name><operator pos:start="245:26" pos:end="245:27">-&gt;</operator><name pos:start="245:28" pos:end="245:33">mv_dir</name></name> <operator pos:start="245:35" pos:end="245:35">&amp;</operator> <name pos:start="245:37" pos:end="245:50">MV_DIR_FORWARD</name></expr>)</condition> <block pos:start="245:53" pos:end="265:21">{<block_content pos:start="247:25" pos:end="263:37">

                        <for pos:start="247:25" pos:end="261:25">for <control pos:start="247:29" pos:end="247:47">(<init pos:start="247:30" pos:end="247:35"><expr pos:start="247:30" pos:end="247:34"><name pos:start="247:30" pos:end="247:30">i</name> <operator pos:start="247:32" pos:end="247:32">=</operator> <literal type="number" pos:start="247:34" pos:end="247:34">0</literal></expr>;</init> <condition pos:start="247:37" pos:end="247:42"><expr pos:start="247:37" pos:end="247:41"><name pos:start="247:37" pos:end="247:37">i</name> <operator pos:start="247:39" pos:end="247:39">&lt;</operator> <literal type="number" pos:start="247:41" pos:end="247:41">2</literal></expr>;</condition> <incr pos:start="247:44" pos:end="247:46"><expr pos:start="247:44" pos:end="247:46"><name pos:start="247:44" pos:end="247:44">i</name><operator pos:start="247:45" pos:end="247:46">++</operator></expr></incr>)</control> <block pos:start="247:49" pos:end="261:25">{<block_content pos:start="249:29" pos:end="259:69">

                            <expr_stmt pos:start="249:29" pos:end="255:68"><expr pos:start="249:29" pos:end="255:67"><call pos:start="249:29" pos:end="255:67"><name pos:start="249:29" pos:end="249:56">ff_h263_encode_motion_vector</name><argument_list pos:start="249:57" pos:end="255:67">(<argument pos:start="249:58" pos:end="249:58"><expr pos:start="249:58" pos:end="249:58"><name pos:start="249:58" pos:end="249:58">s</name></expr></argument>,

                                                         <argument pos:start="251:58" pos:end="251:93"><expr pos:start="251:58" pos:end="251:93"><name pos:start="251:58" pos:end="251:71"><name pos:start="251:58" pos:end="251:58">s</name><operator pos:start="251:59" pos:end="251:60">-&gt;</operator><name pos:start="251:61" pos:end="251:62">mv</name><index pos:start="251:63" pos:end="251:65">[<expr pos:start="251:64" pos:end="251:64"><literal type="number" pos:start="251:64" pos:end="251:64">0</literal></expr>]</index><index pos:start="251:66" pos:end="251:68">[<expr pos:start="251:67" pos:end="251:67"><name pos:start="251:67" pos:end="251:67">i</name></expr>]</index><index pos:start="251:69" pos:end="251:71">[<expr pos:start="251:70" pos:end="251:70"><literal type="number" pos:start="251:70" pos:end="251:70">0</literal></expr>]</index></name> <operator pos:start="251:73" pos:end="251:73">-</operator> <name pos:start="251:75" pos:end="251:93"><name pos:start="251:75" pos:end="251:75">s</name><operator pos:start="251:76" pos:end="251:77">-&gt;</operator><name pos:start="251:78" pos:end="251:84">last_mv</name><index pos:start="251:85" pos:end="251:87">[<expr pos:start="251:86" pos:end="251:86"><literal type="number" pos:start="251:86" pos:end="251:86">0</literal></expr>]</index><index pos:start="251:88" pos:end="251:90">[<expr pos:start="251:89" pos:end="251:89"><name pos:start="251:89" pos:end="251:89">i</name></expr>]</index><index pos:start="251:91" pos:end="251:93">[<expr pos:start="251:92" pos:end="251:92"><literal type="number" pos:start="251:92" pos:end="251:92">0</literal></expr>]</index></name></expr></argument>,

                                                         <argument pos:start="253:58" pos:end="253:97"><expr pos:start="253:58" pos:end="253:97"><name pos:start="253:58" pos:end="253:71"><name pos:start="253:58" pos:end="253:58">s</name><operator pos:start="253:59" pos:end="253:60">-&gt;</operator><name pos:start="253:61" pos:end="253:62">mv</name><index pos:start="253:63" pos:end="253:65">[<expr pos:start="253:64" pos:end="253:64"><literal type="number" pos:start="253:64" pos:end="253:64">0</literal></expr>]</index><index pos:start="253:66" pos:end="253:68">[<expr pos:start="253:67" pos:end="253:67"><name pos:start="253:67" pos:end="253:67">i</name></expr>]</index><index pos:start="253:69" pos:end="253:71">[<expr pos:start="253:70" pos:end="253:70"><literal type="number" pos:start="253:70" pos:end="253:70">1</literal></expr>]</index></name> <operator pos:start="253:73" pos:end="253:73">-</operator> <name pos:start="253:75" pos:end="253:93"><name pos:start="253:75" pos:end="253:75">s</name><operator pos:start="253:76" pos:end="253:77">-&gt;</operator><name pos:start="253:78" pos:end="253:84">last_mv</name><index pos:start="253:85" pos:end="253:87">[<expr pos:start="253:86" pos:end="253:86"><literal type="number" pos:start="253:86" pos:end="253:86">0</literal></expr>]</index><index pos:start="253:88" pos:end="253:90">[<expr pos:start="253:89" pos:end="253:89"><name pos:start="253:89" pos:end="253:89">i</name></expr>]</index><index pos:start="253:91" pos:end="253:93">[<expr pos:start="253:92" pos:end="253:92"><literal type="number" pos:start="253:92" pos:end="253:92">1</literal></expr>]</index></name> <operator pos:start="253:95" pos:end="253:95">/</operator> <literal type="number" pos:start="253:97" pos:end="253:97">2</literal></expr></argument>,

                                                         <argument pos:start="255:58" pos:end="255:66"><expr pos:start="255:58" pos:end="255:66"><name pos:start="255:58" pos:end="255:66"><name pos:start="255:58" pos:end="255:58">s</name><operator pos:start="255:59" pos:end="255:60">-&gt;</operator><name pos:start="255:61" pos:end="255:66">f_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="257:29" pos:end="257:65"><expr pos:start="257:29" pos:end="257:64"><name pos:start="257:29" pos:end="257:47"><name pos:start="257:29" pos:end="257:29">s</name><operator pos:start="257:30" pos:end="257:31">-&gt;</operator><name pos:start="257:32" pos:end="257:38">last_mv</name><index pos:start="257:39" pos:end="257:41">[<expr pos:start="257:40" pos:end="257:40"><literal type="number" pos:start="257:40" pos:end="257:40">0</literal></expr>]</index><index pos:start="257:42" pos:end="257:44">[<expr pos:start="257:43" pos:end="257:43"><name pos:start="257:43" pos:end="257:43">i</name></expr>]</index><index pos:start="257:45" pos:end="257:47">[<expr pos:start="257:46" pos:end="257:46"><literal type="number" pos:start="257:46" pos:end="257:46">0</literal></expr>]</index></name> <operator pos:start="257:49" pos:end="257:49">=</operator> <name pos:start="257:51" pos:end="257:64"><name pos:start="257:51" pos:end="257:51">s</name><operator pos:start="257:52" pos:end="257:53">-&gt;</operator><name pos:start="257:54" pos:end="257:55">mv</name><index pos:start="257:56" pos:end="257:58">[<expr pos:start="257:57" pos:end="257:57"><literal type="number" pos:start="257:57" pos:end="257:57">0</literal></expr>]</index><index pos:start="257:59" pos:end="257:61">[<expr pos:start="257:60" pos:end="257:60"><name pos:start="257:60" pos:end="257:60">i</name></expr>]</index><index pos:start="257:62" pos:end="257:64">[<expr pos:start="257:63" pos:end="257:63"><literal type="number" pos:start="257:63" pos:end="257:63">0</literal></expr>]</index></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="259:29" pos:end="259:69"><expr pos:start="259:29" pos:end="259:68"><name pos:start="259:29" pos:end="259:47"><name pos:start="259:29" pos:end="259:29">s</name><operator pos:start="259:30" pos:end="259:31">-&gt;</operator><name pos:start="259:32" pos:end="259:38">last_mv</name><index pos:start="259:39" pos:end="259:41">[<expr pos:start="259:40" pos:end="259:40"><literal type="number" pos:start="259:40" pos:end="259:40">0</literal></expr>]</index><index pos:start="259:42" pos:end="259:44">[<expr pos:start="259:43" pos:end="259:43"><name pos:start="259:43" pos:end="259:43">i</name></expr>]</index><index pos:start="259:45" pos:end="259:47">[<expr pos:start="259:46" pos:end="259:46"><literal type="number" pos:start="259:46" pos:end="259:46">1</literal></expr>]</index></name> <operator pos:start="259:49" pos:end="259:49">=</operator> <name pos:start="259:51" pos:end="259:64"><name pos:start="259:51" pos:end="259:51">s</name><operator pos:start="259:52" pos:end="259:53">-&gt;</operator><name pos:start="259:54" pos:end="259:55">mv</name><index pos:start="259:56" pos:end="259:58">[<expr pos:start="259:57" pos:end="259:57"><literal type="number" pos:start="259:57" pos:end="259:57">0</literal></expr>]</index><index pos:start="259:59" pos:end="259:61">[<expr pos:start="259:60" pos:end="259:60"><name pos:start="259:60" pos:end="259:60">i</name></expr>]</index><index pos:start="259:62" pos:end="259:64">[<expr pos:start="259:63" pos:end="259:63"><literal type="number" pos:start="259:63" pos:end="259:63">1</literal></expr>]</index></name> <operator pos:start="259:66" pos:end="259:66">*</operator> <literal type="number" pos:start="259:68" pos:end="259:68">2</literal></expr>;</expr_stmt>

                        </block_content>}</block></for>

                        <expr_stmt pos:start="263:25" pos:end="263:37"><expr pos:start="263:25" pos:end="263:36"><name pos:start="263:25" pos:end="263:34"><name pos:start="263:25" pos:end="263:25">s</name><operator pos:start="263:26" pos:end="263:27">-&gt;</operator><name pos:start="263:28" pos:end="263:34">f_count</name></name><operator pos:start="263:35" pos:end="263:36">++</operator></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="267:21" pos:end="287:21"><if pos:start="267:21" pos:end="287:21">if <condition pos:start="267:24" pos:end="267:52">(<expr pos:start="267:25" pos:end="267:51"><name pos:start="267:25" pos:end="267:33"><name pos:start="267:25" pos:end="267:25">s</name><operator pos:start="267:26" pos:end="267:27">-&gt;</operator><name pos:start="267:28" pos:end="267:33">mv_dir</name></name> <operator pos:start="267:35" pos:end="267:35">&amp;</operator> <name pos:start="267:37" pos:end="267:51">MV_DIR_BACKWARD</name></expr>)</condition> <block pos:start="267:54" pos:end="287:21">{<block_content pos:start="269:25" pos:end="285:37">

                        <for pos:start="269:25" pos:end="283:25">for <control pos:start="269:29" pos:end="269:47">(<init pos:start="269:30" pos:end="269:35"><expr pos:start="269:30" pos:end="269:34"><name pos:start="269:30" pos:end="269:30">i</name> <operator pos:start="269:32" pos:end="269:32">=</operator> <literal type="number" pos:start="269:34" pos:end="269:34">0</literal></expr>;</init> <condition pos:start="269:37" pos:end="269:42"><expr pos:start="269:37" pos:end="269:41"><name pos:start="269:37" pos:end="269:37">i</name> <operator pos:start="269:39" pos:end="269:39">&lt;</operator> <literal type="number" pos:start="269:41" pos:end="269:41">2</literal></expr>;</condition> <incr pos:start="269:44" pos:end="269:46"><expr pos:start="269:44" pos:end="269:46"><name pos:start="269:44" pos:end="269:44">i</name><operator pos:start="269:45" pos:end="269:46">++</operator></expr></incr>)</control> <block pos:start="269:49" pos:end="283:25">{<block_content pos:start="271:29" pos:end="281:69">

                            <expr_stmt pos:start="271:29" pos:end="277:68"><expr pos:start="271:29" pos:end="277:67"><call pos:start="271:29" pos:end="277:67"><name pos:start="271:29" pos:end="271:56">ff_h263_encode_motion_vector</name><argument_list pos:start="271:57" pos:end="277:67">(<argument pos:start="271:58" pos:end="271:58"><expr pos:start="271:58" pos:end="271:58"><name pos:start="271:58" pos:end="271:58">s</name></expr></argument>,

                                                         <argument pos:start="273:58" pos:end="273:93"><expr pos:start="273:58" pos:end="273:93"><name pos:start="273:58" pos:end="273:71"><name pos:start="273:58" pos:end="273:58">s</name><operator pos:start="273:59" pos:end="273:60">-&gt;</operator><name pos:start="273:61" pos:end="273:62">mv</name><index pos:start="273:63" pos:end="273:65">[<expr pos:start="273:64" pos:end="273:64"><literal type="number" pos:start="273:64" pos:end="273:64">1</literal></expr>]</index><index pos:start="273:66" pos:end="273:68">[<expr pos:start="273:67" pos:end="273:67"><name pos:start="273:67" pos:end="273:67">i</name></expr>]</index><index pos:start="273:69" pos:end="273:71">[<expr pos:start="273:70" pos:end="273:70"><literal type="number" pos:start="273:70" pos:end="273:70">0</literal></expr>]</index></name> <operator pos:start="273:73" pos:end="273:73">-</operator> <name pos:start="273:75" pos:end="273:93"><name pos:start="273:75" pos:end="273:75">s</name><operator pos:start="273:76" pos:end="273:77">-&gt;</operator><name pos:start="273:78" pos:end="273:84">last_mv</name><index pos:start="273:85" pos:end="273:87">[<expr pos:start="273:86" pos:end="273:86"><literal type="number" pos:start="273:86" pos:end="273:86">1</literal></expr>]</index><index pos:start="273:88" pos:end="273:90">[<expr pos:start="273:89" pos:end="273:89"><name pos:start="273:89" pos:end="273:89">i</name></expr>]</index><index pos:start="273:91" pos:end="273:93">[<expr pos:start="273:92" pos:end="273:92"><literal type="number" pos:start="273:92" pos:end="273:92">0</literal></expr>]</index></name></expr></argument>,

                                                         <argument pos:start="275:58" pos:end="275:97"><expr pos:start="275:58" pos:end="275:97"><name pos:start="275:58" pos:end="275:71"><name pos:start="275:58" pos:end="275:58">s</name><operator pos:start="275:59" pos:end="275:60">-&gt;</operator><name pos:start="275:61" pos:end="275:62">mv</name><index pos:start="275:63" pos:end="275:65">[<expr pos:start="275:64" pos:end="275:64"><literal type="number" pos:start="275:64" pos:end="275:64">1</literal></expr>]</index><index pos:start="275:66" pos:end="275:68">[<expr pos:start="275:67" pos:end="275:67"><name pos:start="275:67" pos:end="275:67">i</name></expr>]</index><index pos:start="275:69" pos:end="275:71">[<expr pos:start="275:70" pos:end="275:70"><literal type="number" pos:start="275:70" pos:end="275:70">1</literal></expr>]</index></name> <operator pos:start="275:73" pos:end="275:73">-</operator> <name pos:start="275:75" pos:end="275:93"><name pos:start="275:75" pos:end="275:75">s</name><operator pos:start="275:76" pos:end="275:77">-&gt;</operator><name pos:start="275:78" pos:end="275:84">last_mv</name><index pos:start="275:85" pos:end="275:87">[<expr pos:start="275:86" pos:end="275:86"><literal type="number" pos:start="275:86" pos:end="275:86">1</literal></expr>]</index><index pos:start="275:88" pos:end="275:90">[<expr pos:start="275:89" pos:end="275:89"><name pos:start="275:89" pos:end="275:89">i</name></expr>]</index><index pos:start="275:91" pos:end="275:93">[<expr pos:start="275:92" pos:end="275:92"><literal type="number" pos:start="275:92" pos:end="275:92">1</literal></expr>]</index></name> <operator pos:start="275:95" pos:end="275:95">/</operator> <literal type="number" pos:start="275:97" pos:end="275:97">2</literal></expr></argument>,

                                                         <argument pos:start="277:58" pos:end="277:66"><expr pos:start="277:58" pos:end="277:66"><name pos:start="277:58" pos:end="277:66"><name pos:start="277:58" pos:end="277:58">s</name><operator pos:start="277:59" pos:end="277:60">-&gt;</operator><name pos:start="277:61" pos:end="277:66">b_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="279:29" pos:end="279:65"><expr pos:start="279:29" pos:end="279:64"><name pos:start="279:29" pos:end="279:47"><name pos:start="279:29" pos:end="279:29">s</name><operator pos:start="279:30" pos:end="279:31">-&gt;</operator><name pos:start="279:32" pos:end="279:38">last_mv</name><index pos:start="279:39" pos:end="279:41">[<expr pos:start="279:40" pos:end="279:40"><literal type="number" pos:start="279:40" pos:end="279:40">1</literal></expr>]</index><index pos:start="279:42" pos:end="279:44">[<expr pos:start="279:43" pos:end="279:43"><name pos:start="279:43" pos:end="279:43">i</name></expr>]</index><index pos:start="279:45" pos:end="279:47">[<expr pos:start="279:46" pos:end="279:46"><literal type="number" pos:start="279:46" pos:end="279:46">0</literal></expr>]</index></name> <operator pos:start="279:49" pos:end="279:49">=</operator> <name pos:start="279:51" pos:end="279:64"><name pos:start="279:51" pos:end="279:51">s</name><operator pos:start="279:52" pos:end="279:53">-&gt;</operator><name pos:start="279:54" pos:end="279:55">mv</name><index pos:start="279:56" pos:end="279:58">[<expr pos:start="279:57" pos:end="279:57"><literal type="number" pos:start="279:57" pos:end="279:57">1</literal></expr>]</index><index pos:start="279:59" pos:end="279:61">[<expr pos:start="279:60" pos:end="279:60"><name pos:start="279:60" pos:end="279:60">i</name></expr>]</index><index pos:start="279:62" pos:end="279:64">[<expr pos:start="279:63" pos:end="279:63"><literal type="number" pos:start="279:63" pos:end="279:63">0</literal></expr>]</index></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="281:29" pos:end="281:69"><expr pos:start="281:29" pos:end="281:68"><name pos:start="281:29" pos:end="281:47"><name pos:start="281:29" pos:end="281:29">s</name><operator pos:start="281:30" pos:end="281:31">-&gt;</operator><name pos:start="281:32" pos:end="281:38">last_mv</name><index pos:start="281:39" pos:end="281:41">[<expr pos:start="281:40" pos:end="281:40"><literal type="number" pos:start="281:40" pos:end="281:40">1</literal></expr>]</index><index pos:start="281:42" pos:end="281:44">[<expr pos:start="281:43" pos:end="281:43"><name pos:start="281:43" pos:end="281:43">i</name></expr>]</index><index pos:start="281:45" pos:end="281:47">[<expr pos:start="281:46" pos:end="281:46"><literal type="number" pos:start="281:46" pos:end="281:46">1</literal></expr>]</index></name> <operator pos:start="281:49" pos:end="281:49">=</operator> <name pos:start="281:51" pos:end="281:64"><name pos:start="281:51" pos:end="281:51">s</name><operator pos:start="281:52" pos:end="281:53">-&gt;</operator><name pos:start="281:54" pos:end="281:55">mv</name><index pos:start="281:56" pos:end="281:58">[<expr pos:start="281:57" pos:end="281:57"><literal type="number" pos:start="281:57" pos:end="281:57">1</literal></expr>]</index><index pos:start="281:59" pos:end="281:61">[<expr pos:start="281:60" pos:end="281:60"><name pos:start="281:60" pos:end="281:60">i</name></expr>]</index><index pos:start="281:62" pos:end="281:64">[<expr pos:start="281:63" pos:end="281:63"><literal type="number" pos:start="281:63" pos:end="281:63">1</literal></expr>]</index></name> <operator pos:start="281:66" pos:end="281:66">*</operator> <literal type="number" pos:start="281:68" pos:end="281:68">2</literal></expr>;</expr_stmt>

                        </block_content>}</block></for>

                        <expr_stmt pos:start="285:25" pos:end="285:37"><expr pos:start="285:25" pos:end="285:36"><name pos:start="285:25" pos:end="285:34"><name pos:start="285:25" pos:end="285:25">s</name><operator pos:start="285:26" pos:end="285:27">-&gt;</operator><name pos:start="285:28" pos:end="285:34">b_count</name></name><operator pos:start="285:35" pos:end="285:36">++</operator></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="295:13" pos:end="297:47"><if pos:start="295:13" pos:end="297:47">if <condition pos:start="295:16" pos:end="295:34">(<expr pos:start="295:17" pos:end="295:33"><name pos:start="295:17" pos:end="295:33">interleaved_stats</name></expr>)</condition><block type="pseudo" pos:start="297:17" pos:end="297:47"><block_content pos:start="297:17" pos:end="297:47">

                <expr_stmt pos:start="297:17" pos:end="297:47"><expr pos:start="297:17" pos:end="297:46"><name pos:start="297:17" pos:end="297:26"><name pos:start="297:17" pos:end="297:17">s</name><operator pos:start="297:18" pos:end="297:19">-&gt;</operator><name pos:start="297:20" pos:end="297:26">mv_bits</name></name> <operator pos:start="297:28" pos:end="297:29">+=</operator> <call pos:start="297:31" pos:end="297:46"><name pos:start="297:31" pos:end="297:43">get_bits_diff</name><argument_list pos:start="297:44" pos:end="297:46">(<argument pos:start="297:45" pos:end="297:45"><expr pos:start="297:45" pos:end="297:45"><name pos:start="297:45" pos:end="297:45">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="301:13" pos:end="301:68"><expr pos:start="301:13" pos:end="301:67"><call pos:start="301:13" pos:end="301:67"><name pos:start="301:13" pos:end="301:31">mpeg4_encode_blocks</name><argument_list pos:start="301:32" pos:end="301:67">(<argument pos:start="301:33" pos:end="301:33"><expr pos:start="301:33" pos:end="301:33"><name pos:start="301:33" pos:end="301:33">s</name></expr></argument>, <argument pos:start="301:36" pos:end="301:40"><expr pos:start="301:36" pos:end="301:40"><name pos:start="301:36" pos:end="301:40">block</name></expr></argument>, <argument pos:start="301:43" pos:end="301:46"><expr pos:start="301:43" pos:end="301:46"><name pos:start="301:43" pos:end="301:46">NULL</name></expr></argument>, <argument pos:start="301:49" pos:end="301:52"><expr pos:start="301:49" pos:end="301:52"><name pos:start="301:49" pos:end="301:52">NULL</name></expr></argument>, <argument pos:start="301:55" pos:end="301:58"><expr pos:start="301:55" pos:end="301:58"><name pos:start="301:55" pos:end="301:58">NULL</name></expr></argument>, <argument pos:start="301:61" pos:end="301:66"><expr pos:start="301:61" pos:end="301:66"><operator pos:start="301:61" pos:end="301:61">&amp;</operator><name pos:start="301:62" pos:end="301:66"><name pos:start="301:62" pos:end="301:62">s</name><operator pos:start="301:63" pos:end="301:64">-&gt;</operator><name pos:start="301:65" pos:end="301:66">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="305:13" pos:end="307:50"><if pos:start="305:13" pos:end="307:50">if <condition pos:start="305:16" pos:end="305:34">(<expr pos:start="305:17" pos:end="305:33"><name pos:start="305:17" pos:end="305:33">interleaved_stats</name></expr>)</condition><block type="pseudo" pos:start="307:17" pos:end="307:50"><block_content pos:start="307:17" pos:end="307:50">

                <expr_stmt pos:start="307:17" pos:end="307:50"><expr pos:start="307:17" pos:end="307:49"><name pos:start="307:17" pos:end="307:29"><name pos:start="307:17" pos:end="307:17">s</name><operator pos:start="307:18" pos:end="307:19">-&gt;</operator><name pos:start="307:20" pos:end="307:29">p_tex_bits</name></name> <operator pos:start="307:31" pos:end="307:32">+=</operator> <call pos:start="307:34" pos:end="307:49"><name pos:start="307:34" pos:end="307:46">get_bits_diff</name><argument_list pos:start="307:47" pos:end="307:49">(<argument pos:start="307:48" pos:end="307:48"><expr pos:start="307:48" pos:end="307:48"><name pos:start="307:48" pos:end="307:48">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="309:11" pos:end="621:9">else <block pos:start="309:16" pos:end="621:9">{<block_content pos:start="311:13" pos:end="619:25"> <comment type="block" pos:start="309:18" pos:end="309:54">/* s-&gt;pict_type==AV_PICTURE_TYPE_B */</comment>

            <expr_stmt pos:start="311:13" pos:end="311:58"><expr pos:start="311:13" pos:end="311:57"><name pos:start="311:13" pos:end="311:15">cbp</name> <operator pos:start="311:17" pos:end="311:17">=</operator> <call pos:start="311:19" pos:end="311:57"><name pos:start="311:19" pos:end="311:27">get_p_cbp</name><argument_list pos:start="311:28" pos:end="311:57">(<argument pos:start="311:29" pos:end="311:29"><expr pos:start="311:29" pos:end="311:29"><name pos:start="311:29" pos:end="311:29">s</name></expr></argument>, <argument pos:start="311:32" pos:end="311:36"><expr pos:start="311:32" pos:end="311:36"><name pos:start="311:32" pos:end="311:36">block</name></expr></argument>, <argument pos:start="311:39" pos:end="311:46"><expr pos:start="311:39" pos:end="311:46"><name pos:start="311:39" pos:end="311:46">motion_x</name></expr></argument>, <argument pos:start="311:49" pos:end="311:56"><expr pos:start="311:49" pos:end="311:56"><name pos:start="311:49" pos:end="311:56">motion_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="315:13" pos:end="421:13"><if pos:start="315:13" pos:end="421:13">if <condition pos:start="315:16" pos:end="317:44">(<expr pos:start="315:17" pos:end="317:43"><operator pos:start="315:17" pos:end="315:17">(</operator><name pos:start="315:18" pos:end="315:20">cbp</name> <operator pos:start="315:22" pos:end="315:22">|</operator> <name pos:start="315:24" pos:end="315:31">motion_x</name> <operator pos:start="315:33" pos:end="315:33">|</operator> <name pos:start="315:35" pos:end="315:42">motion_y</name> <operator pos:start="315:44" pos:end="315:44">|</operator> <name pos:start="315:46" pos:end="315:54"><name pos:start="315:46" pos:end="315:46">s</name><operator pos:start="315:47" pos:end="315:48">-&gt;</operator><name pos:start="315:49" pos:end="315:54">dquant</name></name><operator pos:start="315:55" pos:end="315:55">)</operator> <operator pos:start="315:57" pos:end="315:58">==</operator> <literal type="number" pos:start="315:60" pos:end="315:60">0</literal> <operator pos:start="315:62" pos:end="315:63">&amp;&amp;</operator>

                <name pos:start="317:17" pos:end="317:26"><name pos:start="317:17" pos:end="317:17">s</name><operator pos:start="317:18" pos:end="317:19">-&gt;</operator><name pos:start="317:20" pos:end="317:26">mv_type</name></name> <operator pos:start="317:28" pos:end="317:29">==</operator> <name pos:start="317:31" pos:end="317:43">MV_TYPE_16X16</name></expr>)</condition> <block pos:start="317:46" pos:end="421:13">{<block_content pos:start="325:17" pos:end="419:17">

                <comment type="block" pos:start="319:17" pos:end="323:65">/* check if the B frames can skip it too, as we must skip it

                 * if we skip here why didn't they just compress

                 * the skip-mb bits instead of reusing them ?! */</comment>

                <if_stmt pos:start="325:17" pos:end="393:38"><if pos:start="325:17" pos:end="391:17">if <condition pos:start="325:20" pos:end="325:40">(<expr pos:start="325:21" pos:end="325:39"><name pos:start="325:21" pos:end="325:35"><name pos:start="325:21" pos:end="325:21">s</name><operator pos:start="325:22" pos:end="325:23">-&gt;</operator><name pos:start="325:24" pos:end="325:35">max_b_frames</name></name> <operator pos:start="325:37" pos:end="325:37">&gt;</operator> <literal type="number" pos:start="325:39" pos:end="325:39">0</literal></expr>)</condition> <block pos:start="325:42" pos:end="391:17">{<block_content pos:start="327:21" pos:end="389:21">

                    <decl_stmt pos:start="327:21" pos:end="327:26"><decl pos:start="327:21" pos:end="327:25"><type pos:start="327:21" pos:end="327:23"><name pos:start="327:21" pos:end="327:23">int</name></type> <name pos:start="327:25" pos:end="327:25">i</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="329:21" pos:end="329:37"><decl pos:start="329:21" pos:end="329:25"><type pos:start="329:21" pos:end="329:23"><name pos:start="329:21" pos:end="329:23">int</name></type> <name pos:start="329:25" pos:end="329:25">x</name></decl>, <decl pos:start="329:28" pos:end="329:28"><type ref="prev" pos:start="329:21" pos:end="329:23"/><name pos:start="329:28" pos:end="329:28">y</name></decl>, <decl pos:start="329:31" pos:end="329:36"><type ref="prev" pos:start="329:21" pos:end="329:23"/><name pos:start="329:31" pos:end="329:36">offset</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="331:21" pos:end="331:35"><decl pos:start="331:21" pos:end="331:34"><type pos:start="331:21" pos:end="331:29"><name pos:start="331:21" pos:end="331:27">uint8_t</name> <modifier pos:start="331:29" pos:end="331:29">*</modifier></type><name pos:start="331:30" pos:end="331:34">p_pic</name></decl>;</decl_stmt>



                    <expr_stmt pos:start="335:21" pos:end="335:37"><expr pos:start="335:21" pos:end="335:36"><name pos:start="335:21" pos:end="335:21">x</name> <operator pos:start="335:23" pos:end="335:23">=</operator> <name pos:start="335:25" pos:end="335:31"><name pos:start="335:25" pos:end="335:25">s</name><operator pos:start="335:26" pos:end="335:27">-&gt;</operator><name pos:start="335:28" pos:end="335:31">mb_x</name></name> <operator pos:start="335:33" pos:end="335:33">*</operator> <literal type="number" pos:start="335:35" pos:end="335:36">16</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="337:21" pos:end="337:37"><expr pos:start="337:21" pos:end="337:36"><name pos:start="337:21" pos:end="337:21">y</name> <operator pos:start="337:23" pos:end="337:23">=</operator> <name pos:start="337:25" pos:end="337:31"><name pos:start="337:25" pos:end="337:25">s</name><operator pos:start="337:26" pos:end="337:27">-&gt;</operator><name pos:start="337:28" pos:end="337:31">mb_y</name></name> <operator pos:start="337:33" pos:end="337:33">*</operator> <literal type="number" pos:start="337:35" pos:end="337:36">16</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="339:21" pos:end="341:42"><if pos:start="339:21" pos:end="341:42">if <condition pos:start="339:24" pos:end="339:42">(<expr pos:start="339:25" pos:end="339:41"><name pos:start="339:25" pos:end="339:25">x</name> <operator pos:start="339:27" pos:end="339:27">+</operator> <literal type="number" pos:start="339:29" pos:end="339:30">16</literal> <operator pos:start="339:32" pos:end="339:32">&gt;</operator> <name pos:start="339:34" pos:end="339:41"><name pos:start="339:34" pos:end="339:34">s</name><operator pos:start="339:35" pos:end="339:36">-&gt;</operator><name pos:start="339:37" pos:end="339:41">width</name></name></expr>)</condition><block type="pseudo" pos:start="341:25" pos:end="341:42"><block_content pos:start="341:25" pos:end="341:42">

                        <expr_stmt pos:start="341:25" pos:end="341:42"><expr pos:start="341:25" pos:end="341:41"><name pos:start="341:25" pos:end="341:25">x</name> <operator pos:start="341:27" pos:end="341:27">=</operator> <name pos:start="341:29" pos:end="341:36"><name pos:start="341:29" pos:end="341:29">s</name><operator pos:start="341:30" pos:end="341:31">-&gt;</operator><name pos:start="341:32" pos:end="341:36">width</name></name> <operator pos:start="341:38" pos:end="341:38">-</operator> <literal type="number" pos:start="341:40" pos:end="341:41">16</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="343:21" pos:end="345:43"><if pos:start="343:21" pos:end="345:43">if <condition pos:start="343:24" pos:end="343:43">(<expr pos:start="343:25" pos:end="343:42"><name pos:start="343:25" pos:end="343:25">y</name> <operator pos:start="343:27" pos:end="343:27">+</operator> <literal type="number" pos:start="343:29" pos:end="343:30">16</literal> <operator pos:start="343:32" pos:end="343:32">&gt;</operator> <name pos:start="343:34" pos:end="343:42"><name pos:start="343:34" pos:end="343:34">s</name><operator pos:start="343:35" pos:end="343:36">-&gt;</operator><name pos:start="343:37" pos:end="343:42">height</name></name></expr>)</condition><block type="pseudo" pos:start="345:25" pos:end="345:43"><block_content pos:start="345:25" pos:end="345:43">

                        <expr_stmt pos:start="345:25" pos:end="345:43"><expr pos:start="345:25" pos:end="345:42"><name pos:start="345:25" pos:end="345:25">y</name> <operator pos:start="345:27" pos:end="345:27">=</operator> <name pos:start="345:29" pos:end="345:37"><name pos:start="345:29" pos:end="345:29">s</name><operator pos:start="345:30" pos:end="345:31">-&gt;</operator><name pos:start="345:32" pos:end="345:37">height</name></name> <operator pos:start="345:39" pos:end="345:39">-</operator> <literal type="number" pos:start="345:41" pos:end="345:42">16</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



                    <expr_stmt pos:start="349:21" pos:end="349:49"><expr pos:start="349:21" pos:end="349:48"><name pos:start="349:21" pos:end="349:26">offset</name> <operator pos:start="349:28" pos:end="349:28">=</operator> <name pos:start="349:30" pos:end="349:30">x</name> <operator pos:start="349:32" pos:end="349:32">+</operator> <name pos:start="349:34" pos:end="349:34">y</name> <operator pos:start="349:36" pos:end="349:36">*</operator> <name pos:start="349:38" pos:end="349:48"><name pos:start="349:38" pos:end="349:38">s</name><operator pos:start="349:39" pos:end="349:40">-&gt;</operator><name pos:start="349:41" pos:end="349:48">linesize</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="351:21" pos:end="351:63"><expr pos:start="351:21" pos:end="351:62"><name pos:start="351:21" pos:end="351:25">p_pic</name>  <operator pos:start="351:28" pos:end="351:28">=</operator> <name pos:start="351:30" pos:end="351:53"><name pos:start="351:30" pos:end="351:30">s</name><operator pos:start="351:31" pos:end="351:32">-&gt;</operator><name pos:start="351:33" pos:end="351:43">new_picture</name><operator pos:start="351:44" pos:end="351:44">.</operator><name pos:start="351:45" pos:end="351:45">f</name><operator pos:start="351:46" pos:end="351:46">.</operator><name pos:start="351:47" pos:end="351:50">data</name><index pos:start="351:51" pos:end="351:53">[<expr pos:start="351:52" pos:end="351:52"><literal type="number" pos:start="351:52" pos:end="351:52">0</literal></expr>]</index></name> <operator pos:start="351:55" pos:end="351:55">+</operator> <name pos:start="351:57" pos:end="351:62">offset</name></expr>;</expr_stmt>



                    <expr_stmt pos:start="355:21" pos:end="355:38"><expr pos:start="355:21" pos:end="355:37"><name pos:start="355:21" pos:end="355:33"><name pos:start="355:21" pos:end="355:21">s</name><operator pos:start="355:22" pos:end="355:23">-&gt;</operator><name pos:start="355:24" pos:end="355:33">mb_skipped</name></name> <operator pos:start="355:35" pos:end="355:35">=</operator> <literal type="number" pos:start="355:37" pos:end="355:37">1</literal></expr>;</expr_stmt>

                    <for pos:start="357:21" pos:end="389:21">for <control pos:start="357:25" pos:end="357:57">(<init pos:start="357:26" pos:end="357:31"><expr pos:start="357:26" pos:end="357:30"><name pos:start="357:26" pos:end="357:26">i</name> <operator pos:start="357:28" pos:end="357:28">=</operator> <literal type="number" pos:start="357:30" pos:end="357:30">0</literal></expr>;</init> <condition pos:start="357:33" pos:end="357:52"><expr pos:start="357:33" pos:end="357:51"><name pos:start="357:33" pos:end="357:33">i</name> <operator pos:start="357:35" pos:end="357:35">&lt;</operator> <name pos:start="357:37" pos:end="357:51"><name pos:start="357:37" pos:end="357:37">s</name><operator pos:start="357:38" pos:end="357:39">-&gt;</operator><name pos:start="357:40" pos:end="357:51">max_b_frames</name></name></expr>;</condition> <incr pos:start="357:54" pos:end="357:56"><expr pos:start="357:54" pos:end="357:56"><name pos:start="357:54" pos:end="357:54">i</name><operator pos:start="357:55" pos:end="357:56">++</operator></expr></incr>)</control> <block pos:start="357:59" pos:end="389:21">{<block_content pos:start="359:25" pos:end="387:25">

                        <decl_stmt pos:start="359:25" pos:end="359:39"><decl pos:start="359:25" pos:end="359:38"><type pos:start="359:25" pos:end="359:33"><name pos:start="359:25" pos:end="359:31">uint8_t</name> <modifier pos:start="359:33" pos:end="359:33">*</modifier></type><name pos:start="359:34" pos:end="359:38">b_pic</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="361:25" pos:end="361:33"><decl pos:start="361:25" pos:end="361:32"><type pos:start="361:25" pos:end="361:27"><name pos:start="361:25" pos:end="361:27">int</name></type> <name pos:start="361:29" pos:end="361:32">diff</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="363:25" pos:end="363:73"><decl pos:start="363:25" pos:end="363:72"><type pos:start="363:25" pos:end="363:33"><name pos:start="363:25" pos:end="363:31">Picture</name> <modifier pos:start="363:33" pos:end="363:33">*</modifier></type><name pos:start="363:34" pos:end="363:36">pic</name> <init pos:start="363:38" pos:end="363:72">= <expr pos:start="363:40" pos:end="363:72"><name pos:start="363:40" pos:end="363:72"><name pos:start="363:40" pos:end="363:40">s</name><operator pos:start="363:41" pos:end="363:42">-&gt;</operator><name pos:start="363:43" pos:end="363:65">reordered_input_picture</name><index pos:start="363:66" pos:end="363:72">[<expr pos:start="363:67" pos:end="363:71"><name pos:start="363:67" pos:end="363:67">i</name> <operator pos:start="363:69" pos:end="363:69">+</operator> <literal type="number" pos:start="363:71" pos:end="363:71">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



                        <if_stmt pos:start="367:25" pos:end="369:34"><if pos:start="367:25" pos:end="369:34">if <condition pos:start="367:28" pos:end="367:74">(<expr pos:start="367:29" pos:end="367:73"><operator pos:start="367:29" pos:end="367:29">!</operator><name pos:start="367:30" pos:end="367:32">pic</name> <operator pos:start="367:34" pos:end="367:35">||</operator> <name pos:start="367:37" pos:end="367:52"><name pos:start="367:37" pos:end="367:39">pic</name><operator pos:start="367:40" pos:end="367:41">-&gt;</operator><name pos:start="367:42" pos:end="367:42">f</name><operator pos:start="367:43" pos:end="367:43">.</operator><name pos:start="367:44" pos:end="367:52">pict_type</name></name> <operator pos:start="367:54" pos:end="367:55">!=</operator> <name pos:start="367:57" pos:end="367:73">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="369:29" pos:end="369:34"><block_content pos:start="369:29" pos:end="369:34">

                            <break pos:start="369:29" pos:end="369:34">break;</break></block_content></block></if></if_stmt>



                        <expr_stmt pos:start="373:25" pos:end="373:56"><expr pos:start="373:25" pos:end="373:55"><name pos:start="373:25" pos:end="373:29">b_pic</name> <operator pos:start="373:31" pos:end="373:31">=</operator> <name pos:start="373:33" pos:end="373:46"><name pos:start="373:33" pos:end="373:35">pic</name><operator pos:start="373:36" pos:end="373:37">-&gt;</operator><name pos:start="373:38" pos:end="373:38">f</name><operator pos:start="373:39" pos:end="373:39">.</operator><name pos:start="373:40" pos:end="373:43">data</name><index pos:start="373:44" pos:end="373:46">[<expr pos:start="373:45" pos:end="373:45"><literal type="number" pos:start="373:45" pos:end="373:45">0</literal></expr>]</index></name> <operator pos:start="373:48" pos:end="373:48">+</operator> <name pos:start="373:50" pos:end="373:55">offset</name></expr>;</expr_stmt>

                        <if_stmt pos:start="375:25" pos:end="377:52"><if pos:start="375:25" pos:end="377:52">if <condition pos:start="375:28" pos:end="375:41">(<expr pos:start="375:29" pos:end="375:40"><operator pos:start="375:29" pos:end="375:29">!</operator><name pos:start="375:30" pos:end="375:40"><name pos:start="375:30" pos:end="375:32">pic</name><operator pos:start="375:33" pos:end="375:34">-&gt;</operator><name pos:start="375:35" pos:end="375:40">shared</name></name></expr>)</condition><block type="pseudo" pos:start="377:29" pos:end="377:52"><block_content pos:start="377:29" pos:end="377:52">

                            <expr_stmt pos:start="377:29" pos:end="377:52"><expr pos:start="377:29" pos:end="377:51"><name pos:start="377:29" pos:end="377:33">b_pic</name> <operator pos:start="377:35" pos:end="377:36">+=</operator> <name pos:start="377:38" pos:end="377:51">INPLACE_OFFSET</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="379:25" pos:end="379:82"><expr pos:start="379:25" pos:end="379:81"><name pos:start="379:25" pos:end="379:28">diff</name> <operator pos:start="379:30" pos:end="379:30">=</operator> <name pos:start="379:32" pos:end="379:44"><name pos:start="379:32" pos:end="379:32">s</name><operator pos:start="379:33" pos:end="379:34">-&gt;</operator><name pos:start="379:35" pos:end="379:37">dsp</name><operator pos:start="379:38" pos:end="379:38">.</operator><name pos:start="379:39" pos:end="379:41">sad</name><index pos:start="379:42" pos:end="379:44">[<expr pos:start="379:43" pos:end="379:43"><literal type="number" pos:start="379:43" pos:end="379:43">0</literal></expr>]</index></name><operator pos:start="379:45" pos:end="379:45">(</operator><name pos:start="379:46" pos:end="379:49">NULL</name><operator pos:start="379:50" pos:end="379:50">,</operator> <name pos:start="379:52" pos:end="379:56">p_pic</name><operator pos:start="379:57" pos:end="379:57">,</operator> <name pos:start="379:59" pos:end="379:63">b_pic</name><operator pos:start="379:64" pos:end="379:64">,</operator> <name pos:start="379:66" pos:end="379:76"><name pos:start="379:66" pos:end="379:66">s</name><operator pos:start="379:67" pos:end="379:68">-&gt;</operator><name pos:start="379:69" pos:end="379:76">linesize</name></name><operator pos:start="379:77" pos:end="379:77">,</operator> <literal type="number" pos:start="379:79" pos:end="379:80">16</literal><operator pos:start="379:81" pos:end="379:81">)</operator></expr>;</expr_stmt>

                        <if_stmt pos:start="381:25" pos:end="387:25"><if pos:start="381:25" pos:end="387:25">if <condition pos:start="381:28" pos:end="381:50">(<expr pos:start="381:29" pos:end="381:49"><name pos:start="381:29" pos:end="381:32">diff</name> <operator pos:start="381:34" pos:end="381:34">&gt;</operator> <name pos:start="381:36" pos:end="381:44"><name pos:start="381:36" pos:end="381:36">s</name><operator pos:start="381:37" pos:end="381:38">-&gt;</operator><name pos:start="381:39" pos:end="381:44">qscale</name></name> <operator pos:start="381:46" pos:end="381:46">*</operator> <literal type="number" pos:start="381:48" pos:end="381:49">70</literal></expr>)</condition> <block pos:start="381:52" pos:end="387:25">{<block_content pos:start="383:29" pos:end="385:34">  <comment type="line" pos:start="381:55" pos:end="381:87">// FIXME check that 70 is optimal</comment>

                            <expr_stmt pos:start="383:29" pos:end="383:46"><expr pos:start="383:29" pos:end="383:45"><name pos:start="383:29" pos:end="383:41"><name pos:start="383:29" pos:end="383:29">s</name><operator pos:start="383:30" pos:end="383:31">-&gt;</operator><name pos:start="383:32" pos:end="383:41">mb_skipped</name></name> <operator pos:start="383:43" pos:end="383:43">=</operator> <literal type="number" pos:start="383:45" pos:end="383:45">0</literal></expr>;</expr_stmt>

                            <break pos:start="385:29" pos:end="385:34">break;</break>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if> <else pos:start="391:19" pos:end="393:38">else<block type="pseudo" pos:start="393:21" pos:end="393:38"><block_content pos:start="393:21" pos:end="393:38">

                    <expr_stmt pos:start="393:21" pos:end="393:38"><expr pos:start="393:21" pos:end="393:37"><name pos:start="393:21" pos:end="393:33"><name pos:start="393:21" pos:end="393:21">s</name><operator pos:start="393:22" pos:end="393:23">-&gt;</operator><name pos:start="393:24" pos:end="393:33">mb_skipped</name></name> <operator pos:start="393:35" pos:end="393:35">=</operator> <literal type="number" pos:start="393:37" pos:end="393:37">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <if_stmt pos:start="397:17" pos:end="419:17"><if pos:start="397:17" pos:end="419:17">if <condition pos:start="397:20" pos:end="397:39">(<expr pos:start="397:21" pos:end="397:38"><name pos:start="397:21" pos:end="397:33"><name pos:start="397:21" pos:end="397:21">s</name><operator pos:start="397:22" pos:end="397:23">-&gt;</operator><name pos:start="397:24" pos:end="397:33">mb_skipped</name></name> <operator pos:start="397:35" pos:end="397:36">==</operator> <literal type="number" pos:start="397:38" pos:end="397:38">1</literal></expr>)</condition> <block pos:start="397:41" pos:end="419:17">{<block_content pos:start="401:21" pos:end="417:27">

                    <comment type="block" pos:start="399:21" pos:end="399:41">/* skip macroblock */</comment>

                    <expr_stmt pos:start="401:21" pos:end="401:43"><expr pos:start="401:21" pos:end="401:42"><call pos:start="401:21" pos:end="401:42"><name pos:start="401:21" pos:end="401:28">put_bits</name><argument_list pos:start="401:29" pos:end="401:42">(<argument pos:start="401:30" pos:end="401:35"><expr pos:start="401:30" pos:end="401:35"><operator pos:start="401:30" pos:end="401:30">&amp;</operator><name pos:start="401:31" pos:end="401:35"><name pos:start="401:31" pos:end="401:31">s</name><operator pos:start="401:32" pos:end="401:33">-&gt;</operator><name pos:start="401:34" pos:end="401:35">pb</name></name></expr></argument>, <argument pos:start="401:38" pos:end="401:38"><expr pos:start="401:38" pos:end="401:38"><literal type="number" pos:start="401:38" pos:end="401:38">1</literal></expr></argument>, <argument pos:start="401:41" pos:end="401:41"><expr pos:start="401:41" pos:end="401:41"><literal type="number" pos:start="401:41" pos:end="401:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <if_stmt pos:start="405:21" pos:end="411:21"><if pos:start="405:21" pos:end="411:21">if <condition pos:start="405:24" pos:end="405:42">(<expr pos:start="405:25" pos:end="405:41"><name pos:start="405:25" pos:end="405:41">interleaved_stats</name></expr>)</condition> <block pos:start="405:44" pos:end="411:21">{<block_content pos:start="407:25" pos:end="409:39">

                        <expr_stmt pos:start="407:25" pos:end="407:39"><expr pos:start="407:25" pos:end="407:38"><name pos:start="407:25" pos:end="407:36"><name pos:start="407:25" pos:end="407:25">s</name><operator pos:start="407:26" pos:end="407:27">-&gt;</operator><name pos:start="407:28" pos:end="407:36">misc_bits</name></name><operator pos:start="407:37" pos:end="407:38">++</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="409:25" pos:end="409:39"><expr pos:start="409:25" pos:end="409:38"><name pos:start="409:25" pos:end="409:36"><name pos:start="409:25" pos:end="409:25">s</name><operator pos:start="409:26" pos:end="409:27">-&gt;</operator><name pos:start="409:28" pos:end="409:36">last_bits</name></name><operator pos:start="409:37" pos:end="409:38">++</operator></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="413:21" pos:end="413:36"><expr pos:start="413:21" pos:end="413:35"><name pos:start="413:21" pos:end="413:33"><name pos:start="413:21" pos:end="413:21">s</name><operator pos:start="413:22" pos:end="413:23">-&gt;</operator><name pos:start="413:24" pos:end="413:33">skip_count</name></name><operator pos:start="413:34" pos:end="413:35">++</operator></expr>;</expr_stmt>



                    <return pos:start="417:21" pos:end="417:27">return;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="425:13" pos:end="425:35"><expr pos:start="425:13" pos:end="425:34"><call pos:start="425:13" pos:end="425:34"><name pos:start="425:13" pos:end="425:20">put_bits</name><argument_list pos:start="425:21" pos:end="425:34">(<argument pos:start="425:22" pos:end="425:27"><expr pos:start="425:22" pos:end="425:27"><operator pos:start="425:22" pos:end="425:22">&amp;</operator><name pos:start="425:23" pos:end="425:27"><name pos:start="425:23" pos:end="425:23">s</name><operator pos:start="425:24" pos:end="425:25">-&gt;</operator><name pos:start="425:26" pos:end="425:27">pb</name></name></expr></argument>, <argument pos:start="425:30" pos:end="425:30"><expr pos:start="425:30" pos:end="425:30"><literal type="number" pos:start="425:30" pos:end="425:30">1</literal></expr></argument>, <argument pos:start="425:33" pos:end="425:33"><expr pos:start="425:33" pos:end="425:33"><literal type="number" pos:start="425:33" pos:end="425:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="block" pos:start="425:41" pos:end="425:54">/* mb coded */</comment>

            <expr_stmt pos:start="427:13" pos:end="427:28"><expr pos:start="427:13" pos:end="427:27"><name pos:start="427:13" pos:end="427:16">cbpc</name>  <operator pos:start="427:19" pos:end="427:19">=</operator> <name pos:start="427:21" pos:end="427:23">cbp</name> <operator pos:start="427:25" pos:end="427:25">&amp;</operator> <literal type="number" pos:start="427:27" pos:end="427:27">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="429:13" pos:end="429:29"><expr pos:start="429:13" pos:end="429:28"><name pos:start="429:13" pos:end="429:16">cbpy</name>  <operator pos:start="429:19" pos:end="429:19">=</operator> <name pos:start="429:21" pos:end="429:23">cbp</name> <operator pos:start="429:25" pos:end="429:26">&gt;&gt;</operator> <literal type="number" pos:start="429:28" pos:end="429:28">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="431:13" pos:end="431:24"><expr pos:start="431:13" pos:end="431:23"><name pos:start="431:13" pos:end="431:16">cbpy</name> <operator pos:start="431:18" pos:end="431:19">^=</operator> <literal type="number" pos:start="431:21" pos:end="431:23">0xf</literal></expr>;</expr_stmt>

            <if_stmt pos:start="433:13" pos:end="599:13"><if pos:start="433:13" pos:end="487:13">if <condition pos:start="433:16" pos:end="433:44">(<expr pos:start="433:17" pos:end="433:43"><name pos:start="433:17" pos:end="433:26"><name pos:start="433:17" pos:end="433:17">s</name><operator pos:start="433:18" pos:end="433:19">-&gt;</operator><name pos:start="433:20" pos:end="433:26">mv_type</name></name> <operator pos:start="433:28" pos:end="433:29">==</operator> <name pos:start="433:31" pos:end="433:43">MV_TYPE_16X16</name></expr>)</condition> <block pos:start="433:46" pos:end="487:13">{<block_content pos:start="435:17" pos:end="485:56">

                <if_stmt pos:start="435:17" pos:end="437:30"><if pos:start="435:17" pos:end="437:30">if <condition pos:start="435:20" pos:end="435:30">(<expr pos:start="435:21" pos:end="435:29"><name pos:start="435:21" pos:end="435:29"><name pos:start="435:21" pos:end="435:21">s</name><operator pos:start="435:22" pos:end="435:23">-&gt;</operator><name pos:start="435:24" pos:end="435:29">dquant</name></name></expr>)</condition><block type="pseudo" pos:start="437:21" pos:end="437:30"><block_content pos:start="437:21" pos:end="437:30">

                    <expr_stmt pos:start="437:21" pos:end="437:30"><expr pos:start="437:21" pos:end="437:29"><name pos:start="437:21" pos:end="437:24">cbpc</name> <operator pos:start="437:26" pos:end="437:27">+=</operator> <literal type="number" pos:start="437:29" pos:end="437:29">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="439:17" pos:end="443:57"><expr pos:start="439:17" pos:end="443:56"><call pos:start="439:17" pos:end="443:56"><name pos:start="439:17" pos:end="439:24">put_bits</name><argument_list pos:start="439:25" pos:end="443:56">(<argument pos:start="439:26" pos:end="439:31"><expr pos:start="439:26" pos:end="439:31"><operator pos:start="439:26" pos:end="439:26">&amp;</operator><name pos:start="439:27" pos:end="439:31"><name pos:start="439:27" pos:end="439:27">s</name><operator pos:start="439:28" pos:end="439:29">-&gt;</operator><name pos:start="439:30" pos:end="439:31">pb</name></name></expr></argument>,

                         <argument pos:start="441:26" pos:end="441:55"><expr pos:start="441:26" pos:end="441:55"><name pos:start="441:26" pos:end="441:55"><name pos:start="441:26" pos:end="441:49">ff_h263_inter_MCBPC_bits</name><index pos:start="441:50" pos:end="441:55">[<expr pos:start="441:51" pos:end="441:54"><name pos:start="441:51" pos:end="441:54">cbpc</name></expr>]</index></name></expr></argument>,

                         <argument pos:start="443:26" pos:end="443:55"><expr pos:start="443:26" pos:end="443:55"><name pos:start="443:26" pos:end="443:55"><name pos:start="443:26" pos:end="443:49">ff_h263_inter_MCBPC_code</name><index pos:start="443:50" pos:end="443:55">[<expr pos:start="443:51" pos:end="443:54"><name pos:start="443:51" pos:end="443:54">cbpc</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="447:17" pos:end="447:84"><expr pos:start="447:17" pos:end="447:83"><call pos:start="447:17" pos:end="447:83"><name pos:start="447:17" pos:end="447:24">put_bits</name><argument_list pos:start="447:25" pos:end="447:83">(<argument pos:start="447:26" pos:end="447:28"><expr pos:start="447:26" pos:end="447:28"><name pos:start="447:26" pos:end="447:28">pb2</name></expr></argument>, <argument pos:start="447:31" pos:end="447:55"><expr pos:start="447:31" pos:end="447:55"><name pos:start="447:31" pos:end="447:55"><name pos:start="447:31" pos:end="447:46">ff_h263_cbpy_tab</name><index pos:start="447:47" pos:end="447:52">[<expr pos:start="447:48" pos:end="447:51"><name pos:start="447:48" pos:end="447:51">cbpy</name></expr>]</index><index pos:start="447:53" pos:end="447:55">[<expr pos:start="447:54" pos:end="447:54"><literal type="number" pos:start="447:54" pos:end="447:54">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="447:58" pos:end="447:82"><expr pos:start="447:58" pos:end="447:82"><name pos:start="447:58" pos:end="447:82"><name pos:start="447:58" pos:end="447:73">ff_h263_cbpy_tab</name><index pos:start="447:74" pos:end="447:79">[<expr pos:start="447:75" pos:end="447:78"><name pos:start="447:75" pos:end="447:78">cbpy</name></expr>]</index><index pos:start="447:80" pos:end="447:82">[<expr pos:start="447:81" pos:end="447:81"><literal type="number" pos:start="447:81" pos:end="447:81">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="449:17" pos:end="451:65"><if pos:start="449:17" pos:end="451:65">if <condition pos:start="449:20" pos:end="449:30">(<expr pos:start="449:21" pos:end="449:29"><name pos:start="449:21" pos:end="449:29"><name pos:start="449:21" pos:end="449:21">s</name><operator pos:start="449:22" pos:end="449:23">-&gt;</operator><name pos:start="449:24" pos:end="449:29">dquant</name></name></expr>)</condition><block type="pseudo" pos:start="451:21" pos:end="451:65"><block_content pos:start="451:21" pos:end="451:65">

                    <expr_stmt pos:start="451:21" pos:end="451:65"><expr pos:start="451:21" pos:end="451:64"><call pos:start="451:21" pos:end="451:64"><name pos:start="451:21" pos:end="451:28">put_bits</name><argument_list pos:start="451:29" pos:end="451:64">(<argument pos:start="451:30" pos:end="451:32"><expr pos:start="451:30" pos:end="451:32"><name pos:start="451:30" pos:end="451:32">pb2</name></expr></argument>, <argument pos:start="451:35" pos:end="451:35"><expr pos:start="451:35" pos:end="451:35"><literal type="number" pos:start="451:35" pos:end="451:35">2</literal></expr></argument>, <argument pos:start="451:38" pos:end="451:63"><expr pos:start="451:38" pos:end="451:63"><name pos:start="451:38" pos:end="451:63"><name pos:start="451:38" pos:end="451:48">dquant_code</name><index pos:start="451:49" pos:end="451:63">[<expr pos:start="451:50" pos:end="451:62"><name pos:start="451:50" pos:end="451:58"><name pos:start="451:50" pos:end="451:50">s</name><operator pos:start="451:51" pos:end="451:52">-&gt;</operator><name pos:start="451:53" pos:end="451:58">dquant</name></name> <operator pos:start="451:60" pos:end="451:60">+</operator> <literal type="number" pos:start="451:62" pos:end="451:62">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <if_stmt pos:start="455:17" pos:end="463:17"><if pos:start="455:17" pos:end="463:17">if <condition pos:start="455:20" pos:end="455:45">(<expr pos:start="455:21" pos:end="455:44"><operator pos:start="455:21" pos:end="455:21">!</operator><name pos:start="455:22" pos:end="455:44"><name pos:start="455:22" pos:end="455:22">s</name><operator pos:start="455:23" pos:end="455:24">-&gt;</operator><name pos:start="455:25" pos:end="455:44">progressive_sequence</name></name></expr>)</condition> <block pos:start="455:47" pos:end="463:17">{<block_content pos:start="457:21" pos:end="461:40">

                    <if_stmt pos:start="457:21" pos:end="459:60"><if pos:start="457:21" pos:end="459:60">if <condition pos:start="457:24" pos:end="457:28">(<expr pos:start="457:25" pos:end="457:27"><name pos:start="457:25" pos:end="457:27">cbp</name></expr>)</condition><block type="pseudo" pos:start="459:25" pos:end="459:60"><block_content pos:start="459:25" pos:end="459:60">

                        <expr_stmt pos:start="459:25" pos:end="459:60"><expr pos:start="459:25" pos:end="459:59"><call pos:start="459:25" pos:end="459:59"><name pos:start="459:25" pos:end="459:32">put_bits</name><argument_list pos:start="459:33" pos:end="459:59">(<argument pos:start="459:34" pos:end="459:36"><expr pos:start="459:34" pos:end="459:36"><name pos:start="459:34" pos:end="459:36">pb2</name></expr></argument>, <argument pos:start="459:39" pos:end="459:39"><expr pos:start="459:39" pos:end="459:39"><literal type="number" pos:start="459:39" pos:end="459:39">1</literal></expr></argument>, <argument pos:start="459:42" pos:end="459:58"><expr pos:start="459:42" pos:end="459:58"><name pos:start="459:42" pos:end="459:58"><name pos:start="459:42" pos:end="459:42">s</name><operator pos:start="459:43" pos:end="459:44">-&gt;</operator><name pos:start="459:45" pos:end="459:58">interlaced_dct</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="461:21" pos:end="461:40"><expr pos:start="461:21" pos:end="461:39"><call pos:start="461:21" pos:end="461:39"><name pos:start="461:21" pos:end="461:28">put_bits</name><argument_list pos:start="461:29" pos:end="461:39">(<argument pos:start="461:30" pos:end="461:32"><expr pos:start="461:30" pos:end="461:32"><name pos:start="461:30" pos:end="461:32">pb2</name></expr></argument>, <argument pos:start="461:35" pos:end="461:35"><expr pos:start="461:35" pos:end="461:35"><literal type="number" pos:start="461:35" pos:end="461:35">1</literal></expr></argument>, <argument pos:start="461:38" pos:end="461:38"><expr pos:start="461:38" pos:end="461:38"><literal type="number" pos:start="461:38" pos:end="461:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="467:17" pos:end="469:53"><if pos:start="467:17" pos:end="469:53">if <condition pos:start="467:20" pos:end="467:38">(<expr pos:start="467:21" pos:end="467:37"><name pos:start="467:21" pos:end="467:37">interleaved_stats</name></expr>)</condition><block type="pseudo" pos:start="469:21" pos:end="469:53"><block_content pos:start="469:21" pos:end="469:53">

                    <expr_stmt pos:start="469:21" pos:end="469:53"><expr pos:start="469:21" pos:end="469:52"><name pos:start="469:21" pos:end="469:32"><name pos:start="469:21" pos:end="469:21">s</name><operator pos:start="469:22" pos:end="469:23">-&gt;</operator><name pos:start="469:24" pos:end="469:32">misc_bits</name></name> <operator pos:start="469:34" pos:end="469:35">+=</operator> <call pos:start="469:37" pos:end="469:52"><name pos:start="469:37" pos:end="469:49">get_bits_diff</name><argument_list pos:start="469:50" pos:end="469:52">(<argument pos:start="469:51" pos:end="469:51"><expr pos:start="469:51" pos:end="469:51"><name pos:start="469:51" pos:end="469:51">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <comment type="block" pos:start="473:17" pos:end="473:48">/* motion vectors: 16x16 mode */</comment>

                <expr_stmt pos:start="475:17" pos:end="475:63"><expr pos:start="475:17" pos:end="475:62"><call pos:start="475:17" pos:end="475:62"><name pos:start="475:17" pos:end="475:35">ff_h263_pred_motion</name><argument_list pos:start="475:36" pos:end="475:62">(<argument pos:start="475:37" pos:end="475:37"><expr pos:start="475:37" pos:end="475:37"><name pos:start="475:37" pos:end="475:37">s</name></expr></argument>, <argument pos:start="475:40" pos:end="475:40"><expr pos:start="475:40" pos:end="475:40"><literal type="number" pos:start="475:40" pos:end="475:40">0</literal></expr></argument>, <argument pos:start="475:43" pos:end="475:43"><expr pos:start="475:43" pos:end="475:43"><literal type="number" pos:start="475:43" pos:end="475:43">0</literal></expr></argument>, <argument pos:start="475:46" pos:end="475:52"><expr pos:start="475:46" pos:end="475:52"><operator pos:start="475:46" pos:end="475:46">&amp;</operator><name pos:start="475:47" pos:end="475:52">pred_x</name></expr></argument>, <argument pos:start="475:55" pos:end="475:61"><expr pos:start="475:55" pos:end="475:61"><operator pos:start="475:55" pos:end="475:55">&amp;</operator><name pos:start="475:56" pos:end="475:61">pred_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="479:17" pos:end="485:56"><expr pos:start="479:17" pos:end="485:55"><call pos:start="479:17" pos:end="485:55"><name pos:start="479:17" pos:end="479:44">ff_h263_encode_motion_vector</name><argument_list pos:start="479:45" pos:end="485:55">(<argument pos:start="479:46" pos:end="479:46"><expr pos:start="479:46" pos:end="479:46"><name pos:start="479:46" pos:end="479:46">s</name></expr></argument>,

                                             <argument pos:start="481:46" pos:end="481:62"><expr pos:start="481:46" pos:end="481:62"><name pos:start="481:46" pos:end="481:53">motion_x</name> <operator pos:start="481:55" pos:end="481:55">-</operator> <name pos:start="481:57" pos:end="481:62">pred_x</name></expr></argument>,

                                             <argument pos:start="483:46" pos:end="483:62"><expr pos:start="483:46" pos:end="483:62"><name pos:start="483:46" pos:end="483:53">motion_y</name> <operator pos:start="483:55" pos:end="483:55">-</operator> <name pos:start="483:57" pos:end="483:62">pred_y</name></expr></argument>,

                                             <argument pos:start="485:46" pos:end="485:54"><expr pos:start="485:46" pos:end="485:54"><name pos:start="485:46" pos:end="485:54"><name pos:start="485:46" pos:end="485:46">s</name><operator pos:start="485:47" pos:end="485:48">-&gt;</operator><name pos:start="485:49" pos:end="485:54">f_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="487:15" pos:end="555:13">else if <condition pos:start="487:23" pos:end="487:51">(<expr pos:start="487:24" pos:end="487:50"><name pos:start="487:24" pos:end="487:33"><name pos:start="487:24" pos:end="487:24">s</name><operator pos:start="487:25" pos:end="487:26">-&gt;</operator><name pos:start="487:27" pos:end="487:33">mv_type</name></name> <operator pos:start="487:35" pos:end="487:36">==</operator> <name pos:start="487:38" pos:end="487:50">MV_TYPE_FIELD</name></expr>)</condition> <block pos:start="487:53" pos:end="555:13">{<block_content pos:start="489:17" pos:end="553:56">

                <if_stmt pos:start="489:17" pos:end="491:30"><if pos:start="489:17" pos:end="491:30">if <condition pos:start="489:20" pos:end="489:30">(<expr pos:start="489:21" pos:end="489:29"><name pos:start="489:21" pos:end="489:29"><name pos:start="489:21" pos:end="489:21">s</name><operator pos:start="489:22" pos:end="489:23">-&gt;</operator><name pos:start="489:24" pos:end="489:29">dquant</name></name></expr>)</condition><block type="pseudo" pos:start="491:21" pos:end="491:30"><block_content pos:start="491:21" pos:end="491:30">

                    <expr_stmt pos:start="491:21" pos:end="491:30"><expr pos:start="491:21" pos:end="491:29"><name pos:start="491:21" pos:end="491:24">cbpc</name> <operator pos:start="491:26" pos:end="491:27">+=</operator> <literal type="number" pos:start="491:29" pos:end="491:29">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="493:17" pos:end="497:57"><expr pos:start="493:17" pos:end="497:56"><call pos:start="493:17" pos:end="497:56"><name pos:start="493:17" pos:end="493:24">put_bits</name><argument_list pos:start="493:25" pos:end="497:56">(<argument pos:start="493:26" pos:end="493:31"><expr pos:start="493:26" pos:end="493:31"><operator pos:start="493:26" pos:end="493:26">&amp;</operator><name pos:start="493:27" pos:end="493:31"><name pos:start="493:27" pos:end="493:27">s</name><operator pos:start="493:28" pos:end="493:29">-&gt;</operator><name pos:start="493:30" pos:end="493:31">pb</name></name></expr></argument>,

                         <argument pos:start="495:26" pos:end="495:55"><expr pos:start="495:26" pos:end="495:55"><name pos:start="495:26" pos:end="495:55"><name pos:start="495:26" pos:end="495:49">ff_h263_inter_MCBPC_bits</name><index pos:start="495:50" pos:end="495:55">[<expr pos:start="495:51" pos:end="495:54"><name pos:start="495:51" pos:end="495:54">cbpc</name></expr>]</index></name></expr></argument>,

                         <argument pos:start="497:26" pos:end="497:55"><expr pos:start="497:26" pos:end="497:55"><name pos:start="497:26" pos:end="497:55"><name pos:start="497:26" pos:end="497:49">ff_h263_inter_MCBPC_code</name><index pos:start="497:50" pos:end="497:55">[<expr pos:start="497:51" pos:end="497:54"><name pos:start="497:51" pos:end="497:54">cbpc</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="501:17" pos:end="501:84"><expr pos:start="501:17" pos:end="501:83"><call pos:start="501:17" pos:end="501:83"><name pos:start="501:17" pos:end="501:24">put_bits</name><argument_list pos:start="501:25" pos:end="501:83">(<argument pos:start="501:26" pos:end="501:28"><expr pos:start="501:26" pos:end="501:28"><name pos:start="501:26" pos:end="501:28">pb2</name></expr></argument>, <argument pos:start="501:31" pos:end="501:55"><expr pos:start="501:31" pos:end="501:55"><name pos:start="501:31" pos:end="501:55"><name pos:start="501:31" pos:end="501:46">ff_h263_cbpy_tab</name><index pos:start="501:47" pos:end="501:52">[<expr pos:start="501:48" pos:end="501:51"><name pos:start="501:48" pos:end="501:51">cbpy</name></expr>]</index><index pos:start="501:53" pos:end="501:55">[<expr pos:start="501:54" pos:end="501:54"><literal type="number" pos:start="501:54" pos:end="501:54">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="501:58" pos:end="501:82"><expr pos:start="501:58" pos:end="501:82"><name pos:start="501:58" pos:end="501:82"><name pos:start="501:58" pos:end="501:73">ff_h263_cbpy_tab</name><index pos:start="501:74" pos:end="501:79">[<expr pos:start="501:75" pos:end="501:78"><name pos:start="501:75" pos:end="501:78">cbpy</name></expr>]</index><index pos:start="501:80" pos:end="501:82">[<expr pos:start="501:81" pos:end="501:81"><literal type="number" pos:start="501:81" pos:end="501:81">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="503:17" pos:end="505:65"><if pos:start="503:17" pos:end="505:65">if <condition pos:start="503:20" pos:end="503:30">(<expr pos:start="503:21" pos:end="503:29"><name pos:start="503:21" pos:end="503:29"><name pos:start="503:21" pos:end="503:21">s</name><operator pos:start="503:22" pos:end="503:23">-&gt;</operator><name pos:start="503:24" pos:end="503:29">dquant</name></name></expr>)</condition><block type="pseudo" pos:start="505:21" pos:end="505:65"><block_content pos:start="505:21" pos:end="505:65">

                    <expr_stmt pos:start="505:21" pos:end="505:65"><expr pos:start="505:21" pos:end="505:64"><call pos:start="505:21" pos:end="505:64"><name pos:start="505:21" pos:end="505:28">put_bits</name><argument_list pos:start="505:29" pos:end="505:64">(<argument pos:start="505:30" pos:end="505:32"><expr pos:start="505:30" pos:end="505:32"><name pos:start="505:30" pos:end="505:32">pb2</name></expr></argument>, <argument pos:start="505:35" pos:end="505:35"><expr pos:start="505:35" pos:end="505:35"><literal type="number" pos:start="505:35" pos:end="505:35">2</literal></expr></argument>, <argument pos:start="505:38" pos:end="505:63"><expr pos:start="505:38" pos:end="505:63"><name pos:start="505:38" pos:end="505:63"><name pos:start="505:38" pos:end="505:48">dquant_code</name><index pos:start="505:49" pos:end="505:63">[<expr pos:start="505:50" pos:end="505:62"><name pos:start="505:50" pos:end="505:58"><name pos:start="505:50" pos:end="505:50">s</name><operator pos:start="505:51" pos:end="505:52">-&gt;</operator><name pos:start="505:53" pos:end="505:58">dquant</name></name> <operator pos:start="505:60" pos:end="505:60">+</operator> <literal type="number" pos:start="505:62" pos:end="505:62">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <expr_stmt pos:start="509:17" pos:end="509:49"><expr pos:start="509:17" pos:end="509:48"><call pos:start="509:17" pos:end="509:48"><name pos:start="509:17" pos:end="509:22">assert</name><argument_list pos:start="509:23" pos:end="509:48">(<argument pos:start="509:24" pos:end="509:47"><expr pos:start="509:24" pos:end="509:47"><operator pos:start="509:24" pos:end="509:24">!</operator><name pos:start="509:25" pos:end="509:47"><name pos:start="509:25" pos:end="509:25">s</name><operator pos:start="509:26" pos:end="509:27">-&gt;</operator><name pos:start="509:28" pos:end="509:47">progressive_sequence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="511:17" pos:end="513:56"><if pos:start="511:17" pos:end="513:56">if <condition pos:start="511:20" pos:end="511:24">(<expr pos:start="511:21" pos:end="511:23"><name pos:start="511:21" pos:end="511:23">cbp</name></expr>)</condition><block type="pseudo" pos:start="513:21" pos:end="513:56"><block_content pos:start="513:21" pos:end="513:56">

                    <expr_stmt pos:start="513:21" pos:end="513:56"><expr pos:start="513:21" pos:end="513:55"><call pos:start="513:21" pos:end="513:55"><name pos:start="513:21" pos:end="513:28">put_bits</name><argument_list pos:start="513:29" pos:end="513:55">(<argument pos:start="513:30" pos:end="513:32"><expr pos:start="513:30" pos:end="513:32"><name pos:start="513:30" pos:end="513:32">pb2</name></expr></argument>, <argument pos:start="513:35" pos:end="513:35"><expr pos:start="513:35" pos:end="513:35"><literal type="number" pos:start="513:35" pos:end="513:35">1</literal></expr></argument>, <argument pos:start="513:38" pos:end="513:54"><expr pos:start="513:38" pos:end="513:54"><name pos:start="513:38" pos:end="513:54"><name pos:start="513:38" pos:end="513:38">s</name><operator pos:start="513:39" pos:end="513:40">-&gt;</operator><name pos:start="513:41" pos:end="513:54">interlaced_dct</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="515:17" pos:end="515:36"><expr pos:start="515:17" pos:end="515:35"><call pos:start="515:17" pos:end="515:35"><name pos:start="515:17" pos:end="515:24">put_bits</name><argument_list pos:start="515:25" pos:end="515:35">(<argument pos:start="515:26" pos:end="515:28"><expr pos:start="515:26" pos:end="515:28"><name pos:start="515:26" pos:end="515:28">pb2</name></expr></argument>, <argument pos:start="515:31" pos:end="515:31"><expr pos:start="515:31" pos:end="515:31"><literal type="number" pos:start="515:31" pos:end="515:31">1</literal></expr></argument>, <argument pos:start="515:34" pos:end="515:34"><expr pos:start="515:34" pos:end="515:34"><literal type="number" pos:start="515:34" pos:end="515:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="519:17" pos:end="521:53"><if pos:start="519:17" pos:end="521:53">if <condition pos:start="519:20" pos:end="519:38">(<expr pos:start="519:21" pos:end="519:37"><name pos:start="519:21" pos:end="519:37">interleaved_stats</name></expr>)</condition><block type="pseudo" pos:start="521:21" pos:end="521:53"><block_content pos:start="521:21" pos:end="521:53">

                    <expr_stmt pos:start="521:21" pos:end="521:53"><expr pos:start="521:21" pos:end="521:52"><name pos:start="521:21" pos:end="521:32"><name pos:start="521:21" pos:end="521:21">s</name><operator pos:start="521:22" pos:end="521:23">-&gt;</operator><name pos:start="521:24" pos:end="521:32">misc_bits</name></name> <operator pos:start="521:34" pos:end="521:35">+=</operator> <call pos:start="521:37" pos:end="521:52"><name pos:start="521:37" pos:end="521:49">get_bits_diff</name><argument_list pos:start="521:50" pos:end="521:52">(<argument pos:start="521:51" pos:end="521:51"><expr pos:start="521:51" pos:end="521:51"><name pos:start="521:51" pos:end="521:51">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <comment type="block" pos:start="525:17" pos:end="525:58">/* motion vectors: 16x8 interlaced mode */</comment>

                <expr_stmt pos:start="527:17" pos:end="527:63"><expr pos:start="527:17" pos:end="527:62"><call pos:start="527:17" pos:end="527:62"><name pos:start="527:17" pos:end="527:35">ff_h263_pred_motion</name><argument_list pos:start="527:36" pos:end="527:62">(<argument pos:start="527:37" pos:end="527:37"><expr pos:start="527:37" pos:end="527:37"><name pos:start="527:37" pos:end="527:37">s</name></expr></argument>, <argument pos:start="527:40" pos:end="527:40"><expr pos:start="527:40" pos:end="527:40"><literal type="number" pos:start="527:40" pos:end="527:40">0</literal></expr></argument>, <argument pos:start="527:43" pos:end="527:43"><expr pos:start="527:43" pos:end="527:43"><literal type="number" pos:start="527:43" pos:end="527:43">0</literal></expr></argument>, <argument pos:start="527:46" pos:end="527:52"><expr pos:start="527:46" pos:end="527:52"><operator pos:start="527:46" pos:end="527:46">&amp;</operator><name pos:start="527:47" pos:end="527:52">pred_x</name></expr></argument>, <argument pos:start="527:55" pos:end="527:61"><expr pos:start="527:55" pos:end="527:61"><operator pos:start="527:55" pos:end="527:55">&amp;</operator><name pos:start="527:56" pos:end="527:61">pred_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="529:17" pos:end="529:28"><expr pos:start="529:17" pos:end="529:27"><name pos:start="529:17" pos:end="529:22">pred_y</name> <operator pos:start="529:24" pos:end="529:25">/=</operator> <literal type="number" pos:start="529:27" pos:end="529:27">2</literal></expr>;</expr_stmt>



                <expr_stmt pos:start="533:17" pos:end="533:59"><expr pos:start="533:17" pos:end="533:58"><call pos:start="533:17" pos:end="533:58"><name pos:start="533:17" pos:end="533:24">put_bits</name><argument_list pos:start="533:25" pos:end="533:58">(<argument pos:start="533:26" pos:end="533:31"><expr pos:start="533:26" pos:end="533:31"><operator pos:start="533:26" pos:end="533:26">&amp;</operator><name pos:start="533:27" pos:end="533:31"><name pos:start="533:27" pos:end="533:27">s</name><operator pos:start="533:28" pos:end="533:29">-&gt;</operator><name pos:start="533:30" pos:end="533:31">pb</name></name></expr></argument>, <argument pos:start="533:34" pos:end="533:34"><expr pos:start="533:34" pos:end="533:34"><literal type="number" pos:start="533:34" pos:end="533:34">1</literal></expr></argument>, <argument pos:start="533:37" pos:end="533:57"><expr pos:start="533:37" pos:end="533:57"><name pos:start="533:37" pos:end="533:57"><name pos:start="533:37" pos:end="533:37">s</name><operator pos:start="533:38" pos:end="533:39">-&gt;</operator><name pos:start="533:40" pos:end="533:51">field_select</name><index pos:start="533:52" pos:end="533:54">[<expr pos:start="533:53" pos:end="533:53"><literal type="number" pos:start="533:53" pos:end="533:53">0</literal></expr>]</index><index pos:start="533:55" pos:end="533:57">[<expr pos:start="533:56" pos:end="533:56"><literal type="number" pos:start="533:56" pos:end="533:56">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="535:17" pos:end="535:59"><expr pos:start="535:17" pos:end="535:58"><call pos:start="535:17" pos:end="535:58"><name pos:start="535:17" pos:end="535:24">put_bits</name><argument_list pos:start="535:25" pos:end="535:58">(<argument pos:start="535:26" pos:end="535:31"><expr pos:start="535:26" pos:end="535:31"><operator pos:start="535:26" pos:end="535:26">&amp;</operator><name pos:start="535:27" pos:end="535:31"><name pos:start="535:27" pos:end="535:27">s</name><operator pos:start="535:28" pos:end="535:29">-&gt;</operator><name pos:start="535:30" pos:end="535:31">pb</name></name></expr></argument>, <argument pos:start="535:34" pos:end="535:34"><expr pos:start="535:34" pos:end="535:34"><literal type="number" pos:start="535:34" pos:end="535:34">1</literal></expr></argument>, <argument pos:start="535:37" pos:end="535:57"><expr pos:start="535:37" pos:end="535:57"><name pos:start="535:37" pos:end="535:57"><name pos:start="535:37" pos:end="535:37">s</name><operator pos:start="535:38" pos:end="535:39">-&gt;</operator><name pos:start="535:40" pos:end="535:51">field_select</name><index pos:start="535:52" pos:end="535:54">[<expr pos:start="535:53" pos:end="535:53"><literal type="number" pos:start="535:53" pos:end="535:53">0</literal></expr>]</index><index pos:start="535:55" pos:end="535:57">[<expr pos:start="535:56" pos:end="535:56"><literal type="number" pos:start="535:56" pos:end="535:56">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="539:17" pos:end="545:56"><expr pos:start="539:17" pos:end="545:55"><call pos:start="539:17" pos:end="545:55"><name pos:start="539:17" pos:end="539:44">ff_h263_encode_motion_vector</name><argument_list pos:start="539:45" pos:end="545:55">(<argument pos:start="539:46" pos:end="539:46"><expr pos:start="539:46" pos:end="539:46"><name pos:start="539:46" pos:end="539:46">s</name></expr></argument>,

                                             <argument pos:start="541:46" pos:end="541:68"><expr pos:start="541:46" pos:end="541:68"><name pos:start="541:46" pos:end="541:59"><name pos:start="541:46" pos:end="541:46">s</name><operator pos:start="541:47" pos:end="541:48">-&gt;</operator><name pos:start="541:49" pos:end="541:50">mv</name><index pos:start="541:51" pos:end="541:53">[<expr pos:start="541:52" pos:end="541:52"><literal type="number" pos:start="541:52" pos:end="541:52">0</literal></expr>]</index><index pos:start="541:54" pos:end="541:56">[<expr pos:start="541:55" pos:end="541:55"><literal type="number" pos:start="541:55" pos:end="541:55">0</literal></expr>]</index><index pos:start="541:57" pos:end="541:59">[<expr pos:start="541:58" pos:end="541:58"><literal type="number" pos:start="541:58" pos:end="541:58">0</literal></expr>]</index></name> <operator pos:start="541:61" pos:end="541:61">-</operator> <name pos:start="541:63" pos:end="541:68">pred_x</name></expr></argument>,

                                             <argument pos:start="543:46" pos:end="543:68"><expr pos:start="543:46" pos:end="543:68"><name pos:start="543:46" pos:end="543:59"><name pos:start="543:46" pos:end="543:46">s</name><operator pos:start="543:47" pos:end="543:48">-&gt;</operator><name pos:start="543:49" pos:end="543:50">mv</name><index pos:start="543:51" pos:end="543:53">[<expr pos:start="543:52" pos:end="543:52"><literal type="number" pos:start="543:52" pos:end="543:52">0</literal></expr>]</index><index pos:start="543:54" pos:end="543:56">[<expr pos:start="543:55" pos:end="543:55"><literal type="number" pos:start="543:55" pos:end="543:55">0</literal></expr>]</index><index pos:start="543:57" pos:end="543:59">[<expr pos:start="543:58" pos:end="543:58"><literal type="number" pos:start="543:58" pos:end="543:58">1</literal></expr>]</index></name> <operator pos:start="543:61" pos:end="543:61">-</operator> <name pos:start="543:63" pos:end="543:68">pred_y</name></expr></argument>,

                                             <argument pos:start="545:46" pos:end="545:54"><expr pos:start="545:46" pos:end="545:54"><name pos:start="545:46" pos:end="545:54"><name pos:start="545:46" pos:end="545:46">s</name><operator pos:start="545:47" pos:end="545:48">-&gt;</operator><name pos:start="545:49" pos:end="545:54">f_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="547:17" pos:end="553:56"><expr pos:start="547:17" pos:end="553:55"><call pos:start="547:17" pos:end="553:55"><name pos:start="547:17" pos:end="547:44">ff_h263_encode_motion_vector</name><argument_list pos:start="547:45" pos:end="553:55">(<argument pos:start="547:46" pos:end="547:46"><expr pos:start="547:46" pos:end="547:46"><name pos:start="547:46" pos:end="547:46">s</name></expr></argument>,

                                             <argument pos:start="549:46" pos:end="549:68"><expr pos:start="549:46" pos:end="549:68"><name pos:start="549:46" pos:end="549:59"><name pos:start="549:46" pos:end="549:46">s</name><operator pos:start="549:47" pos:end="549:48">-&gt;</operator><name pos:start="549:49" pos:end="549:50">mv</name><index pos:start="549:51" pos:end="549:53">[<expr pos:start="549:52" pos:end="549:52"><literal type="number" pos:start="549:52" pos:end="549:52">0</literal></expr>]</index><index pos:start="549:54" pos:end="549:56">[<expr pos:start="549:55" pos:end="549:55"><literal type="number" pos:start="549:55" pos:end="549:55">1</literal></expr>]</index><index pos:start="549:57" pos:end="549:59">[<expr pos:start="549:58" pos:end="549:58"><literal type="number" pos:start="549:58" pos:end="549:58">0</literal></expr>]</index></name> <operator pos:start="549:61" pos:end="549:61">-</operator> <name pos:start="549:63" pos:end="549:68">pred_x</name></expr></argument>,

                                             <argument pos:start="551:46" pos:end="551:68"><expr pos:start="551:46" pos:end="551:68"><name pos:start="551:46" pos:end="551:59"><name pos:start="551:46" pos:end="551:46">s</name><operator pos:start="551:47" pos:end="551:48">-&gt;</operator><name pos:start="551:49" pos:end="551:50">mv</name><index pos:start="551:51" pos:end="551:53">[<expr pos:start="551:52" pos:end="551:52"><literal type="number" pos:start="551:52" pos:end="551:52">0</literal></expr>]</index><index pos:start="551:54" pos:end="551:56">[<expr pos:start="551:55" pos:end="551:55"><literal type="number" pos:start="551:55" pos:end="551:55">1</literal></expr>]</index><index pos:start="551:57" pos:end="551:59">[<expr pos:start="551:58" pos:end="551:58"><literal type="number" pos:start="551:58" pos:end="551:58">1</literal></expr>]</index></name> <operator pos:start="551:61" pos:end="551:61">-</operator> <name pos:start="551:63" pos:end="551:68">pred_y</name></expr></argument>,

                                             <argument pos:start="553:46" pos:end="553:54"><expr pos:start="553:46" pos:end="553:54"><name pos:start="553:46" pos:end="553:54"><name pos:start="553:46" pos:end="553:46">s</name><operator pos:start="553:47" pos:end="553:48">-&gt;</operator><name pos:start="553:49" pos:end="553:54">f_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="555:15" pos:end="599:13">else <block pos:start="555:20" pos:end="599:13">{<block_content pos:start="557:17" pos:end="597:17">

                <expr_stmt pos:start="557:17" pos:end="557:50"><expr pos:start="557:17" pos:end="557:49"><call pos:start="557:17" pos:end="557:49"><name pos:start="557:17" pos:end="557:22">assert</name><argument_list pos:start="557:23" pos:end="557:49">(<argument pos:start="557:24" pos:end="557:48"><expr pos:start="557:24" pos:end="557:48"><name pos:start="557:24" pos:end="557:33"><name pos:start="557:24" pos:end="557:24">s</name><operator pos:start="557:25" pos:end="557:26">-&gt;</operator><name pos:start="557:27" pos:end="557:33">mv_type</name></name> <operator pos:start="557:35" pos:end="557:36">==</operator> <name pos:start="557:38" pos:end="557:48">MV_TYPE_8X8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="559:17" pos:end="563:62"><expr pos:start="559:17" pos:end="563:61"><call pos:start="559:17" pos:end="563:61"><name pos:start="559:17" pos:end="559:24">put_bits</name><argument_list pos:start="559:25" pos:end="563:61">(<argument pos:start="559:26" pos:end="559:31"><expr pos:start="559:26" pos:end="559:31"><operator pos:start="559:26" pos:end="559:26">&amp;</operator><name pos:start="559:27" pos:end="559:31"><name pos:start="559:27" pos:end="559:27">s</name><operator pos:start="559:28" pos:end="559:29">-&gt;</operator><name pos:start="559:30" pos:end="559:31">pb</name></name></expr></argument>,

                         <argument pos:start="561:26" pos:end="561:60"><expr pos:start="561:26" pos:end="561:60"><name pos:start="561:26" pos:end="561:60"><name pos:start="561:26" pos:end="561:49">ff_h263_inter_MCBPC_bits</name><index pos:start="561:50" pos:end="561:60">[<expr pos:start="561:51" pos:end="561:59"><name pos:start="561:51" pos:end="561:54">cbpc</name> <operator pos:start="561:56" pos:end="561:56">+</operator> <literal type="number" pos:start="561:58" pos:end="561:59">16</literal></expr>]</index></name></expr></argument>,

                         <argument pos:start="563:26" pos:end="563:60"><expr pos:start="563:26" pos:end="563:60"><name pos:start="563:26" pos:end="563:60"><name pos:start="563:26" pos:end="563:49">ff_h263_inter_MCBPC_code</name><index pos:start="563:50" pos:end="563:60">[<expr pos:start="563:51" pos:end="563:59"><name pos:start="563:51" pos:end="563:54">cbpc</name> <operator pos:start="563:56" pos:end="563:56">+</operator> <literal type="number" pos:start="563:58" pos:end="563:59">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="565:17" pos:end="565:84"><expr pos:start="565:17" pos:end="565:83"><call pos:start="565:17" pos:end="565:83"><name pos:start="565:17" pos:end="565:24">put_bits</name><argument_list pos:start="565:25" pos:end="565:83">(<argument pos:start="565:26" pos:end="565:28"><expr pos:start="565:26" pos:end="565:28"><name pos:start="565:26" pos:end="565:28">pb2</name></expr></argument>, <argument pos:start="565:31" pos:end="565:55"><expr pos:start="565:31" pos:end="565:55"><name pos:start="565:31" pos:end="565:55"><name pos:start="565:31" pos:end="565:46">ff_h263_cbpy_tab</name><index pos:start="565:47" pos:end="565:52">[<expr pos:start="565:48" pos:end="565:51"><name pos:start="565:48" pos:end="565:51">cbpy</name></expr>]</index><index pos:start="565:53" pos:end="565:55">[<expr pos:start="565:54" pos:end="565:54"><literal type="number" pos:start="565:54" pos:end="565:54">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="565:58" pos:end="565:82"><expr pos:start="565:58" pos:end="565:82"><name pos:start="565:58" pos:end="565:82"><name pos:start="565:58" pos:end="565:73">ff_h263_cbpy_tab</name><index pos:start="565:74" pos:end="565:79">[<expr pos:start="565:75" pos:end="565:78"><name pos:start="565:75" pos:end="565:78">cbpy</name></expr>]</index><index pos:start="565:80" pos:end="565:82">[<expr pos:start="565:81" pos:end="565:81"><literal type="number" pos:start="565:81" pos:end="565:81">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="569:17" pos:end="571:56"><if pos:start="569:17" pos:end="571:56">if <condition pos:start="569:20" pos:end="569:52">(<expr pos:start="569:21" pos:end="569:51"><operator pos:start="569:21" pos:end="569:21">!</operator><name pos:start="569:22" pos:end="569:44"><name pos:start="569:22" pos:end="569:22">s</name><operator pos:start="569:23" pos:end="569:24">-&gt;</operator><name pos:start="569:25" pos:end="569:44">progressive_sequence</name></name> <operator pos:start="569:46" pos:end="569:47">&amp;&amp;</operator> <name pos:start="569:49" pos:end="569:51">cbp</name></expr>)</condition><block type="pseudo" pos:start="571:21" pos:end="571:56"><block_content pos:start="571:21" pos:end="571:56">

                    <expr_stmt pos:start="571:21" pos:end="571:56"><expr pos:start="571:21" pos:end="571:55"><call pos:start="571:21" pos:end="571:55"><name pos:start="571:21" pos:end="571:28">put_bits</name><argument_list pos:start="571:29" pos:end="571:55">(<argument pos:start="571:30" pos:end="571:32"><expr pos:start="571:30" pos:end="571:32"><name pos:start="571:30" pos:end="571:32">pb2</name></expr></argument>, <argument pos:start="571:35" pos:end="571:35"><expr pos:start="571:35" pos:end="571:35"><literal type="number" pos:start="571:35" pos:end="571:35">1</literal></expr></argument>, <argument pos:start="571:38" pos:end="571:54"><expr pos:start="571:38" pos:end="571:54"><name pos:start="571:38" pos:end="571:54"><name pos:start="571:38" pos:end="571:38">s</name><operator pos:start="571:39" pos:end="571:40">-&gt;</operator><name pos:start="571:41" pos:end="571:54">interlaced_dct</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <if_stmt pos:start="575:17" pos:end="577:53"><if pos:start="575:17" pos:end="577:53">if <condition pos:start="575:20" pos:end="575:38">(<expr pos:start="575:21" pos:end="575:37"><name pos:start="575:21" pos:end="575:37">interleaved_stats</name></expr>)</condition><block type="pseudo" pos:start="577:21" pos:end="577:53"><block_content pos:start="577:21" pos:end="577:53">

                    <expr_stmt pos:start="577:21" pos:end="577:53"><expr pos:start="577:21" pos:end="577:52"><name pos:start="577:21" pos:end="577:32"><name pos:start="577:21" pos:end="577:21">s</name><operator pos:start="577:22" pos:end="577:23">-&gt;</operator><name pos:start="577:24" pos:end="577:32">misc_bits</name></name> <operator pos:start="577:34" pos:end="577:35">+=</operator> <call pos:start="577:37" pos:end="577:52"><name pos:start="577:37" pos:end="577:49">get_bits_diff</name><argument_list pos:start="577:50" pos:end="577:52">(<argument pos:start="577:51" pos:end="577:51"><expr pos:start="577:51" pos:end="577:51"><name pos:start="577:51" pos:end="577:51">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <for pos:start="581:17" pos:end="597:17">for <control pos:start="581:21" pos:end="581:39">(<init pos:start="581:22" pos:end="581:27"><expr pos:start="581:22" pos:end="581:26"><name pos:start="581:22" pos:end="581:22">i</name> <operator pos:start="581:24" pos:end="581:24">=</operator> <literal type="number" pos:start="581:26" pos:end="581:26">0</literal></expr>;</init> <condition pos:start="581:29" pos:end="581:34"><expr pos:start="581:29" pos:end="581:33"><name pos:start="581:29" pos:end="581:29">i</name> <operator pos:start="581:31" pos:end="581:31">&lt;</operator> <literal type="number" pos:start="581:33" pos:end="581:33">4</literal></expr>;</condition> <incr pos:start="581:36" pos:end="581:38"><expr pos:start="581:36" pos:end="581:38"><name pos:start="581:36" pos:end="581:36">i</name><operator pos:start="581:37" pos:end="581:38">++</operator></expr></incr>)</control> <block pos:start="581:41" pos:end="597:17">{<block_content pos:start="585:21" pos:end="595:60">

                    <comment type="block" pos:start="583:21" pos:end="583:49">/* motion vectors: 8x8 mode*/</comment>

                    <expr_stmt pos:start="585:21" pos:end="585:67"><expr pos:start="585:21" pos:end="585:66"><call pos:start="585:21" pos:end="585:66"><name pos:start="585:21" pos:end="585:39">ff_h263_pred_motion</name><argument_list pos:start="585:40" pos:end="585:66">(<argument pos:start="585:41" pos:end="585:41"><expr pos:start="585:41" pos:end="585:41"><name pos:start="585:41" pos:end="585:41">s</name></expr></argument>, <argument pos:start="585:44" pos:end="585:44"><expr pos:start="585:44" pos:end="585:44"><name pos:start="585:44" pos:end="585:44">i</name></expr></argument>, <argument pos:start="585:47" pos:end="585:47"><expr pos:start="585:47" pos:end="585:47"><literal type="number" pos:start="585:47" pos:end="585:47">0</literal></expr></argument>, <argument pos:start="585:50" pos:end="585:56"><expr pos:start="585:50" pos:end="585:56"><operator pos:start="585:50" pos:end="585:50">&amp;</operator><name pos:start="585:51" pos:end="585:56">pred_x</name></expr></argument>, <argument pos:start="585:59" pos:end="585:65"><expr pos:start="585:59" pos:end="585:65"><operator pos:start="585:59" pos:end="585:59">&amp;</operator><name pos:start="585:60" pos:end="585:65">pred_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="589:21" pos:end="595:60"><expr pos:start="589:21" pos:end="595:59"><call pos:start="589:21" pos:end="595:59"><name pos:start="589:21" pos:end="589:48">ff_h263_encode_motion_vector</name><argument_list pos:start="589:49" pos:end="595:59">(<argument pos:start="589:50" pos:end="589:50"><expr pos:start="589:50" pos:end="589:50"><name pos:start="589:50" pos:end="589:50">s</name></expr></argument>,

                                                 <argument pos:start="591:50" pos:end="591:112"><expr pos:start="591:50" pos:end="591:112"><name pos:start="591:50" pos:end="591:103"><name pos:start="591:50" pos:end="591:50">s</name><operator pos:start="591:51" pos:end="591:52">-&gt;</operator><name pos:start="591:53" pos:end="591:67">current_picture</name><operator pos:start="591:68" pos:end="591:68">.</operator><name pos:start="591:69" pos:end="591:78">motion_val</name><index pos:start="591:79" pos:end="591:81">[<expr pos:start="591:80" pos:end="591:80"><literal type="number" pos:start="591:80" pos:end="591:80">0</literal></expr>]</index><index pos:start="591:82" pos:end="591:100">[<expr pos:start="591:83" pos:end="591:99"><name pos:start="591:83" pos:end="591:99"><name pos:start="591:83" pos:end="591:83">s</name><operator pos:start="591:84" pos:end="591:85">-&gt;</operator><name pos:start="591:86" pos:end="591:96">block_index</name><index pos:start="591:97" pos:end="591:99">[<expr pos:start="591:98" pos:end="591:98"><name pos:start="591:98" pos:end="591:98">i</name></expr>]</index></name></expr>]</index><index pos:start="591:101" pos:end="591:103">[<expr pos:start="591:102" pos:end="591:102"><literal type="number" pos:start="591:102" pos:end="591:102">0</literal></expr>]</index></name> <operator pos:start="591:105" pos:end="591:105">-</operator> <name pos:start="591:107" pos:end="591:112">pred_x</name></expr></argument>,

                                                 <argument pos:start="593:50" pos:end="593:112"><expr pos:start="593:50" pos:end="593:112"><name pos:start="593:50" pos:end="593:103"><name pos:start="593:50" pos:end="593:50">s</name><operator pos:start="593:51" pos:end="593:52">-&gt;</operator><name pos:start="593:53" pos:end="593:67">current_picture</name><operator pos:start="593:68" pos:end="593:68">.</operator><name pos:start="593:69" pos:end="593:78">motion_val</name><index pos:start="593:79" pos:end="593:81">[<expr pos:start="593:80" pos:end="593:80"><literal type="number" pos:start="593:80" pos:end="593:80">0</literal></expr>]</index><index pos:start="593:82" pos:end="593:100">[<expr pos:start="593:83" pos:end="593:99"><name pos:start="593:83" pos:end="593:99"><name pos:start="593:83" pos:end="593:83">s</name><operator pos:start="593:84" pos:end="593:85">-&gt;</operator><name pos:start="593:86" pos:end="593:96">block_index</name><index pos:start="593:97" pos:end="593:99">[<expr pos:start="593:98" pos:end="593:98"><name pos:start="593:98" pos:end="593:98">i</name></expr>]</index></name></expr>]</index><index pos:start="593:101" pos:end="593:103">[<expr pos:start="593:102" pos:end="593:102"><literal type="number" pos:start="593:102" pos:end="593:102">1</literal></expr>]</index></name> <operator pos:start="593:105" pos:end="593:105">-</operator> <name pos:start="593:107" pos:end="593:112">pred_y</name></expr></argument>,

                                                 <argument pos:start="595:50" pos:end="595:58"><expr pos:start="595:50" pos:end="595:58"><name pos:start="595:50" pos:end="595:58"><name pos:start="595:50" pos:end="595:50">s</name><operator pos:start="595:51" pos:end="595:52">-&gt;</operator><name pos:start="595:53" pos:end="595:58">f_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="603:13" pos:end="605:47"><if pos:start="603:13" pos:end="605:47">if <condition pos:start="603:16" pos:end="603:34">(<expr pos:start="603:17" pos:end="603:33"><name pos:start="603:17" pos:end="603:33">interleaved_stats</name></expr>)</condition><block type="pseudo" pos:start="605:17" pos:end="605:47"><block_content pos:start="605:17" pos:end="605:47">

                <expr_stmt pos:start="605:17" pos:end="605:47"><expr pos:start="605:17" pos:end="605:46"><name pos:start="605:17" pos:end="605:26"><name pos:start="605:17" pos:end="605:17">s</name><operator pos:start="605:18" pos:end="605:19">-&gt;</operator><name pos:start="605:20" pos:end="605:26">mv_bits</name></name> <operator pos:start="605:28" pos:end="605:29">+=</operator> <call pos:start="605:31" pos:end="605:46"><name pos:start="605:31" pos:end="605:43">get_bits_diff</name><argument_list pos:start="605:44" pos:end="605:46">(<argument pos:start="605:45" pos:end="605:45"><expr pos:start="605:45" pos:end="605:45"><name pos:start="605:45" pos:end="605:45">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="609:13" pos:end="609:68"><expr pos:start="609:13" pos:end="609:67"><call pos:start="609:13" pos:end="609:67"><name pos:start="609:13" pos:end="609:31">mpeg4_encode_blocks</name><argument_list pos:start="609:32" pos:end="609:67">(<argument pos:start="609:33" pos:end="609:33"><expr pos:start="609:33" pos:end="609:33"><name pos:start="609:33" pos:end="609:33">s</name></expr></argument>, <argument pos:start="609:36" pos:end="609:40"><expr pos:start="609:36" pos:end="609:40"><name pos:start="609:36" pos:end="609:40">block</name></expr></argument>, <argument pos:start="609:43" pos:end="609:46"><expr pos:start="609:43" pos:end="609:46"><name pos:start="609:43" pos:end="609:46">NULL</name></expr></argument>, <argument pos:start="609:49" pos:end="609:52"><expr pos:start="609:49" pos:end="609:52"><name pos:start="609:49" pos:end="609:52">NULL</name></expr></argument>, <argument pos:start="609:55" pos:end="609:58"><expr pos:start="609:55" pos:end="609:58"><name pos:start="609:55" pos:end="609:58">NULL</name></expr></argument>, <argument pos:start="609:61" pos:end="609:66"><expr pos:start="609:61" pos:end="609:66"><name pos:start="609:61" pos:end="609:66">tex_pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="613:13" pos:end="615:50"><if pos:start="613:13" pos:end="615:50">if <condition pos:start="613:16" pos:end="613:34">(<expr pos:start="613:17" pos:end="613:33"><name pos:start="613:17" pos:end="613:33">interleaved_stats</name></expr>)</condition><block type="pseudo" pos:start="615:17" pos:end="615:50"><block_content pos:start="615:17" pos:end="615:50">

                <expr_stmt pos:start="615:17" pos:end="615:50"><expr pos:start="615:17" pos:end="615:49"><name pos:start="615:17" pos:end="615:29"><name pos:start="615:17" pos:end="615:17">s</name><operator pos:start="615:18" pos:end="615:19">-&gt;</operator><name pos:start="615:20" pos:end="615:29">p_tex_bits</name></name> <operator pos:start="615:31" pos:end="615:32">+=</operator> <call pos:start="615:34" pos:end="615:49"><name pos:start="615:34" pos:end="615:46">get_bits_diff</name><argument_list pos:start="615:47" pos:end="615:49">(<argument pos:start="615:48" pos:end="615:48"><expr pos:start="615:48" pos:end="615:48"><name pos:start="615:48" pos:end="615:48">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="619:13" pos:end="619:25"><expr pos:start="619:13" pos:end="619:24"><name pos:start="619:13" pos:end="619:22"><name pos:start="619:13" pos:end="619:13">s</name><operator pos:start="619:14" pos:end="619:15">-&gt;</operator><name pos:start="619:16" pos:end="619:22">f_count</name></name><operator pos:start="619:23" pos:end="619:24">++</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="623:7" pos:end="745:5">else <block pos:start="623:12" pos:end="745:5">{<block_content pos:start="625:9" pos:end="743:76">

        <decl_stmt pos:start="625:9" pos:end="625:16"><decl pos:start="625:9" pos:end="625:15"><type pos:start="625:9" pos:end="625:11"><name pos:start="625:9" pos:end="625:11">int</name></type> <name pos:start="625:13" pos:end="625:15">cbp</name></decl>;</decl_stmt>

        <decl_stmt pos:start="627:9" pos:end="627:23"><decl pos:start="627:9" pos:end="627:22"><type pos:start="627:9" pos:end="627:11"><name pos:start="627:9" pos:end="627:11">int</name></type> <name pos:start="627:13" pos:end="627:22"><name pos:start="627:13" pos:end="627:19">dc_diff</name><index pos:start="627:20" pos:end="627:22">[<expr pos:start="627:21" pos:end="627:21"><literal type="number" pos:start="627:21" pos:end="627:21">6</literal></expr>]</index></name></decl>;</decl_stmt>  <comment type="line" pos:start="627:26" pos:end="627:71">// dc values with the dc prediction subtracted</comment>

        <decl_stmt pos:start="629:9" pos:end="629:19"><decl pos:start="629:9" pos:end="629:18"><type pos:start="629:9" pos:end="629:11"><name pos:start="629:9" pos:end="629:11">int</name></type> <name pos:start="629:13" pos:end="629:18"><name pos:start="629:13" pos:end="629:15">dir</name><index pos:start="629:16" pos:end="629:18">[<expr pos:start="629:17" pos:end="629:17"><literal type="number" pos:start="629:17" pos:end="629:17">6</literal></expr>]</index></name></decl>;</decl_stmt>      <comment type="line" pos:start="629:26" pos:end="629:48">// prediction direction</comment>

        <decl_stmt pos:start="631:9" pos:end="631:33"><decl pos:start="631:9" pos:end="631:32"><type pos:start="631:9" pos:end="631:11"><name pos:start="631:9" pos:end="631:11">int</name></type> <name pos:start="631:13" pos:end="631:32"><name pos:start="631:13" pos:end="631:29">zigzag_last_index</name><index pos:start="631:30" pos:end="631:32">[<expr pos:start="631:31" pos:end="631:31"><literal type="number" pos:start="631:31" pos:end="631:31">6</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="633:9" pos:end="633:31"><decl pos:start="633:9" pos:end="633:30"><type pos:start="633:9" pos:end="633:17"><name pos:start="633:9" pos:end="633:15">uint8_t</name> <modifier pos:start="633:17" pos:end="633:17">*</modifier></type><name pos:start="633:18" pos:end="633:30"><name pos:start="633:18" pos:end="633:27">scan_table</name><index pos:start="633:28" pos:end="633:30">[<expr pos:start="633:29" pos:end="633:29"><literal type="number" pos:start="633:29" pos:end="633:29">6</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="635:9" pos:end="635:14"><decl pos:start="635:9" pos:end="635:13"><type pos:start="635:9" pos:end="635:11"><name pos:start="635:9" pos:end="635:11">int</name></type> <name pos:start="635:13" pos:end="635:13">i</name></decl>;</decl_stmt>



        <for pos:start="639:9" pos:end="641:73">for <control pos:start="639:13" pos:end="639:31">(<init pos:start="639:14" pos:end="639:19"><expr pos:start="639:14" pos:end="639:18"><name pos:start="639:14" pos:end="639:14">i</name> <operator pos:start="639:16" pos:end="639:16">=</operator> <literal type="number" pos:start="639:18" pos:end="639:18">0</literal></expr>;</init> <condition pos:start="639:21" pos:end="639:26"><expr pos:start="639:21" pos:end="639:25"><name pos:start="639:21" pos:end="639:21">i</name> <operator pos:start="639:23" pos:end="639:23">&lt;</operator> <literal type="number" pos:start="639:25" pos:end="639:25">6</literal></expr>;</condition> <incr pos:start="639:28" pos:end="639:30"><expr pos:start="639:28" pos:end="639:30"><name pos:start="639:28" pos:end="639:28">i</name><operator pos:start="639:29" pos:end="639:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="641:13" pos:end="641:73"><block_content pos:start="641:13" pos:end="641:73">

            <expr_stmt pos:start="641:13" pos:end="641:73"><expr pos:start="641:13" pos:end="641:72"><name pos:start="641:13" pos:end="641:22"><name pos:start="641:13" pos:end="641:19">dc_diff</name><index pos:start="641:20" pos:end="641:22">[<expr pos:start="641:21" pos:end="641:21"><name pos:start="641:21" pos:end="641:21">i</name></expr>]</index></name> <operator pos:start="641:24" pos:end="641:24">=</operator> <call pos:start="641:26" pos:end="641:72"><name pos:start="641:26" pos:end="641:41">ff_mpeg4_pred_dc</name><argument_list pos:start="641:42" pos:end="641:72">(<argument pos:start="641:43" pos:end="641:43"><expr pos:start="641:43" pos:end="641:43"><name pos:start="641:43" pos:end="641:43">s</name></expr></argument>, <argument pos:start="641:46" pos:end="641:46"><expr pos:start="641:46" pos:end="641:46"><name pos:start="641:46" pos:end="641:46">i</name></expr></argument>, <argument pos:start="641:49" pos:end="641:59"><expr pos:start="641:49" pos:end="641:59"><name pos:start="641:49" pos:end="641:59"><name pos:start="641:49" pos:end="641:53">block</name><index pos:start="641:54" pos:end="641:56">[<expr pos:start="641:55" pos:end="641:55"><name pos:start="641:55" pos:end="641:55">i</name></expr>]</index><index pos:start="641:57" pos:end="641:59">[<expr pos:start="641:58" pos:end="641:58"><literal type="number" pos:start="641:58" pos:end="641:58">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="641:62" pos:end="641:68"><expr pos:start="641:62" pos:end="641:68"><operator pos:start="641:62" pos:end="641:62">&amp;</operator><name pos:start="641:63" pos:end="641:68"><name pos:start="641:63" pos:end="641:65">dir</name><index pos:start="641:66" pos:end="641:68">[<expr pos:start="641:67" pos:end="641:67"><name pos:start="641:67" pos:end="641:67">i</name></expr>]</index></name></expr></argument>, <argument pos:start="641:71" pos:end="641:71"><expr pos:start="641:71" pos:end="641:71"><literal type="number" pos:start="641:71" pos:end="641:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <if_stmt pos:start="645:9" pos:end="655:9"><if pos:start="645:9" pos:end="649:9">if <condition pos:start="645:12" pos:end="645:42">(<expr pos:start="645:13" pos:end="645:41"><name pos:start="645:13" pos:end="645:20"><name pos:start="645:13" pos:end="645:13">s</name><operator pos:start="645:14" pos:end="645:15">-&gt;</operator><name pos:start="645:16" pos:end="645:20">flags</name></name> <operator pos:start="645:22" pos:end="645:22">&amp;</operator> <name pos:start="645:24" pos:end="645:41">CODEC_FLAG_AC_PRED</name></expr>)</condition> <block pos:start="645:44" pos:end="649:9">{<block_content pos:start="647:13" pos:end="647:86">

            <expr_stmt pos:start="647:13" pos:end="647:86"><expr pos:start="647:13" pos:end="647:85"><name pos:start="647:13" pos:end="647:22"><name pos:start="647:13" pos:end="647:13">s</name><operator pos:start="647:14" pos:end="647:15">-&gt;</operator><name pos:start="647:16" pos:end="647:22">ac_pred</name></name> <operator pos:start="647:24" pos:end="647:24">=</operator> <call pos:start="647:26" pos:end="647:85"><name pos:start="647:26" pos:end="647:39">decide_ac_pred</name><argument_list pos:start="647:40" pos:end="647:85">(<argument pos:start="647:41" pos:end="647:41"><expr pos:start="647:41" pos:end="647:41"><name pos:start="647:41" pos:end="647:41">s</name></expr></argument>, <argument pos:start="647:44" pos:end="647:48"><expr pos:start="647:44" pos:end="647:48"><name pos:start="647:44" pos:end="647:48">block</name></expr></argument>, <argument pos:start="647:51" pos:end="647:53"><expr pos:start="647:51" pos:end="647:53"><name pos:start="647:51" pos:end="647:53">dir</name></expr></argument>, <argument pos:start="647:56" pos:end="647:65"><expr pos:start="647:56" pos:end="647:65"><name pos:start="647:56" pos:end="647:65">scan_table</name></expr></argument>, <argument pos:start="647:68" pos:end="647:84"><expr pos:start="647:68" pos:end="647:84"><name pos:start="647:68" pos:end="647:84">zigzag_last_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="649:11" pos:end="655:9">else <block pos:start="649:16" pos:end="655:9">{<block_content pos:start="651:13" pos:end="653:62">

            <for pos:start="651:13" pos:end="653:62">for <control pos:start="651:17" pos:end="651:35">(<init pos:start="651:18" pos:end="651:23"><expr pos:start="651:18" pos:end="651:22"><name pos:start="651:18" pos:end="651:18">i</name> <operator pos:start="651:20" pos:end="651:20">=</operator> <literal type="number" pos:start="651:22" pos:end="651:22">0</literal></expr>;</init> <condition pos:start="651:25" pos:end="651:30"><expr pos:start="651:25" pos:end="651:29"><name pos:start="651:25" pos:end="651:25">i</name> <operator pos:start="651:27" pos:end="651:27">&lt;</operator> <literal type="number" pos:start="651:29" pos:end="651:29">6</literal></expr>;</condition> <incr pos:start="651:32" pos:end="651:34"><expr pos:start="651:32" pos:end="651:34"><name pos:start="651:32" pos:end="651:32">i</name><operator pos:start="651:33" pos:end="651:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="653:17" pos:end="653:62"><block_content pos:start="653:17" pos:end="653:62">

                <expr_stmt pos:start="653:17" pos:end="653:62"><expr pos:start="653:17" pos:end="653:61"><name pos:start="653:17" pos:end="653:29"><name pos:start="653:17" pos:end="653:26">scan_table</name><index pos:start="653:27" pos:end="653:29">[<expr pos:start="653:28" pos:end="653:28"><name pos:start="653:28" pos:end="653:28">i</name></expr>]</index></name> <operator pos:start="653:31" pos:end="653:31">=</operator> <name pos:start="653:33" pos:end="653:61"><name pos:start="653:33" pos:end="653:33">s</name><operator pos:start="653:34" pos:end="653:35">-&gt;</operator><name pos:start="653:36" pos:end="653:50">intra_scantable</name><operator pos:start="653:51" pos:end="653:51">.</operator><name pos:start="653:52" pos:end="653:61">permutated</name></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></else></if_stmt>



        <comment type="block" pos:start="659:9" pos:end="659:25">/* compute cbp */</comment>

        <expr_stmt pos:start="661:9" pos:end="661:16"><expr pos:start="661:9" pos:end="661:15"><name pos:start="661:9" pos:end="661:11">cbp</name> <operator pos:start="661:13" pos:end="661:13">=</operator> <literal type="number" pos:start="661:15" pos:end="661:15">0</literal></expr>;</expr_stmt>

        <for pos:start="663:9" pos:end="667:36">for <control pos:start="663:13" pos:end="663:31">(<init pos:start="663:14" pos:end="663:19"><expr pos:start="663:14" pos:end="663:18"><name pos:start="663:14" pos:end="663:14">i</name> <operator pos:start="663:16" pos:end="663:16">=</operator> <literal type="number" pos:start="663:18" pos:end="663:18">0</literal></expr>;</init> <condition pos:start="663:21" pos:end="663:26"><expr pos:start="663:21" pos:end="663:25"><name pos:start="663:21" pos:end="663:21">i</name> <operator pos:start="663:23" pos:end="663:23">&lt;</operator> <literal type="number" pos:start="663:25" pos:end="663:25">6</literal></expr>;</condition> <incr pos:start="663:28" pos:end="663:30"><expr pos:start="663:28" pos:end="663:30"><name pos:start="663:28" pos:end="663:28">i</name><operator pos:start="663:29" pos:end="663:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="665:13" pos:end="667:36"><block_content pos:start="665:13" pos:end="667:36">

            <if_stmt pos:start="665:13" pos:end="667:36"><if pos:start="665:13" pos:end="667:36">if <condition pos:start="665:16" pos:end="665:44">(<expr pos:start="665:17" pos:end="665:43"><name pos:start="665:17" pos:end="665:38"><name pos:start="665:17" pos:end="665:17">s</name><operator pos:start="665:18" pos:end="665:19">-&gt;</operator><name pos:start="665:20" pos:end="665:35">block_last_index</name><index pos:start="665:36" pos:end="665:38">[<expr pos:start="665:37" pos:end="665:37"><name pos:start="665:37" pos:end="665:37">i</name></expr>]</index></name> <operator pos:start="665:40" pos:end="665:41">&gt;=</operator> <literal type="number" pos:start="665:43" pos:end="665:43">1</literal></expr>)</condition><block type="pseudo" pos:start="667:17" pos:end="667:36"><block_content pos:start="667:17" pos:end="667:36">

                <expr_stmt pos:start="667:17" pos:end="667:36"><expr pos:start="667:17" pos:end="667:35"><name pos:start="667:17" pos:end="667:19">cbp</name> <operator pos:start="667:21" pos:end="667:22">|=</operator> <literal type="number" pos:start="667:24" pos:end="667:24">1</literal> <operator pos:start="667:26" pos:end="667:27">&lt;&lt;</operator> <operator pos:start="667:29" pos:end="667:29">(</operator><literal type="number" pos:start="667:30" pos:end="667:32">5</literal> <operator pos:start="667:32" pos:end="667:32">-</operator> <name pos:start="667:34" pos:end="667:34">i</name><operator pos:start="667:35" pos:end="667:35">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>



        <expr_stmt pos:start="671:9" pos:end="671:23"><expr pos:start="671:9" pos:end="671:22"><name pos:start="671:9" pos:end="671:12">cbpc</name> <operator pos:start="671:14" pos:end="671:14">=</operator> <name pos:start="671:16" pos:end="671:18">cbp</name> <operator pos:start="671:20" pos:end="671:20">&amp;</operator> <literal type="number" pos:start="671:22" pos:end="671:22">3</literal></expr>;</expr_stmt>

        <if_stmt pos:start="673:9" pos:end="699:9"><if pos:start="673:9" pos:end="685:9">if <condition pos:start="673:12" pos:end="673:46">(<expr pos:start="673:13" pos:end="673:45"><name pos:start="673:13" pos:end="673:24"><name pos:start="673:13" pos:end="673:13">s</name><operator pos:start="673:14" pos:end="673:15">-&gt;</operator><name pos:start="673:16" pos:end="673:24">pict_type</name></name> <operator pos:start="673:26" pos:end="673:27">==</operator> <name pos:start="673:29" pos:end="673:45">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="673:48" pos:end="685:9">{<block_content pos:start="675:13" pos:end="683:53">

            <if_stmt pos:start="675:13" pos:end="677:26"><if pos:start="675:13" pos:end="677:26">if <condition pos:start="675:16" pos:end="675:26">(<expr pos:start="675:17" pos:end="675:25"><name pos:start="675:17" pos:end="675:25"><name pos:start="675:17" pos:end="675:17">s</name><operator pos:start="675:18" pos:end="675:19">-&gt;</operator><name pos:start="675:20" pos:end="675:25">dquant</name></name></expr>)</condition><block type="pseudo" pos:start="677:17" pos:end="677:26"><block_content pos:start="677:17" pos:end="677:26">

                <expr_stmt pos:start="677:17" pos:end="677:26"><expr pos:start="677:17" pos:end="677:25"><name pos:start="677:17" pos:end="677:20">cbpc</name> <operator pos:start="677:22" pos:end="677:23">+=</operator> <literal type="number" pos:start="677:25" pos:end="677:25">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="679:13" pos:end="683:53"><expr pos:start="679:13" pos:end="683:52"><call pos:start="679:13" pos:end="683:52"><name pos:start="679:13" pos:end="679:20">put_bits</name><argument_list pos:start="679:21" pos:end="683:52">(<argument pos:start="679:22" pos:end="679:27"><expr pos:start="679:22" pos:end="679:27"><operator pos:start="679:22" pos:end="679:22">&amp;</operator><name pos:start="679:23" pos:end="679:27"><name pos:start="679:23" pos:end="679:23">s</name><operator pos:start="679:24" pos:end="679:25">-&gt;</operator><name pos:start="679:26" pos:end="679:27">pb</name></name></expr></argument>,

                     <argument pos:start="681:22" pos:end="681:51"><expr pos:start="681:22" pos:end="681:51"><name pos:start="681:22" pos:end="681:51"><name pos:start="681:22" pos:end="681:45">ff_h263_intra_MCBPC_bits</name><index pos:start="681:46" pos:end="681:51">[<expr pos:start="681:47" pos:end="681:50"><name pos:start="681:47" pos:end="681:50">cbpc</name></expr>]</index></name></expr></argument>,

                     <argument pos:start="683:22" pos:end="683:51"><expr pos:start="683:22" pos:end="683:51"><name pos:start="683:22" pos:end="683:51"><name pos:start="683:22" pos:end="683:45">ff_h263_intra_MCBPC_code</name><index pos:start="683:46" pos:end="683:51">[<expr pos:start="683:47" pos:end="683:50"><name pos:start="683:47" pos:end="683:50">cbpc</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="685:11" pos:end="699:9">else <block pos:start="685:16" pos:end="699:9">{<block_content pos:start="687:13" pos:end="697:57">

            <if_stmt pos:start="687:13" pos:end="689:26"><if pos:start="687:13" pos:end="689:26">if <condition pos:start="687:16" pos:end="687:26">(<expr pos:start="687:17" pos:end="687:25"><name pos:start="687:17" pos:end="687:25"><name pos:start="687:17" pos:end="687:17">s</name><operator pos:start="687:18" pos:end="687:19">-&gt;</operator><name pos:start="687:20" pos:end="687:25">dquant</name></name></expr>)</condition><block type="pseudo" pos:start="689:17" pos:end="689:26"><block_content pos:start="689:17" pos:end="689:26">

                <expr_stmt pos:start="689:17" pos:end="689:26"><expr pos:start="689:17" pos:end="689:25"><name pos:start="689:17" pos:end="689:20">cbpc</name> <operator pos:start="689:22" pos:end="689:23">+=</operator> <literal type="number" pos:start="689:25" pos:end="689:25">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="691:13" pos:end="691:35"><expr pos:start="691:13" pos:end="691:34"><call pos:start="691:13" pos:end="691:34"><name pos:start="691:13" pos:end="691:20">put_bits</name><argument_list pos:start="691:21" pos:end="691:34">(<argument pos:start="691:22" pos:end="691:27"><expr pos:start="691:22" pos:end="691:27"><operator pos:start="691:22" pos:end="691:22">&amp;</operator><name pos:start="691:23" pos:end="691:27"><name pos:start="691:23" pos:end="691:23">s</name><operator pos:start="691:24" pos:end="691:25">-&gt;</operator><name pos:start="691:26" pos:end="691:27">pb</name></name></expr></argument>, <argument pos:start="691:30" pos:end="691:30"><expr pos:start="691:30" pos:end="691:30"><literal type="number" pos:start="691:30" pos:end="691:30">1</literal></expr></argument>, <argument pos:start="691:33" pos:end="691:33"><expr pos:start="691:33" pos:end="691:33"><literal type="number" pos:start="691:33" pos:end="691:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="block" pos:start="691:41" pos:end="691:54">/* mb coded */</comment>

            <expr_stmt pos:start="693:13" pos:end="697:57"><expr pos:start="693:13" pos:end="697:56"><call pos:start="693:13" pos:end="697:56"><name pos:start="693:13" pos:end="693:20">put_bits</name><argument_list pos:start="693:21" pos:end="697:56">(<argument pos:start="693:22" pos:end="693:27"><expr pos:start="693:22" pos:end="693:27"><operator pos:start="693:22" pos:end="693:22">&amp;</operator><name pos:start="693:23" pos:end="693:27"><name pos:start="693:23" pos:end="693:23">s</name><operator pos:start="693:24" pos:end="693:25">-&gt;</operator><name pos:start="693:26" pos:end="693:27">pb</name></name></expr></argument>,

                     <argument pos:start="695:22" pos:end="695:55"><expr pos:start="695:22" pos:end="695:55"><name pos:start="695:22" pos:end="695:55"><name pos:start="695:22" pos:end="695:45">ff_h263_inter_MCBPC_bits</name><index pos:start="695:46" pos:end="695:55">[<expr pos:start="695:47" pos:end="695:54"><name pos:start="695:47" pos:end="695:50">cbpc</name> <operator pos:start="695:52" pos:end="695:52">+</operator> <literal type="number" pos:start="695:54" pos:end="695:54">4</literal></expr>]</index></name></expr></argument>,

                     <argument pos:start="697:22" pos:end="697:55"><expr pos:start="697:22" pos:end="697:55"><name pos:start="697:22" pos:end="697:55"><name pos:start="697:22" pos:end="697:45">ff_h263_inter_MCBPC_code</name><index pos:start="697:46" pos:end="697:55">[<expr pos:start="697:47" pos:end="697:54"><name pos:start="697:47" pos:end="697:50">cbpc</name> <operator pos:start="697:52" pos:end="697:52">+</operator> <literal type="number" pos:start="697:54" pos:end="697:54">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="701:9" pos:end="701:37"><expr pos:start="701:9" pos:end="701:36"><call pos:start="701:9" pos:end="701:36"><name pos:start="701:9" pos:end="701:16">put_bits</name><argument_list pos:start="701:17" pos:end="701:36">(<argument pos:start="701:18" pos:end="701:20"><expr pos:start="701:18" pos:end="701:20"><name pos:start="701:18" pos:end="701:20">pb2</name></expr></argument>, <argument pos:start="701:23" pos:end="701:23"><expr pos:start="701:23" pos:end="701:23"><literal type="number" pos:start="701:23" pos:end="701:23">1</literal></expr></argument>, <argument pos:start="701:26" pos:end="701:35"><expr pos:start="701:26" pos:end="701:35"><name pos:start="701:26" pos:end="701:35"><name pos:start="701:26" pos:end="701:26">s</name><operator pos:start="701:27" pos:end="701:28">-&gt;</operator><name pos:start="701:29" pos:end="701:35">ac_pred</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="703:9" pos:end="703:24"><expr pos:start="703:9" pos:end="703:23"><name pos:start="703:9" pos:end="703:12">cbpy</name> <operator pos:start="703:14" pos:end="703:14">=</operator> <name pos:start="703:16" pos:end="703:18">cbp</name> <operator pos:start="703:20" pos:end="703:21">&gt;&gt;</operator> <literal type="number" pos:start="703:23" pos:end="703:23">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="705:9" pos:end="705:76"><expr pos:start="705:9" pos:end="705:75"><call pos:start="705:9" pos:end="705:75"><name pos:start="705:9" pos:end="705:16">put_bits</name><argument_list pos:start="705:17" pos:end="705:75">(<argument pos:start="705:18" pos:end="705:20"><expr pos:start="705:18" pos:end="705:20"><name pos:start="705:18" pos:end="705:20">pb2</name></expr></argument>, <argument pos:start="705:23" pos:end="705:47"><expr pos:start="705:23" pos:end="705:47"><name pos:start="705:23" pos:end="705:47"><name pos:start="705:23" pos:end="705:38">ff_h263_cbpy_tab</name><index pos:start="705:39" pos:end="705:44">[<expr pos:start="705:40" pos:end="705:43"><name pos:start="705:40" pos:end="705:43">cbpy</name></expr>]</index><index pos:start="705:45" pos:end="705:47">[<expr pos:start="705:46" pos:end="705:46"><literal type="number" pos:start="705:46" pos:end="705:46">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="705:50" pos:end="705:74"><expr pos:start="705:50" pos:end="705:74"><name pos:start="705:50" pos:end="705:74"><name pos:start="705:50" pos:end="705:65">ff_h263_cbpy_tab</name><index pos:start="705:66" pos:end="705:71">[<expr pos:start="705:67" pos:end="705:70"><name pos:start="705:67" pos:end="705:70">cbpy</name></expr>]</index><index pos:start="705:72" pos:end="705:74">[<expr pos:start="705:73" pos:end="705:73"><literal type="number" pos:start="705:73" pos:end="705:73">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="707:9" pos:end="709:59"><if pos:start="707:9" pos:end="709:59">if <condition pos:start="707:12" pos:end="707:22">(<expr pos:start="707:13" pos:end="707:21"><name pos:start="707:13" pos:end="707:21"><name pos:start="707:13" pos:end="707:13">s</name><operator pos:start="707:14" pos:end="707:15">-&gt;</operator><name pos:start="707:16" pos:end="707:21">dquant</name></name></expr>)</condition><block type="pseudo" pos:start="709:13" pos:end="709:59"><block_content pos:start="709:13" pos:end="709:59">

            <expr_stmt pos:start="709:13" pos:end="709:59"><expr pos:start="709:13" pos:end="709:58"><call pos:start="709:13" pos:end="709:58"><name pos:start="709:13" pos:end="709:20">put_bits</name><argument_list pos:start="709:21" pos:end="709:58">(<argument pos:start="709:22" pos:end="709:26"><expr pos:start="709:22" pos:end="709:26"><name pos:start="709:22" pos:end="709:26">dc_pb</name></expr></argument>, <argument pos:start="709:29" pos:end="709:29"><expr pos:start="709:29" pos:end="709:29"><literal type="number" pos:start="709:29" pos:end="709:29">2</literal></expr></argument>, <argument pos:start="709:32" pos:end="709:57"><expr pos:start="709:32" pos:end="709:57"><name pos:start="709:32" pos:end="709:57"><name pos:start="709:32" pos:end="709:42">dquant_code</name><index pos:start="709:43" pos:end="709:57">[<expr pos:start="709:44" pos:end="709:56"><name pos:start="709:44" pos:end="709:52"><name pos:start="709:44" pos:end="709:44">s</name><operator pos:start="709:45" pos:end="709:46">-&gt;</operator><name pos:start="709:47" pos:end="709:52">dquant</name></name> <operator pos:start="709:54" pos:end="709:54">+</operator> <literal type="number" pos:start="709:56" pos:end="709:56">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="713:9" pos:end="715:50"><if pos:start="713:9" pos:end="715:50">if <condition pos:start="713:12" pos:end="713:37">(<expr pos:start="713:13" pos:end="713:36"><operator pos:start="713:13" pos:end="713:13">!</operator><name pos:start="713:14" pos:end="713:36"><name pos:start="713:14" pos:end="713:14">s</name><operator pos:start="713:15" pos:end="713:16">-&gt;</operator><name pos:start="713:17" pos:end="713:36">progressive_sequence</name></name></expr>)</condition><block type="pseudo" pos:start="715:13" pos:end="715:50"><block_content pos:start="715:13" pos:end="715:50">

            <expr_stmt pos:start="715:13" pos:end="715:50"><expr pos:start="715:13" pos:end="715:49"><call pos:start="715:13" pos:end="715:49"><name pos:start="715:13" pos:end="715:20">put_bits</name><argument_list pos:start="715:21" pos:end="715:49">(<argument pos:start="715:22" pos:end="715:26"><expr pos:start="715:22" pos:end="715:26"><name pos:start="715:22" pos:end="715:26">dc_pb</name></expr></argument>, <argument pos:start="715:29" pos:end="715:29"><expr pos:start="715:29" pos:end="715:29"><literal type="number" pos:start="715:29" pos:end="715:29">1</literal></expr></argument>, <argument pos:start="715:32" pos:end="715:48"><expr pos:start="715:32" pos:end="715:48"><name pos:start="715:32" pos:end="715:48"><name pos:start="715:32" pos:end="715:32">s</name><operator pos:start="715:33" pos:end="715:34">-&gt;</operator><name pos:start="715:35" pos:end="715:48">interlaced_dct</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="719:9" pos:end="721:45"><if pos:start="719:9" pos:end="721:45">if <condition pos:start="719:12" pos:end="719:30">(<expr pos:start="719:13" pos:end="719:29"><name pos:start="719:13" pos:end="719:29">interleaved_stats</name></expr>)</condition><block type="pseudo" pos:start="721:13" pos:end="721:45"><block_content pos:start="721:13" pos:end="721:45">

            <expr_stmt pos:start="721:13" pos:end="721:45"><expr pos:start="721:13" pos:end="721:44"><name pos:start="721:13" pos:end="721:24"><name pos:start="721:13" pos:end="721:13">s</name><operator pos:start="721:14" pos:end="721:15">-&gt;</operator><name pos:start="721:16" pos:end="721:24">misc_bits</name></name> <operator pos:start="721:26" pos:end="721:27">+=</operator> <call pos:start="721:29" pos:end="721:44"><name pos:start="721:29" pos:end="721:41">get_bits_diff</name><argument_list pos:start="721:42" pos:end="721:44">(<argument pos:start="721:43" pos:end="721:43"><expr pos:start="721:43" pos:end="721:43"><name pos:start="721:43" pos:end="721:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="725:9" pos:end="725:74"><expr pos:start="725:9" pos:end="725:73"><call pos:start="725:9" pos:end="725:73"><name pos:start="725:9" pos:end="725:27">mpeg4_encode_blocks</name><argument_list pos:start="725:28" pos:end="725:73">(<argument pos:start="725:29" pos:end="725:29"><expr pos:start="725:29" pos:end="725:29"><name pos:start="725:29" pos:end="725:29">s</name></expr></argument>, <argument pos:start="725:32" pos:end="725:36"><expr pos:start="725:32" pos:end="725:36"><name pos:start="725:32" pos:end="725:36">block</name></expr></argument>, <argument pos:start="725:39" pos:end="725:45"><expr pos:start="725:39" pos:end="725:45"><name pos:start="725:39" pos:end="725:45">dc_diff</name></expr></argument>, <argument pos:start="725:48" pos:end="725:57"><expr pos:start="725:48" pos:end="725:57"><name pos:start="725:48" pos:end="725:57">scan_table</name></expr></argument>, <argument pos:start="725:60" pos:end="725:64"><expr pos:start="725:60" pos:end="725:64"><name pos:start="725:60" pos:end="725:64">dc_pb</name></expr></argument>, <argument pos:start="725:67" pos:end="725:72"><expr pos:start="725:67" pos:end="725:72"><name pos:start="725:67" pos:end="725:72">tex_pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="729:9" pos:end="731:46"><if pos:start="729:9" pos:end="731:46">if <condition pos:start="729:12" pos:end="729:30">(<expr pos:start="729:13" pos:end="729:29"><name pos:start="729:13" pos:end="729:29">interleaved_stats</name></expr>)</condition><block type="pseudo" pos:start="731:13" pos:end="731:46"><block_content pos:start="731:13" pos:end="731:46">

            <expr_stmt pos:start="731:13" pos:end="731:46"><expr pos:start="731:13" pos:end="731:45"><name pos:start="731:13" pos:end="731:25"><name pos:start="731:13" pos:end="731:13">s</name><operator pos:start="731:14" pos:end="731:15">-&gt;</operator><name pos:start="731:16" pos:end="731:25">i_tex_bits</name></name> <operator pos:start="731:27" pos:end="731:28">+=</operator> <call pos:start="731:30" pos:end="731:45"><name pos:start="731:30" pos:end="731:42">get_bits_diff</name><argument_list pos:start="731:43" pos:end="731:45">(<argument pos:start="731:44" pos:end="731:44"><expr pos:start="731:44" pos:end="731:44"><name pos:start="731:44" pos:end="731:44">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="733:9" pos:end="733:21"><expr pos:start="733:9" pos:end="733:20"><name pos:start="733:9" pos:end="733:18"><name pos:start="733:9" pos:end="733:9">s</name><operator pos:start="733:10" pos:end="733:11">-&gt;</operator><name pos:start="733:12" pos:end="733:18">i_count</name></name><operator pos:start="733:19" pos:end="733:20">++</operator></expr>;</expr_stmt>



        <comment type="block" pos:start="737:9" pos:end="739:54">/* restore ac coeffs &amp; last_index stuff

         * if we messed them up with the prediction */</comment>

        <if_stmt pos:start="741:9" pos:end="743:76"><if pos:start="741:9" pos:end="743:76">if <condition pos:start="741:12" pos:end="741:23">(<expr pos:start="741:13" pos:end="741:22"><name pos:start="741:13" pos:end="741:22"><name pos:start="741:13" pos:end="741:13">s</name><operator pos:start="741:14" pos:end="741:15">-&gt;</operator><name pos:start="741:16" pos:end="741:22">ac_pred</name></name></expr>)</condition><block type="pseudo" pos:start="743:13" pos:end="743:76"><block_content pos:start="743:13" pos:end="743:76">

            <expr_stmt pos:start="743:13" pos:end="743:76"><expr pos:start="743:13" pos:end="743:75"><call pos:start="743:13" pos:end="743:75"><name pos:start="743:13" pos:end="743:29">restore_ac_coeffs</name><argument_list pos:start="743:30" pos:end="743:75">(<argument pos:start="743:31" pos:end="743:31"><expr pos:start="743:31" pos:end="743:31"><name pos:start="743:31" pos:end="743:31">s</name></expr></argument>, <argument pos:start="743:34" pos:end="743:38"><expr pos:start="743:34" pos:end="743:38"><name pos:start="743:34" pos:end="743:38">block</name></expr></argument>, <argument pos:start="743:41" pos:end="743:43"><expr pos:start="743:41" pos:end="743:43"><name pos:start="743:41" pos:end="743:43">dir</name></expr></argument>, <argument pos:start="743:46" pos:end="743:55"><expr pos:start="743:46" pos:end="743:55"><name pos:start="743:46" pos:end="743:55">scan_table</name></expr></argument>, <argument pos:start="743:58" pos:end="743:74"><expr pos:start="743:58" pos:end="743:74"><name pos:start="743:58" pos:end="743:74">zigzag_last_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
