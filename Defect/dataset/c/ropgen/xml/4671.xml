<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4671.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:10">ram_addr_t</name></type> <name pos:start="1:12" pos:end="1:30">ppc4xx_sdram_adjust</name><parameter_list pos:start="1:31" pos:end="9:69">(<parameter pos:start="1:32" pos:end="1:50"><decl pos:start="1:32" pos:end="1:50"><type pos:start="1:32" pos:end="1:50"><name pos:start="1:32" pos:end="1:41">ram_addr_t</name></type> <name pos:start="1:43" pos:end="1:50">ram_size</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:64"><decl pos:start="1:53" pos:end="1:64"><type pos:start="1:53" pos:end="1:64"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:64">nr_banks</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:58"><decl pos:start="3:32" pos:end="3:58"><type pos:start="3:32" pos:end="3:56"><name pos:start="3:32" pos:end="3:43">MemoryRegion</name></type> <name pos:start="3:45" pos:end="3:58"><name pos:start="3:45" pos:end="3:56">ram_memories</name><index pos:start="3:57" pos:end="3:58">[]</index></name></decl></parameter>,

                               <parameter pos:start="5:32" pos:end="5:49"><decl pos:start="5:32" pos:end="5:49"><type pos:start="5:32" pos:end="5:47"><name pos:start="5:32" pos:end="5:37">hwaddr</name></type> <name pos:start="5:39" pos:end="5:49"><name pos:start="5:39" pos:end="5:47">ram_bases</name><index pos:start="5:48" pos:end="5:49">[]</index></name></decl></parameter>,

                               <parameter pos:start="7:32" pos:end="7:49"><decl pos:start="7:32" pos:end="7:49"><type pos:start="7:32" pos:end="7:47"><name pos:start="7:32" pos:end="7:37">hwaddr</name></type> <name pos:start="7:39" pos:end="7:49"><name pos:start="7:39" pos:end="7:47">ram_sizes</name><index pos:start="7:48" pos:end="7:49">[]</index></name></decl></parameter>,

                               <parameter pos:start="9:32" pos:end="9:68"><decl pos:start="9:32" pos:end="9:68"><type pos:start="9:32" pos:end="9:66"><specifier pos:start="9:32" pos:end="9:36">const</specifier> <name pos:start="9:38" pos:end="9:45">unsigned</name> <name pos:start="9:47" pos:end="9:49">int</name></type> <name pos:start="9:51" pos:end="9:68"><name pos:start="9:51" pos:end="9:66">sdram_bank_sizes</name><index pos:start="9:67" pos:end="9:68">[]</index></name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="81:1">{<block_content pos:start="13:5" pos:end="79:20">

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:35"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:14">ram_addr_t</name></type> <name pos:start="13:16" pos:end="13:24">size_left</name> <init pos:start="13:26" pos:end="13:35">= <expr pos:start="13:28" pos:end="13:35"><name pos:start="13:28" pos:end="13:35">ram_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:14">ram_addr_t</name></type> <name pos:start="15:16" pos:end="15:19">base</name> <init pos:start="15:21" pos:end="15:23">= <expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">j</name></decl>;</decl_stmt>



    <for pos:start="23:5" pos:end="65:5">for <control pos:start="23:9" pos:end="23:34">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:29"><expr pos:start="23:17" pos:end="23:28"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:28">nr_banks</name></expr>;</condition> <incr pos:start="23:31" pos:end="23:33"><expr pos:start="23:31" pos:end="23:33"><name pos:start="23:31" pos:end="23:31">i</name><operator pos:start="23:32" pos:end="23:33">++</operator></expr></incr>)</control> <block pos:start="23:36" pos:end="65:5">{<block_content pos:start="25:9" pos:end="63:9">

        <for pos:start="25:9" pos:end="53:9">for <control pos:start="25:13" pos:end="25:50">(<init pos:start="25:14" pos:end="25:19"><expr pos:start="25:14" pos:end="25:18"><name pos:start="25:14" pos:end="25:14">j</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>;</init> <condition pos:start="25:21" pos:end="25:45"><expr pos:start="25:21" pos:end="25:44"><name pos:start="25:21" pos:end="25:39"><name pos:start="25:21" pos:end="25:36">sdram_bank_sizes</name><index pos:start="25:37" pos:end="25:39">[<expr pos:start="25:38" pos:end="25:38"><name pos:start="25:38" pos:end="25:38">j</name></expr>]</index></name> <operator pos:start="25:41" pos:end="25:42">!=</operator> <literal type="number" pos:start="25:44" pos:end="25:44">0</literal></expr>;</condition> <incr pos:start="25:47" pos:end="25:49"><expr pos:start="25:47" pos:end="25:49"><name pos:start="25:47" pos:end="25:47">j</name><operator pos:start="25:48" pos:end="25:49">++</operator></expr></incr>)</control> <block pos:start="25:52" pos:end="53:9">{<block_content pos:start="27:13" pos:end="51:13">

            <decl_stmt pos:start="27:13" pos:end="27:57"><decl pos:start="27:13" pos:end="27:56"><type pos:start="27:13" pos:end="27:24"><name pos:start="27:13" pos:end="27:20">unsigned</name> <name pos:start="27:22" pos:end="27:24">int</name></type> <name pos:start="27:26" pos:end="27:34">bank_size</name> <init pos:start="27:36" pos:end="27:56">= <expr pos:start="27:38" pos:end="27:56"><name pos:start="27:38" pos:end="27:56"><name pos:start="27:38" pos:end="27:53">sdram_bank_sizes</name><index pos:start="27:54" pos:end="27:56">[<expr pos:start="27:55" pos:end="27:55"><name pos:start="27:55" pos:end="27:55">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="31:13" pos:end="51:13"><if pos:start="31:13" pos:end="51:13">if <condition pos:start="31:16" pos:end="31:39">(<expr pos:start="31:17" pos:end="31:38"><name pos:start="31:17" pos:end="31:25">bank_size</name> <operator pos:start="31:27" pos:end="31:28">&lt;=</operator> <name pos:start="31:30" pos:end="31:38">size_left</name></expr>)</condition> <block pos:start="31:41" pos:end="51:13">{<block_content pos:start="33:17" pos:end="49:22">

                <decl_stmt pos:start="33:17" pos:end="33:30"><decl pos:start="33:17" pos:end="33:29"><type pos:start="33:17" pos:end="33:20"><name pos:start="33:17" pos:end="33:20">char</name></type> <name pos:start="33:22" pos:end="33:29"><name pos:start="33:22" pos:end="33:25">name</name><index pos:start="33:26" pos:end="33:29">[<expr pos:start="33:27" pos:end="33:28"><literal type="number" pos:start="33:27" pos:end="33:28">32</literal></expr>]</index></name></decl>;</decl_stmt>

                <expr_stmt pos:start="35:17" pos:end="35:66"><expr pos:start="35:17" pos:end="35:65"><call pos:start="35:17" pos:end="35:65"><name pos:start="35:17" pos:end="35:24">snprintf</name><argument_list pos:start="35:25" pos:end="35:65">(<argument pos:start="35:26" pos:end="35:29"><expr pos:start="35:26" pos:end="35:29"><name pos:start="35:26" pos:end="35:29">name</name></expr></argument>, <argument pos:start="35:32" pos:end="35:43"><expr pos:start="35:32" pos:end="35:43"><sizeof pos:start="35:32" pos:end="35:43">sizeof<argument_list pos:start="35:38" pos:end="35:43">(<argument pos:start="35:39" pos:end="35:42"><expr pos:start="35:39" pos:end="35:42"><name pos:start="35:39" pos:end="35:42">name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="35:46" pos:end="35:61"><expr pos:start="35:46" pos:end="35:61"><literal type="string" pos:start="35:46" pos:end="35:61">"ppc4xx.sdram%d"</literal></expr></argument>, <argument pos:start="35:64" pos:end="35:64"><expr pos:start="35:64" pos:end="35:64"><name pos:start="35:64" pos:end="35:64">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="39:70"><expr pos:start="37:17" pos:end="39:69"><call pos:start="37:17" pos:end="39:69"><name pos:start="37:17" pos:end="37:52">memory_region_allocate_system_memory</name><argument_list pos:start="37:53" pos:end="39:69">(<argument pos:start="37:54" pos:end="37:69"><expr pos:start="37:54" pos:end="37:69"><operator pos:start="37:54" pos:end="37:54">&amp;</operator><name pos:start="37:55" pos:end="37:69"><name pos:start="37:55" pos:end="37:66">ram_memories</name><index pos:start="37:67" pos:end="37:69">[<expr pos:start="37:68" pos:end="37:68"><name pos:start="37:68" pos:end="37:68">i</name></expr>]</index></name></expr></argument>, <argument pos:start="37:72" pos:end="37:75"><expr pos:start="37:72" pos:end="37:75"><name pos:start="37:72" pos:end="37:75">NULL</name></expr></argument>,

                                                     <argument pos:start="39:54" pos:end="39:57"><expr pos:start="39:54" pos:end="39:57"><name pos:start="39:54" pos:end="39:57">name</name></expr></argument>, <argument pos:start="39:60" pos:end="39:68"><expr pos:start="39:60" pos:end="39:68"><name pos:start="39:60" pos:end="39:68">bank_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:36"><expr pos:start="41:17" pos:end="41:35"><name pos:start="41:17" pos:end="41:28"><name pos:start="41:17" pos:end="41:25">ram_bases</name><index pos:start="41:26" pos:end="41:28">[<expr pos:start="41:27" pos:end="41:27"><name pos:start="41:27" pos:end="41:27">i</name></expr>]</index></name> <operator pos:start="41:30" pos:end="41:30">=</operator> <name pos:start="41:32" pos:end="41:35">base</name></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:41"><expr pos:start="43:17" pos:end="43:40"><name pos:start="43:17" pos:end="43:28"><name pos:start="43:17" pos:end="43:25">ram_sizes</name><index pos:start="43:26" pos:end="43:28">[<expr pos:start="43:27" pos:end="43:27"><name pos:start="43:27" pos:end="43:27">i</name></expr>]</index></name> <operator pos:start="43:30" pos:end="43:30">=</operator> <name pos:start="43:32" pos:end="43:40">bank_size</name></expr>;</expr_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:34"><expr pos:start="45:17" pos:end="45:33"><name pos:start="45:17" pos:end="45:20">base</name> <operator pos:start="45:22" pos:end="45:23">+=</operator> <name pos:start="45:25" pos:end="45:33">bank_size</name></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:39"><expr pos:start="47:17" pos:end="47:38"><name pos:start="47:17" pos:end="47:25">size_left</name> <operator pos:start="47:27" pos:end="47:28">-=</operator> <name pos:start="47:30" pos:end="47:38">bank_size</name></expr>;</expr_stmt>

                <break pos:start="49:17" pos:end="49:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="57:9" pos:end="63:9"><if pos:start="57:9" pos:end="63:9">if <condition pos:start="57:12" pos:end="57:23">(<expr pos:start="57:13" pos:end="57:22"><operator pos:start="57:13" pos:end="57:13">!</operator><name pos:start="57:14" pos:end="57:22">size_left</name></expr>)</condition> <block pos:start="57:25" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:18">

            <comment type="block" pos:start="59:13" pos:end="59:53">/* No need to use the remaining banks. */</comment>

            <break pos:start="61:13" pos:end="61:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="69:5" pos:end="69:26"><expr pos:start="69:5" pos:end="69:25"><name pos:start="69:5" pos:end="69:12">ram_size</name> <operator pos:start="69:14" pos:end="69:15">-=</operator> <name pos:start="69:17" pos:end="69:25">size_left</name></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="75:38"><if pos:start="71:5" pos:end="75:38">if <condition pos:start="71:8" pos:end="71:18">(<expr pos:start="71:9" pos:end="71:17"><name pos:start="71:9" pos:end="71:17">size_left</name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="75:38"><block_content pos:start="73:9" pos:end="75:38">

        <expr_stmt pos:start="73:9" pos:end="75:38"><expr pos:start="73:9" pos:end="75:37"><call pos:start="73:9" pos:end="75:37"><name pos:start="73:9" pos:end="73:14">printf</name><argument_list pos:start="73:15" pos:end="75:37">(<argument pos:start="73:16" pos:end="73:78"><expr pos:start="73:16" pos:end="73:78"><literal type="string" pos:start="73:16" pos:end="73:78">"Truncating memory to %d MiB to fit SDRAM controller limits.\n"</literal></expr></argument>,

               <argument pos:start="75:16" pos:end="75:36"><expr pos:start="75:16" pos:end="75:36"><operator pos:start="75:16" pos:end="75:16">(</operator><name pos:start="75:17" pos:end="75:19">int</name><operator pos:start="75:20" pos:end="75:20">)</operator><operator pos:start="75:21" pos:end="75:21">(</operator><name pos:start="75:22" pos:end="75:29">ram_size</name> <operator pos:start="75:31" pos:end="75:32">&gt;&gt;</operator> <literal type="number" pos:start="75:34" pos:end="75:35">20</literal><operator pos:start="75:36" pos:end="75:36">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="79:5" pos:end="79:20">return <expr pos:start="79:12" pos:end="79:19"><name pos:start="79:12" pos:end="79:19">ram_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
