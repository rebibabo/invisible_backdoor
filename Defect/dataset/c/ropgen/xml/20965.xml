<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20965.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:40">mxf_get_sorted_table_segments</name><parameter_list pos:start="1:41" pos:end="1:123">(<parameter pos:start="1:42" pos:end="1:56"><decl pos:start="1:42" pos:end="1:56"><type pos:start="1:42" pos:end="1:56"><name pos:start="1:42" pos:end="1:51">MXFContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">mxf</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:81"><decl pos:start="1:59" pos:end="1:81"><type pos:start="1:59" pos:end="1:81"><name pos:start="1:59" pos:end="1:61">int</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:81">nb_sorted_segments</name></decl></parameter>, <parameter pos:start="1:84" pos:end="1:122"><decl pos:start="1:84" pos:end="1:122"><type pos:start="1:84" pos:end="1:122"><name pos:start="1:84" pos:end="1:103">MXFIndexTableSegment</name> <modifier pos:start="1:105" pos:end="1:105">*</modifier><modifier pos:start="1:106" pos:end="1:106">*</modifier><modifier pos:start="1:107" pos:end="1:107">*</modifier></type><name pos:start="1:108" pos:end="1:122">sorted_segments</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="119:13">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>, <decl pos:start="5:15" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:25">nb_segments</name> <init pos:start="5:27" pos:end="5:29">= <expr pos:start="5:29" pos:end="5:29"><literal type="number" pos:start="5:29" pos:end="5:29">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:24">MXFIndexTableSegment</name> <modifier pos:start="7:26" pos:end="7:26">*</modifier><modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:44">unsorted_segments</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:71"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:21">last_body_sid</name> <init pos:start="9:23" pos:end="9:26">= <expr pos:start="9:25" pos:end="9:26"><operator pos:start="9:25" pos:end="9:25">-</operator><literal type="number" pos:start="9:26" pos:end="9:26">1</literal></expr></init></decl>, <decl pos:start="9:29" pos:end="9:47"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:29" pos:end="9:42">last_index_sid</name> <init pos:start="9:44" pos:end="9:47">= <expr pos:start="9:46" pos:end="9:47"><operator pos:start="9:46" pos:end="9:46">-</operator><literal type="number" pos:start="9:47" pos:end="9:47">1</literal></expr></init></decl>, <decl pos:start="9:50" pos:end="9:70"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:50" pos:end="9:65">last_index_start</name> <init pos:start="9:67" pos:end="9:70">= <expr pos:start="9:69" pos:end="9:70"><operator pos:start="9:69" pos:end="9:69">-</operator><literal type="number" pos:start="9:70" pos:end="9:70">1</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:78">/* count number of segments, allocate arrays and copy unsorted segments */</comment>

    <for pos:start="15:5" pos:end="19:26">for <control pos:start="15:9" pos:end="15:50">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:45"><expr pos:start="15:17" pos:end="15:44"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <name pos:start="15:21" pos:end="15:44"><name pos:start="15:21" pos:end="15:23">mxf</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:44">metadata_sets_count</name></name></expr>;</condition> <incr pos:start="15:47" pos:end="15:49"><expr pos:start="15:47" pos:end="15:49"><name pos:start="15:47" pos:end="15:47">i</name><operator pos:start="15:48" pos:end="15:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="17:9" pos:end="19:26"><block_content pos:start="17:9" pos:end="19:26">

        <if_stmt pos:start="17:9" pos:end="19:26"><if pos:start="17:9" pos:end="19:26">if <condition pos:start="17:12" pos:end="17:61">(<expr pos:start="17:13" pos:end="17:60"><name pos:start="17:13" pos:end="17:33"><name pos:start="17:13" pos:end="17:15">mxf</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:30">metadata_sets</name><index pos:start="17:31" pos:end="17:33">[<expr pos:start="17:32" pos:end="17:32"><name pos:start="17:32" pos:end="17:32">i</name></expr>]</index></name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:39">type</name> <operator pos:start="17:41" pos:end="17:42">==</operator> <name pos:start="17:44" pos:end="17:60">IndexTableSegment</name></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:26"><block_content pos:start="19:13" pos:end="19:26">

            <expr_stmt pos:start="19:13" pos:end="19:26"><expr pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:23">nb_segments</name><operator pos:start="19:24" pos:end="19:25">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>



    <if_stmt pos:start="23:5" pos:end="25:35"><if pos:start="23:5" pos:end="25:35">if <condition pos:start="23:8" pos:end="23:21">(<expr pos:start="23:9" pos:end="23:20"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:20">nb_segments</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:35"><block_content pos:start="25:9" pos:end="25:35">

        <return pos:start="25:9" pos:end="25:35">return <expr pos:start="25:16" pos:end="25:34"><name pos:start="25:16" pos:end="25:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:76"><expr pos:start="29:5" pos:end="29:75"><operator pos:start="29:5" pos:end="29:5">*</operator><name pos:start="29:6" pos:end="29:20">sorted_segments</name>  <operator pos:start="29:23" pos:end="29:23">=</operator> <call pos:start="29:25" pos:end="29:75"><name pos:start="29:25" pos:end="29:34">av_mallocz</name><argument_list pos:start="29:35" pos:end="29:75">(<argument pos:start="29:36" pos:end="29:74"><expr pos:start="29:36" pos:end="29:74"><name pos:start="29:36" pos:end="29:46">nb_segments</name> <operator pos:start="29:48" pos:end="29:48">*</operator> <sizeof pos:start="29:50" pos:end="29:74">sizeof<argument_list pos:start="29:56" pos:end="29:74">(<argument pos:start="29:57" pos:end="29:73"><expr pos:start="29:57" pos:end="29:73"><operator pos:start="29:57" pos:end="29:57">*</operator><operator pos:start="29:58" pos:end="29:58">*</operator><name pos:start="29:59" pos:end="29:73">sorted_segments</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:77"><expr pos:start="31:5" pos:end="31:76"><name pos:start="31:5" pos:end="31:21">unsorted_segments</name> <operator pos:start="31:23" pos:end="31:23">=</operator> <call pos:start="31:25" pos:end="31:76"><name pos:start="31:25" pos:end="31:34">av_mallocz</name><argument_list pos:start="31:35" pos:end="31:76">(<argument pos:start="31:36" pos:end="31:75"><expr pos:start="31:36" pos:end="31:75"><name pos:start="31:36" pos:end="31:46">nb_segments</name> <operator pos:start="31:48" pos:end="31:48">*</operator> <sizeof pos:start="31:50" pos:end="31:75">sizeof<argument_list pos:start="31:56" pos:end="31:75">(<argument pos:start="31:57" pos:end="31:74"><expr pos:start="31:57" pos:end="31:74"><operator pos:start="31:57" pos:end="31:57">*</operator><name pos:start="31:58" pos:end="31:74">unsorted_segments</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:47">(<expr pos:start="33:9" pos:end="33:46"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:24">sorted_segments</name> <operator pos:start="33:26" pos:end="33:27">||</operator> <operator pos:start="33:29" pos:end="33:29">!</operator><name pos:start="33:30" pos:end="33:46">unsorted_segments</name></expr>)</condition> <block pos:start="33:49" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:31">

        <expr_stmt pos:start="35:9" pos:end="35:34"><expr pos:start="35:9" pos:end="35:33"><call pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:16">av_freep</name><argument_list pos:start="35:17" pos:end="35:33">(<argument pos:start="35:18" pos:end="35:32"><expr pos:start="35:18" pos:end="35:32"><name pos:start="35:18" pos:end="35:32">sorted_segments</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:35"><expr pos:start="37:9" pos:end="37:34"><call pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:15">av_free</name><argument_list pos:start="37:16" pos:end="37:34">(<argument pos:start="37:17" pos:end="37:33"><expr pos:start="37:17" pos:end="37:33"><name pos:start="37:17" pos:end="37:33">unsorted_segments</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:31">return <expr pos:start="39:16" pos:end="39:30"><call pos:start="39:16" pos:end="39:30"><name pos:start="39:16" pos:end="39:22">AVERROR</name><argument_list pos:start="39:23" pos:end="39:30">(<argument pos:start="39:24" pos:end="39:29"><expr pos:start="39:24" pos:end="39:29"><name pos:start="39:24" pos:end="39:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="45:5" pos:end="49:82">for <control pos:start="45:9" pos:end="45:54">(<init pos:start="45:10" pos:end="45:19"><expr pos:start="45:10" pos:end="45:18"><name pos:start="45:10" pos:end="45:10">i</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <name pos:start="45:14" pos:end="45:14">j</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr>;</init> <condition pos:start="45:21" pos:end="45:49"><expr pos:start="45:21" pos:end="45:48"><name pos:start="45:21" pos:end="45:21">i</name> <operator pos:start="45:23" pos:end="45:23">&lt;</operator> <name pos:start="45:25" pos:end="45:48"><name pos:start="45:25" pos:end="45:27">mxf</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:48">metadata_sets_count</name></name></expr>;</condition> <incr pos:start="45:51" pos:end="45:53"><expr pos:start="45:51" pos:end="45:53"><name pos:start="45:51" pos:end="45:51">i</name><operator pos:start="45:52" pos:end="45:53">++</operator></expr></incr>)</control><block type="pseudo" pos:start="47:9" pos:end="49:82"><block_content pos:start="47:9" pos:end="49:82">

        <if_stmt pos:start="47:9" pos:end="49:82"><if pos:start="47:9" pos:end="49:82">if <condition pos:start="47:12" pos:end="47:61">(<expr pos:start="47:13" pos:end="47:60"><name pos:start="47:13" pos:end="47:33"><name pos:start="47:13" pos:end="47:15">mxf</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:30">metadata_sets</name><index pos:start="47:31" pos:end="47:33">[<expr pos:start="47:32" pos:end="47:32"><name pos:start="47:32" pos:end="47:32">i</name></expr>]</index></name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:39">type</name> <operator pos:start="47:41" pos:end="47:42">==</operator> <name pos:start="47:44" pos:end="47:60">IndexTableSegment</name></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:82"><block_content pos:start="49:13" pos:end="49:82">

            <expr_stmt pos:start="49:13" pos:end="49:82"><expr pos:start="49:13" pos:end="49:81"><name pos:start="49:13" pos:end="49:34"><name pos:start="49:13" pos:end="49:29">unsorted_segments</name><index pos:start="49:30" pos:end="49:34">[<expr pos:start="49:31" pos:end="49:33"><name pos:start="49:31" pos:end="49:31">j</name><operator pos:start="49:32" pos:end="49:33">++</operator></expr>]</index></name> <operator pos:start="49:36" pos:end="49:36">=</operator> <operator pos:start="49:38" pos:end="49:38">(</operator><name pos:start="49:39" pos:end="49:58">MXFIndexTableSegment</name><operator pos:start="49:59" pos:end="49:59">*</operator><operator pos:start="49:60" pos:end="49:60">)</operator><name pos:start="49:61" pos:end="49:81"><name pos:start="49:61" pos:end="49:63">mxf</name><operator pos:start="49:64" pos:end="49:65">-&gt;</operator><name pos:start="49:66" pos:end="49:78">metadata_sets</name><index pos:start="49:79" pos:end="49:81">[<expr pos:start="49:80" pos:end="49:80"><name pos:start="49:80" pos:end="49:80">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>



    <expr_stmt pos:start="53:5" pos:end="53:28"><expr pos:start="53:5" pos:end="53:27"><operator pos:start="53:5" pos:end="53:5">*</operator><name pos:start="53:6" pos:end="53:23">nb_sorted_segments</name> <operator pos:start="53:25" pos:end="53:25">=</operator> <literal type="number" pos:start="53:27" pos:end="53:27">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="57:5" pos:end="57:103">/* sort segments by {BodySID, IndexSID, IndexStartPosition}, remove duplicates while we're at it */</comment>

    <for pos:start="59:5" pos:end="111:5">for <control pos:start="59:9" pos:end="59:37">(<init pos:start="59:10" pos:end="59:15"><expr pos:start="59:10" pos:end="59:14"><name pos:start="59:10" pos:end="59:10">i</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <literal type="number" pos:start="59:14" pos:end="59:14">0</literal></expr>;</init> <condition pos:start="59:17" pos:end="59:32"><expr pos:start="59:17" pos:end="59:31"><name pos:start="59:17" pos:end="59:17">i</name> <operator pos:start="59:19" pos:end="59:19">&lt;</operator> <name pos:start="59:21" pos:end="59:31">nb_segments</name></expr>;</condition> <incr pos:start="59:34" pos:end="59:36"><expr pos:start="59:34" pos:end="59:36"><name pos:start="59:34" pos:end="59:34">i</name><operator pos:start="59:35" pos:end="59:36">++</operator></expr></incr>)</control> <block pos:start="59:39" pos:end="111:5">{<block_content pos:start="61:9" pos:end="109:44">

        <decl_stmt pos:start="61:9" pos:end="61:86"><decl pos:start="61:9" pos:end="61:21"><type pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:11">int</name></type> <name pos:start="61:13" pos:end="61:16">best</name> <init pos:start="61:18" pos:end="61:21">= <expr pos:start="61:20" pos:end="61:21"><operator pos:start="61:20" pos:end="61:20">-</operator><literal type="number" pos:start="61:21" pos:end="61:21">1</literal></expr></init></decl>, <decl pos:start="61:24" pos:end="61:41"><type ref="prev" pos:start="61:9" pos:end="61:11"/><name pos:start="61:24" pos:end="61:36">best_body_sid</name> <init pos:start="61:38" pos:end="61:41">= <expr pos:start="61:40" pos:end="61:41"><operator pos:start="61:40" pos:end="61:40">-</operator><literal type="number" pos:start="61:41" pos:end="61:41">1</literal></expr></init></decl>, <decl pos:start="61:44" pos:end="61:62"><type ref="prev" pos:start="61:9" pos:end="61:11"/><name pos:start="61:44" pos:end="61:57">best_index_sid</name> <init pos:start="61:59" pos:end="61:62">= <expr pos:start="61:61" pos:end="61:62"><operator pos:start="61:61" pos:end="61:61">-</operator><literal type="number" pos:start="61:62" pos:end="61:62">1</literal></expr></init></decl>, <decl pos:start="61:65" pos:end="61:85"><type ref="prev" pos:start="61:9" pos:end="61:11"/><name pos:start="61:65" pos:end="61:80">best_index_start</name> <init pos:start="61:82" pos:end="61:85">= <expr pos:start="61:84" pos:end="61:85"><operator pos:start="61:84" pos:end="61:84">-</operator><literal type="number" pos:start="61:85" pos:end="61:85">1</literal></expr></init></decl>;</decl_stmt>



        <for pos:start="65:9" pos:end="91:9">for <control pos:start="65:13" pos:end="65:41">(<init pos:start="65:14" pos:end="65:19"><expr pos:start="65:14" pos:end="65:18"><name pos:start="65:14" pos:end="65:14">j</name> <operator pos:start="65:16" pos:end="65:16">=</operator> <literal type="number" pos:start="65:18" pos:end="65:18">0</literal></expr>;</init> <condition pos:start="65:21" pos:end="65:36"><expr pos:start="65:21" pos:end="65:35"><name pos:start="65:21" pos:end="65:21">j</name> <operator pos:start="65:23" pos:end="65:23">&lt;</operator> <name pos:start="65:25" pos:end="65:35">nb_segments</name></expr>;</condition> <incr pos:start="65:38" pos:end="65:40"><expr pos:start="65:38" pos:end="65:40"><name pos:start="65:38" pos:end="65:38">j</name><operator pos:start="65:39" pos:end="65:40">++</operator></expr></incr>)</control> <block pos:start="65:43" pos:end="91:9">{<block_content pos:start="67:13" pos:end="89:13">

            <decl_stmt pos:start="67:13" pos:end="67:59"><decl pos:start="67:13" pos:end="67:58"><type pos:start="67:13" pos:end="67:34"><name pos:start="67:13" pos:end="67:32">MXFIndexTableSegment</name> <modifier pos:start="67:34" pos:end="67:34">*</modifier></type><name pos:start="67:35" pos:end="67:35">s</name> <init pos:start="67:37" pos:end="67:58">= <expr pos:start="67:39" pos:end="67:58"><name pos:start="67:39" pos:end="67:58"><name pos:start="67:39" pos:end="67:55">unsorted_segments</name><index pos:start="67:56" pos:end="67:58">[<expr pos:start="67:57" pos:end="67:57"><name pos:start="67:57" pos:end="67:57">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <comment type="block" pos:start="71:13" pos:end="75:15">/* Require larger BosySID, IndexSID or IndexStartPosition then the previous entry. This removes duplicates.

             * We want the smallest values for the keys than what we currently have, unless this is the first such entry this time around.

             */</comment>

            <if_stmt pos:start="77:13" pos:end="89:13"><if pos:start="77:13" pos:end="89:13">if <condition pos:start="77:16" pos:end="79:139">(<expr pos:start="77:17" pos:end="79:138"><operator pos:start="77:17" pos:end="77:17">(</operator><name pos:start="77:18" pos:end="77:18">i</name> <operator pos:start="77:20" pos:end="77:21">==</operator> <literal type="number" pos:start="77:23" pos:end="77:23">0</literal>     <operator pos:start="77:29" pos:end="77:30">||</operator> <name pos:start="77:32" pos:end="77:42"><name pos:start="77:32" pos:end="77:32">s</name><operator pos:start="77:33" pos:end="77:34">-&gt;</operator><name pos:start="77:35" pos:end="77:42">body_sid</name></name> <operator pos:start="77:44" pos:end="77:44">&gt;</operator> <name pos:start="77:46" pos:end="77:58">last_body_sid</name> <operator pos:start="77:60" pos:end="77:61">||</operator> <name pos:start="77:63" pos:end="77:74"><name pos:start="77:63" pos:end="77:63">s</name><operator pos:start="77:64" pos:end="77:65">-&gt;</operator><name pos:start="77:66" pos:end="77:74">index_sid</name></name> <operator pos:start="77:76" pos:end="77:76">&gt;</operator> <name pos:start="77:78" pos:end="77:91">last_index_sid</name> <operator pos:start="77:93" pos:end="77:94">||</operator> <name pos:start="77:96" pos:end="77:118"><name pos:start="77:96" pos:end="77:96">s</name><operator pos:start="77:97" pos:end="77:98">-&gt;</operator><name pos:start="77:99" pos:end="77:118">index_start_position</name></name> <operator pos:start="77:120" pos:end="77:120">&gt;</operator> <name pos:start="77:122" pos:end="77:137">last_index_start</name><operator pos:start="77:138" pos:end="77:138">)</operator> <operator pos:start="77:140" pos:end="77:141">&amp;&amp;</operator>

                <operator pos:start="79:17" pos:end="79:17">(</operator><name pos:start="79:18" pos:end="79:21">best</name> <operator pos:start="79:23" pos:end="79:24">==</operator> <operator pos:start="79:26" pos:end="79:26">-</operator><literal type="number" pos:start="79:27" pos:end="79:27">1</literal> <operator pos:start="79:29" pos:end="79:30">||</operator> <name pos:start="79:32" pos:end="79:42"><name pos:start="79:32" pos:end="79:32">s</name><operator pos:start="79:33" pos:end="79:34">-&gt;</operator><name pos:start="79:35" pos:end="79:42">body_sid</name></name> <operator pos:start="79:44" pos:end="79:44">&lt;</operator> <name pos:start="79:46" pos:end="79:58">best_body_sid</name> <operator pos:start="79:60" pos:end="79:61">||</operator> <name pos:start="79:63" pos:end="79:74"><name pos:start="79:63" pos:end="79:63">s</name><operator pos:start="79:64" pos:end="79:65">-&gt;</operator><name pos:start="79:66" pos:end="79:74">index_sid</name></name> <operator pos:start="79:76" pos:end="79:76">&lt;</operator> <name pos:start="79:78" pos:end="79:91">best_index_sid</name> <operator pos:start="79:93" pos:end="79:94">||</operator> <name pos:start="79:96" pos:end="79:118"><name pos:start="79:96" pos:end="79:96">s</name><operator pos:start="79:97" pos:end="79:98">-&gt;</operator><name pos:start="79:99" pos:end="79:118">index_start_position</name></name> <operator pos:start="79:120" pos:end="79:120">&lt;</operator> <name pos:start="79:122" pos:end="79:137">best_index_start</name><operator pos:start="79:138" pos:end="79:138">)</operator></expr>)</condition> <block pos:start="79:141" pos:end="89:13">{<block_content pos:start="81:17" pos:end="87:59">

                <expr_stmt pos:start="81:17" pos:end="81:37"><expr pos:start="81:17" pos:end="81:36"><name pos:start="81:17" pos:end="81:20">best</name>             <operator pos:start="81:34" pos:end="81:34">=</operator> <name pos:start="81:36" pos:end="81:36">j</name></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:47"><expr pos:start="83:17" pos:end="83:46"><name pos:start="83:17" pos:end="83:29">best_body_sid</name>    <operator pos:start="83:34" pos:end="83:34">=</operator> <name pos:start="83:36" pos:end="83:46"><name pos:start="83:36" pos:end="83:36">s</name><operator pos:start="83:37" pos:end="83:38">-&gt;</operator><name pos:start="83:39" pos:end="83:46">body_sid</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:48"><expr pos:start="85:17" pos:end="85:47"><name pos:start="85:17" pos:end="85:30">best_index_sid</name>   <operator pos:start="85:34" pos:end="85:34">=</operator> <name pos:start="85:36" pos:end="85:47"><name pos:start="85:36" pos:end="85:36">s</name><operator pos:start="85:37" pos:end="85:38">-&gt;</operator><name pos:start="85:39" pos:end="85:47">index_sid</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:59"><expr pos:start="87:17" pos:end="87:58"><name pos:start="87:17" pos:end="87:32">best_index_start</name> <operator pos:start="87:34" pos:end="87:34">=</operator> <name pos:start="87:36" pos:end="87:58"><name pos:start="87:36" pos:end="87:36">s</name><operator pos:start="87:37" pos:end="87:38">-&gt;</operator><name pos:start="87:39" pos:end="87:58">index_start_position</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="95:9" pos:end="95:51">/* no suitable entry found -&gt; we're done */</comment>

        <if_stmt pos:start="97:9" pos:end="99:18"><if pos:start="97:9" pos:end="99:18">if <condition pos:start="97:12" pos:end="97:23">(<expr pos:start="97:13" pos:end="97:22"><name pos:start="97:13" pos:end="97:16">best</name> <operator pos:start="97:18" pos:end="97:19">==</operator> <operator pos:start="97:21" pos:end="97:21">-</operator><literal type="number" pos:start="97:22" pos:end="97:22">1</literal></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:18"><block_content pos:start="99:13" pos:end="99:18">

            <break pos:start="99:13" pos:end="99:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="103:9" pos:end="103:78"><expr pos:start="103:9" pos:end="103:77"><operator pos:start="103:9" pos:end="103:9">(</operator><operator pos:start="103:10" pos:end="103:10">*</operator><name pos:start="103:11" pos:end="103:25">sorted_segments</name><operator pos:start="103:26" pos:end="103:26">)</operator><index pos:start="103:27" pos:end="103:51">[<expr pos:start="103:28" pos:end="103:50"><operator pos:start="103:28" pos:end="103:28">(</operator><operator pos:start="103:29" pos:end="103:29">*</operator><name pos:start="103:30" pos:end="103:47">nb_sorted_segments</name><operator pos:start="103:48" pos:end="103:48">)</operator><operator pos:start="103:49" pos:end="103:50">++</operator></expr>]</index> <operator pos:start="103:53" pos:end="103:53">=</operator> <name pos:start="103:55" pos:end="103:77"><name pos:start="103:55" pos:end="103:71">unsorted_segments</name><index pos:start="103:72" pos:end="103:77">[<expr pos:start="103:73" pos:end="103:76"><name pos:start="103:73" pos:end="103:76">best</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:41"><expr pos:start="105:9" pos:end="105:40"><name pos:start="105:9" pos:end="105:21">last_body_sid</name>    <operator pos:start="105:26" pos:end="105:26">=</operator> <name pos:start="105:28" pos:end="105:40">best_body_sid</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:42"><expr pos:start="107:9" pos:end="107:41"><name pos:start="107:9" pos:end="107:22">last_index_sid</name>   <operator pos:start="107:26" pos:end="107:26">=</operator> <name pos:start="107:28" pos:end="107:41">best_index_sid</name></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:44"><expr pos:start="109:9" pos:end="109:43"><name pos:start="109:9" pos:end="109:24">last_index_start</name> <operator pos:start="109:26" pos:end="109:26">=</operator> <name pos:start="109:28" pos:end="109:43">best_index_start</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="115:5" pos:end="115:31"><expr pos:start="115:5" pos:end="115:30"><call pos:start="115:5" pos:end="115:30"><name pos:start="115:5" pos:end="115:11">av_free</name><argument_list pos:start="115:12" pos:end="115:30">(<argument pos:start="115:13" pos:end="115:29"><expr pos:start="115:13" pos:end="115:29"><name pos:start="115:13" pos:end="115:29">unsorted_segments</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="119:5" pos:end="119:13">return <expr pos:start="119:12" pos:end="119:12"><literal type="number" pos:start="119:12" pos:end="119:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
