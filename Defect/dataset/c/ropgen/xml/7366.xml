<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7366.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">cpu_x86_register</name><parameter_list pos:start="1:29" pos:end="1:73">(<parameter pos:start="1:30" pos:end="1:40"><decl pos:start="1:30" pos:end="1:40"><type pos:start="1:30" pos:end="1:40"><name pos:start="1:30" pos:end="1:35">X86CPU</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">cpu</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:58"><decl pos:start="1:43" pos:end="1:58"><type pos:start="1:43" pos:end="1:58"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:52">char</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">name</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:72"><decl pos:start="1:61" pos:end="1:72"><type pos:start="1:61" pos:end="1:72"><name pos:start="1:61" pos:end="1:65">Error</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier><modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:72">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:54">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">CPUX86State</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">env</name> <init pos:start="5:22" pos:end="5:32">= <expr pos:start="5:24" pos:end="5:32"><operator pos:start="5:24" pos:end="5:24">&amp;</operator><name pos:start="5:25" pos:end="5:32"><name pos:start="5:25" pos:end="5:27">cpu</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">x86_def_t</name></type> <name pos:start="7:15" pos:end="7:18">def1</name></decl>, <decl pos:start="7:21" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:13"><modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">def</name> <init pos:start="7:26" pos:end="7:32">= <expr pos:start="7:28" pos:end="7:32"><operator pos:start="7:28" pos:end="7:28">&amp;</operator><name pos:start="7:29" pos:end="7:32">def1</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:33"><expr pos:start="11:5" pos:end="11:32"><call pos:start="11:5" pos:end="11:32"><name pos:start="11:5" pos:end="11:10">memset</name><argument_list pos:start="11:11" pos:end="11:32">(<argument pos:start="11:12" pos:end="11:14"><expr pos:start="11:12" pos:end="11:14"><name pos:start="11:12" pos:end="11:14">def</name></expr></argument>, <argument pos:start="11:17" pos:end="11:17"><expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">0</literal></expr></argument>, <argument pos:start="11:20" pos:end="11:31"><expr pos:start="11:20" pos:end="11:31"><sizeof pos:start="11:20" pos:end="11:31">sizeof<argument_list pos:start="11:26" pos:end="11:31">(<argument pos:start="11:27" pos:end="11:30"><expr pos:start="11:27" pos:end="11:30"><operator pos:start="11:27" pos:end="11:27">*</operator><name pos:start="11:28" pos:end="11:30">def</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:49">(<expr pos:start="15:9" pos:end="15:48"><call pos:start="15:9" pos:end="15:44"><name pos:start="15:9" pos:end="15:28">cpu_x86_find_by_name</name><argument_list pos:start="15:29" pos:end="15:44">(<argument pos:start="15:30" pos:end="15:32"><expr pos:start="15:30" pos:end="15:32"><name pos:start="15:30" pos:end="15:32">cpu</name></expr></argument>, <argument pos:start="15:35" pos:end="15:37"><expr pos:start="15:35" pos:end="15:37"><name pos:start="15:35" pos:end="15:37">def</name></expr></argument>, <argument pos:start="15:40" pos:end="15:43"><expr pos:start="15:40" pos:end="15:43"><name pos:start="15:40" pos:end="15:43">name</name></expr></argument>)</argument_list></call> <operator pos:start="15:46" pos:end="15:46">&lt;</operator> <literal type="number" pos:start="15:48" pos:end="15:48">0</literal></expr>)</condition> <block pos:start="15:51" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:15">

        <expr_stmt pos:start="17:9" pos:end="17:68"><expr pos:start="17:9" pos:end="17:67"><call pos:start="17:9" pos:end="17:67"><name pos:start="17:9" pos:end="17:18">error_setg</name><argument_list pos:start="17:19" pos:end="17:67">(<argument pos:start="17:20" pos:end="17:23"><expr pos:start="17:20" pos:end="17:23"><name pos:start="17:20" pos:end="17:23">errp</name></expr></argument>, <argument pos:start="17:26" pos:end="17:60"><expr pos:start="17:26" pos:end="17:60"><literal type="string" pos:start="17:26" pos:end="17:60">"Unable to find CPU definition: %s"</literal></expr></argument>, <argument pos:start="17:63" pos:end="17:66"><expr pos:start="17:63" pos:end="17:66"><name pos:start="17:63" pos:end="17:66">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:70"><expr pos:start="25:5" pos:end="25:69"><call pos:start="25:5" pos:end="25:69"><name pos:start="25:5" pos:end="25:27">object_property_set_str</name><argument_list pos:start="25:28" pos:end="25:69">(<argument pos:start="25:29" pos:end="25:39"><expr pos:start="25:29" pos:end="25:39"><call pos:start="25:29" pos:end="25:39"><name pos:start="25:29" pos:end="25:34">OBJECT</name><argument_list pos:start="25:35" pos:end="25:39">(<argument pos:start="25:36" pos:end="25:38"><expr pos:start="25:36" pos:end="25:38"><name pos:start="25:36" pos:end="25:38">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:42" pos:end="25:52"><expr pos:start="25:42" pos:end="25:52"><name pos:start="25:42" pos:end="25:52"><name pos:start="25:42" pos:end="25:44">def</name><operator pos:start="25:45" pos:end="25:46">-&gt;</operator><name pos:start="25:47" pos:end="25:52">vendor</name></name></expr></argument>, <argument pos:start="25:55" pos:end="25:62"><expr pos:start="25:55" pos:end="25:62"><literal type="string" pos:start="25:55" pos:end="25:62">"vendor"</literal></expr></argument>, <argument pos:start="25:65" pos:end="25:68"><expr pos:start="25:65" pos:end="25:68"><name pos:start="25:65" pos:end="25:68">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:68"><expr pos:start="27:5" pos:end="27:67"><call pos:start="27:5" pos:end="27:67"><name pos:start="27:5" pos:end="27:27">object_property_set_int</name><argument_list pos:start="27:28" pos:end="27:67">(<argument pos:start="27:29" pos:end="27:39"><expr pos:start="27:29" pos:end="27:39"><call pos:start="27:29" pos:end="27:39"><name pos:start="27:29" pos:end="27:34">OBJECT</name><argument_list pos:start="27:35" pos:end="27:39">(<argument pos:start="27:36" pos:end="27:38"><expr pos:start="27:36" pos:end="27:38"><name pos:start="27:36" pos:end="27:38">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:42" pos:end="27:51"><expr pos:start="27:42" pos:end="27:51"><name pos:start="27:42" pos:end="27:51"><name pos:start="27:42" pos:end="27:44">def</name><operator pos:start="27:45" pos:end="27:46">-&gt;</operator><name pos:start="27:47" pos:end="27:51">level</name></name></expr></argument>, <argument pos:start="27:54" pos:end="27:60"><expr pos:start="27:54" pos:end="27:60"><literal type="string" pos:start="27:54" pos:end="27:60">"level"</literal></expr></argument>, <argument pos:start="27:63" pos:end="27:66"><expr pos:start="27:63" pos:end="27:66"><name pos:start="27:63" pos:end="27:66">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:70"><expr pos:start="29:5" pos:end="29:69"><call pos:start="29:5" pos:end="29:69"><name pos:start="29:5" pos:end="29:27">object_property_set_int</name><argument_list pos:start="29:28" pos:end="29:69">(<argument pos:start="29:29" pos:end="29:39"><expr pos:start="29:29" pos:end="29:39"><call pos:start="29:29" pos:end="29:39"><name pos:start="29:29" pos:end="29:34">OBJECT</name><argument_list pos:start="29:35" pos:end="29:39">(<argument pos:start="29:36" pos:end="29:38"><expr pos:start="29:36" pos:end="29:38"><name pos:start="29:36" pos:end="29:38">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:42" pos:end="29:52"><expr pos:start="29:42" pos:end="29:52"><name pos:start="29:42" pos:end="29:52"><name pos:start="29:42" pos:end="29:44">def</name><operator pos:start="29:45" pos:end="29:46">-&gt;</operator><name pos:start="29:47" pos:end="29:52">family</name></name></expr></argument>, <argument pos:start="29:55" pos:end="29:62"><expr pos:start="29:55" pos:end="29:62"><literal type="string" pos:start="29:55" pos:end="29:62">"family"</literal></expr></argument>, <argument pos:start="29:65" pos:end="29:68"><expr pos:start="29:65" pos:end="29:68"><name pos:start="29:65" pos:end="29:68">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:68"><expr pos:start="31:5" pos:end="31:67"><call pos:start="31:5" pos:end="31:67"><name pos:start="31:5" pos:end="31:27">object_property_set_int</name><argument_list pos:start="31:28" pos:end="31:67">(<argument pos:start="31:29" pos:end="31:39"><expr pos:start="31:29" pos:end="31:39"><call pos:start="31:29" pos:end="31:39"><name pos:start="31:29" pos:end="31:34">OBJECT</name><argument_list pos:start="31:35" pos:end="31:39">(<argument pos:start="31:36" pos:end="31:38"><expr pos:start="31:36" pos:end="31:38"><name pos:start="31:36" pos:end="31:38">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:42" pos:end="31:51"><expr pos:start="31:42" pos:end="31:51"><name pos:start="31:42" pos:end="31:51"><name pos:start="31:42" pos:end="31:44">def</name><operator pos:start="31:45" pos:end="31:46">-&gt;</operator><name pos:start="31:47" pos:end="31:51">model</name></name></expr></argument>, <argument pos:start="31:54" pos:end="31:60"><expr pos:start="31:54" pos:end="31:60"><literal type="string" pos:start="31:54" pos:end="31:60">"model"</literal></expr></argument>, <argument pos:start="31:63" pos:end="31:66"><expr pos:start="31:63" pos:end="31:66"><name pos:start="31:63" pos:end="31:66">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:74"><expr pos:start="33:5" pos:end="33:73"><call pos:start="33:5" pos:end="33:73"><name pos:start="33:5" pos:end="33:27">object_property_set_int</name><argument_list pos:start="33:28" pos:end="33:73">(<argument pos:start="33:29" pos:end="33:39"><expr pos:start="33:29" pos:end="33:39"><call pos:start="33:29" pos:end="33:39"><name pos:start="33:29" pos:end="33:34">OBJECT</name><argument_list pos:start="33:35" pos:end="33:39">(<argument pos:start="33:36" pos:end="33:38"><expr pos:start="33:36" pos:end="33:38"><name pos:start="33:36" pos:end="33:38">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:42" pos:end="33:54"><expr pos:start="33:42" pos:end="33:54"><name pos:start="33:42" pos:end="33:54"><name pos:start="33:42" pos:end="33:44">def</name><operator pos:start="33:45" pos:end="33:46">-&gt;</operator><name pos:start="33:47" pos:end="33:54">stepping</name></name></expr></argument>, <argument pos:start="33:57" pos:end="33:66"><expr pos:start="33:57" pos:end="33:66"><literal type="string" pos:start="33:57" pos:end="33:66">"stepping"</literal></expr></argument>, <argument pos:start="33:69" pos:end="33:72"><expr pos:start="33:69" pos:end="33:72"><name pos:start="33:69" pos:end="33:72">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:58"><expr pos:start="35:5" pos:end="35:57"><name pos:start="35:5" pos:end="35:29"><name pos:start="35:5" pos:end="35:7">env</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:17">features</name><index pos:start="35:18" pos:end="35:29">[<expr pos:start="35:19" pos:end="35:28"><name pos:start="35:19" pos:end="35:28">FEAT_1_EDX</name></expr>]</index></name> <operator pos:start="35:31" pos:end="35:31">=</operator> <name pos:start="35:33" pos:end="35:57"><name pos:start="35:33" pos:end="35:35">def</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:45">features</name><index pos:start="35:46" pos:end="35:57">[<expr pos:start="35:47" pos:end="35:56"><name pos:start="35:47" pos:end="35:56">FEAT_1_EDX</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:58"><expr pos:start="37:5" pos:end="37:57"><name pos:start="37:5" pos:end="37:29"><name pos:start="37:5" pos:end="37:7">env</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:17">features</name><index pos:start="37:18" pos:end="37:29">[<expr pos:start="37:19" pos:end="37:28"><name pos:start="37:19" pos:end="37:28">FEAT_1_ECX</name></expr>]</index></name> <operator pos:start="37:31" pos:end="37:31">=</operator> <name pos:start="37:33" pos:end="37:57"><name pos:start="37:33" pos:end="37:35">def</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:45">features</name><index pos:start="37:46" pos:end="37:57">[<expr pos:start="37:47" pos:end="37:56"><name pos:start="37:47" pos:end="37:56">FEAT_1_ECX</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:74"><expr pos:start="39:5" pos:end="39:73"><name pos:start="39:5" pos:end="39:37"><name pos:start="39:5" pos:end="39:7">env</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:17">features</name><index pos:start="39:18" pos:end="39:37">[<expr pos:start="39:19" pos:end="39:36"><name pos:start="39:19" pos:end="39:36">FEAT_8000_0001_EDX</name></expr>]</index></name> <operator pos:start="39:39" pos:end="39:39">=</operator> <name pos:start="39:41" pos:end="39:73"><name pos:start="39:41" pos:end="39:43">def</name><operator pos:start="39:44" pos:end="39:45">-&gt;</operator><name pos:start="39:46" pos:end="39:53">features</name><index pos:start="39:54" pos:end="39:73">[<expr pos:start="39:55" pos:end="39:72"><name pos:start="39:55" pos:end="39:72">FEAT_8000_0001_EDX</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:74"><expr pos:start="41:5" pos:end="41:73"><name pos:start="41:5" pos:end="41:37"><name pos:start="41:5" pos:end="41:7">env</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:17">features</name><index pos:start="41:18" pos:end="41:37">[<expr pos:start="41:19" pos:end="41:36"><name pos:start="41:19" pos:end="41:36">FEAT_8000_0001_ECX</name></expr>]</index></name> <operator pos:start="41:39" pos:end="41:39">=</operator> <name pos:start="41:41" pos:end="41:73"><name pos:start="41:41" pos:end="41:43">def</name><operator pos:start="41:44" pos:end="41:45">-&gt;</operator><name pos:start="41:46" pos:end="41:53">features</name><index pos:start="41:54" pos:end="41:73">[<expr pos:start="41:55" pos:end="41:72"><name pos:start="41:55" pos:end="41:72">FEAT_8000_0001_ECX</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:70"><expr pos:start="43:5" pos:end="43:69"><call pos:start="43:5" pos:end="43:69"><name pos:start="43:5" pos:end="43:27">object_property_set_int</name><argument_list pos:start="43:28" pos:end="43:69">(<argument pos:start="43:29" pos:end="43:39"><expr pos:start="43:29" pos:end="43:39"><call pos:start="43:29" pos:end="43:39"><name pos:start="43:29" pos:end="43:34">OBJECT</name><argument_list pos:start="43:35" pos:end="43:39">(<argument pos:start="43:36" pos:end="43:38"><expr pos:start="43:36" pos:end="43:38"><name pos:start="43:36" pos:end="43:38">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="43:42" pos:end="43:52"><expr pos:start="43:42" pos:end="43:52"><name pos:start="43:42" pos:end="43:52"><name pos:start="43:42" pos:end="43:44">def</name><operator pos:start="43:45" pos:end="43:46">-&gt;</operator><name pos:start="43:47" pos:end="43:52">xlevel</name></name></expr></argument>, <argument pos:start="43:55" pos:end="43:62"><expr pos:start="43:55" pos:end="43:62"><literal type="string" pos:start="43:55" pos:end="43:62">"xlevel"</literal></expr></argument>, <argument pos:start="43:65" pos:end="43:68"><expr pos:start="43:65" pos:end="43:68"><name pos:start="43:65" pos:end="43:68">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:54"><expr pos:start="45:5" pos:end="45:53"><name pos:start="45:5" pos:end="45:27"><name pos:start="45:5" pos:end="45:7">env</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:17">features</name><index pos:start="45:18" pos:end="45:27">[<expr pos:start="45:19" pos:end="45:26"><name pos:start="45:19" pos:end="45:26">FEAT_KVM</name></expr>]</index></name> <operator pos:start="45:29" pos:end="45:29">=</operator> <name pos:start="45:31" pos:end="45:53"><name pos:start="45:31" pos:end="45:33">def</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:43">features</name><index pos:start="45:44" pos:end="45:53">[<expr pos:start="45:45" pos:end="45:52"><name pos:start="45:45" pos:end="45:52">FEAT_KVM</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:54"><expr pos:start="47:5" pos:end="47:53"><name pos:start="47:5" pos:end="47:27"><name pos:start="47:5" pos:end="47:7">env</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:17">features</name><index pos:start="47:18" pos:end="47:27">[<expr pos:start="47:19" pos:end="47:26"><name pos:start="47:19" pos:end="47:26">FEAT_SVM</name></expr>]</index></name> <operator pos:start="47:29" pos:end="47:29">=</operator> <name pos:start="47:31" pos:end="47:53"><name pos:start="47:31" pos:end="47:33">def</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:43">features</name><index pos:start="47:44" pos:end="47:53">[<expr pos:start="47:45" pos:end="47:52"><name pos:start="47:45" pos:end="47:52">FEAT_SVM</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:74"><expr pos:start="49:5" pos:end="49:73"><name pos:start="49:5" pos:end="49:37"><name pos:start="49:5" pos:end="49:7">env</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:17">features</name><index pos:start="49:18" pos:end="49:37">[<expr pos:start="49:19" pos:end="49:36"><name pos:start="49:19" pos:end="49:36">FEAT_C000_0001_EDX</name></expr>]</index></name> <operator pos:start="49:39" pos:end="49:39">=</operator> <name pos:start="49:41" pos:end="49:73"><name pos:start="49:41" pos:end="49:43">def</name><operator pos:start="49:44" pos:end="49:45">-&gt;</operator><name pos:start="49:46" pos:end="49:53">features</name><index pos:start="49:54" pos:end="49:73">[<expr pos:start="49:55" pos:end="49:72"><name pos:start="49:55" pos:end="49:72">FEAT_C000_0001_EDX</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:62"><expr pos:start="51:5" pos:end="51:61"><name pos:start="51:5" pos:end="51:31"><name pos:start="51:5" pos:end="51:7">env</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:17">features</name><index pos:start="51:18" pos:end="51:31">[<expr pos:start="51:19" pos:end="51:30"><name pos:start="51:19" pos:end="51:30">FEAT_7_0_EBX</name></expr>]</index></name> <operator pos:start="51:33" pos:end="51:33">=</operator> <name pos:start="51:35" pos:end="51:61"><name pos:start="51:35" pos:end="51:37">def</name><operator pos:start="51:38" pos:end="51:39">-&gt;</operator><name pos:start="51:40" pos:end="51:47">features</name><index pos:start="51:48" pos:end="51:61">[<expr pos:start="51:49" pos:end="51:60"><name pos:start="51:49" pos:end="51:60">FEAT_7_0_EBX</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:38"><expr pos:start="53:5" pos:end="53:37"><name pos:start="53:5" pos:end="53:22"><name pos:start="53:5" pos:end="53:7">env</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:22">cpuid_xlevel2</name></name> <operator pos:start="53:24" pos:end="53:24">=</operator> <name pos:start="53:26" pos:end="53:37"><name pos:start="53:26" pos:end="53:28">def</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:37">xlevel2</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:62"><expr pos:start="55:5" pos:end="55:61"><name pos:start="55:5" pos:end="55:31"><name pos:start="55:5" pos:end="55:7">cpu</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:31">cache_info_passthrough</name></name> <operator pos:start="55:33" pos:end="55:33">=</operator> <name pos:start="55:35" pos:end="55:61"><name pos:start="55:35" pos:end="55:37">def</name><operator pos:start="55:38" pos:end="55:39">-&gt;</operator><name pos:start="55:40" pos:end="55:61">cache_info_passthrough</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:74"><expr pos:start="59:5" pos:end="59:73"><call pos:start="59:5" pos:end="59:73"><name pos:start="59:5" pos:end="59:27">object_property_set_str</name><argument_list pos:start="59:28" pos:end="59:73">(<argument pos:start="59:29" pos:end="59:39"><expr pos:start="59:29" pos:end="59:39"><call pos:start="59:29" pos:end="59:39"><name pos:start="59:29" pos:end="59:34">OBJECT</name><argument_list pos:start="59:35" pos:end="59:39">(<argument pos:start="59:36" pos:end="59:38"><expr pos:start="59:36" pos:end="59:38"><name pos:start="59:36" pos:end="59:38">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="59:42" pos:end="59:54"><expr pos:start="59:42" pos:end="59:54"><name pos:start="59:42" pos:end="59:54"><name pos:start="59:42" pos:end="59:44">def</name><operator pos:start="59:45" pos:end="59:46">-&gt;</operator><name pos:start="59:47" pos:end="59:54">model_id</name></name></expr></argument>, <argument pos:start="59:57" pos:end="59:66"><expr pos:start="59:57" pos:end="59:66"><literal type="string" pos:start="59:57" pos:end="59:66">"model-id"</literal></expr></argument>, <argument pos:start="59:69" pos:end="59:72"><expr pos:start="59:69" pos:end="59:72"><name pos:start="59:69" pos:end="59:72">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:57">/* Special cases not set in the x86_def_t structs: */</comment>

    <if_stmt pos:start="65:5" pos:end="69:5"><if pos:start="65:5" pos:end="69:5">if <condition pos:start="65:8" pos:end="65:22">(<expr pos:start="65:9" pos:end="65:21"><call pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:19">kvm_enabled</name><argument_list pos:start="65:20" pos:end="65:21">()</argument_list></call></expr>)</condition> <block pos:start="65:24" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:56">

        <expr_stmt pos:start="67:9" pos:end="67:56"><expr pos:start="67:9" pos:end="67:55"><name pos:start="67:9" pos:end="67:31"><name pos:start="67:9" pos:end="67:11">env</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:21">features</name><index pos:start="67:22" pos:end="67:31">[<expr pos:start="67:23" pos:end="67:30"><name pos:start="67:23" pos:end="67:30">FEAT_KVM</name></expr>]</index></name> <operator pos:start="67:33" pos:end="67:34">|=</operator> <name pos:start="67:36" pos:end="67:55">kvm_default_features</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:54"><expr pos:start="71:5" pos:end="71:53"><name pos:start="71:5" pos:end="71:29"><name pos:start="71:5" pos:end="71:7">env</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:17">features</name><index pos:start="71:18" pos:end="71:29">[<expr pos:start="71:19" pos:end="71:28"><name pos:start="71:19" pos:end="71:28">FEAT_1_ECX</name></expr>]</index></name> <operator pos:start="71:31" pos:end="71:32">|=</operator> <name pos:start="71:34" pos:end="71:53">CPUID_EXT_HYPERVISOR</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
