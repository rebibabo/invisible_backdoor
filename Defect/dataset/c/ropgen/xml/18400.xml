<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18400.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">bonito_writel</name><parameter_list pos:start="1:26" pos:end="3:54">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:38">opaque</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:51"><decl pos:start="1:41" pos:end="1:51"><type pos:start="1:41" pos:end="1:51"><name pos:start="1:41" pos:end="1:46">hwaddr</name></type> <name pos:start="1:48" pos:end="1:51">addr</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:38"><decl pos:start="3:27" pos:end="3:38"><type pos:start="3:27" pos:end="3:38"><name pos:start="3:27" pos:end="3:34">uint64_t</name></type> <name pos:start="3:36" pos:end="3:38">val</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:53"><decl pos:start="3:41" pos:end="3:53"><type pos:start="3:41" pos:end="3:53"><name pos:start="3:41" pos:end="3:48">unsigned</name></type> <name pos:start="3:50" pos:end="3:53">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="123:1">{<block_content pos:start="7:5" pos:end="121:5">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">PCIBonitoState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><name pos:start="7:25" pos:end="7:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:18">saddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">reset</name> <init pos:start="11:15" pos:end="11:17">= <expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:41"><expr pos:start="15:5" pos:end="15:40"><name pos:start="15:5" pos:end="15:9">saddr</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <operator pos:start="15:13" pos:end="15:13">(</operator><name pos:start="15:14" pos:end="15:17">addr</name> <operator pos:start="15:19" pos:end="15:19">-</operator> <name pos:start="15:21" pos:end="15:34">BONITO_REGBASE</name><operator pos:start="15:35" pos:end="15:35">)</operator> <operator pos:start="15:37" pos:end="15:38">&gt;&gt;</operator> <literal type="number" pos:start="15:40" pos:end="15:40">2</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:82"><expr pos:start="19:5" pos:end="19:81"><call pos:start="19:5" pos:end="19:81"><name pos:start="19:5" pos:end="19:11">DPRINTF</name><argument_list pos:start="19:12" pos:end="19:81">(<argument pos:start="19:13" pos:end="19:62"><expr pos:start="19:13" pos:end="19:62"><literal type="string" pos:start="19:13" pos:end="19:28">"bonito_writel "</literal><name pos:start="19:29" pos:end="19:42">TARGET_FMT_plx</name><literal type="string" pos:start="19:43" pos:end="19:62">" val %x saddr %x\n"</literal></expr></argument>, <argument pos:start="19:65" pos:end="19:68"><expr pos:start="19:65" pos:end="19:68"><name pos:start="19:65" pos:end="19:68">addr</name></expr></argument>, <argument pos:start="19:71" pos:end="19:73"><expr pos:start="19:71" pos:end="19:73"><name pos:start="19:71" pos:end="19:73">val</name></expr></argument>, <argument pos:start="19:76" pos:end="19:80"><expr pos:start="19:76" pos:end="19:80"><name pos:start="19:76" pos:end="19:80">saddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="21:5" pos:end="121:5">switch <condition pos:start="21:12" pos:end="21:18">(<expr pos:start="21:13" pos:end="21:17"><name pos:start="21:13" pos:end="21:17">saddr</name></expr>)</condition> <block pos:start="21:20" pos:end="121:5">{<block_content pos:start="23:5" pos:end="119:14">

    <case pos:start="23:5" pos:end="23:26">case <expr pos:start="23:10" pos:end="23:25"><name pos:start="23:10" pos:end="23:25">BONITO_BONPONCFG</name></expr>:</case>

    <case pos:start="25:5" pos:end="25:25">case <expr pos:start="25:10" pos:end="25:24"><name pos:start="25:10" pos:end="25:24">BONITO_IODEVCFG</name></expr>:</case>

    <case pos:start="27:5" pos:end="27:22">case <expr pos:start="27:10" pos:end="27:21"><name pos:start="27:10" pos:end="27:21">BONITO_SDCFG</name></expr>:</case>

    <case pos:start="29:5" pos:end="29:23">case <expr pos:start="29:10" pos:end="29:22"><name pos:start="29:10" pos:end="29:22">BONITO_PCIMAP</name></expr>:</case>

    <case pos:start="31:5" pos:end="31:30">case <expr pos:start="31:10" pos:end="31:29"><name pos:start="31:10" pos:end="31:29">BONITO_PCIMEMBASECFG</name></expr>:</case>

    <case pos:start="33:5" pos:end="33:27">case <expr pos:start="33:10" pos:end="33:26"><name pos:start="33:10" pos:end="33:26">BONITO_PCIMAP_CFG</name></expr>:</case>

    <case pos:start="35:5" pos:end="35:25">case <expr pos:start="35:10" pos:end="35:24"><name pos:start="35:10" pos:end="35:24">BONITO_GPIODATA</name></expr>:</case>

    <case pos:start="37:5" pos:end="37:23">case <expr pos:start="37:10" pos:end="37:22"><name pos:start="37:10" pos:end="37:22">BONITO_GPIOIE</name></expr>:</case>

    <case pos:start="39:5" pos:end="39:24">case <expr pos:start="39:10" pos:end="39:23"><name pos:start="39:10" pos:end="39:23">BONITO_INTEDGE</name></expr>:</case>

    <case pos:start="41:5" pos:end="41:25">case <expr pos:start="41:10" pos:end="41:24"><name pos:start="41:10" pos:end="41:24">BONITO_INTSTEER</name></expr>:</case>

    <case pos:start="43:5" pos:end="43:23">case <expr pos:start="43:10" pos:end="43:22"><name pos:start="43:10" pos:end="43:22">BONITO_INTPOL</name></expr>:</case>

    <case pos:start="45:5" pos:end="45:25">case <expr pos:start="45:10" pos:end="45:24"><name pos:start="45:10" pos:end="45:24">BONITO_PCIMAIL0</name></expr>:</case>

    <case pos:start="47:5" pos:end="47:25">case <expr pos:start="47:10" pos:end="47:24"><name pos:start="47:10" pos:end="47:24">BONITO_PCIMAIL1</name></expr>:</case>

    <case pos:start="49:5" pos:end="49:25">case <expr pos:start="49:10" pos:end="49:24"><name pos:start="49:10" pos:end="49:24">BONITO_PCIMAIL2</name></expr>:</case>

    <case pos:start="51:5" pos:end="51:25">case <expr pos:start="51:10" pos:end="51:24"><name pos:start="51:10" pos:end="51:24">BONITO_PCIMAIL3</name></expr>:</case>

    <case pos:start="53:5" pos:end="53:29">case <expr pos:start="53:10" pos:end="53:28"><name pos:start="53:10" pos:end="53:28">BONITO_PCICACHECTRL</name></expr>:</case>

    <case pos:start="55:5" pos:end="55:28">case <expr pos:start="55:10" pos:end="55:27"><name pos:start="55:10" pos:end="55:27">BONITO_PCICACHETAG</name></expr>:</case>

    <case pos:start="57:5" pos:end="57:27">case <expr pos:start="57:10" pos:end="57:26"><name pos:start="57:10" pos:end="57:26">BONITO_PCIBADADDR</name></expr>:</case>

    <case pos:start="59:5" pos:end="59:25">case <expr pos:start="59:10" pos:end="59:24"><name pos:start="59:10" pos:end="59:24">BONITO_PCIMSTAT</name></expr>:</case>

    <case pos:start="61:5" pos:end="61:24">case <expr pos:start="61:10" pos:end="61:23"><name pos:start="61:10" pos:end="61:23">BONITO_TIMECFG</name></expr>:</case>

    <case pos:start="63:5" pos:end="63:23">case <expr pos:start="63:10" pos:end="63:22"><name pos:start="63:10" pos:end="63:22">BONITO_CPUCFG</name></expr>:</case>

    <case pos:start="65:5" pos:end="65:22">case <expr pos:start="65:10" pos:end="65:21"><name pos:start="65:10" pos:end="65:21">BONITO_DQCFG</name></expr>:</case>

    <case pos:start="67:5" pos:end="67:24">case <expr pos:start="67:10" pos:end="67:23"><name pos:start="67:10" pos:end="67:23">BONITO_MEMSIZE</name></expr>:</case>

        <expr_stmt pos:start="69:9" pos:end="69:29"><expr pos:start="69:9" pos:end="69:28"><name pos:start="69:9" pos:end="69:22"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:15">regs</name><index pos:start="69:16" pos:end="69:22">[<expr pos:start="69:17" pos:end="69:21"><name pos:start="69:17" pos:end="69:21">saddr</name></expr>]</index></name> <operator pos:start="69:24" pos:end="69:24">=</operator> <name pos:start="69:26" pos:end="69:28">val</name></expr>;</expr_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    <case pos:start="73:5" pos:end="73:26">case <expr pos:start="73:10" pos:end="73:25"><name pos:start="73:10" pos:end="73:25">BONITO_BONGENCFG</name></expr>:</case>

        <if_stmt pos:start="75:9" pos:end="79:9"><if pos:start="75:9" pos:end="79:9">if <condition pos:start="75:12" pos:end="75:53">(<expr pos:start="75:13" pos:end="75:52"><operator pos:start="75:13" pos:end="75:13">!</operator><operator pos:start="75:14" pos:end="75:14">(</operator><name pos:start="75:15" pos:end="75:28"><name pos:start="75:15" pos:end="75:15">s</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:21">regs</name><index pos:start="75:22" pos:end="75:28">[<expr pos:start="75:23" pos:end="75:27"><name pos:start="75:23" pos:end="75:27">saddr</name></expr>]</index></name> <operator pos:start="75:30" pos:end="75:30">&amp;</operator> <literal type="number" pos:start="75:32" pos:end="75:35">0x04</literal><operator pos:start="75:36" pos:end="75:36">)</operator> <operator pos:start="75:38" pos:end="75:39">&amp;&amp;</operator> <operator pos:start="75:41" pos:end="75:41">(</operator><name pos:start="75:42" pos:end="75:44">val</name> <operator pos:start="75:46" pos:end="75:46">&amp;</operator> <literal type="number" pos:start="75:48" pos:end="75:51">0x04</literal><operator pos:start="75:52" pos:end="75:52">)</operator></expr>)</condition> <block pos:start="75:55" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:22">

            <expr_stmt pos:start="77:13" pos:end="77:22"><expr pos:start="77:13" pos:end="77:21"><name pos:start="77:13" pos:end="77:17">reset</name> <operator pos:start="77:19" pos:end="77:19">=</operator> <literal type="number" pos:start="77:21" pos:end="77:21">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="77:24" pos:end="77:63">/* bit 2 jump from 0 to 1 cause reset */</comment>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:29"><expr pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:15">regs</name><index pos:start="81:16" pos:end="81:22">[<expr pos:start="81:17" pos:end="81:21"><name pos:start="81:17" pos:end="81:21">saddr</name></expr>]</index></name> <operator pos:start="81:24" pos:end="81:24">=</operator> <name pos:start="81:26" pos:end="81:28">val</name></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="87:9"><if pos:start="83:9" pos:end="87:9">if <condition pos:start="83:12" pos:end="83:18">(<expr pos:start="83:13" pos:end="83:17"><name pos:start="83:13" pos:end="83:17">reset</name></expr>)</condition> <block pos:start="83:20" pos:end="87:9">{<block_content pos:start="85:13" pos:end="85:40">

            <expr_stmt pos:start="85:13" pos:end="85:40"><expr pos:start="85:13" pos:end="85:39"><call pos:start="85:13" pos:end="85:39"><name pos:start="85:13" pos:end="85:37">qemu_system_reset_request</name><argument_list pos:start="85:38" pos:end="85:39">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="89:9" pos:end="89:14">break;</break>

    <case pos:start="91:5" pos:end="91:25">case <expr pos:start="91:10" pos:end="91:24"><name pos:start="91:10" pos:end="91:24">BONITO_INTENSET</name></expr>:</case>

        <expr_stmt pos:start="93:9" pos:end="93:39"><expr pos:start="93:9" pos:end="93:38"><name pos:start="93:9" pos:end="93:32"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:15">regs</name><index pos:start="93:16" pos:end="93:32">[<expr pos:start="93:17" pos:end="93:31"><name pos:start="93:17" pos:end="93:31">BONITO_INTENSET</name></expr>]</index></name> <operator pos:start="93:34" pos:end="93:34">=</operator> <name pos:start="93:36" pos:end="93:38">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:37"><expr pos:start="95:9" pos:end="95:36"><name pos:start="95:9" pos:end="95:29"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:15">regs</name><index pos:start="95:16" pos:end="95:29">[<expr pos:start="95:17" pos:end="95:28"><name pos:start="95:17" pos:end="95:28">BONITO_INTEN</name></expr>]</index></name> <operator pos:start="95:31" pos:end="95:32">|=</operator> <name pos:start="95:34" pos:end="95:36">val</name></expr>;</expr_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    <case pos:start="99:5" pos:end="99:25">case <expr pos:start="99:10" pos:end="99:24"><name pos:start="99:10" pos:end="99:24">BONITO_INTENCLR</name></expr>:</case>

        <expr_stmt pos:start="101:9" pos:end="101:39"><expr pos:start="101:9" pos:end="101:38"><name pos:start="101:9" pos:end="101:32"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:15">regs</name><index pos:start="101:16" pos:end="101:32">[<expr pos:start="101:17" pos:end="101:31"><name pos:start="101:17" pos:end="101:31">BONITO_INTENCLR</name></expr>]</index></name> <operator pos:start="101:34" pos:end="101:34">=</operator> <name pos:start="101:36" pos:end="101:38">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:38"><expr pos:start="103:9" pos:end="103:37"><name pos:start="103:9" pos:end="103:29"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:15">regs</name><index pos:start="103:16" pos:end="103:29">[<expr pos:start="103:17" pos:end="103:28"><name pos:start="103:17" pos:end="103:28">BONITO_INTEN</name></expr>]</index></name> <operator pos:start="103:31" pos:end="103:32">&amp;=</operator> <operator pos:start="103:34" pos:end="103:34">~</operator><name pos:start="103:35" pos:end="103:37">val</name></expr>;</expr_stmt>

        <break pos:start="105:9" pos:end="105:14">break;</break>

    <case pos:start="107:5" pos:end="107:22">case <expr pos:start="107:10" pos:end="107:21"><name pos:start="107:10" pos:end="107:21">BONITO_INTEN</name></expr>:</case>

    <case pos:start="109:5" pos:end="109:23">case <expr pos:start="109:10" pos:end="109:22"><name pos:start="109:10" pos:end="109:22">BONITO_INTISR</name></expr>:</case>

        <expr_stmt pos:start="111:9" pos:end="111:65"><expr pos:start="111:9" pos:end="111:64"><call pos:start="111:9" pos:end="111:64"><name pos:start="111:9" pos:end="111:15">DPRINTF</name><argument_list pos:start="111:16" pos:end="111:64">(<argument pos:start="111:17" pos:end="111:56"><expr pos:start="111:17" pos:end="111:56"><literal type="string" pos:start="111:17" pos:end="111:56">"write to readonly bonito register %x\n"</literal></expr></argument>, <argument pos:start="111:59" pos:end="111:63"><expr pos:start="111:59" pos:end="111:63"><name pos:start="111:59" pos:end="111:63">saddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="113:9" pos:end="113:14">break;</break>

    <default pos:start="115:5" pos:end="115:12">default:</default>

        <expr_stmt pos:start="117:9" pos:end="117:64"><expr pos:start="117:9" pos:end="117:63"><call pos:start="117:9" pos:end="117:63"><name pos:start="117:9" pos:end="117:15">DPRINTF</name><argument_list pos:start="117:16" pos:end="117:63">(<argument pos:start="117:17" pos:end="117:55"><expr pos:start="117:17" pos:end="117:55"><literal type="string" pos:start="117:17" pos:end="117:55">"write to unknown bonito register %x\n"</literal></expr></argument>, <argument pos:start="117:58" pos:end="117:62"><expr pos:start="117:58" pos:end="117:62"><name pos:start="117:58" pos:end="117:62">saddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="119:9" pos:end="119:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
