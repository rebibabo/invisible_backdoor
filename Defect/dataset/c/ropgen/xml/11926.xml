<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11926.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">pte64_check</name><parameter_list pos:start="1:23" pos:end="3:66">(<parameter pos:start="1:24" pos:end="1:49"><decl pos:start="1:24" pos:end="1:49"><type pos:start="1:24" pos:end="1:49"><name pos:start="1:24" pos:end="1:44"><name pos:start="1:24" pos:end="1:29">struct</name> <name pos:start="1:31" pos:end="1:44">mmu_ctx_hash64</name></name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">ctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:68"><decl pos:start="1:52" pos:end="1:68"><type pos:start="1:52" pos:end="1:68"><name pos:start="1:52" pos:end="1:63">target_ulong</name></type> <name pos:start="1:65" pos:end="1:68">pte0</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:40"><decl pos:start="3:24" pos:end="3:40"><type pos:start="3:24" pos:end="3:40"><name pos:start="3:24" pos:end="3:35">target_ulong</name></type> <name pos:start="3:37" pos:end="3:40">pte1</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:47"><decl pos:start="3:43" pos:end="3:47"><type pos:start="3:43" pos:end="3:47"><name pos:start="3:43" pos:end="3:45">int</name></type> <name pos:start="3:47" pos:end="3:47">h</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:55"><decl pos:start="3:50" pos:end="3:55"><type pos:start="3:50" pos:end="3:55"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:55">rw</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:65"><decl pos:start="3:58" pos:end="3:65"><type pos:start="3:58" pos:end="3:65"><name pos:start="3:58" pos:end="3:60">int</name></type> <name pos:start="3:62" pos:end="3:65">type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="79:1">{<block_content pos:start="7:5" pos:end="77:15">

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:22">mmask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">access</name></decl>, <decl pos:start="9:17" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:19">ret</name></decl>, <decl pos:start="9:22" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:23">pp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:13"><expr pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:7">ret</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <operator pos:start="13:11" pos:end="13:11">-</operator><literal type="number" pos:start="13:12" pos:end="13:12">1</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="15:5" pos:end="15:40">/* Check validity and table match */</comment>

    <if_stmt pos:start="17:5" pos:end="73:5"><if pos:start="17:5" pos:end="73:5">if <condition pos:start="17:8" pos:end="17:72">(<expr pos:start="17:9" pos:end="17:71"><operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:13">pte0</name> <operator pos:start="17:15" pos:end="17:15">&amp;</operator> <name pos:start="17:17" pos:end="17:30">HPTE64_V_VALID</name><operator pos:start="17:31" pos:end="17:31">)</operator> <operator pos:start="17:33" pos:end="17:34">&amp;&amp;</operator> <operator pos:start="17:36" pos:end="17:36">(</operator><name pos:start="17:37" pos:end="17:37">h</name> <operator pos:start="17:39" pos:end="17:40">==</operator> <operator pos:start="17:42" pos:end="17:42">!</operator><operator pos:start="17:43" pos:end="17:43">!</operator><operator pos:start="17:44" pos:end="17:44">(</operator><name pos:start="17:45" pos:end="17:48">pte0</name> <operator pos:start="17:50" pos:end="17:50">&amp;</operator> <name pos:start="17:52" pos:end="17:69">HPTE64_V_SECONDARY</name><operator pos:start="17:70" pos:end="17:70">)</operator><operator pos:start="17:71" pos:end="17:71">)</operator></expr>)</condition> <block pos:start="17:74" pos:end="73:5">{<block_content pos:start="21:9" pos:end="71:9">

        <comment type="block" pos:start="19:9" pos:end="19:30">/* Check vsid &amp; api */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:33"><expr pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:13">mmask</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:32">PTE64_CHECK_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:66"><expr pos:start="23:9" pos:end="23:65"><name pos:start="23:9" pos:end="23:10">pp</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <operator pos:start="23:14" pos:end="23:14">(</operator><name pos:start="23:15" pos:end="23:18">pte1</name> <operator pos:start="23:20" pos:end="23:20">&amp;</operator> <name pos:start="23:22" pos:end="23:32">HPTE64_R_PP</name><operator pos:start="23:33" pos:end="23:33">)</operator> <operator pos:start="23:35" pos:end="23:35">|</operator> <operator pos:start="23:37" pos:end="23:37">(</operator><operator pos:start="23:38" pos:end="23:38">(</operator><name pos:start="23:39" pos:end="23:42">pte1</name> <operator pos:start="23:44" pos:end="23:44">&amp;</operator> <name pos:start="23:46" pos:end="23:57">HPTE64_R_PP0</name><operator pos:start="23:58" pos:end="23:58">)</operator> <operator pos:start="23:60" pos:end="23:61">&gt;&gt;</operator> <literal type="number" pos:start="23:63" pos:end="23:64">61</literal><operator pos:start="23:65" pos:end="23:65">)</operator></expr>;</expr_stmt>

        <comment type="block" pos:start="25:9" pos:end="25:61">/* No execute if either noexec or guarded bits set */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:61"><expr pos:start="27:9" pos:end="27:60"><name pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:11">ctx</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:15">nx</name></name> <operator pos:start="27:17" pos:end="27:17">=</operator> <operator pos:start="27:19" pos:end="27:19">(</operator><name pos:start="27:20" pos:end="27:23">pte1</name> <operator pos:start="27:25" pos:end="27:25">&amp;</operator> <name pos:start="27:27" pos:end="27:36">HPTE64_R_N</name><operator pos:start="27:37" pos:end="27:37">)</operator> <operator pos:start="27:39" pos:end="27:40">||</operator> <operator pos:start="27:42" pos:end="27:42">(</operator><name pos:start="27:43" pos:end="27:46">pte1</name> <operator pos:start="27:48" pos:end="27:48">&amp;</operator> <name pos:start="27:50" pos:end="27:59">HPTE64_R_G</name><operator pos:start="27:60" pos:end="27:60">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="71:9"><if pos:start="29:9" pos:end="71:9">if <condition pos:start="29:12" pos:end="29:46">(<expr pos:start="29:13" pos:end="29:45"><call pos:start="29:13" pos:end="29:45"><name pos:start="29:13" pos:end="29:28">HPTE64_V_COMPARE</name><argument_list pos:start="29:29" pos:end="29:45">(<argument pos:start="29:30" pos:end="29:33"><expr pos:start="29:30" pos:end="29:33"><name pos:start="29:30" pos:end="29:33">pte0</name></expr></argument>, <argument pos:start="29:36" pos:end="29:44"><expr pos:start="29:36" pos:end="29:44"><name pos:start="29:36" pos:end="29:44"><name pos:start="29:36" pos:end="29:38">ctx</name><operator pos:start="29:39" pos:end="29:40">-&gt;</operator><name pos:start="29:41" pos:end="29:44">ptem</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:48" pos:end="71:9">{<block_content pos:start="31:13" pos:end="69:13">

            <if_stmt pos:start="31:13" pos:end="43:13"><if pos:start="31:13" pos:end="43:13">if <condition pos:start="31:16" pos:end="31:44">(<expr pos:start="31:17" pos:end="31:43"><name pos:start="31:17" pos:end="31:26"><name pos:start="31:17" pos:end="31:19">ctx</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:26">raddr</name></name> <operator pos:start="31:28" pos:end="31:29">!=</operator> <operator pos:start="31:31" pos:end="31:31">(</operator><name pos:start="31:32" pos:end="31:37">hwaddr</name><operator pos:start="31:38" pos:end="31:38">)</operator><operator pos:start="31:39" pos:end="31:39">-</operator><literal type="number" pos:start="31:40" pos:end="31:43">1ULL</literal></expr>)</condition> <block pos:start="31:46" pos:end="43:13">{<block_content pos:start="35:17" pos:end="41:17">

                <comment type="block" pos:start="33:17" pos:end="33:66">/* all matches should have equal RPN, WIMG &amp; PP */</comment>

                <if_stmt pos:start="35:17" pos:end="41:17"><if pos:start="35:17" pos:end="41:17">if <condition pos:start="35:20" pos:end="35:59">(<expr pos:start="35:21" pos:end="35:58"><operator pos:start="35:21" pos:end="35:21">(</operator><name pos:start="35:22" pos:end="35:31"><name pos:start="35:22" pos:end="35:24">ctx</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:31">raddr</name></name> <operator pos:start="35:33" pos:end="35:33">&amp;</operator> <name pos:start="35:35" pos:end="35:39">mmask</name><operator pos:start="35:40" pos:end="35:40">)</operator> <operator pos:start="35:42" pos:end="35:43">!=</operator> <operator pos:start="35:45" pos:end="35:45">(</operator><name pos:start="35:46" pos:end="35:49">pte1</name> <operator pos:start="35:51" pos:end="35:51">&amp;</operator> <name pos:start="35:53" pos:end="35:57">mmask</name><operator pos:start="35:58" pos:end="35:58">)</operator></expr>)</condition> <block pos:start="35:61" pos:end="41:17">{<block_content pos:start="37:21" pos:end="39:30">

                    <expr_stmt pos:start="37:21" pos:end="37:50"><expr pos:start="37:21" pos:end="37:49"><call pos:start="37:21" pos:end="37:49"><name pos:start="37:21" pos:end="37:28">qemu_log</name><argument_list pos:start="37:29" pos:end="37:49">(<argument pos:start="37:30" pos:end="37:48"><expr pos:start="37:30" pos:end="37:48"><literal type="string" pos:start="37:30" pos:end="37:48">"Bad RPN/WIMG/PP\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="39:21" pos:end="39:30">return <expr pos:start="39:28" pos:end="39:29"><operator pos:start="39:28" pos:end="39:28">-</operator><literal type="number" pos:start="39:29" pos:end="39:29">3</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="45:13" pos:end="45:39">/* Compute access rights */</comment>

            <expr_stmt pos:start="47:13" pos:end="47:64"><expr pos:start="47:13" pos:end="47:63"><name pos:start="47:13" pos:end="47:18">access</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <call pos:start="47:22" pos:end="47:63"><name pos:start="47:22" pos:end="47:40">ppc_hash64_pp_check</name><argument_list pos:start="47:41" pos:end="47:63">(<argument pos:start="47:42" pos:end="47:49"><expr pos:start="47:42" pos:end="47:49"><name pos:start="47:42" pos:end="47:49"><name pos:start="47:42" pos:end="47:44">ctx</name><operator pos:start="47:45" pos:end="47:46">-&gt;</operator><name pos:start="47:47" pos:end="47:49">key</name></name></expr></argument>, <argument pos:start="47:52" pos:end="47:53"><expr pos:start="47:52" pos:end="47:53"><name pos:start="47:52" pos:end="47:53">pp</name></expr></argument>, <argument pos:start="47:56" pos:end="47:62"><expr pos:start="47:56" pos:end="47:62"><name pos:start="47:56" pos:end="47:62"><name pos:start="47:56" pos:end="47:58">ctx</name><operator pos:start="47:59" pos:end="47:60">-&gt;</operator><name pos:start="47:61" pos:end="47:62">nx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="49:13" pos:end="49:52">/* Keep the matching PTE informations */</comment>

            <expr_stmt pos:start="51:13" pos:end="51:30"><expr pos:start="51:13" pos:end="51:29"><name pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:15">ctx</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:22">raddr</name></name> <operator pos:start="51:24" pos:end="51:24">=</operator> <name pos:start="51:26" pos:end="51:29">pte1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:31"><expr pos:start="53:13" pos:end="53:30"><name pos:start="53:13" pos:end="53:21"><name pos:start="53:13" pos:end="53:15">ctx</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:21">prot</name></name> <operator pos:start="53:23" pos:end="53:23">=</operator> <name pos:start="53:25" pos:end="53:30">access</name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:61"><expr pos:start="55:13" pos:end="55:60"><name pos:start="55:13" pos:end="55:15">ret</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <call pos:start="55:19" pos:end="55:60"><name pos:start="55:19" pos:end="55:39">ppc_hash64_check_prot</name><argument_list pos:start="55:40" pos:end="55:60">(<argument pos:start="55:41" pos:end="55:49"><expr pos:start="55:41" pos:end="55:49"><name pos:start="55:41" pos:end="55:49"><name pos:start="55:41" pos:end="55:43">ctx</name><operator pos:start="55:44" pos:end="55:45">-&gt;</operator><name pos:start="55:46" pos:end="55:49">prot</name></name></expr></argument>, <argument pos:start="55:52" pos:end="55:53"><expr pos:start="55:52" pos:end="55:53"><name pos:start="55:52" pos:end="55:53">rw</name></expr></argument>, <argument pos:start="55:56" pos:end="55:59"><expr pos:start="55:56" pos:end="55:59"><name pos:start="55:56" pos:end="55:59">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="57:13" pos:end="69:13"><if pos:start="57:13" pos:end="63:13">if <condition pos:start="57:16" pos:end="57:25">(<expr pos:start="57:17" pos:end="57:24"><name pos:start="57:17" pos:end="57:19">ret</name> <operator pos:start="57:21" pos:end="57:22">==</operator> <literal type="number" pos:start="57:24" pos:end="57:24">0</literal></expr>)</condition> <block pos:start="57:27" pos:end="63:13">{<block_content pos:start="61:17" pos:end="61:50">

                <comment type="block" pos:start="59:17" pos:end="59:36">/* Access granted */</comment>

                <expr_stmt pos:start="61:17" pos:end="61:50"><expr pos:start="61:17" pos:end="61:49"><call pos:start="61:17" pos:end="61:49"><name pos:start="61:17" pos:end="61:23">LOG_MMU</name><argument_list pos:start="61:24" pos:end="61:49">(<argument pos:start="61:25" pos:end="61:48"><expr pos:start="61:25" pos:end="61:48"><literal type="string" pos:start="61:25" pos:end="61:48">"PTE access granted !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="63:15" pos:end="69:13">else <block pos:start="63:20" pos:end="69:13">{<block_content pos:start="67:17" pos:end="67:49">

                <comment type="block" pos:start="65:17" pos:end="65:44">/* Access right violation */</comment>

                <expr_stmt pos:start="67:17" pos:end="67:49"><expr pos:start="67:17" pos:end="67:48"><call pos:start="67:17" pos:end="67:48"><name pos:start="67:17" pos:end="67:23">LOG_MMU</name><argument_list pos:start="67:24" pos:end="67:48">(<argument pos:start="67:25" pos:end="67:47"><expr pos:start="67:25" pos:end="67:47"><literal type="string" pos:start="67:25" pos:end="67:47">"PTE access rejected\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="77:5" pos:end="77:15">return <expr pos:start="77:12" pos:end="77:14"><name pos:start="77:12" pos:end="77:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
