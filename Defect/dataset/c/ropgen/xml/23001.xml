<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23001.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">handle_diag</name><parameter_list pos:start="1:23" pos:end="1:71">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:35"><name pos:start="1:24" pos:end="1:30">S390CPU</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">cpu</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:56"><decl pos:start="1:38" pos:end="1:56"><type pos:start="1:38" pos:end="1:56"><name pos:start="1:38" pos:end="1:51"><name pos:start="1:38" pos:end="1:43">struct</name> <name pos:start="1:45" pos:end="1:51">kvm_run</name></name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">run</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:70"><decl pos:start="1:59" pos:end="1:70"><type pos:start="1:59" pos:end="1:70"><name pos:start="1:59" pos:end="1:66">uint32_t</name></type> <name pos:start="1:68" pos:end="1:70">ipb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:13">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">r</name> <init pos:start="5:11" pos:end="5:13">= <expr pos:start="5:13" pos:end="5:13"><literal type="number" pos:start="5:13" pos:end="5:13">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint16_t</name></type> <name pos:start="7:14" pos:end="7:22">func_code</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="17:7">/*

     * For any diagnose call we support, bits 48-63 of the resulting

     * address specify the function code; the remainder is ignored.

     */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:72"><expr pos:start="19:5" pos:end="19:71"><name pos:start="19:5" pos:end="19:13">func_code</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <call pos:start="19:17" pos:end="19:50"><name pos:start="19:17" pos:end="19:34">decode_basedisp_rs</name><argument_list pos:start="19:35" pos:end="19:50">(<argument pos:start="19:36" pos:end="19:44"><expr pos:start="19:36" pos:end="19:44"><operator pos:start="19:36" pos:end="19:36">&amp;</operator><name pos:start="19:37" pos:end="19:44"><name pos:start="19:37" pos:end="19:39">cpu</name><operator pos:start="19:40" pos:end="19:41">-&gt;</operator><name pos:start="19:42" pos:end="19:44">env</name></name></expr></argument>, <argument pos:start="19:47" pos:end="19:49"><expr pos:start="19:47" pos:end="19:49"><name pos:start="19:47" pos:end="19:49">ipb</name></expr></argument>)</argument_list></call> <operator pos:start="19:52" pos:end="19:52">&amp;</operator> <name pos:start="19:54" pos:end="19:71">DIAG_KVM_CODE_MASK</name></expr>;</expr_stmt>

    <switch pos:start="21:5" pos:end="49:5">switch <condition pos:start="21:12" pos:end="21:22">(<expr pos:start="21:13" pos:end="21:21"><name pos:start="21:13" pos:end="21:21">func_code</name></expr>)</condition> <block pos:start="21:24" pos:end="49:5">{<block_content pos:start="23:5" pos:end="47:14">

    <case pos:start="23:5" pos:end="23:18">case <expr pos:start="23:10" pos:end="23:17"><name pos:start="23:10" pos:end="23:17">DIAG_IPL</name></expr>:</case>

        <expr_stmt pos:start="25:9" pos:end="25:38"><expr pos:start="25:9" pos:end="25:37"><call pos:start="25:9" pos:end="25:37"><name pos:start="25:9" pos:end="25:27">kvm_handle_diag_308</name><argument_list pos:start="25:28" pos:end="25:37">(<argument pos:start="25:29" pos:end="25:31"><expr pos:start="25:29" pos:end="25:31"><name pos:start="25:29" pos:end="25:31">cpu</name></expr></argument>, <argument pos:start="25:34" pos:end="25:36"><expr pos:start="25:34" pos:end="25:36"><name pos:start="25:34" pos:end="25:36">run</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:28">case <expr pos:start="29:10" pos:end="29:27"><name pos:start="29:10" pos:end="29:27">DIAG_KVM_HYPERCALL</name></expr>:</case>

        <expr_stmt pos:start="31:9" pos:end="31:39"><expr pos:start="31:9" pos:end="31:38"><name pos:start="31:9" pos:end="31:9">r</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <call pos:start="31:13" pos:end="31:38"><name pos:start="31:13" pos:end="31:28">handle_hypercall</name><argument_list pos:start="31:29" pos:end="31:38">(<argument pos:start="31:30" pos:end="31:32"><expr pos:start="31:30" pos:end="31:32"><name pos:start="31:30" pos:end="31:32">cpu</name></expr></argument>, <argument pos:start="31:35" pos:end="31:37"><expr pos:start="31:35" pos:end="31:37"><name pos:start="31:35" pos:end="31:37">run</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <case pos:start="35:5" pos:end="35:29">case <expr pos:start="35:10" pos:end="35:28"><name pos:start="35:10" pos:end="35:28">DIAG_KVM_BREAKPOINT</name></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:43"><expr pos:start="37:9" pos:end="37:42"><name pos:start="37:9" pos:end="37:9">r</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <call pos:start="37:13" pos:end="37:42"><name pos:start="37:13" pos:end="37:32">handle_sw_breakpoint</name><argument_list pos:start="37:33" pos:end="37:42">(<argument pos:start="37:34" pos:end="37:36"><expr pos:start="37:34" pos:end="37:36"><name pos:start="37:34" pos:end="37:36">cpu</name></expr></argument>, <argument pos:start="37:39" pos:end="37:41"><expr pos:start="37:39" pos:end="37:41"><name pos:start="37:39" pos:end="37:41">run</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <default pos:start="41:5" pos:end="41:12">default:</default>

        <expr_stmt pos:start="43:9" pos:end="43:56"><expr pos:start="43:9" pos:end="43:55"><call pos:start="43:9" pos:end="43:55"><name pos:start="43:9" pos:end="43:15">DPRINTF</name><argument_list pos:start="43:16" pos:end="43:55">(<argument pos:start="43:17" pos:end="43:43"><expr pos:start="43:17" pos:end="43:43"><literal type="string" pos:start="43:17" pos:end="43:43">"KVM: unknown DIAG: 0x%x\n"</literal></expr></argument>, <argument pos:start="43:46" pos:end="43:54"><expr pos:start="43:46" pos:end="43:54"><name pos:start="43:46" pos:end="43:54">func_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:15"><expr pos:start="45:9" pos:end="45:14"><name pos:start="45:9" pos:end="45:9">r</name> <operator pos:start="45:11" pos:end="45:11">=</operator> <operator pos:start="45:13" pos:end="45:13">-</operator><literal type="number" pos:start="45:14" pos:end="45:14">1</literal></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><name pos:start="53:12" pos:end="53:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
