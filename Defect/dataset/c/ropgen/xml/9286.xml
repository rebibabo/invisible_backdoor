<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9286.c" pos:tabs="8"><function pos:start="1:1" pos:end="193:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">decode_band</name><parameter_list pos:start="1:23" pos:end="3:64">(<parameter pos:start="1:24" pos:end="1:43"><decl pos:start="1:24" pos:end="1:43"><type pos:start="1:24" pos:end="1:43"><name pos:start="1:24" pos:end="1:38">IVI45DecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">ctx</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:40"><decl pos:start="3:24" pos:end="3:40"><type pos:start="3:24" pos:end="3:40"><name pos:start="3:24" pos:end="3:34">IVIBandDesc</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:40">band</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:63"><decl pos:start="3:43" pos:end="3:63"><type pos:start="3:43" pos:end="3:63"><name pos:start="3:43" pos:end="3:56">AVCodecContext</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:63">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="193:1">{<block_content pos:start="7:5" pos:end="191:18">

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type>         <name pos:start="7:17" pos:end="7:22">result</name></decl>, <decl pos:start="7:25" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:25" pos:end="7:25">i</name></decl>, <decl pos:start="7:28" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:28" pos:end="7:28">t</name></decl>, <decl pos:start="7:31" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:31" pos:end="7:34">idx1</name></decl>, <decl pos:start="7:37" pos:end="7:40"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:37" pos:end="7:40">idx2</name></decl>, <decl pos:start="7:43" pos:end="7:45"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:43" pos:end="7:45">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:11">IVITile</name>     <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:21">tile</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:45"><expr pos:start="13:5" pos:end="13:44"><name pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:8">band</name><operator pos:start="13:9" pos:end="13:10">-&gt;</operator><name pos:start="13:11" pos:end="13:13">buf</name></name>     <operator pos:start="13:19" pos:end="13:19">=</operator> <name pos:start="13:21" pos:end="13:44"><name pos:start="13:21" pos:end="13:24">band</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:30">bufs</name><index pos:start="13:31" pos:end="13:44">[<expr pos:start="13:32" pos:end="13:43"><name pos:start="13:32" pos:end="13:43"><name pos:start="13:32" pos:end="13:34">ctx</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:43">dst_buf</name></name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:19">(<expr pos:start="15:9" pos:end="15:18"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:18"><name pos:start="15:10" pos:end="15:13">band</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:18">buf</name></name></expr>)</condition> <block pos:start="15:21" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:35">

        <expr_stmt pos:start="17:9" pos:end="17:72"><expr pos:start="17:9" pos:end="17:71"><call pos:start="17:9" pos:end="17:71"><name pos:start="17:9" pos:end="17:14">av_log</name><argument_list pos:start="17:15" pos:end="17:71">(<argument pos:start="17:16" pos:end="17:20"><expr pos:start="17:16" pos:end="17:20"><name pos:start="17:16" pos:end="17:20">avctx</name></expr></argument>, <argument pos:start="17:23" pos:end="17:34"><expr pos:start="17:23" pos:end="17:34"><name pos:start="17:23" pos:end="17:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="17:37" pos:end="17:70"><expr pos:start="17:37" pos:end="17:70"><literal type="string" pos:start="17:37" pos:end="17:70">"Band buffer points to no data!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:35">return <expr pos:start="19:16" pos:end="19:34"><name pos:start="19:16" pos:end="19:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:45"><expr pos:start="23:5" pos:end="23:44"><name pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:8">band</name><operator pos:start="23:9" pos:end="23:10">-&gt;</operator><name pos:start="23:11" pos:end="23:17">ref_buf</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:44"><name pos:start="23:21" pos:end="23:24">band</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:30">bufs</name><index pos:start="23:31" pos:end="23:44">[<expr pos:start="23:32" pos:end="23:43"><name pos:start="23:32" pos:end="23:43"><name pos:start="23:32" pos:end="23:34">ctx</name><operator pos:start="23:35" pos:end="23:36">-&gt;</operator><name pos:start="23:37" pos:end="23:43">ref_buf</name></name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:71"><expr pos:start="25:5" pos:end="25:70"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:8">band</name><operator pos:start="25:9" pos:end="25:10">-&gt;</operator><name pos:start="25:11" pos:end="25:18">data_ptr</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:36"><name pos:start="25:22" pos:end="25:24">ctx</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:36">frame_data</name></name> <operator pos:start="25:38" pos:end="25:38">+</operator> <operator pos:start="25:40" pos:end="25:40">(</operator><call pos:start="25:41" pos:end="25:64"><name pos:start="25:41" pos:end="25:54">get_bits_count</name><argument_list pos:start="25:55" pos:end="25:64">(<argument pos:start="25:56" pos:end="25:63"><expr pos:start="25:56" pos:end="25:63"><operator pos:start="25:56" pos:end="25:56">&amp;</operator><name pos:start="25:57" pos:end="25:63"><name pos:start="25:57" pos:end="25:59">ctx</name><operator pos:start="25:60" pos:end="25:61">-&gt;</operator><name pos:start="25:62" pos:end="25:63">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="25:66" pos:end="25:67">&gt;&gt;</operator> <literal type="number" pos:start="25:69" pos:end="25:69">3</literal><operator pos:start="25:70" pos:end="25:70">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:52"><expr pos:start="29:5" pos:end="29:51"><name pos:start="29:5" pos:end="29:10">result</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <call pos:start="29:14" pos:end="29:51"><name pos:start="29:14" pos:end="29:33"><name pos:start="29:14" pos:end="29:16">ctx</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:33">decode_band_hdr</name></name><argument_list pos:start="29:34" pos:end="29:51">(<argument pos:start="29:35" pos:end="29:37"><expr pos:start="29:35" pos:end="29:37"><name pos:start="29:35" pos:end="29:37">ctx</name></expr></argument>, <argument pos:start="29:40" pos:end="29:43"><expr pos:start="29:40" pos:end="29:43"><name pos:start="29:40" pos:end="29:43">band</name></expr></argument>, <argument pos:start="29:46" pos:end="29:50"><expr pos:start="29:46" pos:end="29:50"><name pos:start="29:46" pos:end="29:50">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:15">(<expr pos:start="31:9" pos:end="31:14"><name pos:start="31:9" pos:end="31:14">result</name></expr>)</condition> <block pos:start="31:17" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:22">

        <expr_stmt pos:start="33:9" pos:end="35:23"><expr pos:start="33:9" pos:end="35:22"><call pos:start="33:9" pos:end="35:22"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="35:22">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">avctx</name></expr></argument>, <argument pos:start="33:23" pos:end="33:34"><expr pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:37" pos:end="33:76"><expr pos:start="33:37" pos:end="33:76"><literal type="string" pos:start="33:37" pos:end="33:76">"Error while decoding band header: %d\n"</literal></expr></argument>,

               <argument pos:start="35:16" pos:end="35:21"><expr pos:start="35:16" pos:end="35:21"><name pos:start="35:16" pos:end="35:21">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:22">return <expr pos:start="37:16" pos:end="37:21"><name pos:start="37:16" pos:end="37:21">result</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:23">(<expr pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:12">band</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:22">is_empty</name></name></expr>)</condition> <block pos:start="43:25" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:35">

        <expr_stmt pos:start="45:9" pos:end="45:65"><expr pos:start="45:9" pos:end="45:64"><call pos:start="45:9" pos:end="45:64"><name pos:start="45:9" pos:end="45:14">av_log</name><argument_list pos:start="45:15" pos:end="45:64">(<argument pos:start="45:16" pos:end="45:20"><expr pos:start="45:16" pos:end="45:20"><name pos:start="45:16" pos:end="45:20">avctx</name></expr></argument>, <argument pos:start="45:23" pos:end="45:34"><expr pos:start="45:23" pos:end="45:34"><name pos:start="45:23" pos:end="45:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:37" pos:end="45:63"><expr pos:start="45:37" pos:end="45:63"><literal type="string" pos:start="45:37" pos:end="45:63">"Empty band encountered!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:35">return <expr pos:start="47:16" pos:end="47:34"><name pos:start="47:16" pos:end="47:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:53"><expr pos:start="53:5" pos:end="53:52"><name pos:start="53:5" pos:end="53:16"><name pos:start="53:5" pos:end="53:8">band</name><operator pos:start="53:9" pos:end="53:10">-&gt;</operator><name pos:start="53:11" pos:end="53:16">rv_map</name></name> <operator pos:start="53:18" pos:end="53:18">=</operator> <operator pos:start="53:20" pos:end="53:20">&amp;</operator><name pos:start="53:21" pos:end="53:52"><name pos:start="53:21" pos:end="53:23">ctx</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:35">rvmap_tabs</name><index pos:start="53:36" pos:end="53:52">[<expr pos:start="53:37" pos:end="53:51"><name pos:start="53:37" pos:end="53:51"><name pos:start="53:37" pos:end="53:40">band</name><operator pos:start="53:41" pos:end="53:42">-&gt;</operator><name pos:start="53:43" pos:end="53:51">rvmap_sel</name></name></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="57:5" pos:end="57:66">/* apply corrections to the selected rvmap table if present */</comment>

    <for pos:start="59:5" pos:end="69:5">for <control pos:start="59:9" pos:end="59:40">(<init pos:start="59:10" pos:end="59:15"><expr pos:start="59:10" pos:end="59:14"><name pos:start="59:10" pos:end="59:10">i</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <literal type="number" pos:start="59:14" pos:end="59:14">0</literal></expr>;</init> <condition pos:start="59:17" pos:end="59:35"><expr pos:start="59:17" pos:end="59:34"><name pos:start="59:17" pos:end="59:17">i</name> <operator pos:start="59:19" pos:end="59:19">&lt;</operator> <name pos:start="59:21" pos:end="59:34"><name pos:start="59:21" pos:end="59:24">band</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:34">num_corr</name></name></expr>;</condition> <incr pos:start="59:37" pos:end="59:39"><expr pos:start="59:37" pos:end="59:39"><name pos:start="59:37" pos:end="59:37">i</name><operator pos:start="59:38" pos:end="59:39">++</operator></expr></incr>)</control> <block pos:start="59:42" pos:end="69:5">{<block_content pos:start="61:9" pos:end="67:80">

        <expr_stmt pos:start="61:9" pos:end="61:33"><expr pos:start="61:9" pos:end="61:32"><name pos:start="61:9" pos:end="61:12">idx1</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <name pos:start="61:16" pos:end="61:32"><name pos:start="61:16" pos:end="61:19">band</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:25">corr</name><index pos:start="61:26" pos:end="61:32">[<expr pos:start="61:27" pos:end="61:31"><name pos:start="61:27" pos:end="61:27">i</name> <operator pos:start="61:29" pos:end="61:29">*</operator> <literal type="number" pos:start="61:31" pos:end="61:31">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:37"><expr pos:start="63:9" pos:end="63:36"><name pos:start="63:9" pos:end="63:12">idx2</name> <operator pos:start="63:14" pos:end="63:14">=</operator> <name pos:start="63:16" pos:end="63:36"><name pos:start="63:16" pos:end="63:19">band</name><operator pos:start="63:20" pos:end="63:21">-&gt;</operator><name pos:start="63:22" pos:end="63:25">corr</name><index pos:start="63:26" pos:end="63:36">[<expr pos:start="63:27" pos:end="63:35"><name pos:start="63:27" pos:end="63:27">i</name> <operator pos:start="63:29" pos:end="63:29">*</operator> <literal type="number" pos:start="63:31" pos:end="63:33">2</literal> <operator pos:start="63:33" pos:end="63:33">+</operator> <literal type="number" pos:start="63:35" pos:end="63:35">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:80"><expr pos:start="65:9" pos:end="65:79"><call pos:start="65:9" pos:end="65:79"><name pos:start="65:9" pos:end="65:14">FFSWAP</name><argument_list pos:start="65:15" pos:end="65:79">(<argument pos:start="65:16" pos:end="65:22"><expr pos:start="65:16" pos:end="65:22"><name pos:start="65:16" pos:end="65:22">uint8_t</name></expr></argument>, <argument pos:start="65:25" pos:end="65:50"><expr pos:start="65:25" pos:end="65:50"><name pos:start="65:25" pos:end="65:50"><name pos:start="65:25" pos:end="65:28">band</name><operator pos:start="65:29" pos:end="65:30">-&gt;</operator><name pos:start="65:31" pos:end="65:36">rv_map</name><operator pos:start="65:37" pos:end="65:38">-&gt;</operator><name pos:start="65:39" pos:end="65:44">runtab</name><index pos:start="65:45" pos:end="65:50">[<expr pos:start="65:46" pos:end="65:49"><name pos:start="65:46" pos:end="65:49">idx1</name></expr>]</index></name></expr></argument>, <argument pos:start="65:53" pos:end="65:78"><expr pos:start="65:53" pos:end="65:78"><name pos:start="65:53" pos:end="65:78"><name pos:start="65:53" pos:end="65:56">band</name><operator pos:start="65:57" pos:end="65:58">-&gt;</operator><name pos:start="65:59" pos:end="65:64">rv_map</name><operator pos:start="65:65" pos:end="65:66">-&gt;</operator><name pos:start="65:67" pos:end="65:72">runtab</name><index pos:start="65:73" pos:end="65:78">[<expr pos:start="65:74" pos:end="65:77"><name pos:start="65:74" pos:end="65:77">idx2</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:80"><expr pos:start="67:9" pos:end="67:79"><call pos:start="67:9" pos:end="67:79"><name pos:start="67:9" pos:end="67:14">FFSWAP</name><argument_list pos:start="67:15" pos:end="67:79">(<argument pos:start="67:16" pos:end="67:22"><expr pos:start="67:16" pos:end="67:22"><name pos:start="67:16" pos:end="67:22">int16_t</name></expr></argument>, <argument pos:start="67:25" pos:end="67:50"><expr pos:start="67:25" pos:end="67:50"><name pos:start="67:25" pos:end="67:50"><name pos:start="67:25" pos:end="67:28">band</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:36">rv_map</name><operator pos:start="67:37" pos:end="67:38">-&gt;</operator><name pos:start="67:39" pos:end="67:44">valtab</name><index pos:start="67:45" pos:end="67:50">[<expr pos:start="67:46" pos:end="67:49"><name pos:start="67:46" pos:end="67:49">idx1</name></expr>]</index></name></expr></argument>, <argument pos:start="67:53" pos:end="67:78"><expr pos:start="67:53" pos:end="67:78"><name pos:start="67:53" pos:end="67:78"><name pos:start="67:53" pos:end="67:56">band</name><operator pos:start="67:57" pos:end="67:58">-&gt;</operator><name pos:start="67:59" pos:end="67:64">rv_map</name><operator pos:start="67:65" pos:end="67:66">-&gt;</operator><name pos:start="67:67" pos:end="67:72">valtab</name><index pos:start="67:73" pos:end="67:78">[<expr pos:start="67:74" pos:end="67:77"><name pos:start="67:74" pos:end="67:77">idx2</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="73:5" pos:end="73:35"><expr pos:start="73:5" pos:end="73:34"><name pos:start="73:5" pos:end="73:7">pos</name> <operator pos:start="73:9" pos:end="73:9">=</operator> <call pos:start="73:11" pos:end="73:34"><name pos:start="73:11" pos:end="73:24">get_bits_count</name><argument_list pos:start="73:25" pos:end="73:34">(<argument pos:start="73:26" pos:end="73:33"><expr pos:start="73:26" pos:end="73:33"><operator pos:start="73:26" pos:end="73:26">&amp;</operator><name pos:start="73:27" pos:end="73:33"><name pos:start="73:27" pos:end="73:29">ctx</name><operator pos:start="73:30" pos:end="73:31">-&gt;</operator><name pos:start="73:32" pos:end="73:33">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="77:5" pos:end="145:5">for <control pos:start="77:9" pos:end="77:41">(<init pos:start="77:10" pos:end="77:15"><expr pos:start="77:10" pos:end="77:14"><name pos:start="77:10" pos:end="77:10">t</name> <operator pos:start="77:12" pos:end="77:12">=</operator> <literal type="number" pos:start="77:14" pos:end="77:14">0</literal></expr>;</init> <condition pos:start="77:17" pos:end="77:36"><expr pos:start="77:17" pos:end="77:35"><name pos:start="77:17" pos:end="77:17">t</name> <operator pos:start="77:19" pos:end="77:19">&lt;</operator> <name pos:start="77:21" pos:end="77:35"><name pos:start="77:21" pos:end="77:24">band</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:35">num_tiles</name></name></expr>;</condition> <incr pos:start="77:38" pos:end="77:40"><expr pos:start="77:38" pos:end="77:40"><name pos:start="77:38" pos:end="77:38">t</name><operator pos:start="77:39" pos:end="77:40">++</operator></expr></incr>)</control> <block pos:start="77:43" pos:end="145:5">{<block_content pos:start="79:9" pos:end="143:9">

        <expr_stmt pos:start="79:9" pos:end="79:31"><expr pos:start="79:9" pos:end="79:30"><name pos:start="79:9" pos:end="79:12">tile</name> <operator pos:start="79:14" pos:end="79:14">=</operator> <operator pos:start="79:16" pos:end="79:16">&amp;</operator><name pos:start="79:17" pos:end="79:30"><name pos:start="79:17" pos:end="79:20">band</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:27">tiles</name><index pos:start="79:28" pos:end="79:30">[<expr pos:start="79:29" pos:end="79:29"><name pos:start="79:29" pos:end="79:29">t</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="83:9" pos:end="91:9"><if pos:start="83:9" pos:end="91:9">if <condition pos:start="83:12" pos:end="83:43">(<expr pos:start="83:13" pos:end="83:42"><name pos:start="83:13" pos:end="83:25"><name pos:start="83:13" pos:end="83:16">tile</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:25">mb_size</name></name> <operator pos:start="83:27" pos:end="83:28">!=</operator> <name pos:start="83:30" pos:end="83:42"><name pos:start="83:30" pos:end="83:33">band</name><operator pos:start="83:34" pos:end="83:35">-&gt;</operator><name pos:start="83:36" pos:end="83:42">mb_size</name></name></expr>)</condition> <block pos:start="83:45" pos:end="91:9">{<block_content pos:start="85:13" pos:end="89:39">

            <expr_stmt pos:start="85:13" pos:end="87:49"><expr pos:start="85:13" pos:end="87:48"><call pos:start="85:13" pos:end="87:48"><name pos:start="85:13" pos:end="85:18">av_log</name><argument_list pos:start="85:19" pos:end="87:48">(<argument pos:start="85:20" pos:end="85:24"><expr pos:start="85:20" pos:end="85:24"><name pos:start="85:20" pos:end="85:24">avctx</name></expr></argument>, <argument pos:start="85:27" pos:end="85:38"><expr pos:start="85:27" pos:end="85:38"><name pos:start="85:27" pos:end="85:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="85:41" pos:end="85:72"><expr pos:start="85:41" pos:end="85:72"><literal type="string" pos:start="85:41" pos:end="85:72">"MB sizes mismatch: %d vs. %d\n"</literal></expr></argument>,

                   <argument pos:start="87:20" pos:end="87:32"><expr pos:start="87:20" pos:end="87:32"><name pos:start="87:20" pos:end="87:32"><name pos:start="87:20" pos:end="87:23">band</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:32">mb_size</name></name></expr></argument>, <argument pos:start="87:35" pos:end="87:47"><expr pos:start="87:35" pos:end="87:47"><name pos:start="87:35" pos:end="87:47"><name pos:start="87:35" pos:end="87:38">tile</name><operator pos:start="87:39" pos:end="87:40">-&gt;</operator><name pos:start="87:41" pos:end="87:47">mb_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="89:13" pos:end="89:39">return <expr pos:start="89:20" pos:end="89:38"><name pos:start="89:20" pos:end="89:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:45"><expr pos:start="93:9" pos:end="93:44"><name pos:start="93:9" pos:end="93:22"><name pos:start="93:9" pos:end="93:12">tile</name><operator pos:start="93:13" pos:end="93:14">-&gt;</operator><name pos:start="93:15" pos:end="93:22">is_empty</name></name> <operator pos:start="93:24" pos:end="93:24">=</operator> <call pos:start="93:26" pos:end="93:44"><name pos:start="93:26" pos:end="93:34">get_bits1</name><argument_list pos:start="93:35" pos:end="93:44">(<argument pos:start="93:36" pos:end="93:43"><expr pos:start="93:36" pos:end="93:43"><operator pos:start="93:36" pos:end="93:36">&amp;</operator><name pos:start="93:37" pos:end="93:43"><name pos:start="93:37" pos:end="93:39">ctx</name><operator pos:start="93:40" pos:end="93:41">-&gt;</operator><name pos:start="93:42" pos:end="93:43">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="143:9"><if pos:start="95:9" pos:end="107:9">if <condition pos:start="95:12" pos:end="95:27">(<expr pos:start="95:13" pos:end="95:26"><name pos:start="95:13" pos:end="95:26"><name pos:start="95:13" pos:end="95:16">tile</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:26">is_empty</name></name></expr>)</condition> <block pos:start="95:29" pos:end="107:9">{<block_content pos:start="97:13" pos:end="105:56">

            <expr_stmt pos:start="97:13" pos:end="99:101"><expr pos:start="97:13" pos:end="99:100"><name pos:start="97:13" pos:end="97:18">result</name> <operator pos:start="97:20" pos:end="97:20">=</operator> <call pos:start="97:22" pos:end="99:100"><name pos:start="97:22" pos:end="97:43">ivi_process_empty_tile</name><argument_list pos:start="97:44" pos:end="99:100">(<argument pos:start="97:45" pos:end="97:49"><expr pos:start="97:45" pos:end="97:49"><name pos:start="97:45" pos:end="97:49">avctx</name></expr></argument>, <argument pos:start="97:52" pos:end="97:55"><expr pos:start="97:52" pos:end="97:55"><name pos:start="97:52" pos:end="97:55">band</name></expr></argument>, <argument pos:start="97:58" pos:end="97:61"><expr pos:start="97:58" pos:end="97:61"><name pos:start="97:58" pos:end="97:61">tile</name></expr></argument>,

                                      <argument pos:start="99:39" pos:end="99:99"><expr pos:start="99:39" pos:end="99:99"><operator pos:start="99:39" pos:end="99:39">(</operator><name pos:start="99:40" pos:end="99:53"><name pos:start="99:40" pos:end="99:42">ctx</name><operator pos:start="99:43" pos:end="99:44">-&gt;</operator><name pos:start="99:45" pos:end="99:50">planes</name><index pos:start="99:51" pos:end="99:53">[<expr pos:start="99:52" pos:end="99:52"><literal type="number" pos:start="99:52" pos:end="99:52">0</literal></expr>]</index></name><operator pos:start="99:54" pos:end="99:54">.</operator><name pos:start="99:55" pos:end="99:62"><name pos:start="99:55" pos:end="99:59">bands</name><index pos:start="99:60" pos:end="99:62">[<expr pos:start="99:61" pos:end="99:61"><literal type="number" pos:start="99:61" pos:end="99:61">0</literal></expr>]</index></name><operator pos:start="99:63" pos:end="99:63">.</operator><name pos:start="99:64" pos:end="99:70">mb_size</name> <operator pos:start="99:72" pos:end="99:73">&gt;&gt;</operator> <literal type="number" pos:start="99:75" pos:end="99:75">3</literal><operator pos:start="99:76" pos:end="99:76">)</operator> <operator pos:start="99:78" pos:end="99:78">-</operator> <operator pos:start="99:80" pos:end="99:80">(</operator><name pos:start="99:81" pos:end="99:93"><name pos:start="99:81" pos:end="99:84">band</name><operator pos:start="99:85" pos:end="99:86">-&gt;</operator><name pos:start="99:87" pos:end="99:93">mb_size</name></name> <operator pos:start="99:95" pos:end="99:96">&gt;&gt;</operator> <literal type="number" pos:start="99:98" pos:end="99:98">3</literal><operator pos:start="99:99" pos:end="99:99">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="101:13" pos:end="103:22"><if pos:start="101:13" pos:end="103:22">if <condition pos:start="101:16" pos:end="101:27">(<expr pos:start="101:17" pos:end="101:26"><name pos:start="101:17" pos:end="101:22">result</name> <operator pos:start="101:24" pos:end="101:24">&lt;</operator> <literal type="number" pos:start="101:26" pos:end="101:26">0</literal></expr>)</condition><block type="pseudo" pos:start="103:17" pos:end="103:22"><block_content pos:start="103:17" pos:end="103:22">

                <break pos:start="103:17" pos:end="103:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:56"><expr pos:start="105:13" pos:end="105:55"><call pos:start="105:13" pos:end="105:55"><name pos:start="105:13" pos:end="105:19">av_dlog</name><argument_list pos:start="105:20" pos:end="105:55">(<argument pos:start="105:21" pos:end="105:25"><expr pos:start="105:21" pos:end="105:25"><name pos:start="105:21" pos:end="105:25">avctx</name></expr></argument>, <argument pos:start="105:28" pos:end="105:54"><expr pos:start="105:28" pos:end="105:54"><literal type="string" pos:start="105:28" pos:end="105:54">"Empty tile encountered!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="107:11" pos:end="143:9">else <block pos:start="107:16" pos:end="143:9">{<block_content pos:start="109:13" pos:end="141:40">

            <expr_stmt pos:start="109:13" pos:end="109:63"><expr pos:start="109:13" pos:end="109:62"><name pos:start="109:13" pos:end="109:27"><name pos:start="109:13" pos:end="109:16">tile</name><operator pos:start="109:17" pos:end="109:18">-&gt;</operator><name pos:start="109:19" pos:end="109:27">data_size</name></name> <operator pos:start="109:29" pos:end="109:29">=</operator> <call pos:start="109:31" pos:end="109:62"><name pos:start="109:31" pos:end="109:52">ivi_dec_tile_data_size</name><argument_list pos:start="109:53" pos:end="109:62">(<argument pos:start="109:54" pos:end="109:61"><expr pos:start="109:54" pos:end="109:61"><operator pos:start="109:54" pos:end="109:54">&amp;</operator><name pos:start="109:55" pos:end="109:61"><name pos:start="109:55" pos:end="109:57">ctx</name><operator pos:start="109:58" pos:end="109:59">-&gt;</operator><name pos:start="109:60" pos:end="109:61">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="111:13" pos:end="117:13"><if pos:start="111:13" pos:end="117:13">if <condition pos:start="111:16" pos:end="111:33">(<expr pos:start="111:17" pos:end="111:32"><operator pos:start="111:17" pos:end="111:17">!</operator><name pos:start="111:18" pos:end="111:32"><name pos:start="111:18" pos:end="111:21">tile</name><operator pos:start="111:22" pos:end="111:23">-&gt;</operator><name pos:start="111:24" pos:end="111:32">data_size</name></name></expr>)</condition> <block pos:start="111:35" pos:end="117:13">{<block_content pos:start="113:17" pos:end="115:43">

                <expr_stmt pos:start="113:17" pos:end="113:73"><expr pos:start="113:17" pos:end="113:72"><call pos:start="113:17" pos:end="113:72"><name pos:start="113:17" pos:end="113:22">av_log</name><argument_list pos:start="113:23" pos:end="113:72">(<argument pos:start="113:24" pos:end="113:28"><expr pos:start="113:24" pos:end="113:28"><name pos:start="113:24" pos:end="113:28">avctx</name></expr></argument>, <argument pos:start="113:31" pos:end="113:42"><expr pos:start="113:31" pos:end="113:42"><name pos:start="113:31" pos:end="113:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="113:45" pos:end="113:71"><expr pos:start="113:45" pos:end="113:71"><literal type="string" pos:start="113:45" pos:end="113:71">"Tile data size is zero!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="115:17" pos:end="115:43">return <expr pos:start="115:24" pos:end="115:42"><name pos:start="115:24" pos:end="115:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="121:13" pos:end="121:65"><expr pos:start="121:13" pos:end="121:64"><name pos:start="121:13" pos:end="121:18">result</name> <operator pos:start="121:20" pos:end="121:20">=</operator> <call pos:start="121:22" pos:end="121:64"><name pos:start="121:22" pos:end="121:40"><name pos:start="121:22" pos:end="121:24">ctx</name><operator pos:start="121:25" pos:end="121:26">-&gt;</operator><name pos:start="121:27" pos:end="121:40">decode_mb_info</name></name><argument_list pos:start="121:41" pos:end="121:64">(<argument pos:start="121:42" pos:end="121:44"><expr pos:start="121:42" pos:end="121:44"><name pos:start="121:42" pos:end="121:44">ctx</name></expr></argument>, <argument pos:start="121:47" pos:end="121:50"><expr pos:start="121:47" pos:end="121:50"><name pos:start="121:47" pos:end="121:50">band</name></expr></argument>, <argument pos:start="121:53" pos:end="121:56"><expr pos:start="121:53" pos:end="121:56"><name pos:start="121:53" pos:end="121:56">tile</name></expr></argument>, <argument pos:start="121:59" pos:end="121:63"><expr pos:start="121:59" pos:end="121:63"><name pos:start="121:59" pos:end="121:63">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="123:13" pos:end="125:22"><if pos:start="123:13" pos:end="125:22">if <condition pos:start="123:16" pos:end="123:27">(<expr pos:start="123:17" pos:end="123:26"><name pos:start="123:17" pos:end="123:22">result</name> <operator pos:start="123:24" pos:end="123:24">&lt;</operator> <literal type="number" pos:start="123:26" pos:end="123:26">0</literal></expr>)</condition><block type="pseudo" pos:start="125:17" pos:end="125:22"><block_content pos:start="125:17" pos:end="125:22">

                <break pos:start="125:17" pos:end="125:22">break;</break></block_content></block></if></if_stmt>



            <expr_stmt pos:start="129:13" pos:end="129:68"><expr pos:start="129:13" pos:end="129:67"><name pos:start="129:13" pos:end="129:18">result</name> <operator pos:start="129:20" pos:end="129:20">=</operator> <call pos:start="129:22" pos:end="129:67"><name pos:start="129:22" pos:end="129:38">ivi_decode_blocks</name><argument_list pos:start="129:39" pos:end="129:67">(<argument pos:start="129:40" pos:end="129:47"><expr pos:start="129:40" pos:end="129:47"><operator pos:start="129:40" pos:end="129:40">&amp;</operator><name pos:start="129:41" pos:end="129:47"><name pos:start="129:41" pos:end="129:43">ctx</name><operator pos:start="129:44" pos:end="129:45">-&gt;</operator><name pos:start="129:46" pos:end="129:47">gb</name></name></expr></argument>, <argument pos:start="129:50" pos:end="129:53"><expr pos:start="129:50" pos:end="129:53"><name pos:start="129:50" pos:end="129:53">band</name></expr></argument>, <argument pos:start="129:56" pos:end="129:59"><expr pos:start="129:56" pos:end="129:59"><name pos:start="129:56" pos:end="129:59">tile</name></expr></argument>, <argument pos:start="129:62" pos:end="129:66"><expr pos:start="129:62" pos:end="129:66"><name pos:start="129:62" pos:end="129:66">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="131:13" pos:end="137:13"><if pos:start="131:13" pos:end="137:13">if <condition pos:start="131:16" pos:end="131:89">(<expr pos:start="131:17" pos:end="131:88"><name pos:start="131:17" pos:end="131:22">result</name> <operator pos:start="131:24" pos:end="131:24">&lt;</operator> <literal type="number" pos:start="131:26" pos:end="131:26">0</literal> <operator pos:start="131:28" pos:end="131:29">||</operator> <operator pos:start="131:31" pos:end="131:31">(</operator><operator pos:start="131:32" pos:end="131:32">(</operator><call pos:start="131:33" pos:end="131:56"><name pos:start="131:33" pos:end="131:46">get_bits_count</name><argument_list pos:start="131:47" pos:end="131:56">(<argument pos:start="131:48" pos:end="131:55"><expr pos:start="131:48" pos:end="131:55"><operator pos:start="131:48" pos:end="131:48">&amp;</operator><name pos:start="131:49" pos:end="131:55"><name pos:start="131:49" pos:end="131:51">ctx</name><operator pos:start="131:52" pos:end="131:53">-&gt;</operator><name pos:start="131:54" pos:end="131:55">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="131:58" pos:end="131:58">-</operator> <name pos:start="131:60" pos:end="131:62">pos</name><operator pos:start="131:63" pos:end="131:63">)</operator> <operator pos:start="131:65" pos:end="131:66">&gt;&gt;</operator> <literal type="number" pos:start="131:68" pos:end="131:68">3</literal><operator pos:start="131:69" pos:end="131:69">)</operator> <operator pos:start="131:71" pos:end="131:72">!=</operator> <name pos:start="131:74" pos:end="131:88"><name pos:start="131:74" pos:end="131:77">tile</name><operator pos:start="131:78" pos:end="131:79">-&gt;</operator><name pos:start="131:80" pos:end="131:88">data_size</name></name></expr>)</condition> <block pos:start="131:91" pos:end="137:13">{<block_content pos:start="133:17" pos:end="135:22">

                <expr_stmt pos:start="133:17" pos:end="133:82"><expr pos:start="133:17" pos:end="133:81"><call pos:start="133:17" pos:end="133:81"><name pos:start="133:17" pos:end="133:22">av_log</name><argument_list pos:start="133:23" pos:end="133:81">(<argument pos:start="133:24" pos:end="133:28"><expr pos:start="133:24" pos:end="133:28"><name pos:start="133:24" pos:end="133:28">avctx</name></expr></argument>, <argument pos:start="133:31" pos:end="133:42"><expr pos:start="133:31" pos:end="133:42"><name pos:start="133:31" pos:end="133:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="133:45" pos:end="133:80"><expr pos:start="133:45" pos:end="133:80"><literal type="string" pos:start="133:45" pos:end="133:80">"Corrupted tile data encountered!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="135:17" pos:end="135:22">break;</break>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="141:13" pos:end="141:40"><expr pos:start="141:13" pos:end="141:39"><name pos:start="141:13" pos:end="141:15">pos</name> <operator pos:start="141:17" pos:end="141:18">+=</operator> <name pos:start="141:20" pos:end="141:34"><name pos:start="141:20" pos:end="141:23">tile</name><operator pos:start="141:24" pos:end="141:25">-&gt;</operator><name pos:start="141:26" pos:end="141:34">data_size</name></name> <operator pos:start="141:36" pos:end="141:37">&lt;&lt;</operator> <literal type="number" pos:start="141:39" pos:end="141:39">3</literal></expr>;</expr_stmt> <comment type="line" pos:start="141:42" pos:end="141:61">// skip to next tile</comment>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="149:5" pos:end="149:87">/* restore the selected rvmap table by applying its corrections in reverse order */</comment>

    <for pos:start="151:5" pos:end="166:0">for <control pos:start="151:9" pos:end="151:43">(<init pos:start="151:10" pos:end="151:30"><expr pos:start="151:10" pos:end="151:29"><name pos:start="151:10" pos:end="151:10">i</name> <operator pos:start="151:12" pos:end="151:12">=</operator> <name pos:start="151:14" pos:end="151:27"><name pos:start="151:14" pos:end="151:17">band</name><operator pos:start="151:18" pos:end="151:19">-&gt;</operator><name pos:start="151:20" pos:end="151:27">num_corr</name></name><operator pos:start="151:28" pos:end="151:28">-</operator><literal type="number" pos:start="151:29" pos:end="151:29">1</literal></expr>;</init> <condition pos:start="151:32" pos:end="151:38"><expr pos:start="151:32" pos:end="151:37"><name pos:start="151:32" pos:end="151:32">i</name> <operator pos:start="151:34" pos:end="151:35">&gt;=</operator> <literal type="number" pos:start="151:37" pos:end="151:37">0</literal></expr>;</condition> <incr pos:start="151:40" pos:end="151:42"><expr pos:start="151:40" pos:end="151:42"><name pos:start="151:40" pos:end="151:40">i</name><operator pos:start="151:41" pos:end="151:42">--</operator></expr></incr>)</control> <block pos:start="151:45" pos:end="166:0">{<block_content pos:start="153:9" pos:end="159:80">

        <expr_stmt pos:start="153:9" pos:end="153:31"><expr pos:start="153:9" pos:end="153:30"><name pos:start="153:9" pos:end="153:12">idx1</name> <operator pos:start="153:14" pos:end="153:14">=</operator> <name pos:start="153:16" pos:end="153:30"><name pos:start="153:16" pos:end="153:19">band</name><operator pos:start="153:20" pos:end="153:21">-&gt;</operator><name pos:start="153:22" pos:end="153:25">corr</name><index pos:start="153:26" pos:end="153:30">[<expr pos:start="153:27" pos:end="153:29"><name pos:start="153:27" pos:end="153:27">i</name><operator pos:start="153:28" pos:end="153:28">*</operator><literal type="number" pos:start="153:29" pos:end="153:29">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:33"><expr pos:start="155:9" pos:end="155:32"><name pos:start="155:9" pos:end="155:12">idx2</name> <operator pos:start="155:14" pos:end="155:14">=</operator> <name pos:start="155:16" pos:end="155:32"><name pos:start="155:16" pos:end="155:19">band</name><operator pos:start="155:20" pos:end="155:21">-&gt;</operator><name pos:start="155:22" pos:end="155:25">corr</name><index pos:start="155:26" pos:end="155:32">[<expr pos:start="155:27" pos:end="155:31"><name pos:start="155:27" pos:end="155:27">i</name><operator pos:start="155:28" pos:end="155:28">*</operator><literal type="number" pos:start="155:29" pos:end="155:30">2</literal><operator pos:start="155:30" pos:end="155:30">+</operator><literal type="number" pos:start="155:31" pos:end="155:31">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:80"><expr pos:start="157:9" pos:end="157:79"><call pos:start="157:9" pos:end="157:79"><name pos:start="157:9" pos:end="157:14">FFSWAP</name><argument_list pos:start="157:15" pos:end="157:79">(<argument pos:start="157:16" pos:end="157:22"><expr pos:start="157:16" pos:end="157:22"><name pos:start="157:16" pos:end="157:22">uint8_t</name></expr></argument>, <argument pos:start="157:25" pos:end="157:50"><expr pos:start="157:25" pos:end="157:50"><name pos:start="157:25" pos:end="157:50"><name pos:start="157:25" pos:end="157:28">band</name><operator pos:start="157:29" pos:end="157:30">-&gt;</operator><name pos:start="157:31" pos:end="157:36">rv_map</name><operator pos:start="157:37" pos:end="157:38">-&gt;</operator><name pos:start="157:39" pos:end="157:44">runtab</name><index pos:start="157:45" pos:end="157:50">[<expr pos:start="157:46" pos:end="157:49"><name pos:start="157:46" pos:end="157:49">idx1</name></expr>]</index></name></expr></argument>, <argument pos:start="157:53" pos:end="157:78"><expr pos:start="157:53" pos:end="157:78"><name pos:start="157:53" pos:end="157:78"><name pos:start="157:53" pos:end="157:56">band</name><operator pos:start="157:57" pos:end="157:58">-&gt;</operator><name pos:start="157:59" pos:end="157:64">rv_map</name><operator pos:start="157:65" pos:end="157:66">-&gt;</operator><name pos:start="157:67" pos:end="157:72">runtab</name><index pos:start="157:73" pos:end="157:78">[<expr pos:start="157:74" pos:end="157:77"><name pos:start="157:74" pos:end="157:77">idx2</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:80"><expr pos:start="159:9" pos:end="159:79"><call pos:start="159:9" pos:end="159:79"><name pos:start="159:9" pos:end="159:14">FFSWAP</name><argument_list pos:start="159:15" pos:end="159:79">(<argument pos:start="159:16" pos:end="159:22"><expr pos:start="159:16" pos:end="159:22"><name pos:start="159:16" pos:end="159:22">int16_t</name></expr></argument>, <argument pos:start="159:25" pos:end="159:50"><expr pos:start="159:25" pos:end="159:50"><name pos:start="159:25" pos:end="159:50"><name pos:start="159:25" pos:end="159:28">band</name><operator pos:start="159:29" pos:end="159:30">-&gt;</operator><name pos:start="159:31" pos:end="159:36">rv_map</name><operator pos:start="159:37" pos:end="159:38">-&gt;</operator><name pos:start="159:39" pos:end="159:44">valtab</name><index pos:start="159:45" pos:end="159:50">[<expr pos:start="159:46" pos:end="159:49"><name pos:start="159:46" pos:end="159:49">idx1</name></expr>]</index></name></expr></argument>, <argument pos:start="159:53" pos:end="159:78"><expr pos:start="159:53" pos:end="159:78"><name pos:start="159:53" pos:end="159:78"><name pos:start="159:53" pos:end="159:56">band</name><operator pos:start="159:57" pos:end="159:58">-&gt;</operator><name pos:start="159:59" pos:end="159:64">rv_map</name><operator pos:start="159:65" pos:end="159:66">-&gt;</operator><name pos:start="159:67" pos:end="159:72">valtab</name><index pos:start="159:73" pos:end="159:78">[<expr pos:start="159:74" pos:end="159:77"><name pos:start="159:74" pos:end="159:77">idx2</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



<cpp:ifdef pos:start="165:1" pos:end="165:12">#<cpp:directive pos:start="165:2" pos:end="165:6">ifdef</cpp:directive> <name pos:start="165:8" pos:end="165:12">DEBUG</name></cpp:ifdef>

    <if_stmt pos:start="167:5" pos:end="184:0"><if pos:start="167:5" pos:end="184:0">if <condition pos:start="167:8" pos:end="167:31">(<expr pos:start="167:9" pos:end="167:30"><name pos:start="167:9" pos:end="167:30"><name pos:start="167:9" pos:end="167:12">band</name><operator pos:start="167:13" pos:end="167:14">-&gt;</operator><name pos:start="167:15" pos:end="167:30">checksum_present</name></name></expr>)</condition> <block pos:start="167:33" pos:end="184:0">{<block_content pos:start="169:9" pos:end="179:9">

        <decl_stmt pos:start="169:9" pos:end="169:55"><decl pos:start="169:9" pos:end="169:54"><type pos:start="169:9" pos:end="169:16"><name pos:start="169:9" pos:end="169:16">uint16_t</name></type> <name pos:start="169:18" pos:end="169:23">chksum</name> <init pos:start="169:25" pos:end="169:54">= <expr pos:start="169:27" pos:end="169:54"><call pos:start="169:27" pos:end="169:54"><name pos:start="169:27" pos:end="169:48">ivi_calc_band_checksum</name><argument_list pos:start="169:49" pos:end="169:54">(<argument pos:start="169:50" pos:end="169:53"><expr pos:start="169:50" pos:end="169:53"><name pos:start="169:50" pos:end="169:53">band</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="171:9" pos:end="179:9"><if pos:start="171:9" pos:end="179:9">if <condition pos:start="171:12" pos:end="171:37">(<expr pos:start="171:13" pos:end="171:36"><name pos:start="171:13" pos:end="171:18">chksum</name> <operator pos:start="171:20" pos:end="171:21">!=</operator> <name pos:start="171:23" pos:end="171:36"><name pos:start="171:23" pos:end="171:26">band</name><operator pos:start="171:27" pos:end="171:28">-&gt;</operator><name pos:start="171:29" pos:end="171:36">checksum</name></name></expr>)</condition> <block pos:start="171:39" pos:end="179:9">{<block_content pos:start="173:13" pos:end="177:72">

            <expr_stmt pos:start="173:13" pos:end="177:72"><expr pos:start="173:13" pos:end="177:71"><call pos:start="173:13" pos:end="177:71"><name pos:start="173:13" pos:end="173:18">av_log</name><argument_list pos:start="173:19" pos:end="177:71">(<argument pos:start="173:20" pos:end="173:24"><expr pos:start="173:20" pos:end="173:24"><name pos:start="173:20" pos:end="173:24">avctx</name></expr></argument>, <argument pos:start="173:27" pos:end="173:38"><expr pos:start="173:27" pos:end="173:38"><name pos:start="173:27" pos:end="173:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="175:20" pos:end="175:94"><expr pos:start="175:20" pos:end="175:94"><literal type="string" pos:start="175:20" pos:end="175:94">"Band checksum mismatch! Plane %d, band %d, received: %x, calculated: %x\n"</literal></expr></argument>,

                   <argument pos:start="177:20" pos:end="177:30"><expr pos:start="177:20" pos:end="177:30"><name pos:start="177:20" pos:end="177:30"><name pos:start="177:20" pos:end="177:23">band</name><operator pos:start="177:24" pos:end="177:25">-&gt;</operator><name pos:start="177:26" pos:end="177:30">plane</name></name></expr></argument>, <argument pos:start="177:33" pos:end="177:46"><expr pos:start="177:33" pos:end="177:46"><name pos:start="177:33" pos:end="177:46"><name pos:start="177:33" pos:end="177:36">band</name><operator pos:start="177:37" pos:end="177:38">-&gt;</operator><name pos:start="177:39" pos:end="177:46">band_num</name></name></expr></argument>, <argument pos:start="177:49" pos:end="177:62"><expr pos:start="177:49" pos:end="177:62"><name pos:start="177:49" pos:end="177:62"><name pos:start="177:49" pos:end="177:52">band</name><operator pos:start="177:53" pos:end="177:54">-&gt;</operator><name pos:start="177:55" pos:end="177:62">checksum</name></name></expr></argument>, <argument pos:start="177:65" pos:end="177:70"><expr pos:start="177:65" pos:end="177:70"><name pos:start="177:65" pos:end="177:70">chksum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="183:1" pos:end="183:6">#<cpp:directive pos:start="183:2" pos:end="183:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="187:5" pos:end="187:29"><expr pos:start="187:5" pos:end="187:28"><call pos:start="187:5" pos:end="187:28"><name pos:start="187:5" pos:end="187:18">align_get_bits</name><argument_list pos:start="187:19" pos:end="187:28">(<argument pos:start="187:20" pos:end="187:27"><expr pos:start="187:20" pos:end="187:27"><operator pos:start="187:20" pos:end="187:20">&amp;</operator><name pos:start="187:21" pos:end="187:27"><name pos:start="187:21" pos:end="187:23">ctx</name><operator pos:start="187:24" pos:end="187:25">-&gt;</operator><name pos:start="187:26" pos:end="187:27">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="191:5" pos:end="191:18">return <expr pos:start="191:12" pos:end="191:17"><name pos:start="191:12" pos:end="191:17">result</name></expr>;</return>

</block_content>}</block></function>
</unit>
