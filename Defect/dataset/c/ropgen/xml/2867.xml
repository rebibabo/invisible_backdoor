<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2867.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">test_smbios_ep_table</name><parameter_list pos:start="1:33" pos:end="1:49">(<parameter pos:start="1:34" pos:end="1:48"><decl pos:start="1:34" pos:end="1:48"><type pos:start="1:34" pos:end="1:44"><name pos:start="1:34" pos:end="1:42">test_data</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:48">data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:54">

    <decl_stmt pos:start="5:5" pos:end="5:65"><decl pos:start="5:5" pos:end="5:64"><type pos:start="5:5" pos:end="5:31"><name pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:29">smbios_entry_point</name></name> <modifier pos:start="5:31" pos:end="5:31">*</modifier></type><name pos:start="5:32" pos:end="5:39">ep_table</name> <init pos:start="5:41" pos:end="5:64">= <expr pos:start="5:43" pos:end="5:64"><operator pos:start="5:43" pos:end="5:43">&amp;</operator><name pos:start="5:44" pos:end="5:64"><name pos:start="5:44" pos:end="5:47">data</name><operator pos:start="5:48" pos:end="5:49">-&gt;</operator><name pos:start="5:50" pos:end="5:64">smbios_ep_table</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:17">addr</name> <init pos:start="7:19" pos:end="7:40">= <expr pos:start="7:21" pos:end="7:40"><name pos:start="7:21" pos:end="7:40"><name pos:start="7:21" pos:end="7:24">data</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:40">smbios_ep_addr</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:51"><expr pos:start="11:5" pos:end="11:50"><call pos:start="11:5" pos:end="11:50"><name pos:start="11:5" pos:end="11:19">ACPI_READ_ARRAY</name><argument_list pos:start="11:20" pos:end="11:50">(<argument pos:start="11:21" pos:end="11:43"><expr pos:start="11:21" pos:end="11:43"><name pos:start="11:21" pos:end="11:43"><name pos:start="11:21" pos:end="11:28">ep_table</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:43">anchor_string</name></name></expr></argument>, <argument pos:start="11:46" pos:end="11:49"><expr pos:start="11:46" pos:end="11:49"><name pos:start="11:46" pos:end="11:49">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:58"><expr pos:start="13:5" pos:end="13:57"><call pos:start="13:5" pos:end="13:57"><name pos:start="13:5" pos:end="13:12">g_assert</name><argument_list pos:start="13:13" pos:end="13:57">(<argument pos:start="13:14" pos:end="13:56"><expr pos:start="13:14" pos:end="13:56"><operator pos:start="13:14" pos:end="13:14">!</operator><call pos:start="13:15" pos:end="13:56"><name pos:start="13:15" pos:end="13:20">memcmp</name><argument_list pos:start="13:21" pos:end="13:56">(<argument pos:start="13:22" pos:end="13:44"><expr pos:start="13:22" pos:end="13:44"><name pos:start="13:22" pos:end="13:44"><name pos:start="13:22" pos:end="13:29">ep_table</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:44">anchor_string</name></name></expr></argument>, <argument pos:start="13:47" pos:end="13:52"><expr pos:start="13:47" pos:end="13:52"><literal type="string" pos:start="13:47" pos:end="13:52">"_SM_"</literal></expr></argument>, <argument pos:start="13:55" pos:end="13:55"><expr pos:start="13:55" pos:end="13:55"><literal type="number" pos:start="13:55" pos:end="13:55">4</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:46"><expr pos:start="15:5" pos:end="15:45"><call pos:start="15:5" pos:end="15:45"><name pos:start="15:5" pos:end="15:19">ACPI_READ_FIELD</name><argument_list pos:start="15:20" pos:end="15:45">(<argument pos:start="15:21" pos:end="15:38"><expr pos:start="15:21" pos:end="15:38"><name pos:start="15:21" pos:end="15:38"><name pos:start="15:21" pos:end="15:28">ep_table</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:38">checksum</name></name></expr></argument>, <argument pos:start="15:41" pos:end="15:44"><expr pos:start="15:41" pos:end="15:44"><name pos:start="15:41" pos:end="15:44">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:44"><expr pos:start="17:5" pos:end="17:43"><call pos:start="17:5" pos:end="17:43"><name pos:start="17:5" pos:end="17:19">ACPI_READ_FIELD</name><argument_list pos:start="17:20" pos:end="17:43">(<argument pos:start="17:21" pos:end="17:36"><expr pos:start="17:21" pos:end="17:36"><name pos:start="17:21" pos:end="17:36"><name pos:start="17:21" pos:end="17:28">ep_table</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:36">length</name></name></expr></argument>, <argument pos:start="17:39" pos:end="17:42"><expr pos:start="17:39" pos:end="17:42"><name pos:start="17:39" pos:end="17:42">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:58"><expr pos:start="19:5" pos:end="19:57"><call pos:start="19:5" pos:end="19:57"><name pos:start="19:5" pos:end="19:19">ACPI_READ_FIELD</name><argument_list pos:start="19:20" pos:end="19:57">(<argument pos:start="19:21" pos:end="19:50"><expr pos:start="19:21" pos:end="19:50"><name pos:start="19:21" pos:end="19:50"><name pos:start="19:21" pos:end="19:28">ep_table</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:50">smbios_major_version</name></name></expr></argument>, <argument pos:start="19:53" pos:end="19:56"><expr pos:start="19:53" pos:end="19:56"><name pos:start="19:53" pos:end="19:56">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:58"><expr pos:start="21:5" pos:end="21:57"><call pos:start="21:5" pos:end="21:57"><name pos:start="21:5" pos:end="21:19">ACPI_READ_FIELD</name><argument_list pos:start="21:20" pos:end="21:57">(<argument pos:start="21:21" pos:end="21:50"><expr pos:start="21:21" pos:end="21:50"><name pos:start="21:21" pos:end="21:50"><name pos:start="21:21" pos:end="21:28">ep_table</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:50">smbios_minor_version</name></name></expr></argument>, <argument pos:start="21:53" pos:end="21:56"><expr pos:start="21:53" pos:end="21:56"><name pos:start="21:53" pos:end="21:56">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:56"><expr pos:start="23:5" pos:end="23:55"><call pos:start="23:5" pos:end="23:55"><name pos:start="23:5" pos:end="23:19">ACPI_READ_FIELD</name><argument_list pos:start="23:20" pos:end="23:55">(<argument pos:start="23:21" pos:end="23:48"><expr pos:start="23:21" pos:end="23:48"><name pos:start="23:21" pos:end="23:48"><name pos:start="23:21" pos:end="23:28">ep_table</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:48">max_structure_size</name></name></expr></argument>, <argument pos:start="23:51" pos:end="23:54"><expr pos:start="23:51" pos:end="23:54"><name pos:start="23:51" pos:end="23:54">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:58"><expr pos:start="25:5" pos:end="25:57"><call pos:start="25:5" pos:end="25:57"><name pos:start="25:5" pos:end="25:19">ACPI_READ_FIELD</name><argument_list pos:start="25:20" pos:end="25:57">(<argument pos:start="25:21" pos:end="25:50"><expr pos:start="25:21" pos:end="25:50"><name pos:start="25:21" pos:end="25:50"><name pos:start="25:21" pos:end="25:28">ep_table</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:50">entry_point_revision</name></name></expr></argument>, <argument pos:start="25:53" pos:end="25:56"><expr pos:start="25:53" pos:end="25:56"><name pos:start="25:53" pos:end="25:56">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:52"><expr pos:start="27:5" pos:end="27:51"><call pos:start="27:5" pos:end="27:51"><name pos:start="27:5" pos:end="27:19">ACPI_READ_ARRAY</name><argument_list pos:start="27:20" pos:end="27:51">(<argument pos:start="27:21" pos:end="27:44"><expr pos:start="27:21" pos:end="27:44"><name pos:start="27:21" pos:end="27:44"><name pos:start="27:21" pos:end="27:28">ep_table</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:44">formatted_area</name></name></expr></argument>, <argument pos:start="27:47" pos:end="27:50"><expr pos:start="27:47" pos:end="27:50"><name pos:start="27:47" pos:end="27:50">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:64"><expr pos:start="29:5" pos:end="29:63"><call pos:start="29:5" pos:end="29:63"><name pos:start="29:5" pos:end="29:19">ACPI_READ_ARRAY</name><argument_list pos:start="29:20" pos:end="29:63">(<argument pos:start="29:21" pos:end="29:56"><expr pos:start="29:21" pos:end="29:56"><name pos:start="29:21" pos:end="29:56"><name pos:start="29:21" pos:end="29:28">ep_table</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:56">intermediate_anchor_string</name></name></expr></argument>, <argument pos:start="29:59" pos:end="29:62"><expr pos:start="29:59" pos:end="29:62"><name pos:start="29:59" pos:end="29:62">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:72"><expr pos:start="31:5" pos:end="31:71"><call pos:start="31:5" pos:end="31:71"><name pos:start="31:5" pos:end="31:12">g_assert</name><argument_list pos:start="31:13" pos:end="31:71">(<argument pos:start="31:14" pos:end="31:70"><expr pos:start="31:14" pos:end="31:70"><operator pos:start="31:14" pos:end="31:14">!</operator><call pos:start="31:15" pos:end="31:70"><name pos:start="31:15" pos:end="31:20">memcmp</name><argument_list pos:start="31:21" pos:end="31:70">(<argument pos:start="31:22" pos:end="31:57"><expr pos:start="31:22" pos:end="31:57"><name pos:start="31:22" pos:end="31:57"><name pos:start="31:22" pos:end="31:29">ep_table</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:57">intermediate_anchor_string</name></name></expr></argument>, <argument pos:start="31:60" pos:end="31:66"><expr pos:start="31:60" pos:end="31:66"><literal type="string" pos:start="31:60" pos:end="31:66">"_DMI_"</literal></expr></argument>, <argument pos:start="31:69" pos:end="31:69"><expr pos:start="31:69" pos:end="31:69"><literal type="number" pos:start="31:69" pos:end="31:69">5</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:59"><expr pos:start="33:5" pos:end="33:58"><call pos:start="33:5" pos:end="33:58"><name pos:start="33:5" pos:end="33:19">ACPI_READ_FIELD</name><argument_list pos:start="33:20" pos:end="33:58">(<argument pos:start="33:21" pos:end="33:51"><expr pos:start="33:21" pos:end="33:51"><name pos:start="33:21" pos:end="33:51"><name pos:start="33:21" pos:end="33:28">ep_table</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:51">intermediate_checksum</name></name></expr></argument>, <argument pos:start="33:54" pos:end="33:57"><expr pos:start="33:54" pos:end="33:57"><name pos:start="33:54" pos:end="33:57">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:60"><expr pos:start="35:5" pos:end="35:59"><call pos:start="35:5" pos:end="35:59"><name pos:start="35:5" pos:end="35:19">ACPI_READ_FIELD</name><argument_list pos:start="35:20" pos:end="35:59">(<argument pos:start="35:21" pos:end="35:52"><expr pos:start="35:21" pos:end="35:52"><name pos:start="35:21" pos:end="35:52"><name pos:start="35:21" pos:end="35:28">ep_table</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:52">structure_table_length</name></name></expr></argument>, <argument pos:start="35:55" pos:end="35:58"><expr pos:start="35:55" pos:end="35:58"><name pos:start="35:55" pos:end="35:58">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:61"><expr pos:start="37:5" pos:end="37:60"><call pos:start="37:5" pos:end="37:60"><name pos:start="37:5" pos:end="37:20">g_assert_cmpuint</name><argument_list pos:start="37:21" pos:end="37:60">(<argument pos:start="37:22" pos:end="37:53"><expr pos:start="37:22" pos:end="37:53"><name pos:start="37:22" pos:end="37:53"><name pos:start="37:22" pos:end="37:29">ep_table</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:53">structure_table_length</name></name></expr></argument>, <argument pos:start="37:56" pos:end="37:56"><expr pos:start="37:56" pos:end="37:56"><operator pos:start="37:56" pos:end="37:56">&gt;</operator></expr></argument>, <argument pos:start="37:59" pos:end="37:59"><expr pos:start="37:59" pos:end="37:59"><literal type="number" pos:start="37:59" pos:end="37:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:61"><expr pos:start="39:5" pos:end="39:60"><call pos:start="39:5" pos:end="39:60"><name pos:start="39:5" pos:end="39:19">ACPI_READ_FIELD</name><argument_list pos:start="39:20" pos:end="39:60">(<argument pos:start="39:21" pos:end="39:53"><expr pos:start="39:21" pos:end="39:53"><name pos:start="39:21" pos:end="39:53"><name pos:start="39:21" pos:end="39:28">ep_table</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:53">structure_table_address</name></name></expr></argument>, <argument pos:start="39:56" pos:end="39:59"><expr pos:start="39:56" pos:end="39:59"><name pos:start="39:56" pos:end="39:59">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:58"><expr pos:start="41:5" pos:end="41:57"><call pos:start="41:5" pos:end="41:57"><name pos:start="41:5" pos:end="41:19">ACPI_READ_FIELD</name><argument_list pos:start="41:20" pos:end="41:57">(<argument pos:start="41:21" pos:end="41:50"><expr pos:start="41:21" pos:end="41:50"><name pos:start="41:21" pos:end="41:50"><name pos:start="41:21" pos:end="41:28">ep_table</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:50">number_of_structures</name></name></expr></argument>, <argument pos:start="41:53" pos:end="41:56"><expr pos:start="41:53" pos:end="41:56"><name pos:start="41:53" pos:end="41:56">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:59"><expr pos:start="43:5" pos:end="43:58"><call pos:start="43:5" pos:end="43:58"><name pos:start="43:5" pos:end="43:20">g_assert_cmpuint</name><argument_list pos:start="43:21" pos:end="43:58">(<argument pos:start="43:22" pos:end="43:51"><expr pos:start="43:22" pos:end="43:51"><name pos:start="43:22" pos:end="43:51"><name pos:start="43:22" pos:end="43:29">ep_table</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:51">number_of_structures</name></name></expr></argument>, <argument pos:start="43:54" pos:end="43:54"><expr pos:start="43:54" pos:end="43:54"><operator pos:start="43:54" pos:end="43:54">&gt;</operator></expr></argument>, <argument pos:start="43:57" pos:end="43:57"><expr pos:start="43:57" pos:end="43:57"><literal type="number" pos:start="43:57" pos:end="43:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:57"><expr pos:start="45:5" pos:end="45:56"><call pos:start="45:5" pos:end="45:56"><name pos:start="45:5" pos:end="45:19">ACPI_READ_FIELD</name><argument_list pos:start="45:20" pos:end="45:56">(<argument pos:start="45:21" pos:end="45:49"><expr pos:start="45:21" pos:end="45:49"><name pos:start="45:21" pos:end="45:49"><name pos:start="45:21" pos:end="45:28">ep_table</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:49">smbios_bcd_revision</name></name></expr></argument>, <argument pos:start="45:52" pos:end="45:55"><expr pos:start="45:52" pos:end="45:55"><name pos:start="45:52" pos:end="45:55">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:68"><expr pos:start="47:5" pos:end="47:67"><call pos:start="47:5" pos:end="47:67"><name pos:start="47:5" pos:end="47:12">g_assert</name><argument_list pos:start="47:13" pos:end="47:67">(<argument pos:start="47:14" pos:end="47:66"><expr pos:start="47:14" pos:end="47:66"><operator pos:start="47:14" pos:end="47:14">!</operator><call pos:start="47:15" pos:end="47:66"><name pos:start="47:15" pos:end="47:27">acpi_checksum</name><argument_list pos:start="47:28" pos:end="47:66">(<argument pos:start="47:29" pos:end="47:47"><expr pos:start="47:29" pos:end="47:47"><operator pos:start="47:29" pos:end="47:29">(</operator><name pos:start="47:30" pos:end="47:36">uint8_t</name> <operator pos:start="47:38" pos:end="47:38">*</operator><operator pos:start="47:39" pos:end="47:39">)</operator><name pos:start="47:40" pos:end="47:47">ep_table</name></expr></argument>, <argument pos:start="47:50" pos:end="47:65"><expr pos:start="47:50" pos:end="47:65"><sizeof pos:start="47:50" pos:end="47:55">sizeof <name/></sizeof>*<name pos:start="47:58" pos:end="47:65">ep_table</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="51:54"><expr pos:start="49:5" pos:end="51:53"><call pos:start="49:5" pos:end="51:53"><name pos:start="49:5" pos:end="49:12">g_assert</name><argument_list pos:start="49:13" pos:end="51:53">(<argument pos:start="49:14" pos:end="51:52"><expr pos:start="49:14" pos:end="51:52"><operator pos:start="49:14" pos:end="49:14">!</operator><call pos:start="49:15" pos:end="51:52"><name pos:start="49:15" pos:end="49:27">acpi_checksum</name><argument_list pos:start="49:28" pos:end="51:52">(<argument pos:start="49:29" pos:end="49:54"><expr pos:start="49:29" pos:end="49:54"><operator pos:start="49:29" pos:end="49:29">(</operator><name pos:start="49:30" pos:end="49:36">uint8_t</name> <operator pos:start="49:38" pos:end="49:38">*</operator><operator pos:start="49:39" pos:end="49:39">)</operator><name pos:start="49:40" pos:end="49:47">ep_table</name> <operator pos:start="49:49" pos:end="49:49">+</operator> <literal type="number" pos:start="49:51" pos:end="49:54">0x10</literal></expr></argument>,

                            <argument pos:start="51:29" pos:end="51:51"><expr pos:start="51:29" pos:end="51:51"><sizeof pos:start="51:29" pos:end="51:34">sizeof <name/></sizeof>*<name pos:start="51:37" pos:end="51:44">ep_table</name> <operator pos:start="51:46" pos:end="51:46">-</operator> <literal type="number" pos:start="51:48" pos:end="51:51">0x10</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
