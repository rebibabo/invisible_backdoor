<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13129.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">usb_test_hotplug</name><parameter_list pos:start="1:22" pos:end="3:47">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><specifier pos:start="1:23" pos:end="1:27">const</specifier> <name pos:start="1:29" pos:end="1:32">char</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">hcd_id</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:56"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:56">port</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:46"><function_decl pos:start="3:23" pos:end="3:46"><type pos:start="3:23" pos:end="3:26"><name pos:start="3:23" pos:end="3:26">void</name></type> (<modifier pos:start="3:29" pos:end="3:29">*</modifier><name pos:start="3:30" pos:end="3:39">port_check</name>)<parameter_list pos:start="3:41" pos:end="3:46">(<parameter pos:start="3:42" pos:end="3:45"><decl pos:start="3:42" pos:end="3:45"><type pos:start="3:42" pos:end="3:45"><name pos:start="3:42" pos:end="3:45">void</name></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="65:1">{<block_content pos:start="7:5" pos:end="62:74">

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">QDict</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:19">response</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:8">char</name>  <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:14">cmd</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="25:52"><expr pos:start="13:5" pos:end="25:51"><name pos:start="13:5" pos:end="13:7">cmd</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="25:51"><name pos:start="13:11" pos:end="13:25">g_strdup_printf</name><argument_list pos:start="13:26" pos:end="25:51">(<argument pos:start="13:27" pos:end="25:30"><expr pos:start="13:27" pos:end="25:30"><literal type="string" pos:start="13:27" pos:end="13:53">"{'execute': 'device_add',"</literal>

                          <literal type="string" pos:start="15:27" pos:end="15:43">" 'arguments': {"</literal>

                          <literal type="string" pos:start="17:27" pos:end="17:54">"   'driver': 'usb-tablet',"</literal>

                          <literal type="string" pos:start="19:27" pos:end="19:44">"   'port': '%d',"</literal>

                          <literal type="string" pos:start="21:27" pos:end="21:45">"   'bus': '%s.0',"</literal>

                          <literal type="string" pos:start="23:27" pos:end="23:47">"   'id': 'usbdev%d'"</literal>

                          <literal type="string" pos:start="25:27" pos:end="25:30">"}}"</literal></expr></argument>, <argument pos:start="25:33" pos:end="25:36"><expr pos:start="25:33" pos:end="25:36"><name pos:start="25:33" pos:end="25:36">port</name></expr></argument>, <argument pos:start="25:39" pos:end="25:44"><expr pos:start="25:39" pos:end="25:44"><name pos:start="25:39" pos:end="25:44">hcd_id</name></expr></argument>, <argument pos:start="25:47" pos:end="25:50"><expr pos:start="25:47" pos:end="25:50"><name pos:start="25:47" pos:end="25:50">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:12">response</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="27:23"><name pos:start="27:16" pos:end="27:18">qmp</name><argument_list pos:start="27:19" pos:end="27:23">(<argument pos:start="27:20" pos:end="27:22"><expr pos:start="27:20" pos:end="27:22"><name pos:start="27:20" pos:end="27:22">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:16"><expr pos:start="29:5" pos:end="29:15"><call pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:10">g_free</name><argument_list pos:start="29:11" pos:end="29:15">(<argument pos:start="29:12" pos:end="29:14"><expr pos:start="29:12" pos:end="29:14"><name pos:start="29:12" pos:end="29:14">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:23"><expr pos:start="31:5" pos:end="31:22"><call pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:12">g_assert</name><argument_list pos:start="31:13" pos:end="31:22">(<argument pos:start="31:14" pos:end="31:21"><expr pos:start="31:14" pos:end="31:21"><name pos:start="31:14" pos:end="31:21">response</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:47"><expr pos:start="33:5" pos:end="33:46"><call pos:start="33:5" pos:end="33:46"><name pos:start="33:5" pos:end="33:12">g_assert</name><argument_list pos:start="33:13" pos:end="33:46">(<argument pos:start="33:14" pos:end="33:45"><expr pos:start="33:14" pos:end="33:45"><operator pos:start="33:14" pos:end="33:14">!</operator><call pos:start="33:15" pos:end="33:45"><name pos:start="33:15" pos:end="33:26">qdict_haskey</name><argument_list pos:start="33:27" pos:end="33:45">(<argument pos:start="33:28" pos:end="33:35"><expr pos:start="33:28" pos:end="33:35"><name pos:start="33:28" pos:end="33:35">response</name></expr></argument>, <argument pos:start="33:38" pos:end="33:44"><expr pos:start="33:38" pos:end="33:44"><literal type="string" pos:start="33:38" pos:end="33:44">"error"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <if_stmt pos:start="38:5" pos:end="42:5"><if pos:start="38:5" pos:end="42:5">if <condition pos:start="38:8" pos:end="38:19">(<expr pos:start="38:9" pos:end="38:18"><name pos:start="38:9" pos:end="38:18">port_check</name></expr>)</condition> <block pos:start="38:21" pos:end="42:5">{<block_content pos:start="40:9" pos:end="40:21">

        <expr_stmt pos:start="40:9" pos:end="40:21"><expr pos:start="40:9" pos:end="40:20"><call pos:start="40:9" pos:end="40:20"><name pos:start="40:9" pos:end="40:18">port_check</name><argument_list pos:start="40:19" pos:end="40:20">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="46:5" pos:end="52:39"><expr pos:start="46:5" pos:end="52:38"><name pos:start="46:5" pos:end="46:7">cmd</name> <operator pos:start="46:9" pos:end="46:9">=</operator> <call pos:start="46:11" pos:end="52:38"><name pos:start="46:11" pos:end="46:25">g_strdup_printf</name><argument_list pos:start="46:26" pos:end="52:38">(<argument pos:start="46:27" pos:end="52:31"><expr pos:start="46:27" pos:end="52:31"><literal type="string" pos:start="46:27" pos:end="46:53">"{'execute': 'device_del',"</literal>

                           <literal type="string" pos:start="48:28" pos:end="48:44">" 'arguments': {"</literal>

                           <literal type="string" pos:start="50:28" pos:end="50:48">"   'id': 'usbdev%d'"</literal>

                           <literal type="string" pos:start="52:28" pos:end="52:31">"}}"</literal></expr></argument>, <argument pos:start="52:34" pos:end="52:37"><expr pos:start="52:34" pos:end="52:37"><name pos:start="52:34" pos:end="52:37">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="54:5" pos:end="54:24"><expr pos:start="54:5" pos:end="54:23"><name pos:start="54:5" pos:end="54:12">response</name> <operator pos:start="54:14" pos:end="54:14">=</operator> <call pos:start="54:16" pos:end="54:23"><name pos:start="54:16" pos:end="54:18">qmp</name><argument_list pos:start="54:19" pos:end="54:23">(<argument pos:start="54:20" pos:end="54:22"><expr pos:start="54:20" pos:end="54:22"><name pos:start="54:20" pos:end="54:22">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="56:5" pos:end="56:16"><expr pos:start="56:5" pos:end="56:15"><call pos:start="56:5" pos:end="56:15"><name pos:start="56:5" pos:end="56:10">g_free</name><argument_list pos:start="56:11" pos:end="56:15">(<argument pos:start="56:12" pos:end="56:14"><expr pos:start="56:12" pos:end="56:14"><name pos:start="56:12" pos:end="56:14">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="58:5" pos:end="58:23"><expr pos:start="58:5" pos:end="58:22"><call pos:start="58:5" pos:end="58:22"><name pos:start="58:5" pos:end="58:12">g_assert</name><argument_list pos:start="58:13" pos:end="58:22">(<argument pos:start="58:14" pos:end="58:21"><expr pos:start="58:14" pos:end="58:21"><name pos:start="58:14" pos:end="58:21">response</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="60:5" pos:end="60:46"><expr pos:start="60:5" pos:end="60:45"><call pos:start="60:5" pos:end="60:45"><name pos:start="60:5" pos:end="60:12">g_assert</name><argument_list pos:start="60:13" pos:end="60:45">(<argument pos:start="60:14" pos:end="60:44"><expr pos:start="60:14" pos:end="60:44"><call pos:start="60:14" pos:end="60:44"><name pos:start="60:14" pos:end="60:25">qdict_haskey</name><argument_list pos:start="60:26" pos:end="60:44">(<argument pos:start="60:27" pos:end="60:34"><expr pos:start="60:27" pos:end="60:34"><name pos:start="60:27" pos:end="60:34">response</name></expr></argument>, <argument pos:start="60:37" pos:end="60:43"><expr pos:start="60:37" pos:end="60:43"><literal type="string" pos:start="60:37" pos:end="60:43">"event"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="62:5" pos:end="62:74"><expr pos:start="62:5" pos:end="62:73"><call pos:start="62:5" pos:end="62:73"><name pos:start="62:5" pos:end="62:12">g_assert</name><argument_list pos:start="62:13" pos:end="62:73">(<argument pos:start="62:14" pos:end="62:72"><expr pos:start="62:14" pos:end="62:72"><operator pos:start="62:14" pos:end="62:14">!</operator><call pos:start="62:15" pos:end="62:72"><name pos:start="62:15" pos:end="62:20">strcmp</name><argument_list pos:start="62:21" pos:end="62:72">(<argument pos:start="62:22" pos:end="62:53"><expr pos:start="62:22" pos:end="62:53"><call pos:start="62:22" pos:end="62:53"><name pos:start="62:22" pos:end="62:34">qdict_get_str</name><argument_list pos:start="62:35" pos:end="62:53">(<argument pos:start="62:36" pos:end="62:43"><expr pos:start="62:36" pos:end="62:43"><name pos:start="62:36" pos:end="62:43">response</name></expr></argument>, <argument pos:start="62:46" pos:end="62:52"><expr pos:start="62:46" pos:end="62:52"><literal type="string" pos:start="62:46" pos:end="62:52">"event"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="62:56" pos:end="62:71"><expr pos:start="62:56" pos:end="62:71"><literal type="string" pos:start="62:56" pos:end="62:71">"DEVICE_DELETED"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>


</block_content>}</block></function></unit>
