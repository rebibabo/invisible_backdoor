<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22136.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:13">double</name></type> <name pos:start="1:15" pos:end="1:29">get_audio_clock</name><parameter_list pos:start="1:30" pos:end="1:45">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:40">VideoState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">is</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:15">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">double</name></type> <name pos:start="5:12" pos:end="5:14">pts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">hw_buf_size</name></decl>, <decl pos:start="7:22" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:34">bytes_per_sec</name></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:26"><expr pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:7">pts</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <name pos:start="9:11" pos:end="9:25"><name pos:start="9:11" pos:end="9:12">is</name><operator pos:start="9:13" pos:end="9:14">-&gt;</operator><name pos:start="9:15" pos:end="9:25">audio_clock</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:47"><expr pos:start="11:5" pos:end="11:46"><name pos:start="11:5" pos:end="11:15">hw_buf_size</name> <operator pos:start="11:17" pos:end="11:17">=</operator> <call pos:start="11:19" pos:end="11:46"><name pos:start="11:19" pos:end="11:42">audio_write_get_buf_size</name><argument_list pos:start="11:43" pos:end="11:46">(<argument pos:start="11:44" pos:end="11:45"><expr pos:start="11:44" pos:end="11:45"><name pos:start="11:44" pos:end="11:45">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:22"><expr pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:17">bytes_per_sec</name> <operator pos:start="13:19" pos:end="13:19">=</operator> <literal type="number" pos:start="13:21" pos:end="13:21">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:21">(<expr pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:10">is</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:20">audio_st</name></name></expr>)</condition> <block pos:start="15:23" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:58">

        <expr_stmt pos:start="17:9" pos:end="19:58"><expr pos:start="17:9" pos:end="19:57"><name pos:start="17:9" pos:end="17:21">bytes_per_sec</name> <operator pos:start="17:23" pos:end="17:23">=</operator> <name pos:start="17:25" pos:end="17:56"><name pos:start="17:25" pos:end="17:26">is</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:36">audio_st</name><operator pos:start="17:37" pos:end="17:38">-&gt;</operator><name pos:start="17:39" pos:end="17:43">codec</name><operator pos:start="17:44" pos:end="17:45">-&gt;</operator><name pos:start="17:46" pos:end="17:56">sample_rate</name></name> <operator pos:start="17:58" pos:end="17:58">*</operator>

                        <literal type="number" pos:start="19:25" pos:end="19:25">2</literal> <operator pos:start="19:27" pos:end="19:27">*</operator> <name pos:start="19:29" pos:end="19:57"><name pos:start="19:29" pos:end="19:30">is</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:40">audio_st</name><operator pos:start="19:41" pos:end="19:42">-&gt;</operator><name pos:start="19:43" pos:end="19:47">codec</name><operator pos:start="19:48" pos:end="19:49">-&gt;</operator><name pos:start="19:50" pos:end="19:57">channels</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="25:51"><if pos:start="23:5" pos:end="25:51">if <condition pos:start="23:8" pos:end="23:22">(<expr pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:21">bytes_per_sec</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:51"><block_content pos:start="25:9" pos:end="25:51">

        <expr_stmt pos:start="25:9" pos:end="25:51"><expr pos:start="25:9" pos:end="25:50"><name pos:start="25:9" pos:end="25:11">pts</name> <operator pos:start="25:13" pos:end="25:14">-=</operator> <operator pos:start="25:16" pos:end="25:16">(</operator><name pos:start="25:17" pos:end="25:22">double</name><operator pos:start="25:23" pos:end="25:23">)</operator><name pos:start="25:24" pos:end="25:34">hw_buf_size</name> <operator pos:start="25:36" pos:end="25:36">/</operator> <name pos:start="25:38" pos:end="25:50">bytes_per_sec</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="27:5" pos:end="27:15">return <expr pos:start="27:12" pos:end="27:14"><name pos:start="27:12" pos:end="27:14">pts</name></expr>;</return>

</block_content>}</block></function>
</unit>
