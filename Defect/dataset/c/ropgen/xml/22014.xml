<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22014.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">decode_frame_ilbm</name><parameter_list pos:start="1:29" pos:end="5:44">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">data_size</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:43"><decl pos:start="5:29" pos:end="5:43"><type pos:start="5:29" pos:end="5:43"><name pos:start="5:29" pos:end="5:36">AVPacket</name> <modifier pos:start="5:38" pos:end="5:38">*</modifier></type><name pos:start="5:39" pos:end="5:43">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="63:1">{<block_content pos:start="9:5" pos:end="61:20">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">IffContext</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:17">s</name> <init pos:start="9:19" pos:end="9:36">= <expr pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:25">avctx</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">buf</name> <init pos:start="11:24" pos:end="11:36">= <expr pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:30">avpkt</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">buf_size</name> <init pos:start="13:18" pos:end="13:30">= <expr pos:start="13:20" pos:end="13:30"><name pos:start="13:20" pos:end="13:30"><name pos:start="13:20" pos:end="13:24">avpkt</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:42"><decl pos:start="15:5" pos:end="15:41"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:26">buf_end</name> <init pos:start="15:28" pos:end="15:41">= <expr pos:start="15:30" pos:end="15:41"><name pos:start="15:30" pos:end="15:32">buf</name><operator pos:start="15:33" pos:end="15:33">+</operator><name pos:start="15:34" pos:end="15:41">buf_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">y</name></decl>, <decl pos:start="17:12" pos:end="17:16"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:16">plane</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:50">(<expr pos:start="21:9" pos:end="21:49"><call pos:start="21:9" pos:end="21:45"><name pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:13">avctx</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:27">reget_buffer</name></name><argument_list pos:start="21:28" pos:end="21:45">(<argument pos:start="21:29" pos:end="21:33"><expr pos:start="21:29" pos:end="21:33"><name pos:start="21:29" pos:end="21:33">avctx</name></expr></argument>, <argument pos:start="21:36" pos:end="21:44"><expr pos:start="21:36" pos:end="21:44"><operator pos:start="21:36" pos:end="21:36">&amp;</operator><name pos:start="21:37" pos:end="21:44"><name pos:start="21:37" pos:end="21:37">s</name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:44">frame</name></name></expr></argument>)</argument_list></call> <operator pos:start="21:47" pos:end="21:47">&lt;</operator> <literal type="number" pos:start="21:49" pos:end="21:49">0</literal></expr>)</condition><block pos:start="21:51" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:18">

        <expr_stmt pos:start="23:9" pos:end="23:61"><expr pos:start="23:9" pos:end="23:60"><call pos:start="23:9" pos:end="23:60"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="23:60">(<argument pos:start="23:16" pos:end="23:20"><expr pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:20">avctx</name></expr></argument>, <argument pos:start="23:23" pos:end="23:34"><expr pos:start="23:23" pos:end="23:34"><name pos:start="23:23" pos:end="23:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:37" pos:end="23:59"><expr pos:start="23:37" pos:end="23:59"><literal type="string" pos:start="23:37" pos:end="23:59">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="31:5" pos:end="53:5">for<control pos:start="31:8" pos:end="31:39">(<init pos:start="31:9" pos:end="31:14"><expr pos:start="31:9" pos:end="31:13"><name pos:start="31:9" pos:end="31:9">y</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <literal type="number" pos:start="31:13" pos:end="31:13">0</literal></expr>;</init> <condition pos:start="31:16" pos:end="31:33"><expr pos:start="31:16" pos:end="31:32"><name pos:start="31:16" pos:end="31:16">y</name> <operator pos:start="31:18" pos:end="31:18">&lt;</operator> <name pos:start="31:20" pos:end="31:32"><name pos:start="31:20" pos:end="31:24">avctx</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:32">height</name></name></expr>;</condition> <incr pos:start="31:35" pos:end="31:37"><expr pos:start="31:35" pos:end="31:37"><name pos:start="31:35" pos:end="31:35">y</name><operator pos:start="31:36" pos:end="31:37">++</operator></expr></incr> )</control> <block pos:start="31:41" pos:end="53:5">{<block_content pos:start="33:9" pos:end="51:9">

        <decl_stmt pos:start="33:9" pos:end="33:67"><decl pos:start="33:9" pos:end="33:66"><type pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:15">uint8_t</name> <modifier pos:start="33:17" pos:end="33:17">*</modifier></type><name pos:start="33:18" pos:end="33:20">row</name> <init pos:start="33:22" pos:end="33:66">= <expr pos:start="33:24" pos:end="33:66"><operator pos:start="33:24" pos:end="33:24">&amp;</operator><name pos:start="33:25" pos:end="33:66"><name pos:start="33:25" pos:end="33:25">s</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:32">frame</name><operator pos:start="33:33" pos:end="33:33">.</operator><name pos:start="33:34" pos:end="33:37">data</name><index pos:start="33:38" pos:end="33:40">[<expr pos:start="33:39" pos:end="33:39"><literal type="number" pos:start="33:39" pos:end="33:39">0</literal></expr>]</index><index pos:start="33:41" pos:end="33:66">[ <expr pos:start="33:43" pos:end="33:64"><name pos:start="33:43" pos:end="33:43">y</name><operator pos:start="33:44" pos:end="33:44">*</operator><name pos:start="33:45" pos:end="33:64"><name pos:start="33:45" pos:end="33:45">s</name><operator pos:start="33:46" pos:end="33:47">-&gt;</operator><name pos:start="33:48" pos:end="33:52">frame</name><operator pos:start="33:53" pos:end="33:53">.</operator><name pos:start="33:54" pos:end="33:61">linesize</name><index pos:start="33:62" pos:end="33:64">[<expr pos:start="33:63" pos:end="33:63"><literal type="number" pos:start="33:63" pos:end="33:63">0</literal></expr>]</index></name></expr> ]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:91"><expr pos:start="35:9" pos:end="35:90"><call pos:start="35:9" pos:end="35:90"><name pos:start="35:9" pos:end="35:14">memset</name><argument_list pos:start="35:15" pos:end="35:90">(<argument pos:start="35:16" pos:end="35:18"><expr pos:start="35:16" pos:end="35:18"><name pos:start="35:16" pos:end="35:18">row</name></expr></argument>, <argument pos:start="35:21" pos:end="35:21"><expr pos:start="35:21" pos:end="35:21"><literal type="number" pos:start="35:21" pos:end="35:21">0</literal></expr></argument>, <argument pos:start="35:24" pos:end="35:89"><expr pos:start="35:24" pos:end="35:89"><ternary pos:start="35:24" pos:end="35:89"><condition pos:start="35:24" pos:end="35:55"><expr pos:start="35:24" pos:end="35:53"><name pos:start="35:24" pos:end="35:37"><name pos:start="35:24" pos:end="35:28">avctx</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:37">pix_fmt</name></name> <operator pos:start="35:39" pos:end="35:40">==</operator> <name pos:start="35:42" pos:end="35:53">PIX_FMT_PAL8</name></expr> ?</condition><then pos:start="35:57" pos:end="35:68"> <expr pos:start="35:57" pos:end="35:68"><name pos:start="35:57" pos:end="35:68"><name pos:start="35:57" pos:end="35:61">avctx</name><operator pos:start="35:62" pos:end="35:63">-&gt;</operator><name pos:start="35:64" pos:end="35:68">width</name></name></expr> </then><else pos:start="35:70" pos:end="35:89">: <expr pos:start="35:72" pos:end="35:89"><operator pos:start="35:72" pos:end="35:72">(</operator><name pos:start="35:73" pos:end="35:84"><name pos:start="35:73" pos:end="35:77">avctx</name><operator pos:start="35:78" pos:end="35:79">-&gt;</operator><name pos:start="35:80" pos:end="35:84">width</name></name> <operator pos:start="35:86" pos:end="35:86">*</operator> <literal type="number" pos:start="35:88" pos:end="35:88">4</literal><operator pos:start="35:89" pos:end="35:89">)</operator></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="37:9" pos:end="51:9">for <control pos:start="37:13" pos:end="37:87">(<init pos:start="37:14" pos:end="37:23"><expr pos:start="37:14" pos:end="37:22"><name pos:start="37:14" pos:end="37:18">plane</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <literal type="number" pos:start="37:22" pos:end="37:22">0</literal></expr>;</init> <condition pos:start="37:25" pos:end="37:78"><expr pos:start="37:25" pos:end="37:77"><name pos:start="37:25" pos:end="37:29">plane</name> <operator pos:start="37:31" pos:end="37:31">&lt;</operator> <name pos:start="37:33" pos:end="37:60"><name pos:start="37:33" pos:end="37:37">avctx</name><operator pos:start="37:38" pos:end="37:39">-&gt;</operator><name pos:start="37:40" pos:end="37:60">bits_per_coded_sample</name></name> <operator pos:start="37:62" pos:end="37:63">&amp;&amp;</operator> <name pos:start="37:65" pos:end="37:67">buf</name> <operator pos:start="37:69" pos:end="37:69">&lt;</operator> <name pos:start="37:71" pos:end="37:77">buf_end</name></expr>;</condition> <incr pos:start="37:80" pos:end="37:86"><expr pos:start="37:80" pos:end="37:86"><name pos:start="37:80" pos:end="37:84">plane</name><operator pos:start="37:85" pos:end="37:86">++</operator></expr></incr>)</control> <block pos:start="37:89" pos:end="51:9">{<block_content pos:start="39:13" pos:end="49:32">

            <if_stmt pos:start="39:13" pos:end="47:13"><if pos:start="39:13" pos:end="43:13">if <condition pos:start="39:16" pos:end="39:47">(<expr pos:start="39:17" pos:end="39:46"><name pos:start="39:17" pos:end="39:30"><name pos:start="39:17" pos:end="39:21">avctx</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:30">pix_fmt</name></name> <operator pos:start="39:32" pos:end="39:33">==</operator> <name pos:start="39:35" pos:end="39:46">PIX_FMT_PAL8</name></expr>)</condition> <block pos:start="39:49" pos:end="43:13">{<block_content pos:start="41:17" pos:end="41:112">

                <expr_stmt pos:start="41:17" pos:end="41:112"><expr pos:start="41:17" pos:end="41:111"><call pos:start="41:17" pos:end="41:111"><name pos:start="41:17" pos:end="41:28">decodeplane8</name><argument_list pos:start="41:29" pos:end="41:111">(<argument pos:start="41:30" pos:end="41:32"><expr pos:start="41:30" pos:end="41:32"><name pos:start="41:30" pos:end="41:32">row</name></expr></argument>, <argument pos:start="41:35" pos:end="41:37"><expr pos:start="41:35" pos:end="41:37"><name pos:start="41:35" pos:end="41:37">buf</name></expr></argument>, <argument pos:start="41:40" pos:end="41:73"><expr pos:start="41:40" pos:end="41:73"><call pos:start="41:40" pos:end="41:73"><name pos:start="41:40" pos:end="41:44">FFMIN</name><argument_list pos:start="41:45" pos:end="41:73">(<argument pos:start="41:46" pos:end="41:57"><expr pos:start="41:46" pos:end="41:57"><name pos:start="41:46" pos:end="41:57"><name pos:start="41:46" pos:end="41:46">s</name><operator pos:start="41:47" pos:end="41:48">-&gt;</operator><name pos:start="41:49" pos:end="41:57">planesize</name></name></expr></argument>, <argument pos:start="41:60" pos:end="41:72"><expr pos:start="41:60" pos:end="41:72"><name pos:start="41:60" pos:end="41:66">buf_end</name> <operator pos:start="41:68" pos:end="41:68">-</operator> <name pos:start="41:70" pos:end="41:72">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:76" pos:end="41:103"><expr pos:start="41:76" pos:end="41:103"><name pos:start="41:76" pos:end="41:103"><name pos:start="41:76" pos:end="41:80">avctx</name><operator pos:start="41:81" pos:end="41:82">-&gt;</operator><name pos:start="41:83" pos:end="41:103">bits_per_coded_sample</name></name></expr></argument>, <argument pos:start="41:106" pos:end="41:110"><expr pos:start="41:106" pos:end="41:110"><name pos:start="41:106" pos:end="41:110">plane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="43:15" pos:end="47:13">else <block pos:start="43:20" pos:end="47:13">{<block_content pos:start="45:17" pos:end="45:113"> <comment type="line" pos:start="43:22" pos:end="43:37">// PIX_FMT_BGR32</comment>

                <expr_stmt pos:start="45:17" pos:end="45:113"><expr pos:start="45:17" pos:end="45:112"><call pos:start="45:17" pos:end="45:112"><name pos:start="45:17" pos:end="45:29">decodeplane32</name><argument_list pos:start="45:30" pos:end="45:112">(<argument pos:start="45:31" pos:end="45:33"><expr pos:start="45:31" pos:end="45:33"><name pos:start="45:31" pos:end="45:33">row</name></expr></argument>, <argument pos:start="45:36" pos:end="45:38"><expr pos:start="45:36" pos:end="45:38"><name pos:start="45:36" pos:end="45:38">buf</name></expr></argument>, <argument pos:start="45:41" pos:end="45:74"><expr pos:start="45:41" pos:end="45:74"><call pos:start="45:41" pos:end="45:74"><name pos:start="45:41" pos:end="45:45">FFMIN</name><argument_list pos:start="45:46" pos:end="45:74">(<argument pos:start="45:47" pos:end="45:58"><expr pos:start="45:47" pos:end="45:58"><name pos:start="45:47" pos:end="45:58"><name pos:start="45:47" pos:end="45:47">s</name><operator pos:start="45:48" pos:end="45:49">-&gt;</operator><name pos:start="45:50" pos:end="45:58">planesize</name></name></expr></argument>, <argument pos:start="45:61" pos:end="45:73"><expr pos:start="45:61" pos:end="45:73"><name pos:start="45:61" pos:end="45:67">buf_end</name> <operator pos:start="45:69" pos:end="45:69">-</operator> <name pos:start="45:71" pos:end="45:73">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="45:77" pos:end="45:104"><expr pos:start="45:77" pos:end="45:104"><name pos:start="45:77" pos:end="45:104"><name pos:start="45:77" pos:end="45:81">avctx</name><operator pos:start="45:82" pos:end="45:83">-&gt;</operator><name pos:start="45:84" pos:end="45:104">bits_per_coded_sample</name></name></expr></argument>, <argument pos:start="45:107" pos:end="45:111"><expr pos:start="45:107" pos:end="45:111"><name pos:start="45:107" pos:end="45:111">plane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:32"><expr pos:start="49:13" pos:end="49:31"><name pos:start="49:13" pos:end="49:15">buf</name> <operator pos:start="49:17" pos:end="49:18">+=</operator> <name pos:start="49:20" pos:end="49:31"><name pos:start="49:20" pos:end="49:20">s</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:31">planesize</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="57:5" pos:end="57:33"><expr pos:start="57:5" pos:end="57:32"><operator pos:start="57:5" pos:end="57:5">*</operator><name pos:start="57:6" pos:end="57:14">data_size</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <sizeof pos:start="57:18" pos:end="57:32">sizeof<argument_list pos:start="57:24" pos:end="57:32">(<argument pos:start="57:25" pos:end="57:31"><expr pos:start="57:25" pos:end="57:31"><name pos:start="57:25" pos:end="57:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:31"><expr pos:start="59:5" pos:end="59:30"><operator pos:start="59:5" pos:end="59:5">*</operator><operator pos:start="59:6" pos:end="59:6">(</operator><name pos:start="59:7" pos:end="59:13">AVFrame</name><operator pos:start="59:14" pos:end="59:14">*</operator><operator pos:start="59:15" pos:end="59:15">)</operator><name pos:start="59:16" pos:end="59:19">data</name> <operator pos:start="59:21" pos:end="59:21">=</operator> <name pos:start="59:23" pos:end="59:30"><name pos:start="59:23" pos:end="59:23">s</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:30">frame</name></name></expr>;</expr_stmt>

    <return pos:start="61:5" pos:end="61:20">return <expr pos:start="61:12" pos:end="61:19"><name pos:start="61:12" pos:end="61:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
