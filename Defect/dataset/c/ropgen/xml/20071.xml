<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20071.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">uint32_t</name></type> <name pos:start="1:10" pos:end="1:28">helper_float_cvtw_s</name><parameter_list pos:start="1:29" pos:end="1:62">(<parameter pos:start="1:30" pos:end="1:46"><decl pos:start="1:30" pos:end="1:46"><type pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:41">CPUMIPSState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">env</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:56">uint32_t</name></type> <name pos:start="1:58" pos:end="1:61">fst0</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:15">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:16">wt2</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:61"><expr pos:start="9:5" pos:end="9:60"><name pos:start="9:5" pos:end="9:7">wt2</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <call pos:start="9:11" pos:end="9:60"><name pos:start="9:11" pos:end="9:26">float32_to_int32</name><argument_list pos:start="9:27" pos:end="9:60">(<argument pos:start="9:28" pos:end="9:31"><expr pos:start="9:28" pos:end="9:31"><name pos:start="9:28" pos:end="9:31">fst0</name></expr></argument>, <argument pos:start="9:34" pos:end="9:59"><expr pos:start="9:34" pos:end="9:59"><operator pos:start="9:34" pos:end="9:34">&amp;</operator><name pos:start="9:35" pos:end="9:59"><name pos:start="9:35" pos:end="9:37">env</name><operator pos:start="9:38" pos:end="9:39">-&gt;</operator><name pos:start="9:40" pos:end="9:49">active_fpu</name><operator pos:start="9:50" pos:end="9:50">.</operator><name pos:start="9:51" pos:end="9:59">fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:31"><expr pos:start="11:5" pos:end="11:30"><call pos:start="11:5" pos:end="11:30"><name pos:start="11:5" pos:end="11:16">update_fcr31</name><argument_list pos:start="11:17" pos:end="11:30">(<argument pos:start="11:18" pos:end="11:20"><expr pos:start="11:18" pos:end="11:20"><name pos:start="11:18" pos:end="11:20">env</name></expr></argument>, <argument pos:start="11:23" pos:end="11:29"><expr pos:start="11:23" pos:end="11:29"><call pos:start="11:23" pos:end="11:29"><name pos:start="11:23" pos:end="11:27">GETPC</name><argument_list pos:start="11:28" pos:end="11:29">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="15:53">(<expr pos:start="13:9" pos:end="15:52"><call pos:start="13:9" pos:end="13:61"><name pos:start="13:9" pos:end="13:33">get_float_exception_flags</name><argument_list pos:start="13:34" pos:end="13:61">(<argument pos:start="13:35" pos:end="13:60"><expr pos:start="13:35" pos:end="13:60"><operator pos:start="13:35" pos:end="13:35">&amp;</operator><name pos:start="13:36" pos:end="13:60"><name pos:start="13:36" pos:end="13:38">env</name><operator pos:start="13:39" pos:end="13:40">-&gt;</operator><name pos:start="13:41" pos:end="13:50">active_fpu</name><operator pos:start="13:51" pos:end="13:51">.</operator><name pos:start="13:52" pos:end="13:60">fp_status</name></name></expr></argument>)</argument_list></call>

        <operator pos:start="15:9" pos:end="15:9">&amp;</operator> <operator pos:start="15:11" pos:end="15:11">(</operator><name pos:start="15:12" pos:end="15:29">float_flag_invalid</name> <operator pos:start="15:31" pos:end="15:31">|</operator> <name pos:start="15:33" pos:end="15:51">float_flag_overflow</name><operator pos:start="15:52" pos:end="15:52">)</operator></expr>)</condition> <block pos:start="15:55" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:35">

        <expr_stmt pos:start="17:9" pos:end="17:35"><expr pos:start="17:9" pos:end="17:34"><name pos:start="17:9" pos:end="17:11">wt2</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:34">FP_TO_INT32_OVERFLOW</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="21:5" pos:end="21:15">return <expr pos:start="21:12" pos:end="21:14"><name pos:start="21:12" pos:end="21:14">wt2</name></expr>;</return>

</block_content>}</block></function>
</unit>
