<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14877.c" pos:tabs="8"><macro pos:start="1:1" pos:end="5:65"><name pos:start="1:1" pos:end="1:22">cpu_x86_dump_seg_cache</name><argument_list pos:start="1:23" pos:end="5:65">(<argument pos:start="1:24" pos:end="1:36">CPUState *env</argument>, <argument pos:start="1:39" pos:end="1:45">FILE *f</argument>,

                       <argument pos:start="3:24" pos:end="3:72">int (*cpu_fprintf)(FILE *f, const char *fmt, ...)</argument>,

                       <argument pos:start="5:24" pos:end="5:39">const char *name</argument>, <argument pos:start="5:42" pos:end="5:64">struct SegmentCache *sc</argument>)</argument_list></macro>

<block pos:start="7:1" pos:end="107:1">{<block_content pos:start="11:5" pos:end="105:25">

<cpp:ifdef pos:start="9:1" pos:end="9:20">#<cpp:directive pos:start="9:2" pos:end="9:6">ifdef</cpp:directive> <name pos:start="9:8" pos:end="9:20">TARGET_X86_64</name></cpp:ifdef>

    <if_stmt pos:start="11:5" pos:end="27:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:35">(<expr pos:start="11:9" pos:end="11:34"><name pos:start="11:9" pos:end="11:19"><name pos:start="11:9" pos:end="11:11">env</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:19">hflags</name></name> <operator pos:start="11:21" pos:end="11:21">&amp;</operator> <name pos:start="11:23" pos:end="11:34">HF_CS64_MASK</name></expr>)</condition> <block pos:start="11:37" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:66">

        <expr_stmt pos:start="13:9" pos:end="15:66"><expr pos:start="13:9" pos:end="15:65"><call pos:start="13:9" pos:end="15:65"><name pos:start="13:9" pos:end="13:19">cpu_fprintf</name><argument_list pos:start="13:20" pos:end="15:65">(<argument pos:start="13:21" pos:end="13:21"><expr pos:start="13:21" pos:end="13:21"><name pos:start="13:21" pos:end="13:21">f</name></expr></argument>, <argument pos:start="13:24" pos:end="13:59"><expr pos:start="13:24" pos:end="13:59"><literal type="string" pos:start="13:24" pos:end="13:39">"%-3s=%04x %016"</literal> <name pos:start="13:41" pos:end="13:46">PRIx64</name> <literal type="string" pos:start="13:48" pos:end="13:59">" %08x %08x"</literal></expr></argument>, <argument pos:start="13:62" pos:end="13:65"><expr pos:start="13:62" pos:end="13:65"><name pos:start="13:62" pos:end="13:65">name</name></expr></argument>,

                    <argument pos:start="15:21" pos:end="15:32"><expr pos:start="15:21" pos:end="15:32"><name pos:start="15:21" pos:end="15:32"><name pos:start="15:21" pos:end="15:22">sc</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:32">selector</name></name></expr></argument>, <argument pos:start="15:35" pos:end="15:42"><expr pos:start="15:35" pos:end="15:42"><name pos:start="15:35" pos:end="15:42"><name pos:start="15:35" pos:end="15:36">sc</name><operator pos:start="15:37" pos:end="15:38">-&gt;</operator><name pos:start="15:39" pos:end="15:42">base</name></name></expr></argument>, <argument pos:start="15:45" pos:end="15:53"><expr pos:start="15:45" pos:end="15:53"><name pos:start="15:45" pos:end="15:53"><name pos:start="15:45" pos:end="15:46">sc</name><operator pos:start="15:47" pos:end="15:48">-&gt;</operator><name pos:start="15:49" pos:end="15:53">limit</name></name></expr></argument>, <argument pos:start="15:56" pos:end="15:64"><expr pos:start="15:56" pos:end="15:64"><name pos:start="15:56" pos:end="15:64"><name pos:start="15:56" pos:end="15:57">sc</name><operator pos:start="15:58" pos:end="15:59">-&gt;</operator><name pos:start="15:60" pos:end="15:64">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="17:7" pos:end="27:5">else

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>

    <block pos:start="21:5" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:62">

        <expr_stmt pos:start="23:9" pos:end="25:62"><expr pos:start="23:9" pos:end="25:61"><call pos:start="23:9" pos:end="25:61"><name pos:start="23:9" pos:end="23:19">cpu_fprintf</name><argument_list pos:start="23:20" pos:end="25:61">(<argument pos:start="23:21" pos:end="23:21"><expr pos:start="23:21" pos:end="23:21"><name pos:start="23:21" pos:end="23:21">f</name></expr></argument>, <argument pos:start="23:24" pos:end="23:49"><expr pos:start="23:24" pos:end="23:49"><literal type="string" pos:start="23:24" pos:end="23:49">"%-3s=%04x %08x %08x %08x"</literal></expr></argument>, <argument pos:start="23:52" pos:end="23:55"><expr pos:start="23:52" pos:end="23:55"><name pos:start="23:52" pos:end="23:55">name</name></expr></argument>, <argument pos:start="23:58" pos:end="23:69"><expr pos:start="23:58" pos:end="23:69"><name pos:start="23:58" pos:end="23:69"><name pos:start="23:58" pos:end="23:59">sc</name><operator pos:start="23:60" pos:end="23:61">-&gt;</operator><name pos:start="23:62" pos:end="23:69">selector</name></name></expr></argument>,

                    <argument pos:start="25:21" pos:end="25:38"><expr pos:start="25:21" pos:end="25:38"><operator pos:start="25:21" pos:end="25:21">(</operator><name pos:start="25:22" pos:end="25:29">uint32_t</name><operator pos:start="25:30" pos:end="25:30">)</operator><name pos:start="25:31" pos:end="25:38"><name pos:start="25:31" pos:end="25:32">sc</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:38">base</name></name></expr></argument>, <argument pos:start="25:41" pos:end="25:49"><expr pos:start="25:41" pos:end="25:49"><name pos:start="25:41" pos:end="25:49"><name pos:start="25:41" pos:end="25:42">sc</name><operator pos:start="25:43" pos:end="25:44">-&gt;</operator><name pos:start="25:45" pos:end="25:49">limit</name></name></expr></argument>, <argument pos:start="25:52" pos:end="25:60"><expr pos:start="25:52" pos:end="25:60"><name pos:start="25:52" pos:end="25:60"><name pos:start="25:52" pos:end="25:53">sc</name><operator pos:start="25:54" pos:end="25:55">-&gt;</operator><name pos:start="25:56" pos:end="25:60">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="31:5" pos:end="33:18"><if pos:start="31:5" pos:end="33:18">if <condition pos:start="31:8" pos:end="31:66">(<expr pos:start="31:9" pos:end="31:65"><operator pos:start="31:9" pos:end="31:9">!</operator><operator pos:start="31:10" pos:end="31:10">(</operator><name pos:start="31:11" pos:end="31:21"><name pos:start="31:11" pos:end="31:13">env</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:21">hflags</name></name> <operator pos:start="31:23" pos:end="31:23">&amp;</operator> <name pos:start="31:25" pos:end="31:34">HF_PE_MASK</name><operator pos:start="31:35" pos:end="31:35">)</operator> <operator pos:start="31:37" pos:end="31:38">||</operator> <operator pos:start="31:40" pos:end="31:40">!</operator><operator pos:start="31:41" pos:end="31:41">(</operator><name pos:start="31:42" pos:end="31:50"><name pos:start="31:42" pos:end="31:43">sc</name><operator pos:start="31:44" pos:end="31:45">-&gt;</operator><name pos:start="31:46" pos:end="31:50">flags</name></name> <operator pos:start="31:52" pos:end="31:52">&amp;</operator> <name pos:start="31:54" pos:end="31:64">DESC_P_MASK</name><operator pos:start="31:65" pos:end="31:65">)</operator></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:18"><block_content pos:start="33:9" pos:end="33:18">

        <goto pos:start="33:9" pos:end="33:18">goto <name pos:start="33:14" pos:end="33:17">done</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:78"><expr pos:start="37:5" pos:end="37:77"><call pos:start="37:5" pos:end="37:77"><name pos:start="37:5" pos:end="37:15">cpu_fprintf</name><argument_list pos:start="37:16" pos:end="37:77">(<argument pos:start="37:17" pos:end="37:17"><expr pos:start="37:17" pos:end="37:17"><name pos:start="37:17" pos:end="37:17">f</name></expr></argument>, <argument pos:start="37:20" pos:end="37:29"><expr pos:start="37:20" pos:end="37:29"><literal type="string" pos:start="37:20" pos:end="37:29">" DPL=%d "</literal></expr></argument>, <argument pos:start="37:32" pos:end="37:76"><expr pos:start="37:32" pos:end="37:76"><operator pos:start="37:32" pos:end="37:32">(</operator><name pos:start="37:33" pos:end="37:41"><name pos:start="37:33" pos:end="37:34">sc</name><operator pos:start="37:35" pos:end="37:36">-&gt;</operator><name pos:start="37:37" pos:end="37:41">flags</name></name> <operator pos:start="37:43" pos:end="37:43">&amp;</operator> <name pos:start="37:45" pos:end="37:57">DESC_DPL_MASK</name><operator pos:start="37:58" pos:end="37:58">)</operator> <operator pos:start="37:60" pos:end="37:61">&gt;&gt;</operator> <name pos:start="37:63" pos:end="37:76">DESC_DPL_SHIFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="101:5"><if pos:start="39:5" pos:end="63:5">if <condition pos:start="39:8" pos:end="39:32">(<expr pos:start="39:9" pos:end="39:31"><name pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:10">sc</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:17">flags</name></name> <operator pos:start="39:19" pos:end="39:19">&amp;</operator> <name pos:start="39:21" pos:end="39:31">DESC_S_MASK</name></expr>)</condition> <block pos:start="39:34" pos:end="63:5">{<block_content pos:start="41:9" pos:end="61:69">

        <if_stmt pos:start="41:9" pos:end="59:9"><if pos:start="41:9" pos:end="51:9">if <condition pos:start="41:12" pos:end="41:37">(<expr pos:start="41:13" pos:end="41:36"><name pos:start="41:13" pos:end="41:21"><name pos:start="41:13" pos:end="41:14">sc</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:21">flags</name></name> <operator pos:start="41:23" pos:end="41:23">&amp;</operator> <name pos:start="41:25" pos:end="41:36">DESC_CS_MASK</name></expr>)</condition> <block pos:start="41:39" pos:end="51:9">{<block_content pos:start="43:13" pos:end="49:63">

            <expr_stmt pos:start="43:13" pos:end="45:74"><expr pos:start="43:13" pos:end="45:73"><call pos:start="43:13" pos:end="45:73"><name pos:start="43:13" pos:end="43:23">cpu_fprintf</name><argument_list pos:start="43:24" pos:end="45:73">(<argument pos:start="43:25" pos:end="43:25"><expr pos:start="43:25" pos:end="43:25"><name pos:start="43:25" pos:end="43:25">f</name></expr></argument>, <argument pos:start="43:28" pos:end="45:72"><expr pos:start="43:28" pos:end="45:72"><ternary pos:start="43:28" pos:end="45:72"><condition pos:start="43:28" pos:end="43:54"><expr pos:start="43:28" pos:end="43:52"><operator pos:start="43:28" pos:end="43:28">(</operator><name pos:start="43:29" pos:end="43:37"><name pos:start="43:29" pos:end="43:30">sc</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:37">flags</name></name> <operator pos:start="43:39" pos:end="43:39">&amp;</operator> <name pos:start="43:41" pos:end="43:51">DESC_L_MASK</name><operator pos:start="43:52" pos:end="43:52">)</operator></expr> ?</condition><then pos:start="43:56" pos:end="43:61"> <expr pos:start="43:56" pos:end="43:61"><literal type="string" pos:start="43:56" pos:end="43:61">"CS64"</literal></expr> </then><else pos:start="43:63" pos:end="45:72">:

                           <expr pos:start="45:28" pos:end="45:72"><operator pos:start="45:28" pos:end="45:28">(</operator><ternary pos:start="45:29" pos:end="45:71"><condition pos:start="45:29" pos:end="45:55"><expr pos:start="45:29" pos:end="45:53"><operator pos:start="45:29" pos:end="45:29">(</operator><name pos:start="45:30" pos:end="45:38"><name pos:start="45:30" pos:end="45:31">sc</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:38">flags</name></name> <operator pos:start="45:40" pos:end="45:40">&amp;</operator> <name pos:start="45:42" pos:end="45:52">DESC_B_MASK</name><operator pos:start="45:53" pos:end="45:53">)</operator></expr> ?</condition><then pos:start="45:57" pos:end="45:62"> <expr pos:start="45:57" pos:end="45:62"><literal type="string" pos:start="45:57" pos:end="45:62">"CS32"</literal></expr> </then><else pos:start="45:64" pos:end="45:71">: <expr pos:start="45:66" pos:end="45:71"><literal type="string" pos:start="45:66" pos:end="45:71">"CS16"</literal></expr></else></ternary><operator pos:start="45:72" pos:end="45:72">)</operator></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="49:63"><expr pos:start="47:13" pos:end="49:62"><call pos:start="47:13" pos:end="49:62"><name pos:start="47:13" pos:end="47:23">cpu_fprintf</name><argument_list pos:start="47:24" pos:end="49:62">(<argument pos:start="47:25" pos:end="47:25"><expr pos:start="47:25" pos:end="47:25"><name pos:start="47:25" pos:end="47:25">f</name></expr></argument>, <argument pos:start="47:28" pos:end="47:35"><expr pos:start="47:28" pos:end="47:35"><literal type="string" pos:start="47:28" pos:end="47:35">" [%c%c"</literal></expr></argument>, <argument pos:start="47:38" pos:end="47:74"><expr pos:start="47:38" pos:end="47:74"><ternary pos:start="47:38" pos:end="47:74"><condition pos:start="47:38" pos:end="47:64"><expr pos:start="47:38" pos:end="47:62"><operator pos:start="47:38" pos:end="47:38">(</operator><name pos:start="47:39" pos:end="47:47"><name pos:start="47:39" pos:end="47:40">sc</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:47">flags</name></name> <operator pos:start="47:49" pos:end="47:49">&amp;</operator> <name pos:start="47:51" pos:end="47:61">DESC_C_MASK</name><operator pos:start="47:62" pos:end="47:62">)</operator></expr> ?</condition><then pos:start="47:66" pos:end="47:68"> <expr pos:start="47:66" pos:end="47:68"><literal type="char" pos:start="47:66" pos:end="47:68">'C'</literal></expr> </then><else pos:start="47:70" pos:end="47:74">: <expr pos:start="47:72" pos:end="47:74"><literal type="char" pos:start="47:72" pos:end="47:74">'-'</literal></expr></else></ternary></expr></argument>,

                        <argument pos:start="49:25" pos:end="49:61"><expr pos:start="49:25" pos:end="49:61"><ternary pos:start="49:25" pos:end="49:61"><condition pos:start="49:25" pos:end="49:51"><expr pos:start="49:25" pos:end="49:49"><operator pos:start="49:25" pos:end="49:25">(</operator><name pos:start="49:26" pos:end="49:34"><name pos:start="49:26" pos:end="49:27">sc</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:34">flags</name></name> <operator pos:start="49:36" pos:end="49:36">&amp;</operator> <name pos:start="49:38" pos:end="49:48">DESC_R_MASK</name><operator pos:start="49:49" pos:end="49:49">)</operator></expr> ?</condition><then pos:start="49:53" pos:end="49:55"> <expr pos:start="49:53" pos:end="49:55"><literal type="char" pos:start="49:53" pos:end="49:55">'R'</literal></expr> </then><else pos:start="49:57" pos:end="49:61">: <expr pos:start="49:59" pos:end="49:61"><literal type="char" pos:start="49:59" pos:end="49:61">'-'</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="51:11" pos:end="59:9">else <block pos:start="51:16" pos:end="59:9">{<block_content pos:start="53:13" pos:end="57:63">

            <expr_stmt pos:start="53:13" pos:end="53:72"><expr pos:start="53:13" pos:end="53:71"><call pos:start="53:13" pos:end="53:71"><name pos:start="53:13" pos:end="53:23">cpu_fprintf</name><argument_list pos:start="53:24" pos:end="53:71">(<argument pos:start="53:25" pos:end="53:25"><expr pos:start="53:25" pos:end="53:25"><name pos:start="53:25" pos:end="53:25">f</name></expr></argument>, <argument pos:start="53:28" pos:end="53:70"><expr pos:start="53:28" pos:end="53:70"><ternary pos:start="53:28" pos:end="53:70"><condition pos:start="53:28" pos:end="53:54"><expr pos:start="53:28" pos:end="53:52"><operator pos:start="53:28" pos:end="53:28">(</operator><name pos:start="53:29" pos:end="53:37"><name pos:start="53:29" pos:end="53:30">sc</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:37">flags</name></name> <operator pos:start="53:39" pos:end="53:39">&amp;</operator> <name pos:start="53:41" pos:end="53:51">DESC_B_MASK</name><operator pos:start="53:52" pos:end="53:52">)</operator></expr> ?</condition><then pos:start="53:56" pos:end="53:61"> <expr pos:start="53:56" pos:end="53:61"><literal type="string" pos:start="53:56" pos:end="53:61">"DS  "</literal></expr> </then><else pos:start="53:63" pos:end="53:70">: <expr pos:start="53:65" pos:end="53:70"><literal type="string" pos:start="53:65" pos:end="53:70">"DS16"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="57:63"><expr pos:start="55:13" pos:end="57:62"><call pos:start="55:13" pos:end="57:62"><name pos:start="55:13" pos:end="55:23">cpu_fprintf</name><argument_list pos:start="55:24" pos:end="57:62">(<argument pos:start="55:25" pos:end="55:25"><expr pos:start="55:25" pos:end="55:25"><name pos:start="55:25" pos:end="55:25">f</name></expr></argument>, <argument pos:start="55:28" pos:end="55:35"><expr pos:start="55:28" pos:end="55:35"><literal type="string" pos:start="55:28" pos:end="55:35">" [%c%c"</literal></expr></argument>, <argument pos:start="55:38" pos:end="55:74"><expr pos:start="55:38" pos:end="55:74"><ternary pos:start="55:38" pos:end="55:74"><condition pos:start="55:38" pos:end="55:64"><expr pos:start="55:38" pos:end="55:62"><operator pos:start="55:38" pos:end="55:38">(</operator><name pos:start="55:39" pos:end="55:47"><name pos:start="55:39" pos:end="55:40">sc</name><operator pos:start="55:41" pos:end="55:42">-&gt;</operator><name pos:start="55:43" pos:end="55:47">flags</name></name> <operator pos:start="55:49" pos:end="55:49">&amp;</operator> <name pos:start="55:51" pos:end="55:61">DESC_E_MASK</name><operator pos:start="55:62" pos:end="55:62">)</operator></expr> ?</condition><then pos:start="55:66" pos:end="55:68"> <expr pos:start="55:66" pos:end="55:68"><literal type="char" pos:start="55:66" pos:end="55:68">'E'</literal></expr> </then><else pos:start="55:70" pos:end="55:74">: <expr pos:start="55:72" pos:end="55:74"><literal type="char" pos:start="55:72" pos:end="55:74">'-'</literal></expr></else></ternary></expr></argument>,

                        <argument pos:start="57:25" pos:end="57:61"><expr pos:start="57:25" pos:end="57:61"><ternary pos:start="57:25" pos:end="57:61"><condition pos:start="57:25" pos:end="57:51"><expr pos:start="57:25" pos:end="57:49"><operator pos:start="57:25" pos:end="57:25">(</operator><name pos:start="57:26" pos:end="57:34"><name pos:start="57:26" pos:end="57:27">sc</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:34">flags</name></name> <operator pos:start="57:36" pos:end="57:36">&amp;</operator> <name pos:start="57:38" pos:end="57:48">DESC_W_MASK</name><operator pos:start="57:49" pos:end="57:49">)</operator></expr> ?</condition><then pos:start="57:53" pos:end="57:55"> <expr pos:start="57:53" pos:end="57:55"><literal type="char" pos:start="57:53" pos:end="57:55">'W'</literal></expr> </then><else pos:start="57:57" pos:end="57:61">: <expr pos:start="57:59" pos:end="57:61"><literal type="char" pos:start="57:59" pos:end="57:61">'-'</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:69"><expr pos:start="61:9" pos:end="61:68"><call pos:start="61:9" pos:end="61:68"><name pos:start="61:9" pos:end="61:19">cpu_fprintf</name><argument_list pos:start="61:20" pos:end="61:68">(<argument pos:start="61:21" pos:end="61:21"><expr pos:start="61:21" pos:end="61:21"><name pos:start="61:21" pos:end="61:21">f</name></expr></argument>, <argument pos:start="61:24" pos:end="61:28"><expr pos:start="61:24" pos:end="61:28"><literal type="string" pos:start="61:24" pos:end="61:28">"%c]"</literal></expr></argument>, <argument pos:start="61:31" pos:end="61:67"><expr pos:start="61:31" pos:end="61:67"><ternary pos:start="61:31" pos:end="61:67"><condition pos:start="61:31" pos:end="61:57"><expr pos:start="61:31" pos:end="61:55"><operator pos:start="61:31" pos:end="61:31">(</operator><name pos:start="61:32" pos:end="61:40"><name pos:start="61:32" pos:end="61:33">sc</name><operator pos:start="61:34" pos:end="61:35">-&gt;</operator><name pos:start="61:36" pos:end="61:40">flags</name></name> <operator pos:start="61:42" pos:end="61:42">&amp;</operator> <name pos:start="61:44" pos:end="61:54">DESC_A_MASK</name><operator pos:start="61:55" pos:end="61:55">)</operator></expr> ?</condition><then pos:start="61:59" pos:end="61:61"> <expr pos:start="61:59" pos:end="61:61"><literal type="char" pos:start="61:59" pos:end="61:61">'A'</literal></expr> </then><else pos:start="61:63" pos:end="61:67">: <expr pos:start="61:65" pos:end="61:67"><literal type="char" pos:start="61:65" pos:end="61:67">'-'</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="63:7" pos:end="101:5">else <block pos:start="63:12" pos:end="101:5">{<block_content pos:start="65:9" pos:end="99:55">

        <decl_stmt pos:start="65:9" pos:end="91:10"><decl pos:start="65:9" pos:end="91:9"><type pos:start="65:9" pos:end="65:27"><specifier pos:start="65:9" pos:end="65:14">static</specifier> <specifier pos:start="65:16" pos:end="65:20">const</specifier> <name pos:start="65:22" pos:end="65:25">char</name> <modifier pos:start="65:27" pos:end="65:27">*</modifier></type><name pos:start="65:28" pos:end="65:47"><name pos:start="65:28" pos:end="65:40">sys_type_name</name><index pos:start="65:41" pos:end="65:43">[<expr pos:start="65:42" pos:end="65:42"><literal type="number" pos:start="65:42" pos:end="65:42">2</literal></expr>]</index><index pos:start="65:44" pos:end="65:47">[<expr pos:start="65:45" pos:end="65:46"><literal type="number" pos:start="65:45" pos:end="65:46">16</literal></expr>]</index></name> <init pos:start="65:49" pos:end="91:9">= <expr pos:start="65:51" pos:end="91:9"><block pos:start="65:51" pos:end="91:9">{

            <expr pos:start="67:13" pos:end="77:13"><block pos:start="67:13" pos:end="77:13">{ <comment type="block" pos:start="67:15" pos:end="67:31">/* 32 bit mode */</comment>

                <expr pos:start="69:17" pos:end="69:26"><literal type="string" pos:start="69:17" pos:end="69:26">"Reserved"</literal></expr>, <expr pos:start="69:29" pos:end="69:39"><literal type="string" pos:start="69:29" pos:end="69:39">"TSS16-avl"</literal></expr>, <expr pos:start="69:42" pos:end="69:46"><literal type="string" pos:start="69:42" pos:end="69:46">"LDT"</literal></expr>, <expr pos:start="69:49" pos:end="69:60"><literal type="string" pos:start="69:49" pos:end="69:60">"TSS16-busy"</literal></expr>,

                <expr pos:start="71:17" pos:end="71:28"><literal type="string" pos:start="71:17" pos:end="71:28">"CallGate16"</literal></expr>, <expr pos:start="71:31" pos:end="71:40"><literal type="string" pos:start="71:31" pos:end="71:40">"TaskGate"</literal></expr>, <expr pos:start="71:43" pos:end="71:53"><literal type="string" pos:start="71:43" pos:end="71:53">"IntGate16"</literal></expr>, <expr pos:start="71:56" pos:end="71:67"><literal type="string" pos:start="71:56" pos:end="71:67">"TrapGate16"</literal></expr>,

                <expr pos:start="73:17" pos:end="73:26"><literal type="string" pos:start="73:17" pos:end="73:26">"Reserved"</literal></expr>, <expr pos:start="73:29" pos:end="73:39"><literal type="string" pos:start="73:29" pos:end="73:39">"TSS32-avl"</literal></expr>, <expr pos:start="73:42" pos:end="73:51"><literal type="string" pos:start="73:42" pos:end="73:51">"Reserved"</literal></expr>, <expr pos:start="73:54" pos:end="73:65"><literal type="string" pos:start="73:54" pos:end="73:65">"TSS32-busy"</literal></expr>,

                <expr pos:start="75:17" pos:end="75:28"><literal type="string" pos:start="75:17" pos:end="75:28">"CallGate32"</literal></expr>, <expr pos:start="75:31" pos:end="75:40"><literal type="string" pos:start="75:31" pos:end="75:40">"Reserved"</literal></expr>, <expr pos:start="75:43" pos:end="75:53"><literal type="string" pos:start="75:43" pos:end="75:53">"IntGate32"</literal></expr>, <expr pos:start="75:56" pos:end="75:67"><literal type="string" pos:start="75:56" pos:end="75:67">"TrapGate32"</literal></expr>

            }</block></expr>,

            <expr pos:start="79:13" pos:end="89:13"><block pos:start="79:13" pos:end="89:13">{ <comment type="block" pos:start="79:15" pos:end="79:31">/* 64 bit mode */</comment>

                <expr pos:start="81:17" pos:end="81:26"><literal type="string" pos:start="81:17" pos:end="81:26">"&lt;hiword&gt;"</literal></expr>, <expr pos:start="81:29" pos:end="81:38"><literal type="string" pos:start="81:29" pos:end="81:38">"Reserved"</literal></expr>, <expr pos:start="81:41" pos:end="81:45"><literal type="string" pos:start="81:41" pos:end="81:45">"LDT"</literal></expr>, <expr pos:start="81:48" pos:end="81:57"><literal type="string" pos:start="81:48" pos:end="81:57">"Reserved"</literal></expr>, <expr pos:start="81:60" pos:end="81:69"><literal type="string" pos:start="81:60" pos:end="81:69">"Reserved"</literal></expr>,

                <expr pos:start="83:17" pos:end="83:26"><literal type="string" pos:start="83:17" pos:end="83:26">"Reserved"</literal></expr>, <expr pos:start="83:29" pos:end="83:38"><literal type="string" pos:start="83:29" pos:end="83:38">"Reserved"</literal></expr>, <expr pos:start="83:41" pos:end="83:50"><literal type="string" pos:start="83:41" pos:end="83:50">"Reserved"</literal></expr>, <expr pos:start="83:53" pos:end="83:62"><literal type="string" pos:start="83:53" pos:end="83:62">"Reserved"</literal></expr>,

                <expr pos:start="85:17" pos:end="85:27"><literal type="string" pos:start="85:17" pos:end="85:27">"TSS64-avl"</literal></expr>, <expr pos:start="85:30" pos:end="85:39"><literal type="string" pos:start="85:30" pos:end="85:39">"Reserved"</literal></expr>, <expr pos:start="85:42" pos:end="85:53"><literal type="string" pos:start="85:42" pos:end="85:53">"TSS64-busy"</literal></expr>, <expr pos:start="85:56" pos:end="85:67"><literal type="string" pos:start="85:56" pos:end="85:67">"CallGate64"</literal></expr>,

                <expr pos:start="87:17" pos:end="87:26"><literal type="string" pos:start="87:17" pos:end="87:26">"Reserved"</literal></expr>, <expr pos:start="87:29" pos:end="87:39"><literal type="string" pos:start="87:29" pos:end="87:39">"IntGate64"</literal></expr>, <expr pos:start="87:42" pos:end="87:53"><literal type="string" pos:start="87:42" pos:end="87:53">"TrapGate64"</literal></expr>

            }</block></expr>

        }</block></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="93:9" pos:end="99:55"><expr pos:start="93:9" pos:end="99:54"><call pos:start="93:9" pos:end="99:54"><name pos:start="93:9" pos:end="93:19">cpu_fprintf</name><argument_list pos:start="93:20" pos:end="99:54">(<argument pos:start="93:21" pos:end="93:21"><expr pos:start="93:21" pos:end="93:21"><name pos:start="93:21" pos:end="93:21">f</name></expr></argument>, <argument pos:start="93:24" pos:end="93:27"><expr pos:start="93:24" pos:end="93:27"><literal type="string" pos:start="93:24" pos:end="93:27">"%s"</literal></expr></argument>,

                    <argument pos:start="95:21" pos:end="99:53"><expr pos:start="95:21" pos:end="99:53"><name pos:start="95:21" pos:end="99:53"><name pos:start="95:21" pos:end="95:33">sys_type_name</name><index pos:start="95:34" pos:end="95:70">[<expr pos:start="95:35" pos:end="95:69"><ternary pos:start="95:35" pos:end="95:69"><condition pos:start="95:35" pos:end="95:63"><expr pos:start="95:35" pos:end="95:61"><operator pos:start="95:35" pos:end="95:35">(</operator><name pos:start="95:36" pos:end="95:46"><name pos:start="95:36" pos:end="95:38">env</name><operator pos:start="95:39" pos:end="95:40">-&gt;</operator><name pos:start="95:41" pos:end="95:46">hflags</name></name> <operator pos:start="95:48" pos:end="95:48">&amp;</operator> <name pos:start="95:50" pos:end="95:60">HF_LMA_MASK</name><operator pos:start="95:61" pos:end="95:61">)</operator></expr> ?</condition><then pos:start="95:65" pos:end="95:65"> <expr pos:start="95:65" pos:end="95:65"><literal type="number" pos:start="95:65" pos:end="95:65">1</literal></expr> </then><else pos:start="95:67" pos:end="95:69">: <expr pos:start="95:69" pos:end="95:69"><literal type="number" pos:start="95:69" pos:end="95:69">0</literal></expr></else></ternary></expr>]</index>

                                 <index pos:start="97:34" pos:end="99:53">[<expr pos:start="97:35" pos:end="99:52"><operator pos:start="97:35" pos:end="97:35">(</operator><name pos:start="97:36" pos:end="97:44"><name pos:start="97:36" pos:end="97:37">sc</name><operator pos:start="97:38" pos:end="97:39">-&gt;</operator><name pos:start="97:40" pos:end="97:44">flags</name></name> <operator pos:start="97:46" pos:end="97:46">&amp;</operator> <name pos:start="97:48" pos:end="97:61">DESC_TYPE_MASK</name><operator pos:start="97:62" pos:end="97:62">)</operator>

                                  <operator pos:start="99:35" pos:end="99:36">&gt;&gt;</operator> <name pos:start="99:38" pos:end="99:52">DESC_TYPE_SHIFT</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

<label pos:start="103:1" pos:end="103:5"><name pos:start="103:1" pos:end="103:4">done</name>:</label>

    <expr_stmt pos:start="105:5" pos:end="105:25"><expr pos:start="105:5" pos:end="105:24"><call pos:start="105:5" pos:end="105:24"><name pos:start="105:5" pos:end="105:15">cpu_fprintf</name><argument_list pos:start="105:16" pos:end="105:24">(<argument pos:start="105:17" pos:end="105:17"><expr pos:start="105:17" pos:end="105:17"><name pos:start="105:17" pos:end="105:17">f</name></expr></argument>, <argument pos:start="105:20" pos:end="105:23"><expr pos:start="105:20" pos:end="105:23"><literal type="string" pos:start="105:20" pos:end="105:23">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
