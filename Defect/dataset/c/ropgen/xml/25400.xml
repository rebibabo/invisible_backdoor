<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25400.c" pos:tabs="8"><function pos:start="1:1" pos:end="253:15"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:34">rl2_read_header</name><parameter_list pos:start="1:35" pos:end="1:54">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:52"><name pos:start="1:36" pos:end="1:50">AVFormatContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="253:15">{<block_content pos:start="5:5" pos:end="253:15">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:28">frame_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:40"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:36">audio_frame_counter</name> <init pos:start="11:38" pos:end="11:40">= <expr pos:start="11:40" pos:end="11:40"><literal type="number" pos:start="11:40" pos:end="11:40">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:41"><decl pos:start="13:5" pos:end="13:40"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:36">video_frame_counter</name> <init pos:start="13:38" pos:end="13:40">= <expr pos:start="13:40" pos:end="13:40"><literal type="number" pos:start="13:40" pos:end="13:40">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:26">back_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:30"><decl pos:start="17:5" pos:end="17:29"><type pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:18">short</name></type> <name pos:start="17:20" pos:end="17:29">sound_rate</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:12">unsigned</name> <name pos:start="19:14" pos:end="19:18">short</name></type> <name pos:start="19:20" pos:end="19:23">rate</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:28"><decl pos:start="21:5" pos:end="21:27"><type pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:12">unsigned</name> <name pos:start="21:14" pos:end="21:18">short</name></type> <name pos:start="21:20" pos:end="21:27">channels</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:34"><decl pos:start="23:5" pos:end="23:33"><type pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:12">unsigned</name> <name pos:start="23:14" pos:end="23:18">short</name></type> <name pos:start="23:20" pos:end="23:33">def_sound_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:27"><decl pos:start="25:5" pos:end="25:26"><type pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:12">unsigned</name> <name pos:start="25:14" pos:end="25:16">int</name></type> <name pos:start="25:18" pos:end="25:26">signature</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:33"><decl pos:start="27:5" pos:end="27:32"><type pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:12">unsigned</name> <name pos:start="27:14" pos:end="27:16">int</name></type> <name pos:start="27:18" pos:end="27:24">pts_den</name> <init pos:start="27:26" pos:end="27:32">= <expr pos:start="27:28" pos:end="27:32"><literal type="number" pos:start="27:28" pos:end="27:32">11025</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="27:35" pos:end="27:55">/* video only case */</comment>

    <decl_stmt pos:start="29:5" pos:end="29:32"><decl pos:start="29:5" pos:end="29:31"><type pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:12">unsigned</name> <name pos:start="29:14" pos:end="29:16">int</name></type> <name pos:start="29:18" pos:end="29:24">pts_num</name> <init pos:start="29:26" pos:end="29:31">= <expr pos:start="29:28" pos:end="29:31"><literal type="number" pos:start="29:28" pos:end="29:31">1103</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:38"><decl pos:start="31:5" pos:end="31:37"><type pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:12">unsigned</name> <name pos:start="31:14" pos:end="31:16">int</name><modifier pos:start="31:17" pos:end="31:17">*</modifier></type> <name pos:start="31:19" pos:end="31:30">chunk_offset</name> <init pos:start="31:32" pos:end="31:37">= <expr pos:start="31:34" pos:end="31:37"><name pos:start="31:34" pos:end="31:37">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:27"><decl pos:start="33:5" pos:end="33:26"><type pos:start="33:5" pos:end="33:8"><name pos:start="33:5" pos:end="33:7">int</name><modifier pos:start="33:8" pos:end="33:8">*</modifier></type> <name pos:start="33:10" pos:end="33:19">chunk_size</name> <init pos:start="33:21" pos:end="33:26">= <expr pos:start="33:23" pos:end="33:26"><name pos:start="33:23" pos:end="33:26">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:27"><decl pos:start="35:5" pos:end="35:26"><type pos:start="35:5" pos:end="35:8"><name pos:start="35:5" pos:end="35:7">int</name><modifier pos:start="35:8" pos:end="35:8">*</modifier></type> <name pos:start="35:10" pos:end="35:19">audio_size</name> <init pos:start="35:21" pos:end="35:26">= <expr pos:start="35:23" pos:end="35:26"><name pos:start="35:23" pos:end="35:26">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:10"><decl pos:start="37:5" pos:end="37:9"><type pos:start="37:5" pos:end="37:7"><name pos:start="37:5" pos:end="37:7">int</name></type> <name pos:start="37:9" pos:end="37:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:16"><decl pos:start="39:5" pos:end="39:15"><type pos:start="39:5" pos:end="39:7"><name pos:start="39:5" pos:end="39:7">int</name></type> <name pos:start="39:9" pos:end="39:11">ret</name> <init pos:start="39:13" pos:end="39:15">= <expr pos:start="39:15" pos:end="39:15"><literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:20"><expr pos:start="43:5" pos:end="43:19"><call pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:13">avio_skip</name><argument_list pos:start="43:14" pos:end="43:19">(<argument pos:start="43:15" pos:end="43:16"><expr pos:start="43:15" pos:end="43:16"><name pos:start="43:15" pos:end="43:16">pb</name></expr></argument>,<argument pos:start="43:18" pos:end="43:18"><expr pos:start="43:18" pos:end="43:18"><literal type="number" pos:start="43:18" pos:end="43:18">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>          <comment type="block" pos:start="43:31" pos:end="43:49">/* skip FORM tag */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:30"><expr pos:start="45:5" pos:end="45:29"><name pos:start="45:5" pos:end="45:13">back_size</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <call pos:start="45:17" pos:end="45:29"><name pos:start="45:17" pos:end="45:25">avio_rl32</name><argument_list pos:start="45:26" pos:end="45:29">(<argument pos:start="45:27" pos:end="45:28"><expr pos:start="45:27" pos:end="45:28"><name pos:start="45:27" pos:end="45:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" format="doxygen" pos:start="45:32" pos:end="45:71">/**&lt; get size of the background frame */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:30"><expr pos:start="47:5" pos:end="47:29"><name pos:start="47:5" pos:end="47:13">signature</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <call pos:start="47:17" pos:end="47:29"><name pos:start="47:17" pos:end="47:25">avio_rb32</name><argument_list pos:start="47:26" pos:end="47:29">(<argument pos:start="47:27" pos:end="47:28"><expr pos:start="47:27" pos:end="47:28"><name pos:start="47:27" pos:end="47:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:21"><expr pos:start="49:5" pos:end="49:20"><call pos:start="49:5" pos:end="49:20"><name pos:start="49:5" pos:end="49:13">avio_skip</name><argument_list pos:start="49:14" pos:end="49:20">(<argument pos:start="49:15" pos:end="49:16"><expr pos:start="49:15" pos:end="49:16"><name pos:start="49:15" pos:end="49:16">pb</name></expr></argument>, <argument pos:start="49:19" pos:end="49:19"><expr pos:start="49:19" pos:end="49:19"><literal type="number" pos:start="49:19" pos:end="49:19">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>         <comment type="block" pos:start="49:31" pos:end="49:45">/* data size */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:32"><expr pos:start="51:5" pos:end="51:31"><name pos:start="51:5" pos:end="51:15">frame_count</name> <operator pos:start="51:17" pos:end="51:17">=</operator> <call pos:start="51:19" pos:end="51:31"><name pos:start="51:19" pos:end="51:27">avio_rl32</name><argument_list pos:start="51:28" pos:end="51:31">(<argument pos:start="51:29" pos:end="51:30"><expr pos:start="51:29" pos:end="51:30"><name pos:start="51:29" pos:end="51:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:79">/* disallow back_sizes and frame_counts that may lead to overflows later */</comment>

    <if_stmt pos:start="57:5" pos:end="62:21"><if pos:start="57:5" pos:end="62:21">if<condition pos:start="57:7" pos:end="57:74">(<expr pos:start="57:8" pos:end="57:73"><name pos:start="57:8" pos:end="57:16">back_size</name> <operator pos:start="57:18" pos:end="57:18">&gt;</operator> <name pos:start="57:20" pos:end="57:26">INT_MAX</name><operator pos:start="57:27" pos:end="57:27">/</operator><literal type="number" pos:start="57:28" pos:end="57:28">2</literal>  <operator pos:start="57:31" pos:end="57:32">||</operator> <name pos:start="57:34" pos:end="57:44">frame_count</name> <operator pos:start="57:46" pos:end="57:46">&gt;</operator> <name pos:start="57:48" pos:end="57:54">INT_MAX</name> <operator pos:start="57:56" pos:end="57:56">/</operator> <sizeof pos:start="57:58" pos:end="57:73">sizeof<argument_list pos:start="57:64" pos:end="57:73">(<argument pos:start="57:65" pos:end="57:72"><expr pos:start="57:65" pos:end="57:72"><name pos:start="57:65" pos:end="57:72">uint32_t</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="62:5" pos:end="62:21"><block_content pos:start="62:5" pos:end="62:21">




    <expr_stmt pos:start="62:5" pos:end="62:21"><expr pos:start="62:5" pos:end="62:20"><call pos:start="62:5" pos:end="62:20"><name pos:start="62:5" pos:end="62:13">avio_skip</name><argument_list pos:start="62:14" pos:end="62:20">(<argument pos:start="62:15" pos:end="62:16"><expr pos:start="62:15" pos:end="62:16"><name pos:start="62:15" pos:end="62:16">pb</name></expr></argument>, <argument pos:start="62:19" pos:end="62:19"><expr pos:start="62:19" pos:end="62:19"><literal type="number" pos:start="62:19" pos:end="62:19">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>         <comment type="block" pos:start="62:31" pos:end="62:51">/* encoding mentod */</comment>

    <expr_stmt pos:start="64:5" pos:end="64:31"><expr pos:start="64:5" pos:end="64:30"><name pos:start="64:5" pos:end="64:14">sound_rate</name> <operator pos:start="64:16" pos:end="64:16">=</operator> <call pos:start="64:18" pos:end="64:30"><name pos:start="64:18" pos:end="64:26">avio_rl16</name><argument_list pos:start="64:27" pos:end="64:30">(<argument pos:start="64:28" pos:end="64:29"><expr pos:start="64:28" pos:end="64:29"><name pos:start="64:28" pos:end="64:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="66:5" pos:end="66:25"><expr pos:start="66:5" pos:end="66:24"><name pos:start="66:5" pos:end="66:8">rate</name> <operator pos:start="66:10" pos:end="66:10">=</operator> <call pos:start="66:12" pos:end="66:24"><name pos:start="66:12" pos:end="66:20">avio_rl16</name><argument_list pos:start="66:21" pos:end="66:24">(<argument pos:start="66:22" pos:end="66:23"><expr pos:start="66:22" pos:end="66:23"><name pos:start="66:22" pos:end="66:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="68:5" pos:end="68:29"><expr pos:start="68:5" pos:end="68:28"><name pos:start="68:5" pos:end="68:12">channels</name> <operator pos:start="68:14" pos:end="68:14">=</operator> <call pos:start="68:16" pos:end="68:28"><name pos:start="68:16" pos:end="68:24">avio_rl16</name><argument_list pos:start="68:25" pos:end="68:28">(<argument pos:start="68:26" pos:end="68:27"><expr pos:start="68:26" pos:end="68:27"><name pos:start="68:26" pos:end="68:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="70:5" pos:end="70:35"><expr pos:start="70:5" pos:end="70:34"><name pos:start="70:5" pos:end="70:18">def_sound_size</name> <operator pos:start="70:20" pos:end="70:20">=</operator> <call pos:start="70:22" pos:end="70:34"><name pos:start="70:22" pos:end="70:30">avio_rl16</name><argument_list pos:start="70:31" pos:end="70:34">(<argument pos:start="70:32" pos:end="70:33"><expr pos:start="70:32" pos:end="70:33"><name pos:start="70:32" pos:end="70:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>







    <comment type="block" format="doxygen" pos:start="78:5" pos:end="78:29">/** setup video stream */</comment>

    <expr_stmt pos:start="80:5" pos:end="80:38"><expr pos:start="80:5" pos:end="80:37"><name pos:start="80:5" pos:end="80:6">st</name> <operator pos:start="80:8" pos:end="80:8">=</operator> <call pos:start="80:10" pos:end="80:37"><name pos:start="80:10" pos:end="80:28">avformat_new_stream</name><argument_list pos:start="80:29" pos:end="80:37">(<argument pos:start="80:30" pos:end="80:30"><expr pos:start="80:30" pos:end="80:30"><name pos:start="80:30" pos:end="80:30">s</name></expr></argument>, <argument pos:start="80:33" pos:end="80:36"><expr pos:start="80:33" pos:end="80:36"><name pos:start="80:33" pos:end="80:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="82:5" pos:end="84:32"><if pos:start="82:5" pos:end="84:32">if<condition pos:start="82:7" pos:end="82:11">(<expr pos:start="82:8" pos:end="82:10"><operator pos:start="82:8" pos:end="82:8">!</operator><name pos:start="82:9" pos:end="82:10">st</name></expr>)</condition><block type="pseudo" pos:start="84:10" pos:end="84:32"><block_content pos:start="84:10" pos:end="84:32">

         <return pos:start="84:10" pos:end="84:32">return <expr pos:start="84:17" pos:end="84:31"><call pos:start="84:17" pos:end="84:31"><name pos:start="84:17" pos:end="84:23">AVERROR</name><argument_list pos:start="84:24" pos:end="84:31">(<argument pos:start="84:25" pos:end="84:30"><expr pos:start="84:25" pos:end="84:30"><name pos:start="84:25" pos:end="84:30">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="88:5" pos:end="88:47"><expr pos:start="88:5" pos:end="88:46"><name pos:start="88:5" pos:end="88:25"><name pos:start="88:5" pos:end="88:6">st</name><operator pos:start="88:7" pos:end="88:8">-&gt;</operator><name pos:start="88:9" pos:end="88:13">codec</name><operator pos:start="88:14" pos:end="88:15">-&gt;</operator><name pos:start="88:16" pos:end="88:25">codec_type</name></name> <operator pos:start="88:27" pos:end="88:27">=</operator> <name pos:start="88:29" pos:end="88:46">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="90:5" pos:end="90:42"><expr pos:start="90:5" pos:end="90:41"><name pos:start="90:5" pos:end="90:23"><name pos:start="90:5" pos:end="90:6">st</name><operator pos:start="90:7" pos:end="90:8">-&gt;</operator><name pos:start="90:9" pos:end="90:13">codec</name><operator pos:start="90:14" pos:end="90:15">-&gt;</operator><name pos:start="90:16" pos:end="90:23">codec_id</name></name> <operator pos:start="90:25" pos:end="90:25">=</operator> <name pos:start="90:27" pos:end="90:41">AV_CODEC_ID_RL2</name></expr>;</expr_stmt>

    <expr_stmt pos:start="92:5" pos:end="92:29"><expr pos:start="92:5" pos:end="92:28"><name pos:start="92:5" pos:end="92:24"><name pos:start="92:5" pos:end="92:6">st</name><operator pos:start="92:7" pos:end="92:8">-&gt;</operator><name pos:start="92:9" pos:end="92:13">codec</name><operator pos:start="92:14" pos:end="92:15">-&gt;</operator><name pos:start="92:16" pos:end="92:24">codec_tag</name></name> <operator pos:start="92:26" pos:end="92:26">=</operator> <literal type="number" pos:start="92:28" pos:end="92:28">0</literal></expr>;</expr_stmt>  <comment type="block" pos:start="92:32" pos:end="92:46">/* no fourcc */</comment>

    <expr_stmt pos:start="94:5" pos:end="94:27"><expr pos:start="94:5" pos:end="94:26"><name pos:start="94:5" pos:end="94:20"><name pos:start="94:5" pos:end="94:6">st</name><operator pos:start="94:7" pos:end="94:8">-&gt;</operator><name pos:start="94:9" pos:end="94:13">codec</name><operator pos:start="94:14" pos:end="94:15">-&gt;</operator><name pos:start="94:16" pos:end="94:20">width</name></name> <operator pos:start="94:22" pos:end="94:22">=</operator> <literal type="number" pos:start="94:24" pos:end="94:26">320</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="96:5" pos:end="96:28"><expr pos:start="96:5" pos:end="96:27"><name pos:start="96:5" pos:end="96:21"><name pos:start="96:5" pos:end="96:6">st</name><operator pos:start="96:7" pos:end="96:8">-&gt;</operator><name pos:start="96:9" pos:end="96:13">codec</name><operator pos:start="96:14" pos:end="96:15">-&gt;</operator><name pos:start="96:16" pos:end="96:21">height</name></name> <operator pos:start="96:23" pos:end="96:23">=</operator> <literal type="number" pos:start="96:25" pos:end="96:27">200</literal></expr>;</expr_stmt>



    <comment type="block" format="doxygen" pos:start="100:5" pos:end="100:38">/** allocate and fill extradata */</comment>

    <expr_stmt pos:start="102:5" pos:end="102:48"><expr pos:start="102:5" pos:end="102:47"><name pos:start="102:5" pos:end="102:29"><name pos:start="102:5" pos:end="102:6">st</name><operator pos:start="102:7" pos:end="102:8">-&gt;</operator><name pos:start="102:9" pos:end="102:13">codec</name><operator pos:start="102:14" pos:end="102:15">-&gt;</operator><name pos:start="102:16" pos:end="102:29">extradata_size</name></name> <operator pos:start="102:31" pos:end="102:31">=</operator> <name pos:start="102:33" pos:end="102:47">EXTRADATA1_SIZE</name></expr>;</expr_stmt>



    <if_stmt pos:start="106:5" pos:end="108:47"><if pos:start="106:5" pos:end="108:47">if<condition pos:start="106:7" pos:end="106:46">(<expr pos:start="106:8" pos:end="106:45"><name pos:start="106:8" pos:end="106:16">signature</name> <operator pos:start="106:18" pos:end="106:19">==</operator> <name pos:start="106:21" pos:end="106:28">RLV3_TAG</name> <operator pos:start="106:30" pos:end="106:31">&amp;&amp;</operator> <name pos:start="106:33" pos:end="106:41">back_size</name> <operator pos:start="106:43" pos:end="106:43">&gt;</operator> <literal type="number" pos:start="106:45" pos:end="106:45">0</literal></expr>)</condition><block type="pseudo" pos:start="108:9" pos:end="108:47"><block_content pos:start="108:9" pos:end="108:47">

        <expr_stmt pos:start="108:9" pos:end="108:47"><expr pos:start="108:9" pos:end="108:46"><name pos:start="108:9" pos:end="108:33"><name pos:start="108:9" pos:end="108:10">st</name><operator pos:start="108:11" pos:end="108:12">-&gt;</operator><name pos:start="108:13" pos:end="108:17">codec</name><operator pos:start="108:18" pos:end="108:19">-&gt;</operator><name pos:start="108:20" pos:end="108:33">extradata_size</name></name> <operator pos:start="108:35" pos:end="108:36">+=</operator> <name pos:start="108:38" pos:end="108:46">back_size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="112:5" pos:end="114:72"><expr pos:start="112:5" pos:end="114:71"><name pos:start="112:5" pos:end="112:24"><name pos:start="112:5" pos:end="112:6">st</name><operator pos:start="112:7" pos:end="112:8">-&gt;</operator><name pos:start="112:9" pos:end="112:13">codec</name><operator pos:start="112:14" pos:end="112:15">-&gt;</operator><name pos:start="112:16" pos:end="112:24">extradata</name></name> <operator pos:start="112:26" pos:end="112:26">=</operator> <call pos:start="112:28" pos:end="114:71"><name pos:start="112:28" pos:end="112:37">av_mallocz</name><argument_list pos:start="112:38" pos:end="114:71">(<argument pos:start="112:39" pos:end="114:70"><expr pos:start="112:39" pos:end="114:70"><name pos:start="112:39" pos:end="112:63"><name pos:start="112:39" pos:end="112:40">st</name><operator pos:start="112:41" pos:end="112:42">-&gt;</operator><name pos:start="112:43" pos:end="112:47">codec</name><operator pos:start="112:48" pos:end="112:49">-&gt;</operator><name pos:start="112:50" pos:end="112:63">extradata_size</name></name> <operator pos:start="112:65" pos:end="112:65">+</operator>

                                          <name pos:start="114:43" pos:end="114:70">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="116:5" pos:end="118:31"><if pos:start="116:5" pos:end="118:31">if<condition pos:start="116:7" pos:end="116:29">(<expr pos:start="116:8" pos:end="116:28"><operator pos:start="116:8" pos:end="116:8">!</operator><name pos:start="116:9" pos:end="116:28"><name pos:start="116:9" pos:end="116:10">st</name><operator pos:start="116:11" pos:end="116:12">-&gt;</operator><name pos:start="116:13" pos:end="116:17">codec</name><operator pos:start="116:18" pos:end="116:19">-&gt;</operator><name pos:start="116:20" pos:end="116:28">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="118:9" pos:end="118:31"><block_content pos:start="118:9" pos:end="118:31">

        <return pos:start="118:9" pos:end="118:31">return <expr pos:start="118:16" pos:end="118:30"><call pos:start="118:16" pos:end="118:30"><name pos:start="118:16" pos:end="118:22">AVERROR</name><argument_list pos:start="118:23" pos:end="118:30">(<argument pos:start="118:24" pos:end="118:29"><expr pos:start="118:24" pos:end="118:29"><name pos:start="118:24" pos:end="118:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="122:5" pos:end="126:28"><if pos:start="122:5" pos:end="126:28">if<condition pos:start="122:7" pos:end="124:48">(<expr pos:start="122:8" pos:end="124:47"><call pos:start="122:8" pos:end="122:67"><name pos:start="122:8" pos:end="122:16">avio_read</name><argument_list pos:start="122:17" pos:end="122:67">(<argument pos:start="122:18" pos:end="122:19"><expr pos:start="122:18" pos:end="122:19"><name pos:start="122:18" pos:end="122:19">pb</name></expr></argument>,<argument pos:start="122:21" pos:end="122:40"><expr pos:start="122:21" pos:end="122:40"><name pos:start="122:21" pos:end="122:40"><name pos:start="122:21" pos:end="122:22">st</name><operator pos:start="122:23" pos:end="122:24">-&gt;</operator><name pos:start="122:25" pos:end="122:29">codec</name><operator pos:start="122:30" pos:end="122:31">-&gt;</operator><name pos:start="122:32" pos:end="122:40">extradata</name></name></expr></argument>,<argument pos:start="122:42" pos:end="122:66"><expr pos:start="122:42" pos:end="122:66"><name pos:start="122:42" pos:end="122:66"><name pos:start="122:42" pos:end="122:43">st</name><operator pos:start="122:44" pos:end="122:45">-&gt;</operator><name pos:start="122:46" pos:end="122:50">codec</name><operator pos:start="122:51" pos:end="122:52">-&gt;</operator><name pos:start="122:53" pos:end="122:66">extradata_size</name></name></expr></argument>)</argument_list></call> <operator pos:start="122:69" pos:end="122:70">!=</operator>

                      <name pos:start="124:23" pos:end="124:47"><name pos:start="124:23" pos:end="124:24">st</name><operator pos:start="124:25" pos:end="124:26">-&gt;</operator><name pos:start="124:27" pos:end="124:31">codec</name><operator pos:start="124:32" pos:end="124:33">-&gt;</operator><name pos:start="124:34" pos:end="124:47">extradata_size</name></name></expr>)</condition><block type="pseudo" pos:start="126:9" pos:end="126:28"><block_content pos:start="126:9" pos:end="126:28">

        <return pos:start="126:9" pos:end="126:28">return <expr pos:start="126:16" pos:end="126:27"><call pos:start="126:16" pos:end="126:27"><name pos:start="126:16" pos:end="126:22">AVERROR</name><argument_list pos:start="126:23" pos:end="126:27">(<argument pos:start="126:24" pos:end="126:26"><expr pos:start="126:24" pos:end="126:26"><name pos:start="126:24" pos:end="126:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" format="doxygen" pos:start="130:5" pos:end="130:40">/** setup audio stream if present */</comment>

    <if_stmt pos:start="132:5" pos:end="253:15"><if pos:start="132:5" pos:end="253:15">if<condition pos:start="132:7" pos:end="132:18">(<expr pos:start="132:8" pos:end="132:17"><name pos:start="132:8" pos:end="132:17">sound_rate</name></expr>)</condition><block pos:start="132:19" pos:end="253:15">{<block_content pos:start="134:9" pos:end="253:15">

        <expr_stmt pos:start="134:9" pos:end="134:33"><expr pos:start="134:9" pos:end="134:32"><name pos:start="134:9" pos:end="134:15">pts_num</name> <operator pos:start="134:17" pos:end="134:17">=</operator> <name pos:start="134:19" pos:end="134:32">def_sound_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="136:9" pos:end="136:23"><expr pos:start="136:9" pos:end="136:22"><name pos:start="136:9" pos:end="136:15">pts_den</name> <operator pos:start="136:17" pos:end="136:17">=</operator> <name pos:start="136:19" pos:end="136:22">rate</name></expr>;</expr_stmt>



        <expr_stmt pos:start="140:9" pos:end="140:42"><expr pos:start="140:9" pos:end="140:41"><name pos:start="140:9" pos:end="140:10">st</name> <operator pos:start="140:12" pos:end="140:12">=</operator> <call pos:start="140:14" pos:end="140:41"><name pos:start="140:14" pos:end="140:32">avformat_new_stream</name><argument_list pos:start="140:33" pos:end="140:41">(<argument pos:start="140:34" pos:end="140:34"><expr pos:start="140:34" pos:end="140:34"><name pos:start="140:34" pos:end="140:34">s</name></expr></argument>, <argument pos:start="140:37" pos:end="140:40"><expr pos:start="140:37" pos:end="140:40"><name pos:start="140:37" pos:end="140:40">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="142:9" pos:end="144:35"><if pos:start="142:9" pos:end="144:35">if <condition pos:start="142:12" pos:end="142:16">(<expr pos:start="142:13" pos:end="142:15"><operator pos:start="142:13" pos:end="142:13">!</operator><name pos:start="142:14" pos:end="142:15">st</name></expr>)</condition><block type="pseudo" pos:start="144:13" pos:end="144:35"><block_content pos:start="144:13" pos:end="144:35">

            <return pos:start="144:13" pos:end="144:35">return <expr pos:start="144:20" pos:end="144:34"><call pos:start="144:20" pos:end="144:34"><name pos:start="144:20" pos:end="144:26">AVERROR</name><argument_list pos:start="144:27" pos:end="144:34">(<argument pos:start="144:28" pos:end="144:33"><expr pos:start="144:28" pos:end="144:33"><name pos:start="144:28" pos:end="144:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="146:9" pos:end="146:51"><expr pos:start="146:9" pos:end="146:50"><name pos:start="146:9" pos:end="146:29"><name pos:start="146:9" pos:end="146:10">st</name><operator pos:start="146:11" pos:end="146:12">-&gt;</operator><name pos:start="146:13" pos:end="146:17">codec</name><operator pos:start="146:18" pos:end="146:19">-&gt;</operator><name pos:start="146:20" pos:end="146:29">codec_type</name></name> <operator pos:start="146:31" pos:end="146:31">=</operator> <name pos:start="146:33" pos:end="146:50">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="148:9" pos:end="148:49"><expr pos:start="148:9" pos:end="148:48"><name pos:start="148:9" pos:end="148:27"><name pos:start="148:9" pos:end="148:10">st</name><operator pos:start="148:11" pos:end="148:12">-&gt;</operator><name pos:start="148:13" pos:end="148:17">codec</name><operator pos:start="148:18" pos:end="148:19">-&gt;</operator><name pos:start="148:20" pos:end="148:27">codec_id</name></name> <operator pos:start="148:29" pos:end="148:29">=</operator> <name pos:start="148:31" pos:end="148:48">AV_CODEC_ID_PCM_U8</name></expr>;</expr_stmt>

        <expr_stmt pos:start="150:9" pos:end="150:33"><expr pos:start="150:9" pos:end="150:32"><name pos:start="150:9" pos:end="150:28"><name pos:start="150:9" pos:end="150:10">st</name><operator pos:start="150:11" pos:end="150:12">-&gt;</operator><name pos:start="150:13" pos:end="150:17">codec</name><operator pos:start="150:18" pos:end="150:19">-&gt;</operator><name pos:start="150:20" pos:end="150:28">codec_tag</name></name> <operator pos:start="150:30" pos:end="150:30">=</operator> <literal type="number" pos:start="150:32" pos:end="150:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="152:9" pos:end="152:39"><expr pos:start="152:9" pos:end="152:38"><name pos:start="152:9" pos:end="152:27"><name pos:start="152:9" pos:end="152:10">st</name><operator pos:start="152:11" pos:end="152:12">-&gt;</operator><name pos:start="152:13" pos:end="152:17">codec</name><operator pos:start="152:18" pos:end="152:19">-&gt;</operator><name pos:start="152:20" pos:end="152:27">channels</name></name> <operator pos:start="152:29" pos:end="152:29">=</operator> <name pos:start="152:31" pos:end="152:38">channels</name></expr>;</expr_stmt>

        <expr_stmt pos:start="154:9" pos:end="154:45"><expr pos:start="154:9" pos:end="154:44"><name pos:start="154:9" pos:end="154:40"><name pos:start="154:9" pos:end="154:10">st</name><operator pos:start="154:11" pos:end="154:12">-&gt;</operator><name pos:start="154:13" pos:end="154:17">codec</name><operator pos:start="154:18" pos:end="154:19">-&gt;</operator><name pos:start="154:20" pos:end="154:40">bits_per_coded_sample</name></name> <operator pos:start="154:42" pos:end="154:42">=</operator> <literal type="number" pos:start="154:44" pos:end="154:44">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="156:9" pos:end="156:38"><expr pos:start="156:9" pos:end="156:37"><name pos:start="156:9" pos:end="156:30"><name pos:start="156:9" pos:end="156:10">st</name><operator pos:start="156:11" pos:end="156:12">-&gt;</operator><name pos:start="156:13" pos:end="156:17">codec</name><operator pos:start="156:18" pos:end="156:19">-&gt;</operator><name pos:start="156:20" pos:end="156:30">sample_rate</name></name> <operator pos:start="156:32" pos:end="156:32">=</operator> <name pos:start="156:34" pos:end="156:37">rate</name></expr>;</expr_stmt>

        <expr_stmt pos:start="158:9" pos:end="160:45"><expr pos:start="158:9" pos:end="160:44"><name pos:start="158:9" pos:end="158:27"><name pos:start="158:9" pos:end="158:10">st</name><operator pos:start="158:11" pos:end="158:12">-&gt;</operator><name pos:start="158:13" pos:end="158:17">codec</name><operator pos:start="158:18" pos:end="158:19">-&gt;</operator><name pos:start="158:20" pos:end="158:27">bit_rate</name></name> <operator pos:start="158:29" pos:end="158:29">=</operator> <name pos:start="158:31" pos:end="158:49"><name pos:start="158:31" pos:end="158:32">st</name><operator pos:start="158:33" pos:end="158:34">-&gt;</operator><name pos:start="158:35" pos:end="158:39">codec</name><operator pos:start="158:40" pos:end="158:41">-&gt;</operator><name pos:start="158:42" pos:end="158:49">channels</name></name> <operator pos:start="158:51" pos:end="158:51">*</operator> <name pos:start="158:53" pos:end="158:74"><name pos:start="158:53" pos:end="158:54">st</name><operator pos:start="158:55" pos:end="158:56">-&gt;</operator><name pos:start="158:57" pos:end="158:61">codec</name><operator pos:start="158:62" pos:end="158:63">-&gt;</operator><name pos:start="158:64" pos:end="158:74">sample_rate</name></name> <operator pos:start="158:76" pos:end="158:76">*</operator>

            <name pos:start="160:13" pos:end="160:44"><name pos:start="160:13" pos:end="160:14">st</name><operator pos:start="160:15" pos:end="160:16">-&gt;</operator><name pos:start="160:17" pos:end="160:21">codec</name><operator pos:start="160:22" pos:end="160:23">-&gt;</operator><name pos:start="160:24" pos:end="160:44">bits_per_coded_sample</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="162:9" pos:end="164:49"><expr pos:start="162:9" pos:end="164:48"><name pos:start="162:9" pos:end="162:30"><name pos:start="162:9" pos:end="162:10">st</name><operator pos:start="162:11" pos:end="162:12">-&gt;</operator><name pos:start="162:13" pos:end="162:17">codec</name><operator pos:start="162:18" pos:end="162:19">-&gt;</operator><name pos:start="162:20" pos:end="162:30">block_align</name></name> <operator pos:start="162:32" pos:end="162:32">=</operator> <name pos:start="162:34" pos:end="162:52"><name pos:start="162:34" pos:end="162:35">st</name><operator pos:start="162:36" pos:end="162:37">-&gt;</operator><name pos:start="162:38" pos:end="162:42">codec</name><operator pos:start="162:43" pos:end="162:44">-&gt;</operator><name pos:start="162:45" pos:end="162:52">channels</name></name> <operator pos:start="162:54" pos:end="162:54">*</operator>

            <name pos:start="164:13" pos:end="164:44"><name pos:start="164:13" pos:end="164:14">st</name><operator pos:start="164:15" pos:end="164:16">-&gt;</operator><name pos:start="164:17" pos:end="164:21">codec</name><operator pos:start="164:22" pos:end="164:23">-&gt;</operator><name pos:start="164:24" pos:end="164:44">bits_per_coded_sample</name></name> <operator pos:start="164:46" pos:end="164:46">/</operator> <literal type="number" pos:start="164:48" pos:end="164:48">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="166:9" pos:end="166:42"><expr pos:start="166:9" pos:end="166:41"><call pos:start="166:9" pos:end="166:41"><name pos:start="166:9" pos:end="166:27">avpriv_set_pts_info</name><argument_list pos:start="166:28" pos:end="166:41">(<argument pos:start="166:29" pos:end="166:30"><expr pos:start="166:29" pos:end="166:30"><name pos:start="166:29" pos:end="166:30">st</name></expr></argument>,<argument pos:start="166:32" pos:end="166:33"><expr pos:start="166:32" pos:end="166:33"><literal type="number" pos:start="166:32" pos:end="166:33">32</literal></expr></argument>,<argument pos:start="166:35" pos:end="166:35"><expr pos:start="166:35" pos:end="166:35"><literal type="number" pos:start="166:35" pos:end="166:35">1</literal></expr></argument>,<argument pos:start="166:37" pos:end="166:40"><expr pos:start="166:37" pos:end="166:40"><name pos:start="166:37" pos:end="166:40">rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <expr_stmt pos:start="171:5" pos:end="171:61"><expr pos:start="171:5" pos:end="171:60"><call pos:start="171:5" pos:end="171:60"><name pos:start="171:5" pos:end="171:23">avpriv_set_pts_info</name><argument_list pos:start="171:24" pos:end="171:60">(<argument pos:start="171:25" pos:end="171:37"><expr pos:start="171:25" pos:end="171:37"><name pos:start="171:25" pos:end="171:37"><name pos:start="171:25" pos:end="171:25">s</name><operator pos:start="171:26" pos:end="171:27">-&gt;</operator><name pos:start="171:28" pos:end="171:34">streams</name><index pos:start="171:35" pos:end="171:37">[<expr pos:start="171:36" pos:end="171:36"><literal type="number" pos:start="171:36" pos:end="171:36">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="171:40" pos:end="171:41"><expr pos:start="171:40" pos:end="171:41"><literal type="number" pos:start="171:40" pos:end="171:41">32</literal></expr></argument>, <argument pos:start="171:44" pos:end="171:50"><expr pos:start="171:44" pos:end="171:50"><name pos:start="171:44" pos:end="171:50">pts_num</name></expr></argument>, <argument pos:start="171:53" pos:end="171:59"><expr pos:start="171:53" pos:end="171:59"><name pos:start="171:53" pos:end="171:59">pts_den</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="175:5" pos:end="175:61"><expr pos:start="175:5" pos:end="175:60"><name pos:start="175:5" pos:end="175:14">chunk_size</name> <operator pos:start="175:16" pos:end="175:16">=</operator>   <call pos:start="175:20" pos:end="175:60"><name pos:start="175:20" pos:end="175:28">av_malloc</name><argument_list pos:start="175:29" pos:end="175:60">(<argument pos:start="175:30" pos:end="175:59"><expr pos:start="175:30" pos:end="175:59"><name pos:start="175:30" pos:end="175:40">frame_count</name> <operator pos:start="175:42" pos:end="175:42">*</operator> <sizeof pos:start="175:44" pos:end="175:59">sizeof<argument_list pos:start="175:50" pos:end="175:59">(<argument pos:start="175:51" pos:end="175:58"><expr pos:start="175:51" pos:end="175:58"><name pos:start="175:51" pos:end="175:58">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:61"><expr pos:start="177:5" pos:end="177:60"><name pos:start="177:5" pos:end="177:14">audio_size</name> <operator pos:start="177:16" pos:end="177:16">=</operator>   <call pos:start="177:20" pos:end="177:60"><name pos:start="177:20" pos:end="177:28">av_malloc</name><argument_list pos:start="177:29" pos:end="177:60">(<argument pos:start="177:30" pos:end="177:59"><expr pos:start="177:30" pos:end="177:59"><name pos:start="177:30" pos:end="177:40">frame_count</name> <operator pos:start="177:42" pos:end="177:42">*</operator> <sizeof pos:start="177:44" pos:end="177:59">sizeof<argument_list pos:start="177:50" pos:end="177:59">(<argument pos:start="177:51" pos:end="177:58"><expr pos:start="177:51" pos:end="177:58"><name pos:start="177:51" pos:end="177:58">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:61"><expr pos:start="179:5" pos:end="179:60"><name pos:start="179:5" pos:end="179:16">chunk_offset</name> <operator pos:start="179:18" pos:end="179:18">=</operator> <call pos:start="179:20" pos:end="179:60"><name pos:start="179:20" pos:end="179:28">av_malloc</name><argument_list pos:start="179:29" pos:end="179:60">(<argument pos:start="179:30" pos:end="179:59"><expr pos:start="179:30" pos:end="179:59"><name pos:start="179:30" pos:end="179:40">frame_count</name> <operator pos:start="179:42" pos:end="179:42">*</operator> <sizeof pos:start="179:44" pos:end="179:59">sizeof<argument_list pos:start="179:50" pos:end="179:59">(<argument pos:start="179:51" pos:end="179:58"><expr pos:start="179:51" pos:end="179:58"><name pos:start="179:51" pos:end="179:58">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="183:5" pos:end="253:15"><if pos:start="183:5" pos:end="253:15">if<condition pos:start="183:7" pos:end="183:51">(<expr pos:start="183:8" pos:end="183:50"><operator pos:start="183:8" pos:end="183:8">!</operator><name pos:start="183:9" pos:end="183:18">chunk_size</name> <operator pos:start="183:20" pos:end="183:21">||</operator> <operator pos:start="183:23" pos:end="183:23">!</operator><name pos:start="183:24" pos:end="183:33">audio_size</name> <operator pos:start="183:35" pos:end="183:36">||</operator> <operator pos:start="183:38" pos:end="183:38">!</operator><name pos:start="183:39" pos:end="183:50">chunk_offset</name></expr>)</condition><block pos:start="183:52" pos:end="253:15">{<block_content pos:start="185:9" pos:end="253:15">

        <expr_stmt pos:start="185:9" pos:end="185:28"><expr pos:start="185:9" pos:end="185:27"><call pos:start="185:9" pos:end="185:27"><name pos:start="185:9" pos:end="185:15">av_free</name><argument_list pos:start="185:16" pos:end="185:27">(<argument pos:start="185:17" pos:end="185:26"><expr pos:start="185:17" pos:end="185:26"><name pos:start="185:17" pos:end="185:26">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:28"><expr pos:start="187:9" pos:end="187:27"><call pos:start="187:9" pos:end="187:27"><name pos:start="187:9" pos:end="187:15">av_free</name><argument_list pos:start="187:16" pos:end="187:27">(<argument pos:start="187:17" pos:end="187:26"><expr pos:start="187:17" pos:end="187:26"><name pos:start="187:17" pos:end="187:26">audio_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:30"><expr pos:start="189:9" pos:end="189:29"><call pos:start="189:9" pos:end="189:29"><name pos:start="189:9" pos:end="189:15">av_free</name><argument_list pos:start="189:16" pos:end="189:29">(<argument pos:start="189:17" pos:end="189:28"><expr pos:start="189:17" pos:end="189:28"><name pos:start="189:17" pos:end="189:28">chunk_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="191:9" pos:end="191:31">return <expr pos:start="191:16" pos:end="191:30"><call pos:start="191:16" pos:end="191:30"><name pos:start="191:16" pos:end="191:22">AVERROR</name><argument_list pos:start="191:23" pos:end="191:30">(<argument pos:start="191:24" pos:end="191:29"><expr pos:start="191:24" pos:end="191:29"><name pos:start="191:24" pos:end="191:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>




    <comment type="block" format="doxygen" pos:start="196:5" pos:end="196:38">/** read offset and size tables */</comment>

    <for pos:start="198:5" pos:end="200:38">for<control pos:start="198:8" pos:end="198:33">(<init pos:start="198:9" pos:end="198:12"><expr pos:start="198:9" pos:end="198:11"><name pos:start="198:9" pos:end="198:9">i</name><operator pos:start="198:10" pos:end="198:10">=</operator><literal type="number" pos:start="198:11" pos:end="198:11">0</literal></expr>;</init> <condition pos:start="198:14" pos:end="198:29"><expr pos:start="198:14" pos:end="198:28"><name pos:start="198:14" pos:end="198:14">i</name> <operator pos:start="198:16" pos:end="198:16">&lt;</operator> <name pos:start="198:18" pos:end="198:28">frame_count</name></expr>;</condition><incr pos:start="198:30" pos:end="198:32"><expr pos:start="198:30" pos:end="198:32"><name pos:start="198:30" pos:end="198:30">i</name><operator pos:start="198:31" pos:end="198:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="200:9" pos:end="200:38"><block_content pos:start="200:9" pos:end="200:38">

        <expr_stmt pos:start="200:9" pos:end="200:38"><expr pos:start="200:9" pos:end="200:37"><name pos:start="200:9" pos:end="200:21"><name pos:start="200:9" pos:end="200:18">chunk_size</name><index pos:start="200:19" pos:end="200:21">[<expr pos:start="200:20" pos:end="200:20"><name pos:start="200:20" pos:end="200:20">i</name></expr>]</index></name> <operator pos:start="200:23" pos:end="200:23">=</operator> <call pos:start="200:25" pos:end="200:37"><name pos:start="200:25" pos:end="200:33">avio_rl32</name><argument_list pos:start="200:34" pos:end="200:37">(<argument pos:start="200:35" pos:end="200:36"><expr pos:start="200:35" pos:end="200:36"><name pos:start="200:35" pos:end="200:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <for pos:start="202:5" pos:end="204:40">for<control pos:start="202:8" pos:end="202:33">(<init pos:start="202:9" pos:end="202:12"><expr pos:start="202:9" pos:end="202:11"><name pos:start="202:9" pos:end="202:9">i</name><operator pos:start="202:10" pos:end="202:10">=</operator><literal type="number" pos:start="202:11" pos:end="202:11">0</literal></expr>;</init> <condition pos:start="202:14" pos:end="202:29"><expr pos:start="202:14" pos:end="202:28"><name pos:start="202:14" pos:end="202:14">i</name> <operator pos:start="202:16" pos:end="202:16">&lt;</operator> <name pos:start="202:18" pos:end="202:28">frame_count</name></expr>;</condition><incr pos:start="202:30" pos:end="202:32"><expr pos:start="202:30" pos:end="202:32"><name pos:start="202:30" pos:end="202:30">i</name><operator pos:start="202:31" pos:end="202:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="204:9" pos:end="204:40"><block_content pos:start="204:9" pos:end="204:40">

        <expr_stmt pos:start="204:9" pos:end="204:40"><expr pos:start="204:9" pos:end="204:39"><name pos:start="204:9" pos:end="204:23"><name pos:start="204:9" pos:end="204:20">chunk_offset</name><index pos:start="204:21" pos:end="204:23">[<expr pos:start="204:22" pos:end="204:22"><name pos:start="204:22" pos:end="204:22">i</name></expr>]</index></name> <operator pos:start="204:25" pos:end="204:25">=</operator> <call pos:start="204:27" pos:end="204:39"><name pos:start="204:27" pos:end="204:35">avio_rl32</name><argument_list pos:start="204:36" pos:end="204:39">(<argument pos:start="204:37" pos:end="204:38"><expr pos:start="204:37" pos:end="204:38"><name pos:start="204:37" pos:end="204:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <for pos:start="206:5" pos:end="208:47">for<control pos:start="206:8" pos:end="206:33">(<init pos:start="206:9" pos:end="206:12"><expr pos:start="206:9" pos:end="206:11"><name pos:start="206:9" pos:end="206:9">i</name><operator pos:start="206:10" pos:end="206:10">=</operator><literal type="number" pos:start="206:11" pos:end="206:11">0</literal></expr>;</init> <condition pos:start="206:14" pos:end="206:29"><expr pos:start="206:14" pos:end="206:28"><name pos:start="206:14" pos:end="206:14">i</name> <operator pos:start="206:16" pos:end="206:16">&lt;</operator> <name pos:start="206:18" pos:end="206:28">frame_count</name></expr>;</condition><incr pos:start="206:30" pos:end="206:32"><expr pos:start="206:30" pos:end="206:32"><name pos:start="206:30" pos:end="206:30">i</name><operator pos:start="206:31" pos:end="206:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="208:9" pos:end="208:47"><block_content pos:start="208:9" pos:end="208:47">

        <expr_stmt pos:start="208:9" pos:end="208:47"><expr pos:start="208:9" pos:end="208:46"><name pos:start="208:9" pos:end="208:21"><name pos:start="208:9" pos:end="208:18">audio_size</name><index pos:start="208:19" pos:end="208:21">[<expr pos:start="208:20" pos:end="208:20"><name pos:start="208:20" pos:end="208:20">i</name></expr>]</index></name> <operator pos:start="208:23" pos:end="208:23">=</operator> <call pos:start="208:25" pos:end="208:37"><name pos:start="208:25" pos:end="208:33">avio_rl32</name><argument_list pos:start="208:34" pos:end="208:37">(<argument pos:start="208:35" pos:end="208:36"><expr pos:start="208:35" pos:end="208:36"><name pos:start="208:35" pos:end="208:36">pb</name></expr></argument>)</argument_list></call> <operator pos:start="208:39" pos:end="208:39">&amp;</operator> <literal type="number" pos:start="208:41" pos:end="208:46">0xFFFF</literal></expr>;</expr_stmt></block_content></block></for>



    <comment type="block" format="doxygen" pos:start="212:5" pos:end="212:33">/** build the sample index */</comment>

    <for pos:start="214:5" pos:end="253:15">for<control pos:start="214:8" pos:end="214:30">(<init pos:start="214:9" pos:end="214:12"><expr pos:start="214:9" pos:end="214:11"><name pos:start="214:9" pos:end="214:9">i</name><operator pos:start="214:10" pos:end="214:10">=</operator><literal type="number" pos:start="214:11" pos:end="214:11">0</literal></expr>;</init><condition pos:start="214:13" pos:end="214:26"><expr pos:start="214:13" pos:end="214:25"><name pos:start="214:13" pos:end="214:13">i</name><operator pos:start="214:14" pos:end="214:14">&lt;</operator><name pos:start="214:15" pos:end="214:25">frame_count</name></expr>;</condition><incr pos:start="214:27" pos:end="214:29"><expr pos:start="214:27" pos:end="214:29"><name pos:start="214:27" pos:end="214:27">i</name><operator pos:start="214:28" pos:end="214:29">++</operator></expr></incr>)</control><block pos:start="214:31" pos:end="253:15">{<block_content pos:start="216:9" pos:end="253:15">

        <if_stmt pos:start="216:9" pos:end="253:15"><if pos:start="216:9" pos:end="253:15">if<condition pos:start="216:11" pos:end="216:62">(<expr pos:start="216:12" pos:end="216:61"><name pos:start="216:12" pos:end="216:24"><name pos:start="216:12" pos:end="216:21">chunk_size</name><index pos:start="216:22" pos:end="216:24">[<expr pos:start="216:23" pos:end="216:23"><name pos:start="216:23" pos:end="216:23">i</name></expr>]</index></name> <operator pos:start="216:26" pos:end="216:26">&lt;</operator> <literal type="number" pos:start="216:28" pos:end="216:28">0</literal> <operator pos:start="216:30" pos:end="216:31">||</operator> <name pos:start="216:33" pos:end="216:45"><name pos:start="216:33" pos:end="216:42">audio_size</name><index pos:start="216:43" pos:end="216:45">[<expr pos:start="216:44" pos:end="216:44"><name pos:start="216:44" pos:end="216:44">i</name></expr>]</index></name> <operator pos:start="216:47" pos:end="216:47">&gt;</operator> <name pos:start="216:49" pos:end="216:61"><name pos:start="216:49" pos:end="216:58">chunk_size</name><index pos:start="216:59" pos:end="216:61">[<expr pos:start="216:60" pos:end="216:60"><name pos:start="216:60" pos:end="216:60">i</name></expr>]</index></name></expr>)</condition><block pos:start="216:63" pos:end="253:15">{<block_content pos:start="218:13" pos:end="253:15">

            <expr_stmt pos:start="218:13" pos:end="218:38"><expr pos:start="218:13" pos:end="218:37"><name pos:start="218:13" pos:end="218:15">ret</name> <operator pos:start="218:17" pos:end="218:17">=</operator> <name pos:start="218:19" pos:end="218:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <break pos:start="220:13" pos:end="220:18">break;</break>




        <if_stmt pos:start="225:9" pos:end="253:15"><if pos:start="225:9" pos:end="253:15">if<condition pos:start="225:11" pos:end="225:39">(<expr pos:start="225:12" pos:end="225:38"><name pos:start="225:12" pos:end="225:21">sound_rate</name> <operator pos:start="225:23" pos:end="225:24">&amp;&amp;</operator> <name pos:start="225:26" pos:end="225:38"><name pos:start="225:26" pos:end="225:35">audio_size</name><index pos:start="225:36" pos:end="225:38">[<expr pos:start="225:37" pos:end="225:37"><name pos:start="225:37" pos:end="225:37">i</name></expr>]</index></name></expr>)</condition><block pos:start="225:40" pos:end="253:15">{<block_content pos:start="227:13" pos:end="253:15">

            <expr_stmt pos:start="227:13" pos:end="229:72"><expr pos:start="227:13" pos:end="229:71"><call pos:start="227:13" pos:end="229:71"><name pos:start="227:13" pos:end="227:30">av_add_index_entry</name><argument_list pos:start="227:31" pos:end="229:71">(<argument pos:start="227:32" pos:end="227:44"><expr pos:start="227:32" pos:end="227:44"><name pos:start="227:32" pos:end="227:44"><name pos:start="227:32" pos:end="227:32">s</name><operator pos:start="227:33" pos:end="227:34">-&gt;</operator><name pos:start="227:35" pos:end="227:41">streams</name><index pos:start="227:42" pos:end="227:44">[<expr pos:start="227:43" pos:end="227:43"><literal type="number" pos:start="227:43" pos:end="227:43">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="227:47" pos:end="227:61"><expr pos:start="227:47" pos:end="227:61"><name pos:start="227:47" pos:end="227:61"><name pos:start="227:47" pos:end="227:58">chunk_offset</name><index pos:start="227:59" pos:end="227:61">[<expr pos:start="227:60" pos:end="227:60"><name pos:start="227:60" pos:end="227:60">i</name></expr>]</index></name></expr></argument>,

                <argument pos:start="229:17" pos:end="229:35"><expr pos:start="229:17" pos:end="229:35"><name pos:start="229:17" pos:end="229:35">audio_frame_counter</name></expr></argument>,<argument pos:start="229:37" pos:end="229:49"><expr pos:start="229:37" pos:end="229:49"><name pos:start="229:37" pos:end="229:49"><name pos:start="229:37" pos:end="229:46">audio_size</name><index pos:start="229:47" pos:end="229:49">[<expr pos:start="229:48" pos:end="229:48"><name pos:start="229:48" pos:end="229:48">i</name></expr>]</index></name></expr></argument>, <argument pos:start="229:52" pos:end="229:52"><expr pos:start="229:52" pos:end="229:52"><literal type="number" pos:start="229:52" pos:end="229:52">0</literal></expr></argument>, <argument pos:start="229:55" pos:end="229:70"><expr pos:start="229:55" pos:end="229:70"><name pos:start="229:55" pos:end="229:70">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="231:13" pos:end="231:60"><expr pos:start="231:13" pos:end="231:59"><name pos:start="231:13" pos:end="231:31">audio_frame_counter</name> <operator pos:start="231:33" pos:end="231:34">+=</operator> <name pos:start="231:36" pos:end="231:48"><name pos:start="231:36" pos:end="231:45">audio_size</name><index pos:start="231:46" pos:end="231:48">[<expr pos:start="231:47" pos:end="231:47"><name pos:start="231:47" pos:end="231:47">i</name></expr>]</index></name> <operator pos:start="231:50" pos:end="231:50">/</operator> <name pos:start="231:52" pos:end="231:59">channels</name></expr>;</expr_stmt>


        <expr_stmt pos:start="234:9" pos:end="236:80"><expr pos:start="234:9" pos:end="236:79"><call pos:start="234:9" pos:end="236:79"><name pos:start="234:9" pos:end="234:26">av_add_index_entry</name><argument_list pos:start="234:27" pos:end="236:79">(<argument pos:start="234:28" pos:end="234:40"><expr pos:start="234:28" pos:end="234:40"><name pos:start="234:28" pos:end="234:40"><name pos:start="234:28" pos:end="234:28">s</name><operator pos:start="234:29" pos:end="234:30">-&gt;</operator><name pos:start="234:31" pos:end="234:37">streams</name><index pos:start="234:38" pos:end="234:40">[<expr pos:start="234:39" pos:end="234:39"><literal type="number" pos:start="234:39" pos:end="234:39">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="234:43" pos:end="234:73"><expr pos:start="234:43" pos:end="234:73"><name pos:start="234:43" pos:end="234:57"><name pos:start="234:43" pos:end="234:54">chunk_offset</name><index pos:start="234:55" pos:end="234:57">[<expr pos:start="234:56" pos:end="234:56"><name pos:start="234:56" pos:end="234:56">i</name></expr>]</index></name> <operator pos:start="234:59" pos:end="234:59">+</operator> <name pos:start="234:61" pos:end="234:73"><name pos:start="234:61" pos:end="234:70">audio_size</name><index pos:start="234:71" pos:end="234:73">[<expr pos:start="234:72" pos:end="234:72"><name pos:start="234:72" pos:end="234:72">i</name></expr>]</index></name></expr></argument>,

            <argument pos:start="236:13" pos:end="236:31"><expr pos:start="236:13" pos:end="236:31"><name pos:start="236:13" pos:end="236:31">video_frame_counter</name></expr></argument>,<argument pos:start="236:33" pos:end="236:59"><expr pos:start="236:33" pos:end="236:59"><name pos:start="236:33" pos:end="236:45"><name pos:start="236:33" pos:end="236:42">chunk_size</name><index pos:start="236:43" pos:end="236:45">[<expr pos:start="236:44" pos:end="236:44"><name pos:start="236:44" pos:end="236:44">i</name></expr>]</index></name><operator pos:start="236:46" pos:end="236:46">-</operator><name pos:start="236:47" pos:end="236:59"><name pos:start="236:47" pos:end="236:56">audio_size</name><index pos:start="236:57" pos:end="236:59">[<expr pos:start="236:58" pos:end="236:58"><name pos:start="236:58" pos:end="236:58">i</name></expr>]</index></name></expr></argument>,<argument pos:start="236:61" pos:end="236:61"><expr pos:start="236:61" pos:end="236:61"><literal type="number" pos:start="236:61" pos:end="236:61">0</literal></expr></argument>,<argument pos:start="236:63" pos:end="236:78"><expr pos:start="236:63" pos:end="236:78"><name pos:start="236:63" pos:end="236:78">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="238:9" pos:end="238:30"><expr pos:start="238:9" pos:end="238:29"><operator pos:start="238:9" pos:end="238:10">++</operator><name pos:start="238:11" pos:end="238:29">video_frame_counter</name></expr>;</expr_stmt>






    <expr_stmt pos:start="245:5" pos:end="245:24"><expr pos:start="245:5" pos:end="245:23"><call pos:start="245:5" pos:end="245:23"><name pos:start="245:5" pos:end="245:11">av_free</name><argument_list pos:start="245:12" pos:end="245:23">(<argument pos:start="245:13" pos:end="245:22"><expr pos:start="245:13" pos:end="245:22"><name pos:start="245:13" pos:end="245:22">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="247:5" pos:end="247:24"><expr pos:start="247:5" pos:end="247:23"><call pos:start="247:5" pos:end="247:23"><name pos:start="247:5" pos:end="247:11">av_free</name><argument_list pos:start="247:12" pos:end="247:23">(<argument pos:start="247:13" pos:end="247:22"><expr pos:start="247:13" pos:end="247:22"><name pos:start="247:13" pos:end="247:22">audio_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:26"><expr pos:start="249:5" pos:end="249:25"><call pos:start="249:5" pos:end="249:25"><name pos:start="249:5" pos:end="249:11">av_free</name><argument_list pos:start="249:12" pos:end="249:25">(<argument pos:start="249:13" pos:end="249:24"><expr pos:start="249:13" pos:end="249:24"><name pos:start="249:13" pos:end="249:24">chunk_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="253:5" pos:end="253:15">return <expr pos:start="253:12" pos:end="253:14"><name pos:start="253:12" pos:end="253:14">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
