<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24825.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">TranslationBlock</name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:37">tb_find_slow</name><parameter_list pos:start="1:38" pos:end="5:53">(<parameter pos:start="1:39" pos:end="1:53"><decl pos:start="1:39" pos:end="1:53"><type pos:start="1:39" pos:end="1:53"><name pos:start="1:39" pos:end="1:50">target_ulong</name></type> <name pos:start="1:52" pos:end="1:53">pc</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:58"><decl pos:start="3:39" pos:end="3:58"><type pos:start="3:39" pos:end="3:58"><name pos:start="3:39" pos:end="3:50">target_ulong</name></type> <name pos:start="3:52" pos:end="3:58">cs_base</name></decl></parameter>,

                                      <parameter pos:start="5:39" pos:end="5:52"><decl pos:start="5:39" pos:end="5:52"><type pos:start="5:39" pos:end="5:52"><name pos:start="5:39" pos:end="5:46">uint64_t</name></type> <name pos:start="5:48" pos:end="5:52">flags</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="149:1">{<block_content pos:start="9:5" pos:end="147:14">

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">TranslationBlock</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:24">tb</name></decl>, <decl pos:start="9:27" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:22"><modifier pos:start="9:27" pos:end="9:27">*</modifier><modifier pos:start="9:28" pos:end="9:28">*</modifier></type><name pos:start="9:29" pos:end="9:32">ptb1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:21">code_gen_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:18">h</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:61"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">target_ulong</name></type> <name pos:start="15:18" pos:end="15:24">phys_pc</name></decl>, <decl pos:start="15:27" pos:end="15:36"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:27" pos:end="15:36">phys_page1</name></decl>, <decl pos:start="15:39" pos:end="15:48"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:39" pos:end="15:48">phys_page2</name></decl>, <decl pos:start="15:51" pos:end="15:60"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:51" pos:end="15:60">virt_page2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:20"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:19">tc_ptr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:24"><expr pos:start="21:5" pos:end="21:23"><call pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:13">spin_lock</name><argument_list pos:start="21:14" pos:end="21:23">(<argument pos:start="21:15" pos:end="21:22"><expr pos:start="21:15" pos:end="21:22"><operator pos:start="21:15" pos:end="21:15">&amp;</operator><name pos:start="21:16" pos:end="21:22">tb_lock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:28"><expr pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:23">tb_invalidated_flag</name> <operator pos:start="25:25" pos:end="25:25">=</operator> <literal type="number" pos:start="25:27" pos:end="25:27">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:18"><expr pos:start="29:5" pos:end="29:17"><call pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:15">regs_to_env</name><argument_list pos:start="29:16" pos:end="29:17">()</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="29:20" pos:end="29:62">/* XXX: do it just before cpu_gen_code() */</comment>



    <comment type="block" pos:start="33:5" pos:end="33:55">/* find translated block using physical mappings */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:42"><expr pos:start="35:5" pos:end="35:41"><name pos:start="35:5" pos:end="35:11">phys_pc</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:41"><name pos:start="35:15" pos:end="35:32">get_phys_addr_code</name><argument_list pos:start="35:33" pos:end="35:41">(<argument pos:start="35:34" pos:end="35:36"><expr pos:start="35:34" pos:end="35:36"><name pos:start="35:34" pos:end="35:36">env</name></expr></argument>, <argument pos:start="35:39" pos:end="35:40"><expr pos:start="35:39" pos:end="35:40"><name pos:start="35:39" pos:end="35:40">pc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:44"><expr pos:start="37:5" pos:end="37:43"><name pos:start="37:5" pos:end="37:14">phys_page1</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <name pos:start="37:18" pos:end="37:24">phys_pc</name> <operator pos:start="37:26" pos:end="37:26">&amp;</operator> <name pos:start="37:28" pos:end="37:43">TARGET_PAGE_MASK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:20"><expr pos:start="39:5" pos:end="39:19"><name pos:start="39:5" pos:end="39:14">phys_page2</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <operator pos:start="39:18" pos:end="39:18">-</operator><literal type="number" pos:start="39:19" pos:end="39:19">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:35"><expr pos:start="41:5" pos:end="41:34"><name pos:start="41:5" pos:end="41:5">h</name> <operator pos:start="41:7" pos:end="41:7">=</operator> <call pos:start="41:9" pos:end="41:34"><name pos:start="41:9" pos:end="41:25">tb_phys_hash_func</name><argument_list pos:start="41:26" pos:end="41:34">(<argument pos:start="41:27" pos:end="41:33"><expr pos:start="41:27" pos:end="41:33"><name pos:start="41:27" pos:end="41:33">phys_pc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:28"><expr pos:start="43:5" pos:end="43:27"><name pos:start="43:5" pos:end="43:8">ptb1</name> <operator pos:start="43:10" pos:end="43:10">=</operator> <operator pos:start="43:12" pos:end="43:12">&amp;</operator><name pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:24">tb_phys_hash</name><index pos:start="43:25" pos:end="43:27">[<expr pos:start="43:26" pos:end="43:26"><name pos:start="43:26" pos:end="43:26">h</name></expr>]</index></name></expr>;</expr_stmt>

    <for pos:start="45:5" pos:end="85:5">for<control pos:start="45:8" pos:end="45:11">(<init pos:start="45:9" pos:end="45:9">;</init><condition pos:start="45:10" pos:end="45:10">;</condition><incr/>)</control> <block pos:start="45:13" pos:end="85:5">{<block_content pos:start="47:9" pos:end="83:35">

        <expr_stmt pos:start="47:9" pos:end="47:19"><expr pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:10">tb</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <operator pos:start="47:14" pos:end="47:14">*</operator><name pos:start="47:15" pos:end="47:18">ptb1</name></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="51:27"><if pos:start="49:9" pos:end="51:27">if <condition pos:start="49:12" pos:end="49:16">(<expr pos:start="49:13" pos:end="49:15"><operator pos:start="49:13" pos:end="49:13">!</operator><name pos:start="49:14" pos:end="49:15">tb</name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:27"><block_content pos:start="51:13" pos:end="51:27">

            <goto pos:start="51:13" pos:end="51:27">goto <name pos:start="51:18" pos:end="51:26">not_found</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="53:9" pos:end="81:9"><if pos:start="53:9" pos:end="81:9">if <condition pos:start="53:12" pos:end="59:31">(<expr pos:start="53:13" pos:end="59:30"><name pos:start="53:13" pos:end="53:18"><name pos:start="53:13" pos:end="53:14">tb</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:18">pc</name></name> <operator pos:start="53:20" pos:end="53:21">==</operator> <name pos:start="53:23" pos:end="53:24">pc</name> <operator pos:start="53:26" pos:end="53:27">&amp;&amp;</operator>

            <name pos:start="55:13" pos:end="55:28"><name pos:start="55:13" pos:end="55:14">tb</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:25">page_addr</name><index pos:start="55:26" pos:end="55:28">[<expr pos:start="55:27" pos:end="55:27"><literal type="number" pos:start="55:27" pos:end="55:27">0</literal></expr>]</index></name> <operator pos:start="55:30" pos:end="55:31">==</operator> <name pos:start="55:33" pos:end="55:42">phys_page1</name> <operator pos:start="55:44" pos:end="55:45">&amp;&amp;</operator>

            <name pos:start="57:13" pos:end="57:23"><name pos:start="57:13" pos:end="57:14">tb</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:23">cs_base</name></name> <operator pos:start="57:25" pos:end="57:26">==</operator> <name pos:start="57:28" pos:end="57:34">cs_base</name> <operator pos:start="57:36" pos:end="57:37">&amp;&amp;</operator>

            <name pos:start="59:13" pos:end="59:21"><name pos:start="59:13" pos:end="59:14">tb</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:21">flags</name></name> <operator pos:start="59:23" pos:end="59:24">==</operator> <name pos:start="59:26" pos:end="59:30">flags</name></expr>)</condition> <block pos:start="59:33" pos:end="81:9">{<block_content pos:start="63:13" pos:end="79:13">

            <comment type="block" pos:start="61:13" pos:end="61:43">/* check next page if needed */</comment>

            <if_stmt pos:start="63:13" pos:end="79:13"><if pos:start="63:13" pos:end="75:13">if <condition pos:start="63:16" pos:end="63:39">(<expr pos:start="63:17" pos:end="63:38"><name pos:start="63:17" pos:end="63:32"><name pos:start="63:17" pos:end="63:18">tb</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:29">page_addr</name><index pos:start="63:30" pos:end="63:32">[<expr pos:start="63:31" pos:end="63:31"><literal type="number" pos:start="63:31" pos:end="63:31">1</literal></expr>]</index></name> <operator pos:start="63:34" pos:end="63:35">!=</operator> <operator pos:start="63:37" pos:end="63:37">-</operator><literal type="number" pos:start="63:38" pos:end="63:38">1</literal></expr>)</condition> <block pos:start="63:41" pos:end="75:13">{<block_content pos:start="65:17" pos:end="73:31">

                <expr_stmt pos:start="65:17" pos:end="67:37"><expr pos:start="65:17" pos:end="67:36"><name pos:start="65:17" pos:end="65:26">virt_page2</name> <operator pos:start="65:28" pos:end="65:28">=</operator> <operator pos:start="65:30" pos:end="65:30">(</operator><name pos:start="65:31" pos:end="65:32">pc</name> <operator pos:start="65:34" pos:end="65:34">&amp;</operator> <name pos:start="65:36" pos:end="65:51">TARGET_PAGE_MASK</name><operator pos:start="65:52" pos:end="65:52">)</operator> <operator pos:start="65:54" pos:end="65:54">+</operator>

                    <name pos:start="67:21" pos:end="67:36">TARGET_PAGE_SIZE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:65"><expr pos:start="69:17" pos:end="69:64"><name pos:start="69:17" pos:end="69:26">phys_page2</name> <operator pos:start="69:28" pos:end="69:28">=</operator> <call pos:start="69:30" pos:end="69:64"><name pos:start="69:30" pos:end="69:47">get_phys_addr_code</name><argument_list pos:start="69:48" pos:end="69:64">(<argument pos:start="69:49" pos:end="69:51"><expr pos:start="69:49" pos:end="69:51"><name pos:start="69:49" pos:end="69:51">env</name></expr></argument>, <argument pos:start="69:54" pos:end="69:63"><expr pos:start="69:54" pos:end="69:63"><name pos:start="69:54" pos:end="69:63">virt_page2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="71:17" pos:end="73:31"><if pos:start="71:17" pos:end="73:31">if <condition pos:start="71:20" pos:end="71:51">(<expr pos:start="71:21" pos:end="71:50"><name pos:start="71:21" pos:end="71:36"><name pos:start="71:21" pos:end="71:22">tb</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:33">page_addr</name><index pos:start="71:34" pos:end="71:36">[<expr pos:start="71:35" pos:end="71:35"><literal type="number" pos:start="71:35" pos:end="71:35">1</literal></expr>]</index></name> <operator pos:start="71:38" pos:end="71:39">==</operator> <name pos:start="71:41" pos:end="71:50">phys_page2</name></expr>)</condition><block type="pseudo" pos:start="73:21" pos:end="73:31"><block_content pos:start="73:21" pos:end="73:31">

                    <goto pos:start="73:21" pos:end="73:31">goto <name pos:start="73:26" pos:end="73:30">found</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="75:15" pos:end="79:13">else <block pos:start="75:20" pos:end="79:13">{<block_content pos:start="77:17" pos:end="77:27">

                <goto pos:start="77:17" pos:end="77:27">goto <name pos:start="77:22" pos:end="77:26">found</name>;</goto>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:35"><expr pos:start="83:9" pos:end="83:34"><name pos:start="83:9" pos:end="83:12">ptb1</name> <operator pos:start="83:14" pos:end="83:14">=</operator> <operator pos:start="83:16" pos:end="83:16">&amp;</operator><name pos:start="83:17" pos:end="83:34"><name pos:start="83:17" pos:end="83:18">tb</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:34">phys_hash_next</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>

 <label pos:start="87:2" pos:end="87:11"><name pos:start="87:2" pos:end="87:10">not_found</name>:</label>

    <comment type="block" pos:start="89:5" pos:end="89:64">/* if no translated code available, then translate it now */</comment>

    <expr_stmt pos:start="91:5" pos:end="91:22"><expr pos:start="91:5" pos:end="91:21"><name pos:start="91:5" pos:end="91:6">tb</name> <operator pos:start="91:8" pos:end="91:8">=</operator> <call pos:start="91:10" pos:end="91:21"><name pos:start="91:10" pos:end="91:17">tb_alloc</name><argument_list pos:start="91:18" pos:end="91:21">(<argument pos:start="91:19" pos:end="91:20"><expr pos:start="91:19" pos:end="91:20"><name pos:start="91:19" pos:end="91:20">pc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="107:5"><if pos:start="93:5" pos:end="107:5">if <condition pos:start="93:8" pos:end="93:12">(<expr pos:start="93:9" pos:end="93:11"><operator pos:start="93:9" pos:end="93:9">!</operator><name pos:start="93:10" pos:end="93:11">tb</name></expr>)</condition> <block pos:start="93:14" pos:end="107:5">{<block_content pos:start="97:9" pos:end="105:32">

        <comment type="block" pos:start="95:9" pos:end="95:32">/* flush must be done */</comment>

        <expr_stmt pos:start="97:9" pos:end="97:22"><expr pos:start="97:9" pos:end="97:21"><call pos:start="97:9" pos:end="97:21"><name pos:start="97:9" pos:end="97:16">tb_flush</name><argument_list pos:start="97:17" pos:end="97:21">(<argument pos:start="97:18" pos:end="97:20"><expr pos:start="97:18" pos:end="97:20"><name pos:start="97:18" pos:end="97:20">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="99:9" pos:end="99:39">/* cannot fail at this point */</comment>

        <expr_stmt pos:start="101:9" pos:end="101:26"><expr pos:start="101:9" pos:end="101:25"><name pos:start="101:9" pos:end="101:10">tb</name> <operator pos:start="101:12" pos:end="101:12">=</operator> <call pos:start="101:14" pos:end="101:25"><name pos:start="101:14" pos:end="101:21">tb_alloc</name><argument_list pos:start="101:22" pos:end="101:25">(<argument pos:start="101:23" pos:end="101:24"><expr pos:start="101:23" pos:end="101:24"><name pos:start="101:23" pos:end="101:24">pc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="103:9" pos:end="103:57">/* don't forget to invalidate previous TB info */</comment>

        <expr_stmt pos:start="105:9" pos:end="105:32"><expr pos:start="105:9" pos:end="105:31"><name pos:start="105:9" pos:end="105:27">tb_invalidated_flag</name> <operator pos:start="105:29" pos:end="105:29">=</operator> <literal type="number" pos:start="105:31" pos:end="105:31">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:26"><expr pos:start="109:5" pos:end="109:25"><name pos:start="109:5" pos:end="109:10">tc_ptr</name> <operator pos:start="109:12" pos:end="109:12">=</operator> <name pos:start="109:14" pos:end="109:25">code_gen_ptr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:24"><expr pos:start="111:5" pos:end="111:23"><name pos:start="111:5" pos:end="111:14"><name pos:start="111:5" pos:end="111:6">tb</name><operator pos:start="111:7" pos:end="111:8">-&gt;</operator><name pos:start="111:9" pos:end="111:14">tc_ptr</name></name> <operator pos:start="111:16" pos:end="111:16">=</operator> <name pos:start="111:18" pos:end="111:23">tc_ptr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:26"><expr pos:start="113:5" pos:end="113:25"><name pos:start="113:5" pos:end="113:15"><name pos:start="113:5" pos:end="113:6">tb</name><operator pos:start="113:7" pos:end="113:8">-&gt;</operator><name pos:start="113:9" pos:end="113:15">cs_base</name></name> <operator pos:start="113:17" pos:end="113:17">=</operator> <name pos:start="113:19" pos:end="113:25">cs_base</name></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:22"><expr pos:start="115:5" pos:end="115:21"><name pos:start="115:5" pos:end="115:13"><name pos:start="115:5" pos:end="115:6">tb</name><operator pos:start="115:7" pos:end="115:8">-&gt;</operator><name pos:start="115:9" pos:end="115:13">flags</name></name> <operator pos:start="115:15" pos:end="115:15">=</operator> <name pos:start="115:17" pos:end="115:21">flags</name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:61"><expr pos:start="117:5" pos:end="117:60"><call pos:start="117:5" pos:end="117:60"><name pos:start="117:5" pos:end="117:16">cpu_gen_code</name><argument_list pos:start="117:17" pos:end="117:60">(<argument pos:start="117:18" pos:end="117:20"><expr pos:start="117:18" pos:end="117:20"><name pos:start="117:18" pos:end="117:20">env</name></expr></argument>, <argument pos:start="117:23" pos:end="117:24"><expr pos:start="117:23" pos:end="117:24"><name pos:start="117:23" pos:end="117:24">tb</name></expr></argument>, <argument pos:start="117:27" pos:end="117:43"><expr pos:start="117:27" pos:end="117:43"><name pos:start="117:27" pos:end="117:43">CODE_GEN_MAX_SIZE</name></expr></argument>, <argument pos:start="117:46" pos:end="117:59"><expr pos:start="117:46" pos:end="117:59"><operator pos:start="117:46" pos:end="117:46">&amp;</operator><name pos:start="117:47" pos:end="117:59">code_gen_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:120"><expr pos:start="119:5" pos:end="119:119"><name pos:start="119:5" pos:end="119:16">code_gen_ptr</name> <operator pos:start="119:18" pos:end="119:18">=</operator> <operator pos:start="119:20" pos:end="119:20">(</operator><name pos:start="119:21" pos:end="119:24">void</name> <operator pos:start="119:26" pos:end="119:26">*</operator><operator pos:start="119:27" pos:end="119:27">)</operator><operator pos:start="119:28" pos:end="119:28">(</operator><operator pos:start="119:29" pos:end="119:29">(</operator><operator pos:start="119:30" pos:end="119:30">(</operator><name pos:start="119:31" pos:end="119:38">unsigned</name> <name pos:start="119:40" pos:end="119:43">long</name><operator pos:start="119:44" pos:end="119:44">)</operator><name pos:start="119:45" pos:end="119:56">code_gen_ptr</name> <operator pos:start="119:58" pos:end="119:58">+</operator> <name pos:start="119:60" pos:end="119:72">code_gen_size</name> <operator pos:start="119:74" pos:end="119:74">+</operator> <name pos:start="119:76" pos:end="119:89">CODE_GEN_ALIGN</name> <operator pos:start="119:91" pos:end="119:91">-</operator> <literal type="number" pos:start="119:93" pos:end="119:93">1</literal><operator pos:start="119:94" pos:end="119:94">)</operator> <operator pos:start="119:96" pos:end="119:96">&amp;</operator> <operator pos:start="119:98" pos:end="119:98">~</operator><operator pos:start="119:99" pos:end="119:99">(</operator><name pos:start="119:100" pos:end="119:113">CODE_GEN_ALIGN</name> <operator pos:start="119:115" pos:end="119:115">-</operator> <literal type="number" pos:start="119:117" pos:end="119:117">1</literal><operator pos:start="119:118" pos:end="119:118">)</operator><operator pos:start="119:119" pos:end="119:119">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="123:5" pos:end="123:35">/* check next page if needed */</comment>

    <expr_stmt pos:start="125:5" pos:end="125:56"><expr pos:start="125:5" pos:end="125:55"><name pos:start="125:5" pos:end="125:14">virt_page2</name> <operator pos:start="125:16" pos:end="125:16">=</operator> <operator pos:start="125:18" pos:end="125:18">(</operator><name pos:start="125:19" pos:end="125:20">pc</name> <operator pos:start="125:22" pos:end="125:22">+</operator> <name pos:start="125:24" pos:end="125:31"><name pos:start="125:24" pos:end="125:25">tb</name><operator pos:start="125:26" pos:end="125:27">-&gt;</operator><name pos:start="125:28" pos:end="125:31">size</name></name> <operator pos:start="125:33" pos:end="125:33">-</operator> <literal type="number" pos:start="125:35" pos:end="125:35">1</literal><operator pos:start="125:36" pos:end="125:36">)</operator> <operator pos:start="125:38" pos:end="125:38">&amp;</operator> <name pos:start="125:40" pos:end="125:55">TARGET_PAGE_MASK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:20"><expr pos:start="127:5" pos:end="127:19"><name pos:start="127:5" pos:end="127:14">phys_page2</name> <operator pos:start="127:16" pos:end="127:16">=</operator> <operator pos:start="127:18" pos:end="127:18">-</operator><literal type="number" pos:start="127:19" pos:end="127:19">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="129:5" pos:end="133:5"><if pos:start="129:5" pos:end="133:5">if <condition pos:start="129:8" pos:end="129:46">(<expr pos:start="129:9" pos:end="129:45"><operator pos:start="129:9" pos:end="129:9">(</operator><name pos:start="129:10" pos:end="129:11">pc</name> <operator pos:start="129:13" pos:end="129:13">&amp;</operator> <name pos:start="129:15" pos:end="129:30">TARGET_PAGE_MASK</name><operator pos:start="129:31" pos:end="129:31">)</operator> <operator pos:start="129:33" pos:end="129:34">!=</operator> <name pos:start="129:36" pos:end="129:45">virt_page2</name></expr>)</condition> <block pos:start="129:48" pos:end="133:5">{<block_content pos:start="131:9" pos:end="131:57">

        <expr_stmt pos:start="131:9" pos:end="131:57"><expr pos:start="131:9" pos:end="131:56"><name pos:start="131:9" pos:end="131:18">phys_page2</name> <operator pos:start="131:20" pos:end="131:20">=</operator> <call pos:start="131:22" pos:end="131:56"><name pos:start="131:22" pos:end="131:39">get_phys_addr_code</name><argument_list pos:start="131:40" pos:end="131:56">(<argument pos:start="131:41" pos:end="131:43"><expr pos:start="131:41" pos:end="131:43"><name pos:start="131:41" pos:end="131:43">env</name></expr></argument>, <argument pos:start="131:46" pos:end="131:55"><expr pos:start="131:46" pos:end="131:55"><name pos:start="131:46" pos:end="131:55">virt_page2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:42"><expr pos:start="135:5" pos:end="135:41"><call pos:start="135:5" pos:end="135:41"><name pos:start="135:5" pos:end="135:16">tb_link_phys</name><argument_list pos:start="135:17" pos:end="135:41">(<argument pos:start="135:18" pos:end="135:19"><expr pos:start="135:18" pos:end="135:19"><name pos:start="135:18" pos:end="135:19">tb</name></expr></argument>, <argument pos:start="135:22" pos:end="135:28"><expr pos:start="135:22" pos:end="135:28"><name pos:start="135:22" pos:end="135:28">phys_pc</name></expr></argument>, <argument pos:start="135:31" pos:end="135:40"><expr pos:start="135:31" pos:end="135:40"><name pos:start="135:31" pos:end="135:40">phys_page2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



 <label pos:start="139:2" pos:end="139:7"><name pos:start="139:2" pos:end="139:6">found</name>:</label>

    <comment type="block" pos:start="141:5" pos:end="141:52">/* we add the TB in the virtual pc hash table */</comment>

    <expr_stmt pos:start="143:5" pos:end="143:55"><expr pos:start="143:5" pos:end="143:54"><name pos:start="143:5" pos:end="143:49"><name pos:start="143:5" pos:end="143:7">env</name><operator pos:start="143:8" pos:end="143:9">-&gt;</operator><name pos:start="143:10" pos:end="143:21">tb_jmp_cache</name><index pos:start="143:22" pos:end="143:49">[<expr pos:start="143:23" pos:end="143:48"><call pos:start="143:23" pos:end="143:48"><name pos:start="143:23" pos:end="143:44">tb_jmp_cache_hash_func</name><argument_list pos:start="143:45" pos:end="143:48">(<argument pos:start="143:46" pos:end="143:47"><expr pos:start="143:46" pos:end="143:47"><name pos:start="143:46" pos:end="143:47">pc</name></expr></argument>)</argument_list></call></expr>]</index></name> <operator pos:start="143:51" pos:end="143:51">=</operator> <name pos:start="143:53" pos:end="143:54">tb</name></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:26"><expr pos:start="145:5" pos:end="145:25"><call pos:start="145:5" pos:end="145:25"><name pos:start="145:5" pos:end="145:15">spin_unlock</name><argument_list pos:start="145:16" pos:end="145:25">(<argument pos:start="145:17" pos:end="145:24"><expr pos:start="145:17" pos:end="145:24"><operator pos:start="145:17" pos:end="145:17">&amp;</operator><name pos:start="145:18" pos:end="145:24">tb_lock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="147:5" pos:end="147:14">return <expr pos:start="147:12" pos:end="147:13"><name pos:start="147:12" pos:end="147:13">tb</name></expr>;</return>

</block_content>}</block></function>
</unit>
