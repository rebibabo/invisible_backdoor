<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11111.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">ioreq_runio_qemu_sync</name><parameter_list pos:start="1:33" pos:end="1:53">(<parameter pos:start="1:34" pos:end="1:52"><decl pos:start="1:34" pos:end="1:52"><type pos:start="1:34" pos:end="1:52"><name pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:39">struct</name> <name pos:start="1:41" pos:end="1:45">ioreq</name></name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">ioreq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="127:1">{<block_content pos:start="5:5" pos:end="125:14">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:20">XenBlkDev</name></name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:28">blkdev</name> <init pos:start="5:30" pos:end="5:44">= <expr pos:start="5:32" pos:end="5:44"><name pos:start="5:32" pos:end="5:44"><name pos:start="5:32" pos:end="5:36">ioreq</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:44">blkdev</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:13"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:13">rc</name></decl>, <decl pos:start="7:16" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:18">len</name> <init pos:start="7:20" pos:end="7:22">= <expr pos:start="7:22" pos:end="7:22"><literal type="number" pos:start="7:22" pos:end="7:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:9">off_t</name></type> <name pos:start="9:11" pos:end="9:13">pos</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:17"><if pos:start="13:5" pos:end="15:17">if <condition pos:start="13:8" pos:end="13:57">(<expr pos:start="13:9" pos:end="13:56"><name pos:start="13:9" pos:end="13:30"><name pos:start="13:9" pos:end="13:13">ioreq</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:18">req</name><operator pos:start="13:19" pos:end="13:19">.</operator><name pos:start="13:20" pos:end="13:30">nr_segments</name></name> <operator pos:start="13:32" pos:end="13:33">&amp;&amp;</operator> <call pos:start="13:35" pos:end="13:50"><name pos:start="13:35" pos:end="13:43">ioreq_map</name><argument_list pos:start="13:44" pos:end="13:50">(<argument pos:start="13:45" pos:end="13:49"><expr pos:start="13:45" pos:end="13:49"><name pos:start="13:45" pos:end="13:49">ioreq</name></expr></argument>)</argument_list></call> <operator pos:start="13:52" pos:end="13:53">==</operator> <operator pos:start="13:55" pos:end="13:55">-</operator><literal type="number" pos:start="13:56" pos:end="13:56">1</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:17"><block_content pos:start="15:9" pos:end="15:17">

	<goto pos:start="15:9" pos:end="15:17">goto <name pos:start="15:14" pos:end="15:16">err</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="17:5" pos:end="19:31"><if pos:start="17:5" pos:end="19:31">if <condition pos:start="17:8" pos:end="17:23">(<expr pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:13">ioreq</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:22">presync</name></name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:31"><block_content pos:start="19:9" pos:end="19:31">

	<expr_stmt pos:start="19:9" pos:end="19:31"><expr pos:start="19:9" pos:end="19:30"><call pos:start="19:9" pos:end="19:30"><name pos:start="19:9" pos:end="19:18">bdrv_flush</name><argument_list pos:start="19:19" pos:end="19:30">(<argument pos:start="19:20" pos:end="19:29"><expr pos:start="19:20" pos:end="19:29"><name pos:start="19:20" pos:end="19:29"><name pos:start="19:20" pos:end="19:25">blkdev</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:29">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <switch pos:start="23:5" pos:end="101:5">switch <condition pos:start="23:12" pos:end="23:33">(<expr pos:start="23:13" pos:end="23:32"><name pos:start="23:13" pos:end="23:32"><name pos:start="23:13" pos:end="23:17">ioreq</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:22">req</name><operator pos:start="23:23" pos:end="23:23">.</operator><name pos:start="23:24" pos:end="23:32">operation</name></name></expr>)</condition> <block pos:start="23:35" pos:end="101:5">{<block_content pos:start="25:5" pos:end="99:17">

    <case pos:start="25:5" pos:end="25:23">case <expr pos:start="25:10" pos:end="25:22"><name pos:start="25:10" pos:end="25:22">BLKIF_OP_READ</name></expr>:</case>

	<expr_stmt pos:start="27:9" pos:end="27:27"><expr pos:start="27:9" pos:end="27:26"><name pos:start="27:9" pos:end="27:11">pos</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:26"><name pos:start="27:15" pos:end="27:19">ioreq</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:26">start</name></name></expr>;</expr_stmt>

	<for pos:start="29:9" pos:end="53:9">for <control pos:start="29:13" pos:end="29:43">(<init pos:start="29:14" pos:end="29:19"><expr pos:start="29:14" pos:end="29:18"><name pos:start="29:14" pos:end="29:14">i</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>;</init> <condition pos:start="29:21" pos:end="29:38"><expr pos:start="29:21" pos:end="29:37"><name pos:start="29:21" pos:end="29:21">i</name> <operator pos:start="29:23" pos:end="29:23">&lt;</operator> <name pos:start="29:25" pos:end="29:37"><name pos:start="29:25" pos:end="29:29">ioreq</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:32">v</name><operator pos:start="29:33" pos:end="29:33">.</operator><name pos:start="29:34" pos:end="29:37">niov</name></name></expr>;</condition> <incr pos:start="29:40" pos:end="29:42"><expr pos:start="29:40" pos:end="29:42"><name pos:start="29:40" pos:end="29:40">i</name><operator pos:start="29:41" pos:end="29:42">++</operator></expr></incr>)</control> <block pos:start="29:45" pos:end="53:9">{<block_content pos:start="31:13" pos:end="51:43">

	    <expr_stmt pos:start="31:13" pos:end="35:65"><expr pos:start="31:13" pos:end="35:64"><name pos:start="31:13" pos:end="31:14">rc</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <call pos:start="31:18" pos:end="35:64"><name pos:start="31:18" pos:end="31:26">bdrv_read</name><argument_list pos:start="31:27" pos:end="35:64">(<argument pos:start="31:28" pos:end="31:37"><expr pos:start="31:28" pos:end="31:37"><name pos:start="31:28" pos:end="31:37"><name pos:start="31:28" pos:end="31:33">blkdev</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:37">bs</name></name></expr></argument>, <argument pos:start="31:40" pos:end="31:55"><expr pos:start="31:40" pos:end="31:55"><name pos:start="31:40" pos:end="31:42">pos</name> <operator pos:start="31:44" pos:end="31:44">/</operator> <name pos:start="31:46" pos:end="31:55">BLOCK_SIZE</name></expr></argument>,

			   <argument pos:start="33:28" pos:end="33:51"><expr pos:start="33:28" pos:end="33:51"><name pos:start="33:28" pos:end="33:42"><name pos:start="33:28" pos:end="33:32">ioreq</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:35">v</name><operator pos:start="33:36" pos:end="33:36">.</operator><name pos:start="33:37" pos:end="33:39">iov</name><index pos:start="33:40" pos:end="33:42">[<expr pos:start="33:41" pos:end="33:41"><name pos:start="33:41" pos:end="33:41">i</name></expr>]</index></name><operator pos:start="33:43" pos:end="33:43">.</operator><name pos:start="33:44" pos:end="33:51">iov_base</name></expr></argument>,

			   <argument pos:start="35:28" pos:end="35:63"><expr pos:start="35:28" pos:end="35:63"><name pos:start="35:28" pos:end="35:42"><name pos:start="35:28" pos:end="35:32">ioreq</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:35">v</name><operator pos:start="35:36" pos:end="35:36">.</operator><name pos:start="35:37" pos:end="35:39">iov</name><index pos:start="35:40" pos:end="35:42">[<expr pos:start="35:41" pos:end="35:41"><name pos:start="35:41" pos:end="35:41">i</name></expr>]</index></name><operator pos:start="35:43" pos:end="35:43">.</operator><name pos:start="35:44" pos:end="35:50">iov_len</name> <operator pos:start="35:52" pos:end="35:52">/</operator> <name pos:start="35:54" pos:end="35:63">BLOCK_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <if_stmt pos:start="37:13" pos:end="47:13"><if pos:start="37:13" pos:end="47:13">if <condition pos:start="37:16" pos:end="37:24">(<expr pos:start="37:17" pos:end="37:23"><name pos:start="37:17" pos:end="37:18">rc</name> <operator pos:start="37:20" pos:end="37:21">!=</operator> <literal type="number" pos:start="37:23" pos:end="37:23">0</literal></expr>)</condition> <block pos:start="37:26" pos:end="47:13">{<block_content pos:start="39:17" pos:end="45:25">

		<expr_stmt pos:start="39:17" pos:end="43:55"><expr pos:start="39:17" pos:end="43:54"><call pos:start="39:17" pos:end="43:54"><name pos:start="39:17" pos:end="39:29">xen_be_printf</name><argument_list pos:start="39:30" pos:end="43:54">(<argument pos:start="39:31" pos:end="39:45"><expr pos:start="39:31" pos:end="39:45"><operator pos:start="39:31" pos:end="39:31">&amp;</operator><name pos:start="39:32" pos:end="39:45"><name pos:start="39:32" pos:end="39:37">blkdev</name><operator pos:start="39:38" pos:end="39:39">-&gt;</operator><name pos:start="39:40" pos:end="39:45">xendev</name></name></expr></argument>, <argument pos:start="39:48" pos:end="39:48"><expr pos:start="39:48" pos:end="39:48"><literal type="number" pos:start="39:48" pos:end="39:48">0</literal></expr></argument>, <argument pos:start="39:51" pos:end="39:80"><expr pos:start="39:51" pos:end="39:80"><literal type="string" pos:start="39:51" pos:end="39:80">"rd I/O error (%p, len %zd)\n"</literal></expr></argument>,

			      <argument pos:start="41:31" pos:end="41:54"><expr pos:start="41:31" pos:end="41:54"><name pos:start="41:31" pos:end="41:45"><name pos:start="41:31" pos:end="41:35">ioreq</name><operator pos:start="41:36" pos:end="41:37">-&gt;</operator><name pos:start="41:38" pos:end="41:38">v</name><operator pos:start="41:39" pos:end="41:39">.</operator><name pos:start="41:40" pos:end="41:42">iov</name><index pos:start="41:43" pos:end="41:45">[<expr pos:start="41:44" pos:end="41:44"><name pos:start="41:44" pos:end="41:44">i</name></expr>]</index></name><operator pos:start="41:46" pos:end="41:46">.</operator><name pos:start="41:47" pos:end="41:54">iov_base</name></expr></argument>,

			      <argument pos:start="43:31" pos:end="43:53"><expr pos:start="43:31" pos:end="43:53"><name pos:start="43:31" pos:end="43:45"><name pos:start="43:31" pos:end="43:35">ioreq</name><operator pos:start="43:36" pos:end="43:37">-&gt;</operator><name pos:start="43:38" pos:end="43:38">v</name><operator pos:start="43:39" pos:end="43:39">.</operator><name pos:start="43:40" pos:end="43:42">iov</name><index pos:start="43:43" pos:end="43:45">[<expr pos:start="43:44" pos:end="43:44"><name pos:start="43:44" pos:end="43:44">i</name></expr>]</index></name><operator pos:start="43:46" pos:end="43:46">.</operator><name pos:start="43:47" pos:end="43:53">iov_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<goto pos:start="45:17" pos:end="45:25">goto <name pos:start="45:22" pos:end="45:24">err</name>;</goto>

	    </block_content>}</block></if></if_stmt>

	    <expr_stmt pos:start="49:13" pos:end="49:43"><expr pos:start="49:13" pos:end="49:42"><name pos:start="49:13" pos:end="49:15">len</name> <operator pos:start="49:17" pos:end="49:18">+=</operator> <name pos:start="49:20" pos:end="49:34"><name pos:start="49:20" pos:end="49:24">ioreq</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:27">v</name><operator pos:start="49:28" pos:end="49:28">.</operator><name pos:start="49:29" pos:end="49:31">iov</name><index pos:start="49:32" pos:end="49:34">[<expr pos:start="49:33" pos:end="49:33"><name pos:start="49:33" pos:end="49:33">i</name></expr>]</index></name><operator pos:start="49:35" pos:end="49:35">.</operator><name pos:start="49:36" pos:end="49:42">iov_len</name></expr>;</expr_stmt>

	    <expr_stmt pos:start="51:13" pos:end="51:43"><expr pos:start="51:13" pos:end="51:42"><name pos:start="51:13" pos:end="51:15">pos</name> <operator pos:start="51:17" pos:end="51:18">+=</operator> <name pos:start="51:20" pos:end="51:34"><name pos:start="51:20" pos:end="51:24">ioreq</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:27">v</name><operator pos:start="51:28" pos:end="51:28">.</operator><name pos:start="51:29" pos:end="51:31">iov</name><index pos:start="51:32" pos:end="51:34">[<expr pos:start="51:33" pos:end="51:33"><name pos:start="51:33" pos:end="51:33">i</name></expr>]</index></name><operator pos:start="51:35" pos:end="51:35">.</operator><name pos:start="51:36" pos:end="51:42">iov_len</name></expr>;</expr_stmt>

	</block_content>}</block></for>

	<break pos:start="55:9" pos:end="55:14">break;</break>

    <case pos:start="57:5" pos:end="57:24">case <expr pos:start="57:10" pos:end="57:23"><name pos:start="57:10" pos:end="57:23">BLKIF_OP_WRITE</name></expr>:</case>

    <case pos:start="59:5" pos:end="59:32">case <expr pos:start="59:10" pos:end="59:31"><name pos:start="59:10" pos:end="59:31">BLKIF_OP_WRITE_BARRIER</name></expr>:</case>

        <if_stmt pos:start="61:9" pos:end="63:18"><if pos:start="61:9" pos:end="63:18">if <condition pos:start="61:12" pos:end="61:36">(<expr pos:start="61:13" pos:end="61:35"><operator pos:start="61:13" pos:end="61:13">!</operator><name pos:start="61:14" pos:end="61:35"><name pos:start="61:14" pos:end="61:18">ioreq</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:23">req</name><operator pos:start="61:24" pos:end="61:24">.</operator><name pos:start="61:25" pos:end="61:35">nr_segments</name></name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:18"><block_content pos:start="63:13" pos:end="63:18">

            <break pos:start="63:13" pos:end="63:18">break;</break></block_content></block></if></if_stmt>

	<expr_stmt pos:start="65:9" pos:end="65:27"><expr pos:start="65:9" pos:end="65:26"><name pos:start="65:9" pos:end="65:11">pos</name> <operator pos:start="65:13" pos:end="65:13">=</operator> <name pos:start="65:15" pos:end="65:26"><name pos:start="65:15" pos:end="65:19">ioreq</name><operator pos:start="65:20" pos:end="65:21">-&gt;</operator><name pos:start="65:22" pos:end="65:26">start</name></name></expr>;</expr_stmt>

	<for pos:start="67:9" pos:end="91:9">for <control pos:start="67:13" pos:end="67:43">(<init pos:start="67:14" pos:end="67:19"><expr pos:start="67:14" pos:end="67:18"><name pos:start="67:14" pos:end="67:14">i</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <literal type="number" pos:start="67:18" pos:end="67:18">0</literal></expr>;</init> <condition pos:start="67:21" pos:end="67:38"><expr pos:start="67:21" pos:end="67:37"><name pos:start="67:21" pos:end="67:21">i</name> <operator pos:start="67:23" pos:end="67:23">&lt;</operator> <name pos:start="67:25" pos:end="67:37"><name pos:start="67:25" pos:end="67:29">ioreq</name><operator pos:start="67:30" pos:end="67:31">-&gt;</operator><name pos:start="67:32" pos:end="67:32">v</name><operator pos:start="67:33" pos:end="67:33">.</operator><name pos:start="67:34" pos:end="67:37">niov</name></name></expr>;</condition> <incr pos:start="67:40" pos:end="67:42"><expr pos:start="67:40" pos:end="67:42"><name pos:start="67:40" pos:end="67:40">i</name><operator pos:start="67:41" pos:end="67:42">++</operator></expr></incr>)</control> <block pos:start="67:45" pos:end="91:9">{<block_content pos:start="69:13" pos:end="89:43">

	    <expr_stmt pos:start="69:13" pos:end="73:66"><expr pos:start="69:13" pos:end="73:65"><name pos:start="69:13" pos:end="69:14">rc</name> <operator pos:start="69:16" pos:end="69:16">=</operator> <call pos:start="69:18" pos:end="73:65"><name pos:start="69:18" pos:end="69:27">bdrv_write</name><argument_list pos:start="69:28" pos:end="73:65">(<argument pos:start="69:29" pos:end="69:38"><expr pos:start="69:29" pos:end="69:38"><name pos:start="69:29" pos:end="69:38"><name pos:start="69:29" pos:end="69:34">blkdev</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:38">bs</name></name></expr></argument>, <argument pos:start="69:41" pos:end="69:56"><expr pos:start="69:41" pos:end="69:56"><name pos:start="69:41" pos:end="69:43">pos</name> <operator pos:start="69:45" pos:end="69:45">/</operator> <name pos:start="69:47" pos:end="69:56">BLOCK_SIZE</name></expr></argument>,

			    <argument pos:start="71:29" pos:end="71:52"><expr pos:start="71:29" pos:end="71:52"><name pos:start="71:29" pos:end="71:43"><name pos:start="71:29" pos:end="71:33">ioreq</name><operator pos:start="71:34" pos:end="71:35">-&gt;</operator><name pos:start="71:36" pos:end="71:36">v</name><operator pos:start="71:37" pos:end="71:37">.</operator><name pos:start="71:38" pos:end="71:40">iov</name><index pos:start="71:41" pos:end="71:43">[<expr pos:start="71:42" pos:end="71:42"><name pos:start="71:42" pos:end="71:42">i</name></expr>]</index></name><operator pos:start="71:44" pos:end="71:44">.</operator><name pos:start="71:45" pos:end="71:52">iov_base</name></expr></argument>,

			    <argument pos:start="73:29" pos:end="73:64"><expr pos:start="73:29" pos:end="73:64"><name pos:start="73:29" pos:end="73:43"><name pos:start="73:29" pos:end="73:33">ioreq</name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:36">v</name><operator pos:start="73:37" pos:end="73:37">.</operator><name pos:start="73:38" pos:end="73:40">iov</name><index pos:start="73:41" pos:end="73:43">[<expr pos:start="73:42" pos:end="73:42"><name pos:start="73:42" pos:end="73:42">i</name></expr>]</index></name><operator pos:start="73:44" pos:end="73:44">.</operator><name pos:start="73:45" pos:end="73:51">iov_len</name> <operator pos:start="73:53" pos:end="73:53">/</operator> <name pos:start="73:55" pos:end="73:64">BLOCK_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <if_stmt pos:start="75:13" pos:end="85:13"><if pos:start="75:13" pos:end="85:13">if <condition pos:start="75:16" pos:end="75:24">(<expr pos:start="75:17" pos:end="75:23"><name pos:start="75:17" pos:end="75:18">rc</name> <operator pos:start="75:20" pos:end="75:21">!=</operator> <literal type="number" pos:start="75:23" pos:end="75:23">0</literal></expr>)</condition> <block pos:start="75:26" pos:end="85:13">{<block_content pos:start="77:17" pos:end="83:25">

		<expr_stmt pos:start="77:17" pos:end="81:55"><expr pos:start="77:17" pos:end="81:54"><call pos:start="77:17" pos:end="81:54"><name pos:start="77:17" pos:end="77:29">xen_be_printf</name><argument_list pos:start="77:30" pos:end="81:54">(<argument pos:start="77:31" pos:end="77:45"><expr pos:start="77:31" pos:end="77:45"><operator pos:start="77:31" pos:end="77:31">&amp;</operator><name pos:start="77:32" pos:end="77:45"><name pos:start="77:32" pos:end="77:37">blkdev</name><operator pos:start="77:38" pos:end="77:39">-&gt;</operator><name pos:start="77:40" pos:end="77:45">xendev</name></name></expr></argument>, <argument pos:start="77:48" pos:end="77:48"><expr pos:start="77:48" pos:end="77:48"><literal type="number" pos:start="77:48" pos:end="77:48">0</literal></expr></argument>, <argument pos:start="77:51" pos:end="77:80"><expr pos:start="77:51" pos:end="77:80"><literal type="string" pos:start="77:51" pos:end="77:80">"wr I/O error (%p, len %zd)\n"</literal></expr></argument>,

			      <argument pos:start="79:31" pos:end="79:54"><expr pos:start="79:31" pos:end="79:54"><name pos:start="79:31" pos:end="79:45"><name pos:start="79:31" pos:end="79:35">ioreq</name><operator pos:start="79:36" pos:end="79:37">-&gt;</operator><name pos:start="79:38" pos:end="79:38">v</name><operator pos:start="79:39" pos:end="79:39">.</operator><name pos:start="79:40" pos:end="79:42">iov</name><index pos:start="79:43" pos:end="79:45">[<expr pos:start="79:44" pos:end="79:44"><name pos:start="79:44" pos:end="79:44">i</name></expr>]</index></name><operator pos:start="79:46" pos:end="79:46">.</operator><name pos:start="79:47" pos:end="79:54">iov_base</name></expr></argument>,

			      <argument pos:start="81:31" pos:end="81:53"><expr pos:start="81:31" pos:end="81:53"><name pos:start="81:31" pos:end="81:45"><name pos:start="81:31" pos:end="81:35">ioreq</name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:38">v</name><operator pos:start="81:39" pos:end="81:39">.</operator><name pos:start="81:40" pos:end="81:42">iov</name><index pos:start="81:43" pos:end="81:45">[<expr pos:start="81:44" pos:end="81:44"><name pos:start="81:44" pos:end="81:44">i</name></expr>]</index></name><operator pos:start="81:46" pos:end="81:46">.</operator><name pos:start="81:47" pos:end="81:53">iov_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<goto pos:start="83:17" pos:end="83:25">goto <name pos:start="83:22" pos:end="83:24">err</name>;</goto>

	    </block_content>}</block></if></if_stmt>

	    <expr_stmt pos:start="87:13" pos:end="87:43"><expr pos:start="87:13" pos:end="87:42"><name pos:start="87:13" pos:end="87:15">len</name> <operator pos:start="87:17" pos:end="87:18">+=</operator> <name pos:start="87:20" pos:end="87:34"><name pos:start="87:20" pos:end="87:24">ioreq</name><operator pos:start="87:25" pos:end="87:26">-&gt;</operator><name pos:start="87:27" pos:end="87:27">v</name><operator pos:start="87:28" pos:end="87:28">.</operator><name pos:start="87:29" pos:end="87:31">iov</name><index pos:start="87:32" pos:end="87:34">[<expr pos:start="87:33" pos:end="87:33"><name pos:start="87:33" pos:end="87:33">i</name></expr>]</index></name><operator pos:start="87:35" pos:end="87:35">.</operator><name pos:start="87:36" pos:end="87:42">iov_len</name></expr>;</expr_stmt>

	    <expr_stmt pos:start="89:13" pos:end="89:43"><expr pos:start="89:13" pos:end="89:42"><name pos:start="89:13" pos:end="89:15">pos</name> <operator pos:start="89:17" pos:end="89:18">+=</operator> <name pos:start="89:20" pos:end="89:34"><name pos:start="89:20" pos:end="89:24">ioreq</name><operator pos:start="89:25" pos:end="89:26">-&gt;</operator><name pos:start="89:27" pos:end="89:27">v</name><operator pos:start="89:28" pos:end="89:28">.</operator><name pos:start="89:29" pos:end="89:31">iov</name><index pos:start="89:32" pos:end="89:34">[<expr pos:start="89:33" pos:end="89:33"><name pos:start="89:33" pos:end="89:33">i</name></expr>]</index></name><operator pos:start="89:35" pos:end="89:35">.</operator><name pos:start="89:36" pos:end="89:42">iov_len</name></expr>;</expr_stmt>

	</block_content>}</block></for>

	<break pos:start="93:9" pos:end="93:14">break;</break>

    <default pos:start="95:5" pos:end="95:12">default:</default>

	<comment type="block" pos:start="97:9" pos:end="97:72">/* unknown operation (shouldn't happen -- parse catches this) */</comment>

	<goto pos:start="99:9" pos:end="99:17">goto <name pos:start="99:14" pos:end="99:16">err</name>;</goto>

    </block_content>}</block></switch>



    <if_stmt pos:start="105:5" pos:end="107:31"><if pos:start="105:5" pos:end="107:31">if <condition pos:start="105:8" pos:end="105:24">(<expr pos:start="105:9" pos:end="105:23"><name pos:start="105:9" pos:end="105:23"><name pos:start="105:9" pos:end="105:13">ioreq</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:23">postsync</name></name></expr>)</condition><block type="pseudo" pos:start="107:9" pos:end="107:31"><block_content pos:start="107:9" pos:end="107:31">

	<expr_stmt pos:start="107:9" pos:end="107:31"><expr pos:start="107:9" pos:end="107:30"><call pos:start="107:9" pos:end="107:30"><name pos:start="107:9" pos:end="107:18">bdrv_flush</name><argument_list pos:start="107:19" pos:end="107:30">(<argument pos:start="107:20" pos:end="107:29"><expr pos:start="107:20" pos:end="107:29"><name pos:start="107:20" pos:end="107:29"><name pos:start="107:20" pos:end="107:25">blkdev</name><operator pos:start="107:26" pos:end="107:27">-&gt;</operator><name pos:start="107:28" pos:end="107:29">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:35"><expr pos:start="109:5" pos:end="109:34"><name pos:start="109:5" pos:end="109:17"><name pos:start="109:5" pos:end="109:9">ioreq</name><operator pos:start="109:10" pos:end="109:11">-&gt;</operator><name pos:start="109:12" pos:end="109:17">status</name></name> <operator pos:start="109:19" pos:end="109:19">=</operator> <name pos:start="109:21" pos:end="109:34">BLKIF_RSP_OKAY</name></expr>;</expr_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:23"><expr pos:start="113:5" pos:end="113:22"><call pos:start="113:5" pos:end="113:22"><name pos:start="113:5" pos:end="113:15">ioreq_unmap</name><argument_list pos:start="113:16" pos:end="113:22">(<argument pos:start="113:17" pos:end="113:21"><expr pos:start="113:17" pos:end="113:21"><name pos:start="113:17" pos:end="113:21">ioreq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:24"><expr pos:start="115:5" pos:end="115:23"><call pos:start="115:5" pos:end="115:23"><name pos:start="115:5" pos:end="115:16">ioreq_finish</name><argument_list pos:start="115:17" pos:end="115:23">(<argument pos:start="115:18" pos:end="115:22"><expr pos:start="115:18" pos:end="115:22"><name pos:start="115:18" pos:end="115:22">ioreq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="117:5" pos:end="117:13">return <expr pos:start="117:12" pos:end="117:12"><literal type="number" pos:start="117:12" pos:end="117:12">0</literal></expr>;</return>



<label pos:start="121:1" pos:end="121:4"><name pos:start="121:1" pos:end="121:3">err</name>:</label>

    <expr_stmt pos:start="123:5" pos:end="123:36"><expr pos:start="123:5" pos:end="123:35"><name pos:start="123:5" pos:end="123:17"><name pos:start="123:5" pos:end="123:9">ioreq</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:17">status</name></name> <operator pos:start="123:19" pos:end="123:19">=</operator> <name pos:start="123:21" pos:end="123:35">BLKIF_RSP_ERROR</name></expr>;</expr_stmt>

    <return pos:start="125:5" pos:end="125:14">return <expr pos:start="125:12" pos:end="125:13"><operator pos:start="125:12" pos:end="125:12">-</operator><literal type="number" pos:start="125:13" pos:end="125:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
