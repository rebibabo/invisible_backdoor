<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3589.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:23"><name pos:start="1:1" pos:end="1:3">int</name> <name pos:start="1:5" pos:end="1:23">attribute_align_arg</name></type> <name pos:start="1:25" pos:end="1:45">avcodec_decode_audio2</name><parameter_list pos:start="1:46" pos:end="5:52">(<parameter pos:start="1:47" pos:end="1:67"><decl pos:start="1:47" pos:end="1:67"><type pos:start="1:47" pos:end="1:67"><name pos:start="1:47" pos:end="1:60">AVCodecContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:67">avctx</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:85"><decl pos:start="1:70" pos:end="1:85"><type pos:start="1:70" pos:end="1:85"><name pos:start="1:70" pos:end="1:76">int16_t</name> <modifier pos:start="1:78" pos:end="1:78">*</modifier></type><name pos:start="1:79" pos:end="1:85">samples</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:44"><decl pos:start="3:26" pos:end="3:44"><type pos:start="3:26" pos:end="3:44"><name pos:start="3:26" pos:end="3:28">int</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:44">frame_size_ptr</name></decl></parameter>,

                         <parameter pos:start="5:26" pos:end="5:37"><decl pos:start="5:26" pos:end="5:37"><type pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:32">uint8_t</name> <modifier pos:start="5:34" pos:end="5:34">*</modifier></type><name pos:start="5:35" pos:end="5:37">buf</name></decl></parameter>, <parameter pos:start="5:40" pos:end="5:51"><decl pos:start="5:40" pos:end="5:51"><type pos:start="5:40" pos:end="5:51"><name pos:start="5:40" pos:end="5:42">int</name></type> <name pos:start="5:44" pos:end="5:51">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="55:1">{<block_content pos:start="9:5" pos:end="53:15">

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="51:5"><if pos:start="13:5" pos:end="45:5">if<condition pos:start="13:7" pos:end="13:66">(<expr pos:start="13:8" pos:end="13:65"><operator pos:start="13:8" pos:end="13:8">(</operator><name pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:13">avctx</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:20">codec</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:34">capabilities</name></name> <operator pos:start="13:36" pos:end="13:36">&amp;</operator> <name pos:start="13:38" pos:end="13:52">CODEC_CAP_DELAY</name><operator pos:start="13:53" pos:end="13:53">)</operator> <operator pos:start="13:55" pos:end="13:56">||</operator> <name pos:start="13:58" pos:end="13:65">buf_size</name></expr>)</condition><block pos:start="13:67" pos:end="45:5">{<block_content pos:start="17:9" pos:end="43:30">

        <comment type="line" pos:start="15:9" pos:end="15:111">//FIXME remove the check below _after_ ensuring that all audio check that the available space is enough</comment>

        <if_stmt pos:start="17:9" pos:end="23:9"><if pos:start="17:9" pos:end="23:9">if<condition pos:start="17:11" pos:end="17:58">(<expr pos:start="17:12" pos:end="17:57"><operator pos:start="17:12" pos:end="17:12">*</operator><name pos:start="17:13" pos:end="17:26">frame_size_ptr</name> <operator pos:start="17:28" pos:end="17:28">&lt;</operator> <name pos:start="17:30" pos:end="17:57">AVCODEC_MAX_AUDIO_FRAME_SIZE</name></expr>)</condition><block pos:start="17:59" pos:end="23:9">{<block_content pos:start="19:13" pos:end="21:22">

            <expr_stmt pos:start="19:13" pos:end="19:94"><expr pos:start="19:13" pos:end="19:93"><call pos:start="19:13" pos:end="19:93"><name pos:start="19:13" pos:end="19:18">av_log</name><argument_list pos:start="19:19" pos:end="19:93">(<argument pos:start="19:20" pos:end="19:24"><expr pos:start="19:20" pos:end="19:24"><name pos:start="19:20" pos:end="19:24">avctx</name></expr></argument>, <argument pos:start="19:27" pos:end="19:38"><expr pos:start="19:27" pos:end="19:38"><name pos:start="19:27" pos:end="19:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="19:41" pos:end="19:92"><expr pos:start="19:41" pos:end="19:92"><literal type="string" pos:start="19:41" pos:end="19:92">"buffer smaller than AVCODEC_MAX_AUDIO_FRAME_SIZE\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="21:13" pos:end="21:22">return <expr pos:start="21:20" pos:end="21:21"><operator pos:start="21:20" pos:end="21:20">-</operator><literal type="number" pos:start="21:21" pos:end="21:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="25:9" pos:end="35:9"><if pos:start="25:9" pos:end="35:9">if<condition pos:start="25:11" pos:end="29:35">(<expr pos:start="25:12" pos:end="29:34"><operator pos:start="25:12" pos:end="25:12">*</operator><name pos:start="25:13" pos:end="25:26">frame_size_ptr</name> <operator pos:start="25:28" pos:end="25:28">&lt;</operator> <name pos:start="25:30" pos:end="25:47">FF_MIN_BUFFER_SIZE</name> <operator pos:start="25:49" pos:end="25:50">||</operator>

        <operator pos:start="27:9" pos:end="27:9">*</operator><name pos:start="27:10" pos:end="27:23">frame_size_ptr</name> <operator pos:start="27:25" pos:end="27:25">&lt;</operator> <name pos:start="27:27" pos:end="27:41"><name pos:start="27:27" pos:end="27:31">avctx</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:41">channels</name></name> <operator pos:start="27:43" pos:end="27:43">*</operator> <name pos:start="27:45" pos:end="27:61"><name pos:start="27:45" pos:end="27:49">avctx</name><operator pos:start="27:50" pos:end="27:51">-&gt;</operator><name pos:start="27:52" pos:end="27:61">frame_size</name></name> <operator pos:start="27:63" pos:end="27:63">*</operator> <sizeof pos:start="27:65" pos:end="27:79">sizeof<argument_list pos:start="27:71" pos:end="27:79">(<argument pos:start="27:72" pos:end="27:78"><expr pos:start="27:72" pos:end="27:78"><name pos:start="27:72" pos:end="27:78">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="27:81" pos:end="27:82">||</operator>

        <operator pos:start="29:9" pos:end="29:9">*</operator><name pos:start="29:10" pos:end="29:23">frame_size_ptr</name> <operator pos:start="29:25" pos:end="29:25">&lt;</operator> <name pos:start="29:27" pos:end="29:34">buf_size</name></expr>)</condition><block pos:start="29:36" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:22">

            <expr_stmt pos:start="31:13" pos:end="31:82"><expr pos:start="31:13" pos:end="31:81"><call pos:start="31:13" pos:end="31:81"><name pos:start="31:13" pos:end="31:18">av_log</name><argument_list pos:start="31:19" pos:end="31:81">(<argument pos:start="31:20" pos:end="31:24"><expr pos:start="31:20" pos:end="31:24"><name pos:start="31:20" pos:end="31:24">avctx</name></expr></argument>, <argument pos:start="31:27" pos:end="31:38"><expr pos:start="31:27" pos:end="31:38"><name pos:start="31:27" pos:end="31:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:41" pos:end="31:63"><expr pos:start="31:41" pos:end="31:63"><literal type="string" pos:start="31:41" pos:end="31:63">"buffer %d too small\n"</literal></expr></argument>, <argument pos:start="31:66" pos:end="31:80"><expr pos:start="31:66" pos:end="31:80"><operator pos:start="31:66" pos:end="31:66">*</operator><name pos:start="31:67" pos:end="31:80">frame_size_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="33:13" pos:end="33:22">return <expr pos:start="33:20" pos:end="33:21"><operator pos:start="33:20" pos:end="33:20">-</operator><literal type="number" pos:start="33:21" pos:end="33:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="39:9" pos:end="41:47"><expr pos:start="39:9" pos:end="41:46"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="41:46"><name pos:start="39:15" pos:end="39:34"><name pos:start="39:15" pos:end="39:19">avctx</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:26">codec</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:34">decode</name></name><argument_list pos:start="39:35" pos:end="41:46">(<argument pos:start="39:36" pos:end="39:40"><expr pos:start="39:36" pos:end="39:40"><name pos:start="39:36" pos:end="39:40">avctx</name></expr></argument>, <argument pos:start="39:43" pos:end="39:49"><expr pos:start="39:43" pos:end="39:49"><name pos:start="39:43" pos:end="39:49">samples</name></expr></argument>, <argument pos:start="39:52" pos:end="39:65"><expr pos:start="39:52" pos:end="39:65"><name pos:start="39:52" pos:end="39:65">frame_size_ptr</name></expr></argument>,

                                <argument pos:start="41:33" pos:end="41:35"><expr pos:start="41:33" pos:end="41:35"><name pos:start="41:33" pos:end="41:35">buf</name></expr></argument>, <argument pos:start="41:38" pos:end="41:45"><expr pos:start="41:38" pos:end="41:45"><name pos:start="41:38" pos:end="41:45">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:30"><expr pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:13">avctx</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:27">frame_number</name></name><operator pos:start="43:28" pos:end="43:29">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="45:6" pos:end="51:5">else<block pos:start="45:10" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:26">

        <expr_stmt pos:start="47:9" pos:end="47:15"><expr pos:start="47:9" pos:end="47:14"><name pos:start="47:9" pos:end="47:11">ret</name><operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:26"><expr pos:start="49:9" pos:end="49:25"><operator pos:start="49:9" pos:end="49:9">*</operator><name pos:start="49:10" pos:end="49:23">frame_size_ptr</name><operator pos:start="49:24" pos:end="49:24">=</operator><literal type="number" pos:start="49:25" pos:end="49:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="53:5" pos:end="53:15">return <expr pos:start="53:12" pos:end="53:14"><name pos:start="53:12" pos:end="53:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
