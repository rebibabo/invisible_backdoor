<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3261.c" pos:tabs="8"><function pos:start="1:1" pos:end="147:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">hmp_info_spice</name><parameter_list pos:start="1:20" pos:end="1:53">(<parameter pos:start="1:21" pos:end="1:32"><decl pos:start="1:21" pos:end="1:32"><type pos:start="1:21" pos:end="1:32"><name pos:start="1:21" pos:end="1:27">Monitor</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:32">mon</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:52"><decl pos:start="1:35" pos:end="1:52"><type pos:start="1:35" pos:end="1:52"><specifier pos:start="1:35" pos:end="1:39">const</specifier> <name pos:start="1:41" pos:end="1:45">QDict</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">qdict</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="147:1">{<block_content pos:start="5:5" pos:end="145:30">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">SpiceChannelList</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:26">chan</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">SpiceInfo</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:19">info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:28">channel_name</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="45:6"><decl pos:start="11:5" pos:end="45:5"><type pos:start="11:5" pos:end="11:22"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier> <specifier pos:start="11:18" pos:end="11:22">const</specifier></type> <name pos:start="11:24" pos:end="11:38"><name pos:start="11:24" pos:end="11:36">channel_names</name><index pos:start="11:37" pos:end="11:38">[]</index></name> <init pos:start="11:40" pos:end="45:5">= <expr pos:start="11:42" pos:end="45:5"><block pos:start="11:42" pos:end="45:5">{

        <expr pos:start="13:9" pos:end="13:37"><index pos:start="13:9" pos:end="13:28">[<expr pos:start="13:10" pos:end="13:27"><name pos:start="13:10" pos:end="13:27">SPICE_CHANNEL_MAIN</name></expr>]</index> <operator pos:start="13:30" pos:end="13:30">=</operator> <literal type="string" pos:start="13:32" pos:end="13:37">"main"</literal></expr>,

        <expr pos:start="15:9" pos:end="15:43"><index pos:start="15:9" pos:end="15:31">[<expr pos:start="15:10" pos:end="15:30"><name pos:start="15:10" pos:end="15:30">SPICE_CHANNEL_DISPLAY</name></expr>]</index> <operator pos:start="15:33" pos:end="15:33">=</operator> <literal type="string" pos:start="15:35" pos:end="15:43">"display"</literal></expr>,

        <expr pos:start="17:9" pos:end="17:41"><index pos:start="17:9" pos:end="17:30">[<expr pos:start="17:10" pos:end="17:29"><name pos:start="17:10" pos:end="17:29">SPICE_CHANNEL_INPUTS</name></expr>]</index> <operator pos:start="17:32" pos:end="17:32">=</operator> <literal type="string" pos:start="17:34" pos:end="17:41">"inputs"</literal></expr>,

        <expr pos:start="19:9" pos:end="19:41"><index pos:start="19:9" pos:end="19:30">[<expr pos:start="19:10" pos:end="19:29"><name pos:start="19:10" pos:end="19:29">SPICE_CHANNEL_CURSOR</name></expr>]</index> <operator pos:start="19:32" pos:end="19:32">=</operator> <literal type="string" pos:start="19:34" pos:end="19:41">"cursor"</literal></expr>,

        <expr pos:start="21:9" pos:end="21:45"><index pos:start="21:9" pos:end="21:32">[<expr pos:start="21:10" pos:end="21:31"><name pos:start="21:10" pos:end="21:31">SPICE_CHANNEL_PLAYBACK</name></expr>]</index> <operator pos:start="21:34" pos:end="21:34">=</operator> <literal type="string" pos:start="21:36" pos:end="21:45">"playback"</literal></expr>,

        <expr pos:start="23:9" pos:end="23:41"><index pos:start="23:9" pos:end="23:30">[<expr pos:start="23:10" pos:end="23:29"><name pos:start="23:10" pos:end="23:29">SPICE_CHANNEL_RECORD</name></expr>]</index> <operator pos:start="23:32" pos:end="23:32">=</operator> <literal type="string" pos:start="23:34" pos:end="23:41">"record"</literal></expr>,

        <expr pos:start="25:9" pos:end="25:41"><index pos:start="25:9" pos:end="25:30">[<expr pos:start="25:10" pos:end="25:29"><name pos:start="25:10" pos:end="25:29">SPICE_CHANNEL_TUNNEL</name></expr>]</index> <operator pos:start="25:32" pos:end="25:32">=</operator> <literal type="string" pos:start="25:34" pos:end="25:41">"tunnel"</literal></expr>,

        <expr pos:start="27:9" pos:end="27:47"><index pos:start="27:9" pos:end="27:33">[<expr pos:start="27:10" pos:end="27:32"><name pos:start="27:10" pos:end="27:32">SPICE_CHANNEL_SMARTCARD</name></expr>]</index> <operator pos:start="27:35" pos:end="27:35">=</operator> <literal type="string" pos:start="27:37" pos:end="27:47">"smartcard"</literal></expr>,

        <expr pos:start="29:9" pos:end="29:45"><index pos:start="29:9" pos:end="29:32">[<expr pos:start="29:10" pos:end="29:31"><name pos:start="29:10" pos:end="29:31">SPICE_CHANNEL_USBREDIR</name></expr>]</index> <operator pos:start="29:34" pos:end="29:34">=</operator> <literal type="string" pos:start="29:36" pos:end="29:45">"usbredir"</literal></expr>,

        <expr pos:start="31:9" pos:end="31:37"><index pos:start="31:9" pos:end="31:28">[<expr pos:start="31:10" pos:end="31:27"><name pos:start="31:10" pos:end="31:27">SPICE_CHANNEL_PORT</name></expr>]</index> <operator pos:start="31:30" pos:end="31:30">=</operator> <literal type="string" pos:start="31:32" pos:end="31:37">"port"</literal></expr>,

<cpp:if pos:start="33:1" pos:end="33:5">#<cpp:directive pos:start="33:2" pos:end="33:3">if</cpp:directive> <expr pos:start="33:5" pos:end="33:5"><literal type="number" pos:start="33:5" pos:end="33:5">0</literal></expr></cpp:if>

        <comment type="block" pos:start="35:9" pos:end="39:66">/* minimum spice-protocol is 0.12.3, webdav was added in 0.12.7,

         * no easy way to #ifdef (SPICE_CHANNEL_* is a enum).  Disable

         * as quick fix for build failures with older versions. */</comment>

        [SPICE_CHANNEL_WEBDAV] = "webdav",

<cpp:endif pos:start="43:1" pos:end="43:6">#<cpp:directive pos:start="43:2" pos:end="43:6">endif</cpp:directive></cpp:endif>

    }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:33"><expr pos:start="49:5" pos:end="49:32"><name pos:start="49:5" pos:end="49:8">info</name> <operator pos:start="49:10" pos:end="49:10">=</operator> <call pos:start="49:12" pos:end="49:32"><name pos:start="49:12" pos:end="49:26">qmp_query_spice</name><argument_list pos:start="49:27" pos:end="49:32">(<argument pos:start="49:28" pos:end="49:31"><expr pos:start="49:28" pos:end="49:31"><name pos:start="49:28" pos:end="49:31">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:23">(<expr pos:start="53:9" pos:end="53:22"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:22"><name pos:start="53:10" pos:end="53:13">info</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:22">enabled</name></name></expr>)</condition> <block pos:start="53:25" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:17">

        <expr_stmt pos:start="55:9" pos:end="55:50"><expr pos:start="55:9" pos:end="55:49"><call pos:start="55:9" pos:end="55:49"><name pos:start="55:9" pos:end="55:22">monitor_printf</name><argument_list pos:start="55:23" pos:end="55:49">(<argument pos:start="55:24" pos:end="55:26"><expr pos:start="55:24" pos:end="55:26"><name pos:start="55:24" pos:end="55:26">mon</name></expr></argument>, <argument pos:start="55:29" pos:end="55:48"><expr pos:start="55:29" pos:end="55:48"><literal type="string" pos:start="55:29" pos:end="55:48">"Server: disabled\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="57:9" pos:end="57:17">goto <name pos:start="57:14" pos:end="57:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:37"><expr pos:start="63:5" pos:end="63:36"><call pos:start="63:5" pos:end="63:36"><name pos:start="63:5" pos:end="63:18">monitor_printf</name><argument_list pos:start="63:19" pos:end="63:36">(<argument pos:start="63:20" pos:end="63:22"><expr pos:start="63:20" pos:end="63:22"><name pos:start="63:20" pos:end="63:22">mon</name></expr></argument>, <argument pos:start="63:25" pos:end="63:35"><expr pos:start="63:25" pos:end="63:35"><literal type="string" pos:start="63:25" pos:end="63:35">"Server:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:23">(<expr pos:start="65:9" pos:end="65:22"><name pos:start="65:9" pos:end="65:22"><name pos:start="65:9" pos:end="65:12">info</name><operator pos:start="65:13" pos:end="65:14">-&gt;</operator><name pos:start="65:15" pos:end="65:22">has_port</name></name></expr>)</condition> <block pos:start="65:25" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:47">

        <expr_stmt pos:start="67:9" pos:end="69:47"><expr pos:start="67:9" pos:end="69:46"><call pos:start="67:9" pos:end="69:46"><name pos:start="67:9" pos:end="67:22">monitor_printf</name><argument_list pos:start="67:23" pos:end="69:46">(<argument pos:start="67:24" pos:end="67:26"><expr pos:start="67:24" pos:end="67:26"><name pos:start="67:24" pos:end="67:26">mon</name></expr></argument>, <argument pos:start="67:29" pos:end="67:60"><expr pos:start="67:29" pos:end="67:60"><literal type="string" pos:start="67:29" pos:end="67:48">"     address: %s:%"</literal> <name pos:start="67:50" pos:end="67:55">PRId64</name> <literal type="string" pos:start="67:57" pos:end="67:60">"\n"</literal></expr></argument>,

                       <argument pos:start="69:24" pos:end="69:33"><expr pos:start="69:24" pos:end="69:33"><name pos:start="69:24" pos:end="69:33"><name pos:start="69:24" pos:end="69:27">info</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:33">host</name></name></expr></argument>, <argument pos:start="69:36" pos:end="69:45"><expr pos:start="69:36" pos:end="69:45"><name pos:start="69:36" pos:end="69:45"><name pos:start="69:36" pos:end="69:39">info</name><operator pos:start="69:40" pos:end="69:41">-&gt;</operator><name pos:start="69:42" pos:end="69:45">port</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if <condition pos:start="73:8" pos:end="73:27">(<expr pos:start="73:9" pos:end="73:26"><name pos:start="73:9" pos:end="73:26"><name pos:start="73:9" pos:end="73:12">info</name><operator pos:start="73:13" pos:end="73:14">-&gt;</operator><name pos:start="73:15" pos:end="73:26">has_tls_port</name></name></expr>)</condition> <block pos:start="73:29" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:51">

        <expr_stmt pos:start="75:9" pos:end="77:51"><expr pos:start="75:9" pos:end="77:50"><call pos:start="75:9" pos:end="77:50"><name pos:start="75:9" pos:end="75:22">monitor_printf</name><argument_list pos:start="75:23" pos:end="77:50">(<argument pos:start="75:24" pos:end="75:26"><expr pos:start="75:24" pos:end="75:26"><name pos:start="75:24" pos:end="75:26">mon</name></expr></argument>, <argument pos:start="75:29" pos:end="75:66"><expr pos:start="75:29" pos:end="75:66"><literal type="string" pos:start="75:29" pos:end="75:48">"     address: %s:%"</literal> <name pos:start="75:50" pos:end="75:55">PRId64</name> <literal type="string" pos:start="75:57" pos:end="75:66">" [tls]\n"</literal></expr></argument>,

                       <argument pos:start="77:24" pos:end="77:33"><expr pos:start="77:24" pos:end="77:33"><name pos:start="77:24" pos:end="77:33"><name pos:start="77:24" pos:end="77:27">info</name><operator pos:start="77:28" pos:end="77:29">-&gt;</operator><name pos:start="77:30" pos:end="77:33">host</name></name></expr></argument>, <argument pos:start="77:36" pos:end="77:49"><expr pos:start="77:36" pos:end="77:49"><name pos:start="77:36" pos:end="77:49"><name pos:start="77:36" pos:end="77:39">info</name><operator pos:start="77:40" pos:end="77:41">-&gt;</operator><name pos:start="77:42" pos:end="77:49">tls_port</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="83:54"><expr pos:start="81:5" pos:end="83:53"><call pos:start="81:5" pos:end="83:53"><name pos:start="81:5" pos:end="81:18">monitor_printf</name><argument_list pos:start="81:19" pos:end="83:53">(<argument pos:start="81:20" pos:end="81:22"><expr pos:start="81:20" pos:end="81:22"><name pos:start="81:20" pos:end="81:22">mon</name></expr></argument>, <argument pos:start="81:25" pos:end="81:44"><expr pos:start="81:25" pos:end="81:44"><literal type="string" pos:start="81:25" pos:end="81:44">"    migrated: %s\n"</literal></expr></argument>,

                   <argument pos:start="83:20" pos:end="83:52"><expr pos:start="83:20" pos:end="83:52"><ternary pos:start="83:20" pos:end="83:52"><condition pos:start="83:20" pos:end="83:35"><expr pos:start="83:20" pos:end="83:33"><name pos:start="83:20" pos:end="83:33"><name pos:start="83:20" pos:end="83:23">info</name><operator pos:start="83:24" pos:end="83:25">-&gt;</operator><name pos:start="83:26" pos:end="83:33">migrated</name></name></expr> ?</condition><then pos:start="83:37" pos:end="83:42"> <expr pos:start="83:37" pos:end="83:42"><literal type="string" pos:start="83:37" pos:end="83:42">"true"</literal></expr> </then><else pos:start="83:44" pos:end="83:52">: <expr pos:start="83:46" pos:end="83:52"><literal type="string" pos:start="83:46" pos:end="83:52">"false"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:58"><expr pos:start="85:5" pos:end="85:57"><call pos:start="85:5" pos:end="85:57"><name pos:start="85:5" pos:end="85:18">monitor_printf</name><argument_list pos:start="85:19" pos:end="85:57">(<argument pos:start="85:20" pos:end="85:22"><expr pos:start="85:20" pos:end="85:22"><name pos:start="85:20" pos:end="85:22">mon</name></expr></argument>, <argument pos:start="85:25" pos:end="85:44"><expr pos:start="85:25" pos:end="85:44"><literal type="string" pos:start="85:25" pos:end="85:44">"        auth: %s\n"</literal></expr></argument>, <argument pos:start="85:47" pos:end="85:56"><expr pos:start="85:47" pos:end="85:56"><name pos:start="85:47" pos:end="85:56"><name pos:start="85:47" pos:end="85:50">info</name><operator pos:start="85:51" pos:end="85:52">-&gt;</operator><name pos:start="85:53" pos:end="85:56">auth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:70"><expr pos:start="87:5" pos:end="87:69"><call pos:start="87:5" pos:end="87:69"><name pos:start="87:5" pos:end="87:18">monitor_printf</name><argument_list pos:start="87:19" pos:end="87:69">(<argument pos:start="87:20" pos:end="87:22"><expr pos:start="87:20" pos:end="87:22"><name pos:start="87:20" pos:end="87:22">mon</name></expr></argument>, <argument pos:start="87:25" pos:end="87:44"><expr pos:start="87:25" pos:end="87:44"><literal type="string" pos:start="87:25" pos:end="87:44">"    compiled: %s\n"</literal></expr></argument>, <argument pos:start="87:47" pos:end="87:68"><expr pos:start="87:47" pos:end="87:68"><name pos:start="87:47" pos:end="87:68"><name pos:start="87:47" pos:end="87:50">info</name><operator pos:start="87:51" pos:end="87:52">-&gt;</operator><name pos:start="87:53" pos:end="87:68">compiled_version</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="91:65"><expr pos:start="89:5" pos:end="91:64"><call pos:start="89:5" pos:end="91:64"><name pos:start="89:5" pos:end="89:18">monitor_printf</name><argument_list pos:start="89:19" pos:end="91:64">(<argument pos:start="89:20" pos:end="89:22"><expr pos:start="89:20" pos:end="89:22"><name pos:start="89:20" pos:end="89:22">mon</name></expr></argument>, <argument pos:start="89:25" pos:end="89:44"><expr pos:start="89:25" pos:end="89:44"><literal type="string" pos:start="89:25" pos:end="89:44">"  mouse-mode: %s\n"</literal></expr></argument>,

                   <argument pos:start="91:20" pos:end="91:63"><expr pos:start="91:20" pos:end="91:63"><name pos:start="91:20" pos:end="91:63"><name pos:start="91:20" pos:end="91:45">SpiceQueryMouseMode_lookup</name><index pos:start="91:46" pos:end="91:63">[<expr pos:start="91:47" pos:end="91:62"><name pos:start="91:47" pos:end="91:62"><name pos:start="91:47" pos:end="91:50">info</name><operator pos:start="91:51" pos:end="91:52">-&gt;</operator><name pos:start="91:53" pos:end="91:62">mouse_mode</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="95:5" pos:end="139:5"><if pos:start="95:5" pos:end="99:5">if <condition pos:start="95:8" pos:end="95:54">(<expr pos:start="95:9" pos:end="95:53"><operator pos:start="95:9" pos:end="95:9">!</operator><name pos:start="95:10" pos:end="95:27"><name pos:start="95:10" pos:end="95:13">info</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:27">has_channels</name></name> <operator pos:start="95:29" pos:end="95:30">||</operator> <name pos:start="95:32" pos:end="95:45"><name pos:start="95:32" pos:end="95:35">info</name><operator pos:start="95:36" pos:end="95:37">-&gt;</operator><name pos:start="95:38" pos:end="95:45">channels</name></name> <operator pos:start="95:47" pos:end="95:48">==</operator> <name pos:start="95:50" pos:end="95:53">NULL</name></expr>)</condition> <block pos:start="95:56" pos:end="99:5">{<block_content pos:start="97:9" pos:end="97:48">

        <expr_stmt pos:start="97:9" pos:end="97:48"><expr pos:start="97:9" pos:end="97:47"><call pos:start="97:9" pos:end="97:47"><name pos:start="97:9" pos:end="97:22">monitor_printf</name><argument_list pos:start="97:23" pos:end="97:47">(<argument pos:start="97:24" pos:end="97:26"><expr pos:start="97:24" pos:end="97:26"><name pos:start="97:24" pos:end="97:26">mon</name></expr></argument>, <argument pos:start="97:29" pos:end="97:46"><expr pos:start="97:29" pos:end="97:46"><literal type="string" pos:start="97:29" pos:end="97:46">"Channels: none\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="99:7" pos:end="139:5">else <block pos:start="99:12" pos:end="139:5">{<block_content pos:start="101:9" pos:end="137:9">

        <for pos:start="101:9" pos:end="137:9">for <control pos:start="101:13" pos:end="101:60">(<init pos:start="101:14" pos:end="101:35"><expr pos:start="101:14" pos:end="101:34"><name pos:start="101:14" pos:end="101:17">chan</name> <operator pos:start="101:19" pos:end="101:19">=</operator> <name pos:start="101:21" pos:end="101:34"><name pos:start="101:21" pos:end="101:24">info</name><operator pos:start="101:25" pos:end="101:26">-&gt;</operator><name pos:start="101:27" pos:end="101:34">channels</name></name></expr>;</init> <condition pos:start="101:37" pos:end="101:41"><expr pos:start="101:37" pos:end="101:40"><name pos:start="101:37" pos:end="101:40">chan</name></expr>;</condition> <incr pos:start="101:43" pos:end="101:59"><expr pos:start="101:43" pos:end="101:59"><name pos:start="101:43" pos:end="101:46">chan</name> <operator pos:start="101:48" pos:end="101:48">=</operator> <name pos:start="101:50" pos:end="101:59"><name pos:start="101:50" pos:end="101:53">chan</name><operator pos:start="101:54" pos:end="101:55">-&gt;</operator><name pos:start="101:56" pos:end="101:59">next</name></name></expr></incr>)</control> <block pos:start="101:62" pos:end="137:9">{<block_content pos:start="103:13" pos:end="135:73">

            <expr_stmt pos:start="103:13" pos:end="103:46"><expr pos:start="103:13" pos:end="103:45"><call pos:start="103:13" pos:end="103:45"><name pos:start="103:13" pos:end="103:26">monitor_printf</name><argument_list pos:start="103:27" pos:end="103:45">(<argument pos:start="103:28" pos:end="103:30"><expr pos:start="103:28" pos:end="103:30"><name pos:start="103:28" pos:end="103:30">mon</name></expr></argument>, <argument pos:start="103:33" pos:end="103:44"><expr pos:start="103:33" pos:end="103:44"><literal type="string" pos:start="103:33" pos:end="103:44">"Channel:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="109:61"><expr pos:start="105:13" pos:end="109:60"><call pos:start="105:13" pos:end="109:60"><name pos:start="105:13" pos:end="105:26">monitor_printf</name><argument_list pos:start="105:27" pos:end="109:60">(<argument pos:start="105:28" pos:end="105:30"><expr pos:start="105:28" pos:end="105:30"><name pos:start="105:28" pos:end="105:30">mon</name></expr></argument>, <argument pos:start="105:33" pos:end="105:57"><expr pos:start="105:33" pos:end="105:57"><literal type="string" pos:start="105:33" pos:end="105:57">"     address: %s:%s%s\n"</literal></expr></argument>,

                           <argument pos:start="107:28" pos:end="107:50"><expr pos:start="107:28" pos:end="107:50"><name pos:start="107:28" pos:end="107:50"><name pos:start="107:28" pos:end="107:31">chan</name><operator pos:start="107:32" pos:end="107:33">-&gt;</operator><name pos:start="107:34" pos:end="107:38">value</name><operator pos:start="107:39" pos:end="107:40">-&gt;</operator><name pos:start="107:41" pos:end="107:44">base</name><operator pos:start="107:45" pos:end="107:46">-&gt;</operator><name pos:start="107:47" pos:end="107:50">host</name></name></expr></argument>, <argument pos:start="107:53" pos:end="107:75"><expr pos:start="107:53" pos:end="107:75"><name pos:start="107:53" pos:end="107:75"><name pos:start="107:53" pos:end="107:56">chan</name><operator pos:start="107:57" pos:end="107:58">-&gt;</operator><name pos:start="107:59" pos:end="107:63">value</name><operator pos:start="107:64" pos:end="107:65">-&gt;</operator><name pos:start="107:66" pos:end="107:69">base</name><operator pos:start="107:70" pos:end="107:71">-&gt;</operator><name pos:start="107:72" pos:end="107:75">port</name></name></expr></argument>,

                           <argument pos:start="109:28" pos:end="109:59"><expr pos:start="109:28" pos:end="109:59"><ternary pos:start="109:28" pos:end="109:59"><condition pos:start="109:28" pos:end="109:45"><expr pos:start="109:28" pos:end="109:43"><name pos:start="109:28" pos:end="109:43"><name pos:start="109:28" pos:end="109:31">chan</name><operator pos:start="109:32" pos:end="109:33">-&gt;</operator><name pos:start="109:34" pos:end="109:38">value</name><operator pos:start="109:39" pos:end="109:40">-&gt;</operator><name pos:start="109:41" pos:end="109:43">tls</name></name></expr> ?</condition><then pos:start="109:47" pos:end="109:54"> <expr pos:start="109:47" pos:end="109:54"><literal type="string" pos:start="109:47" pos:end="109:54">" [tls]"</literal></expr> </then><else pos:start="109:56" pos:end="109:59">: <expr pos:start="109:58" pos:end="109:59"><literal type="string" pos:start="109:58" pos:end="109:59">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="113:55"><expr pos:start="111:13" pos:end="113:54"><call pos:start="111:13" pos:end="113:54"><name pos:start="111:13" pos:end="111:26">monitor_printf</name><argument_list pos:start="111:27" pos:end="113:54">(<argument pos:start="111:28" pos:end="111:30"><expr pos:start="111:28" pos:end="111:30"><name pos:start="111:28" pos:end="111:30">mon</name></expr></argument>, <argument pos:start="111:33" pos:end="111:61"><expr pos:start="111:33" pos:end="111:61"><literal type="string" pos:start="111:33" pos:end="111:49">"     session: %"</literal> <name pos:start="111:51" pos:end="111:56">PRId64</name> <literal type="string" pos:start="111:58" pos:end="111:61">"\n"</literal></expr></argument>,

                           <argument pos:start="113:28" pos:end="113:53"><expr pos:start="113:28" pos:end="113:53"><name pos:start="113:28" pos:end="113:53"><name pos:start="113:28" pos:end="113:31">chan</name><operator pos:start="113:32" pos:end="113:33">-&gt;</operator><name pos:start="113:34" pos:end="113:38">value</name><operator pos:start="113:39" pos:end="113:40">-&gt;</operator><name pos:start="113:41" pos:end="113:53">connection_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="117:79"><expr pos:start="115:13" pos:end="117:78"><call pos:start="115:13" pos:end="117:78"><name pos:start="115:13" pos:end="115:26">monitor_printf</name><argument_list pos:start="115:27" pos:end="117:78">(<argument pos:start="115:28" pos:end="115:30"><expr pos:start="115:28" pos:end="115:30"><name pos:start="115:28" pos:end="115:30">mon</name></expr></argument>, <argument pos:start="115:33" pos:end="115:73"><expr pos:start="115:33" pos:end="115:73"><literal type="string" pos:start="115:33" pos:end="115:49">"     channel: %"</literal> <name pos:start="115:51" pos:end="115:56">PRId64</name> <literal type="string" pos:start="115:58" pos:end="115:61">":%"</literal> <name pos:start="115:63" pos:end="115:68">PRId64</name> <literal type="string" pos:start="115:70" pos:end="115:73">"\n"</literal></expr></argument>,

                           <argument pos:start="117:28" pos:end="117:52"><expr pos:start="117:28" pos:end="117:52"><name pos:start="117:28" pos:end="117:52"><name pos:start="117:28" pos:end="117:31">chan</name><operator pos:start="117:32" pos:end="117:33">-&gt;</operator><name pos:start="117:34" pos:end="117:38">value</name><operator pos:start="117:39" pos:end="117:40">-&gt;</operator><name pos:start="117:41" pos:end="117:52">channel_type</name></name></expr></argument>, <argument pos:start="117:55" pos:end="117:77"><expr pos:start="117:55" pos:end="117:77"><name pos:start="117:55" pos:end="117:77"><name pos:start="117:55" pos:end="117:58">chan</name><operator pos:start="117:59" pos:end="117:60">-&gt;</operator><name pos:start="117:61" pos:end="117:65">value</name><operator pos:start="117:66" pos:end="117:67">-&gt;</operator><name pos:start="117:68" pos:end="117:77">channel_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="121:13" pos:end="121:37"><expr pos:start="121:13" pos:end="121:36"><name pos:start="121:13" pos:end="121:24">channel_name</name> <operator pos:start="121:26" pos:end="121:26">=</operator> <literal type="string" pos:start="121:28" pos:end="121:36">"unknown"</literal></expr>;</expr_stmt>

            <if_stmt pos:start="123:13" pos:end="131:13"><if pos:start="123:13" pos:end="131:13">if <condition pos:start="123:16" pos:end="127:57">(<expr pos:start="123:17" pos:end="127:56"><name pos:start="123:17" pos:end="123:41"><name pos:start="123:17" pos:end="123:20">chan</name><operator pos:start="123:21" pos:end="123:22">-&gt;</operator><name pos:start="123:23" pos:end="123:27">value</name><operator pos:start="123:28" pos:end="123:29">-&gt;</operator><name pos:start="123:30" pos:end="123:41">channel_type</name></name> <operator pos:start="123:43" pos:end="123:43">&gt;</operator> <literal type="number" pos:start="123:45" pos:end="123:45">0</literal> <operator pos:start="123:47" pos:end="123:48">&amp;&amp;</operator>

                <name pos:start="125:17" pos:end="125:41"><name pos:start="125:17" pos:end="125:20">chan</name><operator pos:start="125:21" pos:end="125:22">-&gt;</operator><name pos:start="125:23" pos:end="125:27">value</name><operator pos:start="125:28" pos:end="125:29">-&gt;</operator><name pos:start="125:30" pos:end="125:41">channel_type</name></name> <operator pos:start="125:43" pos:end="125:43">&lt;</operator> <call pos:start="125:45" pos:end="125:69"><name pos:start="125:45" pos:end="125:54">ARRAY_SIZE</name><argument_list pos:start="125:55" pos:end="125:69">(<argument pos:start="125:56" pos:end="125:68"><expr pos:start="125:56" pos:end="125:68"><name pos:start="125:56" pos:end="125:68">channel_names</name></expr></argument>)</argument_list></call> <operator pos:start="125:71" pos:end="125:72">&amp;&amp;</operator>

                <name pos:start="127:17" pos:end="127:56"><name pos:start="127:17" pos:end="127:29">channel_names</name><index pos:start="127:30" pos:end="127:56">[<expr pos:start="127:31" pos:end="127:55"><name pos:start="127:31" pos:end="127:55"><name pos:start="127:31" pos:end="127:34">chan</name><operator pos:start="127:35" pos:end="127:36">-&gt;</operator><name pos:start="127:37" pos:end="127:41">value</name><operator pos:start="127:42" pos:end="127:43">-&gt;</operator><name pos:start="127:44" pos:end="127:55">channel_type</name></name></expr>]</index></name></expr>)</condition> <block pos:start="127:59" pos:end="131:13">{<block_content pos:start="129:17" pos:end="129:72">

                <expr_stmt pos:start="129:17" pos:end="129:72"><expr pos:start="129:17" pos:end="129:71"><name pos:start="129:17" pos:end="129:28">channel_name</name> <operator pos:start="129:30" pos:end="129:30">=</operator> <name pos:start="129:32" pos:end="129:71"><name pos:start="129:32" pos:end="129:44">channel_names</name><index pos:start="129:45" pos:end="129:71">[<expr pos:start="129:46" pos:end="129:70"><name pos:start="129:46" pos:end="129:70"><name pos:start="129:46" pos:end="129:49">chan</name><operator pos:start="129:50" pos:end="129:51">-&gt;</operator><name pos:start="129:52" pos:end="129:56">value</name><operator pos:start="129:57" pos:end="129:58">-&gt;</operator><name pos:start="129:59" pos:end="129:70">channel_type</name></name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="135:13" pos:end="135:73"><expr pos:start="135:13" pos:end="135:72"><call pos:start="135:13" pos:end="135:72"><name pos:start="135:13" pos:end="135:26">monitor_printf</name><argument_list pos:start="135:27" pos:end="135:72">(<argument pos:start="135:28" pos:end="135:30"><expr pos:start="135:28" pos:end="135:30"><name pos:start="135:28" pos:end="135:30">mon</name></expr></argument>, <argument pos:start="135:33" pos:end="135:57"><expr pos:start="135:33" pos:end="135:57"><literal type="string" pos:start="135:33" pos:end="135:57">"     channel name: %s\n"</literal></expr></argument>, <argument pos:start="135:60" pos:end="135:71"><expr pos:start="135:60" pos:end="135:71"><name pos:start="135:60" pos:end="135:71">channel_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



<label pos:start="143:1" pos:end="143:4"><name pos:start="143:1" pos:end="143:3">out</name>:</label>

    <expr_stmt pos:start="145:5" pos:end="145:30"><expr pos:start="145:5" pos:end="145:29"><call pos:start="145:5" pos:end="145:29"><name pos:start="145:5" pos:end="145:23">qapi_free_SpiceInfo</name><argument_list pos:start="145:24" pos:end="145:29">(<argument pos:start="145:25" pos:end="145:28"><expr pos:start="145:25" pos:end="145:28"><name pos:start="145:25" pos:end="145:28">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
