<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2123.c" pos:tabs="8"><function pos:start="1:1" pos:end="14:16"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:4">void</name> <name pos:start="1:6" pos:end="1:12">OPPROTO</name></type> <name pos:start="1:14" pos:end="1:26">op_sdiv_T1_T0</name><parameter_list pos:start="1:27" pos:end="1:32">(<parameter pos:start="1:28" pos:end="1:31"><decl pos:start="1:28" pos:end="1:31"><type pos:start="1:28" pos:end="1:31"><name pos:start="1:28" pos:end="1:31">void</name></type></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="14:16">{<block_content pos:start="3:5" pos:end="14:16">
    <decl_stmt pos:start="3:5" pos:end="3:15"><decl pos:start="3:5" pos:end="3:14"><type pos:start="3:5" pos:end="3:11"><name pos:start="3:5" pos:end="3:11">int64_t</name></type> <name pos:start="3:13" pos:end="3:14">x0</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:15"><decl pos:start="4:5" pos:end="4:14"><type pos:start="4:5" pos:end="4:11"><name pos:start="4:5" pos:end="4:11">int32_t</name></type> <name pos:start="4:13" pos:end="4:14">x1</name></decl>;</decl_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:41"><expr pos:start="5:5" pos:end="5:40"><name pos:start="5:5" pos:end="5:6">x0</name> <operator pos:start="5:8" pos:end="5:8">=</operator> <name pos:start="5:10" pos:end="5:11">T0</name> <operator pos:start="5:13" pos:end="5:13">|</operator> <operator pos:start="5:15" pos:end="5:15">(</operator><operator pos:start="5:16" pos:end="5:16">(</operator><name pos:start="5:17" pos:end="5:23">int64_t</name><operator pos:start="5:24" pos:end="5:24">)</operator> <operator pos:start="5:26" pos:end="5:26">(</operator><name pos:start="5:27" pos:end="5:32"><name pos:start="5:27" pos:end="5:29">env</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:32">y</name></name><operator pos:start="5:33" pos:end="5:33">)</operator> <operator pos:start="5:35" pos:end="5:36">&lt;&lt;</operator> <literal type="number" pos:start="5:38" pos:end="5:39">32</literal><operator pos:start="5:40" pos:end="5:40">)</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:12"><expr pos:start="6:5" pos:end="6:11"><name pos:start="6:5" pos:end="6:6">x1</name> <operator pos:start="6:8" pos:end="6:8">=</operator> <name pos:start="6:10" pos:end="6:11">T1</name></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:17"><expr pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:6">x0</name> <operator pos:start="7:8" pos:end="7:8">=</operator> <name pos:start="7:10" pos:end="7:11">x0</name> <operator pos:start="7:13" pos:end="7:13">/</operator> <name pos:start="7:15" pos:end="7:16">x1</name></expr>;</expr_stmt>
    <if_stmt pos:start="8:5" pos:end="14:16"><if pos:start="8:5" pos:end="11:5">if <condition pos:start="8:8" pos:end="8:27">(<expr pos:start="8:9" pos:end="8:26"><operator pos:start="8:9" pos:end="8:9">(</operator><name pos:start="8:10" pos:end="8:16">int32_t</name><operator pos:start="8:17" pos:end="8:17">)</operator> <name pos:start="8:19" pos:end="8:20">x0</name> <operator pos:start="8:22" pos:end="8:23">!=</operator> <name pos:start="8:25" pos:end="8:26">x0</name></expr>)</condition> <block pos:start="8:29" pos:end="11:5">{<block_content pos:start="9:9" pos:end="10:15">
	<expr_stmt pos:start="9:9" pos:end="9:44"><expr pos:start="9:9" pos:end="9:43"><name pos:start="9:9" pos:end="9:10">T0</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <ternary pos:start="9:14" pos:end="9:43"><condition pos:start="9:14" pos:end="9:20"><expr pos:start="9:14" pos:end="9:19"><name pos:start="9:14" pos:end="9:15">x0</name> <operator pos:start="9:17" pos:end="9:17">&lt;</operator> <literal type="number" pos:start="9:19" pos:end="9:19">0</literal></expr>?</condition><then pos:start="9:22" pos:end="9:31"> <expr pos:start="9:22" pos:end="9:31"><literal type="number" pos:start="9:22" pos:end="9:31">0x80000000</literal></expr></then><else pos:start="9:32" pos:end="9:43">: <expr pos:start="9:34" pos:end="9:43"><literal type="number" pos:start="9:34" pos:end="9:43">0x7fffffff</literal></expr></else></ternary></expr>;</expr_stmt>
	<expr_stmt pos:start="10:9" pos:end="10:15"><expr pos:start="10:9" pos:end="10:14"><name pos:start="10:9" pos:end="10:10">T1</name> <operator pos:start="10:12" pos:end="10:12">=</operator> <literal type="number" pos:start="10:14" pos:end="10:14">1</literal></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="11:7" pos:end="14:16">else <block pos:start="11:12" pos:end="14:16">{<block_content pos:start="12:9" pos:end="14:16">
	<expr_stmt pos:start="12:9" pos:end="12:16"><expr pos:start="12:9" pos:end="12:15"><name pos:start="12:9" pos:end="12:10">T0</name> <operator pos:start="12:12" pos:end="12:12">=</operator> <name pos:start="12:14" pos:end="12:15">x0</name></expr>;</expr_stmt>
	<expr_stmt pos:start="13:9" pos:end="13:15"><expr pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:10">T1</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:16"><expr pos:start="14:5" pos:end="14:15"><call pos:start="14:5" pos:end="14:15"><name pos:start="14:5" pos:end="14:13">FORCE_RET</name><argument_list pos:start="14:14" pos:end="14:15">()</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt></block_content></block></function></unit>
