<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14605.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">add_shorts_metadata</name><parameter_list pos:start="1:31" pos:end="3:63">(<parameter pos:start="1:32" pos:end="1:40"><decl pos:start="1:32" pos:end="1:40"><type pos:start="1:32" pos:end="1:40"><name pos:start="1:32" pos:end="1:34">int</name></type> <name pos:start="1:36" pos:end="1:40">count</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:58"><decl pos:start="1:43" pos:end="1:58"><type pos:start="1:43" pos:end="1:58"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:52">char</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">name</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:46"><decl pos:start="3:32" pos:end="3:46"><type pos:start="3:32" pos:end="3:46"><specifier pos:start="3:32" pos:end="3:36">const</specifier> <name pos:start="3:38" pos:end="3:41">char</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:46">sep</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:62"><decl pos:start="3:49" pos:end="3:62"><type pos:start="3:49" pos:end="3:62"><name pos:start="3:49" pos:end="3:59">TiffContext</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:62">s</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:13">

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:12">ap</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">int16_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:15">sp</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:35"><if pos:start="15:5" pos:end="17:35">if <condition pos:start="15:8" pos:end="15:57">(<expr pos:start="15:9" pos:end="15:56"><name pos:start="15:9" pos:end="15:13">count</name> <operator pos:start="15:15" pos:end="15:16">&gt;=</operator> <name pos:start="15:18" pos:end="15:24">INT_MAX</name> <operator pos:start="15:26" pos:end="15:26">/</operator> <sizeof pos:start="15:28" pos:end="15:42">sizeof<argument_list pos:start="15:34" pos:end="15:42">(<argument pos:start="15:35" pos:end="15:41"><expr pos:start="15:35" pos:end="15:41"><name pos:start="15:35" pos:end="15:41">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="15:44" pos:end="15:45">||</operator> <name pos:start="15:47" pos:end="15:51">count</name> <operator pos:start="15:53" pos:end="15:54">&lt;=</operator> <literal type="number" pos:start="15:56" pos:end="15:56">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:35"><block_content pos:start="17:9" pos:end="17:35">

        <return pos:start="17:9" pos:end="17:35">return <expr pos:start="17:16" pos:end="17:34"><name pos:start="17:16" pos:end="17:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="21:35"><if pos:start="19:5" pos:end="21:35">if <condition pos:start="19:8" pos:end="19:69">(<expr pos:start="19:9" pos:end="19:68"><call pos:start="19:9" pos:end="19:42"><name pos:start="19:9" pos:end="19:34">bytestream2_get_bytes_left</name><argument_list pos:start="19:35" pos:end="19:42">(<argument pos:start="19:36" pos:end="19:41"><expr pos:start="19:36" pos:end="19:41"><operator pos:start="19:36" pos:end="19:36">&amp;</operator><name pos:start="19:37" pos:end="19:41"><name pos:start="19:37" pos:end="19:37">s</name><operator pos:start="19:38" pos:end="19:39">-&gt;</operator><name pos:start="19:40" pos:end="19:41">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="19:44" pos:end="19:44">&lt;</operator> <name pos:start="19:46" pos:end="19:50">count</name> <operator pos:start="19:52" pos:end="19:52">*</operator> <sizeof pos:start="19:54" pos:end="19:68">sizeof<argument_list pos:start="19:60" pos:end="19:68">(<argument pos:start="19:61" pos:end="19:67"><expr pos:start="19:61" pos:end="19:67"><name pos:start="19:61" pos:end="19:67">int16_t</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:35"><block_content pos:start="21:9" pos:end="21:35">

        <return pos:start="21:9" pos:end="21:35">return <expr pos:start="21:16" pos:end="21:34"><name pos:start="21:16" pos:end="21:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:44"><expr pos:start="25:5" pos:end="25:43"><name pos:start="25:5" pos:end="25:6">sp</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <call pos:start="25:10" pos:end="25:43"><name pos:start="25:10" pos:end="25:18">av_malloc</name><argument_list pos:start="25:19" pos:end="25:43">(<argument pos:start="25:20" pos:end="25:42"><expr pos:start="25:20" pos:end="25:42"><name pos:start="25:20" pos:end="25:24">count</name> <operator pos:start="25:26" pos:end="25:26">*</operator> <sizeof pos:start="25:28" pos:end="25:42">sizeof<argument_list pos:start="25:34" pos:end="25:42">(<argument pos:start="25:35" pos:end="25:41"><expr pos:start="25:35" pos:end="25:41"><name pos:start="25:35" pos:end="25:41">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:31"><if pos:start="27:5" pos:end="29:31">if <condition pos:start="27:8" pos:end="27:12">(<expr pos:start="27:9" pos:end="27:11"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:11">sp</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:31"><block_content pos:start="29:9" pos:end="29:31">

        <return pos:start="29:9" pos:end="29:31">return <expr pos:start="29:16" pos:end="29:30"><call pos:start="29:16" pos:end="29:30"><name pos:start="29:16" pos:end="29:22">AVERROR</name><argument_list pos:start="29:23" pos:end="29:30">(<argument pos:start="29:24" pos:end="29:29"><expr pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="33:5" pos:end="35:42">for <control pos:start="33:9" pos:end="33:31">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:26"><expr pos:start="33:17" pos:end="33:25"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <name pos:start="33:21" pos:end="33:25">count</name></expr>;</condition> <incr pos:start="33:28" pos:end="33:30"><expr pos:start="33:28" pos:end="33:30"><name pos:start="33:28" pos:end="33:28">i</name><operator pos:start="33:29" pos:end="33:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="35:9" pos:end="35:42"><block_content pos:start="35:9" pos:end="35:42">

        <expr_stmt pos:start="35:9" pos:end="35:42"><expr pos:start="35:9" pos:end="35:41"><name pos:start="35:9" pos:end="35:13"><name pos:start="35:9" pos:end="35:10">sp</name><index pos:start="35:11" pos:end="35:13">[<expr pos:start="35:12" pos:end="35:12"><name pos:start="35:12" pos:end="35:12">i</name></expr>]</index></name> <operator pos:start="35:15" pos:end="35:15">=</operator> <call pos:start="35:17" pos:end="35:41"><name pos:start="35:17" pos:end="35:26">tget_short</name><argument_list pos:start="35:27" pos:end="35:41">(<argument pos:start="35:28" pos:end="35:33"><expr pos:start="35:28" pos:end="35:33"><operator pos:start="35:28" pos:end="35:28">&amp;</operator><name pos:start="35:29" pos:end="35:33"><name pos:start="35:29" pos:end="35:29">s</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:33">gb</name></name></expr></argument>, <argument pos:start="35:36" pos:end="35:40"><expr pos:start="35:36" pos:end="35:40"><name pos:start="35:36" pos:end="35:40"><name pos:start="35:36" pos:end="35:36">s</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:40">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="37:5" pos:end="37:36"><expr pos:start="37:5" pos:end="37:35"><name pos:start="37:5" pos:end="37:6">ap</name> <operator pos:start="37:8" pos:end="37:8">=</operator> <call pos:start="37:10" pos:end="37:35"><name pos:start="37:10" pos:end="37:19">shorts2str</name><argument_list pos:start="37:20" pos:end="37:35">(<argument pos:start="37:21" pos:end="37:22"><expr pos:start="37:21" pos:end="37:22"><name pos:start="37:21" pos:end="37:22">sp</name></expr></argument>, <argument pos:start="37:25" pos:end="37:29"><expr pos:start="37:25" pos:end="37:29"><name pos:start="37:25" pos:end="37:29">count</name></expr></argument>, <argument pos:start="37:32" pos:end="37:34"><expr pos:start="37:32" pos:end="37:34"><name pos:start="37:32" pos:end="37:34">sep</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:18"><expr pos:start="39:5" pos:end="39:17"><call pos:start="39:5" pos:end="39:17"><name pos:start="39:5" pos:end="39:12">av_freep</name><argument_list pos:start="39:13" pos:end="39:17">(<argument pos:start="39:14" pos:end="39:16"><expr pos:start="39:14" pos:end="39:16"><operator pos:start="39:14" pos:end="39:14">&amp;</operator><name pos:start="39:15" pos:end="39:16">sp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="43:31"><if pos:start="41:5" pos:end="43:31">if <condition pos:start="41:8" pos:end="41:12">(<expr pos:start="41:9" pos:end="41:11"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:11">ap</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:31"><block_content pos:start="43:9" pos:end="43:31">

        <return pos:start="43:9" pos:end="43:31">return <expr pos:start="43:16" pos:end="43:30"><call pos:start="43:16" pos:end="43:30"><name pos:start="43:16" pos:end="43:22">AVERROR</name><argument_list pos:start="43:23" pos:end="43:30">(<argument pos:start="43:24" pos:end="43:29"><expr pos:start="43:24" pos:end="43:29"><name pos:start="43:24" pos:end="43:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:92"><expr pos:start="45:5" pos:end="45:91"><call pos:start="45:5" pos:end="45:91"><name pos:start="45:5" pos:end="45:15">av_dict_set</name><argument_list pos:start="45:16" pos:end="45:91">(<argument pos:start="45:17" pos:end="45:55"><expr pos:start="45:17" pos:end="45:55"><call pos:start="45:17" pos:end="45:55"><name pos:start="45:17" pos:end="45:42">avpriv_frame_get_metadatap</name><argument_list pos:start="45:43" pos:end="45:55">(<argument pos:start="45:44" pos:end="45:54"><expr pos:start="45:44" pos:end="45:54"><operator pos:start="45:44" pos:end="45:44">&amp;</operator><name pos:start="45:45" pos:end="45:54"><name pos:start="45:45" pos:end="45:45">s</name><operator pos:start="45:46" pos:end="45:47">-&gt;</operator><name pos:start="45:48" pos:end="45:54">picture</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="45:58" pos:end="45:61"><expr pos:start="45:58" pos:end="45:61"><name pos:start="45:58" pos:end="45:61">name</name></expr></argument>, <argument pos:start="45:64" pos:end="45:65"><expr pos:start="45:64" pos:end="45:65"><name pos:start="45:64" pos:end="45:65">ap</name></expr></argument>, <argument pos:start="45:68" pos:end="45:90"><expr pos:start="45:68" pos:end="45:90"><name pos:start="45:68" pos:end="45:90">AV_DICT_DONT_STRDUP_VAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
