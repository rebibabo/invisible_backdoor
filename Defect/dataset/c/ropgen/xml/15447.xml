<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15447.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">vfio_add_capabilities</name><parameter_list pos:start="1:33" pos:end="1:53">(<parameter pos:start="1:34" pos:end="1:52"><decl pos:start="1:34" pos:end="1:52"><type pos:start="1:34" pos:end="1:48"><name pos:start="1:34" pos:end="1:46">VFIOPCIDevice</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">vdev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:34">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">PCIDevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:19">pdev</name> <init pos:start="5:21" pos:end="5:33">= <expr pos:start="5:23" pos:end="5:33"><operator pos:start="5:23" pos:end="5:23">&amp;</operator><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:27">vdev</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:33">pdev</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="13:43">(<expr pos:start="11:9" pos:end="13:42"><operator pos:start="11:9" pos:end="11:9">!</operator><operator pos:start="11:10" pos:end="11:10">(</operator><name pos:start="11:11" pos:end="11:34"><name pos:start="11:11" pos:end="11:14">pdev</name><operator pos:start="11:15" pos:end="11:16">-&gt;</operator><name pos:start="11:17" pos:end="11:22">config</name><index pos:start="11:23" pos:end="11:34">[<expr pos:start="11:24" pos:end="11:33"><name pos:start="11:24" pos:end="11:33">PCI_STATUS</name></expr>]</index></name> <operator pos:start="11:36" pos:end="11:36">&amp;</operator> <name pos:start="11:38" pos:end="11:56">PCI_STATUS_CAP_LIST</name><operator pos:start="11:57" pos:end="11:57">)</operator> <operator pos:start="11:59" pos:end="11:60">||</operator>

        <operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:42"><name pos:start="13:10" pos:end="13:13">pdev</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:21">config</name><index pos:start="13:22" pos:end="13:42">[<expr pos:start="13:23" pos:end="13:41"><name pos:start="13:23" pos:end="13:41">PCI_CAPABILITY_LIST</name></expr>]</index></name></expr>)</condition> <block pos:start="13:45" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return> <comment type="block" pos:start="15:19" pos:end="15:38">/* Nothing to add */</comment>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:68"><expr pos:start="21:5" pos:end="21:67"><name pos:start="21:5" pos:end="21:7">ret</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:67"><name pos:start="21:11" pos:end="21:26">vfio_add_std_cap</name><argument_list pos:start="21:27" pos:end="21:67">(<argument pos:start="21:28" pos:end="21:31"><expr pos:start="21:28" pos:end="21:31"><name pos:start="21:28" pos:end="21:31">vdev</name></expr></argument>, <argument pos:start="21:34" pos:end="21:66"><expr pos:start="21:34" pos:end="21:66"><name pos:start="21:34" pos:end="21:66"><name pos:start="21:34" pos:end="21:37">pdev</name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:45">config</name><index pos:start="21:46" pos:end="21:66">[<expr pos:start="21:47" pos:end="21:65"><name pos:start="21:47" pos:end="21:65">PCI_CAPABILITY_LIST</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:12">(<expr pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">ret</name></expr>)</condition> <block pos:start="23:14" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:19">

        <return pos:start="25:9" pos:end="25:19">return <expr pos:start="25:16" pos:end="25:18"><name pos:start="25:16" pos:end="25:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:76">/* on PCI bus, it doesn't make sense to expose extended capabilities. */</comment>

    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="37:60">(<expr pos:start="33:9" pos:end="37:59"><operator pos:start="33:9" pos:end="33:9">!</operator><call pos:start="33:10" pos:end="33:29"><name pos:start="33:10" pos:end="33:23">pci_is_express</name><argument_list pos:start="33:24" pos:end="33:29">(<argument pos:start="33:25" pos:end="33:28"><expr pos:start="33:25" pos:end="33:28"><name pos:start="33:25" pos:end="33:28">pdev</name></expr></argument>)</argument_list></call> <operator pos:start="33:31" pos:end="33:32">||</operator>

        <operator pos:start="35:9" pos:end="35:9">!</operator><call pos:start="35:10" pos:end="35:38"><name pos:start="35:10" pos:end="35:27">pci_bus_is_express</name><argument_list pos:start="35:28" pos:end="35:38">(<argument pos:start="35:29" pos:end="35:37"><expr pos:start="35:29" pos:end="35:37"><name pos:start="35:29" pos:end="35:37"><name pos:start="35:29" pos:end="35:32">pdev</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:37">bus</name></name></expr></argument>)</argument_list></call> <operator pos:start="35:40" pos:end="35:41">||</operator>

        <operator pos:start="37:9" pos:end="37:9">!</operator><call pos:start="37:10" pos:end="37:59"><name pos:start="37:10" pos:end="37:21">pci_get_long</name><argument_list pos:start="37:22" pos:end="37:59">(<argument pos:start="37:23" pos:end="37:58"><expr pos:start="37:23" pos:end="37:58"><name pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:26">pdev</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:34">config</name></name> <operator pos:start="37:36" pos:end="37:36">+</operator> <name pos:start="37:38" pos:end="37:58">PCI_CONFIG_SPACE_SIZE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:62" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:17">

        <return pos:start="39:9" pos:end="39:17">return <expr pos:start="39:16" pos:end="39:16"><literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="45:5" pos:end="45:34">return <expr pos:start="45:12" pos:end="45:33"><call pos:start="45:12" pos:end="45:33"><name pos:start="45:12" pos:end="45:27">vfio_add_ext_cap</name><argument_list pos:start="45:28" pos:end="45:33">(<argument pos:start="45:29" pos:end="45:32"><expr pos:start="45:29" pos:end="45:32"><name pos:start="45:29" pos:end="45:32">vdev</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
