<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23952.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">xmv_read_packet</name><parameter_list pos:start="1:27" pos:end="3:41">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:40"><decl pos:start="3:28" pos:end="3:40"><type pos:start="3:28" pos:end="3:40"><name pos:start="3:28" pos:end="3:35">AVPacket</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:40">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="69:1">{<block_content pos:start="7:5" pos:end="67:13">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">XMVDemuxContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">xmv</name> <init pos:start="7:26" pos:end="7:39">= <expr pos:start="7:28" pos:end="7:39"><name pos:start="7:28" pos:end="7:39"><name pos:start="7:28" pos:end="7:28">s</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">result</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="25:5"><if pos:start="13:5" pos:end="25:5">if <condition pos:start="13:8" pos:end="13:59">(<expr pos:start="13:9" pos:end="13:58"><name pos:start="13:9" pos:end="13:32"><name pos:start="13:9" pos:end="13:11">xmv</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:18">video</name><operator pos:start="13:19" pos:end="13:19">.</operator><name pos:start="13:20" pos:end="13:32">current_frame</name></name> <operator pos:start="13:34" pos:end="13:35">==</operator> <name pos:start="13:37" pos:end="13:58"><name pos:start="13:37" pos:end="13:39">xmv</name><operator pos:start="13:40" pos:end="13:41">-&gt;</operator><name pos:start="13:42" pos:end="13:46">video</name><operator pos:start="13:47" pos:end="13:47">.</operator><name pos:start="13:48" pos:end="13:58">frame_count</name></name></expr>)</condition> <block pos:start="13:61" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:26">

        <comment type="block" pos:start="15:9" pos:end="15:66">/* No frames left in this packet, so we fetch a new one */</comment>



        <expr_stmt pos:start="19:9" pos:end="19:41"><expr pos:start="19:9" pos:end="19:40"><name pos:start="19:9" pos:end="19:14">result</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <call pos:start="19:18" pos:end="19:40"><name pos:start="19:18" pos:end="19:37">xmv_fetch_new_packet</name><argument_list pos:start="19:38" pos:end="19:40">(<argument pos:start="19:39" pos:end="19:39"><expr pos:start="19:39" pos:end="19:39"><name pos:start="19:39" pos:end="19:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="23:26"><if pos:start="21:9" pos:end="23:26">if <condition pos:start="21:12" pos:end="21:19">(<expr pos:start="21:13" pos:end="21:18"><name pos:start="21:13" pos:end="21:18">result</name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:26"><block_content pos:start="23:13" pos:end="23:26">

            <return pos:start="23:13" pos:end="23:26">return <expr pos:start="23:20" pos:end="23:25"><name pos:start="23:20" pos:end="23:25">result</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="45:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="29:33">(<expr pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:11">xmv</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:27">current_stream</name></name> <operator pos:start="29:29" pos:end="29:30">==</operator> <literal type="number" pos:start="29:32" pos:end="29:32">0</literal></expr>)</condition> <block pos:start="29:35" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:48">

        <comment type="block" pos:start="31:9" pos:end="31:33">/* Fetch a video frame */</comment>



        <expr_stmt pos:start="35:9" pos:end="35:48"><expr pos:start="35:9" pos:end="35:47"><name pos:start="35:9" pos:end="35:14">result</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <call pos:start="35:18" pos:end="35:47"><name pos:start="35:18" pos:end="35:39">xmv_fetch_video_packet</name><argument_list pos:start="35:40" pos:end="35:47">(<argument pos:start="35:41" pos:end="35:41"><expr pos:start="35:41" pos:end="35:41"><name pos:start="35:41" pos:end="35:41">s</name></expr></argument>, <argument pos:start="35:44" pos:end="35:46"><expr pos:start="35:44" pos:end="35:46"><name pos:start="35:44" pos:end="35:46">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="45:5">else <block pos:start="37:12" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:73">

        <comment type="block" pos:start="39:9" pos:end="39:34">/* Fetch an audio frame */</comment>



        <expr_stmt pos:start="43:9" pos:end="43:73"><expr pos:start="43:9" pos:end="43:72"><name pos:start="43:9" pos:end="43:14">result</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <call pos:start="43:18" pos:end="43:72"><name pos:start="43:18" pos:end="43:39">xmv_fetch_audio_packet</name><argument_list pos:start="43:40" pos:end="43:72">(<argument pos:start="43:41" pos:end="43:41"><expr pos:start="43:41" pos:end="43:41"><name pos:start="43:41" pos:end="43:41">s</name></expr></argument>, <argument pos:start="43:44" pos:end="43:46"><expr pos:start="43:44" pos:end="43:46"><name pos:start="43:44" pos:end="43:46">pkt</name></expr></argument>, <argument pos:start="43:49" pos:end="43:71"><expr pos:start="43:49" pos:end="43:71"><name pos:start="43:49" pos:end="43:67"><name pos:start="43:49" pos:end="43:51">xmv</name><operator pos:start="43:52" pos:end="43:53">-&gt;</operator><name pos:start="43:54" pos:end="43:67">current_stream</name></name> <operator pos:start="43:69" pos:end="43:69">-</operator> <literal type="number" pos:start="43:71" pos:end="43:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="47:5" pos:end="49:22"><if pos:start="47:5" pos:end="49:22">if <condition pos:start="47:8" pos:end="47:15">(<expr pos:start="47:9" pos:end="47:14"><name pos:start="47:9" pos:end="47:14">result</name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:22"><block_content pos:start="49:9" pos:end="49:22">

        <return pos:start="49:9" pos:end="49:22">return <expr pos:start="49:16" pos:end="49:21"><name pos:start="49:16" pos:end="49:21">result</name></expr>;</return></block_content></block></if></if_stmt>





    <comment type="block" pos:start="55:5" pos:end="55:31">/* Increase our counters */</comment>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:51">(<expr pos:start="57:9" pos:end="57:50"><operator pos:start="57:9" pos:end="57:10">++</operator><name pos:start="57:11" pos:end="57:29"><name pos:start="57:11" pos:end="57:13">xmv</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:29">current_stream</name></name> <operator pos:start="57:31" pos:end="57:32">&gt;=</operator> <name pos:start="57:34" pos:end="57:50"><name pos:start="57:34" pos:end="57:36">xmv</name><operator pos:start="57:37" pos:end="57:38">-&gt;</operator><name pos:start="57:39" pos:end="57:50">stream_count</name></name></expr>)</condition> <block pos:start="57:53" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:38">

        <expr_stmt pos:start="59:9" pos:end="59:38"><expr pos:start="59:9" pos:end="59:37"><name pos:start="59:9" pos:end="59:27"><name pos:start="59:9" pos:end="59:11">xmv</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:27">current_stream</name></name>       <operator pos:start="59:35" pos:end="59:35">=</operator> <literal type="number" pos:start="59:37" pos:end="59:37">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:38"><expr pos:start="61:9" pos:end="61:37"><name pos:start="61:9" pos:end="61:32"><name pos:start="61:9" pos:end="61:11">xmv</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:18">video</name><operator pos:start="61:19" pos:end="61:19">.</operator><name pos:start="61:20" pos:end="61:32">current_frame</name></name> <operator pos:start="61:34" pos:end="61:35">+=</operator> <literal type="number" pos:start="61:37" pos:end="61:37">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
