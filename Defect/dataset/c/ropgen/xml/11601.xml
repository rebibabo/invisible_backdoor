<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11601.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:5"><name pos:start="1:1" pos:end="1:5">int64</name></type> <name pos:start="1:7" pos:end="1:36">float32_to_int64_round_to_zero</name><parameter_list pos:start="1:37" pos:end="1:62">( <parameter pos:start="1:39" pos:end="1:60"><decl pos:start="1:39" pos:end="1:60"><type pos:start="1:39" pos:end="1:47"><name pos:start="1:39" pos:end="1:45">float32</name> <name pos:start="1:47" pos:end="1:47">a</name></type> <name pos:start="1:49" pos:end="1:60">STATUS_PARAM</name></decl></parameter> )</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="65:13">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">flag</name></type> <name pos:start="5:10" pos:end="5:14">aSign</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:9">int16</name></type> <name pos:start="7:11" pos:end="7:14">aExp</name></decl>, <decl pos:start="7:17" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:9"/><name pos:start="7:17" pos:end="7:26">shiftCount</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">bits32</name></type> <name pos:start="9:12" pos:end="9:15">aSig</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">bits64</name></type> <name pos:start="11:12" pos:end="11:17">aSig64</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:9">int64</name></type> <name pos:start="13:11" pos:end="13:11">z</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:8">aSig</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:34"><name pos:start="17:12" pos:end="17:29">extractFloat32Frac</name><argument_list pos:start="17:30" pos:end="17:34">( <argument pos:start="17:32" pos:end="17:32"><expr pos:start="17:32" pos:end="17:32"><name pos:start="17:32" pos:end="17:32">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:34"><expr pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:8">aExp</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:33"><name pos:start="19:12" pos:end="19:28">extractFloat32Exp</name><argument_list pos:start="19:29" pos:end="19:33">( <argument pos:start="19:31" pos:end="19:31"><expr pos:start="19:31" pos:end="19:31"><name pos:start="19:31" pos:end="19:31">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:36"><expr pos:start="21:5" pos:end="21:35"><name pos:start="21:5" pos:end="21:9">aSign</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="21:35"><name pos:start="21:13" pos:end="21:30">extractFloat32Sign</name><argument_list pos:start="21:31" pos:end="21:35">( <argument pos:start="21:33" pos:end="21:33"><expr pos:start="21:33" pos:end="21:33"><name pos:start="21:33" pos:end="21:33">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:14">shiftCount</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <name pos:start="23:18" pos:end="23:21">aExp</name> <operator pos:start="23:23" pos:end="23:23">-</operator> <literal type="number" pos:start="23:25" pos:end="23:28">0xBE</literal></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="49:5"><if pos:start="25:5" pos:end="41:5">if <condition pos:start="25:8" pos:end="25:26">( <expr pos:start="25:10" pos:end="25:24"><literal type="number" pos:start="25:10" pos:end="25:10">0</literal> <operator pos:start="25:12" pos:end="25:13">&lt;=</operator> <name pos:start="25:15" pos:end="25:24">shiftCount</name></expr> )</condition> <block pos:start="25:28" pos:end="41:5">{<block_content pos:start="27:9" pos:end="39:53">

        <if_stmt pos:start="27:9" pos:end="37:9"><if pos:start="27:9" pos:end="37:9">if <condition pos:start="27:12" pos:end="27:30">( <expr pos:start="27:14" pos:end="27:28"><name pos:start="27:14" pos:end="27:14">a</name> <operator pos:start="27:16" pos:end="27:17">!=</operator> <literal type="number" pos:start="27:19" pos:end="27:28">0xDF000000</literal></expr> )</condition> <block pos:start="27:32" pos:end="37:9">{<block_content pos:start="29:13" pos:end="35:13">

            <macro pos:start="29:13" pos:end="29:55"><name pos:start="29:13" pos:end="29:23">float_raise</name><argument_list pos:start="29:24" pos:end="29:55">( <argument pos:start="29:26" pos:end="29:54">float_flag_invalid STATUS_VAR</argument>)</argument_list></macro><empty_stmt pos:start="29:56" pos:end="29:56">;</empty_stmt>

            <if_stmt pos:start="31:13" pos:end="35:13"><if pos:start="31:13" pos:end="35:13">if <condition pos:start="31:16" pos:end="31:58">( <expr pos:start="31:18" pos:end="31:56"><operator pos:start="31:18" pos:end="31:18">!</operator> <name pos:start="31:20" pos:end="31:24">aSign</name> <operator pos:start="31:26" pos:end="31:27">||</operator> <operator pos:start="31:29" pos:end="31:29">(</operator> <operator pos:start="31:31" pos:end="31:31">(</operator> <name pos:start="31:33" pos:end="31:36">aExp</name> <operator pos:start="31:38" pos:end="31:39">==</operator> <literal type="number" pos:start="31:41" pos:end="31:44">0xFF</literal> <operator pos:start="31:46" pos:end="31:46">)</operator> <operator pos:start="31:48" pos:end="31:49">&amp;&amp;</operator> <name pos:start="31:51" pos:end="31:54">aSig</name> <operator pos:start="31:56" pos:end="31:56">)</operator></expr> )</condition> <block pos:start="31:60" pos:end="35:13">{<block_content pos:start="33:17" pos:end="33:51">

                <return pos:start="33:17" pos:end="33:51">return <expr pos:start="33:24" pos:end="33:50"><call pos:start="33:24" pos:end="33:50"><name pos:start="33:24" pos:end="33:28">LIT64</name><argument_list pos:start="33:29" pos:end="33:50">( <argument pos:start="33:31" pos:end="33:48"><expr pos:start="33:31" pos:end="33:48"><literal type="number" pos:start="33:31" pos:end="33:48">0x7FFFFFFFFFFFFFFF</literal></expr></argument> )</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="39:9" pos:end="39:53">return <expr pos:start="39:16" pos:end="39:52"><operator pos:start="39:16" pos:end="39:16">(</operator><name pos:start="39:17" pos:end="39:23">sbits64</name><operator pos:start="39:24" pos:end="39:24">)</operator> <call pos:start="39:26" pos:end="39:52"><name pos:start="39:26" pos:end="39:30">LIT64</name><argument_list pos:start="39:31" pos:end="39:52">( <argument pos:start="39:33" pos:end="39:50"><expr pos:start="39:33" pos:end="39:50"><literal type="number" pos:start="39:33" pos:end="39:50">0x8000000000000000</literal></expr></argument> )</argument_list></call></expr>;</return>

    </block_content>}</block></if>

    <if type="elseif" pos:start="43:5" pos:end="49:5">else if <condition pos:start="43:13" pos:end="43:28">( <expr pos:start="43:15" pos:end="43:26"><name pos:start="43:15" pos:end="43:18">aExp</name> <operator pos:start="43:20" pos:end="43:21">&lt;=</operator> <literal type="number" pos:start="43:23" pos:end="43:26">0x7E</literal></expr> )</condition> <block pos:start="43:30" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:17">

        <if_stmt pos:start="45:9" pos:end="45:79"><if pos:start="45:9" pos:end="45:79">if <condition pos:start="45:12" pos:end="45:26">( <expr pos:start="45:14" pos:end="45:24"><name pos:start="45:14" pos:end="45:17">aExp</name> <operator pos:start="45:19" pos:end="45:19">|</operator> <name pos:start="45:21" pos:end="45:24">aSig</name></expr> )</condition><block type="pseudo" pos:start="45:28" pos:end="45:79"><block_content pos:start="45:28" pos:end="45:79"> <expr_stmt pos:start="45:28" pos:end="45:79"><expr pos:start="45:28" pos:end="45:78"><call pos:start="45:28" pos:end="45:56"><name pos:start="45:28" pos:end="45:33">STATUS</name><argument_list pos:start="45:34" pos:end="45:56">(<argument pos:start="45:35" pos:end="45:55"><expr pos:start="45:35" pos:end="45:55"><name pos:start="45:35" pos:end="45:55">float_exception_flags</name></expr></argument>)</argument_list></call> <operator pos:start="45:58" pos:end="45:59">|=</operator> <name pos:start="45:61" pos:end="45:78">float_flag_inexact</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="47:9" pos:end="47:17">return <expr pos:start="47:16" pos:end="47:16"><literal type="number" pos:start="47:16" pos:end="47:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:31"><expr pos:start="51:5" pos:end="51:30"><name pos:start="51:5" pos:end="51:10">aSig64</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <name pos:start="51:14" pos:end="51:17">aSig</name> <operator pos:start="51:19" pos:end="51:19">|</operator> <literal type="number" pos:start="51:21" pos:end="51:30">0x00800000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:18"><expr pos:start="53:5" pos:end="53:17"><name pos:start="53:5" pos:end="53:10">aSig64</name> <operator pos:start="53:12" pos:end="53:14">&lt;&lt;=</operator> <literal type="number" pos:start="53:16" pos:end="53:17">40</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:33"><expr pos:start="55:5" pos:end="55:32"><name pos:start="55:5" pos:end="55:5">z</name> <operator pos:start="55:7" pos:end="55:7">=</operator> <name pos:start="55:9" pos:end="55:14">aSig64</name><operator pos:start="55:15" pos:end="55:16">&gt;&gt;</operator><operator pos:start="55:17" pos:end="55:17">(</operator> <operator pos:start="55:19" pos:end="55:19">-</operator> <name pos:start="55:21" pos:end="55:30">shiftCount</name> <operator pos:start="55:32" pos:end="55:32">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:51">( <expr pos:start="57:10" pos:end="57:49"><operator pos:start="57:10" pos:end="57:10">(</operator><name pos:start="57:11" pos:end="57:16">bits64</name><operator pos:start="57:17" pos:end="57:17">)</operator> <operator pos:start="57:19" pos:end="57:19">(</operator> <name pos:start="57:21" pos:end="57:26">aSig64</name><operator pos:start="57:27" pos:end="57:28">&lt;&lt;</operator><operator pos:start="57:29" pos:end="57:29">(</operator> <name pos:start="57:31" pos:end="57:40">shiftCount</name> <operator pos:start="57:42" pos:end="57:42">&amp;</operator> <literal type="number" pos:start="57:44" pos:end="57:45">63</literal> <operator pos:start="57:47" pos:end="57:47">)</operator> <operator pos:start="57:49" pos:end="57:49">)</operator></expr> )</condition> <block pos:start="57:53" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:60">

        <expr_stmt pos:start="59:9" pos:end="59:60"><expr pos:start="59:9" pos:end="59:59"><call pos:start="59:9" pos:end="59:37"><name pos:start="59:9" pos:end="59:14">STATUS</name><argument_list pos:start="59:15" pos:end="59:37">(<argument pos:start="59:16" pos:end="59:36"><expr pos:start="59:16" pos:end="59:36"><name pos:start="59:16" pos:end="59:36">float_exception_flags</name></expr></argument>)</argument_list></call> <operator pos:start="59:39" pos:end="59:40">|=</operator> <name pos:start="59:42" pos:end="59:59">float_flag_inexact</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="63:5" pos:end="63:25"><if pos:start="63:5" pos:end="63:25">if <condition pos:start="63:8" pos:end="63:16">( <expr pos:start="63:10" pos:end="63:14"><name pos:start="63:10" pos:end="63:14">aSign</name></expr> )</condition><block type="pseudo" pos:start="63:18" pos:end="63:25"><block_content pos:start="63:18" pos:end="63:25"> <expr_stmt pos:start="63:18" pos:end="63:25"><expr pos:start="63:18" pos:end="63:24"><name pos:start="63:18" pos:end="63:18">z</name> <operator pos:start="63:20" pos:end="63:20">=</operator> <operator pos:start="63:22" pos:end="63:22">-</operator> <name pos:start="63:24" pos:end="63:24">z</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="65:5" pos:end="65:13">return <expr pos:start="65:12" pos:end="65:12"><name pos:start="65:12" pos:end="65:12">z</name></expr>;</return>



</block_content>}</block></function>
</unit>
