<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15143.c" pos:tabs="8"><function pos:start="1:1" pos:end="281:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">svq3_decode_frame</name><parameter_list pos:start="1:29" pos:end="3:61">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:56">void</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">data</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:43"><decl pos:start="3:30" pos:end="3:43"><type pos:start="3:30" pos:end="3:43"><name pos:start="3:30" pos:end="3:32">int</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:43">got_frame</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:60"><decl pos:start="3:46" pos:end="3:60"><type pos:start="3:46" pos:end="3:60"><name pos:start="3:46" pos:end="3:53">AVPacket</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:60">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="281:1">{<block_content pos:start="7:5" pos:end="279:20">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">SVQ3Context</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:21">svq3</name>  <init pos:start="9:24" pos:end="9:41">= <expr pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:30">avctx</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">H264Context</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:18">h</name>     <init pos:start="11:24" pos:end="11:33">= <expr pos:start="11:26" pos:end="11:33"><operator pos:start="11:26" pos:end="11:26">&amp;</operator><name pos:start="11:27" pos:end="11:33"><name pos:start="11:27" pos:end="11:30">svq3</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:33">h</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">MpegEncContext</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:21">s</name>  <init pos:start="13:24" pos:end="13:30">= <expr pos:start="13:26" pos:end="13:30"><operator pos:start="13:26" pos:end="13:26">&amp;</operator><name pos:start="13:27" pos:end="13:30"><name pos:start="13:27" pos:end="13:27">h</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:30">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:36"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">buf_size</name>       <init pos:start="15:24" pos:end="15:36">= <expr pos:start="15:26" pos:end="15:36"><name pos:start="15:26" pos:end="15:36"><name pos:start="15:26" pos:end="15:30">avpkt</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:36">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">m</name></decl>, <decl pos:start="17:12" pos:end="17:18"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:18">mb_type</name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:39">/* special case for last picture */</comment>

    <if_stmt pos:start="23:5" pos:end="37:5"><if pos:start="23:5" pos:end="37:5">if <condition pos:start="23:8" pos:end="23:22">(<expr pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:16">buf_size</name> <operator pos:start="23:18" pos:end="23:19">==</operator> <literal type="number" pos:start="23:21" pos:end="23:21">0</literal></expr>)</condition> <block pos:start="23:24" pos:end="37:5">{<block_content pos:start="25:9" pos:end="35:17">

        <if_stmt pos:start="25:9" pos:end="33:9"><if pos:start="25:9" pos:end="33:9">if <condition pos:start="25:12" pos:end="25:49">(<expr pos:start="25:13" pos:end="25:48"><name pos:start="25:13" pos:end="25:31"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:31">next_picture_ptr</name></name> <operator pos:start="25:33" pos:end="25:34">&amp;&amp;</operator> <operator pos:start="25:36" pos:end="25:36">!</operator><name pos:start="25:37" pos:end="25:48"><name pos:start="25:37" pos:end="25:37">s</name><operator pos:start="25:38" pos:end="25:39">-&gt;</operator><name pos:start="25:40" pos:end="25:48">low_delay</name></name></expr>)</condition> <block pos:start="25:51" pos:end="33:9">{<block_content pos:start="27:13" pos:end="31:36">

            <expr_stmt pos:start="27:13" pos:end="27:52"><expr pos:start="27:13" pos:end="27:51"><operator pos:start="27:13" pos:end="27:13">*</operator><operator pos:start="27:14" pos:end="27:14">(</operator><name pos:start="27:15" pos:end="27:21">AVFrame</name> <operator pos:start="27:23" pos:end="27:23">*</operator><operator pos:start="27:24" pos:end="27:24">)</operator> <name pos:start="27:26" pos:end="27:29">data</name>   <operator pos:start="27:33" pos:end="27:33">=</operator> <name pos:start="27:35" pos:end="27:51"><name pos:start="27:35" pos:end="27:35">s</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:49">next_picture</name><operator pos:start="27:50" pos:end="27:50">.</operator><name pos:start="27:51" pos:end="27:51">f</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:39"><expr pos:start="29:13" pos:end="29:38"><name pos:start="29:13" pos:end="29:31"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:31">next_picture_ptr</name></name> <operator pos:start="29:33" pos:end="29:33">=</operator> <name pos:start="29:35" pos:end="29:38">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:36"><expr pos:start="31:13" pos:end="31:35"><operator pos:start="31:13" pos:end="31:13">*</operator><name pos:start="31:14" pos:end="31:22">got_frame</name>          <operator pos:start="31:33" pos:end="31:33">=</operator> <literal type="number" pos:start="31:35" pos:end="31:35">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="35:9" pos:end="35:17">return <expr pos:start="35:16" pos:end="35:16"><literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:45"><expr pos:start="41:5" pos:end="41:44"><call pos:start="41:5" pos:end="41:44"><name pos:start="41:5" pos:end="41:17">init_get_bits</name><argument_list pos:start="41:18" pos:end="41:44">(<argument pos:start="41:19" pos:end="41:24"><expr pos:start="41:19" pos:end="41:24"><operator pos:start="41:19" pos:end="41:19">&amp;</operator><name pos:start="41:20" pos:end="41:24"><name pos:start="41:20" pos:end="41:20">s</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:24">gb</name></name></expr></argument>, <argument pos:start="41:27" pos:end="41:29"><expr pos:start="41:27" pos:end="41:29"><name pos:start="41:27" pos:end="41:29">buf</name></expr></argument>, <argument pos:start="41:32" pos:end="41:43"><expr pos:start="41:32" pos:end="41:43"><literal type="number" pos:start="41:32" pos:end="41:32">8</literal> <operator pos:start="41:34" pos:end="41:34">*</operator> <name pos:start="41:36" pos:end="41:43">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:37"><expr pos:start="45:5" pos:end="45:36"><name pos:start="45:5" pos:end="45:11"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:11">mb_x</name></name> <operator pos:start="45:13" pos:end="45:13">=</operator> <name pos:start="45:15" pos:end="45:21"><name pos:start="45:15" pos:end="45:15">s</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:21">mb_y</name></name> <operator pos:start="45:23" pos:end="45:23">=</operator> <name pos:start="45:25" pos:end="45:32"><name pos:start="45:25" pos:end="45:25">h</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:32">mb_xy</name></name> <operator pos:start="45:34" pos:end="45:34">=</operator> <literal type="number" pos:start="45:36" pos:end="45:36">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="51:18"><if pos:start="49:5" pos:end="51:18">if <condition pos:start="49:8" pos:end="49:40">(<expr pos:start="49:9" pos:end="49:39"><call pos:start="49:9" pos:end="49:39"><name pos:start="49:9" pos:end="49:32">svq3_decode_slice_header</name><argument_list pos:start="49:33" pos:end="49:39">(<argument pos:start="49:34" pos:end="49:38"><expr pos:start="49:34" pos:end="49:38"><name pos:start="49:34" pos:end="49:38">avctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:18"><block_content pos:start="51:9" pos:end="51:18">

        <return pos:start="51:9" pos:end="51:18">return <expr pos:start="51:16" pos:end="51:17"><operator pos:start="51:16" pos:end="51:16">-</operator><literal type="number" pos:start="51:17" pos:end="51:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:38"><expr pos:start="55:5" pos:end="55:37"><name pos:start="55:5" pos:end="55:16"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:16">pict_type</name></name>      <operator pos:start="55:23" pos:end="55:23">=</operator> <name pos:start="55:25" pos:end="55:37"><name pos:start="55:25" pos:end="55:25">h</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:37">slice_type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:37"><expr pos:start="57:5" pos:end="57:36"><name pos:start="57:5" pos:end="57:21"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:21">picture_number</name></name> <operator pos:start="57:23" pos:end="57:23">=</operator> <name pos:start="57:25" pos:end="57:36"><name pos:start="57:25" pos:end="57:25">h</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:36">slice_num</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="71:59"><if pos:start="61:5" pos:end="71:59">if <condition pos:start="61:8" pos:end="61:42">(<expr pos:start="61:9" pos:end="61:41"><name pos:start="61:9" pos:end="61:20"><name pos:start="61:9" pos:end="61:13">avctx</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:20">debug</name></name> <operator pos:start="61:22" pos:end="61:22">&amp;</operator> <name pos:start="61:24" pos:end="61:41">FF_DEBUG_PICT_INFO</name></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="71:59"><block_content pos:start="63:9" pos:end="71:59">

        <expr_stmt pos:start="63:9" pos:end="71:59"><expr pos:start="63:9" pos:end="71:58"><call pos:start="63:9" pos:end="71:58"><name pos:start="63:9" pos:end="63:14">av_log</name><argument_list pos:start="63:15" pos:end="71:58">(<argument pos:start="63:16" pos:end="63:25"><expr pos:start="63:16" pos:end="63:25"><name pos:start="63:16" pos:end="63:25"><name pos:start="63:16" pos:end="63:16">h</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:19">s</name><operator pos:start="63:20" pos:end="63:20">.</operator><name pos:start="63:21" pos:end="63:25">avctx</name></name></expr></argument>, <argument pos:start="63:28" pos:end="63:39"><expr pos:start="63:28" pos:end="63:39"><name pos:start="63:28" pos:end="63:39">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="65:16" pos:end="65:67"><expr pos:start="65:16" pos:end="65:67"><literal type="string" pos:start="65:16" pos:end="65:67">"%c hpel:%d, tpel:%d aqp:%d qp:%d, slice_num:%02X\n"</literal></expr></argument>,

               <argument pos:start="67:16" pos:end="67:53"><expr pos:start="67:16" pos:end="67:53"><call pos:start="67:16" pos:end="67:53"><name pos:start="67:16" pos:end="67:39">av_get_picture_type_char</name><argument_list pos:start="67:40" pos:end="67:53">(<argument pos:start="67:41" pos:end="67:52"><expr pos:start="67:41" pos:end="67:52"><name pos:start="67:41" pos:end="67:52"><name pos:start="67:41" pos:end="67:41">s</name><operator pos:start="67:42" pos:end="67:43">-&gt;</operator><name pos:start="67:44" pos:end="67:52">pict_type</name></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="69:16" pos:end="69:33"><expr pos:start="69:16" pos:end="69:33"><name pos:start="69:16" pos:end="69:33"><name pos:start="69:16" pos:end="69:19">svq3</name><operator pos:start="69:20" pos:end="69:21">-&gt;</operator><name pos:start="69:22" pos:end="69:33">halfpel_flag</name></name></expr></argument>, <argument pos:start="69:36" pos:end="69:54"><expr pos:start="69:36" pos:end="69:54"><name pos:start="69:36" pos:end="69:54"><name pos:start="69:36" pos:end="69:39">svq3</name><operator pos:start="69:40" pos:end="69:41">-&gt;</operator><name pos:start="69:42" pos:end="69:54">thirdpel_flag</name></name></expr></argument>,

               <argument pos:start="71:16" pos:end="71:32"><expr pos:start="71:16" pos:end="71:32"><name pos:start="71:16" pos:end="71:32"><name pos:start="71:16" pos:end="71:16">s</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:32">adaptive_quant</name></name></expr></argument>, <argument pos:start="71:35" pos:end="71:43"><expr pos:start="71:35" pos:end="71:43"><name pos:start="71:35" pos:end="71:43"><name pos:start="71:35" pos:end="71:35">s</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:43">qscale</name></name></expr></argument>, <argument pos:start="71:46" pos:end="71:57"><expr pos:start="71:46" pos:end="71:57"><name pos:start="71:46" pos:end="71:57"><name pos:start="71:46" pos:end="71:46">h</name><operator pos:start="71:47" pos:end="71:48">-&gt;</operator><name pos:start="71:49" pos:end="71:57">slice_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="75:5" pos:end="75:32">/* for skipping the frame */</comment>

    <expr_stmt pos:start="77:5" pos:end="77:50"><expr pos:start="77:5" pos:end="77:49"><name pos:start="77:5" pos:end="77:34"><name pos:start="77:5" pos:end="77:5">s</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:22">current_picture</name><operator pos:start="77:23" pos:end="77:23">.</operator><name pos:start="77:24" pos:end="77:24">f</name><operator pos:start="77:25" pos:end="77:25">.</operator><name pos:start="77:26" pos:end="77:34">pict_type</name></name> <operator pos:start="77:36" pos:end="77:36">=</operator> <name pos:start="77:38" pos:end="77:49"><name pos:start="77:38" pos:end="77:38">s</name><operator pos:start="77:39" pos:end="77:40">-&gt;</operator><name pos:start="77:41" pos:end="77:49">pict_type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:73"><expr pos:start="79:5" pos:end="79:72"><name pos:start="79:5" pos:end="79:34"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:22">current_picture</name><operator pos:start="79:23" pos:end="79:23">.</operator><name pos:start="79:24" pos:end="79:24">f</name><operator pos:start="79:25" pos:end="79:25">.</operator><name pos:start="79:26" pos:end="79:34">key_frame</name></name> <operator pos:start="79:36" pos:end="79:36">=</operator> <operator pos:start="79:38" pos:end="79:38">(</operator><name pos:start="79:39" pos:end="79:50"><name pos:start="79:39" pos:end="79:39">s</name><operator pos:start="79:40" pos:end="79:41">-&gt;</operator><name pos:start="79:42" pos:end="79:50">pict_type</name></name> <operator pos:start="79:52" pos:end="79:53">==</operator> <name pos:start="79:55" pos:end="79:71">AV_PICTURE_TYPE_I</name><operator pos:start="79:72" pos:end="79:72">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:59">/* Skip B-frames if we do not have reference frames. */</comment>

    <if_stmt pos:start="85:5" pos:end="87:17"><if pos:start="85:5" pos:end="87:17">if <condition pos:start="85:8" pos:end="85:73">(<expr pos:start="85:9" pos:end="85:72"><name pos:start="85:9" pos:end="85:27"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:27">last_picture_ptr</name></name> <operator pos:start="85:29" pos:end="85:30">==</operator> <name pos:start="85:32" pos:end="85:35">NULL</name> <operator pos:start="85:37" pos:end="85:38">&amp;&amp;</operator> <name pos:start="85:40" pos:end="85:51"><name pos:start="85:40" pos:end="85:40">s</name><operator pos:start="85:41" pos:end="85:42">-&gt;</operator><name pos:start="85:43" pos:end="85:51">pict_type</name></name> <operator pos:start="85:53" pos:end="85:54">==</operator> <name pos:start="85:56" pos:end="85:72">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="87:9" pos:end="87:17"><block_content pos:start="87:9" pos:end="87:17">

        <return pos:start="87:9" pos:end="87:17">return <expr pos:start="87:16" pos:end="87:16"><literal type="number" pos:start="87:16" pos:end="87:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="89:5" pos:end="95:17"><if pos:start="89:5" pos:end="95:17">if <condition pos:start="89:8" pos:end="93:43">(<expr pos:start="89:9" pos:end="93:42"><name pos:start="89:9" pos:end="89:25"><name pos:start="89:9" pos:end="89:13">avctx</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:25">skip_frame</name></name> <operator pos:start="89:27" pos:end="89:28">&gt;=</operator> <name pos:start="89:30" pos:end="89:45">AVDISCARD_NONREF</name> <operator pos:start="89:47" pos:end="89:48">&amp;&amp;</operator> <name pos:start="89:50" pos:end="89:61"><name pos:start="89:50" pos:end="89:50">s</name><operator pos:start="89:51" pos:end="89:52">-&gt;</operator><name pos:start="89:53" pos:end="89:61">pict_type</name></name> <operator pos:start="89:63" pos:end="89:64">==</operator> <name pos:start="89:66" pos:end="89:82">AV_PICTURE_TYPE_B</name> <operator pos:start="89:84" pos:end="89:85">||</operator>

        <name pos:start="91:9" pos:end="91:25"><name pos:start="91:9" pos:end="91:13">avctx</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:25">skip_frame</name></name> <operator pos:start="91:27" pos:end="91:28">&gt;=</operator> <name pos:start="91:30" pos:end="91:45">AVDISCARD_NONKEY</name> <operator pos:start="91:47" pos:end="91:48">&amp;&amp;</operator> <name pos:start="91:50" pos:end="91:61"><name pos:start="91:50" pos:end="91:50">s</name><operator pos:start="91:51" pos:end="91:52">-&gt;</operator><name pos:start="91:53" pos:end="91:61">pict_type</name></name> <operator pos:start="91:63" pos:end="91:64">!=</operator> <name pos:start="91:66" pos:end="91:82">AV_PICTURE_TYPE_I</name> <operator pos:start="91:84" pos:end="91:85">||</operator>

        <name pos:start="93:9" pos:end="93:25"><name pos:start="93:9" pos:end="93:13">avctx</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:25">skip_frame</name></name> <operator pos:start="93:27" pos:end="93:28">&gt;=</operator> <name pos:start="93:30" pos:end="93:42">AVDISCARD_ALL</name></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:17"><block_content pos:start="95:9" pos:end="95:17">

        <return pos:start="95:9" pos:end="95:17">return <expr pos:start="95:16" pos:end="95:16"><literal type="number" pos:start="95:16" pos:end="95:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="99:5" pos:end="109:5"><if pos:start="99:5" pos:end="109:5">if <condition pos:start="99:8" pos:end="99:32">(<expr pos:start="99:9" pos:end="99:31"><name pos:start="99:9" pos:end="99:31"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:31">next_p_frame_damaged</name></name></expr>)</condition> <block pos:start="99:34" pos:end="109:5">{<block_content pos:start="101:9" pos:end="107:40">

        <if_stmt pos:start="101:9" pos:end="107:40"><if pos:start="101:9" pos:end="103:21">if <condition pos:start="101:12" pos:end="101:46">(<expr pos:start="101:13" pos:end="101:45"><name pos:start="101:13" pos:end="101:24"><name pos:start="101:13" pos:end="101:13">s</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:24">pict_type</name></name> <operator pos:start="101:26" pos:end="101:27">==</operator> <name pos:start="101:29" pos:end="101:45">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:21"><block_content pos:start="103:13" pos:end="103:21">

            <return pos:start="103:13" pos:end="103:21">return <expr pos:start="103:20" pos:end="103:20"><literal type="number" pos:start="103:20" pos:end="103:20">0</literal></expr>;</return></block_content></block></if>

        <else pos:start="105:9" pos:end="107:40">else<block type="pseudo" pos:start="107:13" pos:end="107:40"><block_content pos:start="107:13" pos:end="107:40">

            <expr_stmt pos:start="107:13" pos:end="107:40"><expr pos:start="107:13" pos:end="107:39"><name pos:start="107:13" pos:end="107:35"><name pos:start="107:13" pos:end="107:13">s</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:35">next_p_frame_damaged</name></name> <operator pos:start="107:37" pos:end="107:37">=</operator> <literal type="number" pos:start="107:39" pos:end="107:39">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="113:5" pos:end="115:18"><if pos:start="113:5" pos:end="115:18">if <condition pos:start="113:8" pos:end="113:35">(<expr pos:start="113:9" pos:end="113:34"><call pos:start="113:9" pos:end="113:30"><name pos:start="113:9" pos:end="113:27">ff_h264_frame_start</name><argument_list pos:start="113:28" pos:end="113:30">(<argument pos:start="113:29" pos:end="113:29"><expr pos:start="113:29" pos:end="113:29"><name pos:start="113:29" pos:end="113:29">h</name></expr></argument>)</argument_list></call> <operator pos:start="113:32" pos:end="113:32">&lt;</operator> <literal type="number" pos:start="113:34" pos:end="113:34">0</literal></expr>)</condition><block type="pseudo" pos:start="115:9" pos:end="115:18"><block_content pos:start="115:9" pos:end="115:18">

        <return pos:start="115:9" pos:end="115:18">return <expr pos:start="115:16" pos:end="115:17"><operator pos:start="115:16" pos:end="115:16">-</operator><literal type="number" pos:start="115:17" pos:end="115:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="119:5" pos:end="153:5"><if pos:start="119:5" pos:end="139:5">if <condition pos:start="119:8" pos:end="119:42">(<expr pos:start="119:9" pos:end="119:41"><name pos:start="119:9" pos:end="119:20"><name pos:start="119:9" pos:end="119:9">s</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:20">pict_type</name></name> <operator pos:start="119:22" pos:end="119:23">==</operator> <name pos:start="119:25" pos:end="119:41">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="119:44" pos:end="139:5">{<block_content pos:start="121:9" pos:end="137:9">

        <expr_stmt pos:start="121:9" pos:end="121:63"><expr pos:start="121:9" pos:end="121:62"><name pos:start="121:9" pos:end="121:27"><name pos:start="121:9" pos:end="121:9">h</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:27">frame_num_offset</name></name> <operator pos:start="121:29" pos:end="121:29">=</operator> <name pos:start="121:31" pos:end="121:42"><name pos:start="121:31" pos:end="121:31">h</name><operator pos:start="121:32" pos:end="121:33">-&gt;</operator><name pos:start="121:34" pos:end="121:42">slice_num</name></name> <operator pos:start="121:44" pos:end="121:44">-</operator> <name pos:start="121:46" pos:end="121:62"><name pos:start="121:46" pos:end="121:46">h</name><operator pos:start="121:47" pos:end="121:48">-&gt;</operator><name pos:start="121:49" pos:end="121:62">prev_frame_num</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="125:9" pos:end="127:39"><if pos:start="125:9" pos:end="127:39">if <condition pos:start="125:12" pos:end="125:36">(<expr pos:start="125:13" pos:end="125:35"><name pos:start="125:13" pos:end="125:31"><name pos:start="125:13" pos:end="125:13">h</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:31">frame_num_offset</name></name> <operator pos:start="125:33" pos:end="125:33">&lt;</operator> <literal type="number" pos:start="125:35" pos:end="125:35">0</literal></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:39"><block_content pos:start="127:13" pos:end="127:39">

            <expr_stmt pos:start="127:13" pos:end="127:39"><expr pos:start="127:13" pos:end="127:38"><name pos:start="127:13" pos:end="127:31"><name pos:start="127:13" pos:end="127:13">h</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:31">frame_num_offset</name></name> <operator pos:start="127:33" pos:end="127:34">+=</operator> <literal type="number" pos:start="127:36" pos:end="127:38">256</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="129:9" pos:end="137:9"><if pos:start="129:9" pos:end="137:9">if <condition pos:start="129:12" pos:end="131:60">(<expr pos:start="129:13" pos:end="131:59"><name pos:start="129:13" pos:end="129:31"><name pos:start="129:13" pos:end="129:13">h</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:31">frame_num_offset</name></name> <operator pos:start="129:33" pos:end="129:34">==</operator> <literal type="number" pos:start="129:36" pos:end="129:36">0</literal> <operator pos:start="129:38" pos:end="129:39">||</operator>

            <name pos:start="131:13" pos:end="131:31"><name pos:start="131:13" pos:end="131:13">h</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:31">frame_num_offset</name></name> <operator pos:start="131:33" pos:end="131:34">&gt;=</operator> <name pos:start="131:36" pos:end="131:59"><name pos:start="131:36" pos:end="131:36">h</name><operator pos:start="131:37" pos:end="131:38">-&gt;</operator><name pos:start="131:39" pos:end="131:59">prev_frame_num_offset</name></name></expr>)</condition> <block pos:start="131:62" pos:end="137:9">{<block_content pos:start="133:13" pos:end="135:22">

            <expr_stmt pos:start="133:13" pos:end="133:78"><expr pos:start="133:13" pos:end="133:77"><call pos:start="133:13" pos:end="133:77"><name pos:start="133:13" pos:end="133:18">av_log</name><argument_list pos:start="133:19" pos:end="133:77">(<argument pos:start="133:20" pos:end="133:29"><expr pos:start="133:20" pos:end="133:29"><name pos:start="133:20" pos:end="133:29"><name pos:start="133:20" pos:end="133:20">h</name><operator pos:start="133:21" pos:end="133:22">-&gt;</operator><name pos:start="133:23" pos:end="133:23">s</name><operator pos:start="133:24" pos:end="133:24">.</operator><name pos:start="133:25" pos:end="133:29">avctx</name></name></expr></argument>, <argument pos:start="133:32" pos:end="133:43"><expr pos:start="133:32" pos:end="133:43"><name pos:start="133:32" pos:end="133:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="133:46" pos:end="133:76"><expr pos:start="133:46" pos:end="133:76"><literal type="string" pos:start="133:46" pos:end="133:76">"error in B-frame picture id\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="135:13" pos:end="135:22">return <expr pos:start="135:20" pos:end="135:21"><operator pos:start="135:20" pos:end="135:20">-</operator><literal type="number" pos:start="135:21" pos:end="135:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="139:7" pos:end="153:5">else <block pos:start="139:12" pos:end="153:5">{<block_content pos:start="141:9" pos:end="151:44">

        <expr_stmt pos:start="141:9" pos:end="141:48"><expr pos:start="141:9" pos:end="141:47"><name pos:start="141:9" pos:end="141:25"><name pos:start="141:9" pos:end="141:9">h</name><operator pos:start="141:10" pos:end="141:11">-&gt;</operator><name pos:start="141:12" pos:end="141:25">prev_frame_num</name></name>        <operator pos:start="141:34" pos:end="141:34">=</operator> <name pos:start="141:36" pos:end="141:47"><name pos:start="141:36" pos:end="141:36">h</name><operator pos:start="141:37" pos:end="141:38">-&gt;</operator><name pos:start="141:39" pos:end="141:47">frame_num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:48"><expr pos:start="143:9" pos:end="143:47"><name pos:start="143:9" pos:end="143:20"><name pos:start="143:9" pos:end="143:9">h</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:20">frame_num</name></name>             <operator pos:start="143:34" pos:end="143:34">=</operator> <name pos:start="143:36" pos:end="143:47"><name pos:start="143:36" pos:end="143:36">h</name><operator pos:start="143:37" pos:end="143:38">-&gt;</operator><name pos:start="143:39" pos:end="143:47">slice_num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:68"><expr pos:start="145:9" pos:end="145:67"><name pos:start="145:9" pos:end="145:32"><name pos:start="145:9" pos:end="145:9">h</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:32">prev_frame_num_offset</name></name> <operator pos:start="145:34" pos:end="145:34">=</operator> <name pos:start="145:36" pos:end="145:47"><name pos:start="145:36" pos:end="145:36">h</name><operator pos:start="145:37" pos:end="145:38">-&gt;</operator><name pos:start="145:39" pos:end="145:47">frame_num</name></name> <operator pos:start="145:49" pos:end="145:49">-</operator> <name pos:start="145:51" pos:end="145:67"><name pos:start="145:51" pos:end="145:51">h</name><operator pos:start="145:52" pos:end="145:53">-&gt;</operator><name pos:start="145:54" pos:end="145:67">prev_frame_num</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="149:9" pos:end="151:44"><if pos:start="149:9" pos:end="151:44">if <condition pos:start="149:12" pos:end="149:41">(<expr pos:start="149:13" pos:end="149:40"><name pos:start="149:13" pos:end="149:36"><name pos:start="149:13" pos:end="149:13">h</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:36">prev_frame_num_offset</name></name> <operator pos:start="149:38" pos:end="149:38">&lt;</operator> <literal type="number" pos:start="149:40" pos:end="149:40">0</literal></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="151:44"><block_content pos:start="151:13" pos:end="151:44">

            <expr_stmt pos:start="151:13" pos:end="151:44"><expr pos:start="151:13" pos:end="151:43"><name pos:start="151:13" pos:end="151:36"><name pos:start="151:13" pos:end="151:13">h</name><operator pos:start="151:14" pos:end="151:15">-&gt;</operator><name pos:start="151:16" pos:end="151:36">prev_frame_num_offset</name></name> <operator pos:start="151:38" pos:end="151:39">+=</operator> <literal type="number" pos:start="151:41" pos:end="151:43">256</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <for pos:start="157:5" pos:end="175:5">for <control pos:start="157:9" pos:end="157:27">(<init pos:start="157:10" pos:end="157:15"><expr pos:start="157:10" pos:end="157:14"><name pos:start="157:10" pos:end="157:10">m</name> <operator pos:start="157:12" pos:end="157:12">=</operator> <literal type="number" pos:start="157:14" pos:end="157:14">0</literal></expr>;</init> <condition pos:start="157:17" pos:end="157:22"><expr pos:start="157:17" pos:end="157:21"><name pos:start="157:17" pos:end="157:17">m</name> <operator pos:start="157:19" pos:end="157:19">&lt;</operator> <literal type="number" pos:start="157:21" pos:end="157:21">2</literal></expr>;</condition> <incr pos:start="157:24" pos:end="157:26"><expr pos:start="157:24" pos:end="157:26"><name pos:start="157:24" pos:end="157:24">m</name><operator pos:start="157:25" pos:end="157:26">++</operator></expr></incr>)</control> <block pos:start="157:29" pos:end="175:5">{<block_content pos:start="159:9" pos:end="173:9">

        <decl_stmt pos:start="159:9" pos:end="159:14"><decl pos:start="159:9" pos:end="159:13"><type pos:start="159:9" pos:end="159:11"><name pos:start="159:9" pos:end="159:11">int</name></type> <name pos:start="159:13" pos:end="159:13">i</name></decl>;</decl_stmt>

        <for pos:start="161:9" pos:end="173:9">for <control pos:start="161:13" pos:end="161:31">(<init pos:start="161:14" pos:end="161:19"><expr pos:start="161:14" pos:end="161:18"><name pos:start="161:14" pos:end="161:14">i</name> <operator pos:start="161:16" pos:end="161:16">=</operator> <literal type="number" pos:start="161:18" pos:end="161:18">0</literal></expr>;</init> <condition pos:start="161:21" pos:end="161:26"><expr pos:start="161:21" pos:end="161:25"><name pos:start="161:21" pos:end="161:21">i</name> <operator pos:start="161:23" pos:end="161:23">&lt;</operator> <literal type="number" pos:start="161:25" pos:end="161:25">4</literal></expr>;</condition> <incr pos:start="161:28" pos:end="161:30"><expr pos:start="161:28" pos:end="161:30"><name pos:start="161:28" pos:end="161:28">i</name><operator pos:start="161:29" pos:end="161:30">++</operator></expr></incr>)</control> <block pos:start="161:33" pos:end="173:9">{<block_content pos:start="163:13" pos:end="171:75">

            <decl_stmt pos:start="163:13" pos:end="163:18"><decl pos:start="163:13" pos:end="163:17"><type pos:start="163:13" pos:end="163:15"><name pos:start="163:13" pos:end="163:15">int</name></type> <name pos:start="163:17" pos:end="163:17">j</name></decl>;</decl_stmt>

            <for pos:start="165:13" pos:end="167:58">for <control pos:start="165:17" pos:end="165:36">(<init pos:start="165:18" pos:end="165:24"><expr pos:start="165:18" pos:end="165:23"><name pos:start="165:18" pos:end="165:18">j</name> <operator pos:start="165:20" pos:end="165:20">=</operator> <operator pos:start="165:22" pos:end="165:22">-</operator><literal type="number" pos:start="165:23" pos:end="165:23">1</literal></expr>;</init> <condition pos:start="165:26" pos:end="165:31"><expr pos:start="165:26" pos:end="165:30"><name pos:start="165:26" pos:end="165:26">j</name> <operator pos:start="165:28" pos:end="165:28">&lt;</operator> <literal type="number" pos:start="165:30" pos:end="165:30">4</literal></expr>;</condition> <incr pos:start="165:33" pos:end="165:35"><expr pos:start="165:33" pos:end="165:35"><name pos:start="165:33" pos:end="165:33">j</name><operator pos:start="165:34" pos:end="165:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="167:17" pos:end="167:58"><block_content pos:start="167:17" pos:end="167:58">

                <expr_stmt pos:start="167:17" pos:end="167:58"><expr pos:start="167:17" pos:end="167:57"><name pos:start="167:17" pos:end="167:53"><name pos:start="167:17" pos:end="167:17">h</name><operator pos:start="167:18" pos:end="167:19">-&gt;</operator><name pos:start="167:20" pos:end="167:28">ref_cache</name><index pos:start="167:29" pos:end="167:31">[<expr pos:start="167:30" pos:end="167:30"><name pos:start="167:30" pos:end="167:30">m</name></expr>]</index><index pos:start="167:32" pos:end="167:53">[<expr pos:start="167:33" pos:end="167:52"><name pos:start="167:33" pos:end="167:40"><name pos:start="167:33" pos:end="167:37">scan8</name><index pos:start="167:38" pos:end="167:40">[<expr pos:start="167:39" pos:end="167:39"><literal type="number" pos:start="167:39" pos:end="167:39">0</literal></expr>]</index></name> <operator pos:start="167:42" pos:end="167:42">+</operator> <literal type="number" pos:start="167:44" pos:end="167:44">8</literal> <operator pos:start="167:46" pos:end="167:46">*</operator> <name pos:start="167:48" pos:end="167:48">i</name> <operator pos:start="167:50" pos:end="167:50">+</operator> <name pos:start="167:52" pos:end="167:52">j</name></expr>]</index></name> <operator pos:start="167:55" pos:end="167:55">=</operator> <literal type="number" pos:start="167:57" pos:end="167:57">1</literal></expr>;</expr_stmt></block_content></block></for>

            <if_stmt pos:start="169:13" pos:end="171:75"><if pos:start="169:13" pos:end="171:75">if <condition pos:start="169:16" pos:end="169:22">(<expr pos:start="169:17" pos:end="169:21"><name pos:start="169:17" pos:end="169:17">i</name> <operator pos:start="169:19" pos:end="169:19">&lt;</operator> <literal type="number" pos:start="169:21" pos:end="169:21">3</literal></expr>)</condition><block type="pseudo" pos:start="171:17" pos:end="171:75"><block_content pos:start="171:17" pos:end="171:75">

                <expr_stmt pos:start="171:17" pos:end="171:75"><expr pos:start="171:17" pos:end="171:74"><name pos:start="171:17" pos:end="171:53"><name pos:start="171:17" pos:end="171:17">h</name><operator pos:start="171:18" pos:end="171:19">-&gt;</operator><name pos:start="171:20" pos:end="171:28">ref_cache</name><index pos:start="171:29" pos:end="171:31">[<expr pos:start="171:30" pos:end="171:30"><name pos:start="171:30" pos:end="171:30">m</name></expr>]</index><index pos:start="171:32" pos:end="171:53">[<expr pos:start="171:33" pos:end="171:52"><name pos:start="171:33" pos:end="171:40"><name pos:start="171:33" pos:end="171:37">scan8</name><index pos:start="171:38" pos:end="171:40">[<expr pos:start="171:39" pos:end="171:39"><literal type="number" pos:start="171:39" pos:end="171:39">0</literal></expr>]</index></name> <operator pos:start="171:42" pos:end="171:42">+</operator> <literal type="number" pos:start="171:44" pos:end="171:44">8</literal> <operator pos:start="171:46" pos:end="171:46">*</operator> <name pos:start="171:48" pos:end="171:48">i</name> <operator pos:start="171:50" pos:end="171:50">+</operator> <name pos:start="171:52" pos:end="171:52">j</name></expr>]</index></name> <operator pos:start="171:55" pos:end="171:55">=</operator> <name pos:start="171:57" pos:end="171:74">PART_NOT_AVAILABLE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <for pos:start="179:5" pos:end="253:5">for <control pos:start="179:9" pos:end="179:56">(<init pos:start="179:10" pos:end="179:21"><expr pos:start="179:10" pos:end="179:20"><name pos:start="179:10" pos:end="179:16"><name pos:start="179:10" pos:end="179:10">s</name><operator pos:start="179:11" pos:end="179:12">-&gt;</operator><name pos:start="179:13" pos:end="179:16">mb_y</name></name> <operator pos:start="179:18" pos:end="179:18">=</operator> <literal type="number" pos:start="179:20" pos:end="179:20">0</literal></expr>;</init> <condition pos:start="179:23" pos:end="179:45"><expr pos:start="179:23" pos:end="179:44"><name pos:start="179:23" pos:end="179:29"><name pos:start="179:23" pos:end="179:23">s</name><operator pos:start="179:24" pos:end="179:25">-&gt;</operator><name pos:start="179:26" pos:end="179:29">mb_y</name></name> <operator pos:start="179:31" pos:end="179:31">&lt;</operator> <name pos:start="179:33" pos:end="179:44"><name pos:start="179:33" pos:end="179:33">s</name><operator pos:start="179:34" pos:end="179:35">-&gt;</operator><name pos:start="179:36" pos:end="179:44">mb_height</name></name></expr>;</condition> <incr pos:start="179:47" pos:end="179:55"><expr pos:start="179:47" pos:end="179:55"><name pos:start="179:47" pos:end="179:53"><name pos:start="179:47" pos:end="179:47">s</name><operator pos:start="179:48" pos:end="179:49">-&gt;</operator><name pos:start="179:50" pos:end="179:53">mb_y</name></name><operator pos:start="179:54" pos:end="179:55">++</operator></expr></incr>)</control> <block pos:start="179:58" pos:end="253:5">{<block_content pos:start="181:9" pos:end="251:48">

        <for pos:start="181:9" pos:end="247:9">for <control pos:start="181:13" pos:end="181:59">(<init pos:start="181:14" pos:end="181:25"><expr pos:start="181:14" pos:end="181:24"><name pos:start="181:14" pos:end="181:20"><name pos:start="181:14" pos:end="181:14">s</name><operator pos:start="181:15" pos:end="181:16">-&gt;</operator><name pos:start="181:17" pos:end="181:20">mb_x</name></name> <operator pos:start="181:22" pos:end="181:22">=</operator> <literal type="number" pos:start="181:24" pos:end="181:24">0</literal></expr>;</init> <condition pos:start="181:27" pos:end="181:48"><expr pos:start="181:27" pos:end="181:47"><name pos:start="181:27" pos:end="181:33"><name pos:start="181:27" pos:end="181:27">s</name><operator pos:start="181:28" pos:end="181:29">-&gt;</operator><name pos:start="181:30" pos:end="181:33">mb_x</name></name> <operator pos:start="181:35" pos:end="181:35">&lt;</operator> <name pos:start="181:37" pos:end="181:47"><name pos:start="181:37" pos:end="181:37">s</name><operator pos:start="181:38" pos:end="181:39">-&gt;</operator><name pos:start="181:40" pos:end="181:47">mb_width</name></name></expr>;</condition> <incr pos:start="181:50" pos:end="181:58"><expr pos:start="181:50" pos:end="181:58"><name pos:start="181:50" pos:end="181:56"><name pos:start="181:50" pos:end="181:50">s</name><operator pos:start="181:51" pos:end="181:52">-&gt;</operator><name pos:start="181:53" pos:end="181:56">mb_x</name></name><operator pos:start="181:57" pos:end="181:58">++</operator></expr></incr>)</control> <block pos:start="181:61" pos:end="247:9">{<block_content pos:start="183:13" pos:end="245:92">

            <expr_stmt pos:start="183:13" pos:end="183:56"><expr pos:start="183:13" pos:end="183:55"><name pos:start="183:13" pos:end="183:20"><name pos:start="183:13" pos:end="183:13">h</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:20">mb_xy</name></name> <operator pos:start="183:22" pos:end="183:22">=</operator> <name pos:start="183:24" pos:end="183:30"><name pos:start="183:24" pos:end="183:24">s</name><operator pos:start="183:25" pos:end="183:26">-&gt;</operator><name pos:start="183:27" pos:end="183:30">mb_x</name></name> <operator pos:start="183:32" pos:end="183:32">+</operator> <name pos:start="183:34" pos:end="183:40"><name pos:start="183:34" pos:end="183:34">s</name><operator pos:start="183:35" pos:end="183:36">-&gt;</operator><name pos:start="183:37" pos:end="183:40">mb_y</name></name> <operator pos:start="183:42" pos:end="183:42">*</operator> <name pos:start="183:44" pos:end="183:55"><name pos:start="183:44" pos:end="183:44">s</name><operator pos:start="183:45" pos:end="183:46">-&gt;</operator><name pos:start="183:47" pos:end="183:55">mb_stride</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="187:13" pos:end="207:13"><if pos:start="187:13" pos:end="207:13">if <condition pos:start="187:16" pos:end="191:70">(<expr pos:start="187:17" pos:end="191:69"><operator pos:start="187:17" pos:end="187:17">(</operator><call pos:start="187:18" pos:end="187:39"><name pos:start="187:18" pos:end="187:31">get_bits_count</name><argument_list pos:start="187:32" pos:end="187:39">(<argument pos:start="187:33" pos:end="187:38"><expr pos:start="187:33" pos:end="187:38"><operator pos:start="187:33" pos:end="187:33">&amp;</operator><name pos:start="187:34" pos:end="187:38"><name pos:start="187:34" pos:end="187:34">s</name><operator pos:start="187:35" pos:end="187:36">-&gt;</operator><name pos:start="187:37" pos:end="187:38">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="187:41" pos:end="187:41">+</operator> <literal type="number" pos:start="187:43" pos:end="187:43">7</literal><operator pos:start="187:44" pos:end="187:44">)</operator> <operator pos:start="187:46" pos:end="187:47">&gt;=</operator> <name pos:start="187:49" pos:end="187:66"><name pos:start="187:49" pos:end="187:49">s</name><operator pos:start="187:50" pos:end="187:51">-&gt;</operator><name pos:start="187:52" pos:end="187:53">gb</name><operator pos:start="187:54" pos:end="187:54">.</operator><name pos:start="187:55" pos:end="187:66">size_in_bits</name></name> <operator pos:start="187:68" pos:end="187:69">&amp;&amp;</operator>

                <operator pos:start="189:17" pos:end="189:17">(</operator><operator pos:start="189:18" pos:end="189:18">(</operator><call pos:start="189:19" pos:end="189:40"><name pos:start="189:19" pos:end="189:32">get_bits_count</name><argument_list pos:start="189:33" pos:end="189:40">(<argument pos:start="189:34" pos:end="189:39"><expr pos:start="189:34" pos:end="189:39"><operator pos:start="189:34" pos:end="189:34">&amp;</operator><name pos:start="189:35" pos:end="189:39"><name pos:start="189:35" pos:end="189:35">s</name><operator pos:start="189:36" pos:end="189:37">-&gt;</operator><name pos:start="189:38" pos:end="189:39">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="189:42" pos:end="189:42">&amp;</operator> <literal type="number" pos:start="189:44" pos:end="189:44">7</literal><operator pos:start="189:45" pos:end="189:45">)</operator> <operator pos:start="189:47" pos:end="189:48">==</operator> <literal type="number" pos:start="189:50" pos:end="189:50">0</literal> <operator pos:start="189:52" pos:end="189:53">||</operator>

                 <call pos:start="191:18" pos:end="191:63"><name pos:start="191:18" pos:end="191:26">show_bits</name><argument_list pos:start="191:27" pos:end="191:63">(<argument pos:start="191:28" pos:end="191:33"><expr pos:start="191:28" pos:end="191:33"><operator pos:start="191:28" pos:end="191:28">&amp;</operator><name pos:start="191:29" pos:end="191:33"><name pos:start="191:29" pos:end="191:29">s</name><operator pos:start="191:30" pos:end="191:31">-&gt;</operator><name pos:start="191:32" pos:end="191:33">gb</name></name></expr></argument>, <argument pos:start="191:36" pos:end="191:62"><expr pos:start="191:36" pos:end="191:62"><operator pos:start="191:36" pos:end="191:36">-</operator><call pos:start="191:37" pos:end="191:58"><name pos:start="191:37" pos:end="191:50">get_bits_count</name><argument_list pos:start="191:51" pos:end="191:58">(<argument pos:start="191:52" pos:end="191:57"><expr pos:start="191:52" pos:end="191:57"><operator pos:start="191:52" pos:end="191:52">&amp;</operator><name pos:start="191:53" pos:end="191:57"><name pos:start="191:53" pos:end="191:53">s</name><operator pos:start="191:54" pos:end="191:55">-&gt;</operator><name pos:start="191:56" pos:end="191:57">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="191:60" pos:end="191:60">&amp;</operator> <literal type="number" pos:start="191:62" pos:end="191:62">7</literal></expr></argument>)</argument_list></call> <operator pos:start="191:65" pos:end="191:66">==</operator> <literal type="number" pos:start="191:68" pos:end="191:68">0</literal><operator pos:start="191:69" pos:end="191:69">)</operator></expr>)</condition> <block pos:start="191:72" pos:end="207:13">{<block_content pos:start="193:17" pos:end="201:30">

                <expr_stmt pos:start="193:17" pos:end="193:83"><expr pos:start="193:17" pos:end="193:82"><call pos:start="193:17" pos:end="193:82"><name pos:start="193:17" pos:end="193:25">skip_bits</name><argument_list pos:start="193:26" pos:end="193:82">(<argument pos:start="193:27" pos:end="193:32"><expr pos:start="193:27" pos:end="193:32"><operator pos:start="193:27" pos:end="193:27">&amp;</operator><name pos:start="193:28" pos:end="193:32"><name pos:start="193:28" pos:end="193:28">s</name><operator pos:start="193:29" pos:end="193:30">-&gt;</operator><name pos:start="193:31" pos:end="193:32">gb</name></name></expr></argument>, <argument pos:start="193:35" pos:end="193:81"><expr pos:start="193:35" pos:end="193:81"><name pos:start="193:35" pos:end="193:56"><name pos:start="193:35" pos:end="193:38">svq3</name><operator pos:start="193:39" pos:end="193:40">-&gt;</operator><name pos:start="193:41" pos:end="193:56">next_slice_index</name></name> <operator pos:start="193:58" pos:end="193:58">-</operator> <call pos:start="193:60" pos:end="193:81"><name pos:start="193:60" pos:end="193:73">get_bits_count</name><argument_list pos:start="193:74" pos:end="193:81">(<argument pos:start="193:75" pos:end="193:80"><expr pos:start="193:75" pos:end="193:80"><operator pos:start="193:75" pos:end="193:75">&amp;</operator><name pos:start="193:76" pos:end="193:80"><name pos:start="193:76" pos:end="193:76">s</name><operator pos:start="193:77" pos:end="193:78">-&gt;</operator><name pos:start="193:79" pos:end="193:80">gb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="195:17" pos:end="195:50"><expr pos:start="195:17" pos:end="195:49"><name pos:start="195:17" pos:end="195:34"><name pos:start="195:17" pos:end="195:17">s</name><operator pos:start="195:18" pos:end="195:19">-&gt;</operator><name pos:start="195:20" pos:end="195:21">gb</name><operator pos:start="195:22" pos:end="195:22">.</operator><name pos:start="195:23" pos:end="195:34">size_in_bits</name></name> <operator pos:start="195:36" pos:end="195:36">=</operator> <literal type="number" pos:start="195:38" pos:end="195:38">8</literal> <operator pos:start="195:40" pos:end="195:40">*</operator> <name pos:start="195:42" pos:end="195:49">buf_size</name></expr>;</expr_stmt>



                <if_stmt pos:start="199:17" pos:end="201:30"><if pos:start="199:17" pos:end="201:30">if <condition pos:start="199:20" pos:end="199:52">(<expr pos:start="199:21" pos:end="199:51"><call pos:start="199:21" pos:end="199:51"><name pos:start="199:21" pos:end="199:44">svq3_decode_slice_header</name><argument_list pos:start="199:45" pos:end="199:51">(<argument pos:start="199:46" pos:end="199:50"><expr pos:start="199:46" pos:end="199:50"><name pos:start="199:46" pos:end="199:50">avctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="201:21" pos:end="201:30"><block_content pos:start="201:21" pos:end="201:30">

                    <return pos:start="201:21" pos:end="201:30">return <expr pos:start="201:28" pos:end="201:29"><operator pos:start="201:28" pos:end="201:28">-</operator><literal type="number" pos:start="201:29" pos:end="201:29">1</literal></expr>;</return></block_content></block></if></if_stmt>



                <comment type="block" pos:start="205:17" pos:end="205:50">/* TODO: support s-&gt;mb_skip_run */</comment>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="211:13" pos:end="211:49"><expr pos:start="211:13" pos:end="211:48"><name pos:start="211:13" pos:end="211:19">mb_type</name> <operator pos:start="211:21" pos:end="211:21">=</operator> <call pos:start="211:23" pos:end="211:48"><name pos:start="211:23" pos:end="211:40">svq3_get_ue_golomb</name><argument_list pos:start="211:41" pos:end="211:48">(<argument pos:start="211:42" pos:end="211:47"><expr pos:start="211:42" pos:end="211:47"><operator pos:start="211:42" pos:end="211:42">&amp;</operator><name pos:start="211:43" pos:end="211:47"><name pos:start="211:43" pos:end="211:43">s</name><operator pos:start="211:44" pos:end="211:45">-&gt;</operator><name pos:start="211:46" pos:end="211:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="215:13" pos:end="221:29"><if pos:start="215:13" pos:end="217:29">if <condition pos:start="215:16" pos:end="215:50">(<expr pos:start="215:17" pos:end="215:49"><name pos:start="215:17" pos:end="215:28"><name pos:start="215:17" pos:end="215:17">s</name><operator pos:start="215:18" pos:end="215:19">-&gt;</operator><name pos:start="215:20" pos:end="215:28">pict_type</name></name> <operator pos:start="215:30" pos:end="215:31">==</operator> <name pos:start="215:33" pos:end="215:49">AV_PICTURE_TYPE_I</name></expr>)</condition><block type="pseudo" pos:start="217:17" pos:end="217:29"><block_content pos:start="217:17" pos:end="217:29">

                <expr_stmt pos:start="217:17" pos:end="217:29"><expr pos:start="217:17" pos:end="217:28"><name pos:start="217:17" pos:end="217:23">mb_type</name> <operator pos:start="217:25" pos:end="217:26">+=</operator> <literal type="number" pos:start="217:28" pos:end="217:28">8</literal></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="219:13" pos:end="221:29">else if <condition pos:start="219:21" pos:end="219:71">(<expr pos:start="219:22" pos:end="219:70"><name pos:start="219:22" pos:end="219:33"><name pos:start="219:22" pos:end="219:22">s</name><operator pos:start="219:23" pos:end="219:24">-&gt;</operator><name pos:start="219:25" pos:end="219:33">pict_type</name></name> <operator pos:start="219:35" pos:end="219:36">==</operator> <name pos:start="219:38" pos:end="219:54">AV_PICTURE_TYPE_B</name> <operator pos:start="219:56" pos:end="219:57">&amp;&amp;</operator> <name pos:start="219:59" pos:end="219:65">mb_type</name> <operator pos:start="219:67" pos:end="219:68">&gt;=</operator> <literal type="number" pos:start="219:70" pos:end="219:70">4</literal></expr>)</condition><block type="pseudo" pos:start="221:17" pos:end="221:29"><block_content pos:start="221:17" pos:end="221:29">

                <expr_stmt pos:start="221:17" pos:end="221:29"><expr pos:start="221:17" pos:end="221:28"><name pos:start="221:17" pos:end="221:23">mb_type</name> <operator pos:start="221:25" pos:end="221:26">+=</operator> <literal type="number" pos:start="221:28" pos:end="221:28">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="223:13" pos:end="231:13"><if pos:start="223:13" pos:end="231:13">if <condition pos:start="223:16" pos:end="223:72">(<expr pos:start="223:17" pos:end="223:71"><operator pos:start="223:17" pos:end="223:17">(</operator><name pos:start="223:18" pos:end="223:25">unsigned</name><operator pos:start="223:26" pos:end="223:26">)</operator><name pos:start="223:27" pos:end="223:33">mb_type</name> <operator pos:start="223:35" pos:end="223:35">&gt;</operator> <literal type="number" pos:start="223:37" pos:end="223:38">33</literal> <operator pos:start="223:40" pos:end="223:41">||</operator> <call pos:start="223:43" pos:end="223:71"><name pos:start="223:43" pos:end="223:56">svq3_decode_mb</name><argument_list pos:start="223:57" pos:end="223:71">(<argument pos:start="223:58" pos:end="223:61"><expr pos:start="223:58" pos:end="223:61"><name pos:start="223:58" pos:end="223:61">svq3</name></expr></argument>, <argument pos:start="223:64" pos:end="223:70"><expr pos:start="223:64" pos:end="223:70"><name pos:start="223:64" pos:end="223:70">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="223:74" pos:end="231:13">{<block_content pos:start="225:17" pos:end="229:26">

                <expr_stmt pos:start="225:17" pos:end="227:76"><expr pos:start="225:17" pos:end="227:75"><call pos:start="225:17" pos:end="227:75"><name pos:start="225:17" pos:end="225:22">av_log</name><argument_list pos:start="225:23" pos:end="227:75">(<argument pos:start="225:24" pos:end="225:33"><expr pos:start="225:24" pos:end="225:33"><name pos:start="225:24" pos:end="225:33"><name pos:start="225:24" pos:end="225:24">h</name><operator pos:start="225:25" pos:end="225:26">-&gt;</operator><name pos:start="225:27" pos:end="225:27">s</name><operator pos:start="225:28" pos:end="225:28">.</operator><name pos:start="225:29" pos:end="225:33">avctx</name></name></expr></argument>, <argument pos:start="225:36" pos:end="225:47"><expr pos:start="225:36" pos:end="225:47"><name pos:start="225:36" pos:end="225:47">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="227:24" pos:end="227:56"><expr pos:start="227:24" pos:end="227:56"><literal type="string" pos:start="227:24" pos:end="227:56">"error while decoding MB %d %d\n"</literal></expr></argument>, <argument pos:start="227:59" pos:end="227:65"><expr pos:start="227:59" pos:end="227:65"><name pos:start="227:59" pos:end="227:65"><name pos:start="227:59" pos:end="227:59">s</name><operator pos:start="227:60" pos:end="227:61">-&gt;</operator><name pos:start="227:62" pos:end="227:65">mb_x</name></name></expr></argument>, <argument pos:start="227:68" pos:end="227:74"><expr pos:start="227:68" pos:end="227:74"><name pos:start="227:68" pos:end="227:74"><name pos:start="227:68" pos:end="227:68">s</name><operator pos:start="227:69" pos:end="227:70">-&gt;</operator><name pos:start="227:71" pos:end="227:74">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="229:17" pos:end="229:26">return <expr pos:start="229:24" pos:end="229:25"><operator pos:start="229:24" pos:end="229:24">-</operator><literal type="number" pos:start="229:25" pos:end="229:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="235:13" pos:end="237:40"><if pos:start="235:13" pos:end="237:40">if <condition pos:start="235:16" pos:end="235:29">(<expr pos:start="235:17" pos:end="235:28"><name pos:start="235:17" pos:end="235:23">mb_type</name> <operator pos:start="235:25" pos:end="235:26">!=</operator> <literal type="number" pos:start="235:28" pos:end="235:28">0</literal></expr>)</condition><block type="pseudo" pos:start="237:17" pos:end="237:40"><block_content pos:start="237:17" pos:end="237:40">

                <expr_stmt pos:start="237:17" pos:end="237:40"><expr pos:start="237:17" pos:end="237:39"><call pos:start="237:17" pos:end="237:39"><name pos:start="237:17" pos:end="237:36">ff_h264_hl_decode_mb</name><argument_list pos:start="237:37" pos:end="237:39">(<argument pos:start="237:38" pos:end="237:38"><expr pos:start="237:38" pos:end="237:38"><name pos:start="237:38" pos:end="237:38">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="241:13" pos:end="245:92"><if pos:start="241:13" pos:end="245:92">if <condition pos:start="241:16" pos:end="241:67">(<expr pos:start="241:17" pos:end="241:66"><name pos:start="241:17" pos:end="241:28"><name pos:start="241:17" pos:end="241:17">s</name><operator pos:start="241:18" pos:end="241:19">-&gt;</operator><name pos:start="241:20" pos:end="241:28">pict_type</name></name> <operator pos:start="241:30" pos:end="241:31">!=</operator> <name pos:start="241:33" pos:end="241:49">AV_PICTURE_TYPE_B</name> <operator pos:start="241:51" pos:end="241:52">&amp;&amp;</operator> <operator pos:start="241:54" pos:end="241:54">!</operator><name pos:start="241:55" pos:end="241:66"><name pos:start="241:55" pos:end="241:55">s</name><operator pos:start="241:56" pos:end="241:57">-&gt;</operator><name pos:start="241:58" pos:end="241:66">low_delay</name></name></expr>)</condition><block type="pseudo" pos:start="243:17" pos:end="245:92"><block_content pos:start="243:17" pos:end="245:92">

                <expr_stmt pos:start="243:17" pos:end="245:92"><expr pos:start="243:17" pos:end="245:91"><name pos:start="243:17" pos:end="243:78"><name pos:start="243:17" pos:end="243:17">s</name><operator pos:start="243:18" pos:end="243:19">-&gt;</operator><name pos:start="243:20" pos:end="243:34">current_picture</name><operator pos:start="243:35" pos:end="243:35">.</operator><name pos:start="243:36" pos:end="243:36">f</name><operator pos:start="243:37" pos:end="243:37">.</operator><name pos:start="243:38" pos:end="243:44">mb_type</name><index pos:start="243:45" pos:end="243:78">[<expr pos:start="243:46" pos:end="243:77"><name pos:start="243:46" pos:end="243:52"><name pos:start="243:46" pos:end="243:46">s</name><operator pos:start="243:47" pos:end="243:48">-&gt;</operator><name pos:start="243:49" pos:end="243:52">mb_x</name></name> <operator pos:start="243:54" pos:end="243:54">+</operator> <name pos:start="243:56" pos:end="243:62"><name pos:start="243:56" pos:end="243:56">s</name><operator pos:start="243:57" pos:end="243:58">-&gt;</operator><name pos:start="243:59" pos:end="243:62">mb_y</name></name> <operator pos:start="243:64" pos:end="243:64">*</operator> <name pos:start="243:66" pos:end="243:77"><name pos:start="243:66" pos:end="243:66">s</name><operator pos:start="243:67" pos:end="243:68">-&gt;</operator><name pos:start="243:69" pos:end="243:77">mb_stride</name></name></expr>]</index></name> <operator pos:start="243:80" pos:end="243:80">=</operator>

                    <ternary pos:start="245:21" pos:end="245:91"><condition pos:start="245:21" pos:end="245:72"><expr pos:start="245:21" pos:end="245:70"><operator pos:start="245:21" pos:end="245:21">(</operator><name pos:start="245:22" pos:end="245:33"><name pos:start="245:22" pos:end="245:22">s</name><operator pos:start="245:23" pos:end="245:24">-&gt;</operator><name pos:start="245:25" pos:end="245:33">pict_type</name></name> <operator pos:start="245:35" pos:end="245:36">==</operator> <name pos:start="245:38" pos:end="245:54">AV_PICTURE_TYPE_P</name> <operator pos:start="245:56" pos:end="245:57">&amp;&amp;</operator> <name pos:start="245:59" pos:end="245:65">mb_type</name> <operator pos:start="245:67" pos:end="245:67">&lt;</operator> <literal type="number" pos:start="245:69" pos:end="245:69">8</literal><operator pos:start="245:70" pos:end="245:70">)</operator></expr> ?</condition><then pos:start="245:74" pos:end="245:86"> <expr pos:start="245:74" pos:end="245:86"><operator pos:start="245:74" pos:end="245:74">(</operator><name pos:start="245:75" pos:end="245:81">mb_type</name> <operator pos:start="245:83" pos:end="245:83">-</operator> <literal type="number" pos:start="245:85" pos:end="245:85">1</literal><operator pos:start="245:86" pos:end="245:86">)</operator></expr> </then><else pos:start="245:88" pos:end="245:91">: <expr pos:start="245:90" pos:end="245:91"><operator pos:start="245:90" pos:end="245:90">-</operator><literal type="number" pos:start="245:91" pos:end="245:91">1</literal></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="251:9" pos:end="251:48"><expr pos:start="251:9" pos:end="251:47"><call pos:start="251:9" pos:end="251:47"><name pos:start="251:9" pos:end="251:26">ff_draw_horiz_band</name><argument_list pos:start="251:27" pos:end="251:47">(<argument pos:start="251:28" pos:end="251:28"><expr pos:start="251:28" pos:end="251:28"><name pos:start="251:28" pos:end="251:28">s</name></expr></argument>, <argument pos:start="251:31" pos:end="251:42"><expr pos:start="251:31" pos:end="251:42"><literal type="number" pos:start="251:31" pos:end="251:32">16</literal> <operator pos:start="251:34" pos:end="251:34">*</operator> <name pos:start="251:36" pos:end="251:42"><name pos:start="251:36" pos:end="251:36">s</name><operator pos:start="251:37" pos:end="251:38">-&gt;</operator><name pos:start="251:39" pos:end="251:42">mb_y</name></name></expr></argument>, <argument pos:start="251:45" pos:end="251:46"><expr pos:start="251:45" pos:end="251:46"><literal type="number" pos:start="251:45" pos:end="251:46">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="257:5" pos:end="257:24"><expr pos:start="257:5" pos:end="257:23"><call pos:start="257:5" pos:end="257:23"><name pos:start="257:5" pos:end="257:20">ff_MPV_frame_end</name><argument_list pos:start="257:21" pos:end="257:23">(<argument pos:start="257:22" pos:end="257:22"><expr pos:start="257:22" pos:end="257:22"><name pos:start="257:22" pos:end="257:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="261:5" pos:end="267:45"><if pos:start="261:5" pos:end="263:48">if <condition pos:start="261:8" pos:end="261:58">(<expr pos:start="261:9" pos:end="261:57"><name pos:start="261:9" pos:end="261:20"><name pos:start="261:9" pos:end="261:9">s</name><operator pos:start="261:10" pos:end="261:11">-&gt;</operator><name pos:start="261:12" pos:end="261:20">pict_type</name></name> <operator pos:start="261:22" pos:end="261:23">==</operator> <name pos:start="261:25" pos:end="261:41">AV_PICTURE_TYPE_B</name> <operator pos:start="261:43" pos:end="261:44">||</operator> <name pos:start="261:46" pos:end="261:57"><name pos:start="261:46" pos:end="261:46">s</name><operator pos:start="261:47" pos:end="261:48">-&gt;</operator><name pos:start="261:49" pos:end="261:57">low_delay</name></name></expr>)</condition><block type="pseudo" pos:start="263:9" pos:end="263:48"><block_content pos:start="263:9" pos:end="263:48">

        <expr_stmt pos:start="263:9" pos:end="263:48"><expr pos:start="263:9" pos:end="263:47"><operator pos:start="263:9" pos:end="263:9">*</operator><operator pos:start="263:10" pos:end="263:10">(</operator><name pos:start="263:11" pos:end="263:17">AVFrame</name> <operator pos:start="263:19" pos:end="263:19">*</operator><operator pos:start="263:20" pos:end="263:20">)</operator><name pos:start="263:21" pos:end="263:24">data</name> <operator pos:start="263:26" pos:end="263:26">=</operator> <name pos:start="263:28" pos:end="263:47"><name pos:start="263:28" pos:end="263:28">s</name><operator pos:start="263:29" pos:end="263:30">-&gt;</operator><name pos:start="263:31" pos:end="263:45">current_picture</name><operator pos:start="263:46" pos:end="263:46">.</operator><name pos:start="263:47" pos:end="263:47">f</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="265:5" pos:end="267:45">else<block type="pseudo" pos:start="267:9" pos:end="267:45"><block_content pos:start="267:9" pos:end="267:45">

        <expr_stmt pos:start="267:9" pos:end="267:45"><expr pos:start="267:9" pos:end="267:44"><operator pos:start="267:9" pos:end="267:9">*</operator><operator pos:start="267:10" pos:end="267:10">(</operator><name pos:start="267:11" pos:end="267:17">AVFrame</name> <operator pos:start="267:19" pos:end="267:19">*</operator><operator pos:start="267:20" pos:end="267:20">)</operator><name pos:start="267:21" pos:end="267:24">data</name> <operator pos:start="267:26" pos:end="267:26">=</operator> <name pos:start="267:28" pos:end="267:44"><name pos:start="267:28" pos:end="267:28">s</name><operator pos:start="267:29" pos:end="267:30">-&gt;</operator><name pos:start="267:31" pos:end="267:42">last_picture</name><operator pos:start="267:43" pos:end="267:43">.</operator><name pos:start="267:44" pos:end="267:44">f</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="271:5" pos:end="271:51">/* Do not output the last pic after seeking. */</comment>

    <if_stmt pos:start="273:5" pos:end="275:23"><if pos:start="273:5" pos:end="275:23">if <condition pos:start="273:8" pos:end="273:44">(<expr pos:start="273:9" pos:end="273:43"><name pos:start="273:9" pos:end="273:27"><name pos:start="273:9" pos:end="273:9">s</name><operator pos:start="273:10" pos:end="273:11">-&gt;</operator><name pos:start="273:12" pos:end="273:27">last_picture_ptr</name></name> <operator pos:start="273:29" pos:end="273:30">||</operator> <name pos:start="273:32" pos:end="273:43"><name pos:start="273:32" pos:end="273:32">s</name><operator pos:start="273:33" pos:end="273:34">-&gt;</operator><name pos:start="273:35" pos:end="273:43">low_delay</name></name></expr>)</condition><block type="pseudo" pos:start="275:9" pos:end="275:23"><block_content pos:start="275:9" pos:end="275:23">

        <expr_stmt pos:start="275:9" pos:end="275:23"><expr pos:start="275:9" pos:end="275:22"><operator pos:start="275:9" pos:end="275:9">*</operator><name pos:start="275:10" pos:end="275:18">got_frame</name> <operator pos:start="275:20" pos:end="275:20">=</operator> <literal type="number" pos:start="275:22" pos:end="275:22">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="279:5" pos:end="279:20">return <expr pos:start="279:12" pos:end="279:19"><name pos:start="279:12" pos:end="279:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
