<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6441.c" pos:tabs="8"><function pos:start="1:1" pos:end="135:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:34">vexpress_cfgctrl_write</name><parameter_list pos:start="1:35" pos:end="7:48">(<parameter pos:start="1:36" pos:end="1:54"><decl pos:start="1:36" pos:end="1:54"><type pos:start="1:36" pos:end="1:54"><name pos:start="1:36" pos:end="1:51">arm_sysctl_state</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">s</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:72"><decl pos:start="1:57" pos:end="1:72"><type pos:start="1:57" pos:end="1:72"><name pos:start="1:57" pos:end="1:64">unsigned</name> <name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:72">dcc</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:56"><decl pos:start="3:36" pos:end="3:56"><type pos:start="3:36" pos:end="3:56"><name pos:start="3:36" pos:end="3:43">unsigned</name> <name pos:start="3:45" pos:end="3:47">int</name></type> <name pos:start="3:49" pos:end="3:56">function</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:75"><decl pos:start="3:59" pos:end="3:75"><type pos:start="3:59" pos:end="3:75"><name pos:start="3:59" pos:end="3:66">unsigned</name> <name pos:start="3:68" pos:end="3:70">int</name></type> <name pos:start="3:72" pos:end="3:75">site</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:56"><decl pos:start="5:36" pos:end="5:56"><type pos:start="5:36" pos:end="5:56"><name pos:start="5:36" pos:end="5:43">unsigned</name> <name pos:start="5:45" pos:end="5:47">int</name></type> <name pos:start="5:49" pos:end="5:56">position</name></decl></parameter>, <parameter pos:start="5:59" pos:end="5:77"><decl pos:start="5:59" pos:end="5:77"><type pos:start="5:59" pos:end="5:77"><name pos:start="5:59" pos:end="5:66">unsigned</name> <name pos:start="5:68" pos:end="5:70">int</name></type> <name pos:start="5:72" pos:end="5:77">device</name></decl></parameter>,

                                   <parameter pos:start="7:36" pos:end="7:47"><decl pos:start="7:36" pos:end="7:47"><type pos:start="7:36" pos:end="7:47"><name pos:start="7:36" pos:end="7:43">uint32_t</name></type> <name pos:start="7:45" pos:end="7:47">val</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="135:1">{<block_content pos:start="17:5" pos:end="133:17">

    <comment type="block" pos:start="11:5" pos:end="15:7">/* We don't support anything other than DCC 0, board stack position 0

     * or sites other than motherboard/daughterboard:

     */</comment>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="19:62">(<expr pos:start="17:9" pos:end="19:61"><name pos:start="17:9" pos:end="17:11">dcc</name> <operator pos:start="17:13" pos:end="17:14">!=</operator> <literal type="number" pos:start="17:16" pos:end="17:16">0</literal> <operator pos:start="17:18" pos:end="17:19">||</operator> <name pos:start="17:21" pos:end="17:28">position</name> <operator pos:start="17:30" pos:end="17:31">!=</operator> <literal type="number" pos:start="17:33" pos:end="17:33">0</literal> <operator pos:start="17:35" pos:end="17:36">||</operator>

        <operator pos:start="19:9" pos:end="19:9">(</operator><name pos:start="19:10" pos:end="19:13">site</name> <operator pos:start="19:15" pos:end="19:16">!=</operator> <name pos:start="19:18" pos:end="19:32">SYS_CFG_SITE_MB</name> <operator pos:start="19:34" pos:end="19:35">&amp;&amp;</operator> <name pos:start="19:37" pos:end="19:40">site</name> <operator pos:start="19:42" pos:end="19:43">!=</operator> <name pos:start="19:45" pos:end="19:60">SYS_CFG_SITE_DB1</name><operator pos:start="19:61" pos:end="19:61">)</operator></expr>)</condition> <block pos:start="19:64" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:27">

        <goto pos:start="21:9" pos:end="21:27">goto <name pos:start="21:14" pos:end="21:26">cfgctrl_unimp</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="27:5" pos:end="119:5">switch <condition pos:start="27:12" pos:end="27:21">(<expr pos:start="27:13" pos:end="27:20"><name pos:start="27:13" pos:end="27:20">function</name></expr>)</condition> <block pos:start="27:23" pos:end="119:5">{<block_content pos:start="29:5" pos:end="117:14">

    <case pos:start="29:5" pos:end="29:21">case <expr pos:start="29:10" pos:end="29:20"><name pos:start="29:10" pos:end="29:20">SYS_CFG_OSC</name></expr>:</case>

        <if_stmt pos:start="31:9" pos:end="39:9"><if pos:start="31:9" pos:end="39:9">if <condition pos:start="31:12" pos:end="31:68">(<expr pos:start="31:13" pos:end="31:67"><name pos:start="31:13" pos:end="31:16">site</name> <operator pos:start="31:18" pos:end="31:19">==</operator> <name pos:start="31:21" pos:end="31:35">SYS_CFG_SITE_MB</name> <operator pos:start="31:37" pos:end="31:38">&amp;&amp;</operator> <name pos:start="31:40" pos:end="31:45">device</name> <operator pos:start="31:47" pos:end="31:47">&lt;</operator> <sizeof pos:start="31:49" pos:end="31:67">sizeof<argument_list pos:start="31:55" pos:end="31:67">(<argument pos:start="31:56" pos:end="31:66"><expr pos:start="31:56" pos:end="31:66"><name pos:start="31:56" pos:end="31:66"><name pos:start="31:56" pos:end="31:56">s</name><operator pos:start="31:57" pos:end="31:58">-&gt;</operator><name pos:start="31:59" pos:end="31:66">mb_clock</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="31:70" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:24">

            <comment type="block" pos:start="33:13" pos:end="33:35">/* motherboard clock */</comment>

            <expr_stmt pos:start="35:13" pos:end="35:38"><expr pos:start="35:13" pos:end="35:37"><name pos:start="35:13" pos:end="35:31"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:23">mb_clock</name><index pos:start="35:24" pos:end="35:31">[<expr pos:start="35:25" pos:end="35:30"><name pos:start="35:25" pos:end="35:30">device</name></expr>]</index></name> <operator pos:start="35:33" pos:end="35:33">=</operator> <name pos:start="35:35" pos:end="35:37">val</name></expr>;</expr_stmt>

            <return pos:start="37:13" pos:end="37:24">return <expr pos:start="37:20" pos:end="37:23"><name pos:start="37:20" pos:end="37:23">true</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="41:9" pos:end="49:9"><if pos:start="41:9" pos:end="49:9">if <condition pos:start="41:12" pos:end="41:66">(<expr pos:start="41:13" pos:end="41:65"><name pos:start="41:13" pos:end="41:16">site</name> <operator pos:start="41:18" pos:end="41:19">==</operator> <name pos:start="41:21" pos:end="41:36">SYS_CFG_SITE_DB1</name> <operator pos:start="41:38" pos:end="41:39">&amp;&amp;</operator> <name pos:start="41:41" pos:end="41:46">device</name> <operator pos:start="41:48" pos:end="41:48">&lt;</operator> <name pos:start="41:50" pos:end="41:65"><name pos:start="41:50" pos:end="41:50">s</name><operator pos:start="41:51" pos:end="41:52">-&gt;</operator><name pos:start="41:53" pos:end="41:65">db_num_clocks</name></name></expr>)</condition> <block pos:start="41:68" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:24">

            <comment type="block" pos:start="43:13" pos:end="43:37">/* daughterboard clock */</comment>

            <expr_stmt pos:start="45:13" pos:end="45:38"><expr pos:start="45:13" pos:end="45:37"><name pos:start="45:13" pos:end="45:31"><name pos:start="45:13" pos:end="45:13">s</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:23">db_clock</name><index pos:start="45:24" pos:end="45:31">[<expr pos:start="45:25" pos:end="45:30"><name pos:start="45:25" pos:end="45:30">device</name></expr>]</index></name> <operator pos:start="45:33" pos:end="45:33">=</operator> <name pos:start="45:35" pos:end="45:37">val</name></expr>;</expr_stmt>

            <return pos:start="47:13" pos:end="47:24">return <expr pos:start="47:20" pos:end="47:23"><name pos:start="47:20" pos:end="47:23">true</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:25">case <expr pos:start="53:10" pos:end="53:24"><name pos:start="53:10" pos:end="53:24">SYS_CFG_MUXFPGA</name></expr>:</case>

        <if_stmt pos:start="55:9" pos:end="71:9"><if pos:start="55:9" pos:end="71:9">if <condition pos:start="55:12" pos:end="55:51">(<expr pos:start="55:13" pos:end="55:50"><name pos:start="55:13" pos:end="55:16">site</name> <operator pos:start="55:18" pos:end="55:19">==</operator> <name pos:start="55:21" pos:end="55:35">SYS_CFG_SITE_MB</name> <operator pos:start="55:37" pos:end="55:38">&amp;&amp;</operator> <name pos:start="55:40" pos:end="55:45">device</name> <operator pos:start="55:47" pos:end="55:48">==</operator> <literal type="number" pos:start="55:50" pos:end="55:50">0</literal></expr>)</condition> <block pos:start="55:53" pos:end="71:9">{<block_content pos:start="65:13" pos:end="69:24">

            <comment type="block" pos:start="57:13" pos:end="63:15">/* Select whether video output comes from motherboard

             * or daughterboard: log and ignore as QEMU doesn't

             * support this.

             */</comment>

            <expr_stmt pos:start="65:13" pos:end="67:55"><expr pos:start="65:13" pos:end="67:54"><call pos:start="65:13" pos:end="67:54"><name pos:start="65:13" pos:end="65:25">qemu_log_mask</name><argument_list pos:start="65:26" pos:end="67:54">(<argument pos:start="65:27" pos:end="65:35"><expr pos:start="65:27" pos:end="65:35"><name pos:start="65:27" pos:end="65:35">LOG_UNIMP</name></expr></argument>, <argument pos:start="65:38" pos:end="67:53"><expr pos:start="65:38" pos:end="67:53"><literal type="string" pos:start="65:38" pos:end="65:77">"arm_sysctl: selection of video output "</literal>

                          <literal type="string" pos:start="67:27" pos:end="67:53">"not supported, ignoring\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="69:13" pos:end="69:24">return <expr pos:start="69:20" pos:end="69:23"><name pos:start="69:20" pos:end="69:23">true</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <case pos:start="75:5" pos:end="75:26">case <expr pos:start="75:10" pos:end="75:25"><name pos:start="75:10" pos:end="75:25">SYS_CFG_SHUTDOWN</name></expr>:</case>

        <if_stmt pos:start="77:9" pos:end="83:9"><if pos:start="77:9" pos:end="83:9">if <condition pos:start="77:12" pos:end="77:51">(<expr pos:start="77:13" pos:end="77:50"><name pos:start="77:13" pos:end="77:16">site</name> <operator pos:start="77:18" pos:end="77:19">==</operator> <name pos:start="77:21" pos:end="77:35">SYS_CFG_SITE_MB</name> <operator pos:start="77:37" pos:end="77:38">&amp;&amp;</operator> <name pos:start="77:40" pos:end="77:45">device</name> <operator pos:start="77:47" pos:end="77:48">==</operator> <literal type="number" pos:start="77:50" pos:end="77:50">0</literal></expr>)</condition> <block pos:start="77:53" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:24">

            <expr_stmt pos:start="79:13" pos:end="79:43"><expr pos:start="79:13" pos:end="79:42"><call pos:start="79:13" pos:end="79:42"><name pos:start="79:13" pos:end="79:40">qemu_system_shutdown_request</name><argument_list pos:start="79:41" pos:end="79:42">()</argument_list></call></expr>;</expr_stmt>

            <return pos:start="81:13" pos:end="81:24">return <expr pos:start="81:20" pos:end="81:23"><name pos:start="81:20" pos:end="81:23">true</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="85:9" pos:end="85:14">break;</break>

    <case pos:start="87:5" pos:end="87:24">case <expr pos:start="87:10" pos:end="87:23"><name pos:start="87:10" pos:end="87:23">SYS_CFG_REBOOT</name></expr>:</case>

        <if_stmt pos:start="89:9" pos:end="95:9"><if pos:start="89:9" pos:end="95:9">if <condition pos:start="89:12" pos:end="89:51">(<expr pos:start="89:13" pos:end="89:50"><name pos:start="89:13" pos:end="89:16">site</name> <operator pos:start="89:18" pos:end="89:19">==</operator> <name pos:start="89:21" pos:end="89:35">SYS_CFG_SITE_MB</name> <operator pos:start="89:37" pos:end="89:38">&amp;&amp;</operator> <name pos:start="89:40" pos:end="89:45">device</name> <operator pos:start="89:47" pos:end="89:48">==</operator> <literal type="number" pos:start="89:50" pos:end="89:50">0</literal></expr>)</condition> <block pos:start="89:53" pos:end="95:9">{<block_content pos:start="91:13" pos:end="93:24">

            <expr_stmt pos:start="91:13" pos:end="91:40"><expr pos:start="91:13" pos:end="91:39"><call pos:start="91:13" pos:end="91:39"><name pos:start="91:13" pos:end="91:37">qemu_system_reset_request</name><argument_list pos:start="91:38" pos:end="91:39">()</argument_list></call></expr>;</expr_stmt>

            <return pos:start="93:13" pos:end="93:24">return <expr pos:start="93:20" pos:end="93:23"><name pos:start="93:20" pos:end="93:23">true</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    <case pos:start="99:5" pos:end="99:25">case <expr pos:start="99:10" pos:end="99:24"><name pos:start="99:10" pos:end="99:24">SYS_CFG_DVIMODE</name></expr>:</case>

        <if_stmt pos:start="101:9" pos:end="113:9"><if pos:start="101:9" pos:end="113:9">if <condition pos:start="101:12" pos:end="101:51">(<expr pos:start="101:13" pos:end="101:50"><name pos:start="101:13" pos:end="101:16">site</name> <operator pos:start="101:18" pos:end="101:19">==</operator> <name pos:start="101:21" pos:end="101:35">SYS_CFG_SITE_MB</name> <operator pos:start="101:37" pos:end="101:38">&amp;&amp;</operator> <name pos:start="101:40" pos:end="101:45">device</name> <operator pos:start="101:47" pos:end="101:48">==</operator> <literal type="number" pos:start="101:50" pos:end="101:50">0</literal></expr>)</condition> <block pos:start="101:53" pos:end="113:9">{<block_content pos:start="111:13" pos:end="111:24">

            <comment type="block" pos:start="103:13" pos:end="109:15">/* Selecting DVI mode is meaningless for QEMU: we will

             * always display the output correctly according to the

             * pixel height/width programmed into the CLCD controller.

             */</comment>

            <return pos:start="111:13" pos:end="111:24">return <expr pos:start="111:20" pos:end="111:23"><name pos:start="111:20" pos:end="111:23">true</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    <default pos:start="115:5" pos:end="115:12">default:</default>

        <break pos:start="117:9" pos:end="117:14">break;</break>

    </block_content>}</block></switch>



<label pos:start="123:1" pos:end="123:14"><name pos:start="123:1" pos:end="123:13">cfgctrl_unimp</name>:</label>

    <expr_stmt pos:start="125:5" pos:end="131:57"><expr pos:start="125:5" pos:end="131:56"><call pos:start="125:5" pos:end="131:56"><name pos:start="125:5" pos:end="125:17">qemu_log_mask</name><argument_list pos:start="125:18" pos:end="131:56">(<argument pos:start="125:19" pos:end="125:27"><expr pos:start="125:19" pos:end="125:27"><name pos:start="125:19" pos:end="125:27">LOG_UNIMP</name></expr></argument>,

                  <argument pos:start="127:19" pos:end="129:71"><expr pos:start="127:19" pos:end="129:71"><literal type="string" pos:start="127:19" pos:end="127:76">"arm_sysctl: Unimplemented SYS_CFGCTRL write of function "</literal>

                  <literal type="string" pos:start="129:19" pos:end="129:71">"0x%x DCC 0x%x site 0x%x position 0x%x device 0x%x\n"</literal></expr></argument>,

                  <argument pos:start="131:19" pos:end="131:26"><expr pos:start="131:19" pos:end="131:26"><name pos:start="131:19" pos:end="131:26">function</name></expr></argument>, <argument pos:start="131:29" pos:end="131:31"><expr pos:start="131:29" pos:end="131:31"><name pos:start="131:29" pos:end="131:31">dcc</name></expr></argument>, <argument pos:start="131:34" pos:end="131:37"><expr pos:start="131:34" pos:end="131:37"><name pos:start="131:34" pos:end="131:37">site</name></expr></argument>, <argument pos:start="131:40" pos:end="131:47"><expr pos:start="131:40" pos:end="131:47"><name pos:start="131:40" pos:end="131:47">position</name></expr></argument>, <argument pos:start="131:50" pos:end="131:55"><expr pos:start="131:50" pos:end="131:55"><name pos:start="131:50" pos:end="131:55">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="133:5" pos:end="133:17">return <expr pos:start="133:12" pos:end="133:16"><name pos:start="133:12" pos:end="133:16">false</name></expr>;</return>

</block_content>}</block></function>
</unit>
