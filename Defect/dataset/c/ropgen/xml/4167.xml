<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4167.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">alloc_scratch_buffers</name><parameter_list pos:start="1:33" pos:end="1:68">(<parameter pos:start="1:34" pos:end="1:53"><decl pos:start="1:34" pos:end="1:53"><type pos:start="1:34" pos:end="1:53"><name pos:start="1:34" pos:end="1:49">H264SliceContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">sl</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:67"><decl pos:start="1:56" pos:end="1:67"><type pos:start="1:56" pos:end="1:67"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:67">linesize</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:13">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:23"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:21">H264Context</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:24">h</name> <init pos:start="5:26" pos:end="5:35">= <expr pos:start="5:28" pos:end="5:35"><name pos:start="5:28" pos:end="5:35"><name pos:start="5:28" pos:end="5:29">sl</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:35">h264</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:55"><decl pos:start="7:5" pos:end="7:54"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:18">alloc_size</name> <init pos:start="7:20" pos:end="7:54">= <expr pos:start="7:22" pos:end="7:54"><call pos:start="7:22" pos:end="7:54"><name pos:start="7:22" pos:end="7:28">FFALIGN</name><argument_list pos:start="7:29" pos:end="7:54">(<argument pos:start="7:30" pos:end="7:49"><expr pos:start="7:30" pos:end="7:49"><call pos:start="7:30" pos:end="7:44"><name pos:start="7:30" pos:end="7:34">FFABS</name><argument_list pos:start="7:35" pos:end="7:44">(<argument pos:start="7:36" pos:end="7:43"><expr pos:start="7:36" pos:end="7:43"><name pos:start="7:36" pos:end="7:43">linesize</name></expr></argument>)</argument_list></call> <operator pos:start="7:46" pos:end="7:46">+</operator> <literal type="number" pos:start="7:48" pos:end="7:49">32</literal></expr></argument>, <argument pos:start="7:52" pos:end="7:53"><expr pos:start="7:52" pos:end="7:53"><literal type="number" pos:start="7:52" pos:end="7:53">32</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:98"><expr pos:start="11:5" pos:end="11:97"><call pos:start="11:5" pos:end="11:97"><name pos:start="11:5" pos:end="11:18">av_fast_malloc</name><argument_list pos:start="11:19" pos:end="11:97">(<argument pos:start="11:20" pos:end="11:41"><expr pos:start="11:20" pos:end="11:41"><operator pos:start="11:20" pos:end="11:20">&amp;</operator><name pos:start="11:21" pos:end="11:41"><name pos:start="11:21" pos:end="11:22">sl</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:41">bipred_scratchpad</name></name></expr></argument>, <argument pos:start="11:44" pos:end="11:75"><expr pos:start="11:44" pos:end="11:75"><operator pos:start="11:44" pos:end="11:44">&amp;</operator><name pos:start="11:45" pos:end="11:75"><name pos:start="11:45" pos:end="11:46">sl</name><operator pos:start="11:47" pos:end="11:48">-&gt;</operator><name pos:start="11:49" pos:end="11:75">bipred_scratchpad_allocated</name></name></expr></argument>, <argument pos:start="11:78" pos:end="11:96"><expr pos:start="11:78" pos:end="11:96"><literal type="number" pos:start="11:78" pos:end="11:79">16</literal> <operator pos:start="11:81" pos:end="11:81">*</operator> <literal type="number" pos:start="11:83" pos:end="11:83">6</literal> <operator pos:start="11:85" pos:end="11:85">*</operator> <name pos:start="11:87" pos:end="11:96">alloc_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="13:5" pos:end="13:51">// edge emu needs blocksize + filter length - 1</comment>

    <comment type="line" pos:start="15:5" pos:end="15:26">// (= 21x21 for  h264)</comment>

    <expr_stmt pos:start="17:5" pos:end="17:94"><expr pos:start="17:5" pos:end="17:93"><call pos:start="17:5" pos:end="17:93"><name pos:start="17:5" pos:end="17:18">av_fast_malloc</name><argument_list pos:start="17:19" pos:end="17:93">(<argument pos:start="17:20" pos:end="17:39"><expr pos:start="17:20" pos:end="17:39"><operator pos:start="17:20" pos:end="17:20">&amp;</operator><name pos:start="17:21" pos:end="17:39"><name pos:start="17:21" pos:end="17:22">sl</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:39">edge_emu_buffer</name></name></expr></argument>, <argument pos:start="17:42" pos:end="17:71"><expr pos:start="17:42" pos:end="17:71"><operator pos:start="17:42" pos:end="17:42">&amp;</operator><name pos:start="17:43" pos:end="17:71"><name pos:start="17:43" pos:end="17:44">sl</name><operator pos:start="17:45" pos:end="17:46">-&gt;</operator><name pos:start="17:47" pos:end="17:71">edge_emu_buffer_allocated</name></name></expr></argument>, <argument pos:start="17:74" pos:end="17:92"><expr pos:start="17:74" pos:end="17:92"><name pos:start="17:74" pos:end="17:83">alloc_size</name> <operator pos:start="17:85" pos:end="17:85">*</operator> <literal type="number" pos:start="17:87" pos:end="17:87">2</literal> <operator pos:start="17:89" pos:end="17:89">*</operator> <literal type="number" pos:start="17:91" pos:end="17:92">21</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="23:63"><expr pos:start="21:5" pos:end="23:62"><call pos:start="21:5" pos:end="23:62"><name pos:start="21:5" pos:end="21:18">av_fast_malloc</name><argument_list pos:start="21:19" pos:end="23:62">(<argument pos:start="21:20" pos:end="21:38"><expr pos:start="21:20" pos:end="21:38"><operator pos:start="21:20" pos:end="21:20">&amp;</operator><name pos:start="21:21" pos:end="21:38"><name pos:start="21:21" pos:end="21:22">sl</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:35">top_borders</name><index pos:start="21:36" pos:end="21:38">[<expr pos:start="21:37" pos:end="21:37"><literal type="number" pos:start="21:37" pos:end="21:37">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="21:41" pos:end="21:69"><expr pos:start="21:41" pos:end="21:69"><operator pos:start="21:41" pos:end="21:41">&amp;</operator><name pos:start="21:42" pos:end="21:69"><name pos:start="21:42" pos:end="21:43">sl</name><operator pos:start="21:44" pos:end="21:45">-&gt;</operator><name pos:start="21:46" pos:end="21:66">top_borders_allocated</name><index pos:start="21:67" pos:end="21:69">[<expr pos:start="21:68" pos:end="21:68"><literal type="number" pos:start="21:68" pos:end="21:68">0</literal></expr>]</index></name></expr></argument>,

                   <argument pos:start="23:20" pos:end="23:61"><expr pos:start="23:20" pos:end="23:61"><name pos:start="23:20" pos:end="23:30"><name pos:start="23:20" pos:end="23:20">h</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:30">mb_width</name></name> <operator pos:start="23:32" pos:end="23:32">*</operator> <literal type="number" pos:start="23:34" pos:end="23:35">16</literal> <operator pos:start="23:37" pos:end="23:37">*</operator> <literal type="number" pos:start="23:39" pos:end="23:39">3</literal> <operator pos:start="23:41" pos:end="23:41">*</operator> <sizeof pos:start="23:43" pos:end="23:57">sizeof<argument_list pos:start="23:49" pos:end="23:57">(<argument pos:start="23:50" pos:end="23:56"><expr pos:start="23:50" pos:end="23:56"><name pos:start="23:50" pos:end="23:56">uint8_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="23:59" pos:end="23:59">*</operator> <literal type="number" pos:start="23:61" pos:end="23:61">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:63"><expr pos:start="25:5" pos:end="27:62"><call pos:start="25:5" pos:end="27:62"><name pos:start="25:5" pos:end="25:18">av_fast_malloc</name><argument_list pos:start="25:19" pos:end="27:62">(<argument pos:start="25:20" pos:end="25:38"><expr pos:start="25:20" pos:end="25:38"><operator pos:start="25:20" pos:end="25:20">&amp;</operator><name pos:start="25:21" pos:end="25:38"><name pos:start="25:21" pos:end="25:22">sl</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:35">top_borders</name><index pos:start="25:36" pos:end="25:38">[<expr pos:start="25:37" pos:end="25:37"><literal type="number" pos:start="25:37" pos:end="25:37">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="25:41" pos:end="25:69"><expr pos:start="25:41" pos:end="25:69"><operator pos:start="25:41" pos:end="25:41">&amp;</operator><name pos:start="25:42" pos:end="25:69"><name pos:start="25:42" pos:end="25:43">sl</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:66">top_borders_allocated</name><index pos:start="25:67" pos:end="25:69">[<expr pos:start="25:68" pos:end="25:68"><literal type="number" pos:start="25:68" pos:end="25:68">1</literal></expr>]</index></name></expr></argument>,

                   <argument pos:start="27:20" pos:end="27:61"><expr pos:start="27:20" pos:end="27:61"><name pos:start="27:20" pos:end="27:30"><name pos:start="27:20" pos:end="27:20">h</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:30">mb_width</name></name> <operator pos:start="27:32" pos:end="27:32">*</operator> <literal type="number" pos:start="27:34" pos:end="27:35">16</literal> <operator pos:start="27:37" pos:end="27:37">*</operator> <literal type="number" pos:start="27:39" pos:end="27:39">3</literal> <operator pos:start="27:41" pos:end="27:41">*</operator> <sizeof pos:start="27:43" pos:end="27:57">sizeof<argument_list pos:start="27:49" pos:end="27:57">(<argument pos:start="27:50" pos:end="27:56"><expr pos:start="27:50" pos:end="27:56"><name pos:start="27:50" pos:end="27:56">uint8_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="27:59" pos:end="27:59">*</operator> <literal type="number" pos:start="27:61" pos:end="27:61">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="55:5"><if pos:start="31:5" pos:end="55:5">if <condition pos:start="31:8" pos:end="33:54">(<expr pos:start="31:9" pos:end="33:53"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:30"><name pos:start="31:10" pos:end="31:11">sl</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:30">bipred_scratchpad</name></name> <operator pos:start="31:32" pos:end="31:33">||</operator> <operator pos:start="31:35" pos:end="31:35">!</operator><name pos:start="31:36" pos:end="31:54"><name pos:start="31:36" pos:end="31:37">sl</name><operator pos:start="31:38" pos:end="31:39">-&gt;</operator><name pos:start="31:40" pos:end="31:54">edge_emu_buffer</name></name> <operator pos:start="31:56" pos:end="31:57">||</operator>

        <operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:27"><name pos:start="33:10" pos:end="33:11">sl</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:24">top_borders</name><index pos:start="33:25" pos:end="33:27">[<expr pos:start="33:26" pos:end="33:26"><literal type="number" pos:start="33:26" pos:end="33:26">0</literal></expr>]</index></name>    <operator pos:start="33:32" pos:end="33:33">||</operator> <operator pos:start="33:35" pos:end="33:35">!</operator><name pos:start="33:36" pos:end="33:53"><name pos:start="33:36" pos:end="33:37">sl</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:50">top_borders</name><index pos:start="33:51" pos:end="33:53">[<expr pos:start="33:52" pos:end="33:52"><literal type="number" pos:start="33:52" pos:end="33:52">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="33:56" pos:end="55:5">{<block_content pos:start="35:9" pos:end="53:31">

        <expr_stmt pos:start="35:9" pos:end="35:41"><expr pos:start="35:9" pos:end="35:40"><call pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:16">av_freep</name><argument_list pos:start="35:17" pos:end="35:40">(<argument pos:start="35:18" pos:end="35:39"><expr pos:start="35:18" pos:end="35:39"><operator pos:start="35:18" pos:end="35:18">&amp;</operator><name pos:start="35:19" pos:end="35:39"><name pos:start="35:19" pos:end="35:20">sl</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:39">bipred_scratchpad</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:39"><expr pos:start="37:9" pos:end="37:38"><call pos:start="37:9" pos:end="37:38"><name pos:start="37:9" pos:end="37:16">av_freep</name><argument_list pos:start="37:17" pos:end="37:38">(<argument pos:start="37:18" pos:end="37:37"><expr pos:start="37:18" pos:end="37:37"><operator pos:start="37:18" pos:end="37:18">&amp;</operator><name pos:start="37:19" pos:end="37:37"><name pos:start="37:19" pos:end="37:20">sl</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:37">edge_emu_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:38"><expr pos:start="39:9" pos:end="39:37"><call pos:start="39:9" pos:end="39:37"><name pos:start="39:9" pos:end="39:16">av_freep</name><argument_list pos:start="39:17" pos:end="39:37">(<argument pos:start="39:18" pos:end="39:36"><expr pos:start="39:18" pos:end="39:36"><operator pos:start="39:18" pos:end="39:18">&amp;</operator><name pos:start="39:19" pos:end="39:36"><name pos:start="39:19" pos:end="39:20">sl</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:33">top_borders</name><index pos:start="39:34" pos:end="39:36">[<expr pos:start="39:35" pos:end="39:35"><literal type="number" pos:start="39:35" pos:end="39:35">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:38"><expr pos:start="41:9" pos:end="41:37"><call pos:start="41:9" pos:end="41:37"><name pos:start="41:9" pos:end="41:16">av_freep</name><argument_list pos:start="41:17" pos:end="41:37">(<argument pos:start="41:18" pos:end="41:36"><expr pos:start="41:18" pos:end="41:36"><operator pos:start="41:18" pos:end="41:18">&amp;</operator><name pos:start="41:19" pos:end="41:36"><name pos:start="41:19" pos:end="41:20">sl</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:33">top_borders</name><index pos:start="41:34" pos:end="41:36">[<expr pos:start="41:35" pos:end="41:35"><literal type="number" pos:start="41:35" pos:end="41:35">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:44"><expr pos:start="45:9" pos:end="45:43"><name pos:start="45:9" pos:end="45:39"><name pos:start="45:9" pos:end="45:10">sl</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:39">bipred_scratchpad_allocated</name></name> <operator pos:start="45:41" pos:end="45:41">=</operator> <literal type="number" pos:start="45:43" pos:end="45:43">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:44"><expr pos:start="47:9" pos:end="47:43"><name pos:start="47:9" pos:end="47:37"><name pos:start="47:9" pos:end="47:10">sl</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:37">edge_emu_buffer_allocated</name></name>   <operator pos:start="47:41" pos:end="47:41">=</operator> <literal type="number" pos:start="47:43" pos:end="47:43">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:44"><expr pos:start="49:9" pos:end="49:43"><name pos:start="49:9" pos:end="49:36"><name pos:start="49:9" pos:end="49:10">sl</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:33">top_borders_allocated</name><index pos:start="49:34" pos:end="49:36">[<expr pos:start="49:35" pos:end="49:35"><literal type="number" pos:start="49:35" pos:end="49:35">0</literal></expr>]</index></name>    <operator pos:start="49:41" pos:end="49:41">=</operator> <literal type="number" pos:start="49:43" pos:end="49:43">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:44"><expr pos:start="51:9" pos:end="51:43"><name pos:start="51:9" pos:end="51:36"><name pos:start="51:9" pos:end="51:10">sl</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:33">top_borders_allocated</name><index pos:start="51:34" pos:end="51:36">[<expr pos:start="51:35" pos:end="51:35"><literal type="number" pos:start="51:35" pos:end="51:35">1</literal></expr>]</index></name>    <operator pos:start="51:41" pos:end="51:41">=</operator> <literal type="number" pos:start="51:43" pos:end="51:43">0</literal></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:31">return <expr pos:start="53:16" pos:end="53:30"><call pos:start="53:16" pos:end="53:30"><name pos:start="53:16" pos:end="53:22">AVERROR</name><argument_list pos:start="53:23" pos:end="53:30">(<argument pos:start="53:24" pos:end="53:29"><expr pos:start="53:24" pos:end="53:29"><name pos:start="53:24" pos:end="53:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
