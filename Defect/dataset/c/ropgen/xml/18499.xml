<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18499.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">virtio_net_set_status</name><parameter_list pos:start="1:34" pos:end="1:76">(<parameter pos:start="1:35" pos:end="1:59"><decl pos:start="1:35" pos:end="1:59"><type pos:start="1:35" pos:end="1:59"><name pos:start="1:35" pos:end="1:53"><name pos:start="1:35" pos:end="1:40">struct</name> <name pos:start="1:42" pos:end="1:53">VirtIODevice</name></name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">vdev</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:75"><decl pos:start="1:62" pos:end="1:75"><type pos:start="1:62" pos:end="1:75"><name pos:start="1:62" pos:end="1:68">uint8_t</name></type> <name pos:start="1:70" pos:end="1:75">status</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:5">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">VirtIONet</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">n</name> <init pos:start="5:18" pos:end="5:35">= <expr pos:start="5:20" pos:end="5:35"><call pos:start="5:20" pos:end="5:35"><name pos:start="5:20" pos:end="5:29">VIRTIO_NET</name><argument_list pos:start="5:30" pos:end="5:35">(<argument pos:start="5:31" pos:end="5:34"><expr pos:start="5:31" pos:end="5:34"><name pos:start="5:31" pos:end="5:34">vdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">VirtIONetQueue</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">q</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:24">queue_status</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:45"><expr pos:start="15:5" pos:end="15:44"><call pos:start="15:5" pos:end="15:44"><name pos:start="15:5" pos:end="15:33">virtio_net_vnet_endian_status</name><argument_list pos:start="15:34" pos:end="15:44">(<argument pos:start="15:35" pos:end="15:35"><expr pos:start="15:35" pos:end="15:35"><name pos:start="15:35" pos:end="15:35">n</name></expr></argument>, <argument pos:start="15:38" pos:end="15:43"><expr pos:start="15:38" pos:end="15:43"><name pos:start="15:38" pos:end="15:43">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:39"><expr pos:start="17:5" pos:end="17:38"><call pos:start="17:5" pos:end="17:38"><name pos:start="17:5" pos:end="17:27">virtio_net_vhost_status</name><argument_list pos:start="17:28" pos:end="17:38">(<argument pos:start="17:29" pos:end="17:29"><expr pos:start="17:29" pos:end="17:29"><name pos:start="17:29" pos:end="17:29">n</name></expr></argument>, <argument pos:start="17:32" pos:end="17:37"><expr pos:start="17:32" pos:end="17:37"><name pos:start="17:32" pos:end="17:37">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="21:5" pos:end="107:5">for <control pos:start="21:9" pos:end="21:39">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:34"><expr pos:start="21:17" pos:end="21:33"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:33"><name pos:start="21:21" pos:end="21:21">n</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:33">max_queues</name></name></expr>;</condition> <incr pos:start="21:36" pos:end="21:38"><expr pos:start="21:36" pos:end="21:38"><name pos:start="21:36" pos:end="21:36">i</name><operator pos:start="21:37" pos:end="21:38">++</operator></expr></incr>)</control> <block pos:start="21:41" pos:end="107:5">{<block_content pos:start="23:9" pos:end="105:9">

        <decl_stmt pos:start="23:9" pos:end="23:59"><decl pos:start="23:9" pos:end="23:58"><type pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:22">NetClientState</name> <modifier pos:start="23:24" pos:end="23:24">*</modifier></type><name pos:start="23:25" pos:end="23:27">ncs</name> <init pos:start="23:29" pos:end="23:58">= <expr pos:start="23:31" pos:end="23:58"><call pos:start="23:31" pos:end="23:58"><name pos:start="23:31" pos:end="23:47">qemu_get_subqueue</name><argument_list pos:start="23:48" pos:end="23:58">(<argument pos:start="23:49" pos:end="23:54"><expr pos:start="23:49" pos:end="23:54"><name pos:start="23:49" pos:end="23:54"><name pos:start="23:49" pos:end="23:49">n</name><operator pos:start="23:50" pos:end="23:51">-&gt;</operator><name pos:start="23:52" pos:end="23:54">nic</name></name></expr></argument>, <argument pos:start="23:57" pos:end="23:57"><expr pos:start="23:57" pos:end="23:57"><name pos:start="23:57" pos:end="23:57">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:27"><decl pos:start="25:9" pos:end="25:26"><type pos:start="25:9" pos:end="25:12"><name pos:start="25:9" pos:end="25:12">bool</name></type> <name pos:start="25:14" pos:end="25:26">queue_started</name></decl>;</decl_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:23"><expr pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:9">q</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <operator pos:start="27:13" pos:end="27:13">&amp;</operator><name pos:start="27:14" pos:end="27:22"><name pos:start="27:14" pos:end="27:14">n</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:19">vqs</name><index pos:start="27:20" pos:end="27:22">[<expr pos:start="27:21" pos:end="27:21"><name pos:start="27:21" pos:end="27:21">i</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="31:9" pos:end="39:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:62">(<expr pos:start="31:13" pos:end="31:61"><operator pos:start="31:13" pos:end="31:13">(</operator><operator pos:start="31:14" pos:end="31:14">!</operator><name pos:start="31:15" pos:end="31:27"><name pos:start="31:15" pos:end="31:15">n</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:27">multiqueue</name></name> <operator pos:start="31:29" pos:end="31:30">&amp;&amp;</operator> <name pos:start="31:32" pos:end="31:32">i</name> <operator pos:start="31:34" pos:end="31:35">!=</operator> <literal type="number" pos:start="31:37" pos:end="31:37">0</literal><operator pos:start="31:38" pos:end="31:38">)</operator> <operator pos:start="31:40" pos:end="31:41">||</operator> <name pos:start="31:43" pos:end="31:43">i</name> <operator pos:start="31:45" pos:end="31:46">&gt;=</operator> <name pos:start="31:48" pos:end="31:61"><name pos:start="31:48" pos:end="31:48">n</name><operator pos:start="31:49" pos:end="31:50">-&gt;</operator><name pos:start="31:51" pos:end="31:61">curr_queues</name></name></expr>)</condition> <block pos:start="31:64" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:29">

            <expr_stmt pos:start="33:13" pos:end="33:29"><expr pos:start="33:13" pos:end="33:28"><name pos:start="33:13" pos:end="33:24">queue_status</name> <operator pos:start="33:26" pos:end="33:26">=</operator> <literal type="number" pos:start="33:28" pos:end="33:28">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="35:11" pos:end="39:9">else <block pos:start="35:16" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:34">

            <expr_stmt pos:start="37:13" pos:end="37:34"><expr pos:start="37:13" pos:end="37:33"><name pos:start="37:13" pos:end="37:24">queue_status</name> <operator pos:start="37:26" pos:end="37:26">=</operator> <name pos:start="37:28" pos:end="37:33">status</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="43:69"><expr pos:start="41:9" pos:end="43:68"><name pos:start="41:9" pos:end="41:21">queue_started</name> <operator pos:start="41:23" pos:end="41:23">=</operator>

            <call pos:start="43:13" pos:end="43:47"><name pos:start="43:13" pos:end="43:30">virtio_net_started</name><argument_list pos:start="43:31" pos:end="43:47">(<argument pos:start="43:32" pos:end="43:32"><expr pos:start="43:32" pos:end="43:32"><name pos:start="43:32" pos:end="43:32">n</name></expr></argument>, <argument pos:start="43:35" pos:end="43:46"><expr pos:start="43:35" pos:end="43:46"><name pos:start="43:35" pos:end="43:46">queue_status</name></expr></argument>)</argument_list></call> <operator pos:start="43:49" pos:end="43:50">&amp;&amp;</operator> <operator pos:start="43:52" pos:end="43:52">!</operator><name pos:start="43:53" pos:end="43:68"><name pos:start="43:53" pos:end="43:53">n</name><operator pos:start="43:54" pos:end="43:55">-&gt;</operator><name pos:start="43:56" pos:end="43:68">vhost_started</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="47:9" pos:end="51:9"><if pos:start="47:9" pos:end="51:9">if <condition pos:start="47:12" pos:end="47:26">(<expr pos:start="47:13" pos:end="47:25"><name pos:start="47:13" pos:end="47:25">queue_started</name></expr>)</condition> <block pos:start="47:28" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:43">

            <expr_stmt pos:start="49:13" pos:end="49:43"><expr pos:start="49:13" pos:end="49:42"><call pos:start="49:13" pos:end="49:42"><name pos:start="49:13" pos:end="49:37">qemu_flush_queued_packets</name><argument_list pos:start="49:38" pos:end="49:42">(<argument pos:start="49:39" pos:end="49:41"><expr pos:start="49:39" pos:end="49:41"><name pos:start="49:39" pos:end="49:41">ncs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="55:9" pos:end="59:9"><if pos:start="55:9" pos:end="59:9">if <condition pos:start="55:12" pos:end="55:27">(<expr pos:start="55:13" pos:end="55:26"><operator pos:start="55:13" pos:end="55:13">!</operator><name pos:start="55:14" pos:end="55:26"><name pos:start="55:14" pos:end="55:14">q</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:26">tx_waiting</name></name></expr>)</condition> <block pos:start="55:29" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:21">

            <continue pos:start="57:13" pos:end="57:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="63:9" pos:end="105:9"><if pos:start="63:9" pos:end="77:9">if <condition pos:start="63:12" pos:end="63:26">(<expr pos:start="63:13" pos:end="63:25"><name pos:start="63:13" pos:end="63:25">queue_started</name></expr>)</condition> <block pos:start="63:28" pos:end="77:9">{<block_content pos:start="65:13" pos:end="75:13">

            <if_stmt pos:start="65:13" pos:end="75:13"><if pos:start="65:13" pos:end="71:13">if <condition pos:start="65:16" pos:end="65:28">(<expr pos:start="65:17" pos:end="65:27"><name pos:start="65:17" pos:end="65:27"><name pos:start="65:17" pos:end="65:17">q</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:27">tx_timer</name></name></expr>)</condition> <block pos:start="65:30" pos:end="71:13">{<block_content pos:start="67:17" pos:end="69:86">

                <expr_stmt pos:start="67:17" pos:end="69:86"><expr pos:start="67:17" pos:end="69:85"><call pos:start="67:17" pos:end="69:85"><name pos:start="67:17" pos:end="67:25">timer_mod</name><argument_list pos:start="67:26" pos:end="69:85">(<argument pos:start="67:27" pos:end="67:37"><expr pos:start="67:27" pos:end="67:37"><name pos:start="67:27" pos:end="67:37"><name pos:start="67:27" pos:end="67:27">q</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:37">tx_timer</name></name></expr></argument>,

                               <argument pos:start="69:32" pos:end="69:84"><expr pos:start="69:32" pos:end="69:84"><call pos:start="69:32" pos:end="69:68"><name pos:start="69:32" pos:end="69:48">qemu_clock_get_ns</name><argument_list pos:start="69:49" pos:end="69:68">(<argument pos:start="69:50" pos:end="69:67"><expr pos:start="69:50" pos:end="69:67"><name pos:start="69:50" pos:end="69:67">QEMU_CLOCK_VIRTUAL</name></expr></argument>)</argument_list></call> <operator pos:start="69:70" pos:end="69:70">+</operator> <name pos:start="69:72" pos:end="69:84"><name pos:start="69:72" pos:end="69:72">n</name><operator pos:start="69:73" pos:end="69:74">-&gt;</operator><name pos:start="69:75" pos:end="69:84">tx_timeout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="71:15" pos:end="75:13">else <block pos:start="71:20" pos:end="75:13">{<block_content pos:start="73:17" pos:end="73:43">

                <expr_stmt pos:start="73:17" pos:end="73:43"><expr pos:start="73:17" pos:end="73:42"><call pos:start="73:17" pos:end="73:42"><name pos:start="73:17" pos:end="73:32">qemu_bh_schedule</name><argument_list pos:start="73:33" pos:end="73:42">(<argument pos:start="73:34" pos:end="73:41"><expr pos:start="73:34" pos:end="73:41"><name pos:start="73:34" pos:end="73:41"><name pos:start="73:34" pos:end="73:34">q</name><operator pos:start="73:35" pos:end="73:36">-&gt;</operator><name pos:start="73:37" pos:end="73:41">tx_bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="77:11" pos:end="105:9">else <block pos:start="77:16" pos:end="105:9">{<block_content pos:start="79:13" pos:end="103:13">

            <if_stmt pos:start="79:13" pos:end="87:13"><if pos:start="79:13" pos:end="83:13">if <condition pos:start="79:16" pos:end="79:28">(<expr pos:start="79:17" pos:end="79:27"><name pos:start="79:17" pos:end="79:27"><name pos:start="79:17" pos:end="79:17">q</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:27">tx_timer</name></name></expr>)</condition> <block pos:start="79:30" pos:end="83:13">{<block_content pos:start="81:17" pos:end="81:39">

                <expr_stmt pos:start="81:17" pos:end="81:39"><expr pos:start="81:17" pos:end="81:38"><call pos:start="81:17" pos:end="81:38"><name pos:start="81:17" pos:end="81:25">timer_del</name><argument_list pos:start="81:26" pos:end="81:38">(<argument pos:start="81:27" pos:end="81:37"><expr pos:start="81:27" pos:end="81:37"><name pos:start="81:27" pos:end="81:37"><name pos:start="81:27" pos:end="81:27">q</name><operator pos:start="81:28" pos:end="81:29">-&gt;</operator><name pos:start="81:30" pos:end="81:37">tx_timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="83:15" pos:end="87:13">else <block pos:start="83:20" pos:end="87:13">{<block_content pos:start="85:17" pos:end="85:41">

                <expr_stmt pos:start="85:17" pos:end="85:41"><expr pos:start="85:17" pos:end="85:40"><call pos:start="85:17" pos:end="85:40"><name pos:start="85:17" pos:end="85:30">qemu_bh_cancel</name><argument_list pos:start="85:31" pos:end="85:40">(<argument pos:start="85:32" pos:end="85:39"><expr pos:start="85:32" pos:end="85:39"><name pos:start="85:32" pos:end="85:39"><name pos:start="85:32" pos:end="85:32">q</name><operator pos:start="85:33" pos:end="85:34">-&gt;</operator><name pos:start="85:35" pos:end="85:39">tx_bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="89:13" pos:end="103:13"><if pos:start="89:13" pos:end="103:13">if <condition pos:start="89:16" pos:end="91:59">(<expr pos:start="89:17" pos:end="91:58"><operator pos:start="89:17" pos:end="89:17">(</operator><name pos:start="89:18" pos:end="89:26"><name pos:start="89:18" pos:end="89:18">n</name><operator pos:start="89:19" pos:end="89:20">-&gt;</operator><name pos:start="89:21" pos:end="89:26">status</name></name> <operator pos:start="89:28" pos:end="89:28">&amp;</operator> <name pos:start="89:30" pos:end="89:49">VIRTIO_NET_S_LINK_UP</name><operator pos:start="89:50" pos:end="89:50">)</operator> <operator pos:start="89:52" pos:end="89:53">==</operator> <literal type="number" pos:start="89:55" pos:end="89:55">0</literal> <operator pos:start="89:57" pos:end="89:58">&amp;&amp;</operator>

                <operator pos:start="91:17" pos:end="91:17">(</operator><name pos:start="91:18" pos:end="91:29">queue_status</name> <operator pos:start="91:31" pos:end="91:31">&amp;</operator> <name pos:start="91:33" pos:end="91:57">VIRTIO_CONFIG_S_DRIVER_OK</name><operator pos:start="91:58" pos:end="91:58">)</operator></expr>)</condition> <block pos:start="91:61" pos:end="103:13">{<block_content pos:start="97:17" pos:end="101:62">

                <comment type="block" pos:start="93:17" pos:end="95:47">/* if tx is waiting we are likely have some packets in tx queue

                 * and disabled notification */</comment>

                <expr_stmt pos:start="97:17" pos:end="97:34"><expr pos:start="97:17" pos:end="97:33"><name pos:start="97:17" pos:end="97:29"><name pos:start="97:17" pos:end="97:17">q</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:29">tx_waiting</name></name> <operator pos:start="97:31" pos:end="97:31">=</operator> <literal type="number" pos:start="97:33" pos:end="97:33">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:59"><expr pos:start="99:17" pos:end="99:58"><call pos:start="99:17" pos:end="99:58"><name pos:start="99:17" pos:end="99:45">virtio_queue_set_notification</name><argument_list pos:start="99:46" pos:end="99:58">(<argument pos:start="99:47" pos:end="99:54"><expr pos:start="99:47" pos:end="99:54"><name pos:start="99:47" pos:end="99:54"><name pos:start="99:47" pos:end="99:47">q</name><operator pos:start="99:48" pos:end="99:49">-&gt;</operator><name pos:start="99:50" pos:end="99:54">tx_vq</name></name></expr></argument>, <argument pos:start="99:57" pos:end="99:57"><expr pos:start="99:57" pos:end="99:57"><literal type="number" pos:start="99:57" pos:end="99:57">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:62"><expr pos:start="101:17" pos:end="101:61"><call pos:start="101:17" pos:end="101:61"><name pos:start="101:17" pos:end="101:45">virtio_net_drop_tx_queue_data</name><argument_list pos:start="101:46" pos:end="101:61">(<argument pos:start="101:47" pos:end="101:50"><expr pos:start="101:47" pos:end="101:50"><name pos:start="101:47" pos:end="101:50">vdev</name></expr></argument>, <argument pos:start="101:53" pos:end="101:60"><expr pos:start="101:53" pos:end="101:60"><name pos:start="101:53" pos:end="101:60"><name pos:start="101:53" pos:end="101:53">q</name><operator pos:start="101:54" pos:end="101:55">-&gt;</operator><name pos:start="101:56" pos:end="101:60">tx_vq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
