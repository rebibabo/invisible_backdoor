<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14561.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">mmu_translate_asc</name><parameter_list pos:start="1:29" pos:end="5:36">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:42">CPUS390XState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">env</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:67"><decl pos:start="1:50" pos:end="1:67"><type pos:start="1:50" pos:end="1:67"><name pos:start="1:50" pos:end="1:61">target_ulong</name></type> <name pos:start="1:63" pos:end="1:67">vaddr</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:41"><decl pos:start="3:30" pos:end="3:41"><type pos:start="3:30" pos:end="3:41"><name pos:start="3:30" pos:end="3:37">uint64_t</name></type> <name pos:start="3:39" pos:end="3:41">asc</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:62"><decl pos:start="3:44" pos:end="3:62"><type pos:start="3:44" pos:end="3:62"><name pos:start="3:44" pos:end="3:55">target_ulong</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:62">raddr</name></decl></parameter>, <parameter pos:start="3:65" pos:end="3:74"><decl pos:start="3:65" pos:end="3:74"><type pos:start="3:65" pos:end="3:74"><name pos:start="3:65" pos:end="3:67">int</name> <modifier pos:start="3:69" pos:end="3:69">*</modifier></type><name pos:start="3:70" pos:end="3:74">flags</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:35"><decl pos:start="5:30" pos:end="5:35"><type pos:start="5:30" pos:end="5:35"><name pos:start="5:30" pos:end="5:32">int</name></type> <name pos:start="5:34" pos:end="5:35">rw</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="143:1">{<block_content pos:start="9:5" pos:end="141:13">

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:17">asce</name> <init pos:start="9:19" pos:end="9:21">= <expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">level</name></decl>, <decl pos:start="11:16" pos:end="11:24"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:16" pos:end="11:24">new_level</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">r</name></decl>;</decl_stmt>



    <switch pos:start="17:5" pos:end="43:5">switch <condition pos:start="17:12" pos:end="17:16">(<expr pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">asc</name></expr>)</condition> <block pos:start="17:18" pos:end="43:5">{<block_content pos:start="19:5" pos:end="41:14">

    <case pos:start="19:5" pos:end="19:25">case <expr pos:start="19:10" pos:end="19:24"><name pos:start="19:10" pos:end="19:24">PSW_ASC_PRIMARY</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:51"><expr pos:start="21:9" pos:end="21:50"><call pos:start="21:9" pos:end="21:50"><name pos:start="21:9" pos:end="21:19">PTE_DPRINTF</name><argument_list pos:start="21:20" pos:end="21:50">(<argument pos:start="21:21" pos:end="21:39"><expr pos:start="21:21" pos:end="21:39"><literal type="string" pos:start="21:21" pos:end="21:39">"%s: asc=primary\n"</literal></expr></argument>, <argument pos:start="21:42" pos:end="21:49"><expr pos:start="21:42" pos:end="21:49"><name pos:start="21:42" pos:end="21:49">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:29"><expr pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:12">asce</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <name pos:start="23:16" pos:end="23:28"><name pos:start="23:16" pos:end="23:18">env</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:25">cregs</name><index pos:start="23:26" pos:end="23:28">[<expr pos:start="23:27" pos:end="23:27"><literal type="number" pos:start="23:27" pos:end="23:27">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <case pos:start="27:5" pos:end="27:27">case <expr pos:start="27:10" pos:end="27:26"><name pos:start="27:10" pos:end="27:26">PSW_ASC_SECONDARY</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:53"><expr pos:start="29:9" pos:end="29:52"><call pos:start="29:9" pos:end="29:52"><name pos:start="29:9" pos:end="29:19">PTE_DPRINTF</name><argument_list pos:start="29:20" pos:end="29:52">(<argument pos:start="29:21" pos:end="29:41"><expr pos:start="29:21" pos:end="29:41"><literal type="string" pos:start="29:21" pos:end="29:41">"%s: asc=secondary\n"</literal></expr></argument>, <argument pos:start="29:44" pos:end="29:51"><expr pos:start="29:44" pos:end="29:51"><name pos:start="29:44" pos:end="29:51">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:29"><expr pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:12">asce</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <name pos:start="31:16" pos:end="31:28"><name pos:start="31:16" pos:end="31:18">env</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:25">cregs</name><index pos:start="31:26" pos:end="31:28">[<expr pos:start="31:27" pos:end="31:27"><literal type="number" pos:start="31:27" pos:end="31:27">7</literal></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <case pos:start="35:5" pos:end="35:22">case <expr pos:start="35:10" pos:end="35:21"><name pos:start="35:10" pos:end="35:21">PSW_ASC_HOME</name></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:48"><expr pos:start="37:9" pos:end="37:47"><call pos:start="37:9" pos:end="37:47"><name pos:start="37:9" pos:end="37:19">PTE_DPRINTF</name><argument_list pos:start="37:20" pos:end="37:47">(<argument pos:start="37:21" pos:end="37:36"><expr pos:start="37:21" pos:end="37:36"><literal type="string" pos:start="37:21" pos:end="37:36">"%s: asc=home\n"</literal></expr></argument>, <argument pos:start="37:39" pos:end="37:46"><expr pos:start="37:39" pos:end="37:46"><name pos:start="37:39" pos:end="37:46">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:30"><expr pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:12">asce</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <name pos:start="39:16" pos:end="39:29"><name pos:start="39:16" pos:end="39:18">env</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:25">cregs</name><index pos:start="39:26" pos:end="39:29">[<expr pos:start="39:27" pos:end="39:28"><literal type="number" pos:start="39:27" pos:end="39:28">13</literal></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="47:32">(<expr pos:start="47:9" pos:end="47:31"><name pos:start="47:9" pos:end="47:12">asce</name> <operator pos:start="47:14" pos:end="47:14">&amp;</operator> <name pos:start="47:16" pos:end="47:31">_ASCE_REAL_SPACE</name></expr>)</condition> <block pos:start="47:34" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:17">

        <comment type="block" pos:start="49:9" pos:end="49:28">/* direct mapping */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:23"><expr pos:start="51:9" pos:end="51:22"><operator pos:start="51:9" pos:end="51:9">*</operator><name pos:start="51:10" pos:end="51:14">raddr</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <name pos:start="51:18" pos:end="51:22">vaddr</name></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:17">return <expr pos:start="53:16" pos:end="53:16"><literal type="number" pos:start="53:16" pos:end="53:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="59:5" pos:end="113:5">switch <condition pos:start="59:12" pos:end="59:35">(<expr pos:start="59:13" pos:end="59:34"><name pos:start="59:13" pos:end="59:16">asce</name> <operator pos:start="59:18" pos:end="59:18">&amp;</operator> <name pos:start="59:20" pos:end="59:34">_ASCE_TYPE_MASK</name></expr>)</condition> <block pos:start="59:37" pos:end="113:5">{<block_content pos:start="61:5" pos:end="111:14">

    <case pos:start="61:5" pos:end="61:28">case <expr pos:start="61:10" pos:end="61:27"><name pos:start="61:10" pos:end="61:27">_ASCE_TYPE_REGION1</name></expr>:</case>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    <case pos:start="65:5" pos:end="65:28">case <expr pos:start="65:10" pos:end="65:27"><name pos:start="65:10" pos:end="65:27">_ASCE_TYPE_REGION2</name></expr>:</case>

        <if_stmt pos:start="67:9" pos:end="77:9"><if pos:start="67:9" pos:end="77:9">if <condition pos:start="67:12" pos:end="67:42">(<expr pos:start="67:13" pos:end="67:41"><name pos:start="67:13" pos:end="67:17">vaddr</name> <operator pos:start="67:19" pos:end="67:19">&amp;</operator> <literal type="number" pos:start="67:21" pos:end="67:41">0xffe0000000000000ULL</literal></expr>)</condition> <block pos:start="67:44" pos:end="77:9">{<block_content pos:start="69:13" pos:end="75:22">

            <expr_stmt pos:start="69:13" pos:end="71:65"><expr pos:start="69:13" pos:end="71:64"><call pos:start="69:13" pos:end="71:64"><name pos:start="69:13" pos:end="69:19">DPRINTF</name><argument_list pos:start="69:20" pos:end="71:64">(<argument pos:start="69:21" pos:end="71:46"><expr pos:start="69:21" pos:end="71:46"><literal type="string" pos:start="69:21" pos:end="69:49">"%s: vaddr doesn't fit 0x%16"</literal> <name pos:start="69:51" pos:end="69:56">PRIx64</name>

                    <literal type="string" pos:start="71:21" pos:end="71:46">" 0xffe0000000000000ULL\n"</literal></expr></argument>, <argument pos:start="71:49" pos:end="71:56"><expr pos:start="71:49" pos:end="71:56"><name pos:start="71:49" pos:end="71:56">__func__</name></expr></argument>, <argument pos:start="71:59" pos:end="71:63"><expr pos:start="71:59" pos:end="71:63"><name pos:start="71:59" pos:end="71:63">vaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:68"><expr pos:start="73:13" pos:end="73:67"><call pos:start="73:13" pos:end="73:67"><name pos:start="73:13" pos:end="73:30">trigger_page_fault</name><argument_list pos:start="73:31" pos:end="73:67">(<argument pos:start="73:32" pos:end="73:34"><expr pos:start="73:32" pos:end="73:34"><name pos:start="73:32" pos:end="73:34">env</name></expr></argument>, <argument pos:start="73:37" pos:end="73:41"><expr pos:start="73:37" pos:end="73:41"><name pos:start="73:37" pos:end="73:41">vaddr</name></expr></argument>, <argument pos:start="73:44" pos:end="73:57"><expr pos:start="73:44" pos:end="73:57"><name pos:start="73:44" pos:end="73:57">PGM_TRANS_SPEC</name></expr></argument>, <argument pos:start="73:60" pos:end="73:62"><expr pos:start="73:60" pos:end="73:62"><name pos:start="73:60" pos:end="73:62">asc</name></expr></argument>, <argument pos:start="73:65" pos:end="73:66"><expr pos:start="73:65" pos:end="73:66"><name pos:start="73:65" pos:end="73:66">rw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="75:13" pos:end="75:22">return <expr pos:start="75:20" pos:end="75:21"><operator pos:start="75:20" pos:end="75:20">-</operator><literal type="number" pos:start="75:21" pos:end="75:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    <case pos:start="81:5" pos:end="81:28">case <expr pos:start="81:10" pos:end="81:27"><name pos:start="81:10" pos:end="81:27">_ASCE_TYPE_REGION3</name></expr>:</case>

        <if_stmt pos:start="83:9" pos:end="93:9"><if pos:start="83:9" pos:end="93:9">if <condition pos:start="83:12" pos:end="83:42">(<expr pos:start="83:13" pos:end="83:41"><name pos:start="83:13" pos:end="83:17">vaddr</name> <operator pos:start="83:19" pos:end="83:19">&amp;</operator> <literal type="number" pos:start="83:21" pos:end="83:41">0xfffffc0000000000ULL</literal></expr>)</condition> <block pos:start="83:44" pos:end="93:9">{<block_content pos:start="85:13" pos:end="91:22">

            <expr_stmt pos:start="85:13" pos:end="87:65"><expr pos:start="85:13" pos:end="87:64"><call pos:start="85:13" pos:end="87:64"><name pos:start="85:13" pos:end="85:19">DPRINTF</name><argument_list pos:start="85:20" pos:end="87:64">(<argument pos:start="85:21" pos:end="87:46"><expr pos:start="85:21" pos:end="87:46"><literal type="string" pos:start="85:21" pos:end="85:49">"%s: vaddr doesn't fit 0x%16"</literal> <name pos:start="85:51" pos:end="85:56">PRIx64</name>

                    <literal type="string" pos:start="87:21" pos:end="87:46">" 0xfffffc0000000000ULL\n"</literal></expr></argument>, <argument pos:start="87:49" pos:end="87:56"><expr pos:start="87:49" pos:end="87:56"><name pos:start="87:49" pos:end="87:56">__func__</name></expr></argument>, <argument pos:start="87:59" pos:end="87:63"><expr pos:start="87:59" pos:end="87:63"><name pos:start="87:59" pos:end="87:63">vaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:68"><expr pos:start="89:13" pos:end="89:67"><call pos:start="89:13" pos:end="89:67"><name pos:start="89:13" pos:end="89:30">trigger_page_fault</name><argument_list pos:start="89:31" pos:end="89:67">(<argument pos:start="89:32" pos:end="89:34"><expr pos:start="89:32" pos:end="89:34"><name pos:start="89:32" pos:end="89:34">env</name></expr></argument>, <argument pos:start="89:37" pos:end="89:41"><expr pos:start="89:37" pos:end="89:41"><name pos:start="89:37" pos:end="89:41">vaddr</name></expr></argument>, <argument pos:start="89:44" pos:end="89:57"><expr pos:start="89:44" pos:end="89:57"><name pos:start="89:44" pos:end="89:57">PGM_TRANS_SPEC</name></expr></argument>, <argument pos:start="89:60" pos:end="89:62"><expr pos:start="89:60" pos:end="89:62"><name pos:start="89:60" pos:end="89:62">asc</name></expr></argument>, <argument pos:start="89:65" pos:end="89:66"><expr pos:start="89:65" pos:end="89:66"><name pos:start="89:65" pos:end="89:66">rw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="91:13" pos:end="91:22">return <expr pos:start="91:20" pos:end="91:21"><operator pos:start="91:20" pos:end="91:20">-</operator><literal type="number" pos:start="91:21" pos:end="91:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="95:9" pos:end="95:14">break;</break>

    <case pos:start="97:5" pos:end="97:28">case <expr pos:start="97:10" pos:end="97:27"><name pos:start="97:10" pos:end="97:27">_ASCE_TYPE_SEGMENT</name></expr>:</case>

        <if_stmt pos:start="99:9" pos:end="109:9"><if pos:start="99:9" pos:end="109:9">if <condition pos:start="99:12" pos:end="99:42">(<expr pos:start="99:13" pos:end="99:41"><name pos:start="99:13" pos:end="99:17">vaddr</name> <operator pos:start="99:19" pos:end="99:19">&amp;</operator> <literal type="number" pos:start="99:21" pos:end="99:41">0xffffffff80000000ULL</literal></expr>)</condition> <block pos:start="99:44" pos:end="109:9">{<block_content pos:start="101:13" pos:end="107:22">

            <expr_stmt pos:start="101:13" pos:end="103:65"><expr pos:start="101:13" pos:end="103:64"><call pos:start="101:13" pos:end="103:64"><name pos:start="101:13" pos:end="101:19">DPRINTF</name><argument_list pos:start="101:20" pos:end="103:64">(<argument pos:start="101:21" pos:end="103:46"><expr pos:start="101:21" pos:end="103:46"><literal type="string" pos:start="101:21" pos:end="101:49">"%s: vaddr doesn't fit 0x%16"</literal> <name pos:start="101:51" pos:end="101:56">PRIx64</name>

                    <literal type="string" pos:start="103:21" pos:end="103:46">" 0xffffffff80000000ULL\n"</literal></expr></argument>, <argument pos:start="103:49" pos:end="103:56"><expr pos:start="103:49" pos:end="103:56"><name pos:start="103:49" pos:end="103:56">__func__</name></expr></argument>, <argument pos:start="103:59" pos:end="103:63"><expr pos:start="103:59" pos:end="103:63"><name pos:start="103:59" pos:end="103:63">vaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:68"><expr pos:start="105:13" pos:end="105:67"><call pos:start="105:13" pos:end="105:67"><name pos:start="105:13" pos:end="105:30">trigger_page_fault</name><argument_list pos:start="105:31" pos:end="105:67">(<argument pos:start="105:32" pos:end="105:34"><expr pos:start="105:32" pos:end="105:34"><name pos:start="105:32" pos:end="105:34">env</name></expr></argument>, <argument pos:start="105:37" pos:end="105:41"><expr pos:start="105:37" pos:end="105:41"><name pos:start="105:37" pos:end="105:41">vaddr</name></expr></argument>, <argument pos:start="105:44" pos:end="105:57"><expr pos:start="105:44" pos:end="105:57"><name pos:start="105:44" pos:end="105:57">PGM_TRANS_SPEC</name></expr></argument>, <argument pos:start="105:60" pos:end="105:62"><expr pos:start="105:60" pos:end="105:62"><name pos:start="105:60" pos:end="105:62">asc</name></expr></argument>, <argument pos:start="105:65" pos:end="105:66"><expr pos:start="105:65" pos:end="105:66"><name pos:start="105:65" pos:end="105:66">rw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="107:13" pos:end="107:22">return <expr pos:start="107:20" pos:end="107:21"><operator pos:start="107:20" pos:end="107:20">-</operator><literal type="number" pos:start="107:21" pos:end="107:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="111:9" pos:end="111:14">break;</break>

    </block_content>}</block></switch>



    <comment type="block" pos:start="117:5" pos:end="117:34">/* fake level above current */</comment>

    <expr_stmt pos:start="119:5" pos:end="119:35"><expr pos:start="119:5" pos:end="119:34"><name pos:start="119:5" pos:end="119:9">level</name> <operator pos:start="119:11" pos:end="119:11">=</operator> <name pos:start="119:13" pos:end="119:16">asce</name> <operator pos:start="119:18" pos:end="119:18">&amp;</operator> <name pos:start="119:20" pos:end="119:34">_ASCE_TYPE_MASK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:26"><expr pos:start="121:5" pos:end="121:25"><name pos:start="121:5" pos:end="121:13">new_level</name> <operator pos:start="121:15" pos:end="121:15">=</operator> <name pos:start="121:17" pos:end="121:21">level</name> <operator pos:start="121:23" pos:end="121:23">+</operator> <literal type="number" pos:start="121:25" pos:end="121:25">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:69"><expr pos:start="123:5" pos:end="123:68"><name pos:start="123:5" pos:end="123:8">asce</name> <operator pos:start="123:10" pos:end="123:10">=</operator> <operator pos:start="123:12" pos:end="123:12">(</operator><name pos:start="123:13" pos:end="123:16">asce</name> <operator pos:start="123:18" pos:end="123:18">&amp;</operator> <operator pos:start="123:20" pos:end="123:20">~</operator><name pos:start="123:21" pos:end="123:35">_ASCE_TYPE_MASK</name><operator pos:start="123:36" pos:end="123:36">)</operator> <operator pos:start="123:38" pos:end="123:38">|</operator> <operator pos:start="123:40" pos:end="123:40">(</operator><name pos:start="123:41" pos:end="123:49">new_level</name> <operator pos:start="123:51" pos:end="123:51">&amp;</operator> <name pos:start="123:53" pos:end="123:67">_ASCE_TYPE_MASK</name><operator pos:start="123:68" pos:end="123:68">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:79"><expr pos:start="127:5" pos:end="127:78"><name pos:start="127:5" pos:end="127:5">r</name> <operator pos:start="127:7" pos:end="127:7">=</operator> <call pos:start="127:9" pos:end="127:78"><name pos:start="127:9" pos:end="127:26">mmu_translate_asce</name><argument_list pos:start="127:27" pos:end="127:78">(<argument pos:start="127:28" pos:end="127:30"><expr pos:start="127:28" pos:end="127:30"><name pos:start="127:28" pos:end="127:30">env</name></expr></argument>, <argument pos:start="127:33" pos:end="127:37"><expr pos:start="127:33" pos:end="127:37"><name pos:start="127:33" pos:end="127:37">vaddr</name></expr></argument>, <argument pos:start="127:40" pos:end="127:42"><expr pos:start="127:40" pos:end="127:42"><name pos:start="127:40" pos:end="127:42">asc</name></expr></argument>, <argument pos:start="127:45" pos:end="127:48"><expr pos:start="127:45" pos:end="127:48"><name pos:start="127:45" pos:end="127:48">asce</name></expr></argument>, <argument pos:start="127:51" pos:end="127:59"><expr pos:start="127:51" pos:end="127:59"><name pos:start="127:51" pos:end="127:59">new_level</name></expr></argument>, <argument pos:start="127:62" pos:end="127:66"><expr pos:start="127:62" pos:end="127:66"><name pos:start="127:62" pos:end="127:66">raddr</name></expr></argument>, <argument pos:start="127:69" pos:end="127:73"><expr pos:start="127:69" pos:end="127:73"><name pos:start="127:69" pos:end="127:73">flags</name></expr></argument>, <argument pos:start="127:76" pos:end="127:77"><expr pos:start="127:76" pos:end="127:77"><name pos:start="127:76" pos:end="127:77">rw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="131:5" pos:end="137:5"><if pos:start="131:5" pos:end="137:5">if <condition pos:start="131:8" pos:end="131:44">(<expr pos:start="131:9" pos:end="131:43"><operator pos:start="131:9" pos:end="131:9">(</operator><name pos:start="131:10" pos:end="131:11">rw</name> <operator pos:start="131:13" pos:end="131:14">==</operator> <literal type="number" pos:start="131:16" pos:end="131:16">1</literal><operator pos:start="131:17" pos:end="131:17">)</operator> <operator pos:start="131:19" pos:end="131:20">&amp;&amp;</operator> <operator pos:start="131:22" pos:end="131:22">!</operator><operator pos:start="131:23" pos:end="131:23">(</operator><operator pos:start="131:24" pos:end="131:24">*</operator><name pos:start="131:25" pos:end="131:29">flags</name> <operator pos:start="131:31" pos:end="131:31">&amp;</operator> <name pos:start="131:33" pos:end="131:42">PAGE_WRITE</name><operator pos:start="131:43" pos:end="131:43">)</operator></expr>)</condition> <block pos:start="131:46" pos:end="137:5">{<block_content pos:start="133:9" pos:end="135:18">

        <expr_stmt pos:start="133:9" pos:end="133:44"><expr pos:start="133:9" pos:end="133:43"><call pos:start="133:9" pos:end="133:43"><name pos:start="133:9" pos:end="133:26">trigger_prot_fault</name><argument_list pos:start="133:27" pos:end="133:43">(<argument pos:start="133:28" pos:end="133:30"><expr pos:start="133:28" pos:end="133:30"><name pos:start="133:28" pos:end="133:30">env</name></expr></argument>, <argument pos:start="133:33" pos:end="133:37"><expr pos:start="133:33" pos:end="133:37"><name pos:start="133:33" pos:end="133:37">vaddr</name></expr></argument>, <argument pos:start="133:40" pos:end="133:42"><expr pos:start="133:40" pos:end="133:42"><name pos:start="133:40" pos:end="133:42">asc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="135:9" pos:end="135:18">return <expr pos:start="135:16" pos:end="135:17"><operator pos:start="135:16" pos:end="135:16">-</operator><literal type="number" pos:start="135:17" pos:end="135:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="141:5" pos:end="141:13">return <expr pos:start="141:12" pos:end="141:12"><name pos:start="141:12" pos:end="141:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
