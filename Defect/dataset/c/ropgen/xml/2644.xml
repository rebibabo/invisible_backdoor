<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2644.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">file_open</name><parameter_list pos:start="1:21" pos:end="1:68">(<parameter pos:start="1:22" pos:end="1:34"><decl pos:start="1:22" pos:end="1:34"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:31">URLContext</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:34">h</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:56"><decl pos:start="1:37" pos:end="1:56"><type pos:start="1:37" pos:end="1:56"><specifier pos:start="1:37" pos:end="1:41">const</specifier> <name pos:start="1:43" pos:end="1:46">char</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:56">filename</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:67"><decl pos:start="1:59" pos:end="1:67"><type pos:start="1:59" pos:end="1:67"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:67">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:13">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">access</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:11"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">fd</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:46"><expr pos:start="11:5" pos:end="11:45"><call pos:start="11:5" pos:end="11:45"><name pos:start="11:5" pos:end="11:15">av_strstart</name><argument_list pos:start="11:16" pos:end="11:45">(<argument pos:start="11:17" pos:end="11:24"><expr pos:start="11:17" pos:end="11:24"><name pos:start="11:17" pos:end="11:24">filename</name></expr></argument>, <argument pos:start="11:27" pos:end="11:33"><expr pos:start="11:27" pos:end="11:33"><literal type="string" pos:start="11:27" pos:end="11:33">"file:"</literal></expr></argument>, <argument pos:start="11:36" pos:end="11:44"><expr pos:start="11:36" pos:end="11:44"><operator pos:start="11:36" pos:end="11:36">&amp;</operator><name pos:start="11:37" pos:end="11:44">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="30:0"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:25">(<expr pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:13">flags</name> <operator pos:start="15:15" pos:end="15:15">&amp;</operator> <name pos:start="15:17" pos:end="15:24">URL_RDWR</name></expr>)</condition> <block pos:start="15:27" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:44">

        <expr_stmt pos:start="17:9" pos:end="17:44"><expr pos:start="17:9" pos:end="17:43"><name pos:start="17:9" pos:end="17:14">access</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <name pos:start="17:18" pos:end="17:24">O_CREAT</name> <operator pos:start="17:26" pos:end="17:26">|</operator> <name pos:start="17:28" pos:end="17:34">O_TRUNC</name> <operator pos:start="17:36" pos:end="17:36">|</operator> <name pos:start="17:38" pos:end="17:43">O_RDWR</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="19:7" pos:end="23:5">else if <condition pos:start="19:15" pos:end="19:34">(<expr pos:start="19:16" pos:end="19:33"><name pos:start="19:16" pos:end="19:20">flags</name> <operator pos:start="19:22" pos:end="19:22">&amp;</operator> <name pos:start="19:24" pos:end="19:33">URL_WRONLY</name></expr>)</condition> <block pos:start="19:36" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:46">

        <expr_stmt pos:start="21:9" pos:end="21:46"><expr pos:start="21:9" pos:end="21:45"><name pos:start="21:9" pos:end="21:14">access</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:24">O_CREAT</name> <operator pos:start="21:26" pos:end="21:26">|</operator> <name pos:start="21:28" pos:end="21:34">O_TRUNC</name> <operator pos:start="21:36" pos:end="21:36">|</operator> <name pos:start="21:38" pos:end="21:45">O_WRONLY</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="30:0">else <block pos:start="23:12" pos:end="30:0">{<block_content pos:start="25:9" pos:end="25:26">

        <expr_stmt pos:start="25:9" pos:end="25:26"><expr pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:14">access</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <name pos:start="25:18" pos:end="25:25">O_RDONLY</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

<cpp:if pos:start="29:1" pos:end="29:70">#<cpp:directive pos:start="29:2" pos:end="29:3">if</cpp:directive> <expr pos:start="29:5" pos:end="29:70"><call pos:start="29:5" pos:end="29:24"><name pos:start="29:5" pos:end="29:11">defined</name><argument_list pos:start="29:12" pos:end="29:24">(<argument pos:start="29:13" pos:end="29:23"><expr pos:start="29:13" pos:end="29:23"><name pos:start="29:13" pos:end="29:23">__MINGW32__</name></expr></argument>)</argument_list></call> <operator pos:start="29:26" pos:end="29:27">||</operator> <call pos:start="29:29" pos:end="29:47"><name pos:start="29:29" pos:end="29:35">defined</name><argument_list pos:start="29:36" pos:end="29:47">(<argument pos:start="29:37" pos:end="29:46"><expr pos:start="29:37" pos:end="29:46"><name pos:start="29:37" pos:end="29:46">CONFIG_OS2</name></expr></argument>)</argument_list></call> <operator pos:start="29:49" pos:end="29:50">||</operator> <call pos:start="29:52" pos:end="29:70"><name pos:start="29:52" pos:end="29:58">defined</name><argument_list pos:start="29:59" pos:end="29:70">(<argument pos:start="29:60" pos:end="29:69"><expr pos:start="29:60" pos:end="29:69"><name pos:start="29:60" pos:end="29:69">__CYGWIN__</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="31:5" pos:end="34:0"><expr pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:10">access</name> <operator pos:start="31:12" pos:end="31:13">|=</operator> <name pos:start="31:15" pos:end="31:22">O_BINARY</name></expr>;</expr_stmt>

<cpp:endif pos:start="33:1" pos:end="33:6">#<cpp:directive pos:start="33:2" pos:end="33:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="35:5" pos:end="35:38"><expr pos:start="35:5" pos:end="35:37"><name pos:start="35:5" pos:end="35:6">fd</name> <operator pos:start="35:8" pos:end="35:8">=</operator> <call pos:start="35:10" pos:end="35:37"><name pos:start="35:10" pos:end="35:13">open</name><argument_list pos:start="35:14" pos:end="35:37">(<argument pos:start="35:15" pos:end="35:22"><expr pos:start="35:15" pos:end="35:22"><name pos:start="35:15" pos:end="35:22">filename</name></expr></argument>, <argument pos:start="35:25" pos:end="35:30"><expr pos:start="35:25" pos:end="35:30"><name pos:start="35:25" pos:end="35:30">access</name></expr></argument>, <argument pos:start="35:33" pos:end="35:36"><expr pos:start="35:33" pos:end="35:36"><literal type="number" pos:start="35:33" pos:end="35:36">0666</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="39:31"><if pos:start="37:5" pos:end="39:31">if <condition pos:start="37:8" pos:end="37:15">(<expr pos:start="37:9" pos:end="37:14"><name pos:start="37:9" pos:end="37:10">fd</name> <operator pos:start="37:12" pos:end="37:12">&lt;</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:31"><block_content pos:start="39:9" pos:end="39:31">

        <return pos:start="39:9" pos:end="39:31">return <expr pos:start="39:16" pos:end="39:30"><call pos:start="39:16" pos:end="39:30"><name pos:start="39:16" pos:end="39:22">AVERROR</name><argument_list pos:start="39:23" pos:end="39:30">(<argument pos:start="39:24" pos:end="39:29"><expr pos:start="39:24" pos:end="39:29"><name pos:start="39:24" pos:end="39:29">ENOENT</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:38"><expr pos:start="41:5" pos:end="41:37"><name pos:start="41:5" pos:end="41:16"><name pos:start="41:5" pos:end="41:5">h</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:16">priv_data</name></name> <operator pos:start="41:18" pos:end="41:18">=</operator> <operator pos:start="41:20" pos:end="41:20">(</operator><name pos:start="41:21" pos:end="41:24">void</name> <operator pos:start="41:26" pos:end="41:26">*</operator><operator pos:start="41:27" pos:end="41:27">)</operator><operator pos:start="41:28" pos:end="41:28">(</operator><name pos:start="41:29" pos:end="41:34">size_t</name><operator pos:start="41:35" pos:end="41:35">)</operator><name pos:start="41:36" pos:end="41:37">fd</name></expr>;</expr_stmt>

    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
