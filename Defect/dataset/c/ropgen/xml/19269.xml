<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19269.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">nvenc_get_frame</name><parameter_list pos:start="1:27" pos:end="1:64">(<parameter pos:start="1:28" pos:end="1:48"><decl pos:start="1:28" pos:end="1:48"><type pos:start="1:28" pos:end="1:48"><name pos:start="1:28" pos:end="1:41">AVCodecContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:48">avctx</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:63"><decl pos:start="1:51" pos:end="1:63"><type pos:start="1:51" pos:end="1:63"><name pos:start="1:51" pos:end="1:58">AVPacket</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="117:1">{<block_content pos:start="5:5" pos:end="115:13">

    <decl_stmt pos:start="5:5" pos:end="5:55"><decl pos:start="5:5" pos:end="5:54"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">NVENCContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">ctx</name>               <init pos:start="5:37" pos:end="5:54">= <expr pos:start="5:39" pos:end="5:54"><name pos:start="5:39" pos:end="5:54"><name pos:start="5:39" pos:end="5:43">avctx</name><operator pos:start="5:44" pos:end="5:45">-&gt;</operator><name pos:start="5:46" pos:end="5:54">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:61"><decl pos:start="7:5" pos:end="7:60"><type pos:start="7:5" pos:end="7:33"><name pos:start="7:5" pos:end="7:31">NV_ENCODE_API_FUNCTION_LIST</name> <modifier pos:start="7:33" pos:end="7:33">*</modifier></type><name pos:start="7:34" pos:end="7:35">nv</name> <init pos:start="7:37" pos:end="7:60">= <expr pos:start="7:39" pos:end="7:60"><operator pos:start="7:39" pos:end="7:39">&amp;</operator><name pos:start="7:40" pos:end="7:60"><name pos:start="7:40" pos:end="7:42">ctx</name><operator pos:start="7:43" pos:end="7:44">-&gt;</operator><name pos:start="7:45" pos:end="7:48">nvel</name><operator pos:start="7:49" pos:end="7:49">.</operator><name pos:start="7:50" pos:end="7:60">nvenc_funcs</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:25">NV_ENC_LOCK_BITSTREAM</name></type> <name pos:start="9:27" pos:end="9:32">params</name>    <init pos:start="9:37" pos:end="9:43">= <expr pos:start="9:39" pos:end="9:43"><block pos:start="9:39" pos:end="9:43">{ <expr pos:start="9:41" pos:end="9:41"><literal type="number" pos:start="9:41" pos:end="9:41">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:43"><decl pos:start="11:5" pos:end="11:42"><type pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:22">NVENCOutputSurface</name> <modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:27">out</name>         <init pos:start="11:37" pos:end="11:42">= <expr pos:start="11:39" pos:end="11:42"><name pos:start="11:39" pos:end="11:42">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:52"><expr pos:start="17:5" pos:end="17:51"><name pos:start="17:5" pos:end="17:7">ret</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:51"><name pos:start="17:11" pos:end="17:31">nvenc_dequeue_surface</name><argument_list pos:start="17:32" pos:end="17:51">(<argument pos:start="17:33" pos:end="17:44"><expr pos:start="17:33" pos:end="17:44"><name pos:start="17:33" pos:end="17:44"><name pos:start="17:33" pos:end="17:35">ctx</name><operator pos:start="17:36" pos:end="17:37">-&gt;</operator><name pos:start="17:38" pos:end="17:44">pending</name></name></expr></argument>, <argument pos:start="17:47" pos:end="17:50"><expr pos:start="17:47" pos:end="17:50"><operator pos:start="17:47" pos:end="17:47">&amp;</operator><name pos:start="17:48" pos:end="17:50">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:19"><if pos:start="19:5" pos:end="21:19">if <condition pos:start="19:8" pos:end="19:12">(<expr pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">ret</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:19"><block_content pos:start="21:9" pos:end="21:19">

        <return pos:start="21:9" pos:end="21:19">return <expr pos:start="21:16" pos:end="21:18"><name pos:start="21:16" pos:end="21:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:55"><expr pos:start="25:5" pos:end="25:54"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:10">params</name><operator pos:start="25:11" pos:end="25:11">.</operator><name pos:start="25:12" pos:end="25:18">version</name></name>         <operator pos:start="25:28" pos:end="25:28">=</operator> <name pos:start="25:30" pos:end="25:54">NV_ENC_LOCK_BITSTREAM_VER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:38"><expr pos:start="27:5" pos:end="27:37"><name pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:10">params</name><operator pos:start="27:11" pos:end="27:11">.</operator><name pos:start="27:12" pos:end="27:26">outputBitstream</name></name> <operator pos:start="27:28" pos:end="27:28">=</operator> <name pos:start="27:30" pos:end="27:37"><name pos:start="27:30" pos:end="27:32">out</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:37">out</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:58"><expr pos:start="31:5" pos:end="31:57"><name pos:start="31:5" pos:end="31:7">ret</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:57"><name pos:start="31:11" pos:end="31:32"><name pos:start="31:11" pos:end="31:12">nv</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:32">nvEncLockBitstream</name></name><argument_list pos:start="31:33" pos:end="31:57">(<argument pos:start="31:34" pos:end="31:47"><expr pos:start="31:34" pos:end="31:47"><name pos:start="31:34" pos:end="31:47"><name pos:start="31:34" pos:end="31:36">ctx</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:47">nvenc_ctx</name></name></expr></argument>, <argument pos:start="31:50" pos:end="31:56"><expr pos:start="31:50" pos:end="31:56"><operator pos:start="31:50" pos:end="31:50">&amp;</operator><name pos:start="31:51" pos:end="31:56">params</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="35:74"><if pos:start="33:5" pos:end="35:74">if <condition pos:start="33:8" pos:end="33:16">(<expr pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">&lt;</operator> <literal type="number" pos:start="33:15" pos:end="33:15">0</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:74"><block_content pos:start="35:9" pos:end="35:74">

        <return pos:start="35:9" pos:end="35:74">return <expr pos:start="35:16" pos:end="35:73"><call pos:start="35:16" pos:end="35:73"><name pos:start="35:16" pos:end="35:32">nvenc_print_error</name><argument_list pos:start="35:33" pos:end="35:73">(<argument pos:start="35:34" pos:end="35:38"><expr pos:start="35:34" pos:end="35:38"><name pos:start="35:34" pos:end="35:38">avctx</name></expr></argument>, <argument pos:start="35:41" pos:end="35:43"><expr pos:start="35:41" pos:end="35:43"><name pos:start="35:41" pos:end="35:43">ret</name></expr></argument>, <argument pos:start="35:46" pos:end="35:72"><expr pos:start="35:46" pos:end="35:72"><literal type="string" pos:start="35:46" pos:end="35:72">"Cannot lock the bitstream"</literal></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:60"><expr pos:start="39:5" pos:end="39:59"><name pos:start="39:5" pos:end="39:7">ret</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="39:59"><name pos:start="39:11" pos:end="39:25">ff_alloc_packet</name><argument_list pos:start="39:26" pos:end="39:59">(<argument pos:start="39:27" pos:end="39:29"><expr pos:start="39:27" pos:end="39:29"><name pos:start="39:27" pos:end="39:29">pkt</name></expr></argument>, <argument pos:start="39:32" pos:end="39:58"><expr pos:start="39:32" pos:end="39:58"><name pos:start="39:32" pos:end="39:58"><name pos:start="39:32" pos:end="39:37">params</name><operator pos:start="39:38" pos:end="39:38">.</operator><name pos:start="39:39" pos:end="39:58">bitstreamSizeInBytes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="43:19"><if pos:start="41:5" pos:end="43:19">if <condition pos:start="41:8" pos:end="41:16">(<expr pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">&lt;</operator> <literal type="number" pos:start="41:15" pos:end="41:15">0</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:19"><block_content pos:start="43:9" pos:end="43:19">

        <return pos:start="43:9" pos:end="43:19">return <expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:60"><expr pos:start="47:5" pos:end="47:59"><call pos:start="47:5" pos:end="47:59"><name pos:start="47:5" pos:end="47:10">memcpy</name><argument_list pos:start="47:11" pos:end="47:59">(<argument pos:start="47:12" pos:end="47:20"><expr pos:start="47:12" pos:end="47:20"><name pos:start="47:12" pos:end="47:20"><name pos:start="47:12" pos:end="47:14">pkt</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:20">data</name></name></expr></argument>, <argument pos:start="47:23" pos:end="47:47"><expr pos:start="47:23" pos:end="47:47"><name pos:start="47:23" pos:end="47:47"><name pos:start="47:23" pos:end="47:28">params</name><operator pos:start="47:29" pos:end="47:29">.</operator><name pos:start="47:30" pos:end="47:47">bitstreamBufferPtr</name></name></expr></argument>, <argument pos:start="47:50" pos:end="47:58"><expr pos:start="47:50" pos:end="47:58"><name pos:start="47:50" pos:end="47:58"><name pos:start="47:50" pos:end="47:52">pkt</name><operator pos:start="47:53" pos:end="47:54">-&gt;</operator><name pos:start="47:55" pos:end="47:58">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:61"><expr pos:start="51:5" pos:end="51:60"><name pos:start="51:5" pos:end="51:7">ret</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <call pos:start="51:11" pos:end="51:60"><name pos:start="51:11" pos:end="51:34"><name pos:start="51:11" pos:end="51:12">nv</name><operator pos:start="51:13" pos:end="51:14">-&gt;</operator><name pos:start="51:15" pos:end="51:34">nvEncUnlockBitstream</name></name><argument_list pos:start="51:35" pos:end="51:60">(<argument pos:start="51:36" pos:end="51:49"><expr pos:start="51:36" pos:end="51:49"><name pos:start="51:36" pos:end="51:49"><name pos:start="51:36" pos:end="51:38">ctx</name><operator pos:start="51:39" pos:end="51:40">-&gt;</operator><name pos:start="51:41" pos:end="51:49">nvenc_ctx</name></name></expr></argument>, <argument pos:start="51:52" pos:end="51:59"><expr pos:start="51:52" pos:end="51:59"><name pos:start="51:52" pos:end="51:59"><name pos:start="51:52" pos:end="51:54">out</name><operator pos:start="51:55" pos:end="51:56">-&gt;</operator><name pos:start="51:57" pos:end="51:59">out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="55:76"><if pos:start="53:5" pos:end="55:76">if <condition pos:start="53:8" pos:end="53:16">(<expr pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:13">&lt;</operator> <literal type="number" pos:start="53:15" pos:end="53:15">0</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:76"><block_content pos:start="55:9" pos:end="55:76">

        <return pos:start="55:9" pos:end="55:76">return <expr pos:start="55:16" pos:end="55:75"><call pos:start="55:16" pos:end="55:75"><name pos:start="55:16" pos:end="55:32">nvenc_print_error</name><argument_list pos:start="55:33" pos:end="55:75">(<argument pos:start="55:34" pos:end="55:38"><expr pos:start="55:34" pos:end="55:38"><name pos:start="55:34" pos:end="55:38">avctx</name></expr></argument>, <argument pos:start="55:41" pos:end="55:43"><expr pos:start="55:41" pos:end="55:43"><name pos:start="55:41" pos:end="55:43">ret</name></expr></argument>, <argument pos:start="55:46" pos:end="55:74"><expr pos:start="55:46" pos:end="55:74"><literal type="string" pos:start="55:46" pos:end="55:74">"Cannot unlock the bitstream"</literal></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:36"><expr pos:start="59:5" pos:end="59:35"><name pos:start="59:5" pos:end="59:13"><name pos:start="59:5" pos:end="59:7">out</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:13">busy</name></name> <operator pos:start="59:15" pos:end="59:15">=</operator> <name pos:start="59:17" pos:end="59:31"><name pos:start="59:17" pos:end="59:19">out</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:23">in</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:31">locked</name></name> <operator pos:start="59:33" pos:end="59:33">=</operator> <literal type="number" pos:start="59:35" pos:end="59:35">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:49"><expr pos:start="63:5" pos:end="63:48"><name pos:start="63:5" pos:end="63:7">ret</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <call pos:start="63:11" pos:end="63:48"><name pos:start="63:11" pos:end="63:29">nvenc_set_timestamp</name><argument_list pos:start="63:30" pos:end="63:48">(<argument pos:start="63:31" pos:end="63:33"><expr pos:start="63:31" pos:end="63:33"><name pos:start="63:31" pos:end="63:33">ctx</name></expr></argument>, <argument pos:start="63:36" pos:end="63:42"><expr pos:start="63:36" pos:end="63:42"><operator pos:start="63:36" pos:end="63:36">&amp;</operator><name pos:start="63:37" pos:end="63:42">params</name></expr></argument>, <argument pos:start="63:45" pos:end="63:47"><expr pos:start="63:45" pos:end="63:47"><name pos:start="63:45" pos:end="63:47">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="67:19"><if pos:start="65:5" pos:end="67:19">if <condition pos:start="65:8" pos:end="65:16">(<expr pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:11">ret</name> <operator pos:start="65:13" pos:end="65:13">&lt;</operator> <literal type="number" pos:start="65:15" pos:end="65:15">0</literal></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:19"><block_content pos:start="67:9" pos:end="67:19">

        <return pos:start="67:9" pos:end="67:19">return <expr pos:start="67:16" pos:end="67:18"><name pos:start="67:16" pos:end="67:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <switch pos:start="71:5" pos:end="111:5">switch <condition pos:start="71:12" pos:end="71:31">(<expr pos:start="71:13" pos:end="71:30"><name pos:start="71:13" pos:end="71:30"><name pos:start="71:13" pos:end="71:18">params</name><operator pos:start="71:19" pos:end="71:19">.</operator><name pos:start="71:20" pos:end="71:30">pictureType</name></name></expr>)</condition> <block pos:start="71:33" pos:end="111:5">{<block_content pos:start="73:5" pos:end="110:0">

    <case pos:start="73:5" pos:end="73:29">case <expr pos:start="73:10" pos:end="73:28"><name pos:start="73:10" pos:end="73:28">NV_ENC_PIC_TYPE_IDR</name></expr>:</case>

        <expr_stmt pos:start="75:9" pos:end="78:0"><expr pos:start="75:9" pos:end="75:37"><name pos:start="75:9" pos:end="75:18"><name pos:start="75:9" pos:end="75:11">pkt</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:18">flags</name></name> <operator pos:start="75:20" pos:end="75:21">|=</operator> <name pos:start="75:23" pos:end="75:37">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>

<cpp:if pos:start="77:1" pos:end="77:22">#<cpp:directive pos:start="77:2" pos:end="77:3">if</cpp:directive> <expr pos:start="77:5" pos:end="77:22"><name pos:start="77:5" pos:end="77:22">FF_API_CODED_FRAME</name></expr></cpp:if>

<macro pos:start="79:1" pos:end="79:31"><name pos:start="79:1" pos:end="79:31">FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

    <case pos:start="81:5" pos:end="81:39">case <expr pos:start="81:10" pos:end="81:38"><name pos:start="81:10" pos:end="81:38">NV_ENC_PIC_TYPE_INTRA_REFRESH</name></expr>:</case>

    <case pos:start="83:5" pos:end="83:27">case <expr pos:start="83:10" pos:end="83:26"><name pos:start="83:10" pos:end="83:26">NV_ENC_PIC_TYPE_I</name></expr>:</case>

        <expr_stmt pos:start="85:9" pos:end="85:58"><expr pos:start="85:9" pos:end="85:57"><name pos:start="85:9" pos:end="85:37"><name pos:start="85:9" pos:end="85:13">avctx</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:26">coded_frame</name><operator pos:start="85:27" pos:end="85:28">-&gt;</operator><name pos:start="85:29" pos:end="85:37">pict_type</name></name> <operator pos:start="85:39" pos:end="85:39">=</operator> <name pos:start="85:41" pos:end="85:57">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    <case pos:start="89:5" pos:end="89:27">case <expr pos:start="89:10" pos:end="89:26"><name pos:start="89:10" pos:end="89:26">NV_ENC_PIC_TYPE_P</name></expr>:</case>

        <expr_stmt pos:start="91:9" pos:end="91:58"><expr pos:start="91:9" pos:end="91:57"><name pos:start="91:9" pos:end="91:37"><name pos:start="91:9" pos:end="91:13">avctx</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:26">coded_frame</name><operator pos:start="91:27" pos:end="91:28">-&gt;</operator><name pos:start="91:29" pos:end="91:37">pict_type</name></name> <operator pos:start="91:39" pos:end="91:39">=</operator> <name pos:start="91:41" pos:end="91:57">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    <case pos:start="95:5" pos:end="95:27">case <expr pos:start="95:10" pos:end="95:26"><name pos:start="95:10" pos:end="95:26">NV_ENC_PIC_TYPE_B</name></expr>:</case>

        <expr_stmt pos:start="97:9" pos:end="97:58"><expr pos:start="97:9" pos:end="97:57"><name pos:start="97:9" pos:end="97:37"><name pos:start="97:9" pos:end="97:13">avctx</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:26">coded_frame</name><operator pos:start="97:27" pos:end="97:28">-&gt;</operator><name pos:start="97:29" pos:end="97:37">pict_type</name></name> <operator pos:start="97:39" pos:end="97:39">=</operator> <name pos:start="97:41" pos:end="97:57">AV_PICTURE_TYPE_B</name></expr>;</expr_stmt>

        <break pos:start="99:9" pos:end="99:14">break;</break>

    <case pos:start="101:5" pos:end="101:28">case <expr pos:start="101:10" pos:end="101:27"><name pos:start="101:10" pos:end="101:27">NV_ENC_PIC_TYPE_BI</name></expr>:</case>

        <expr_stmt pos:start="103:9" pos:end="103:59"><expr pos:start="103:9" pos:end="103:58"><name pos:start="103:9" pos:end="103:37"><name pos:start="103:9" pos:end="103:13">avctx</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:26">coded_frame</name><operator pos:start="103:27" pos:end="103:28">-&gt;</operator><name pos:start="103:29" pos:end="103:37">pict_type</name></name> <operator pos:start="103:39" pos:end="103:39">=</operator> <name pos:start="103:41" pos:end="103:58">AV_PICTURE_TYPE_BI</name></expr>;</expr_stmt>

        <break pos:start="105:9" pos:end="105:14">break;</break>

<expr_stmt pos:start="107:1" pos:end="110:0"><expr pos:start="107:1" pos:end="110:0"><name pos:start="107:1" pos:end="110:0">FF_ENABLE_DEPRECATION_WARNINGS</name></expr></expr_stmt>

<cpp:endif pos:start="109:1" pos:end="109:6">#<cpp:directive pos:start="109:2" pos:end="109:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></switch>



    <return pos:start="115:5" pos:end="115:13">return <expr pos:start="115:12" pos:end="115:12"><literal type="number" pos:start="115:12" pos:end="115:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
