<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17167.c" pos:tabs="8"><function pos:start="1:1" pos:end="285:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">avformat_write_header</name><parameter_list pos:start="1:26" pos:end="1:69">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:44"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:68"><decl pos:start="1:47" pos:end="1:68"><type pos:start="1:47" pos:end="1:68"><name pos:start="1:47" pos:end="1:58">AVDictionary</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier><modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:68">options</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="285:1">{<block_content pos:start="5:5" pos:end="283:15">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>, <decl pos:start="5:18" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">AVDictionary</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">tmp</name> <init pos:start="9:23" pos:end="9:28">= <expr pos:start="9:25" pos:end="9:28"><name pos:start="9:25" pos:end="9:28">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:40"><if pos:start="13:5" pos:end="15:40">if <condition pos:start="13:8" pos:end="13:16">(<expr pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:15">options</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:40"><block_content pos:start="15:9" pos:end="15:40">

        <expr_stmt pos:start="15:9" pos:end="15:40"><expr pos:start="15:9" pos:end="15:39"><call pos:start="15:9" pos:end="15:39"><name pos:start="15:9" pos:end="15:20">av_dict_copy</name><argument_list pos:start="15:21" pos:end="15:39">(<argument pos:start="15:22" pos:end="15:25"><expr pos:start="15:22" pos:end="15:25"><operator pos:start="15:22" pos:end="15:22">&amp;</operator><name pos:start="15:23" pos:end="15:25">tmp</name></expr></argument>, <argument pos:start="15:28" pos:end="15:35"><expr pos:start="15:28" pos:end="15:35"><operator pos:start="15:28" pos:end="15:28">*</operator><name pos:start="15:29" pos:end="15:35">options</name></expr></argument>, <argument pos:start="15:38" pos:end="15:38"><expr pos:start="15:38" pos:end="15:38"><literal type="number" pos:start="15:38" pos:end="15:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="17:5" pos:end="19:18"><if pos:start="17:5" pos:end="19:18">if <condition pos:start="17:8" pos:end="17:45">(<expr pos:start="17:9" pos:end="17:44"><operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:12">ret</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="17:39"><name pos:start="17:16" pos:end="17:30">av_opt_set_dict</name><argument_list pos:start="17:31" pos:end="17:39">(<argument pos:start="17:32" pos:end="17:32"><expr pos:start="17:32" pos:end="17:32"><name pos:start="17:32" pos:end="17:32">s</name></expr></argument>, <argument pos:start="17:35" pos:end="17:38"><expr pos:start="17:35" pos:end="17:38"><operator pos:start="17:35" pos:end="17:35">&amp;</operator><name pos:start="17:36" pos:end="17:38">tmp</name></expr></argument>)</argument_list></call><operator pos:start="17:40" pos:end="17:40">)</operator> <operator pos:start="17:42" pos:end="17:42">&lt;</operator> <literal type="number" pos:start="17:44" pos:end="17:44">0</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:18"><block_content pos:start="19:9" pos:end="19:18">

        <goto pos:start="19:9" pos:end="19:18">goto <name pos:start="19:14" pos:end="19:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="25:18"><if pos:start="21:5" pos:end="25:18">if <condition pos:start="21:8" pos:end="23:56">(<expr pos:start="21:9" pos:end="23:55"><name pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:20">priv_data</name></name> <operator pos:start="21:22" pos:end="21:23">&amp;&amp;</operator> <name pos:start="21:25" pos:end="21:46"><name pos:start="21:25" pos:end="21:25">s</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:34">oformat</name><operator pos:start="21:35" pos:end="21:36">-&gt;</operator><name pos:start="21:37" pos:end="21:46">priv_class</name></name> <operator pos:start="21:48" pos:end="21:49">&amp;&amp;</operator> <operator pos:start="21:51" pos:end="21:51">*</operator><operator pos:start="21:52" pos:end="21:52">(</operator><specifier pos:start="21:53" pos:end="21:57">const</specifier> <name pos:start="21:59" pos:end="21:65">AVClass</name><operator pos:start="21:66" pos:end="21:66">*</operator><operator pos:start="21:67" pos:end="21:67">*</operator><operator pos:start="21:68" pos:end="21:68">)</operator><name pos:start="21:69" pos:end="21:80"><name pos:start="21:69" pos:end="21:69">s</name><operator pos:start="21:70" pos:end="21:71">-&gt;</operator><name pos:start="21:72" pos:end="21:80">priv_data</name></name><operator pos:start="21:81" pos:end="21:82">==</operator><name pos:start="21:83" pos:end="21:104"><name pos:start="21:83" pos:end="21:83">s</name><operator pos:start="21:84" pos:end="21:85">-&gt;</operator><name pos:start="21:86" pos:end="21:92">oformat</name><operator pos:start="21:93" pos:end="21:94">-&gt;</operator><name pos:start="21:95" pos:end="21:104">priv_class</name></name> <operator pos:start="21:106" pos:end="21:107">&amp;&amp;</operator>

        <operator pos:start="23:9" pos:end="23:9">(</operator><name pos:start="23:10" pos:end="23:12">ret</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <call pos:start="23:16" pos:end="23:50"><name pos:start="23:16" pos:end="23:30">av_opt_set_dict</name><argument_list pos:start="23:31" pos:end="23:50">(<argument pos:start="23:32" pos:end="23:43"><expr pos:start="23:32" pos:end="23:43"><name pos:start="23:32" pos:end="23:43"><name pos:start="23:32" pos:end="23:32">s</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:43">priv_data</name></name></expr></argument>, <argument pos:start="23:46" pos:end="23:49"><expr pos:start="23:46" pos:end="23:49"><operator pos:start="23:46" pos:end="23:46">&amp;</operator><name pos:start="23:47" pos:end="23:49">tmp</name></expr></argument>)</argument_list></call><operator pos:start="23:51" pos:end="23:51">)</operator> <operator pos:start="23:53" pos:end="23:53">&lt;</operator> <literal type="number" pos:start="23:55" pos:end="23:55">0</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

        <goto pos:start="25:9" pos:end="25:18">goto <name pos:start="25:14" pos:end="25:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <comment type="line" pos:start="29:5" pos:end="29:25">// some sanity checks</comment>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:69">(<expr pos:start="31:9" pos:end="31:68"><name pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:21">nb_streams</name></name> <operator pos:start="31:23" pos:end="31:24">==</operator> <literal type="number" pos:start="31:26" pos:end="31:26">0</literal> <operator pos:start="31:28" pos:end="31:29">&amp;&amp;</operator> <operator pos:start="31:31" pos:end="31:31">!</operator><operator pos:start="31:32" pos:end="31:32">(</operator><name pos:start="31:33" pos:end="31:49"><name pos:start="31:33" pos:end="31:33">s</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:42">oformat</name><operator pos:start="31:43" pos:end="31:44">-&gt;</operator><name pos:start="31:45" pos:end="31:49">flags</name></name> <operator pos:start="31:51" pos:end="31:51">&amp;</operator> <name pos:start="31:53" pos:end="31:67">AVFMT_NOSTREAMS</name><operator pos:start="31:68" pos:end="31:68">)</operator></expr>)</condition> <block pos:start="31:71" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:18">

        <expr_stmt pos:start="33:9" pos:end="33:48"><expr pos:start="33:9" pos:end="33:47"><call pos:start="33:9" pos:end="33:47"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:47">(<argument pos:start="33:16" pos:end="33:16"><expr pos:start="33:16" pos:end="33:16"><name pos:start="33:16" pos:end="33:16">s</name></expr></argument>, <argument pos:start="33:19" pos:end="33:30"><expr pos:start="33:19" pos:end="33:30"><name pos:start="33:19" pos:end="33:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:33" pos:end="33:46"><expr pos:start="33:33" pos:end="33:46"><literal type="string" pos:start="33:33" pos:end="33:46">"no streams\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:30"><expr pos:start="35:9" pos:end="35:29"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:29"><name pos:start="35:15" pos:end="35:21">AVERROR</name><argument_list pos:start="35:22" pos:end="35:29">(<argument pos:start="35:23" pos:end="35:28"><expr pos:start="35:23" pos:end="35:28"><name pos:start="35:23" pos:end="35:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="37:9" pos:end="37:18">goto <name pos:start="37:14" pos:end="37:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="43:5" pos:end="167:5">for<control pos:start="43:8" pos:end="43:32">(<init pos:start="43:9" pos:end="43:12"><expr pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:9">i</name><operator pos:start="43:10" pos:end="43:10">=</operator><literal type="number" pos:start="43:11" pos:end="43:11">0</literal></expr>;</init><condition pos:start="43:13" pos:end="43:28"><expr pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:13">i</name><operator pos:start="43:14" pos:end="43:14">&lt;</operator><name pos:start="43:15" pos:end="43:27"><name pos:start="43:15" pos:end="43:15">s</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:27">nb_streams</name></name></expr>;</condition><incr pos:start="43:29" pos:end="43:31"><expr pos:start="43:29" pos:end="43:31"><name pos:start="43:29" pos:end="43:29">i</name><operator pos:start="43:30" pos:end="43:31">++</operator></expr></incr>)</control> <block pos:start="43:34" pos:end="167:5">{<block_content pos:start="45:9" pos:end="165:137">

        <expr_stmt pos:start="45:9" pos:end="45:27"><expr pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:10">st</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <name pos:start="45:14" pos:end="45:26"><name pos:start="45:14" pos:end="45:14">s</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:23">streams</name><index pos:start="45:24" pos:end="45:26">[<expr pos:start="45:25" pos:end="45:25"><name pos:start="45:25" pos:end="45:25">i</name></expr>]</index></name></expr>;</expr_stmt>



        <switch pos:start="49:9" pos:end="117:9">switch <condition pos:start="49:16" pos:end="49:38">(<expr pos:start="49:17" pos:end="49:37"><name pos:start="49:17" pos:end="49:37"><name pos:start="49:17" pos:end="49:18">st</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:25">codec</name><operator pos:start="49:26" pos:end="49:27">-&gt;</operator><name pos:start="49:28" pos:end="49:37">codec_type</name></name></expr>)</condition> <block pos:start="49:40" pos:end="117:9">{<block_content pos:start="51:9" pos:end="115:18">

        <case pos:start="51:9" pos:end="51:32">case <expr pos:start="51:14" pos:end="51:31"><name pos:start="51:14" pos:end="51:31">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

            <if_stmt pos:start="53:13" pos:end="61:13"><if pos:start="53:13" pos:end="61:13">if<condition pos:start="53:15" pos:end="53:41">(<expr pos:start="53:16" pos:end="53:40"><name pos:start="53:16" pos:end="53:37"><name pos:start="53:16" pos:end="53:17">st</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:24">codec</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:37">sample_rate</name></name><operator pos:start="53:38" pos:end="53:39">&lt;=</operator><literal type="number" pos:start="53:40" pos:end="53:40">0</literal></expr>)</condition><block pos:start="53:42" pos:end="61:13">{<block_content pos:start="55:17" pos:end="59:26">

                <expr_stmt pos:start="55:17" pos:end="55:65"><expr pos:start="55:17" pos:end="55:64"><call pos:start="55:17" pos:end="55:64"><name pos:start="55:17" pos:end="55:22">av_log</name><argument_list pos:start="55:23" pos:end="55:64">(<argument pos:start="55:24" pos:end="55:24"><expr pos:start="55:24" pos:end="55:24"><name pos:start="55:24" pos:end="55:24">s</name></expr></argument>, <argument pos:start="55:27" pos:end="55:38"><expr pos:start="55:27" pos:end="55:38"><name pos:start="55:27" pos:end="55:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:41" pos:end="55:63"><expr pos:start="55:41" pos:end="55:63"><literal type="string" pos:start="55:41" pos:end="55:63">"sample rate not set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:38"><expr pos:start="57:17" pos:end="57:37"><name pos:start="57:17" pos:end="57:19">ret</name> <operator pos:start="57:21" pos:end="57:21">=</operator> <call pos:start="57:23" pos:end="57:37"><name pos:start="57:23" pos:end="57:29">AVERROR</name><argument_list pos:start="57:30" pos:end="57:37">(<argument pos:start="57:31" pos:end="57:36"><expr pos:start="57:31" pos:end="57:36"><name pos:start="57:31" pos:end="57:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="59:17" pos:end="59:26">goto <name pos:start="59:22" pos:end="59:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="63:13" pos:end="67:69"><if pos:start="63:13" pos:end="67:69">if<condition pos:start="63:15" pos:end="63:39">(<expr pos:start="63:16" pos:end="63:38"><operator pos:start="63:16" pos:end="63:16">!</operator><name pos:start="63:17" pos:end="63:38"><name pos:start="63:17" pos:end="63:18">st</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:25">codec</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:38">block_align</name></name></expr>)</condition><block type="pseudo" pos:start="65:17" pos:end="67:69"><block_content pos:start="65:17" pos:end="67:69">

                <expr_stmt pos:start="65:17" pos:end="67:69"><expr pos:start="65:17" pos:end="67:68"><name pos:start="65:17" pos:end="65:38"><name pos:start="65:17" pos:end="65:18">st</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:25">codec</name><operator pos:start="65:26" pos:end="65:27">-&gt;</operator><name pos:start="65:28" pos:end="65:38">block_align</name></name> <operator pos:start="65:40" pos:end="65:40">=</operator> <name pos:start="65:42" pos:end="65:60"><name pos:start="65:42" pos:end="65:43">st</name><operator pos:start="65:44" pos:end="65:45">-&gt;</operator><name pos:start="65:46" pos:end="65:50">codec</name><operator pos:start="65:51" pos:end="65:52">-&gt;</operator><name pos:start="65:53" pos:end="65:60">channels</name></name> <operator pos:start="65:62" pos:end="65:62">*</operator>

                    <call pos:start="67:21" pos:end="67:63"><name pos:start="67:21" pos:end="67:42">av_get_bits_per_sample</name><argument_list pos:start="67:43" pos:end="67:63">(<argument pos:start="67:44" pos:end="67:62"><expr pos:start="67:44" pos:end="67:62"><name pos:start="67:44" pos:end="67:62"><name pos:start="67:44" pos:end="67:45">st</name><operator pos:start="67:46" pos:end="67:47">-&gt;</operator><name pos:start="67:48" pos:end="67:52">codec</name><operator pos:start="67:53" pos:end="67:54">-&gt;</operator><name pos:start="67:55" pos:end="67:62">codec_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="67:65" pos:end="67:66">&gt;&gt;</operator> <literal type="number" pos:start="67:68" pos:end="67:68">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="69:13" pos:end="69:18">break;</break>

        <case pos:start="71:9" pos:end="71:32">case <expr pos:start="71:14" pos:end="71:31"><name pos:start="71:14" pos:end="71:31">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

            <if_stmt pos:start="73:13" pos:end="81:13"><if pos:start="73:13" pos:end="81:13">if<condition pos:start="73:15" pos:end="73:74">(<expr pos:start="73:16" pos:end="73:73"><name pos:start="73:16" pos:end="73:39"><name pos:start="73:16" pos:end="73:17">st</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:24">codec</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:35">time_base</name><operator pos:start="73:36" pos:end="73:36">.</operator><name pos:start="73:37" pos:end="73:39">num</name></name><operator pos:start="73:40" pos:end="73:41">&lt;=</operator><literal type="number" pos:start="73:42" pos:end="73:42">0</literal> <operator pos:start="73:44" pos:end="73:45">||</operator> <name pos:start="73:47" pos:end="73:70"><name pos:start="73:47" pos:end="73:48">st</name><operator pos:start="73:49" pos:end="73:50">-&gt;</operator><name pos:start="73:51" pos:end="73:55">codec</name><operator pos:start="73:56" pos:end="73:57">-&gt;</operator><name pos:start="73:58" pos:end="73:66">time_base</name><operator pos:start="73:67" pos:end="73:67">.</operator><name pos:start="73:68" pos:end="73:70">den</name></name><operator pos:start="73:71" pos:end="73:72">&lt;=</operator><literal type="number" pos:start="73:73" pos:end="73:73">0</literal></expr>)</condition><block pos:start="73:75" pos:end="81:13">{<block_content pos:start="75:17" pos:end="79:26"> <comment type="line" pos:start="73:77" pos:end="73:94">//FIXME audio too?</comment>

                <expr_stmt pos:start="75:17" pos:end="75:63"><expr pos:start="75:17" pos:end="75:62"><call pos:start="75:17" pos:end="75:62"><name pos:start="75:17" pos:end="75:22">av_log</name><argument_list pos:start="75:23" pos:end="75:62">(<argument pos:start="75:24" pos:end="75:24"><expr pos:start="75:24" pos:end="75:24"><name pos:start="75:24" pos:end="75:24">s</name></expr></argument>, <argument pos:start="75:27" pos:end="75:38"><expr pos:start="75:27" pos:end="75:38"><name pos:start="75:27" pos:end="75:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="75:41" pos:end="75:61"><expr pos:start="75:41" pos:end="75:61"><literal type="string" pos:start="75:41" pos:end="75:61">"time base not set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:38"><expr pos:start="77:17" pos:end="77:37"><name pos:start="77:17" pos:end="77:19">ret</name> <operator pos:start="77:21" pos:end="77:21">=</operator> <call pos:start="77:23" pos:end="77:37"><name pos:start="77:23" pos:end="77:29">AVERROR</name><argument_list pos:start="77:30" pos:end="77:37">(<argument pos:start="77:31" pos:end="77:36"><expr pos:start="77:31" pos:end="77:36"><name pos:start="77:31" pos:end="77:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="79:17" pos:end="79:26">goto <name pos:start="79:22" pos:end="79:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="83:13" pos:end="91:13"><if pos:start="83:13" pos:end="91:13">if<condition pos:start="83:15" pos:end="83:106">(<expr pos:start="83:16" pos:end="83:105"><operator pos:start="83:16" pos:end="83:16">(</operator><name pos:start="83:17" pos:end="83:32"><name pos:start="83:17" pos:end="83:18">st</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:25">codec</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:32">width</name></name><operator pos:start="83:33" pos:end="83:34">&lt;=</operator><literal type="number" pos:start="83:35" pos:end="83:35">0</literal> <operator pos:start="83:37" pos:end="83:38">||</operator> <name pos:start="83:40" pos:end="83:56"><name pos:start="83:40" pos:end="83:41">st</name><operator pos:start="83:42" pos:end="83:43">-&gt;</operator><name pos:start="83:44" pos:end="83:48">codec</name><operator pos:start="83:49" pos:end="83:50">-&gt;</operator><name pos:start="83:51" pos:end="83:56">height</name></name><operator pos:start="83:57" pos:end="83:58">&lt;=</operator><literal type="number" pos:start="83:59" pos:end="83:59">0</literal><operator pos:start="83:60" pos:end="83:60">)</operator> <operator pos:start="83:62" pos:end="83:63">&amp;&amp;</operator> <operator pos:start="83:65" pos:end="83:65">!</operator><operator pos:start="83:66" pos:end="83:66">(</operator><name pos:start="83:67" pos:end="83:83"><name pos:start="83:67" pos:end="83:67">s</name><operator pos:start="83:68" pos:end="83:69">-&gt;</operator><name pos:start="83:70" pos:end="83:76">oformat</name><operator pos:start="83:77" pos:end="83:78">-&gt;</operator><name pos:start="83:79" pos:end="83:83">flags</name></name> <operator pos:start="83:85" pos:end="83:85">&amp;</operator> <name pos:start="83:87" pos:end="83:104">AVFMT_NODIMENSIONS</name><operator pos:start="83:105" pos:end="83:105">)</operator></expr>)</condition><block pos:start="83:107" pos:end="91:13">{<block_content pos:start="85:17" pos:end="89:26">

                <expr_stmt pos:start="85:17" pos:end="85:64"><expr pos:start="85:17" pos:end="85:63"><call pos:start="85:17" pos:end="85:63"><name pos:start="85:17" pos:end="85:22">av_log</name><argument_list pos:start="85:23" pos:end="85:63">(<argument pos:start="85:24" pos:end="85:24"><expr pos:start="85:24" pos:end="85:24"><name pos:start="85:24" pos:end="85:24">s</name></expr></argument>, <argument pos:start="85:27" pos:end="85:38"><expr pos:start="85:27" pos:end="85:38"><name pos:start="85:27" pos:end="85:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="85:41" pos:end="85:62"><expr pos:start="85:41" pos:end="85:62"><literal type="string" pos:start="85:41" pos:end="85:62">"dimensions not set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:38"><expr pos:start="87:17" pos:end="87:37"><name pos:start="87:17" pos:end="87:19">ret</name> <operator pos:start="87:21" pos:end="87:21">=</operator> <call pos:start="87:23" pos:end="87:37"><name pos:start="87:23" pos:end="87:29">AVERROR</name><argument_list pos:start="87:30" pos:end="87:37">(<argument pos:start="87:31" pos:end="87:36"><expr pos:start="87:31" pos:end="87:36"><name pos:start="87:31" pos:end="87:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="89:17" pos:end="89:26">goto <name pos:start="89:22" pos:end="89:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="93:13" pos:end="113:13"><if pos:start="93:13" pos:end="113:13">if<condition pos:start="93:15" pos:end="97:13">(<expr pos:start="93:16" pos:end="95:137"><call pos:start="93:16" pos:end="93:80"><name pos:start="93:16" pos:end="93:23">av_cmp_q</name><argument_list pos:start="93:24" pos:end="93:80">(<argument pos:start="93:25" pos:end="93:47"><expr pos:start="93:25" pos:end="93:47"><name pos:start="93:25" pos:end="93:47"><name pos:start="93:25" pos:end="93:26">st</name><operator pos:start="93:27" pos:end="93:28">-&gt;</operator><name pos:start="93:29" pos:end="93:47">sample_aspect_ratio</name></name></expr></argument>, <argument pos:start="93:50" pos:end="93:79"><expr pos:start="93:50" pos:end="93:79"><name pos:start="93:50" pos:end="93:79"><name pos:start="93:50" pos:end="93:51">st</name><operator pos:start="93:52" pos:end="93:53">-&gt;</operator><name pos:start="93:54" pos:end="93:58">codec</name><operator pos:start="93:59" pos:end="93:60">-&gt;</operator><name pos:start="93:61" pos:end="93:79">sample_aspect_ratio</name></name></expr></argument>)</argument_list></call>

               <operator pos:start="95:16" pos:end="95:17">&amp;&amp;</operator> <call pos:start="95:19" pos:end="95:97"><name pos:start="95:19" pos:end="95:23">FFABS</name><argument_list pos:start="95:24" pos:end="95:97">(<argument pos:start="95:25" pos:end="95:96"><expr pos:start="95:25" pos:end="95:96"><call pos:start="95:25" pos:end="95:55"><name pos:start="95:25" pos:end="95:30">av_q2d</name><argument_list pos:start="95:31" pos:end="95:55">(<argument pos:start="95:32" pos:end="95:54"><expr pos:start="95:32" pos:end="95:54"><name pos:start="95:32" pos:end="95:54"><name pos:start="95:32" pos:end="95:33">st</name><operator pos:start="95:34" pos:end="95:35">-&gt;</operator><name pos:start="95:36" pos:end="95:54">sample_aspect_ratio</name></name></expr></argument>)</argument_list></call> <operator pos:start="95:57" pos:end="95:57">-</operator> <call pos:start="95:59" pos:end="95:96"><name pos:start="95:59" pos:end="95:64">av_q2d</name><argument_list pos:start="95:65" pos:end="95:96">(<argument pos:start="95:66" pos:end="95:95"><expr pos:start="95:66" pos:end="95:95"><name pos:start="95:66" pos:end="95:95"><name pos:start="95:66" pos:end="95:67">st</name><operator pos:start="95:68" pos:end="95:69">-&gt;</operator><name pos:start="95:70" pos:end="95:74">codec</name><operator pos:start="95:75" pos:end="95:76">-&gt;</operator><name pos:start="95:77" pos:end="95:95">sample_aspect_ratio</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="95:99" pos:end="95:99">&gt;</operator> <literal type="number" pos:start="95:101" pos:end="95:105">0.004</literal><operator pos:start="95:106" pos:end="95:106">*</operator><call pos:start="95:107" pos:end="95:137"><name pos:start="95:107" pos:end="95:112">av_q2d</name><argument_list pos:start="95:113" pos:end="95:137">(<argument pos:start="95:114" pos:end="95:136"><expr pos:start="95:114" pos:end="95:136"><name pos:start="95:114" pos:end="95:136"><name pos:start="95:114" pos:end="95:115">st</name><operator pos:start="95:116" pos:end="95:117">-&gt;</operator><name pos:start="95:118" pos:end="95:136">sample_aspect_ratio</name></name></expr></argument>)</argument_list></call></expr>

            )</condition><block pos:start="97:14" pos:end="113:13">{<block_content pos:start="99:17" pos:end="111:26">

                <expr_stmt pos:start="99:17" pos:end="107:59"><expr pos:start="99:17" pos:end="107:58"><call pos:start="99:17" pos:end="107:58"><name pos:start="99:17" pos:end="99:22">av_log</name><argument_list pos:start="99:23" pos:end="107:58">(<argument pos:start="99:24" pos:end="99:24"><expr pos:start="99:24" pos:end="99:24"><name pos:start="99:24" pos:end="99:24">s</name></expr></argument>, <argument pos:start="99:27" pos:end="99:38"><expr pos:start="99:27" pos:end="99:38"><name pos:start="99:27" pos:end="99:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="99:41" pos:end="101:60"><expr pos:start="99:41" pos:end="101:60"><literal type="string" pos:start="99:41" pos:end="99:78">"Aspect ratio mismatch between muxer "</literal>

                       <literal type="string" pos:start="101:24" pos:end="101:60">"(%d/%d) and encoder layer (%d/%d)\n"</literal></expr></argument>,

                       <argument pos:start="103:24" pos:end="103:50"><expr pos:start="103:24" pos:end="103:50"><name pos:start="103:24" pos:end="103:50"><name pos:start="103:24" pos:end="103:25">st</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:46">sample_aspect_ratio</name><operator pos:start="103:47" pos:end="103:47">.</operator><name pos:start="103:48" pos:end="103:50">num</name></name></expr></argument>, <argument pos:start="103:53" pos:end="103:79"><expr pos:start="103:53" pos:end="103:79"><name pos:start="103:53" pos:end="103:79"><name pos:start="103:53" pos:end="103:54">st</name><operator pos:start="103:55" pos:end="103:56">-&gt;</operator><name pos:start="103:57" pos:end="103:75">sample_aspect_ratio</name><operator pos:start="103:76" pos:end="103:76">.</operator><name pos:start="103:77" pos:end="103:79">den</name></name></expr></argument>,

                       <argument pos:start="105:24" pos:end="105:57"><expr pos:start="105:24" pos:end="105:57"><name pos:start="105:24" pos:end="105:57"><name pos:start="105:24" pos:end="105:25">st</name><operator pos:start="105:26" pos:end="105:27">-&gt;</operator><name pos:start="105:28" pos:end="105:32">codec</name><operator pos:start="105:33" pos:end="105:34">-&gt;</operator><name pos:start="105:35" pos:end="105:53">sample_aspect_ratio</name><operator pos:start="105:54" pos:end="105:54">.</operator><name pos:start="105:55" pos:end="105:57">num</name></name></expr></argument>,

                       <argument pos:start="107:24" pos:end="107:57"><expr pos:start="107:24" pos:end="107:57"><name pos:start="107:24" pos:end="107:57"><name pos:start="107:24" pos:end="107:25">st</name><operator pos:start="107:26" pos:end="107:27">-&gt;</operator><name pos:start="107:28" pos:end="107:32">codec</name><operator pos:start="107:33" pos:end="107:34">-&gt;</operator><name pos:start="107:35" pos:end="107:53">sample_aspect_ratio</name><operator pos:start="107:54" pos:end="107:54">.</operator><name pos:start="107:55" pos:end="107:57">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:38"><expr pos:start="109:17" pos:end="109:37"><name pos:start="109:17" pos:end="109:19">ret</name> <operator pos:start="109:21" pos:end="109:21">=</operator> <call pos:start="109:23" pos:end="109:37"><name pos:start="109:23" pos:end="109:29">AVERROR</name><argument_list pos:start="109:30" pos:end="109:37">(<argument pos:start="109:31" pos:end="109:36"><expr pos:start="109:31" pos:end="109:36"><name pos:start="109:31" pos:end="109:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="111:17" pos:end="111:26">goto <name pos:start="111:22" pos:end="111:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <break pos:start="115:13" pos:end="115:18">break;</break>

        </block_content>}</block></switch>



        <if_stmt pos:start="121:9" pos:end="157:9"><if pos:start="121:9" pos:end="157:9">if<condition pos:start="121:11" pos:end="121:33">(<expr pos:start="121:12" pos:end="121:32"><name pos:start="121:12" pos:end="121:32"><name pos:start="121:12" pos:end="121:12">s</name><operator pos:start="121:13" pos:end="121:14">-&gt;</operator><name pos:start="121:15" pos:end="121:21">oformat</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:32">codec_tag</name></name></expr>)</condition><block pos:start="121:34" pos:end="157:9">{<block_content pos:start="123:13" pos:end="155:99">

            <if_stmt pos:start="123:13" pos:end="129:13"><if pos:start="123:13" pos:end="129:13">if<condition pos:start="123:15" pos:end="123:179">(<expr pos:start="123:16" pos:end="123:178"><name pos:start="123:16" pos:end="123:35"><name pos:start="123:16" pos:end="123:17">st</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:24">codec</name><operator pos:start="123:25" pos:end="123:26">-&gt;</operator><name pos:start="123:27" pos:end="123:35">codec_tag</name></name> <operator pos:start="123:37" pos:end="123:38">&amp;&amp;</operator> <name pos:start="123:40" pos:end="123:58"><name pos:start="123:40" pos:end="123:41">st</name><operator pos:start="123:42" pos:end="123:43">-&gt;</operator><name pos:start="123:44" pos:end="123:48">codec</name><operator pos:start="123:49" pos:end="123:50">-&gt;</operator><name pos:start="123:51" pos:end="123:58">codec_id</name></name> <operator pos:start="123:60" pos:end="123:61">==</operator> <name pos:start="123:63" pos:end="123:79">CODEC_ID_RAWVIDEO</name> <operator pos:start="123:81" pos:end="123:82">&amp;&amp;</operator> <call pos:start="123:84" pos:end="123:143"><name pos:start="123:84" pos:end="123:99">av_codec_get_tag</name><argument_list pos:start="123:100" pos:end="123:143">(<argument pos:start="123:101" pos:end="123:121"><expr pos:start="123:101" pos:end="123:121"><name pos:start="123:101" pos:end="123:121"><name pos:start="123:101" pos:end="123:101">s</name><operator pos:start="123:102" pos:end="123:103">-&gt;</operator><name pos:start="123:104" pos:end="123:110">oformat</name><operator pos:start="123:111" pos:end="123:112">-&gt;</operator><name pos:start="123:113" pos:end="123:121">codec_tag</name></name></expr></argument>, <argument pos:start="123:124" pos:end="123:142"><expr pos:start="123:124" pos:end="123:142"><name pos:start="123:124" pos:end="123:142"><name pos:start="123:124" pos:end="123:125">st</name><operator pos:start="123:126" pos:end="123:127">-&gt;</operator><name pos:start="123:128" pos:end="123:132">codec</name><operator pos:start="123:133" pos:end="123:134">-&gt;</operator><name pos:start="123:135" pos:end="123:142">codec_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="123:145" pos:end="123:146">==</operator> <literal type="number" pos:start="123:148" pos:end="123:148">0</literal> <operator pos:start="123:150" pos:end="123:151">&amp;&amp;</operator> <operator pos:start="123:153" pos:end="123:153">!</operator><call pos:start="123:154" pos:end="123:178"><name pos:start="123:154" pos:end="123:171">validate_codec_tag</name><argument_list pos:start="123:172" pos:end="123:178">(<argument pos:start="123:173" pos:end="123:173"><expr pos:start="123:173" pos:end="123:173"><name pos:start="123:173" pos:end="123:173">s</name></expr></argument>, <argument pos:start="123:176" pos:end="123:177"><expr pos:start="123:176" pos:end="123:177"><name pos:start="123:176" pos:end="123:177">st</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="123:180" pos:end="129:13">{<block_content pos:start="127:17" pos:end="127:40">

                <comment type="line" pos:start="125:17" pos:end="125:119">//the current rawvideo encoding system ends up setting the wrong codec_tag for avi, we override it here</comment>

                <expr_stmt pos:start="127:17" pos:end="127:40"><expr pos:start="127:17" pos:end="127:39"><name pos:start="127:17" pos:end="127:36"><name pos:start="127:17" pos:end="127:18">st</name><operator pos:start="127:19" pos:end="127:20">-&gt;</operator><name pos:start="127:21" pos:end="127:25">codec</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:36">codec_tag</name></name><operator pos:start="127:37" pos:end="127:37">=</operator> <literal type="number" pos:start="127:39" pos:end="127:39">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="131:13" pos:end="155:99"><if pos:start="131:13" pos:end="153:13">if<condition pos:start="131:15" pos:end="131:36">(<expr pos:start="131:16" pos:end="131:35"><name pos:start="131:16" pos:end="131:35"><name pos:start="131:16" pos:end="131:17">st</name><operator pos:start="131:18" pos:end="131:19">-&gt;</operator><name pos:start="131:20" pos:end="131:24">codec</name><operator pos:start="131:25" pos:end="131:26">-&gt;</operator><name pos:start="131:27" pos:end="131:35">codec_tag</name></name></expr>)</condition><block pos:start="131:37" pos:end="153:13">{<block_content pos:start="133:17" pos:end="151:17">

                <if_stmt pos:start="133:17" pos:end="151:17"><if pos:start="133:17" pos:end="151:17">if <condition pos:start="133:20" pos:end="133:47">(<expr pos:start="133:21" pos:end="133:46"><operator pos:start="133:21" pos:end="133:21">!</operator><call pos:start="133:22" pos:end="133:46"><name pos:start="133:22" pos:end="133:39">validate_codec_tag</name><argument_list pos:start="133:40" pos:end="133:46">(<argument pos:start="133:41" pos:end="133:41"><expr pos:start="133:41" pos:end="133:41"><name pos:start="133:41" pos:end="133:41">s</name></expr></argument>, <argument pos:start="133:44" pos:end="133:45"><expr pos:start="133:44" pos:end="133:45"><name pos:start="133:44" pos:end="133:45">st</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="133:49" pos:end="151:17">{<block_content pos:start="135:21" pos:end="149:30">

                    <decl_stmt pos:start="135:21" pos:end="135:48"><decl pos:start="135:21" pos:end="135:35"><type pos:start="135:21" pos:end="135:24"><name pos:start="135:21" pos:end="135:24">char</name></type> <name pos:start="135:26" pos:end="135:35"><name pos:start="135:26" pos:end="135:31">tagbuf</name><index pos:start="135:32" pos:end="135:35">[<expr pos:start="135:33" pos:end="135:34"><literal type="number" pos:start="135:33" pos:end="135:34">32</literal></expr>]</index></name></decl>, <decl pos:start="135:38" pos:end="135:47"><type ref="prev" pos:start="135:21" pos:end="135:24"/><name pos:start="135:38" pos:end="135:47"><name pos:start="135:38" pos:end="135:43">cortag</name><index pos:start="135:44" pos:end="135:47">[<expr pos:start="135:45" pos:end="135:46"><literal type="number" pos:start="135:45" pos:end="135:46">32</literal></expr>]</index></name></decl>;</decl_stmt>

                    <expr_stmt pos:start="137:21" pos:end="137:90"><expr pos:start="137:21" pos:end="137:89"><call pos:start="137:21" pos:end="137:89"><name pos:start="137:21" pos:end="137:43">av_get_codec_tag_string</name><argument_list pos:start="137:44" pos:end="137:89">(<argument pos:start="137:45" pos:end="137:50"><expr pos:start="137:45" pos:end="137:50"><name pos:start="137:45" pos:end="137:50">tagbuf</name></expr></argument>, <argument pos:start="137:53" pos:end="137:66"><expr pos:start="137:53" pos:end="137:66"><sizeof pos:start="137:53" pos:end="137:66">sizeof<argument_list pos:start="137:59" pos:end="137:66">(<argument pos:start="137:60" pos:end="137:65"><expr pos:start="137:60" pos:end="137:65"><name pos:start="137:60" pos:end="137:65">tagbuf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="137:69" pos:end="137:88"><expr pos:start="137:69" pos:end="137:88"><name pos:start="137:69" pos:end="137:88"><name pos:start="137:69" pos:end="137:70">st</name><operator pos:start="137:71" pos:end="137:72">-&gt;</operator><name pos:start="137:73" pos:end="137:77">codec</name><operator pos:start="137:78" pos:end="137:79">-&gt;</operator><name pos:start="137:80" pos:end="137:88">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="139:21" pos:end="139:130"><expr pos:start="139:21" pos:end="139:129"><call pos:start="139:21" pos:end="139:129"><name pos:start="139:21" pos:end="139:43">av_get_codec_tag_string</name><argument_list pos:start="139:44" pos:end="139:129">(<argument pos:start="139:45" pos:end="139:50"><expr pos:start="139:45" pos:end="139:50"><name pos:start="139:45" pos:end="139:50">cortag</name></expr></argument>, <argument pos:start="139:53" pos:end="139:66"><expr pos:start="139:53" pos:end="139:66"><sizeof pos:start="139:53" pos:end="139:66">sizeof<argument_list pos:start="139:59" pos:end="139:66">(<argument pos:start="139:60" pos:end="139:65"><expr pos:start="139:60" pos:end="139:65"><name pos:start="139:60" pos:end="139:65">cortag</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="139:69" pos:end="139:128"><expr pos:start="139:69" pos:end="139:128"><call pos:start="139:69" pos:end="139:128"><name pos:start="139:69" pos:end="139:84">av_codec_get_tag</name><argument_list pos:start="139:85" pos:end="139:128">(<argument pos:start="139:86" pos:end="139:106"><expr pos:start="139:86" pos:end="139:106"><name pos:start="139:86" pos:end="139:106"><name pos:start="139:86" pos:end="139:86">s</name><operator pos:start="139:87" pos:end="139:88">-&gt;</operator><name pos:start="139:89" pos:end="139:95">oformat</name><operator pos:start="139:96" pos:end="139:97">-&gt;</operator><name pos:start="139:98" pos:end="139:106">codec_tag</name></name></expr></argument>, <argument pos:start="139:109" pos:end="139:127"><expr pos:start="139:109" pos:end="139:127"><name pos:start="139:109" pos:end="139:127"><name pos:start="139:109" pos:end="139:110">st</name><operator pos:start="139:111" pos:end="139:112">-&gt;</operator><name pos:start="139:113" pos:end="139:117">codec</name><operator pos:start="139:118" pos:end="139:119">-&gt;</operator><name pos:start="139:120" pos:end="139:127">codec_id</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="141:21" pos:end="145:86"><expr pos:start="141:21" pos:end="145:85"><call pos:start="141:21" pos:end="145:85"><name pos:start="141:21" pos:end="141:26">av_log</name><argument_list pos:start="141:27" pos:end="145:85">(<argument pos:start="141:28" pos:end="141:28"><expr pos:start="141:28" pos:end="141:28"><name pos:start="141:28" pos:end="141:28">s</name></expr></argument>, <argument pos:start="141:31" pos:end="141:42"><expr pos:start="141:31" pos:end="141:42"><name pos:start="141:31" pos:end="141:42">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="143:28" pos:end="143:88"><expr pos:start="143:28" pos:end="143:88"><literal type="string" pos:start="143:28" pos:end="143:88">"Tag %s/0x%08x incompatible with output codec id '%d' (%s)\n"</literal></expr></argument>,

                           <argument pos:start="145:28" pos:end="145:33"><expr pos:start="145:28" pos:end="145:33"><name pos:start="145:28" pos:end="145:33">tagbuf</name></expr></argument>, <argument pos:start="145:36" pos:end="145:55"><expr pos:start="145:36" pos:end="145:55"><name pos:start="145:36" pos:end="145:55"><name pos:start="145:36" pos:end="145:37">st</name><operator pos:start="145:38" pos:end="145:39">-&gt;</operator><name pos:start="145:40" pos:end="145:44">codec</name><operator pos:start="145:45" pos:end="145:46">-&gt;</operator><name pos:start="145:47" pos:end="145:55">codec_tag</name></name></expr></argument>, <argument pos:start="145:58" pos:end="145:76"><expr pos:start="145:58" pos:end="145:76"><name pos:start="145:58" pos:end="145:76"><name pos:start="145:58" pos:end="145:59">st</name><operator pos:start="145:60" pos:end="145:61">-&gt;</operator><name pos:start="145:62" pos:end="145:66">codec</name><operator pos:start="145:67" pos:end="145:68">-&gt;</operator><name pos:start="145:69" pos:end="145:76">codec_id</name></name></expr></argument>, <argument pos:start="145:79" pos:end="145:84"><expr pos:start="145:79" pos:end="145:84"><name pos:start="145:79" pos:end="145:84">cortag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="147:21" pos:end="147:46"><expr pos:start="147:21" pos:end="147:45"><name pos:start="147:21" pos:end="147:23">ret</name> <operator pos:start="147:25" pos:end="147:25">=</operator> <name pos:start="147:27" pos:end="147:45">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                    <goto pos:start="149:21" pos:end="149:30">goto <name pos:start="149:26" pos:end="149:29">fail</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if><else pos:start="153:14" pos:end="155:99">else<block type="pseudo" pos:start="155:17" pos:end="155:99"><block_content pos:start="155:17" pos:end="155:99">

                <expr_stmt pos:start="155:17" pos:end="155:99"><expr pos:start="155:17" pos:end="155:98"><name pos:start="155:17" pos:end="155:36"><name pos:start="155:17" pos:end="155:18">st</name><operator pos:start="155:19" pos:end="155:20">-&gt;</operator><name pos:start="155:21" pos:end="155:25">codec</name><operator pos:start="155:26" pos:end="155:27">-&gt;</operator><name pos:start="155:28" pos:end="155:36">codec_tag</name></name><operator pos:start="155:37" pos:end="155:37">=</operator> <call pos:start="155:39" pos:end="155:98"><name pos:start="155:39" pos:end="155:54">av_codec_get_tag</name><argument_list pos:start="155:55" pos:end="155:98">(<argument pos:start="155:56" pos:end="155:76"><expr pos:start="155:56" pos:end="155:76"><name pos:start="155:56" pos:end="155:76"><name pos:start="155:56" pos:end="155:56">s</name><operator pos:start="155:57" pos:end="155:58">-&gt;</operator><name pos:start="155:59" pos:end="155:65">oformat</name><operator pos:start="155:66" pos:end="155:67">-&gt;</operator><name pos:start="155:68" pos:end="155:76">codec_tag</name></name></expr></argument>, <argument pos:start="155:79" pos:end="155:97"><expr pos:start="155:79" pos:end="155:97"><name pos:start="155:79" pos:end="155:97"><name pos:start="155:79" pos:end="155:80">st</name><operator pos:start="155:81" pos:end="155:82">-&gt;</operator><name pos:start="155:83" pos:end="155:87">codec</name><operator pos:start="155:88" pos:end="155:89">-&gt;</operator><name pos:start="155:90" pos:end="155:97">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="161:9" pos:end="165:137"><if pos:start="161:9" pos:end="165:137">if<condition pos:start="161:11" pos:end="163:59">(<expr pos:start="161:12" pos:end="163:58"><name pos:start="161:12" pos:end="161:28"><name pos:start="161:12" pos:end="161:12">s</name><operator pos:start="161:13" pos:end="161:14">-&gt;</operator><name pos:start="161:15" pos:end="161:21">oformat</name><operator pos:start="161:22" pos:end="161:23">-&gt;</operator><name pos:start="161:24" pos:end="161:28">flags</name></name> <operator pos:start="161:30" pos:end="161:30">&amp;</operator> <name pos:start="161:32" pos:end="161:49">AVFMT_GLOBALHEADER</name> <operator pos:start="161:51" pos:end="161:52">&amp;&amp;</operator>

            <operator pos:start="163:13" pos:end="163:13">!</operator><operator pos:start="163:14" pos:end="163:14">(</operator><name pos:start="163:15" pos:end="163:30"><name pos:start="163:15" pos:end="163:16">st</name><operator pos:start="163:17" pos:end="163:18">-&gt;</operator><name pos:start="163:19" pos:end="163:23">codec</name><operator pos:start="163:24" pos:end="163:25">-&gt;</operator><name pos:start="163:26" pos:end="163:30">flags</name></name> <operator pos:start="163:32" pos:end="163:32">&amp;</operator> <name pos:start="163:34" pos:end="163:57">CODEC_FLAG_GLOBAL_HEADER</name><operator pos:start="163:58" pos:end="163:58">)</operator></expr>)</condition><block type="pseudo" pos:start="165:11" pos:end="165:137"><block_content pos:start="165:11" pos:end="165:137">

          <expr_stmt pos:start="165:11" pos:end="165:137"><expr pos:start="165:11" pos:end="165:136"><call pos:start="165:11" pos:end="165:136"><name pos:start="165:11" pos:end="165:16">av_log</name><argument_list pos:start="165:17" pos:end="165:136">(<argument pos:start="165:18" pos:end="165:18"><expr pos:start="165:18" pos:end="165:18"><name pos:start="165:18" pos:end="165:18">s</name></expr></argument>, <argument pos:start="165:21" pos:end="165:34"><expr pos:start="165:21" pos:end="165:34"><name pos:start="165:21" pos:end="165:34">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="165:37" pos:end="165:132"><expr pos:start="165:37" pos:end="165:132"><literal type="string" pos:start="165:37" pos:end="165:132">"Codec for stream %d does not use global headers but container format requires global headers\n"</literal></expr></argument>, <argument pos:start="165:135" pos:end="165:135"><expr pos:start="165:135" pos:end="165:135"><name pos:start="165:135" pos:end="165:135">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="171:5" pos:end="195:5"><if pos:start="171:5" pos:end="195:5">if <condition pos:start="171:8" pos:end="171:56">(<expr pos:start="171:9" pos:end="171:55"><operator pos:start="171:9" pos:end="171:9">!</operator><name pos:start="171:10" pos:end="171:21"><name pos:start="171:10" pos:end="171:10">s</name><operator pos:start="171:11" pos:end="171:12">-&gt;</operator><name pos:start="171:13" pos:end="171:21">priv_data</name></name> <operator pos:start="171:23" pos:end="171:24">&amp;&amp;</operator> <name pos:start="171:26" pos:end="171:51"><name pos:start="171:26" pos:end="171:26">s</name><operator pos:start="171:27" pos:end="171:28">-&gt;</operator><name pos:start="171:29" pos:end="171:35">oformat</name><operator pos:start="171:36" pos:end="171:37">-&gt;</operator><name pos:start="171:38" pos:end="171:51">priv_data_size</name></name> <operator pos:start="171:53" pos:end="171:53">&gt;</operator> <literal type="number" pos:start="171:55" pos:end="171:55">0</literal></expr>)</condition> <block pos:start="171:58" pos:end="195:5">{<block_content pos:start="173:9" pos:end="193:9">

        <expr_stmt pos:start="173:9" pos:end="173:62"><expr pos:start="173:9" pos:end="173:61"><name pos:start="173:9" pos:end="173:20"><name pos:start="173:9" pos:end="173:9">s</name><operator pos:start="173:10" pos:end="173:11">-&gt;</operator><name pos:start="173:12" pos:end="173:20">priv_data</name></name> <operator pos:start="173:22" pos:end="173:22">=</operator> <call pos:start="173:24" pos:end="173:61"><name pos:start="173:24" pos:end="173:33">av_mallocz</name><argument_list pos:start="173:34" pos:end="173:61">(<argument pos:start="173:35" pos:end="173:60"><expr pos:start="173:35" pos:end="173:60"><name pos:start="173:35" pos:end="173:60"><name pos:start="173:35" pos:end="173:35">s</name><operator pos:start="173:36" pos:end="173:37">-&gt;</operator><name pos:start="173:38" pos:end="173:44">oformat</name><operator pos:start="173:45" pos:end="173:46">-&gt;</operator><name pos:start="173:47" pos:end="173:60">priv_data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="175:9" pos:end="181:9"><if pos:start="175:9" pos:end="181:9">if <condition pos:start="175:12" pos:end="175:26">(<expr pos:start="175:13" pos:end="175:25"><operator pos:start="175:13" pos:end="175:13">!</operator><name pos:start="175:14" pos:end="175:25"><name pos:start="175:14" pos:end="175:14">s</name><operator pos:start="175:15" pos:end="175:16">-&gt;</operator><name pos:start="175:17" pos:end="175:25">priv_data</name></name></expr>)</condition> <block pos:start="175:28" pos:end="181:9">{<block_content pos:start="177:13" pos:end="179:22">

            <expr_stmt pos:start="177:13" pos:end="177:34"><expr pos:start="177:13" pos:end="177:33"><name pos:start="177:13" pos:end="177:15">ret</name> <operator pos:start="177:17" pos:end="177:17">=</operator> <call pos:start="177:19" pos:end="177:33"><name pos:start="177:19" pos:end="177:25">AVERROR</name><argument_list pos:start="177:26" pos:end="177:33">(<argument pos:start="177:27" pos:end="177:32"><expr pos:start="177:27" pos:end="177:32"><name pos:start="177:27" pos:end="177:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="179:13" pos:end="179:22">goto <name pos:start="179:18" pos:end="179:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="183:9" pos:end="193:9"><if pos:start="183:9" pos:end="193:9">if <condition pos:start="183:12" pos:end="183:35">(<expr pos:start="183:13" pos:end="183:34"><name pos:start="183:13" pos:end="183:34"><name pos:start="183:13" pos:end="183:13">s</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:22">oformat</name><operator pos:start="183:23" pos:end="183:24">-&gt;</operator><name pos:start="183:25" pos:end="183:34">priv_class</name></name></expr>)</condition> <block pos:start="183:37" pos:end="193:9">{<block_content pos:start="185:13" pos:end="191:26">

            <expr_stmt pos:start="185:13" pos:end="185:67"><expr pos:start="185:13" pos:end="185:66"><operator pos:start="185:13" pos:end="185:13">*</operator><operator pos:start="185:14" pos:end="185:14">(</operator><specifier pos:start="185:15" pos:end="185:19">const</specifier> <name pos:start="185:21" pos:end="185:27">AVClass</name><operator pos:start="185:28" pos:end="185:28">*</operator><operator pos:start="185:29" pos:end="185:29">*</operator><operator pos:start="185:30" pos:end="185:30">)</operator><name pos:start="185:31" pos:end="185:42"><name pos:start="185:31" pos:end="185:31">s</name><operator pos:start="185:32" pos:end="185:33">-&gt;</operator><name pos:start="185:34" pos:end="185:42">priv_data</name></name><operator pos:start="185:43" pos:end="185:43">=</operator> <name pos:start="185:45" pos:end="185:66"><name pos:start="185:45" pos:end="185:45">s</name><operator pos:start="185:46" pos:end="185:47">-&gt;</operator><name pos:start="185:48" pos:end="185:54">oformat</name><operator pos:start="185:55" pos:end="185:56">-&gt;</operator><name pos:start="185:57" pos:end="185:66">priv_class</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:46"><expr pos:start="187:13" pos:end="187:45"><call pos:start="187:13" pos:end="187:45"><name pos:start="187:13" pos:end="187:31">av_opt_set_defaults</name><argument_list pos:start="187:32" pos:end="187:45">(<argument pos:start="187:33" pos:end="187:44"><expr pos:start="187:33" pos:end="187:44"><name pos:start="187:33" pos:end="187:44"><name pos:start="187:33" pos:end="187:33">s</name><operator pos:start="187:34" pos:end="187:35">-&gt;</operator><name pos:start="187:36" pos:end="187:44">priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="189:13" pos:end="191:26"><if pos:start="189:13" pos:end="191:26">if <condition pos:start="189:16" pos:end="189:64">(<expr pos:start="189:17" pos:end="189:63"><operator pos:start="189:17" pos:end="189:17">(</operator><name pos:start="189:18" pos:end="189:20">ret</name> <operator pos:start="189:22" pos:end="189:22">=</operator> <call pos:start="189:24" pos:end="189:58"><name pos:start="189:24" pos:end="189:38">av_opt_set_dict</name><argument_list pos:start="189:39" pos:end="189:58">(<argument pos:start="189:40" pos:end="189:51"><expr pos:start="189:40" pos:end="189:51"><name pos:start="189:40" pos:end="189:51"><name pos:start="189:40" pos:end="189:40">s</name><operator pos:start="189:41" pos:end="189:42">-&gt;</operator><name pos:start="189:43" pos:end="189:51">priv_data</name></name></expr></argument>, <argument pos:start="189:54" pos:end="189:57"><expr pos:start="189:54" pos:end="189:57"><operator pos:start="189:54" pos:end="189:54">&amp;</operator><name pos:start="189:55" pos:end="189:57">tmp</name></expr></argument>)</argument_list></call><operator pos:start="189:59" pos:end="189:59">)</operator> <operator pos:start="189:61" pos:end="189:61">&lt;</operator> <literal type="number" pos:start="189:63" pos:end="189:63">0</literal></expr>)</condition><block type="pseudo" pos:start="191:17" pos:end="191:26"><block_content pos:start="191:17" pos:end="191:26">

                <goto pos:start="191:17" pos:end="191:26">goto <name pos:start="191:22" pos:end="191:25">fail</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="199:5" pos:end="199:41">/* set muxer identification string */</comment>

    <if_stmt pos:start="201:5" pos:end="205:5"><if pos:start="201:5" pos:end="205:5">if <condition pos:start="201:8" pos:end="201:78">(<expr pos:start="201:9" pos:end="201:77"><name pos:start="201:9" pos:end="201:21"><name pos:start="201:9" pos:end="201:9">s</name><operator pos:start="201:10" pos:end="201:11">-&gt;</operator><name pos:start="201:12" pos:end="201:21">nb_streams</name></name> <operator pos:start="201:23" pos:end="201:24">&amp;&amp;</operator> <operator pos:start="201:26" pos:end="201:26">!</operator><operator pos:start="201:27" pos:end="201:27">(</operator><name pos:start="201:28" pos:end="201:40"><name pos:start="201:28" pos:end="201:28">s</name><operator pos:start="201:29" pos:end="201:30">-&gt;</operator><name pos:start="201:31" pos:end="201:37">streams</name><index pos:start="201:38" pos:end="201:40">[<expr pos:start="201:39" pos:end="201:39"><literal type="number" pos:start="201:39" pos:end="201:39">0</literal></expr>]</index></name><operator pos:start="201:41" pos:end="201:42">-&gt;</operator><name pos:start="201:43" pos:end="201:54"><name pos:start="201:43" pos:end="201:47">codec</name><operator pos:start="201:48" pos:end="201:49">-&gt;</operator><name pos:start="201:50" pos:end="201:54">flags</name></name> <operator pos:start="201:56" pos:end="201:56">&amp;</operator> <name pos:start="201:58" pos:end="201:76">CODEC_FLAG_BITEXACT</name><operator pos:start="201:77" pos:end="201:77">)</operator></expr>)</condition> <block pos:start="201:80" pos:end="205:5">{<block_content pos:start="203:9" pos:end="203:67">

        <expr_stmt pos:start="203:9" pos:end="203:67"><expr pos:start="203:9" pos:end="203:66"><call pos:start="203:9" pos:end="203:66"><name pos:start="203:9" pos:end="203:19">av_dict_set</name><argument_list pos:start="203:20" pos:end="203:66">(<argument pos:start="203:21" pos:end="203:32"><expr pos:start="203:21" pos:end="203:32"><operator pos:start="203:21" pos:end="203:21">&amp;</operator><name pos:start="203:22" pos:end="203:32"><name pos:start="203:22" pos:end="203:22">s</name><operator pos:start="203:23" pos:end="203:24">-&gt;</operator><name pos:start="203:25" pos:end="203:32">metadata</name></name></expr></argument>, <argument pos:start="203:35" pos:end="203:43"><expr pos:start="203:35" pos:end="203:43"><literal type="string" pos:start="203:35" pos:end="203:43">"encoder"</literal></expr></argument>, <argument pos:start="203:46" pos:end="203:62"><expr pos:start="203:46" pos:end="203:62"><name pos:start="203:46" pos:end="203:62">LIBAVFORMAT_IDENT</name></expr></argument>, <argument pos:start="203:65" pos:end="203:65"><expr pos:start="203:65" pos:end="203:65"><literal type="number" pos:start="203:65" pos:end="203:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="209:5" pos:end="217:5"><if pos:start="209:5" pos:end="217:5">if<condition pos:start="209:7" pos:end="209:32">(<expr pos:start="209:8" pos:end="209:31"><name pos:start="209:8" pos:end="209:31"><name pos:start="209:8" pos:end="209:8">s</name><operator pos:start="209:9" pos:end="209:10">-&gt;</operator><name pos:start="209:11" pos:end="209:17">oformat</name><operator pos:start="209:18" pos:end="209:19">-&gt;</operator><name pos:start="209:20" pos:end="209:31">write_header</name></name></expr>)</condition><block pos:start="209:33" pos:end="217:5">{<block_content pos:start="211:9" pos:end="215:22">

        <expr_stmt pos:start="211:9" pos:end="211:42"><expr pos:start="211:9" pos:end="211:41"><name pos:start="211:9" pos:end="211:11">ret</name> <operator pos:start="211:13" pos:end="211:13">=</operator> <call pos:start="211:15" pos:end="211:41"><name pos:start="211:15" pos:end="211:38"><name pos:start="211:15" pos:end="211:15">s</name><operator pos:start="211:16" pos:end="211:17">-&gt;</operator><name pos:start="211:18" pos:end="211:24">oformat</name><operator pos:start="211:25" pos:end="211:26">-&gt;</operator><name pos:start="211:27" pos:end="211:38">write_header</name></name><argument_list pos:start="211:39" pos:end="211:41">(<argument pos:start="211:40" pos:end="211:40"><expr pos:start="211:40" pos:end="211:40"><name pos:start="211:40" pos:end="211:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="213:9" pos:end="215:22"><if pos:start="213:9" pos:end="215:22">if <condition pos:start="213:12" pos:end="213:20">(<expr pos:start="213:13" pos:end="213:19"><name pos:start="213:13" pos:end="213:15">ret</name> <operator pos:start="213:17" pos:end="213:17">&lt;</operator> <literal type="number" pos:start="213:19" pos:end="213:19">0</literal></expr>)</condition><block type="pseudo" pos:start="215:13" pos:end="215:22"><block_content pos:start="215:13" pos:end="215:22">

            <goto pos:start="215:13" pos:end="215:22">goto <name pos:start="215:18" pos:end="215:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="221:5" pos:end="221:29">/* init PTS generation */</comment>

    <for pos:start="223:5" pos:end="265:5">for<control pos:start="223:8" pos:end="223:32">(<init pos:start="223:9" pos:end="223:12"><expr pos:start="223:9" pos:end="223:11"><name pos:start="223:9" pos:end="223:9">i</name><operator pos:start="223:10" pos:end="223:10">=</operator><literal type="number" pos:start="223:11" pos:end="223:11">0</literal></expr>;</init><condition pos:start="223:13" pos:end="223:28"><expr pos:start="223:13" pos:end="223:27"><name pos:start="223:13" pos:end="223:13">i</name><operator pos:start="223:14" pos:end="223:14">&lt;</operator><name pos:start="223:15" pos:end="223:27"><name pos:start="223:15" pos:end="223:15">s</name><operator pos:start="223:16" pos:end="223:17">-&gt;</operator><name pos:start="223:18" pos:end="223:27">nb_streams</name></name></expr>;</condition><incr pos:start="223:29" pos:end="223:31"><expr pos:start="223:29" pos:end="223:31"><name pos:start="223:29" pos:end="223:29">i</name><operator pos:start="223:30" pos:end="223:31">++</operator></expr></incr>)</control> <block pos:start="223:34" pos:end="265:5">{<block_content pos:start="225:9" pos:end="263:9">

        <decl_stmt pos:start="225:9" pos:end="225:37"><decl pos:start="225:9" pos:end="225:36"><type pos:start="225:9" pos:end="225:15"><name pos:start="225:9" pos:end="225:15">int64_t</name></type> <name pos:start="225:17" pos:end="225:19">den</name> <init pos:start="225:21" pos:end="225:36">= <expr pos:start="225:23" pos:end="225:36"><name pos:start="225:23" pos:end="225:36">AV_NOPTS_VALUE</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:27"><expr pos:start="227:9" pos:end="227:26"><name pos:start="227:9" pos:end="227:10">st</name> <operator pos:start="227:12" pos:end="227:12">=</operator> <name pos:start="227:14" pos:end="227:26"><name pos:start="227:14" pos:end="227:14">s</name><operator pos:start="227:15" pos:end="227:16">-&gt;</operator><name pos:start="227:17" pos:end="227:23">streams</name><index pos:start="227:24" pos:end="227:26">[<expr pos:start="227:25" pos:end="227:25"><name pos:start="227:25" pos:end="227:25">i</name></expr>]</index></name></expr>;</expr_stmt>



        <switch pos:start="231:9" pos:end="249:9">switch <condition pos:start="231:16" pos:end="231:38">(<expr pos:start="231:17" pos:end="231:37"><name pos:start="231:17" pos:end="231:37"><name pos:start="231:17" pos:end="231:18">st</name><operator pos:start="231:19" pos:end="231:20">-&gt;</operator><name pos:start="231:21" pos:end="231:25">codec</name><operator pos:start="231:26" pos:end="231:27">-&gt;</operator><name pos:start="231:28" pos:end="231:37">codec_type</name></name></expr>)</condition> <block pos:start="231:40" pos:end="249:9">{<block_content pos:start="233:9" pos:end="247:18">

        <case pos:start="233:9" pos:end="233:32">case <expr pos:start="233:14" pos:end="233:31"><name pos:start="233:14" pos:end="233:31">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

            <expr_stmt pos:start="235:13" pos:end="235:70"><expr pos:start="235:13" pos:end="235:69"><name pos:start="235:13" pos:end="235:15">den</name> <operator pos:start="235:17" pos:end="235:17">=</operator> <operator pos:start="235:19" pos:end="235:19">(</operator><name pos:start="235:20" pos:end="235:26">int64_t</name><operator pos:start="235:27" pos:end="235:27">)</operator><name pos:start="235:28" pos:end="235:44"><name pos:start="235:28" pos:end="235:29">st</name><operator pos:start="235:30" pos:end="235:31">-&gt;</operator><name pos:start="235:32" pos:end="235:40">time_base</name><operator pos:start="235:41" pos:end="235:41">.</operator><name pos:start="235:42" pos:end="235:44">num</name></name> <operator pos:start="235:46" pos:end="235:46">*</operator> <name pos:start="235:48" pos:end="235:69"><name pos:start="235:48" pos:end="235:49">st</name><operator pos:start="235:50" pos:end="235:51">-&gt;</operator><name pos:start="235:52" pos:end="235:56">codec</name><operator pos:start="235:57" pos:end="235:58">-&gt;</operator><name pos:start="235:59" pos:end="235:69">sample_rate</name></name></expr>;</expr_stmt>

            <break pos:start="237:13" pos:end="237:18">break;</break>

        <case pos:start="239:9" pos:end="239:32">case <expr pos:start="239:14" pos:end="239:31"><name pos:start="239:14" pos:end="239:31">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

            <expr_stmt pos:start="241:13" pos:end="241:72"><expr pos:start="241:13" pos:end="241:71"><name pos:start="241:13" pos:end="241:15">den</name> <operator pos:start="241:17" pos:end="241:17">=</operator> <operator pos:start="241:19" pos:end="241:19">(</operator><name pos:start="241:20" pos:end="241:26">int64_t</name><operator pos:start="241:27" pos:end="241:27">)</operator><name pos:start="241:28" pos:end="241:44"><name pos:start="241:28" pos:end="241:29">st</name><operator pos:start="241:30" pos:end="241:31">-&gt;</operator><name pos:start="241:32" pos:end="241:40">time_base</name><operator pos:start="241:41" pos:end="241:41">.</operator><name pos:start="241:42" pos:end="241:44">num</name></name> <operator pos:start="241:46" pos:end="241:46">*</operator> <name pos:start="241:48" pos:end="241:71"><name pos:start="241:48" pos:end="241:49">st</name><operator pos:start="241:50" pos:end="241:51">-&gt;</operator><name pos:start="241:52" pos:end="241:56">codec</name><operator pos:start="241:57" pos:end="241:58">-&gt;</operator><name pos:start="241:59" pos:end="241:67">time_base</name><operator pos:start="241:68" pos:end="241:68">.</operator><name pos:start="241:69" pos:end="241:71">den</name></name></expr>;</expr_stmt>

            <break pos:start="243:13" pos:end="243:18">break;</break>

        <default pos:start="245:9" pos:end="245:16">default:</default>

            <break pos:start="247:13" pos:end="247:18">break;</break>

        </block_content>}</block></switch>

        <if_stmt pos:start="251:9" pos:end="263:9"><if pos:start="251:9" pos:end="263:9">if <condition pos:start="251:12" pos:end="251:34">(<expr pos:start="251:13" pos:end="251:33"><name pos:start="251:13" pos:end="251:15">den</name> <operator pos:start="251:17" pos:end="251:18">!=</operator> <name pos:start="251:20" pos:end="251:33">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="251:36" pos:end="263:9">{<block_content pos:start="253:13" pos:end="261:43">

            <if_stmt pos:start="253:13" pos:end="259:13"><if pos:start="253:13" pos:end="259:13">if <condition pos:start="253:16" pos:end="253:25">(<expr pos:start="253:17" pos:end="253:24"><name pos:start="253:17" pos:end="253:19">den</name> <operator pos:start="253:21" pos:end="253:22">&lt;=</operator> <literal type="number" pos:start="253:24" pos:end="253:24">0</literal></expr>)</condition> <block pos:start="253:27" pos:end="259:13">{<block_content pos:start="255:17" pos:end="257:26">

                <expr_stmt pos:start="255:17" pos:end="255:42"><expr pos:start="255:17" pos:end="255:41"><name pos:start="255:17" pos:end="255:19">ret</name> <operator pos:start="255:21" pos:end="255:21">=</operator> <name pos:start="255:23" pos:end="255:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="257:17" pos:end="257:26">goto <name pos:start="257:22" pos:end="257:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="261:13" pos:end="261:43"><expr pos:start="261:13" pos:end="261:42"><call pos:start="261:13" pos:end="261:42"><name pos:start="261:13" pos:end="261:21">frac_init</name><argument_list pos:start="261:22" pos:end="261:42">(<argument pos:start="261:23" pos:end="261:30"><expr pos:start="261:23" pos:end="261:30"><operator pos:start="261:23" pos:end="261:23">&amp;</operator><name pos:start="261:24" pos:end="261:30"><name pos:start="261:24" pos:end="261:25">st</name><operator pos:start="261:26" pos:end="261:27">-&gt;</operator><name pos:start="261:28" pos:end="261:30">pts</name></name></expr></argument>, <argument pos:start="261:33" pos:end="261:33"><expr pos:start="261:33" pos:end="261:33"><literal type="number" pos:start="261:33" pos:end="261:33">0</literal></expr></argument>, <argument pos:start="261:36" pos:end="261:36"><expr pos:start="261:36" pos:end="261:36"><literal type="number" pos:start="261:36" pos:end="261:36">0</literal></expr></argument>, <argument pos:start="261:39" pos:end="261:41"><expr pos:start="261:39" pos:end="261:41"><name pos:start="261:39" pos:end="261:41">den</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="269:5" pos:end="275:5"><if pos:start="269:5" pos:end="275:5">if <condition pos:start="269:8" pos:end="269:16">(<expr pos:start="269:9" pos:end="269:15"><name pos:start="269:9" pos:end="269:15">options</name></expr>)</condition> <block pos:start="269:18" pos:end="275:5">{<block_content pos:start="271:9" pos:end="273:23">

        <expr_stmt pos:start="271:9" pos:end="271:30"><expr pos:start="271:9" pos:end="271:29"><call pos:start="271:9" pos:end="271:29"><name pos:start="271:9" pos:end="271:20">av_dict_free</name><argument_list pos:start="271:21" pos:end="271:29">(<argument pos:start="271:22" pos:end="271:28"><expr pos:start="271:22" pos:end="271:28"><name pos:start="271:22" pos:end="271:28">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:23"><expr pos:start="273:9" pos:end="273:22"><operator pos:start="273:9" pos:end="273:9">*</operator><name pos:start="273:10" pos:end="273:16">options</name> <operator pos:start="273:18" pos:end="273:18">=</operator> <name pos:start="273:20" pos:end="273:22">tmp</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="277:5" pos:end="277:13">return <expr pos:start="277:12" pos:end="277:12"><literal type="number" pos:start="277:12" pos:end="277:12">0</literal></expr>;</return>

<label pos:start="279:1" pos:end="279:5"><name pos:start="279:1" pos:end="279:4">fail</name>:</label>

    <expr_stmt pos:start="281:5" pos:end="281:23"><expr pos:start="281:5" pos:end="281:22"><call pos:start="281:5" pos:end="281:22"><name pos:start="281:5" pos:end="281:16">av_dict_free</name><argument_list pos:start="281:17" pos:end="281:22">(<argument pos:start="281:18" pos:end="281:21"><expr pos:start="281:18" pos:end="281:21"><operator pos:start="281:18" pos:end="281:18">&amp;</operator><name pos:start="281:19" pos:end="281:21">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="283:5" pos:end="283:15">return <expr pos:start="283:12" pos:end="283:14"><name pos:start="283:12" pos:end="283:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
