<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22528.c" pos:tabs="8"><function pos:start="1:1" pos:end="58:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">ebml_free</name><parameter_list pos:start="1:22" pos:end="1:53">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:32">EbmlSyntax</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">syntax</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:52"><decl pos:start="1:43" pos:end="1:52"><type pos:start="1:43" pos:end="1:52"><name pos:start="1:43" pos:end="1:46">void</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="58:1">{<block_content pos:start="5:5" pos:end="56:5">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>;</decl_stmt>

    <for pos:start="7:5" pos:end="56:5">for <control pos:start="7:9" pos:end="7:34">(<init pos:start="7:10" pos:end="7:15"><expr pos:start="7:10" pos:end="7:14"><name pos:start="7:10" pos:end="7:10">i</name> <operator pos:start="7:12" pos:end="7:12">=</operator> <literal type="number" pos:start="7:14" pos:end="7:14">0</literal></expr>;</init> <condition pos:start="7:17" pos:end="7:29"><expr pos:start="7:17" pos:end="7:28"><name pos:start="7:17" pos:end="7:25"><name pos:start="7:17" pos:end="7:22">syntax</name><index pos:start="7:23" pos:end="7:25">[<expr pos:start="7:24" pos:end="7:24"><name pos:start="7:24" pos:end="7:24">i</name></expr>]</index></name><operator pos:start="7:26" pos:end="7:26">.</operator><name pos:start="7:27" pos:end="7:28">id</name></expr>;</condition> <incr pos:start="7:31" pos:end="7:33"><expr pos:start="7:31" pos:end="7:33"><name pos:start="7:31" pos:end="7:31">i</name><operator pos:start="7:32" pos:end="7:33">++</operator></expr></incr>)</control> <block pos:start="7:36" pos:end="56:5">{<block_content pos:start="9:9" pos:end="54:9">

        <decl_stmt pos:start="9:9" pos:end="9:63"><decl pos:start="9:9" pos:end="9:62"><type pos:start="9:9" pos:end="9:14"><name pos:start="9:9" pos:end="9:12">void</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:22">data_off</name> <init pos:start="9:24" pos:end="9:62">= <expr pos:start="9:26" pos:end="9:62"><operator pos:start="9:26" pos:end="9:26">(</operator><name pos:start="9:27" pos:end="9:30">char</name> <operator pos:start="9:32" pos:end="9:32">*</operator><operator pos:start="9:33" pos:end="9:33">)</operator> <name pos:start="9:35" pos:end="9:38">data</name> <operator pos:start="9:40" pos:end="9:40">+</operator> <name pos:start="9:42" pos:end="9:50"><name pos:start="9:42" pos:end="9:47">syntax</name><index pos:start="9:48" pos:end="9:50">[<expr pos:start="9:49" pos:end="9:49"><name pos:start="9:49" pos:end="9:49">i</name></expr>]</index></name><operator pos:start="9:51" pos:end="9:51">.</operator><name pos:start="9:52" pos:end="9:62">data_offset</name></expr></init></decl>;</decl_stmt>

        <switch pos:start="11:9" pos:end="54:9">switch <condition pos:start="11:16" pos:end="11:31">(<expr pos:start="11:17" pos:end="11:30"><name pos:start="11:17" pos:end="11:25"><name pos:start="11:17" pos:end="11:22">syntax</name><index pos:start="11:23" pos:end="11:25">[<expr pos:start="11:24" pos:end="11:24"><name pos:start="11:24" pos:end="11:24">i</name></expr>]</index></name><operator pos:start="11:26" pos:end="11:26">.</operator><name pos:start="11:27" pos:end="11:30">type</name></expr>)</condition> <block pos:start="11:33" pos:end="54:9">{<block_content pos:start="13:9" pos:end="52:18">

        <case pos:start="13:9" pos:end="13:22">case <expr pos:start="13:14" pos:end="13:21"><name pos:start="13:14" pos:end="13:21">EBML_STR</name></expr>:</case>

        <case pos:start="15:9" pos:end="15:23">case <expr pos:start="15:14" pos:end="15:22"><name pos:start="15:14" pos:end="15:22">EBML_UTF8</name></expr>:</case>

            <expr_stmt pos:start="17:13" pos:end="17:31"><expr pos:start="17:13" pos:end="17:30"><call pos:start="17:13" pos:end="17:30"><name pos:start="17:13" pos:end="17:20">av_freep</name><argument_list pos:start="17:21" pos:end="17:30">(<argument pos:start="17:22" pos:end="17:29"><expr pos:start="17:22" pos:end="17:29"><name pos:start="17:22" pos:end="17:29">data_off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="19:13" pos:end="19:18">break;</break>

        <case pos:start="21:9" pos:end="21:22">case <expr pos:start="21:14" pos:end="21:21"><name pos:start="21:14" pos:end="21:21">EBML_BIN</name></expr>:</case>

            <expr_stmt pos:start="23:13" pos:end="23:52"><expr pos:start="23:13" pos:end="23:51"><call pos:start="23:13" pos:end="23:51"><name pos:start="23:13" pos:end="23:20">av_freep</name><argument_list pos:start="23:21" pos:end="23:51">(<argument pos:start="23:22" pos:end="23:50"><expr pos:start="23:22" pos:end="23:50"><operator pos:start="23:22" pos:end="23:22">&amp;</operator><operator pos:start="23:23" pos:end="23:23">(</operator><operator pos:start="23:24" pos:end="23:24">(</operator><name pos:start="23:25" pos:end="23:31">EbmlBin</name> <operator pos:start="23:33" pos:end="23:33">*</operator><operator pos:start="23:34" pos:end="23:34">)</operator> <name pos:start="23:36" pos:end="23:43">data_off</name><operator pos:start="23:44" pos:end="23:44">)</operator><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:50">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="25:13" pos:end="25:18">break;</break>

        <case pos:start="27:9" pos:end="27:25">case <expr pos:start="27:14" pos:end="27:24"><name pos:start="27:14" pos:end="27:24">EBML_LEVEL1</name></expr>:</case>

        <case pos:start="29:9" pos:end="29:23">case <expr pos:start="29:14" pos:end="29:22"><name pos:start="29:14" pos:end="29:22">EBML_NEST</name></expr>:</case>

            <if_stmt pos:start="31:13" pos:end="48:53"><if pos:start="31:13" pos:end="46:13">if <condition pos:start="31:16" pos:end="31:41">(<expr pos:start="31:17" pos:end="31:40"><name pos:start="31:17" pos:end="31:25"><name pos:start="31:17" pos:end="31:22">syntax</name><index pos:start="31:23" pos:end="31:25">[<expr pos:start="31:24" pos:end="31:24"><name pos:start="31:24" pos:end="31:24">i</name></expr>]</index></name><operator pos:start="31:26" pos:end="31:26">.</operator><name pos:start="31:27" pos:end="31:40">list_elem_size</name></expr>)</condition> <block pos:start="31:43" pos:end="46:13">{<block_content pos:start="33:17" pos:end="43:38">

                <decl_stmt pos:start="33:17" pos:end="33:42"><decl pos:start="33:17" pos:end="33:41"><type pos:start="33:17" pos:end="33:26"><name pos:start="33:17" pos:end="33:24">EbmlList</name> <modifier pos:start="33:26" pos:end="33:26">*</modifier></type><name pos:start="33:27" pos:end="33:30">list</name> <init pos:start="33:32" pos:end="33:41">= <expr pos:start="33:34" pos:end="33:41"><name pos:start="33:34" pos:end="33:41">data_off</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="35:17" pos:end="35:39"><decl pos:start="35:17" pos:end="35:38"><type pos:start="35:17" pos:end="35:22"><name pos:start="35:17" pos:end="35:20">char</name> <modifier pos:start="35:22" pos:end="35:22">*</modifier></type><name pos:start="35:23" pos:end="35:25">ptr</name> <init pos:start="35:27" pos:end="35:38">= <expr pos:start="35:29" pos:end="35:38"><name pos:start="35:29" pos:end="35:38"><name pos:start="35:29" pos:end="35:32">list</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:38">elem</name></name></expr></init></decl>;</decl_stmt>

                <for pos:start="37:17" pos:end="41:52">for <control pos:start="37:21" pos:end="39:58">(<init pos:start="37:22" pos:end="37:27"><expr pos:start="37:22" pos:end="37:26"><name pos:start="37:22" pos:end="37:22">j</name> <operator pos:start="37:24" pos:end="37:24">=</operator> <literal type="number" pos:start="37:26" pos:end="37:26">0</literal></expr>;</init> <condition pos:start="37:29" pos:end="37:46"><expr pos:start="37:29" pos:end="37:45"><name pos:start="37:29" pos:end="37:29">j</name> <operator pos:start="37:31" pos:end="37:31">&lt;</operator> <name pos:start="37:33" pos:end="37:45"><name pos:start="37:33" pos:end="37:36">list</name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:45">nb_elem</name></name></expr>;</condition>

                     <incr pos:start="39:22" pos:end="39:57"><expr pos:start="39:22" pos:end="39:24"><name pos:start="39:22" pos:end="39:22">j</name><operator pos:start="39:23" pos:end="39:24">++</operator></expr><operator pos:start="39:25" pos:end="39:25">,</operator> <expr pos:start="39:27" pos:end="39:57"><name pos:start="39:27" pos:end="39:29">ptr</name> <operator pos:start="39:31" pos:end="39:32">+=</operator> <name pos:start="39:34" pos:end="39:42"><name pos:start="39:34" pos:end="39:39">syntax</name><index pos:start="39:40" pos:end="39:42">[<expr pos:start="39:41" pos:end="39:41"><name pos:start="39:41" pos:end="39:41">i</name></expr>]</index></name><operator pos:start="39:43" pos:end="39:43">.</operator><name pos:start="39:44" pos:end="39:57">list_elem_size</name></expr></incr>)</control><block type="pseudo" pos:start="41:21" pos:end="41:52"><block_content pos:start="41:21" pos:end="41:52">

                    <expr_stmt pos:start="41:21" pos:end="41:52"><expr pos:start="41:21" pos:end="41:51"><call pos:start="41:21" pos:end="41:51"><name pos:start="41:21" pos:end="41:29">ebml_free</name><argument_list pos:start="41:30" pos:end="41:51">(<argument pos:start="41:31" pos:end="41:45"><expr pos:start="41:31" pos:end="41:45"><name pos:start="41:31" pos:end="41:39"><name pos:start="41:31" pos:end="41:36">syntax</name><index pos:start="41:37" pos:end="41:39">[<expr pos:start="41:38" pos:end="41:38"><name pos:start="41:38" pos:end="41:38">i</name></expr>]</index></name><operator pos:start="41:40" pos:end="41:40">.</operator><name pos:start="41:41" pos:end="41:45"><name pos:start="41:41" pos:end="41:43">def</name><operator pos:start="41:44" pos:end="41:44">.</operator><name pos:start="41:45" pos:end="41:45">n</name></name></expr></argument>, <argument pos:start="41:48" pos:end="41:50"><expr pos:start="41:48" pos:end="41:50"><name pos:start="41:48" pos:end="41:50">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="43:17" pos:end="43:38"><expr pos:start="43:17" pos:end="43:37"><call pos:start="43:17" pos:end="43:37"><name pos:start="43:17" pos:end="43:24">av_freep</name><argument_list pos:start="43:25" pos:end="43:37">(<argument pos:start="43:26" pos:end="43:36"><expr pos:start="43:26" pos:end="43:36"><operator pos:start="43:26" pos:end="43:26">&amp;</operator><name pos:start="43:27" pos:end="43:36"><name pos:start="43:27" pos:end="43:30">list</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:36">elem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


            </block_content>}</block></if> <else pos:start="46:15" pos:end="48:53">else<block type="pseudo" pos:start="48:17" pos:end="48:53"><block_content pos:start="48:17" pos:end="48:53">

                <expr_stmt pos:start="48:17" pos:end="48:53"><expr pos:start="48:17" pos:end="48:52"><call pos:start="48:17" pos:end="48:52"><name pos:start="48:17" pos:end="48:25">ebml_free</name><argument_list pos:start="48:26" pos:end="48:52">(<argument pos:start="48:27" pos:end="48:41"><expr pos:start="48:27" pos:end="48:41"><name pos:start="48:27" pos:end="48:35"><name pos:start="48:27" pos:end="48:32">syntax</name><index pos:start="48:33" pos:end="48:35">[<expr pos:start="48:34" pos:end="48:34"><name pos:start="48:34" pos:end="48:34">i</name></expr>]</index></name><operator pos:start="48:36" pos:end="48:36">.</operator><name pos:start="48:37" pos:end="48:41"><name pos:start="48:37" pos:end="48:39">def</name><operator pos:start="48:40" pos:end="48:40">.</operator><name pos:start="48:41" pos:end="48:41">n</name></name></expr></argument>, <argument pos:start="48:44" pos:end="48:51"><expr pos:start="48:44" pos:end="48:51"><name pos:start="48:44" pos:end="48:51">data_off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <default pos:start="50:9" pos:end="50:16">default:</default>

            <break pos:start="52:13" pos:end="52:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>

</block_content>}</block></function></unit>
